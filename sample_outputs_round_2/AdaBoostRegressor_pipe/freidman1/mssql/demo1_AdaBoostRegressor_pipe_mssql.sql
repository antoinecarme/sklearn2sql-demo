-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.484127872912 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.508496417589 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.512221201775 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.526464401911 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.498604293471 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.529635408642 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.438927803962 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.469075313418 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.450502133853 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.491179661251 ELSE [ADS].[Feature_9] END AS impute_11 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 0.484127872912 AS impute_2, [ADS_imp_1_OUT].impute_3 - 0.508496417589 AS impute_3, [ADS_imp_1_OUT].impute_4 - 0.512221201775 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.526464401911 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.498604293471 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.529635408642 AS impute_7, [ADS_imp_1_OUT].impute_8 - 0.438927803962 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.469075313418 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.450502133853 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.491179661251 AS impute_11 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.0462916812107 + [CenteredDataForPCA].impute_3 * 0.172635848358 + [CenteredDataForPCA].impute_4 * -0.190590260625 + [CenteredDataForPCA].impute_5 * 0.451395329654 + [CenteredDataForPCA].impute_6 * 0.326664340078 + [CenteredDataForPCA].impute_7 * -0.443650270375 + [CenteredDataForPCA].impute_8 * 0.336381293647 + [CenteredDataForPCA].impute_9 * -0.218773436523 + [CenteredDataForPCA].impute_10 * -0.436416471861 + [CenteredDataForPCA].impute_11 * 0.27011640342 AS anoova_2, [CenteredDataForPCA].impute_2 * -0.332690213454 + [CenteredDataForPCA].impute_3 * 0.690660140165 + [CenteredDataForPCA].impute_4 * -0.107064200305 + [CenteredDataForPCA].impute_5 * -0.183633894034 + [CenteredDataForPCA].impute_6 * -0.37413107449 + [CenteredDataForPCA].impute_7 * -0.431348350985 + [CenteredDataForPCA].impute_8 * -0.0583558413184 + [CenteredDataForPCA].impute_9 * -0.0321764483479 + [CenteredDataForPCA].impute_10 * 0.170616144196 + [CenteredDataForPCA].impute_11 * -0.0868077481189 AS anoova_3, [CenteredDataForPCA].impute_2 * 0.631739383886 + [CenteredDataForPCA].impute_3 * 0.0267568241151 + [CenteredDataForPCA].impute_4 * -0.312630649065 + [CenteredDataForPCA].impute_5 * -0.410306359229 + [CenteredDataForPCA].impute_6 * -0.055676031446 + [CenteredDataForPCA].impute_7 * -0.234380912755 + [CenteredDataForPCA].impute_8 * 0.217875879012 + [CenteredDataForPCA].impute_9 * 0.465037734671 + [CenteredDataForPCA].impute_10 * -0.0104176654597 + [CenteredDataForPCA].impute_11 * 0.110577747461 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.101738690617 + [CenteredDataForPCA].impute_3 * -0.234121896992 + [CenteredDataForPCA].impute_4 * -0.321398336949 + [CenteredDataForPCA].impute_5 * -0.0405373992242 + [CenteredDataForPCA].impute_6 * -0.0964142568757 + [CenteredDataForPCA].impute_7 * 0.0396395230491 + [CenteredDataForPCA].impute_8 * 0.545121554139 + [CenteredDataForPCA].impute_9 * -0.373919833346 + [CenteredDataForPCA].impute_10 * 0.594624097478 + [CenteredDataForPCA].impute_11 * 0.168753180344 AS anoova_5, [CenteredDataForPCA].impute_2 * 0.0406358890826 + [CenteredDataForPCA].impute_3 * -0.0904873057286 + [CenteredDataForPCA].impute_4 * -0.208186085708 + [CenteredDataForPCA].impute_5 * 0.060549378513 + [CenteredDataForPCA].impute_6 * -0.429276768963 + [CenteredDataForPCA].impute_7 * 0.0968319309995 + [CenteredDataForPCA].impute_8 * -0.423786339393 + [CenteredDataForPCA].impute_9 * -0.118401196088 + [CenteredDataForPCA].impute_10 * -0.10842499362 + [CenteredDataForPCA].impute_11 * 0.737650626879 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.141260566013 + [CenteredDataForPCA].impute_3 * 0.444774188448 + [CenteredDataForPCA].impute_4 * 0.120518779563 + [CenteredDataForPCA].impute_5 * -0.225007484445 + [CenteredDataForPCA].impute_6 * 0.0588218490762 + [CenteredDataForPCA].impute_7 * 0.616031767795 + [CenteredDataForPCA].impute_8 * 0.425106230515 + [CenteredDataForPCA].impute_9 * 0.0924201227044 + [CenteredDataForPCA].impute_10 * -0.245026601908 + [CenteredDataForPCA].impute_11 * 0.291235744183 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.53493935979 + [CenteredDataForPCA].impute_3 * 0.235774568203 + [CenteredDataForPCA].impute_4 * 0.608585477307 + [CenteredDataForPCA].impute_5 * 0.325641596675 + [CenteredDataForPCA].impute_6 * -0.259179907364 + [CenteredDataForPCA].impute_7 * -0.0166348434361 + [CenteredDataForPCA].impute_8 * 0.121623588572 + [CenteredDataForPCA].impute_9 * -0.153298124735 + [CenteredDataForPCA].impute_10 * 0.264011634133 + [CenteredDataForPCA].impute_11 * 0.0799112255086 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.0361173387636 + [CenteredDataForPCA].impute_3 * 0.0870730080285 + [CenteredDataForPCA].impute_4 * -0.424292708282 + [CenteredDataForPCA].impute_5 * 0.600474255665 + [CenteredDataForPCA].impute_6 * -0.377892556879 + [CenteredDataForPCA].impute_7 * 0.30361151337 + [CenteredDataForPCA].impute_8 * 0.100156316141 + [CenteredDataForPCA].impute_9 * 0.325479163343 + [CenteredDataForPCA].impute_10 * -0.0273785495318 + [CenteredDataForPCA].impute_11 * -0.314356328222 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.108420279426 + [CenteredDataForPCA].impute_3 * -0.358073903931 + [CenteredDataForPCA].impute_4 * 0.213394642918 + [CenteredDataForPCA].impute_5 * -0.183976764406 + [CenteredDataForPCA].impute_6 * -0.585836727383 + [CenteredDataForPCA].impute_7 * -0.153436177477 + [CenteredDataForPCA].impute_8 * 0.348985467065 + [CenteredDataForPCA].impute_9 * -0.131039035587 + [CenteredDataForPCA].impute_10 * -0.493734705181 + [CenteredDataForPCA].impute_11 * -0.176522018415 AS anoova_10, [CenteredDataForPCA].impute_2 * -0.39611050353 + [CenteredDataForPCA].impute_3 * -0.200639320022 + [CenteredDataForPCA].impute_4 * 0.312047615299 + [CenteredDataForPCA].impute_5 * 0.194351315487 + [CenteredDataForPCA].impute_6 * -0.000764355942763 + [CenteredDataForPCA].impute_7 * -0.236085667139 + [CenteredDataForPCA].impute_8 * 0.178578284696 + [CenteredDataForPCA].impute_9 * 0.652578095882 + [CenteredDataForPCA].impute_10 * 0.201803734991 + [CenteredDataForPCA].impute_11 * 0.33687391602 AS anoova_11 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.16241660714149475) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.5584689378738403) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.11328732222318649) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.26670041680336) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.4048268795013428) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.20772305130958557) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, 0.16241660714149475 AS threshold, 100 AS count, 0 AS depth, 14.019022910807335 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.5584689378738403 AS threshold, 76 AS count, 1 AS depth, 12.682151154676118 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 2.158494581078296 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_2' AS feature, 0.11328732222318649 AS threshold, 74 AS count, 2 AS depth, 12.966574305313905 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 11.972744286751562 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 15.315627076461247 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_5' AS feature, -0.26670041680336 AS threshold, 24 AS count, 1 AS depth, 18.252450138556163 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_5' AS feature, -0.4048268795013428 AS threshold, 5 AS count, 2 AS depth, 22.44595291027118 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 23.19539285352047 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 21.321792995397246 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_8' AS feature, 0.20772305130958557 AS threshold, 19 AS count, 2 AS depth, 17.14889677757853 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 9.107936225299094 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 17.595616808260715 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.15545231103897095) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.035811688750982285) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.4414100646972656) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.19796285033226013) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.07189737260341644) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.27928364276885986) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.4099259376525879) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.15545231103897095 AS threshold, 100 AS count, 0 AS depth, 14.000476084232234 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 0.035811688750982285 AS threshold, 76 AS count, 1 AS depth, 12.24532763781987 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_8' AS feature, 0.4414100646972656 AS threshold, 42 AS count, 2 AS depth, 14.998834491865198 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 14.01665981321296 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 24.3294939390615 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.19796285033226013 AS threshold, 34 AS count, 2 AS depth, 8.843936818116827 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5.821007796047336 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 10.492807193791089 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_9' AS feature, 0.07189737260341644 AS threshold, 24 AS count, 1 AS depth, 19.55844616453805 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_8' AS feature, -0.27928364276885986 AS threshold, 12 AS count, 2 AS depth, 17.157854550708322 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 14.332968436110363 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 18.570297608007305 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_2' AS feature, 0.4099259376525879 AS threshold, 12 AS count, 2 AS depth, 21.959037778367772 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 18.87587900734285 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 22.986757368709412 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.3081291913986206) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.40257319808006287) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.07699338346719742) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.3851456940174103) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.20651733875274658) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 0.07289460301399231) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.5089371800422668) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.3081291913986206 AS threshold, 100 AS count, 0 AS depth, 14.160628912174106 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.40257319808006287 AS threshold, 74 AS count, 1 AS depth, 12.361655142896975 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, -0.07699338346719742 AS threshold, 12 AS count, 2 AS depth, 6.865854351942054 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 15.527048639478688 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 3.9787895894298413 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, 0.3851456940174103 AS threshold, 62 AS count, 2 AS depth, 13.425358521791475 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, 14.01133510055368 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 6.74522552390224 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 0.20651733875274658 AS threshold, 26 AS count, 1 AS depth, 19.280785024732104 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_7' AS feature, 0.07289460301399231 AS threshold, 17 AS count, 2 AS depth, 17.86361886881715 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 17.05120590567609 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 21.654879363475455 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, -0.5089371800422668 AS threshold, 9 AS count, 2 AS depth, 21.957654430349265 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 19.50248662024036 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 22.659130947523238 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.2178475558757782) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.16491541266441345) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.720932126045227) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.08032368123531342) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.1374821662902832) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.0997631698846817) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.19723844528198242) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.2178475558757782 AS threshold, 100 AS count, 0 AS depth, 14.036278107301428 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, 0.16491541266441345 AS threshold, 63 AS count, 1 AS depth, 16.39158223143578 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.720932126045227 AS threshold, 32 AS count, 2 AS depth, 13.499825107202202 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 14.090664863654979 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 4.637228760410519 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, 0.08032368123531342 AS threshold, 31 AS count, 2 AS depth, 19.37662184354788 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 21.42091399711485 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 17.196043546409776 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_10' AS feature, -0.1374821662902832 AS threshold, 37 AS count, 1 AS depth, 10.025895409451032 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_2' AS feature, 0.0997631698846817 AS threshold, 6 AS count, 2 AS depth, 15.619213996084339 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 14.031063535242204 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 18.795514917768614 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, -0.19723844528198242 AS threshold, 31 AS count, 2 AS depth, 8.943317618489745 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 11.26752471026988 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 7.475397349997031 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.166832834482193) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.12048278748989105) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.4492020606994629) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.513930082321167) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.024227535352110863) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.28453129529953003) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.2811823785305023) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, 0.166832834482193 AS threshold, 100 AS count, 0 AS depth, 15.013442349151422 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 0.12048278748989105 AS threshold, 67 AS count, 1 AS depth, 12.429352628845017 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.4492020606994629 AS threshold, 42 AS count, 2 AS depth, 9.785514771159903 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 16.198612779864607 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 8.716665103042448 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 0.513930082321167 AS threshold, 25 AS count, 2 AS depth, 16.871000229756 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 15.023200552485513 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 22.72236587444587 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, -0.024227535352110863 AS threshold, 33 AS count, 1 AS depth, 20.259927538864424 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_3' AS feature, -0.28453129529953003 AS threshold, 15 AS count, 2 AS depth, 23.74258275290069 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17.895316694710058 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 24.160244614200014 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_4' AS feature, 0.2811823785305023 AS threshold, 18 AS count, 2 AS depth, 17.357714860500863 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 18.016715165006808 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 6.154709683899806 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[AdaBoost_Estim_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.166832834482193) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.17839616537094116) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.09764684736728668) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.07724996656179428) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.39056307077407837) THEN 9 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.2073846310377121) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, 0.166832834482193 AS threshold, 100 AS count, 0 AS depth, 13.78280926917536 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, 0.17839616537094116 AS threshold, 75 AS count, 1 AS depth, 12.034834449108514 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, 0.09764684736728668 AS threshold, 55 AS count, 2 AS depth, 13.836021607434423 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 14.787902819858045 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 11.51581115215185 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_9' AS feature, 0.07724996656179428 AS threshold, 20 AS count, 2 AS depth, 7.081569763712264 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 5.561974550061059 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 13.15995061831709 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_9' AS feature, -0.39056307077407837 AS threshold, 25 AS count, 1 AS depth, 19.02673372937591 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 9.107936225299094 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_5' AS feature, 0.2073846310377121 AS threshold, 23 AS count, 2 AS depth, 19.889237860165196 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 21.224005169782636 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 15.084075545542401 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[AdaBoost_Estim_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Estimator_0] AS [Estimator_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Estimator_1] AS [Estimator_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Estimator_2] AS [Estimator_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Estimator_3] AS [Estimator_3], [AdaBoost_Estim_4].join_key_4 AS join_key_4, [AdaBoost_Estim_4].[Estimator_4] AS [Estimator_4], [AdaBoost_Estim_5].join_key_5 AS join_key_5, [AdaBoost_Estim_5].[Estimator_5] AS [Estimator_5] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2 LEFT OUTER JOIN [AdaBoost_Estim_4] ON [AdaBoost_Estim_4].join_key_4 = [AdaBoost_Estim_3].join_key_3 LEFT OUTER JOIN [AdaBoost_Estim_5] ON [AdaBoost_Estim_5].join_key_5 = [AdaBoost_Estim_4].join_key_4), 
[WeightedEstimators] AS 
(SELECT [Values].[Key] AS [Key], [Values].sub_estimator AS sub_estimator, [Values].[Weight] AS [Weight], [Values].[Value] AS [Value] 
FROM (SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 0 AS sub_estimator, 0.165180557405 AS [Weight], [AdaBoost_Join_CTE].[Estimator_0] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 1 AS sub_estimator, 0.181878521197 AS [Weight], [AdaBoost_Join_CTE].[Estimator_1] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 2 AS sub_estimator, 0.161096702019 AS [Weight], [AdaBoost_Join_CTE].[Estimator_2] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 3 AS sub_estimator, 0.184166960001 AS [Weight], [AdaBoost_Join_CTE].[Estimator_3] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 4 AS sub_estimator, 0.138095465233 AS [Weight], [AdaBoost_Join_CTE].[Estimator_4] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 5 AS sub_estimator, 0.169581794145 AS [Weight], [AdaBoost_Join_CTE].[Estimator_5] AS [Value] 
FROM [AdaBoost_Join_CTE]) AS [Values]), 
[Cumulative_Frequencies] AS 
(SELECT u1.[Key] AS [Key], u1.sub_estimator AS sub_estimator, u1.[Weight] AS [Weight], u1.[Value] AS [Value], (SELECT sum(u2.[Weight]) AS sum_1 
FROM [WeightedEstimators] AS u2 
WHERE u1.[Key] = u2.[Key] AND u1.[Value] >= u2.[Value]) AS cum_weight 
FROM [WeightedEstimators] AS u1), 
[Quantiles] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS join_key_0, [AdaBoost_Join_CTE].[Estimator_0] AS [Estimator_0], [AdaBoost_Join_CTE].join_key_1 AS join_key_1, [AdaBoost_Join_CTE].[Estimator_1] AS [Estimator_1], [AdaBoost_Join_CTE].join_key_2 AS join_key_2, [AdaBoost_Join_CTE].[Estimator_2] AS [Estimator_2], [AdaBoost_Join_CTE].join_key_3 AS join_key_3, [AdaBoost_Join_CTE].[Estimator_3] AS [Estimator_3], [AdaBoost_Join_CTE].join_key_4 AS join_key_4, [AdaBoost_Join_CTE].[Estimator_4] AS [Estimator_4], [AdaBoost_Join_CTE].join_key_5 AS join_key_5, [AdaBoost_Join_CTE].[Estimator_5] AS [Estimator_5], (SELECT min([Cumulative_Frequencies].[Value]) AS min_1 
FROM [Cumulative_Frequencies] 
WHERE [AdaBoost_Join_CTE].join_key_0 = [Cumulative_Frequencies].[Key] AND [Cumulative_Frequencies].cum_weight >= 0.5) AS [Median] 
FROM [AdaBoost_Join_CTE])
 SELECT [Quantiles].join_key_0 AS [KEY], [Quantiles].[Median] AS [Estimator] 
FROM [Quantiles]