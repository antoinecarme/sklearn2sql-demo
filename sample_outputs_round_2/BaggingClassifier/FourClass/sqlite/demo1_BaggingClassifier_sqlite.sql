-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_14" <= -0.1688302457332611) THEN CASE WHEN ("ADS"."Feature_18" <= 0.3082839846611023) THEN CASE WHEN ("ADS"."Feature_15" <= 1.004968523979187) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.007060100324451923) THEN CASE WHEN ("ADS"."Feature_19" <= -0.14477014541625977) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_15" <= -0.6866355538368225) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.1688302457332611 AS threshold, 64 AS count, 0 AS depth, 0.27 AS "Proba_0", -1.30933331998 AS "LogProba_0", 0.26 AS "Proba_1", -1.34707364797 AS "LogProba_1", 0.3 AS "Proba_2", -1.20397280433 AS "LogProba_2", 0.17 AS "Proba_3", -1.77195684193 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_18' AS feature, 0.3082839846611023 AS threshold, 23 AS count, 1 AS depth, 0.6111111111111112 AS "Proba_0", -0.492476485098 AS "LogProba_0", 0.3888888888888889 AS "Proba_1", -0.944461608841 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 1.004968523979187 AS threshold, 14 AS count, 2 AS depth, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.125 AS "Proba_0", -2.07944154168 AS "LogProba_0", 0.875 AS "Proba_1", -0.133531392625 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 2 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_6' AS feature, 0.007060100324451923 AS threshold, 41 AS count, 1 AS depth, 0.078125 AS "Proba_0", -2.54944517093 AS "LogProba_0", 0.1875 AS "Proba_1", -1.67397643357 AS "LogProba_1", 0.46875 AS "Proba_2", -0.757685701698 AS "LogProba_2", 0.265625 AS "Proba_3", -1.3256697393 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 7 AS node_id, 'Feature_19' AS feature, -0.14477014541625977 AS threshold, 30 AS count, 2 AS depth, 0.07142857142857142 AS "Proba_0", -2.63905732962 AS "LogProba_0", 0.2857142857142857 AS "Proba_1", -1.2527629685 AS "LogProba_1", 0.23809523809523808 AS "Proba_2", -1.43508452529 AS "LogProba_2", 0.40476190476190477 AS "Proba_3", -0.904456274227 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 0.125 AS "Proba_0", -2.07944154168 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.20833333333333334 AS "Proba_2", -1.56861591791 AS "LogProba_2", 0.6666666666666666 AS "Proba_3", -0.405465108108 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.2777777777777778 AS "Proba_2", -1.28093384546 AS "LogProba_2", 0.05555555555555555 AS "Proba_3", -2.8903717579 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, 'Feature_15' AS feature, -0.6866355538368225 AS threshold, 11 AS count, 2 AS depth, 0.09090909090909091 AS "Proba_0", -2.3978952728 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.9090909090909091 AS "Proba_2", -0.0953101798043 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.6666666666666666 AS "Proba_0", -0.405465108108 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0" AS "Proba_0_0", "DT_Output"."LogProba_0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2" AS "Proba_0_2", "DT_Output"."LogProba_2" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3" AS "Proba_0_3", "DT_Output"."LogProba_3" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_14" <= -0.8221062421798706) THEN CASE WHEN ("ADS"."Feature_5" <= 0.4086461663246155) THEN 2 ELSE CASE WHEN ("ADS"."Feature_9" <= -0.7955689430236816) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_7" <= -0.8452376127243042) THEN 7 ELSE CASE WHEN ("ADS"."Feature_4" <= -0.5286073088645935) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.8221062421798706 AS threshold, 64 AS count, 0 AS depth, 0.19 AS "Proba_0", -1.66073120682 AS "LogProba_0", 0.21 AS "Proba_1", -1.56064774826 AS "LogProba_1", 0.35 AS "Proba_2", -1.0498221245 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 0.4086461663246155 AS threshold, 12 AS count, 1 AS depth, 0.8421052631578947 AS "Proba_0", -0.171850256927 AS "LogProba_0", 0.15789473684210525 AS "Proba_1", -1.8458266905 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 2 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, 'Feature_9' AS feature, -0.7955689430236816 AS threshold, 3 AS count, 2 AS depth, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.75 AS "Proba_1", -0.287682072452 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_7' AS feature, -0.8452376127243042 AS threshold, 52 AS count, 1 AS depth, 0.037037037037037035 AS "Proba_0", -3.295836866 AS "LogProba_0", 0.2222222222222222 AS "Proba_1", -1.50407739678 AS "LogProba_1", 0.43209876543209874 AS "Proba_2", -0.839101093183 AS "LogProba_2", 0.30864197530864196 AS "Proba_3", -1.1755733298 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 2 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, -0.5286073088645935 AS threshold, 45 AS count, 2 AS depth, 0.043478260869565216 AS "Proba_0", -3.13549421593 AS "LogProba_0", 0.2608695652173913 AS "Proba_1", -1.3437347467 AS "LogProba_1", 0.5072463768115942 AS "Proba_2", -0.678758443108 AS "LogProba_2", 0.18840579710144928 AS "Proba_3", -1.66915714714 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.047619047619047616 AS "Proba_0", -3.04452243772 AS "LogProba_0", 0.6190476190476191 AS "Proba_1", -0.479573080262 AS "LogProba_1", 0.14285714285714285 AS "Proba_2", -1.94591014906 AS "LogProba_2", 0.19047619047619047 AS "Proba_3", -1.6582280766 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 0.041666666666666664 AS "Proba_0", -3.17805383035 AS "LogProba_0", 0.10416666666666667 AS "Proba_1", -2.26176309847 AS "LogProba_1", 0.6666666666666666 AS "Proba_2", -0.405465108108 AS "LogProba_2", 0.1875 AS "Proba_3", -1.67397643357 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0" AS "Proba_1_0", "DT_Output_1"."LogProba_0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2" AS "Proba_1_2", "DT_Output_1"."LogProba_2" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3" AS "Proba_1_3", "DT_Output_1"."LogProba_3" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_14" <= -0.31905996799468994) THEN CASE WHEN ("ADS"."Feature_2" <= 0.3808819353580475) THEN CASE WHEN ("ADS"."Feature_13" <= 1.1783686876296997) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= 1.0282857418060303) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.41111984848976135) THEN CASE WHEN ("ADS"."Feature_11" <= 0.43169522285461426) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.31905996799468994 AS threshold, 64 AS count, 0 AS depth, 0.24 AS "Proba_0", -1.42711635564 AS "LogProba_0", 0.23 AS "Proba_1", -1.46967597006 AS "LogProba_1", 0.3 AS "Proba_2", -1.20397280433 AS "LogProba_2", 0.23 AS "Proba_3", -1.46967597006 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.3808819353580475 AS threshold, 17 AS count, 1 AS depth, 0.5384615384615384 AS "Proba_0", -0.619039208406 AS "LogProba_0", 0.46153846153846156 AS "Proba_1", -0.773189888233 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 1.1783686876296997 AS threshold, 8 AS count, 2 AS depth, 0.15384615384615385 AS "Proba_0", -1.8718021769 AS "LogProba_0", 0.8461538461538461 AS "Proba_1", -0.167054084663 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_6' AS feature, 1.0282857418060303 AS threshold, 9 AS count, 2 AS depth, 0.9230769230769231 AS "Proba_0", -0.0800427076735 AS "LogProba_0", 0.07692307692307693 AS "Proba_1", -2.56494935746 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, 0.41111984848976135 AS threshold, 47 AS count, 1 AS depth, 0.13513513513513514 AS "Proba_0", -2.00148000021 AS "LogProba_0", 0.14864864864864866 AS "Proba_1", -1.90616982041 AS "LogProba_1", 0.40540540540540543 AS "Proba_2", -0.902867711542 AS "LogProba_2", 0.3108108108108108 AS "Proba_3", -1.16857087728 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_11' AS feature, 0.43169522285461426 AS threshold, 40 AS count, 2 AS depth, 0.16666666666666666 AS "Proba_0", -1.79175946923 AS "LogProba_0", 0.18333333333333332 AS "Proba_1", -1.69644928942 AS "LogProba_1", 0.26666666666666666 AS "Proba_2", -1.32175583998 AS "LogProba_2", 0.38333333333333336 AS "Proba_3", -0.958850346293 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 0.20833333333333334 AS "Proba_0", -1.56861591791 AS "LogProba_0", 0.22916666666666666 AS "Proba_1", -1.47330573811 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0.22916666666666666 AS "Proba_3", -1.47330573811 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 2 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0" AS "Proba_2_0", "DT_Output_2"."LogProba_0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2" AS "Proba_2_2", "DT_Output_2"."LogProba_2" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3" AS "Proba_2_3", "DT_Output_2"."LogProba_3" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_14" <= -0.17484891414642334) THEN CASE WHEN ("ADS"."Feature_0" <= -0.8295737504959106) THEN 2 ELSE CASE WHEN ("ADS"."Feature_14" <= -0.5030436515808105) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.4519498646259308) THEN CASE WHEN ("ADS"."Feature_18" <= 1.5971930027008057) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_10" <= -0.2166336178779602) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.17484891414642334 AS threshold, 62 AS count, 0 AS depth, 0.31 AS "Proba_0", -1.1711829815 AS "LogProba_0", 0.19 AS "Proba_1", -1.66073120682 AS "LogProba_1", 0.24 AS "Proba_2", -1.42711635564 AS "LogProba_2", 0.26 AS "Proba_3", -1.34707364797 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, -0.8295737504959106 AS threshold, 21 AS count, 1 AS depth, 0.7027027027027027 AS "Proba_0", -0.352821374623 AS "LogProba_0", 0.2972972972972973 AS "Proba_1", -1.21302263985 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'Feature_14' AS feature, -0.5030436515808105 AS threshold, 17 AS count, 2 AS depth, 0.8387096774193549 AS "Proba_0", -0.175890666464 AS "LogProba_0", 0.16129032258064516 AS "Proba_1", -1.82454929205 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.96 AS "Proba_0", -0.0408219945203 AS "LogProba_0", 0.04 AS "Proba_1", -3.21887582487 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_6' AS feature, -0.4519498646259308 AS threshold, 41 AS count, 1 AS depth, 0.07936507936507936 AS "Proba_0", -2.53369681396 AS "LogProba_0", 0.12698412698412698 AS "Proba_1", -2.06369318471 AS "LogProba_1", 0.38095238095238093 AS "Proba_2", -0.965080896044 AS "LogProba_2", 0.4126984126984127 AS "Proba_3", -0.88503818837 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 7 AS node_id, 'Feature_18' AS feature, 1.5971930027008057 AS threshold, 16 AS count, 2 AS depth, 0.07142857142857142 AS "Proba_0", -2.63905732962 AS "LogProba_0", 0.14285714285714285 AS "Proba_1", -1.94591014906 AS "LogProba_1", 0.07142857142857142 AS "Proba_2", -2.63905732962 AS "LogProba_2", 0.7142857142857143 AS "Proba_3", -0.336472236621 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.18181818181818182 AS "Proba_0", -1.70474809224 AS "LogProba_0", 0.36363636363636365 AS "Proba_1", -1.01160091168 AS "LogProba_1", 0.18181818181818182 AS "Proba_2", -1.70474809224 AS "LogProba_2", 0.2727272727272727 AS "Proba_3", -1.29928298413 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, 'Feature_10' AS feature, -0.2166336178779602 AS threshold, 25 AS count, 2 AS depth, 0.08571428571428572 AS "Proba_0", -2.45673577282 AS "LogProba_0", 0.11428571428571428 AS "Proba_1", -2.16905370037 AS "LogProba_1", 0.6285714285714286 AS "Proba_2", -0.464305608131 AS "LogProba_2", 0.17142857142857143 AS "Proba_3", -1.76358859226 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.07692307692307693 AS "Proba_0", -2.56494935746 AS "LogProba_0", 0.23076923076923078 AS "Proba_1", -1.46633706879 AS "LogProba_1", 0.23076923076923078 AS "Proba_2", -1.46633706879 AS "LogProba_2", 0.46153846153846156 AS "Proba_3", -0.773189888233 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.09090909090909091 AS "Proba_0", -2.3978952728 AS "LogProba_0", 0.045454545454545456 AS "Proba_1", -3.09104245336 AS "LogProba_1", 0.8636363636363636 AS "Proba_2", -0.146603474192 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0" AS "Proba_3_0", "DT_Output_3"."LogProba_0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2" AS "Proba_3_2", "DT_Output_3"."LogProba_2" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3" AS "Proba_3_3", "DT_Output_3"."LogProba_3" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_14" <= -0.30889177322387695) THEN CASE WHEN ("ADS"."Feature_0" <= -0.7834493517875671) THEN 2 ELSE CASE WHEN ("ADS"."Feature_16" <= 1.0471221208572388) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.12381041795015335) THEN CASE WHEN ("ADS"."Feature_8" <= 0.1213611587882042) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_5" <= -0.8203049898147583) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.30889177322387695 AS threshold, 65 AS count, 0 AS depth, 0.27 AS "Proba_0", -1.30933331998 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.26 AS "Proba_2", -1.34707364797 AS "LogProba_2", 0.27 AS "Proba_3", -1.30933331998 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, -0.7834493517875671 AS threshold, 20 AS count, 1 AS depth, 0.71875 AS "Proba_0", -0.330241686871 AS "LogProba_0", 0.28125 AS "Proba_1", -1.26851132546 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'Feature_16' AS feature, 1.0471221208572388 AS threshold, 15 AS count, 2 AS depth, 0.92 AS "Proba_0", -0.0833816089391 AS "LogProba_0", 0.08 AS "Proba_1", -2.52572864431 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_6' AS feature, 0.12381041795015335 AS threshold, 45 AS count, 1 AS depth, 0.058823529411764705 AS "Proba_0", -2.83321334406 AS "LogProba_0", 0.16176470588235295 AS "Proba_1", -1.82161243238 AS "LogProba_1", 0.38235294117647056 AS "Proba_2", -0.961411167155 AS "LogProba_2", 0.39705882352941174 AS "Proba_3", -0.923670839172 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 7 AS node_id, 'Feature_8' AS feature, 0.1213611587882042 AS threshold, 32 AS count, 2 AS depth, 0.0425531914893617 AS "Proba_0", -3.15700042115 AS "LogProba_0", 0.23404255319148937 AS "Proba_1", -1.45225232891 AS "LogProba_1", 0.19148936170212766 AS "Proba_2", -1.65292302437 AS "LogProba_2", 0.5319148936170213 AS "Proba_3", -0.631271776842 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 0.08 AS "Proba_0", -2.52572864431 AS "LogProba_0", 0.44 AS "Proba_1", -0.82098055207 AS "LogProba_1", 0.16 AS "Proba_2", -1.83258146375 AS "LogProba_2", 0.32 AS "Proba_3", -1.13943428319 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.22727272727272727 AS "Proba_2", -1.48160454092 AS "LogProba_2", 0.7727272727272727 AS "Proba_3", -0.257829109302 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, 'Feature_5' AS feature, -0.8203049898147583 AS threshold, 13 AS count, 2 AS depth, 0.09523809523809523 AS "Proba_0", -2.35137525716 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8095238095238095 AS "Proba_2", -0.211309093667 AS "LogProba_2", 0.09523809523809523 AS "Proba_3", -2.35137525716 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.6666666666666666 AS "Proba_3", -0.405465108108 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.05555555555555555 AS "Proba_0", -2.8903717579 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.9444444444444444 AS "Proba_2", -0.0571584138399 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Proba_2" AS "Proba_2", "DT_node_data_4"."LogProba_2" AS "LogProba_2", "DT_node_data_4"."Proba_3" AS "Proba_3", "DT_node_data_4"."LogProba_3" AS "LogProba_3", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0" AS "Proba_4_0", "DT_Output_4"."LogProba_0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2" AS "Proba_4_2", "DT_Output_4"."LogProba_2" AS "LogProba_4_2", CAST(NULL AS FLOAT) AS "Score_4_3", "DT_Output_4"."Proba_3" AS "Proba_4_3", "DT_Output_4"."LogProba_3" AS "LogProba_4_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_14" <= -0.35027962923049927) THEN CASE WHEN ("ADS"."Feature_18" <= -0.46027565002441406) THEN CASE WHEN ("ADS"."Feature_1" <= -0.5478923320770264) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.2227180004119873) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= -0.8645685911178589) THEN 9 ELSE CASE WHEN ("ADS"."Feature_6" <= 0.007060100324451923) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.35027962923049927 AS threshold, 63 AS count, 0 AS depth, 0.26 AS "Proba_0", -1.34707364797 AS "LogProba_0", 0.26 AS "Proba_1", -1.34707364797 AS "LogProba_1", 0.27 AS "Proba_2", -1.30933331998 AS "LogProba_2", 0.21 AS "Proba_3", -1.56064774826 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_18' AS feature, -0.46027565002441406 AS threshold, 18 AS count, 1 AS depth, 0.59375 AS "Proba_0", -0.521296923633 AS "LogProba_0", 0.40625 AS "Proba_1", -0.900786545338 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, -0.5478923320770264 AS threshold, 7 AS count, 2 AS depth, 0.08333333333333333 AS "Proba_0", -2.48490664979 AS "LogProba_0", 0.9166666666666666 AS "Proba_1", -0.0870113769896 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 1.2227180004119873 AS threshold, 11 AS count, 2 AS depth, 0.9 AS "Proba_0", -0.105360515658 AS "LogProba_0", 0.1 AS "Proba_1", -2.30258509299 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, -0.8645685911178589 AS threshold, 45 AS count, 1 AS depth, 0.10294117647058823 AS "Proba_0", -2.27359755612 AS "LogProba_0", 0.19117647058823528 AS "Proba_1", -1.65455834771 AS "LogProba_1", 0.39705882352941174 AS "Proba_2", -0.923670839172 AS "LogProba_2", 0.3088235294117647 AS "Proba_3", -1.17498526745 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 2 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, 'Feature_6' AS feature, 0.007060100324451923 AS threshold, 39 AS count, 2 AS depth, 0.12280701754385964 AS "Proba_0", -2.09714111878 AS "LogProba_0", 0.22807017543859648 AS "Proba_1", -1.47810191037 AS "LogProba_1", 0.47368421052631576 AS "Proba_2", -0.74721440183 AS "LogProba_2", 0.17543859649122806 AS "Proba_3", -1.74046617484 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 0.15789473684210525 AS "Proba_0", -1.8458266905 AS "LogProba_0", 0.3157894736842105 AS "Proba_1", -1.15267950994 AS "LogProba_1", 0.2631578947368421 AS "Proba_2", -1.33500106673 AS "LogProba_2", 0.2631578947368421 AS "Proba_3", -1.33500106673 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.05263157894736842 AS "Proba_0", -2.94443897917 AS "LogProba_0", 0.05263157894736842 AS "Proba_1", -2.94443897917 AS "LogProba_1", 0.8947368421052632 AS "Proba_2", -0.11122563511 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Proba_2" AS "Proba_2", "DT_node_data_5"."LogProba_2" AS "LogProba_2", "DT_node_data_5"."Proba_3" AS "Proba_3", "DT_node_data_5"."LogProba_3" AS "LogProba_3", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0" AS "Proba_5_0", "DT_Output_5"."LogProba_0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2" AS "Proba_5_2", "DT_Output_5"."LogProba_2" AS "LogProba_5_2", CAST(NULL AS FLOAT) AS "Score_5_3", "DT_Output_5"."Proba_3" AS "Proba_5_3", "DT_Output_5"."LogProba_3" AS "LogProba_5_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_14" <= -0.17484891414642334) THEN CASE WHEN ("ADS"."Feature_8" <= -0.12961019575595856) THEN CASE WHEN ("ADS"."Feature_0" <= -1.0197149515151978) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 1.146032691001892) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.012101431377232075) THEN CASE WHEN ("ADS"."Feature_19" <= -0.21863088011741638) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.9796048402786255) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.17484891414642334 AS threshold, 58 AS count, 0 AS depth, 0.22 AS "Proba_0", -1.51412773263 AS "LogProba_0", 0.31 AS "Proba_1", -1.1711829815 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.22 AS "Proba_3", -1.51412773263 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, -0.12961019575595856 AS threshold, 18 AS count, 1 AS depth, 0.5483870967741935 AS "Proba_0", -0.600773860429 AS "LogProba_0", 0.45161290322580644 AS "Proba_1", -0.79492987487 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -1.0197149515151978 AS threshold, 9 AS count, 2 AS depth, 0.9333333333333333 AS "Proba_0", -0.068992871487 AS "LogProba_0", 0.06666666666666667 AS "Proba_1", -2.7080502011 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_12' AS feature, 1.146032691001892 AS threshold, 9 AS count, 2 AS depth, 0.1875 AS "Proba_0", -1.67397643357 AS "LogProba_0", 0.8125 AS "Proba_1", -0.207639364778 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.07142857142857142 AS "Proba_0", -2.63905732962 AS "LogProba_0", 0.9285714285714286 AS "Proba_1", -0.0741079721537 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, -0.012101431377232075 AS threshold, 40 AS count, 1 AS depth, 0.07246376811594203 AS "Proba_0", -2.62466859216 AS "LogProba_0", 0.2463768115942029 AS "Proba_1", -1.40089316054 AS "LogProba_1", 0.36231884057971014 AS "Proba_2", -1.01523067973 AS "LogProba_2", 0.3188405797101449 AS "Proba_3", -1.14306405124 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_19' AS feature, -0.21863088011741638 AS threshold, 27 AS count, 2 AS depth, 0.043478260869565216 AS "Proba_0", -3.13549421593 AS "LogProba_0", 0.3695652173913043 AS "Proba_1", -0.995428052433 AS "LogProba_1", 0.13043478260869565 AS "Proba_2", -2.03688192726 AS "LogProba_2", 0.45652173913043476 AS "Proba_3", -0.784118958766 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.07692307692307693 AS "Proba_0", -2.56494935746 AS "LogProba_0", 0.07692307692307693 AS "Proba_1", -2.56494935746 AS "LogProba_1", 0.15384615384615385 AS "Proba_2", -1.8718021769 AS "LogProba_2", 0.6923076923076923 AS "Proba_3", -0.367724780125 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.75 AS "Proba_1", -0.287682072452 AS "LogProba_1", 0.1 AS "Proba_2", -2.30258509299 AS "LogProba_2", 0.15 AS "Proba_3", -1.89711998489 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, -0.9796048402786255 AS threshold, 13 AS count, 2 AS depth, 0.13043478260869565 AS "Proba_0", -2.03688192726 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8260869565217391 AS "Proba_2", -0.191055236763 AS "LogProba_2", 0.043478260869565216 AS "Proba_3", -3.13549421593 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.75 AS "Proba_0", -0.287682072452 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Proba_0" AS "Proba_0", "DT_node_data_6"."LogProba_0" AS "LogProba_0", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Proba_2" AS "Proba_2", "DT_node_data_6"."LogProba_2" AS "LogProba_2", "DT_node_data_6"."Proba_3" AS "Proba_3", "DT_node_data_6"."LogProba_3" AS "LogProba_3", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0" AS "Proba_6_0", "DT_Output_6"."LogProba_0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1" AS "Proba_6_1", "DT_Output_6"."LogProba_1" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2" AS "Proba_6_2", "DT_Output_6"."LogProba_2" AS "LogProba_6_2", CAST(NULL AS FLOAT) AS "Score_6_3", "DT_Output_6"."Proba_3" AS "Proba_6_3", "DT_Output_6"."LogProba_3" AS "LogProba_6_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= -0.19913583993911743) THEN CASE WHEN ("ADS"."Feature_6" <= -0.4519498646259308) THEN 2 ELSE CASE WHEN ("ADS"."Feature_0" <= -0.18915599584579468) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_0" <= -1.5364151000976562) THEN CASE WHEN ("ADS"."Feature_5" <= -0.002072170376777649) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_14" <= -0.9459752440452576) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_19' AS feature, -0.19913583993911743 AS threshold, 64 AS count, 0 AS depth, 0.21 AS "Proba_0", -1.56064774826 AS "LogProba_0", 0.35 AS "Proba_1", -1.0498221245 AS "LogProba_1", 0.23 AS "Proba_2", -1.46967597006 AS "LogProba_2", 0.21 AS "Proba_3", -1.56064774826 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, -0.4519498646259308 AS threshold, 26 AS count, 1 AS depth, 0.2619047619047619 AS "Proba_0", -1.33977434548 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.30952380952380953 AS "Proba_2", -1.17272026082 AS "LogProba_2", 0.42857142857142855 AS "Proba_3", -0.847297860387 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 2 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, -0.18915599584579468 AS threshold, 17 AS count, 2 AS depth, 0.3793103448275862 AS "Proba_0", -0.969400557188 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.4482758620689655 AS "Proba_2", -0.802346472525 AS "LogProba_2", 0.1724137931034483 AS "Proba_3", -1.75785791755 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.1 AS "Proba_0", -2.30258509299 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.65 AS "Proba_2", -0.430782916092 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_0' AS feature, -1.5364151000976562 AS threshold, 38 AS count, 1 AS depth, 0.1724137931034483 AS "Proba_0", -1.75785791755 AS "LogProba_0", 0.603448275862069 AS "Proba_1", -0.505094949057 AS "LogProba_1", 0.1724137931034483 AS "Proba_2", -1.75785791755 AS "LogProba_2", 0.05172413793103448 AS "Proba_3", -2.96183072188 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, 'Feature_5' AS feature, -0.002072170376777649 AS threshold, 6 AS count, 2 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.2727272727272727 AS "Proba_1", -1.29928298413 AS "LogProba_1", 0.7272727272727273 AS "Proba_2", -0.318453731119 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 10 AS node_id, 'Feature_14' AS feature, -0.9459752440452576 AS threshold, 32 AS count, 2 AS depth, 0.2127659574468085 AS "Proba_0", -1.54756250872 AS "LogProba_0", 0.6808510638297872 AS "Proba_1", -0.38441169891 AS "LogProba_1", 0.0425531914893617 AS "Proba_2", -3.15700042115 AS "LogProba_2", 0.06382978723404255 AS "Proba_3", -2.75153531304 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.6428571428571429 AS "Proba_0", -0.441832752279 AS "LogProba_0", 0.35714285714285715 AS "Proba_1", -1.02961941718 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 0.030303030303030304 AS "Proba_0", -3.49650756147 AS "LogProba_0", 0.8181818181818182 AS "Proba_1", -0.200670695462 AS "LogProba_1", 0.06060606060606061 AS "Proba_2", -2.80336038091 AS "LogProba_2", 0.09090909090909091 AS "Proba_3", -2.3978952728 AS "LogProba_3", 1 AS "Decision") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Proba_0" AS "Proba_0", "DT_node_data_7"."LogProba_0" AS "LogProba_0", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Proba_2" AS "Proba_2", "DT_node_data_7"."LogProba_2" AS "LogProba_2", "DT_node_data_7"."Proba_3" AS "Proba_3", "DT_node_data_7"."LogProba_3" AS "LogProba_3", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0" AS "Proba_7_0", "DT_Output_7"."LogProba_0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1" AS "Proba_7_1", "DT_Output_7"."LogProba_1" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2" AS "Proba_7_2", "DT_Output_7"."LogProba_2" AS "LogProba_7_2", CAST(NULL AS FLOAT) AS "Score_7_3", "DT_Output_7"."Proba_3" AS "Proba_7_3", "DT_Output_7"."LogProba_3" AS "LogProba_7_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_14" <= -0.17484891414642334) THEN CASE WHEN ("ADS"."Feature_18" <= -0.46027565002441406) THEN CASE WHEN ("ADS"."Feature_8" <= -0.12961019575595856) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_14" <= -0.38610023260116577) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.18495577573776245) THEN CASE WHEN ("ADS"."Feature_19" <= 0.3859226107597351) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= -0.061104875057935715) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.17484891414642334 AS threshold, 65 AS count, 0 AS depth, 0.24 AS "Proba_0", -1.42711635564 AS "LogProba_0", 0.23 AS "Proba_1", -1.46967597006 AS "LogProba_1", 0.24 AS "Proba_2", -1.42711635564 AS "LogProba_2", 0.29 AS "Proba_3", -1.237874356 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_18' AS feature, -0.46027565002441406 AS threshold, 22 AS count, 1 AS depth, 0.5588235294117647 AS "Proba_0", -0.58192154545 AS "LogProba_0", 0.4411764705882353 AS "Proba_1", -0.818310323514 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.12961019575595856 AS threshold, 10 AS count, 2 AS depth, 0.13333333333333333 AS "Proba_0", -2.01490302054 AS "LogProba_0", 0.8666666666666667 AS "Proba_1", -0.143100843641 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.6666666666666666 AS "Proba_0", -0.405465108108 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_14' AS feature, -0.38610023260116577 AS threshold, 12 AS count, 2 AS depth, 0.8947368421052632 AS "Proba_0", -0.11122563511 AS "LogProba_0", 0.10526315789473684 AS "Proba_1", -2.25129179861 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.9444444444444444 AS "Proba_0", -0.0571584138399 AS "LogProba_0", 0.05555555555555555 AS "Proba_1", -2.8903717579 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, 0.18495577573776245 AS threshold, 43 AS count, 1 AS depth, 0.07575757575757576 AS "Proba_0", -2.58021682959 AS "LogProba_0", 0.12121212121212122 AS "Proba_1", -2.11021320035 AS "LogProba_1", 0.36363636363636365 AS "Proba_2", -1.01160091168 AS "LogProba_2", 0.4393939393939394 AS "Proba_3", -0.82235891204 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_19' AS feature, 0.3859226107597351 AS threshold, 32 AS count, 2 AS depth, 0.0625 AS "Proba_0", -2.77258872224 AS "LogProba_0", 0.16666666666666666 AS "Proba_1", -1.79175946923 AS "LogProba_1", 0.16666666666666666 AS "Proba_2", -1.79175946923 AS "LogProba_2", 0.6041666666666666 AS "Proba_3", -0.503905180921 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 0.07317073170731707 AS "Proba_0", -2.61495977804 AS "LogProba_0", 0.04878048780487805 AS "Proba_1", -3.02042488614 AS "LogProba_1", 0.17073170731707318 AS "Proba_2", -1.76766191765 AS "LogProba_2", 0.7073170731707317 AS "Proba_3", -0.346276236718 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.8571428571428571 AS "Proba_1", -0.154150679827 AS "LogProba_1", 0.14285714285714285 AS "Proba_2", -1.94591014906 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_5' AS feature, -0.061104875057935715 AS threshold, 11 AS count, 2 AS depth, 0.1111111111111111 AS "Proba_0", -2.19722457734 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8888888888888888 AS "Proba_2", -0.117783035656 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 1.0 AS "Proba_2", 0.0 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Proba_0" AS "Proba_0", "DT_node_data_8"."LogProba_0" AS "LogProba_0", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Proba_2" AS "Proba_2", "DT_node_data_8"."LogProba_2" AS "LogProba_2", "DT_node_data_8"."Proba_3" AS "Proba_3", "DT_node_data_8"."LogProba_3" AS "LogProba_3", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0" AS "Proba_8_0", "DT_Output_8"."LogProba_0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1" AS "Proba_8_1", "DT_Output_8"."LogProba_1" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2" AS "Proba_8_2", "DT_Output_8"."LogProba_2" AS "LogProba_8_2", CAST(NULL AS FLOAT) AS "Score_8_3", "DT_Output_8"."Proba_3" AS "Proba_8_3", "DT_Output_8"."LogProba_3" AS "LogProba_8_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= -0.12527510523796082) THEN CASE WHEN ("ADS"."Feature_11" <= -0.2726701498031616) THEN CASE WHEN ("ADS"."Feature_14" <= 0.46547067165374756) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.5756804943084717) THEN CASE WHEN ("ADS"."Feature_19" <= 2.294384479522705) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_14" <= 0.1823301464319229) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_19' AS feature, -0.12527510523796082 AS threshold, 61 AS count, 0 AS depth, 0.24 AS "Proba_0", -1.42711635564 AS "LogProba_0", 0.24 AS "Proba_1", -1.42711635564 AS "LogProba_1", 0.18 AS "Proba_2", -1.71479842809 AS "LogProba_2", 0.34 AS "Proba_3", -1.07880966137 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_11' AS feature, -0.2726701498031616 AS threshold, 29 AS count, 1 AS depth, 0.27450980392156865 AS "Proba_0", -1.29276830311 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.13725490196078433 AS "Proba_2", -1.98591548367 AS "LogProba_2", 0.5882352941176471 AS "Proba_3", -0.530628251062 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_14' AS feature, 0.46547067165374756 AS threshold, 19 AS count, 2 AS depth, 0.45161290322580644 AS "Proba_0", -0.79492987487 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.22580645161290322 AS "Proba_2", -1.48807705543 AS "LogProba_2", 0.3225806451612903 AS "Proba_3", -1.13140211149 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.10526315789473684 AS "Proba_0", -2.25129179861 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.3684210526315789 AS "Proba_2", -0.998528830111 AS "LogProba_2", 0.5263157894736842 AS "Proba_3", -0.641853886172 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 1.0 AS "Proba_3", 0.0 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 0.5756804943084717 AS threshold, 32 AS count, 1 AS depth, 0.20408163265306123 AS "Proba_0", -1.58923520512 AS "LogProba_0", 0.4897959183673469 AS "Proba_1", -0.713766467763 AS "LogProba_1", 0.22448979591836735 AS "Proba_2", -1.49392502531 AS "LogProba_2", 0.08163265306122448 AS "Proba_3", -2.50552593699 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, 'Feature_19' AS feature, 2.294384479522705 AS threshold, 24 AS count, 2 AS depth, 0.02631578947368421 AS "Proba_0", -3.63758615973 AS "LogProba_0", 0.631578947368421 AS "Proba_1", -0.459532329378 AS "LogProba_1", 0.2631578947368421 AS "Proba_2", -1.33500106673 AS "LogProba_2", 0.07894736842105263 AS "Proba_3", -2.53897387106 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.7741935483870968 AS "Proba_1", -0.255933374137 AS "LogProba_1", 0.12903225806451613 AS "Proba_2", -2.04769284337 AS "LogProba_2", 0.0967741935483871 AS "Proba_3", -2.33537491582 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.14285714285714285 AS "Proba_0", -1.94591014906 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.8571428571428571 AS "Proba_2", -0.154150679827 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 10 AS node_id, 'Feature_14' AS feature, 0.1823301464319229 AS threshold, 8 AS count, 2 AS depth, 0.8181818181818182 AS "Proba_0", -0.200670695462 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.09090909090909091 AS "Proba_2", -2.3978952728 AS "LogProba_2", 0.09090909090909091 AS "Proba_3", -2.3978952728 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Proba_0" AS "Proba_0", "DT_node_data_9"."LogProba_0" AS "LogProba_0", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Proba_2" AS "Proba_2", "DT_node_data_9"."LogProba_2" AS "LogProba_2", "DT_node_data_9"."Proba_3" AS "Proba_3", "DT_node_data_9"."LogProba_3" AS "LogProba_3", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0" AS "Proba_9_0", "DT_Output_9"."LogProba_0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1" AS "Proba_9_1", "DT_Output_9"."LogProba_1" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2" AS "Proba_9_2", "DT_Output_9"."LogProba_2" AS "LogProba_9_2", CAST(NULL AS FLOAT) AS "Score_9_3", "DT_Output_9"."Proba_3" AS "Proba_9_3", "DT_Output_9"."LogProba_3" AS "LogProba_9_3" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_4"."Score_4_2" AS "Score_4_2", "RF_Tree_4"."Proba_4_2" AS "Proba_4_2", "RF_Tree_4"."LogProba_4_2" AS "LogProba_4_2", "RF_Tree_4"."Score_4_3" AS "Score_4_3", "RF_Tree_4"."Proba_4_3" AS "Proba_4_3", "RF_Tree_4"."LogProba_4_3" AS "LogProba_4_3", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_5"."Score_5_2" AS "Score_5_2", "RF_Tree_5"."Proba_5_2" AS "Proba_5_2", "RF_Tree_5"."LogProba_5_2" AS "LogProba_5_2", "RF_Tree_5"."Score_5_3" AS "Score_5_3", "RF_Tree_5"."Proba_5_3" AS "Proba_5_3", "RF_Tree_5"."LogProba_5_3" AS "LogProba_5_3", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_6"."Score_6_2" AS "Score_6_2", "RF_Tree_6"."Proba_6_2" AS "Proba_6_2", "RF_Tree_6"."LogProba_6_2" AS "LogProba_6_2", "RF_Tree_6"."Score_6_3" AS "Score_6_3", "RF_Tree_6"."Proba_6_3" AS "Proba_6_3", "RF_Tree_6"."LogProba_6_3" AS "LogProba_6_3", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_7"."Score_7_2" AS "Score_7_2", "RF_Tree_7"."Proba_7_2" AS "Proba_7_2", "RF_Tree_7"."LogProba_7_2" AS "LogProba_7_2", "RF_Tree_7"."Score_7_3" AS "Score_7_3", "RF_Tree_7"."Proba_7_3" AS "Proba_7_3", "RF_Tree_7"."LogProba_7_3" AS "LogProba_7_3", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_8"."Score_8_2" AS "Score_8_2", "RF_Tree_8"."Proba_8_2" AS "Proba_8_2", "RF_Tree_8"."LogProba_8_2" AS "LogProba_8_2", "RF_Tree_8"."Score_8_3" AS "Score_8_3", "RF_Tree_8"."Proba_8_3" AS "Proba_8_3", "RF_Tree_8"."LogProba_8_3" AS "LogProba_8_3", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1", "RF_Tree_9"."Score_9_2" AS "Score_9_2", "RF_Tree_9"."Proba_9_2" AS "Proba_9_2", "RF_Tree_9"."LogProba_9_2" AS "LogProba_9_2", "RF_Tree_9"."Score_9_3" AS "Score_9_3", "RF_Tree_9"."Proba_9_3" AS "Proba_9_3", "RF_Tree_9"."LogProba_9_3" AS "LogProba_9_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 10 + "RF_Join_CTE"."Score_1_2" / 10 + "RF_Join_CTE"."Score_2_2" / 10 + "RF_Join_CTE"."Score_3_2" / 10 + "RF_Join_CTE"."Score_4_2" / 10 + "RF_Join_CTE"."Score_5_2" / 10 + "RF_Join_CTE"."Score_6_2" / 10 + "RF_Join_CTE"."Score_7_2" / 10 + "RF_Join_CTE"."Score_8_2" / 10 + "RF_Join_CTE"."Score_9_2" / 10 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 10 + "RF_Join_CTE"."Proba_1_2" / 10 + "RF_Join_CTE"."Proba_2_2" / 10 + "RF_Join_CTE"."Proba_3_2" / 10 + "RF_Join_CTE"."Proba_4_2" / 10 + "RF_Join_CTE"."Proba_5_2" / 10 + "RF_Join_CTE"."Proba_6_2" / 10 + "RF_Join_CTE"."Proba_7_2" / 10 + "RF_Join_CTE"."Proba_8_2" / 10 + "RF_Join_CTE"."Proba_9_2" / 10 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 10 + "RF_Join_CTE"."LogProba_1_2" / 10 + "RF_Join_CTE"."LogProba_2_2" / 10 + "RF_Join_CTE"."LogProba_3_2" / 10 + "RF_Join_CTE"."LogProba_4_2" / 10 + "RF_Join_CTE"."LogProba_5_2" / 10 + "RF_Join_CTE"."LogProba_6_2" / 10 + "RF_Join_CTE"."LogProba_7_2" / 10 + "RF_Join_CTE"."LogProba_8_2" / 10 + "RF_Join_CTE"."LogProba_9_2" / 10 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 10 + "RF_Join_CTE"."Score_1_3" / 10 + "RF_Join_CTE"."Score_2_3" / 10 + "RF_Join_CTE"."Score_3_3" / 10 + "RF_Join_CTE"."Score_4_3" / 10 + "RF_Join_CTE"."Score_5_3" / 10 + "RF_Join_CTE"."Score_6_3" / 10 + "RF_Join_CTE"."Score_7_3" / 10 + "RF_Join_CTE"."Score_8_3" / 10 + "RF_Join_CTE"."Score_9_3" / 10 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 10 + "RF_Join_CTE"."Proba_1_3" / 10 + "RF_Join_CTE"."Proba_2_3" / 10 + "RF_Join_CTE"."Proba_3_3" / 10 + "RF_Join_CTE"."Proba_4_3" / 10 + "RF_Join_CTE"."Proba_5_3" / 10 + "RF_Join_CTE"."Proba_6_3" / 10 + "RF_Join_CTE"."Proba_7_3" / 10 + "RF_Join_CTE"."Proba_8_3" / 10 + "RF_Join_CTE"."Proba_9_3" / 10 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 10 + "RF_Join_CTE"."LogProba_1_3" / 10 + "RF_Join_CTE"."LogProba_2_3" / 10 + "RF_Join_CTE"."LogProba_3_3" / 10 + "RF_Join_CTE"."LogProba_4_3" / 10 + "RF_Join_CTE"."LogProba_5_3" / 10 + "RF_Join_CTE"."LogProba_6_3" / 10 + "RF_Join_CTE"."LogProba_7_3" / 10 + "RF_Join_CTE"."LogProba_8_3" / 10 + "RF_Join_CTE"."LogProba_9_3" / 10 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte