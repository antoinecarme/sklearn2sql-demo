-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.460846226785 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.500327038778 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.487262648426 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.488720081894 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.491099195657 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.501401674941 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.454552929447 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.53118876091 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.487389848554 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.543831726781 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.460846226785 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.500327038778 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.487262648426 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.488720081894 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.491099195657 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.501401674941 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.454552929447 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.53118876091 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.487389848554 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.543831726781 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.309428763858 + "CenteredDataForPCA".impute_3 * -0.0129625162386 + "CenteredDataForPCA".impute_4 * -0.475527169895 + "CenteredDataForPCA".impute_5 * -0.0608524323516 + "CenteredDataForPCA".impute_6 * 0.319718755838 + "CenteredDataForPCA".impute_7 * 0.138655428739 + "CenteredDataForPCA".impute_8 * 0.107434797656 + "CenteredDataForPCA".impute_9 * -0.00879121121701 + "CenteredDataForPCA".impute_10 * 0.574325980095 + "CenteredDataForPCA".impute_11 * 0.459718872933 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.348235328743 + "CenteredDataForPCA".impute_3 * 0.16682793463 + "CenteredDataForPCA".impute_4 * -0.0729128184073 + "CenteredDataForPCA".impute_5 * -0.455386903502 + "CenteredDataForPCA".impute_6 * 0.089672024161 + "CenteredDataForPCA".impute_7 * -0.213634211125 + "CenteredDataForPCA".impute_8 * 0.442208527656 + "CenteredDataForPCA".impute_9 * -0.359999312006 + "CenteredDataForPCA".impute_10 * -0.490048958239 + "CenteredDataForPCA".impute_11 * 0.138674326916 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.146961801289 + "CenteredDataForPCA".impute_3 * -0.335918339315 + "CenteredDataForPCA".impute_4 * -0.15188500386 + "CenteredDataForPCA".impute_5 * 0.346858257942 + "CenteredDataForPCA".impute_6 * 0.54015804986 + "CenteredDataForPCA".impute_7 * -0.482488591401 + "CenteredDataForPCA".impute_8 * -0.234762771007 + "CenteredDataForPCA".impute_9 * -0.336283045645 + "CenteredDataForPCA".impute_10 * -0.171193127338 + "CenteredDataForPCA".impute_11 * 0.0104163729378 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.477737465122 + "CenteredDataForPCA".impute_3 * -0.328988489788 + "CenteredDataForPCA".impute_4 * -0.395530099735 + "CenteredDataForPCA".impute_5 * 0.070899906561 + "CenteredDataForPCA".impute_6 * -0.476321640365 + "CenteredDataForPCA".impute_7 * 0.059689264083 + "CenteredDataForPCA".impute_8 * 0.378920475758 + "CenteredDataForPCA".impute_9 * -0.347235513799 + "CenteredDataForPCA".impute_10 * 0.046007080975 + "CenteredDataForPCA".impute_11 * 0.0731275436545 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.254155366358 + "CenteredDataForPCA".impute_3 * -0.566562891457 + "CenteredDataForPCA".impute_4 * -0.293709843713 + "CenteredDataForPCA".impute_5 * -0.21559431978 + "CenteredDataForPCA".impute_6 * -0.0937888293354 + "CenteredDataForPCA".impute_7 * 0.337442003231 + "CenteredDataForPCA".impute_8 * -0.379380407826 + "CenteredDataForPCA".impute_9 * 0.206553048583 + "CenteredDataForPCA".impute_10 * -0.412025157813 + "CenteredDataForPCA".impute_11 * 0.0514132309243 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.144718508295 + "CenteredDataForPCA".impute_3 * 0.120051326711 + "CenteredDataForPCA".impute_4 * 0.0189328973055 + "CenteredDataForPCA".impute_5 * 0.488315817198 + "CenteredDataForPCA".impute_6 * 0.18950402514 + "CenteredDataForPCA".impute_7 * 0.265339286608 + "CenteredDataForPCA".impute_8 * 0.341029319928 + "CenteredDataForPCA".impute_9 * 0.356467137663 + "CenteredDataForPCA".impute_10 * -0.42991416947 + "CenteredDataForPCA".impute_11 * 0.437402237566 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.130246231941 + "CenteredDataForPCA".impute_3 * -0.356602081416 + "CenteredDataForPCA".impute_4 * 0.079360616171 + "CenteredDataForPCA".impute_5 * -0.287358272782 + "CenteredDataForPCA".impute_6 * 0.00776734981986 + "CenteredDataForPCA".impute_7 * -0.539166590674 + "CenteredDataForPCA".impute_8 * 0.288056402001 + "CenteredDataForPCA".impute_9 * 0.611368008541 + "CenteredDataForPCA".impute_10 * 0.112098877058 + "CenteredDataForPCA".impute_11 * 0.0832079034617 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.396937263322 + "CenteredDataForPCA".impute_3 * -0.254196399492 + "CenteredDataForPCA".impute_4 * 0.422526955524 + "CenteredDataForPCA".impute_5 * -0.403333713572 + "CenteredDataForPCA".impute_6 * 0.448032752448 + "CenteredDataForPCA".impute_7 * 0.424850199382 + "CenteredDataForPCA".impute_8 * 0.101547486237 + "CenteredDataForPCA".impute_9 * -0.181305757559 + "CenteredDataForPCA".impute_10 * 0.0849229330286 + "CenteredDataForPCA".impute_11 * 0.0706489448169 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.497353274075 + "CenteredDataForPCA".impute_3 * 0.459115119822 + "CenteredDataForPCA".impute_4 * -0.511789640267 + "CenteredDataForPCA".impute_5 * -0.336991176801 + "CenteredDataForPCA".impute_6 * 0.192842549831 + "CenteredDataForPCA".impute_7 * -0.0137543009039 + "CenteredDataForPCA".impute_8 * -0.227529622131 + "CenteredDataForPCA".impute_9 * 0.205260383918 + "CenteredDataForPCA".impute_10 * -0.153158528238 + "CenteredDataForPCA".impute_11 * -0.107818456895 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.160415682584 + "CenteredDataForPCA".impute_3 * -0.113808954146 + "CenteredDataForPCA".impute_4 * -0.235933929494 + "CenteredDataForPCA".impute_5 * 0.14083017792 + "CenteredDataForPCA".impute_6 * 0.29731426685 + "CenteredDataForPCA".impute_7 * 0.207647583829 + "CenteredDataForPCA".impute_8 * 0.434656754447 + "CenteredDataForPCA".impute_9 * 0.134747891334 + "CenteredDataForPCA".impute_10 * 0.0274121765529 + "CenteredDataForPCA".impute_11 * -0.739234850684 AS anoova_11 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.04032604396343231) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.16055825352668762) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= 0.23082640767097473) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.4189160466194153) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.028978921473026276) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 0.3204483687877655) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.08063513785600662) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.04032604396343231 AS threshold, 64 AS count, 0 AS depth, 13.777652581394136 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.16055825352668762 AS threshold, 31 AS count, 1 AS depth, 16.84764068008348 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, 0.23082640767097473 AS threshold, 10 AS count, 2 AS depth, 20.710903375621896 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 21.954530837995986 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 15.321851038667523 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_3' AS feature, 0.4189160466194153 AS threshold, 21 AS count, 2 AS depth, 14.853698643676559 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 15.590769133869646 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 7.97437406854104 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_7' AS feature, -0.028978921473026276 AS threshold, 33 AS count, 1 AS depth, 11.05521030519792 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_8' AS feature, 0.3204483687877655 AS threshold, 16 AS count, 2 AS depth, 8.21390437566108 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9.466007851023914 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 4.040226124451639 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_3' AS feature, -0.08063513785600662 AS threshold, 17 AS count, 2 AS depth, 13.791282681788951 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 17.197790659424015 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 12.599004889616678 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.08579539507627487) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 0.431132972240448) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.0067587546072900295) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.355336457490921) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.020983638241887093) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.18696793913841248) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= 0.04491177573800087) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.08579539507627487 AS threshold, 64 AS count, 0 AS depth, 13.975164395923585 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, 0.431132972240448 AS threshold, 31 AS count, 1 AS depth, 16.720379806645422 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, -0.0067587546072900295 AS threshold, 28 AS count, 2 AS depth, 17.439572260007253 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 19.302211991588823 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 16.275422427768785 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, -0.355336457490921 AS threshold, 3 AS count, 2 AS depth, 11.110678670423118 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7.815766890539257 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 11.934406615394083 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_7' AS feature, -0.020983638241887093 AS threshold, 33 AS count, 1 AS depth, 11.818209430356415 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_8' AS feature, -0.18696793913841248 AS threshold, 17 AS count, 2 AS depth, 9.944105995040264 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 14.226662395555419 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 8.581474413058167 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_10' AS feature, 0.04491177573800087 AS threshold, 16 AS count, 2 AS depth, 13.831135342362657 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 11.854521371985504 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 17.19137909200382 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.27207958698272705) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.6472262144088745) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.34799090027809143) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 0.0477830171585083) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.22169721126556396) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.1027527004480362) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.42870551347732544) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, 0.27207958698272705 AS threshold, 64 AS count, 0 AS depth, 14.566184317602223 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 0.6472262144088745 AS threshold, 53 AS count, 1 AS depth, 15.574976085191379 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.34799090027809143 AS threshold, 50 AS count, 2 AS depth, 15.157978886297848 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9.72692970183333 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 15.69343443969576 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 0.0477830171585083 AS threshold, 3 AS count, 2 AS depth, 23.706421463615158 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 22.36900582749099 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 25.043837099739324 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_8' AS feature, -0.22169721126556396 AS threshold, 11 AS count, 1 AS depth, 9.970577376362746 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_5' AS feature, 0.1027527004480362 AS threshold, 2 AS count, 2 AS depth, 13.306375160628438 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13.103726912185191 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 13.441473992923932 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.42870551347732544 AS threshold, 9 AS count, 2 AS depth, 8.68757822856825 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 10.054869714562049 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 6.499911850978177 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.2025163173675537) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.12398412078619003) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.397185742855072) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.10356853902339935) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.17465487122535706) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= 0.23082640767097473) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.4189160466194153) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -0.2025163173675537 AS threshold, 62 AS count, 0 AS depth, 14.294648374806634 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 0.12398412078619003 AS threshold, 13 AS count, 1 AS depth, 8.188285342969637 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_8' AS feature, -0.397185742855072 AS threshold, 10 AS count, 2 AS depth, 7.237108567365158 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17.488898753544067 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 6.697540662829426 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_3' AS feature, -0.10356853902339935 AS threshold, 3 AS count, 2 AS depth, 12.944169220992041 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 11.491324594961307 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17.302703099084237 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_3' AS feature, -0.17465487122535706 AS threshold, 49 AS count, 1 AS depth, 16.222973542755156 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_11' AS feature, 0.23082640767097473 AS threshold, 13 AS count, 2 AS depth, 19.70054055596567 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 20.98638691251652 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 14.557155129762279 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_3' AS feature, 0.4189160466194153 AS threshold, 36 AS count, 2 AS depth, 14.9809853237514 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 15.681751795924438 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9.141264722309414 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.04772382602095604) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.12702429294586182) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.12383033335208893) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.010296527296304703) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.15618354082107544) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 0.006406223401427269) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.00601173285394907) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.04772382602095604 AS threshold, 65 AS count, 0 AS depth, 14.368817362738618 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.12702429294586182 AS threshold, 30 AS count, 1 AS depth, 17.034620693747282 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -0.12383033335208893 AS threshold, 11 AS count, 2 AS depth, 19.89114138741742 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 13.563284865056696 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 20.73485559039885 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, 0.010296527296304703 AS threshold, 19 AS count, 2 AS depth, 15.011251869064273 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 13.316222514916511 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 18.401310577359805 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_11' AS feature, -0.15618354082107544 AS threshold, 35 AS count, 1 AS depth, 12.516309963224126 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_2' AS feature, 0.006406223401427269 AS threshold, 9 AS count, 2 AS depth, 8.970067343358444 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 10.467647835160422 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 5.076358064673301 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_7' AS feature, 0.00601173285394907 AS threshold, 26 AS count, 2 AS depth, 14.073196967067588 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 11.054555306644916 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 15.814721001926829 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.04032604396343231) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.09392830729484558) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.16658738255500793) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.0024444013833999634) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 0.3453742563724518) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.3391270637512207) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.11889326572418213) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.04032604396343231 AS threshold, 63 AS count, 0 AS depth, 14.095500279995388 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 0.09392830729484558 AS threshold, 30 AS count, 1 AS depth, 17.589078042046296 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_6' AS feature, -0.16658738255500793 AS threshold, 21 AS count, 2 AS depth, 16.29403569361121 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 16.998145399755998 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 13.242893633650477 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_11' AS feature, -0.0024444013833999634 AS threshold, 9 AS count, 2 AS depth, 19.891375550375326 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 21.56181052062432 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 17.26640631141263 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_8' AS feature, 0.3453742563724518 AS threshold, 33 AS count, 1 AS depth, 10.601922517944478 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_3' AS feature, -0.3391270637512207 AS threshold, 30 AS count, 2 AS depth, 11.851515905985316 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 17.04856048584353 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 11.149212584382855 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_3' AS feature, 0.11889326572418213 AS threshold, 3 AS count, 2 AS depth, 4.0415572307300796 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 5.549502330112209 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 3.1367901711008015 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.26022449135780334) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.19063466787338257) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.44494742155075073) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.160043865442276) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.4189160466194153) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.008270484395325184) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.26603278517723083) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -0.26022449135780334 AS threshold, 58 AS count, 0 AS depth, 14.562717062957704 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.19063466787338257 AS threshold, 10 AS count, 1 AS depth, 7.2986479007769525 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -0.44494742155075073 AS threshold, 3 AS count, 2 AS depth, 12.647849675762943 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 10.320422964102296 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 17.302703099084237 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, 0.160043865442276 AS threshold, 7 AS count, 2 AS depth, 5.961347457030455 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 7.053864440289213 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 3.7763134905129405 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_3' AS feature, 0.4189160466194153 AS threshold, 48 AS count, 1 AS depth, 15.8446116209896 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_6' AS feature, -0.008270484395325184 AS threshold, 41 AS count, 2 AS depth, 16.710909776138944 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 18.583649186179457 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 14.135893087333242 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.26603278517723083 AS threshold, 7 AS count, 2 AS depth, 8.529204977506218 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 10.299397161602402 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 6.316464747385988 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, "DT_Output_6"."Estimator" AS "Estimator_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.4555443525314331) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.22427044808864594) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.5100841522216797) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.4892089068889618) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.02416633442044258) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= -0.021251432597637177) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.028245875611901283) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.4555443525314331 AS threshold, 64 AS count, 0 AS depth, 14.392120076708464 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.22427044808864594 AS threshold, 60 AS count, 1 AS depth, 13.812341382446537 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 0.5100841522216797 AS threshold, 10 AS count, 2 AS depth, 18.203795933420963 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 16.532947483057896 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 22.798629171919405 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.4892089068889618 AS threshold, 50 AS count, 2 AS depth, 12.956863223165797 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 17.923583397162126 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 12.215561704658882 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 0.02416633442044258 AS threshold, 4 AS count, 1 AS depth, 21.05957506072072 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, -0.021251432597637177 AS threshold, 2 AS count, 2 AS depth, 20.111130486296275 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 18.301561726196937 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 20.56352267632111 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, -0.028245875611901283 AS threshold, 2 AS count, 2 AS depth, 22.640316018094804 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 23.52298955113134 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 22.198979251576535 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, "DT_Output_7"."Estimator" AS "Estimator_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.27207958698272705) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.0106269009411335) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 0.07298677414655685) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.31123173236846924) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.3126939535140991) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.2853319048881531) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= -0.3928148150444031) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, 0.27207958698272705 AS threshold, 65 AS count, 0 AS depth, 14.922897556581143 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, -0.0106269009411335 AS threshold, 56 AS count, 1 AS depth, 16.139245069105236 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_8' AS feature, 0.07298677414655685 AS threshold, 24 AS count, 2 AS depth, 14.021218007752243 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 15.89728243093936 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 9.956411757513484 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -0.31123173236846924 AS threshold, 32 AS count, 2 AS depth, 17.968450258455547 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 14.145905142675835 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 18.691634469549008 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_9' AS feature, 0.3126939535140991 AS threshold, 9 AS count, 1 AS depth, 9.381758888415796 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_8' AS feature, -0.2853319048881531 AS threshold, 7 AS count, 2 AS depth, 10.91607576858713 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 14.565593180711355 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 10.10507189922619 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_10' AS feature, -0.3928148150444031 AS threshold, 2 AS count, 2 AS depth, 6.970689505289421 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 6.826594749977612 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 7.078760571773278 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, "DT_Output_8"."Estimator" AS "Estimator_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.07823316007852554) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.4189160466194153) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 0.0819011703133583) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.09871236979961395) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.20734144747257233) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.19170570373535156) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.44262126088142395) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.07823316007852554 AS threshold, 61 AS count, 0 AS depth, 15.214298203018163 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 0.4189160466194153 AS threshold, 33 AS count, 1 AS depth, 17.627224673596366 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.0819011703133583 AS threshold, 31 AS count, 2 AS depth, 17.953545908338214 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 18.872472141968476 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 16.064641983653793 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_9' AS feature, 0.09871236979961395 AS threshold, 2 AS count, 2 AS depth, 8.653390718195455 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 10.6904406671587 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 6.61634076923221 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_11' AS feature, -0.20734144747257233 AS threshold, 28 AS count, 1 AS depth, 12.015767765274973 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_2' AS feature, -0.19170570373535156 AS threshold, 5 AS count, 2 AS depth, 7.2442342137806595 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 10.621907006371273 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 6.118343282917121 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_7' AS feature, 0.44262126088142395 AS threshold, 23 AS count, 2 AS depth, 13.10640400561653 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 12.800033842513153 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 23.52298955113134 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, "DT_Output_9"."Estimator" AS "Estimator_9" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Estimator_0" AS "Estimator_0", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Estimator_1" AS "Estimator_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Estimator_2" AS "Estimator_2", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Estimator_3" AS "Estimator_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Estimator_4" AS "Estimator_4", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Estimator_5" AS "Estimator_5", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Estimator_6" AS "Estimator_6", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Estimator_7" AS "Estimator_7", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Estimator_8" AS "Estimator_8", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Estimator_9" AS "Estimator_9" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Estimator_0" / 10 + "RF_Join_CTE"."Estimator_1" / 10 + "RF_Join_CTE"."Estimator_2" / 10 + "RF_Join_CTE"."Estimator_3" / 10 + "RF_Join_CTE"."Estimator_4" / 10 + "RF_Join_CTE"."Estimator_5" / 10 + "RF_Join_CTE"."Estimator_6" / 10 + "RF_Join_CTE"."Estimator_7" / 10 + "RF_Join_CTE"."Estimator_8" / 10 + "RF_Join_CTE"."Estimator_9" / 10 AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"