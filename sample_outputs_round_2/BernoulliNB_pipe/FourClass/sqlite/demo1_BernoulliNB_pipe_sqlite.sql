-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.388842118622 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0165180118929 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.440711769181 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0705547604202 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.0575553196695 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.017619211357 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0813770331158 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0440882395593 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0418645668355 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0598133628265 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.00149583626693 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0288061500774 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.208445126553 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.109982781406 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0663488218503 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.0628821712981 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.138841384319 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0158285318364 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.248869284969 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.0596666587229 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.388842118622 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.0165180118929 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.440711769181 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.0705547604202 AS impute_5, "ADS_imp_1_OUT".impute_6 - -0.0575553196695 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.017619211357 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.0813770331158 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.0440882395593 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.0418645668355 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.0598133628265 AS impute_11, "ADS_imp_1_OUT".impute_12 - 0.00149583626693 AS impute_12, "ADS_imp_1_OUT".impute_13 - -0.0288061500774 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.208445126553 AS impute_14, "ADS_imp_1_OUT".impute_15 - 0.109982781406 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.0663488218503 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.0628821712981 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.138841384319 AS impute_18, "ADS_imp_1_OUT".impute_19 - 0.0158285318364 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.248869284969 AS impute_20, "ADS_imp_1_OUT".impute_21 - 0.0596666587229 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.0988278518412 + "CenteredDataForPCA".impute_3 * -0.0590400562791 + "CenteredDataForPCA".impute_4 * 0.338526460351 + "CenteredDataForPCA".impute_5 * -0.0527456830228 + "CenteredDataForPCA".impute_6 * 0.0190505474109 + "CenteredDataForPCA".impute_7 * 0.117048743537 + "CenteredDataForPCA".impute_8 * 0.05101692137 + "CenteredDataForPCA".impute_9 * -0.10499605449 + "CenteredDataForPCA".impute_10 * -0.00395278780809 + "CenteredDataForPCA".impute_11 * 0.04210816818 + "CenteredDataForPCA".impute_12 * -0.0489566596153 + "CenteredDataForPCA".impute_13 * -0.274410148904 + "CenteredDataForPCA".impute_14 * 0.0721217588629 + "CenteredDataForPCA".impute_15 * -0.700742607505 + "CenteredDataForPCA".impute_16 * 0.0922340387515 + "CenteredDataForPCA".impute_17 * -0.111609189957 + "CenteredDataForPCA".impute_18 * -0.32297750345 + "CenteredDataForPCA".impute_19 * 0.0181891339207 + "CenteredDataForPCA".impute_20 * -0.372714426263 + "CenteredDataForPCA".impute_21 * -0.0377039088092 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.655113764288 + "CenteredDataForPCA".impute_3 * 0.0182845808181 + "CenteredDataForPCA".impute_4 * -0.523168019395 + "CenteredDataForPCA".impute_5 * -0.0686352203167 + "CenteredDataForPCA".impute_6 * -0.089305919111 + "CenteredDataForPCA".impute_7 * -0.0530035788265 + "CenteredDataForPCA".impute_8 * 0.047173321349 + "CenteredDataForPCA".impute_9 * 0.0269263199223 + "CenteredDataForPCA".impute_10 * 0.0904448665357 + "CenteredDataForPCA".impute_11 * -0.0649045991114 + "CenteredDataForPCA".impute_12 * -0.0442080974806 + "CenteredDataForPCA".impute_13 * 0.250874181267 + "CenteredDataForPCA".impute_14 * -0.0214148238349 + "CenteredDataForPCA".impute_15 * 0.0158410461936 + "CenteredDataForPCA".impute_16 * -0.0537612031432 + "CenteredDataForPCA".impute_17 * 0.048109363877 + "CenteredDataForPCA".impute_18 * -0.360253918928 + "CenteredDataForPCA".impute_19 * 0.0215878791254 + "CenteredDataForPCA".impute_20 * -0.254225105912 + "CenteredDataForPCA".impute_21 * 0.0161880971111 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.0615804448715 + "CenteredDataForPCA".impute_3 * 0.0298524799981 + "CenteredDataForPCA".impute_4 * 0.116680127845 + "CenteredDataForPCA".impute_5 * -0.0624530802283 + "CenteredDataForPCA".impute_6 * 0.0117512113776 + "CenteredDataForPCA".impute_7 * -0.164328306119 + "CenteredDataForPCA".impute_8 * 0.0272017066995 + "CenteredDataForPCA".impute_9 * 0.0619074872749 + "CenteredDataForPCA".impute_10 * -0.0400553440469 + "CenteredDataForPCA".impute_11 * -0.144294287436 + "CenteredDataForPCA".impute_12 * 0.00148484583623 + "CenteredDataForPCA".impute_13 * -0.112094683836 + "CenteredDataForPCA".impute_14 * 0.0908417589536 + "CenteredDataForPCA".impute_15 * 0.139072069099 + "CenteredDataForPCA".impute_16 * 0.088364493159 + "CenteredDataForPCA".impute_17 * -0.138798630302 + "CenteredDataForPCA".impute_18 * -0.731739743306 + "CenteredDataForPCA".impute_19 * -0.0617504111922 + "CenteredDataForPCA".impute_20 * 0.555492470558 + "CenteredDataForPCA".impute_21 * -0.0927379741481 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.0739149047812 + "CenteredDataForPCA".impute_3 * 0.0725467042025 + "CenteredDataForPCA".impute_4 * -0.268831806093 + "CenteredDataForPCA".impute_5 * -0.0409336024684 + "CenteredDataForPCA".impute_6 * 0.0102586464731 + "CenteredDataForPCA".impute_7 * -0.183746316257 + "CenteredDataForPCA".impute_8 * -0.212269844882 + "CenteredDataForPCA".impute_9 * -0.0390876355729 + "CenteredDataForPCA".impute_10 * 0.115936996 + "CenteredDataForPCA".impute_11 * 0.0720277409955 + "CenteredDataForPCA".impute_12 * -0.0136833454369 + "CenteredDataForPCA".impute_13 * -0.803401811376 + "CenteredDataForPCA".impute_14 * -0.197254997799 + "CenteredDataForPCA".impute_15 * 0.222473021512 + "CenteredDataForPCA".impute_16 * -0.101669783743 + "CenteredDataForPCA".impute_17 * 0.126934219767 + "CenteredDataForPCA".impute_18 * -0.0800731877793 + "CenteredDataForPCA".impute_19 * -0.0209550863652 + "CenteredDataForPCA".impute_20 * -0.204295391701 + "CenteredDataForPCA".impute_21 * 0.0846276449454 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.0081354961038 + "CenteredDataForPCA".impute_3 * 0.0743492772824 + "CenteredDataForPCA".impute_4 * 0.0651100040167 + "CenteredDataForPCA".impute_5 * 0.0153350806186 + "CenteredDataForPCA".impute_6 * 0.139870792196 + "CenteredDataForPCA".impute_7 * -0.499435108883 + "CenteredDataForPCA".impute_8 * 0.309119338883 + "CenteredDataForPCA".impute_9 * -0.34521330802 + "CenteredDataForPCA".impute_10 * -0.0955140561082 + "CenteredDataForPCA".impute_11 * -0.148520089359 + "CenteredDataForPCA".impute_12 * 0.256428660322 + "CenteredDataForPCA".impute_13 * 0.0268648276031 + "CenteredDataForPCA".impute_14 * 0.184854239002 + "CenteredDataForPCA".impute_15 * -0.0917199784258 + "CenteredDataForPCA".impute_16 * -0.281284074115 + "CenteredDataForPCA".impute_17 * 0.451468781149 + "CenteredDataForPCA".impute_18 * 0.0347781693203 + "CenteredDataForPCA".impute_19 * -0.143037603196 + "CenteredDataForPCA".impute_20 * -0.0454025671939 + "CenteredDataForPCA".impute_21 * -0.243490508187 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.0106256430095 + "CenteredDataForPCA".impute_3 * 0.101617869602 + "CenteredDataForPCA".impute_4 * -0.0308968621336 + "CenteredDataForPCA".impute_5 * -0.010536147129 + "CenteredDataForPCA".impute_6 * 0.0276424916097 + "CenteredDataForPCA".impute_7 * 0.442772604311 + "CenteredDataForPCA".impute_8 * 0.0100814721373 + "CenteredDataForPCA".impute_9 * -0.346877955467 + "CenteredDataForPCA".impute_10 * 0.164144366943 + "CenteredDataForPCA".impute_11 * 0.209361802553 + "CenteredDataForPCA".impute_12 * 0.324876681374 + "CenteredDataForPCA".impute_13 * -0.00852376262317 + "CenteredDataForPCA".impute_14 * 0.220021743171 + "CenteredDataForPCA".impute_15 * 0.0665422561911 + "CenteredDataForPCA".impute_16 * -0.438340362077 + "CenteredDataForPCA".impute_17 * -0.165506931493 + "CenteredDataForPCA".impute_18 * -0.102110925398 + "CenteredDataForPCA".impute_19 * -0.342741096542 + "CenteredDataForPCA".impute_20 * 0.0856560110788 + "CenteredDataForPCA".impute_21 * 0.295393093624 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.0523568762141 + "CenteredDataForPCA".impute_3 * 0.347070630162 + "CenteredDataForPCA".impute_4 * 0.122381325605 + "CenteredDataForPCA".impute_5 * -0.364579104068 + "CenteredDataForPCA".impute_6 * -0.511009303905 + "CenteredDataForPCA".impute_7 * -0.344448406143 + "CenteredDataForPCA".impute_8 * 0.00497031704473 + "CenteredDataForPCA".impute_9 * -0.129067529284 + "CenteredDataForPCA".impute_10 * -0.000434334570609 + "CenteredDataForPCA".impute_11 * 0.105196202361 + "CenteredDataForPCA".impute_12 * -0.0111876190753 + "CenteredDataForPCA".impute_13 * 0.0956478933521 + "CenteredDataForPCA".impute_14 * 0.0198711382517 + "CenteredDataForPCA".impute_15 * -0.0806095645263 + "CenteredDataForPCA".impute_16 * -0.0555469320199 + "CenteredDataForPCA".impute_17 * -0.0717395664828 + "CenteredDataForPCA".impute_18 * 0.0346728441941 + "CenteredDataForPCA".impute_19 * 0.293048474826 + "CenteredDataForPCA".impute_20 * 0.0408048589538 + "CenteredDataForPCA".impute_21 * 0.456330718439 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.0135180031487 + "CenteredDataForPCA".impute_3 * -0.311071718186 + "CenteredDataForPCA".impute_4 * 0.147648047439 + "CenteredDataForPCA".impute_5 * -0.18618310138 + "CenteredDataForPCA".impute_6 * 0.0815204076101 + "CenteredDataForPCA".impute_7 * -0.00981159057487 + "CenteredDataForPCA".impute_8 * -0.288119218643 + "CenteredDataForPCA".impute_9 * -0.247387243252 + "CenteredDataForPCA".impute_10 * 0.353734422702 + "CenteredDataForPCA".impute_11 * 0.308273074439 + "CenteredDataForPCA".impute_12 * -0.269024645231 + "CenteredDataForPCA".impute_13 * 0.214391112293 + "CenteredDataForPCA".impute_14 * -0.324338777269 + "CenteredDataForPCA".impute_15 * -0.0722232955072 + "CenteredDataForPCA".impute_16 * -0.0458066029258 + "CenteredDataForPCA".impute_17 * 0.442553384928 + "CenteredDataForPCA".impute_18 * -0.122823924779 + "CenteredDataForPCA".impute_19 * -0.0407336155057 + "CenteredDataForPCA".impute_20 * 0.176983022653 + "CenteredDataForPCA".impute_21 * 0.0265125756481 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.0600129734166 + "CenteredDataForPCA".impute_3 * -0.131386854888 + "CenteredDataForPCA".impute_4 * -0.00272744991829 + "CenteredDataForPCA".impute_5 * 0.00781890843489 + "CenteredDataForPCA".impute_6 * 0.215256741265 + "CenteredDataForPCA".impute_7 * 0.0370843559528 + "CenteredDataForPCA".impute_8 * -0.273448752658 + "CenteredDataForPCA".impute_9 * -0.0656890392077 + "CenteredDataForPCA".impute_10 * -0.303920168638 + "CenteredDataForPCA".impute_11 * 0.0720610978141 + "CenteredDataForPCA".impute_12 * 0.670737091226 + "CenteredDataForPCA".impute_13 * 0.0575413951284 + "CenteredDataForPCA".impute_14 * -0.251303709458 + "CenteredDataForPCA".impute_15 * -0.0287354274372 + "CenteredDataForPCA".impute_16 * 0.0620922512961 + "CenteredDataForPCA".impute_17 * 0.0476190778508 + "CenteredDataForPCA".impute_18 * -0.103702231509 + "CenteredDataForPCA".impute_19 * 0.461156060537 + "CenteredDataForPCA".impute_20 * 0.0280518295089 + "CenteredDataForPCA".impute_21 * 0.0848503198449 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.039665472302 + "CenteredDataForPCA".impute_3 * 0.105999231461 + "CenteredDataForPCA".impute_4 * -0.121403814374 + "CenteredDataForPCA".impute_5 * -0.0987389908563 + "CenteredDataForPCA".impute_6 * -0.00817197750185 + "CenteredDataForPCA".impute_7 * 0.0579767353219 + "CenteredDataForPCA".impute_8 * 0.117995181283 + "CenteredDataForPCA".impute_9 * -0.510524629657 + "CenteredDataForPCA".impute_10 * -0.544646997995 + "CenteredDataForPCA".impute_11 * 0.36286826564 + "CenteredDataForPCA".impute_12 * -0.251833539662 + "CenteredDataForPCA".impute_13 * -0.00963849749636 + "CenteredDataForPCA".impute_14 * -0.194696387537 + "CenteredDataForPCA".impute_15 * 0.123235381151 + "CenteredDataForPCA".impute_16 * 0.176169313288 + "CenteredDataForPCA".impute_17 * -0.19794617822 + "CenteredDataForPCA".impute_18 * 0.00417808096053 + "CenteredDataForPCA".impute_19 * -0.0812414250921 + "CenteredDataForPCA".impute_20 * 0.0134001167418 + "CenteredDataForPCA".impute_21 * -0.250559942766 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.0363140499869 + "CenteredDataForPCA".impute_3 * 0.382027407448 + "CenteredDataForPCA".impute_4 * 0.0505051673855 + "CenteredDataForPCA".impute_5 * 0.240603743694 + "CenteredDataForPCA".impute_6 * 0.459295431828 + "CenteredDataForPCA".impute_7 * -0.193523609813 + "CenteredDataForPCA".impute_8 * -0.403843665332 + "CenteredDataForPCA".impute_9 * -0.201210761083 + "CenteredDataForPCA".impute_10 * 0.0519857546995 + "CenteredDataForPCA".impute_11 * -0.243199425957 + "CenteredDataForPCA".impute_12 * -0.286969014723 + "CenteredDataForPCA".impute_13 * 0.140841177731 + "CenteredDataForPCA".impute_14 * -0.0674575811285 + "CenteredDataForPCA".impute_15 * -0.0837899176164 + "CenteredDataForPCA".impute_16 * -0.241188606222 + "CenteredDataForPCA".impute_17 * -0.296365207475 + "CenteredDataForPCA".impute_18 * 0.0178877358891 + "CenteredDataForPCA".impute_19 * 0.119770882365 + "CenteredDataForPCA".impute_20 * -0.0114249006752 + "CenteredDataForPCA".impute_21 * 0.0625236530981 AS anoova_12, "CenteredDataForPCA".impute_2 * -0.0185982334923 + "CenteredDataForPCA".impute_3 * -0.418786521188 + "CenteredDataForPCA".impute_4 * -0.0923300839261 + "CenteredDataForPCA".impute_5 * 0.00440015225365 + "CenteredDataForPCA".impute_6 * -0.0712988944137 + "CenteredDataForPCA".impute_7 * -0.334359696386 + "CenteredDataForPCA".impute_8 * -0.274751606198 + "CenteredDataForPCA".impute_9 * -0.27116370799 + "CenteredDataForPCA".impute_10 * 0.256367118361 + "CenteredDataForPCA".impute_11 * 0.130251985551 + "CenteredDataForPCA".impute_12 * 0.112229790088 + "CenteredDataForPCA".impute_13 * 0.00340162173743 + "CenteredDataForPCA".impute_14 * 0.46797422267 + "CenteredDataForPCA".impute_15 * 0.0763993885037 + "CenteredDataForPCA".impute_16 * 0.226139442921 + "CenteredDataForPCA".impute_17 * -0.369940163754 + "CenteredDataForPCA".impute_18 * 0.112077272484 + "CenteredDataForPCA".impute_19 * 0.0458109123324 + "CenteredDataForPCA".impute_20 * -0.0538418386303 + "CenteredDataForPCA".impute_21 * -0.155378321621 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.030985303426 + "CenteredDataForPCA".impute_3 * -0.246855347565 + "CenteredDataForPCA".impute_4 * -0.0146010343117 + "CenteredDataForPCA".impute_5 * 0.280445298061 + "CenteredDataForPCA".impute_6 * -0.144722815383 + "CenteredDataForPCA".impute_7 * 0.134699063261 + "CenteredDataForPCA".impute_8 * 0.163785738702 + "CenteredDataForPCA".impute_9 * -0.0261461484358 + "CenteredDataForPCA".impute_10 * -0.0811237827751 + "CenteredDataForPCA".impute_11 * 0.127583257699 + "CenteredDataForPCA".impute_12 * -0.279293809119 + "CenteredDataForPCA".impute_13 * -0.0972084399617 + "CenteredDataForPCA".impute_14 * 0.206475268549 + "CenteredDataForPCA".impute_15 * 0.063087217998 + "CenteredDataForPCA".impute_16 * -0.500146769288 + "CenteredDataForPCA".impute_17 * 0.0445231911701 + "CenteredDataForPCA".impute_18 * -0.0867330010907 + "CenteredDataForPCA".impute_19 * 0.599765970346 + "CenteredDataForPCA".impute_20 * 0.0659082326071 + "CenteredDataForPCA".impute_21 * -0.109552442102 AS anoova_14, "CenteredDataForPCA".impute_2 * 0.0548373134513 + "CenteredDataForPCA".impute_3 * -0.309906070743 + "CenteredDataForPCA".impute_4 * -0.0320606733964 + "CenteredDataForPCA".impute_5 * -0.331653607202 + "CenteredDataForPCA".impute_6 * 0.0090511017049 + "CenteredDataForPCA".impute_7 * 0.173740550042 + "CenteredDataForPCA".impute_8 * 0.232834017559 + "CenteredDataForPCA".impute_9 * -0.369819388272 + "CenteredDataForPCA".impute_10 * 0.110324187752 + "CenteredDataForPCA".impute_11 * -0.653985962765 + "CenteredDataForPCA".impute_12 * -0.0437537678731 + "CenteredDataForPCA".impute_13 * -0.0672647857156 + "CenteredDataForPCA".impute_14 * -0.242239044724 + "CenteredDataForPCA".impute_15 * 0.0797655566412 + "CenteredDataForPCA".impute_16 * -0.0107485128324 + "CenteredDataForPCA".impute_17 * -0.163669505844 + "CenteredDataForPCA".impute_18 * 0.0816097209491 + "CenteredDataForPCA".impute_19 * 0.133933362629 + "CenteredDataForPCA".impute_20 * 0.00125796216936 + "CenteredDataForPCA".impute_21 * 0.0763538666057 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.00303424769316 + "CenteredDataForPCA".impute_3 * 0.151264381709 + "CenteredDataForPCA".impute_4 * -0.0855296338867 + "CenteredDataForPCA".impute_5 * -0.281164955103 + "CenteredDataForPCA".impute_6 * 0.424326860194 + "CenteredDataForPCA".impute_7 * 0.210496604522 + "CenteredDataForPCA".impute_8 * 0.0307622669377 + "CenteredDataForPCA".impute_9 * -0.0711964070293 + "CenteredDataForPCA".impute_10 * -0.0526138795478 + "CenteredDataForPCA".impute_11 * 0.0029139707008 + "CenteredDataForPCA".impute_12 * -0.174444344465 + "CenteredDataForPCA".impute_13 * -0.0692847812715 + "CenteredDataForPCA".impute_14 * 0.527284181833 + "CenteredDataForPCA".impute_15 * 0.100520224737 + "CenteredDataForPCA".impute_16 * 0.330675990706 + "CenteredDataForPCA".impute_17 * 0.332366806259 + "CenteredDataForPCA".impute_18 * 0.000465186738909 + "CenteredDataForPCA".impute_19 * 0.237375367295 + "CenteredDataForPCA".impute_20 * 0.00798752729262 + "CenteredDataForPCA".impute_21 * 0.240826176289 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.0138027790825 + "CenteredDataForPCA".impute_3 * -0.332841833641 + "CenteredDataForPCA".impute_4 * 0.00797712991493 + "CenteredDataForPCA".impute_5 * -0.438759658238 + "CenteredDataForPCA".impute_6 * 0.0883320349471 + "CenteredDataForPCA".impute_7 * -0.10672986532 + "CenteredDataForPCA".impute_8 * -0.287847741487 + "CenteredDataForPCA".impute_9 * 0.286447507737 + "CenteredDataForPCA".impute_10 * -0.489547290227 + "CenteredDataForPCA".impute_11 * -0.0626034748761 + "CenteredDataForPCA".impute_12 * -0.132364852344 + "CenteredDataForPCA".impute_13 * 0.0194685057033 + "CenteredDataForPCA".impute_14 * 0.150502261109 + "CenteredDataForPCA".impute_15 * -0.0422398634504 + "CenteredDataForPCA".impute_16 * -0.387739708295 + "CenteredDataForPCA".impute_17 * -0.0544853565081 + "CenteredDataForPCA".impute_18 * 0.0418825929259 + "CenteredDataForPCA".impute_19 * -0.24283737246 + "CenteredDataForPCA".impute_20 * -0.051440156821 + "CenteredDataForPCA".impute_21 * 0.0987850750517 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.0096735924128 + "CenteredDataForPCA".impute_3 * 0.0156228788445 + "CenteredDataForPCA".impute_4 * 0.00967570058372 + "CenteredDataForPCA".impute_5 * 0.316120433862 + "CenteredDataForPCA".impute_6 * -0.462815688423 + "CenteredDataForPCA".impute_7 * 0.199463493877 + "CenteredDataForPCA".impute_8 * -0.459489354452 + "CenteredDataForPCA".impute_9 * -0.241503203641 + "CenteredDataForPCA".impute_10 * -0.256856523068 + "CenteredDataForPCA".impute_11 * -0.364448907922 + "CenteredDataForPCA".impute_12 * -0.0492684768842 + "CenteredDataForPCA".impute_13 * -0.00651558706748 + "CenteredDataForPCA".impute_14 * 0.163872679658 + "CenteredDataForPCA".impute_15 * -0.0171910667435 + "CenteredDataForPCA".impute_16 * 0.135445059459 + "CenteredDataForPCA".impute_17 * 0.330194693718 + "CenteredDataForPCA".impute_18 * -0.0448699465525 + "CenteredDataForPCA".impute_19 * -0.130294429417 + "CenteredDataForPCA".impute_20 * 0.00857168630627 + "CenteredDataForPCA".impute_21 * 0.036647791833 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.0249745356459 + "CenteredDataForPCA".impute_3 * -0.340932055186 + "CenteredDataForPCA".impute_4 * -0.0110754413283 + "CenteredDataForPCA".impute_5 * 0.437199361548 + "CenteredDataForPCA".impute_6 * 0.133398971094 + "CenteredDataForPCA".impute_7 * -0.246373701063 + "CenteredDataForPCA".impute_8 * 0.259680482956 + "CenteredDataForPCA".impute_9 * -0.0606145743485 + "CenteredDataForPCA".impute_10 * -0.176002182736 + "CenteredDataForPCA".impute_11 * 0.0480916534529 + "CenteredDataForPCA".impute_12 * -0.114482765815 + "CenteredDataForPCA".impute_13 * -0.00477056056006 + "CenteredDataForPCA".impute_14 * -0.0745031185196 + "CenteredDataForPCA".impute_15 * -0.00609923018359 + "CenteredDataForPCA".impute_16 * 0.146671172734 + "CenteredDataForPCA".impute_17 * -0.0161746971638 + "CenteredDataForPCA".impute_18 * -0.0504733333048 + "CenteredDataForPCA".impute_19 * -0.154347646099 + "CenteredDataForPCA".impute_20 * 0.00374602751074 + "CenteredDataForPCA".impute_21 * 0.664911197765 AS anoova_19, "CenteredDataForPCA".impute_2 * -0.221082105285 + "CenteredDataForPCA".impute_3 * -2.77555756156e-16 + "CenteredDataForPCA".impute_4 * -0.369672253861 + "CenteredDataForPCA".impute_5 * -2.30718222305e-16 + "CenteredDataForPCA".impute_6 * -4.85722573274e-17 + "CenteredDataForPCA".impute_7 * -1.0007186052e-16 + "CenteredDataForPCA".impute_8 * 3.46944695195e-18 + "CenteredDataForPCA".impute_9 * 6.27210956783e-17 + "CenteredDataForPCA".impute_10 * -3.12250225676e-17 + "CenteredDataForPCA".impute_11 * -1.09287578987e-16 + "CenteredDataForPCA".impute_12 * -1.23165366794e-16 + "CenteredDataForPCA".impute_13 * -0.231536133907 + "CenteredDataForPCA".impute_14 * -5.76253454676e-17 + "CenteredDataForPCA".impute_15 * -0.5309709053 + "CenteredDataForPCA".impute_16 * -9.97465998687e-17 + "CenteredDataForPCA".impute_17 * -1.13190706807e-16 + "CenteredDataForPCA".impute_18 * 0.322020366401 + "CenteredDataForPCA".impute_19 * 2.08166817117e-17 + "CenteredDataForPCA".impute_20 * 0.612559325691 + "CenteredDataForPCA".impute_21 * 1.46367293286e-17 AS anoova_20, "CenteredDataForPCA".impute_2 * -0.698641052394 + "CenteredDataForPCA".impute_3 * 3.33066907388e-16 + "CenteredDataForPCA".impute_4 * 0.559037898778 + "CenteredDataForPCA".impute_5 * -4.85722573274e-17 + "CenteredDataForPCA".impute_6 * 4.16333634234e-17 + "CenteredDataForPCA".impute_7 * 0.0 + "CenteredDataForPCA".impute_8 * -8.32667268469e-17 + "CenteredDataForPCA".impute_9 * -3.59955121265e-17 + "CenteredDataForPCA".impute_10 * -1.94289029309e-16 + "CenteredDataForPCA".impute_11 * -9.71445146547e-17 + "CenteredDataForPCA".impute_12 * 1.11022302463e-16 + "CenteredDataForPCA".impute_13 * -0.227498868665 + "CenteredDataForPCA".impute_14 * 1.01915004214e-17 + "CenteredDataForPCA".impute_15 * 0.286277560679 + "CenteredDataForPCA".impute_16 * 6.24500451352e-17 + "CenteredDataForPCA".impute_17 * -1.38777878078e-17 + "CenteredDataForPCA".impute_18 * 0.21971751159 + "CenteredDataForPCA".impute_19 * -9.36750677027e-17 + "CenteredDataForPCA".impute_20 * 0.131874735067 + "CenteredDataForPCA".impute_21 * -1.47451495458e-17 AS anoova_21 
FROM "CenteredDataForPCA"), 
"RawScores" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "Proba_0", -1.38629436112 + "ADS_ano_2_OUT".anoova_2 * -0.204794412646 + (1 - "ADS_ano_2_OUT".anoova_2) * -1.68639895357 + "ADS_ano_2_OUT".anoova_3 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_3) * -0.810930216216 + "ADS_ano_2_OUT".anoova_4 * -0.351397886838 + (1 - "ADS_ano_2_OUT".anoova_4) * -1.21639532432 + "ADS_ano_2_OUT".anoova_5 * -0.523248143765 + (1 - "ADS_ano_2_OUT".anoova_5) * -0.897941593206 + "ADS_ano_2_OUT".anoova_6 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_6) * -0.730887508543 + "ADS_ano_2_OUT".anoova_7 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_7) * -0.810930216216 + "ADS_ano_2_OUT".anoova_8 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_8) * -0.810930216216 + "ADS_ano_2_OUT".anoova_9 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_9) * -0.656779536389 + "ADS_ano_2_OUT".anoova_10 * -1.09861228867 + (1 - "ADS_ano_2_OUT".anoova_10) * -0.405465108108 + "ADS_ano_2_OUT".anoova_11 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_11) * -0.656779536389 + "ADS_ano_2_OUT".anoova_12 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_12) * -0.656779536389 + "ADS_ano_2_OUT".anoova_13 * -0.810930216216 + (1 - "ADS_ano_2_OUT".anoova_13) * -0.587786664902 + "ADS_ano_2_OUT".anoova_14 * -0.523248143765 + (1 - "ADS_ano_2_OUT".anoova_14) * -0.897941593206 + "ADS_ano_2_OUT".anoova_15 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_15) * -0.656779536389 + "ADS_ano_2_OUT".anoova_16 * -0.810930216216 + (1 - "ADS_ano_2_OUT".anoova_16) * -0.587786664902 + "ADS_ano_2_OUT".anoova_17 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_17) * -0.810930216216 + "ADS_ano_2_OUT".anoova_18 * -1.09861228867 + (1 - "ADS_ano_2_OUT".anoova_18) * -0.405465108108 + "ADS_ano_2_OUT".anoova_19 * -0.462623521948 + (1 - "ADS_ano_2_OUT".anoova_19) * -0.99325177301 + "ADS_ano_2_OUT".anoova_20 * -0.405465108108 + (1 - "ADS_ano_2_OUT".anoova_20) * -1.09861228867 + "ADS_ano_2_OUT".anoova_21 * -0.99325177301 + (1 - "ADS_ano_2_OUT".anoova_21) * -0.462623521948 AS "Score_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "Proba_1", -1.38629436112 + "ADS_ano_2_OUT".anoova_2 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_2) * -0.656779536389 + "ADS_ano_2_OUT".anoova_3 * -1.90954250488 + (1 - "ADS_ano_2_OUT".anoova_3) * -0.160342650075 + "ADS_ano_2_OUT".anoova_4 * -0.523248143765 + (1 - "ADS_ano_2_OUT".anoova_4) * -0.897941593206 + "ADS_ano_2_OUT".anoova_5 * -0.30010459245 + (1 - "ADS_ano_2_OUT".anoova_5) * -1.34992671695 + "ADS_ano_2_OUT".anoova_6 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_6) * -0.810930216216 + "ADS_ano_2_OUT".anoova_7 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_7) * -0.730887508543 + "ADS_ano_2_OUT".anoova_8 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_8) * -0.656779536389 + "ADS_ano_2_OUT".anoova_9 * -0.810930216216 + (1 - "ADS_ano_2_OUT".anoova_9) * -0.587786664902 + "ADS_ano_2_OUT".anoova_10 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_10) * -0.810930216216 + "ADS_ano_2_OUT".anoova_11 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_11) * -0.810930216216 + "ADS_ano_2_OUT".anoova_12 * -0.897941593206 + (1 - "ADS_ano_2_OUT".anoova_12) * -0.523248143765 + "ADS_ano_2_OUT".anoova_13 * -0.810930216216 + (1 - "ADS_ano_2_OUT".anoova_13) * -0.587786664902 + "ADS_ano_2_OUT".anoova_14 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_14) * -0.656779536389 + "ADS_ano_2_OUT".anoova_15 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_15) * -0.730887508543 + "ADS_ano_2_OUT".anoova_16 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_16) * -0.810930216216 + "ADS_ano_2_OUT".anoova_17 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_17) * -0.810930216216 + "ADS_ano_2_OUT".anoova_18 * -0.523248143765 + (1 - "ADS_ano_2_OUT".anoova_18) * -0.897941593206 + "ADS_ano_2_OUT".anoova_19 * -0.897941593206 + (1 - "ADS_ano_2_OUT".anoova_19) * -0.523248143765 + "ADS_ano_2_OUT".anoova_20 * -0.204794412646 + (1 - "ADS_ano_2_OUT".anoova_20) * -1.68639895357 + "ADS_ano_2_OUT".anoova_21 * -1.50407739678 + (1 - "ADS_ano_2_OUT".anoova_21) * -0.251314428281 AS "Score_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "Proba_2", -1.38629436112 + "ADS_ano_2_OUT".anoova_2 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_2) * -0.730887508543 + "ADS_ano_2_OUT".anoova_3 * -0.204794412646 + (1 - "ADS_ano_2_OUT".anoova_3) * -1.68639895357 + "ADS_ano_2_OUT".anoova_4 * -1.34992671695 + (1 - "ADS_ano_2_OUT".anoova_4) * -0.30010459245 + "ADS_ano_2_OUT".anoova_5 * -1.21639532432 + (1 - "ADS_ano_2_OUT".anoova_5) * -0.351397886838 + "ADS_ano_2_OUT".anoova_6 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_6) * -0.656779536389 + "ADS_ano_2_OUT".anoova_7 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_7) * -0.656779536389 + "ADS_ano_2_OUT".anoova_8 * -0.523248143765 + (1 - "ADS_ano_2_OUT".anoova_8) * -0.897941593206 + "ADS_ano_2_OUT".anoova_9 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_9) * -0.730887508543 + "ADS_ano_2_OUT".anoova_10 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_10) * -0.656779536389 + "ADS_ano_2_OUT".anoova_11 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_11) * -0.730887508543 + "ADS_ano_2_OUT".anoova_12 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_12) * -0.730887508543 + "ADS_ano_2_OUT".anoova_13 * -0.810930216216 + (1 - "ADS_ano_2_OUT".anoova_13) * -0.587786664902 + "ADS_ano_2_OUT".anoova_14 * -1.09861228867 + (1 - "ADS_ano_2_OUT".anoova_14) * -0.405465108108 + "ADS_ano_2_OUT".anoova_15 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_15) * -0.656779536389 + "ADS_ano_2_OUT".anoova_16 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_16) * -0.730887508543 + "ADS_ano_2_OUT".anoova_17 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_17) * -0.656779536389 + "ADS_ano_2_OUT".anoova_18 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_18) * -0.656779536389 + "ADS_ano_2_OUT".anoova_19 * -0.897941593206 + (1 - "ADS_ano_2_OUT".anoova_19) * -0.523248143765 + "ADS_ano_2_OUT".anoova_20 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_20) * -0.810930216216 + "ADS_ano_2_OUT".anoova_21 * -1.90954250488 + (1 - "ADS_ano_2_OUT".anoova_21) * -0.160342650075 AS "Score_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Proba_3", -1.38629436112 + "ADS_ano_2_OUT".anoova_2 * -3.295836866 + (1 - "ADS_ano_2_OUT".anoova_2) * -0.0377403279828 + "ADS_ano_2_OUT".anoova_3 * -0.99325177301 + (1 - "ADS_ano_2_OUT".anoova_3) * -0.462623521948 + "ADS_ano_2_OUT".anoova_4 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_4) * -0.810930216216 + "ADS_ano_2_OUT".anoova_5 * -1.09861228867 + (1 - "ADS_ano_2_OUT".anoova_5) * -0.405465108108 + "ADS_ano_2_OUT".anoova_6 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_6) * -0.656779536389 + "ADS_ano_2_OUT".anoova_7 * -0.810930216216 + (1 - "ADS_ano_2_OUT".anoova_7) * -0.587786664902 + "ADS_ano_2_OUT".anoova_8 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_8) * -0.656779536389 + "ADS_ano_2_OUT".anoova_9 * -0.99325177301 + (1 - "ADS_ano_2_OUT".anoova_9) * -0.462623521948 + "ADS_ano_2_OUT".anoova_10 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_10) * -0.730887508543 + "ADS_ano_2_OUT".anoova_11 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_11) * -0.730887508543 + "ADS_ano_2_OUT".anoova_12 * -0.405465108108 + (1 - "ADS_ano_2_OUT".anoova_12) * -1.09861228867 + "ADS_ano_2_OUT".anoova_13 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_13) * -0.656779536389 + "ADS_ano_2_OUT".anoova_14 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_14) * -0.730887508543 + "ADS_ano_2_OUT".anoova_15 * -0.656779536389 + (1 - "ADS_ano_2_OUT".anoova_15) * -0.730887508543 + "ADS_ano_2_OUT".anoova_16 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_16) * -0.656779536389 + "ADS_ano_2_OUT".anoova_17 * -0.730887508543 + (1 - "ADS_ano_2_OUT".anoova_17) * -0.656779536389 + "ADS_ano_2_OUT".anoova_18 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_18) * -0.810930216216 + "ADS_ano_2_OUT".anoova_19 * -0.587786664902 + (1 - "ADS_ano_2_OUT".anoova_19) * -0.810930216216 + "ADS_ano_2_OUT".anoova_20 * -0.405465108108 + (1 - "ADS_ano_2_OUT".anoova_20) * -1.09861228867 + "ADS_ano_2_OUT".anoova_21 * -1.90954250488 + (1 - "ADS_ano_2_OUT".anoova_21) * -0.160342650075 AS "Score_3" 
FROM "ADS_ano_2_OUT"), 
orig_cte AS 
(SELECT "RawScores"."KEY" AS "KEY", "RawScores"."Score_0" AS "Score_0", "RawScores"."Score_1" AS "Score_1", "RawScores"."Score_2" AS "Score_2", "RawScores"."Score_3" AS "Score_3", "RawScores"."Proba_0" AS "Proba_0", "RawScores"."Proba_1" AS "Proba_1", "RawScores"."Proba_2" AS "Proba_2", "RawScores"."Proba_3" AS "Proba_3", "RawScores"."LogProba_0" AS "LogProba_0", "RawScores"."LogProba_1" AS "LogProba_1", "RawScores"."LogProba_2" AS "LogProba_2", "RawScores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RawScores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte