-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Estimator` AS `Estimator` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= -0.003761786036193371) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.0061888848431408405) THEN CASE WHEN (`ADS`.`Feature_6` <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= -0.07998159527778625) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.014811381697654724) THEN CASE WHEN (`ADS`.`Feature_2` <= -0.021834230050444603) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.06870198249816895) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.003761786036193371 AS threshold, 442 AS count, 0 AS depth, 152.13348416289594 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 218 AS count, 1 AS depth, 109.9862385321101 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.021027816459536552 AS threshold, 171 AS count, 2 AS depth, 96.30994152046783 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 87 AS count, 3 AS depth, 108.80459770114942 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 84 AS count, 3 AS depth, 83.36904761904762 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.07998159527778625 AS threshold, 47 AS count, 2 AS depth, 159.74468085106383 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 274.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 45 AS count, 3 AS depth, 154.66666666666666 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.014811381697654724 AS threshold, 224 AS count, 1 AS depth, 193.15178571428572 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, -0.021834230050444603 AS threshold, 116 AS count, 2 AS depth, 162.68103448275863 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 42 AS count, 3 AS depth, 137.6904761904762 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 74 AS count, 3 AS depth, 176.86486486486487 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.06870198249816895 AS threshold, 108 AS count, 2 AS depth, 225.87962962962962 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 77 AS count, 3 AS depth, 208.57142857142858 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, 268.8709677419355 AS `Estimator`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`