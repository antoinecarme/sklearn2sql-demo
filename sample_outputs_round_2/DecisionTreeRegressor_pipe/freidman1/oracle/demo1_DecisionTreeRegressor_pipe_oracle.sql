-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.495337690937 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.48674645558 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.547313292738 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.408869499355 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.552318268138 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.500024932359 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.53240676361 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.495657055855 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.46365337701 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.514182181389 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.495337690937 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.48674645558 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.547313292738 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.408869499355 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.552318268138 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.500024932359 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.53240676361 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.495657055855 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.46365337701 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.514182181389 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.397344783688 + "CenteredDataForPCA".impute_3 * -0.189157937493 + "CenteredDataForPCA".impute_4 * -0.439230956736 + "CenteredDataForPCA".impute_5 * -0.215396886752 + "CenteredDataForPCA".impute_6 * -0.243315043385 + "CenteredDataForPCA".impute_7 * 0.202314233069 + "CenteredDataForPCA".impute_8 * -0.491245481079 + "CenteredDataForPCA".impute_9 * -0.288752981148 + "CenteredDataForPCA".impute_10 * -0.192530368262 + "CenteredDataForPCA".impute_11 * -0.324214645931 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.118947534948 + "CenteredDataForPCA".impute_3 * -0.109308275407 + "CenteredDataForPCA".impute_4 * -0.0754043779204 + "CenteredDataForPCA".impute_5 * 0.05381561351 + "CenteredDataForPCA".impute_6 * 0.250451870512 + "CenteredDataForPCA".impute_7 * -0.55172197428 + "CenteredDataForPCA".impute_8 * -0.0667879683766 + "CenteredDataForPCA".impute_9 * 0.310092347979 + "CenteredDataForPCA".impute_10 * 0.32661521929 + "CenteredDataForPCA".impute_11 * -0.625222016228 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.354589341361 + "CenteredDataForPCA".impute_3 * -0.585127099016 + "CenteredDataForPCA".impute_4 * 0.0758858073336 + "CenteredDataForPCA".impute_5 * 0.542859171284 + "CenteredDataForPCA".impute_6 * -0.154430154774 + "CenteredDataForPCA".impute_7 * 0.331024704897 + "CenteredDataForPCA".impute_8 * -0.20198351367 + "CenteredDataForPCA".impute_9 * 0.0872933255191 + "CenteredDataForPCA".impute_10 * 0.188843662111 + "CenteredDataForPCA".impute_11 * -0.118036097183 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.182137752777 + "CenteredDataForPCA".impute_3 * 0.283958691938 + "CenteredDataForPCA".impute_4 * 0.24488581653 + "CenteredDataForPCA".impute_5 * 0.108952169552 + "CenteredDataForPCA".impute_6 * -0.604278411301 + "CenteredDataForPCA".impute_7 * -0.199733711106 + "CenteredDataForPCA".impute_8 * 0.152439293018 + "CenteredDataForPCA".impute_9 * -0.490248791542 + "CenteredDataForPCA".impute_10 * 0.15334689966 + "CenteredDataForPCA".impute_11 * -0.349586642882 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.096450787689 + "CenteredDataForPCA".impute_3 * 0.0760385102497 + "CenteredDataForPCA".impute_4 * 0.0897876346381 + "CenteredDataForPCA".impute_5 * -0.479076437662 + "CenteredDataForPCA".impute_6 * -0.225445543628 + "CenteredDataForPCA".impute_7 * 0.518965811153 + "CenteredDataForPCA".impute_8 * 0.2569789111 + "CenteredDataForPCA".impute_9 * 0.462833118879 + "CenteredDataForPCA".impute_10 * 0.139216038749 + "CenteredDataForPCA".impute_11 * -0.35714754604 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.187796633898 + "CenteredDataForPCA".impute_3 * 0.430798046885 + "CenteredDataForPCA".impute_4 * -0.3605709488 + "CenteredDataForPCA".impute_5 * 0.319735243699 + "CenteredDataForPCA".impute_6 * 0.465223269645 + "CenteredDataForPCA".impute_7 * 0.378538974721 + "CenteredDataForPCA".impute_8 * 0.15003485042 + "CenteredDataForPCA".impute_9 * -0.240080875909 + "CenteredDataForPCA".impute_10 * -0.00810935990934 + "CenteredDataForPCA".impute_11 * -0.327053422052 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.254258382762 + "CenteredDataForPCA".impute_3 * 0.540666122057 + "CenteredDataForPCA".impute_4 * 0.0143656607828 + "CenteredDataForPCA".impute_5 * 0.421414790476 + "CenteredDataForPCA".impute_6 * -0.290900953028 + "CenteredDataForPCA".impute_7 * 0.0633765486466 + "CenteredDataForPCA".impute_8 * -0.382344583018 + "CenteredDataForPCA".impute_9 * 0.468382673702 + "CenteredDataForPCA".impute_10 * 0.0248009494627 + "CenteredDataForPCA".impute_11 * 0.102035649359 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.340113010932 + "CenteredDataForPCA".impute_3 * 0.198125005667 + "CenteredDataForPCA".impute_4 * 0.370934259629 + "CenteredDataForPCA".impute_5 * -0.325518443109 + "CenteredDataForPCA".impute_6 * 0.280142401318 + "CenteredDataForPCA".impute_7 * 0.0652792237426 + "CenteredDataForPCA".impute_8 * -0.661318593124 + "CenteredDataForPCA".impute_9 * -0.151088088398 + "CenteredDataForPCA".impute_10 * 0.242037918092 + "CenteredDataForPCA".impute_11 * 0.00466392781598 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.148053244983 + "CenteredDataForPCA".impute_3 * -0.0114092961594 + "CenteredDataForPCA".impute_4 * 0.362930552762 + "CenteredDataForPCA".impute_5 * 0.0758783416108 + "CenteredDataForPCA".impute_6 * 0.0795692316756 + "CenteredDataForPCA".impute_7 * -0.070348997918 + "CenteredDataForPCA".impute_8 * -0.0719445870302 + "CenteredDataForPCA".impute_9 * 0.131000429758 + "CenteredDataForPCA".impute_10 * -0.834375193084 + "CenteredDataForPCA".impute_11 * -0.332677941239 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.649805021451 + "CenteredDataForPCA".impute_3 * 0.0786915318816 + "CenteredDataForPCA".impute_4 * -0.572775886177 + "CenteredDataForPCA".impute_5 * -0.151941901642 + "CenteredDataForPCA".impute_6 * -0.228861974282 + "CenteredDataForPCA".impute_7 * -0.281703194128 + "CenteredDataForPCA".impute_8 * -0.113700766404 + "CenteredDataForPCA".impute_9 * 0.203165140533 + "CenteredDataForPCA".impute_10 * -0.149167974394 + "CenteredDataForPCA".impute_11 * 0.110512459024 AS anoova_11 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.02104088105261326) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 0.1229117214679718) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.1665307730436325) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.1175762265920639) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.04513871297240257) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.3007759153842926) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.03345052897930145) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.02104088105261326 AS threshold, 100 AS count, 0 AS depth, 13.50444912730013 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, 0.1229117214679718 AS threshold, 52 AS count, 1 AS depth, 16.20954499161314 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -0.1665307730436325 AS threshold, 33 AS count, 2 AS depth, 14.543850892280972 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 11.856705362484028 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 15.551530465954826 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, -0.1175762265920639 AS threshold, 19 AS count, 2 AS depth, 19.10259263782163 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 15.451989722784646 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 20.78748629091562 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_7' AS feature, -0.04513871297240257 AS threshold, 48 AS count, 1 AS depth, 10.573928607627698 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_5' AS feature, 0.3007759153842926 AS threshold, 20 AS count, 2 AS depth, 7.4455689061813555 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 6.765027101305869 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 9.48719432080782 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, -0.03345052897930145 AS threshold, 28 AS count, 2 AS depth, 12.808471251517947 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 15.615108244197023 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 10.992412020960899 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"