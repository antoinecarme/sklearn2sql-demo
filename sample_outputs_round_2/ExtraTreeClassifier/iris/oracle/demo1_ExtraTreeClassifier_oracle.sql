-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 5.3641914588043145) THEN CASE WHEN ("ADS"."Feature_3" <= 0.42796416499733075) THEN 2 ELSE CASE WHEN ("ADS"."Feature_0" <= 4.9439167461369795) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.7469271668815254) THEN 7 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.1984512178220093) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 5.3641914588043145 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.42796416499733075 AS threshold, 46 AS count, 1 AS depth, 0.8695652173913043 AS "Proba_0", -0.139761942375 AS "LogProba_0", 0.10869565217391304 AS "Proba_1", -2.21920348405 AS "LogProba_1", 0.021739130434782608 AS "Proba_2", -3.82864139649 AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 2 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, 4.9439167461369795 AS threshold, 8 AS count, 2 AS depth, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.625 AS "Proba_1", -0.470003629246 AS "LogProba_1", 0.125 AS "Proba_2", -2.07944154168 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0.5 AS "Proba_2", -0.69314718056 AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 0.7469271668815254 AS threshold, 104 AS count, 1 AS depth, 0.09615384615384616 AS "Proba_0", -2.34180580615 AS "LogProba_0", 0.4326923076923077 AS "Proba_1", -0.837728409371 AS "LogProba_1", 0.47115384615384615 AS "Proba_2", -0.752570601031 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 1.1984512178220093 AS threshold, 94 AS count, 2 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.4787234042553192 AS "Proba_1", -0.7366322925 AS "LogProba_1", 0.5212765957446809 AS "Proba_2", -0.651474484159 AS "LogProba_2", 2 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.4431818181818182 AS "Proba_1", -0.813775168349 AS "LogProba_1", 0.5568181818181818 AS "Proba_2", -0.585516516368 AS "LogProba_2", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."Decision" AS "Decision" 
FROM "DT_Output"