-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= 491.67471525849527) THEN CASE WHEN ("ADS"."Feature_10" <= 17.494028233450226) THEN CASE WHEN ("ADS"."Feature_12" <= 11.599270558307587) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.014038612671525) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.67583644943416) THEN CASE WHEN ("ADS"."Feature_12" <= 4.35638492384055) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5860059192862158) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 491.67471525849527 AS threshold, 506 AS count, 0 AS depth, 22.532806324110698 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_10' AS feature, 17.494028233450226 AS threshold, 369 AS count, 1 AS depth, 24.857181571815723 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 11.599270558307587 AS threshold, 144 AS count, 2 AS depth, 28.309722222222216 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 108 AS count, 3 AS depth, 31.400925925925932 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 19.03611111111111 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, 7.014038612671525 AS threshold, 225 AS count, 2 AS depth, 22.647555555555545 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 207 AS count, 3 AS depth, 21.407729468599026 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 36.905555555555544 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 19.67583644943416 AS threshold, 137 AS count, 1 AS depth, 16.272262773722634 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 4.35638492384055 AS threshold, 83 AS count, 2 AS depth, 19.703614457831325 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 50.0 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 18.5675 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.5860059192862158 AS threshold, 54 AS count, 2 AS depth, 10.998148148148148 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 15.5 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 10.73333333333333 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"