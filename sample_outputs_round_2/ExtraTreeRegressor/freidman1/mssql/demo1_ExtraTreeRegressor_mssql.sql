-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] <= 0.29626867147143204) THEN CASE WHEN ([ADS].[Feature_3] <= 0.008963841607669403) THEN 2 ELSE CASE WHEN ([ADS].[Feature_3] <= 0.1989183881918865) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.4942932625305544) THEN CASE WHEN ([ADS].[Feature_1] <= 0.7158938375711537) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.43582964937586793) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 0.29626867147143204 AS threshold, 100 AS count, 0 AS depth, 14.002723136038934 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.008963841607669403 AS threshold, 32 AS count, 1 AS depth, 11.073097639090532 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 4.529786924222186 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'Feature_3' AS feature, 0.1989183881918865 AS threshold, 31 AS count, 2 AS depth, 11.284172178279835 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 6.545052872676505 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 12.195541275511243 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 0.4942932625305544 AS threshold, 68 AS count, 1 AS depth, 15.381370428720535 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'Feature_1' AS feature, 0.7158938375711537 AS threshold, 33 AS count, 2 AS depth, 12.062576717165916 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 11.055898034828726 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 14.377937686541472 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_1' AS feature, 0.43582964937586793 AS threshold, 35 AS count, 2 AS depth, 18.510518785329182 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 17.214706768549124 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 19.374393463182546 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id)
 SELECT [DT_Output].[KEY] AS [KEY], [DT_Output].[Estimator] AS [Estimator] 
FROM [DT_Output]