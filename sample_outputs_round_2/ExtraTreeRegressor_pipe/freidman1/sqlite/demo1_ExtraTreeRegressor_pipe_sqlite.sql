-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.503146419403 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.459548248769 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.522956954854 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.518653069453 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.488252446481 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.513602289046 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.464678988787 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.533991564502 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.505468598401 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.489424604708 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.503146419403 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.459548248769 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.522956954854 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.518653069453 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.488252446481 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.513602289046 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.464678988787 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.533991564502 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.505468598401 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.489424604708 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.428160025778 + "CenteredDataForPCA".impute_3 * 0.392805546264 + "CenteredDataForPCA".impute_4 * 0.0835036550998 + "CenteredDataForPCA".impute_5 * 0.0831632223453 + "CenteredDataForPCA".impute_6 * -0.359135076487 + "CenteredDataForPCA".impute_7 * 0.123920737485 + "CenteredDataForPCA".impute_8 * 0.359192338343 + "CenteredDataForPCA".impute_9 * -0.476669363311 + "CenteredDataForPCA".impute_10 * 0.364730919096 + "CenteredDataForPCA".impute_11 * -0.122057362142 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.475804168047 + "CenteredDataForPCA".impute_3 * -0.281264073141 + "CenteredDataForPCA".impute_4 * -0.111284292665 + "CenteredDataForPCA".impute_5 * -0.113760935552 + "CenteredDataForPCA".impute_6 * -0.164188138579 + "CenteredDataForPCA".impute_7 * 0.609914037176 + "CenteredDataForPCA".impute_8 * 0.377478227464 + "CenteredDataForPCA".impute_9 * -0.0333724924741 + "CenteredDataForPCA".impute_10 * 0.00958951333882 + "CenteredDataForPCA".impute_11 * -0.355706056674 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.156096311842 + "CenteredDataForPCA".impute_3 * 0.305564846281 + "CenteredDataForPCA".impute_4 * -0.109122605235 + "CenteredDataForPCA".impute_5 * -0.282623273035 + "CenteredDataForPCA".impute_6 * -0.337598732482 + "CenteredDataForPCA".impute_7 * -0.390723903974 + "CenteredDataForPCA".impute_8 * 0.199101615137 + "CenteredDataForPCA".impute_9 * -0.0974856083787 + "CenteredDataForPCA".impute_10 * -0.65305313616 + "CenteredDataForPCA".impute_11 * -0.219588341589 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.136040121572 + "CenteredDataForPCA".impute_3 * -0.00263079722915 + "CenteredDataForPCA".impute_4 * 0.553407791665 + "CenteredDataForPCA".impute_5 * -0.204300438674 + "CenteredDataForPCA".impute_6 * 0.643045247062 + "CenteredDataForPCA".impute_7 * -0.0208330184103 + "CenteredDataForPCA".impute_8 * 0.36988889797 + "CenteredDataForPCA".impute_9 * -0.0921656657087 + "CenteredDataForPCA".impute_10 * -0.156164043924 + "CenteredDataForPCA".impute_11 * -0.223263501929 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.37313265397 + "CenteredDataForPCA".impute_3 * 0.429834976735 + "CenteredDataForPCA".impute_4 * -0.279854991051 + "CenteredDataForPCA".impute_5 * -0.324819095003 + "CenteredDataForPCA".impute_6 * 0.287455785411 + "CenteredDataForPCA".impute_7 * -0.0153998992521 + "CenteredDataForPCA".impute_8 * 0.28964307966 + "CenteredDataForPCA".impute_9 * -0.0209133194631 + "CenteredDataForPCA".impute_10 * 0.25890505196 + "CenteredDataForPCA".impute_11 * 0.507895031381 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.388714431617 + "CenteredDataForPCA".impute_3 * -0.306147493581 + "CenteredDataForPCA".impute_4 * 0.253358637785 + "CenteredDataForPCA".impute_5 * 0.357203674611 + "CenteredDataForPCA".impute_6 * -0.0591261370798 + "CenteredDataForPCA".impute_7 * -0.21857428108 + "CenteredDataForPCA".impute_8 * 0.0694013770495 + "CenteredDataForPCA".impute_9 * -0.613746900781 + "CenteredDataForPCA".impute_10 * -0.0907696769451 + "CenteredDataForPCA".impute_11 * 0.349825925694 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.292577779257 + "CenteredDataForPCA".impute_3 * -0.470217995995 + "CenteredDataForPCA".impute_4 * -0.551560416108 + "CenteredDataForPCA".impute_5 * -0.36213562891 + "CenteredDataForPCA".impute_6 * 0.205940267006 + "CenteredDataForPCA".impute_7 * -0.1895017653 + "CenteredDataForPCA".impute_8 * 0.010589090011 + "CenteredDataForPCA".impute_9 * -0.406769646375 + "CenteredDataForPCA".impute_10 * 0.0634466590577 + "CenteredDataForPCA".impute_11 * -0.100053524541 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.192837464144 + "CenteredDataForPCA".impute_3 * 0.365481745048 + "CenteredDataForPCA".impute_4 * -0.349862952033 + "CenteredDataForPCA".impute_5 * 0.496688842791 + "CenteredDataForPCA".impute_6 * 0.419169374929 + "CenteredDataForPCA".impute_7 * 0.0133242883066 + "CenteredDataForPCA".impute_8 * -0.195974073263 + "CenteredDataForPCA".impute_9 * -0.226722079665 + "CenteredDataForPCA".impute_10 * -0.042371682362 + "CenteredDataForPCA".impute_11 * -0.438917207339 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.14905271051 + "CenteredDataForPCA".impute_3 * -0.187495619566 + "CenteredDataForPCA".impute_4 * -0.258494886905 + "CenteredDataForPCA".impute_5 * 0.481892738641 + "CenteredDataForPCA".impute_6 * 0.0306866636981 + "CenteredDataForPCA".impute_7 * -0.262322296749 + "CenteredDataForPCA".impute_8 * 0.651681237823 + "CenteredDataForPCA".impute_9 * 0.379317988379 + "CenteredDataForPCA".impute_10 * -0.0280637254704 + "CenteredDataForPCA".impute_11 * 0.0669003781397 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.33479063747 + "CenteredDataForPCA".impute_3 * 0.0699761064843 + "CenteredDataForPCA".impute_4 * -0.162858893545 + "CenteredDataForPCA".impute_5 * 0.123948387728 + "CenteredDataForPCA".impute_6 * 0.106777336593 + "CenteredDataForPCA".impute_7 * 0.553747250968 + "CenteredDataForPCA".impute_8 * 0.0107580292948 + "CenteredDataForPCA".impute_9 * -0.125719660246 + "CenteredDataForPCA".impute_10 * -0.578043614049 + "CenteredDataForPCA".impute_11 * 0.41597998279 AS anoova_11 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.29267342363650745) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.1408590616795388) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.5655734388080164) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.1534005666272592) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.36676728582353646) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.2584193188201902) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.20534055949078003) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, -0.29267342363650745 AS threshold, 100 AS count, 0 AS depth, 14.249675376276855 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, -0.1408590616795388 AS threshold, 11 AS count, 1 AS depth, 19.11427163718177 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'anoova_8' AS feature, -0.5655734388080164 AS threshold, 6 AS count, 2 AS depth, 20.99964320674538 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 26.82337817996899 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 19.83489621210066 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'anoova_3' AS feature, 0.1534005666272592 AS threshold, 5 AS count, 2 AS depth, 16.851825753705445 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 22.07966284484832 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 13.366601026276859 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'anoova_3' AS feature, 0.36676728582353646 AS threshold, 89 AS count, 1 AS depth, 13.648433141782986 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'anoova_3' AS feature, -0.2584193188201902 AS threshold, 74 AS count, 2 AS depth, 14.658754250541788 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 17.046905916583963 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 13.71250547720433 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'anoova_11' AS feature, -0.20534055949078003 AS threshold, 15 AS count, 2 AS depth, 8.66418233857289 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 7.159779945597552 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 9.41638353506056 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"