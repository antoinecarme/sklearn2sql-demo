-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 901.2845273785221) THEN CASE WHEN ("ADS"."Feature_12" <= 2.9173470088197377) THEN CASE WHEN ("ADS"."Feature_27" <= 0.06244658699723116) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.11080405317656151) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.09943375337447606) THEN CASE WHEN ("ADS"."Feature_23" <= 1234.59072716096) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 901.2845273785221 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 2.9173470088197377 AS threshold, 452 AS count, 1 AS depth, 0.21238938053097345 AS "Proba_0.0", -1.54933398836 AS "LogProba_0.0", 0.7876106194690266 AS "Proba_1.0", -0.23875144898 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_27' AS feature, 0.06244658699723116 AS threshold, 370 AS count, 2 AS depth, 0.14054054054054055 AS "Proba_0.0", -1.96225928706 AS "LogProba_0.0", 0.8594594594594595 AS "Proba_1.0", -0.151451622858 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 252 AS count, 3 AS depth, 0.20634920634920634 AS "Proba_0.0", -1.57818536893 AS "LogProba_0.0", 0.7936507936507936 AS "Proba_1.0", -0.231111720963 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_27' AS feature, 0.11080405317656151 AS threshold, 82 AS count, 2 AS depth, 0.5365853658536586 AS "Proba_0.0", -0.622529613346 AS "LogProba_0.0", 0.4634146341463415 AS "Proba_1.0", -0.769133087538 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, 0.11764705882352941 AS "Proba_0.0", -2.1400661635 AS "LogProba_0.0", 0.8823529411764706 AS "Proba_1.0", -0.125163142954 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 0.8333333333333334 AS "Proba_0.0", -0.182321556794 AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, 0.09943375337447606 AS threshold, 117 AS count, 1 AS depth, 0.9914529914529915 AS "Proba_0.0", -0.00858374369139 AS "LogProba_0.0", 0.008547008547008548 AS "Proba_1.0", -4.7621739348 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_23' AS feature, 1234.59072716096 AS threshold, 14 AS count, 2 AS depth, 0.9285714285714286 AS "Proba_0.0", -0.0741079721537 AS "LogProba_0.0", 0.07142857142857142 AS "Proba_1.0", -2.63905732962 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.1758725905756831) THEN CASE WHEN ("ADS"."Feature_6" <= 0.1546113621366474) THEN CASE WHEN ("ADS"."Feature_20" <= 10.045971458377727) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.25271211288831663) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_27' AS feature, 0.1758725905756831 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.1546113621366474 AS threshold, 450 AS count, 1 AS depth, 0.20666666666666667 AS "Proba_0.0", -1.57664808961 AS "LogProba_0.0", 0.7933333333333333 AS "Proba_1.0", -0.231511800985 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_20' AS feature, 10.045971458377727 AS threshold, 427 AS count, 2 AS depth, 0.17798594847775176 AS "Proba_0.0", -1.72605067294 AS "LogProba_0.0", 0.8220140515222483 AS "Proba_1.0", -0.195997789763 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 407 AS count, 3 AS depth, 0.18673218673218672 AS "Proba_0.0", -1.67807984516 AS "LogProba_0.0", 0.8132678132678133 AS "Proba_1.0", -0.206694810066 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, 0.25271211288831663 AS threshold, 23 AS count, 2 AS depth, 0.7391304347826086 AS "Proba_0.0", -0.302280871873 AS "LogProba_0.0", 0.2608695652173913 AS "Proba_1.0", -1.3437347467 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 0.7727272727272727 AS "Proba_0.0", -0.257829109302 AS "LogProba_0.0", 0.22727272727272727 AS "Proba_1.0", -1.48160454092 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 1 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 33.26711857121934) THEN CASE WHEN ("ADS"."Feature_2" <= 102.69619624932123) THEN CASE WHEN ("ADS"."Feature_1" <= 18.019963828202528) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_20" <= 27.7091603923453) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.12493889453811799) THEN CASE WHEN ("ADS"."Feature_8" <= 0.1448676642823044) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_21' AS feature, 33.26711857121934 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 102.69619624932123 AS threshold, 505 AS count, 1 AS depth, 0.3326732673267327 AS "Proba_0.0", -1.10059444987 AS "LogProba_0.0", 0.6673267326732674 AS "Proba_1.0", -0.404475498923 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 18.019963828202528 AS threshold, 381 AS count, 2 AS depth, 0.13385826771653545 AS "Proba_0.0", -2.0109737424 AS "LogProba_0.0", 0.8661417322834646 AS "Proba_1.0", -0.143706720666 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 0.05339805825242718 AS "Proba_0.0", -2.92998089599 AS "LogProba_0.0", 0.9466019417475728 AS "Proba_1.0", -0.0548766102258 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 175 AS count, 3 AS depth, 0.22857142857142856 AS "Proba_0.0", -1.47590651981 AS "LogProba_0.0", 0.7714285714285715 AS "Proba_1.0", -0.259511195485 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_20' AS feature, 27.7091603923453 AS threshold, 124 AS count, 2 AS depth, 0.9435483870967742 AS "Proba_0.0", -0.0581076308073 AS "LogProba_0.0", 0.056451612903225805 AS "Proba_1.0", -2.87437141655 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 0.9380530973451328 AS "Proba_0.0", -0.0639487246003 AS "LogProba_0.0", 0.061946902654867256 AS "Proba_1.0", -2.78147766966 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_27' AS feature, 0.12493889453811799 AS threshold, 64 AS count, 1 AS depth, 0.6875 AS "Proba_0.0", -0.374693449441 AS "LogProba_0.0", 0.3125 AS "Proba_1.0", -1.16315080981 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.1448676642823044 AS threshold, 25 AS count, 2 AS depth, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.8 AS "Proba_1.0", -0.223143551314 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 832.5860612383514) THEN CASE WHEN ("ADS"."Feature_6" <= 0.16985337366087708) THEN CASE WHEN ("ADS"."Feature_2" <= 99.03700890975418) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 69.44135235484403) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_29" <= 0.0827121986854267) THEN CASE WHEN ("ADS"."Feature_26" <= 0.20769141181077738) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 832.5860612383514 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.16985337366087708 AS threshold, 442 AS count, 1 AS depth, 0.19909502262443438 AS "Proba_0.0", -1.6139730676 AS "LogProba_0.0", 0.8009049773755657 AS "Proba_1.0", -0.222012968944 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 99.03700890975418 AS threshold, 414 AS count, 2 AS depth, 0.1570048309178744 AS "Proba_0.0", -1.85147870393 AS "LogProba_0.0", 0.8429951690821256 AS "Proba_1.0", -0.170794051623 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 391 AS count, 3 AS depth, 0.12276214833759591 AS "Proba_0.0", -2.09750654908 AS "LogProba_0.0", 0.8772378516624041 AS "Proba_1.0", -0.130977112819 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 0.7391304347826086 AS "Proba_0.0", -0.302280871873 AS "LogProba_0.0", 0.2608695652173913 AS "Proba_1.0", -1.3437347467 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_22' AS feature, 69.44135235484403 AS threshold, 28 AS count, 2 AS depth, 0.8214285714285714 AS "Proba_0.0", -0.196710294246 AS "LogProba_0.0", 0.17857142857142858 AS "Proba_1.0", -1.72276659774 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 0.8846153846153846 AS "Proba_0.0", -0.122602322092 AS "LogProba_0.0", 0.11538461538461539 AS "Proba_1.0", -2.15948424935 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_29' AS feature, 0.0827121986854267 AS threshold, 127 AS count, 1 AS depth, 0.9763779527559056 AS "Proba_0.0", -0.0239055208536 AS "LogProba_0.0", 0.023622047244094488 AS "Proba_1.0", -3.74557479779 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_26' AS feature, 0.20769141181077738 AS threshold, 64 AS count, 2 AS depth, 0.953125 AS "Proba_0.0", -0.0480092191864 AS "LogProba_0.0", 0.046875 AS "Proba_1.0", -3.06027079469 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 107.04570276216862) THEN CASE WHEN ("ADS"."Feature_13" <= 103.09663401449185) THEN CASE WHEN ("ADS"."Feature_25" <= 0.2475943713828808) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_0" <= 18.763944418449633) THEN CASE WHEN ("ADS"."Feature_7" <= 0.07180497474173361) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 107.04570276216862 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 103.09663401449185 AS threshold, 351 AS count, 1 AS depth, 0.05982905982905983 AS "Proba_0.0", -2.81626378574 AS "LogProba_0.0", 0.9401709401709402 AS "Proba_1.0", -0.0616935690053 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_25' AS feature, 0.2475943713828808 AS threshold, 350 AS count, 2 AS depth, 0.05714285714285714 AS "Proba_0.0", -2.86220088093 AS "LogProba_0.0", 0.9428571428571428 AS "Proba_1.0", -0.0588405000229 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 276 AS count, 3 AS depth, 0.014492753623188406 AS "Proba_0.0", -4.2341065046 AS "LogProba_0.0", 0.9855072463768116 AS "Proba_1.0", -0.0145987994212 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 74 AS count, 3 AS depth, 0.21621621621621623 AS "Proba_0.0", -1.53147637096 AS "LogProba_0.0", 0.7837837837837838 AS "Proba_1.0", -0.243622082658 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_0' AS feature, 18.763944418449633 AS threshold, 218 AS count, 1 AS depth, 0.8761467889908257 AS "Proba_0.0", -0.132221634742 AS "LogProba_0.0", 0.12385321100917432 AS "Proba_1.0", -2.08865819678 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_7' AS feature, 0.07180497474173361 AS threshold, 142 AS count, 2 AS depth, 0.8098591549295775 AS "Proba_0.0", -0.210894929238 AS "LogProba_0.0", 0.19014084507042253 AS "Proba_1.0", -1.6599901916 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, 0.6493506493506493 AS "Proba_0.0", -0.431782416426 AS "LogProba_0.0", 0.35064935064935066 AS "Proba_1.0", -1.04796855585 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0.0" AS "Proba_4_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1.0" AS "Proba_4_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_4_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 30.25648366812049) THEN CASE WHEN ("ADS"."Feature_3" <= 1422.7122781587357) THEN CASE WHEN ("ADS"."Feature_20" <= 17.716387285035097) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_21" <= 42.00425843519948) THEN 7 ELSE 8 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 30.25648366812049 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 1422.7122781587357 AS threshold, 562 AS count, 1 AS depth, 0.3683274021352313 AS "Proba_0.0", -0.998783056628 AS "LogProba_0.0", 0.6316725978647687 AS "Proba_1.0", -0.459384060418 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_20' AS feature, 17.716387285035097 AS threshold, 545 AS count, 2 AS depth, 0.3486238532110092 AS "Proba_0.0", -1.0537617225 AS "LogProba_0.0", 0.6513761467889908 AS "Proba_1.0", -0.428668005188 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 403 AS count, 3 AS depth, 0.12655086848635236 AS "Proba_0.0", -2.06711092922 AS "LogProba_0.0", 0.8734491315136477 AS "Proba_1.0", -0.135305386349 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 142 AS count, 3 AS depth, 0.9788732394366197 AS "Proba_0.0", -0.0213531244706 AS "LogProba_0.0", 0.02112676056338028 AS "Proba_1.0", -3.85721476893 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_21' AS feature, 42.00425843519948 AS threshold, 7 AS count, 1 AS depth, 0.7142857142857143 AS "Proba_0.0", -0.336472236621 AS "LogProba_0.0", 0.2857142857142857 AS "Proba_1.0", -1.2527629685 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0.0" AS "Proba_5_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1.0" AS "Proba_5_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_5_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 150.69708237268182) THEN CASE WHEN ("ADS"."Feature_7" <= 0.052176407079718844) THEN CASE WHEN ("ADS"."Feature_29" <= 0.11939117112358355) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_22" <= 102.02554396294884) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 150.69708237268182 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 0.052176407079718844 AS threshold, 494 AS count, 1 AS depth, 0.2773279352226721 AS "Proba_0.0", -1.28255459136 AS "LogProba_0.0", 0.7226720647773279 AS "Proba_1.0", -0.324799735408 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_29' AS feature, 0.11939117112358355 AS threshold, 351 AS count, 2 AS depth, 0.06267806267806268 AS "Proba_0.0", -2.76974377011 AS "LogProba_0.0", 0.9373219373219374 AS "Proba_1.0", -0.0647284727005 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 346 AS count, 3 AS depth, 0.057803468208092484 AS "Proba_0.0", -2.8507065015 AS "LogProba_0.0", 0.9421965317919075 AS "Proba_1.0", -0.059541393691 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_22' AS feature, 102.02554396294884 AS threshold, 143 AS count, 2 AS depth, 0.8041958041958042 AS "Proba_0.0", -0.217912501897 AS "LogProba_0.0", 0.1958041958041958 AS "Proba_1.0", -1.63064012008 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 0.22727272727272727 AS "Proba_0.0", -1.48160454092 AS "LogProba_0.0", 0.7727272727272727 AS "Proba_1.0", -0.257829109302 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, 0.9090909090909091 AS "Proba_0.0", -0.0953101798043 AS "LogProba_0.0", 0.09090909090909091 AS "Proba_1.0", -2.3978952728 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 1 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0.0" AS "Proba_6_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1.0" AS "Proba_6_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_6_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= 0.2193793919030968) THEN CASE WHEN ("ADS"."Feature_22" <= 178.25972169756784) THEN CASE WHEN ("ADS"."Feature_28" <= 0.3488553572178953) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.21368705921492934) THEN CASE WHEN ("ADS"."Feature_27" <= 0.13947372128531096) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_20" <= 10.866003422214689) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.2193793919030968 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_22' AS feature, 178.25972169756784 AS threshold, 523 AS count, 1 AS depth, 0.34608030592734224 AS "Proba_0.0", -1.0610844328 AS "LogProba_0.0", 0.6539196940726577 AS "Proba_1.0", -0.424770727002 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_28' AS feature, 0.3488553572178953 AS threshold, 504 AS count, 2 AS depth, 0.32142857142857145 AS "Proba_0.0", -1.13497993284 AS "LogProba_0.0", 0.6785714285714286 AS "Proba_1.0", -0.387765531009 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 458 AS count, 3 AS depth, 0.27292576419213976 AS "Proba_0.0", -1.29855544681 AS "LogProba_0.0", 0.7270742358078602 AS "Proba_1.0", -0.318726694134 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 0.8043478260869565 AS "Proba_0.0", -0.217723483845 AS "LogProba_0.0", 0.1956521739130435 AS "Proba_1.0", -1.63141681915 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_5' AS feature, 0.21368705921492934 AS threshold, 46 AS count, 1 AS depth, 0.6739130434782609 AS "Proba_0.0", -0.394654192004 AS "LogProba_0.0", 0.32608695652173914 AS "Proba_1.0", -1.12059119539 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_27' AS feature, 0.13947372128531096 AS threshold, 30 AS count, 2 AS depth, 0.5333333333333333 AS "Proba_0.0", -0.628608659422 AS "LogProba_0.0", 0.4666666666666667 AS "Proba_1.0", -0.762140052047 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.9411764705882353 AS "Proba_0.0", -0.0606246218164 AS "LogProba_0.0", 0.058823529411764705 AS "Proba_1.0", -2.83321334406 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_20' AS feature, 10.866003422214689 AS threshold, 16 AS count, 2 AS depth, 0.9375 AS "Proba_0.0", -0.0645385211376 AS "LogProba_0.0", 0.0625 AS "Proba_1.0", -2.77258872224 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0.0" AS "Proba_7_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1.0" AS "Proba_7_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_7_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 0.07733772643074631) THEN CASE WHEN ("ADS"."Feature_21" <= 30.44865685201314) THEN CASE WHEN ("ADS"."Feature_0" <= 15.844613316541217) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.05574219069453801) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.12628500930476477) THEN CASE WHEN ("ADS"."Feature_0" <= 10.21062434597983) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_6' AS feature, 0.07733772643074631 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_21' AS feature, 30.44865685201314 AS threshold, 320 AS count, 1 AS depth, 0.0625 AS "Proba_0.0", -2.77258872224 AS "LogProba_0.0", 0.9375 AS "Proba_1.0", -0.0645385211376 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 15.844613316541217 AS threshold, 274 AS count, 2 AS depth, 0.0364963503649635 AS "Proba_0.0", -3.31054301339 AS "LogProba_0.0", 0.9635036496350365 AS "Proba_1.0", -0.0371790032418 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 265 AS count, 3 AS depth, 0.026415094339622643 AS "Proba_0.0", -3.63381967693 AS "LogProba_0.0", 0.9735849056603774 AS "Proba_1.0", -0.0267702410646 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 0.05574219069453801 AS threshold, 46 AS count, 2 AS depth, 0.21739130434782608 AS "Proba_0.0", -1.5260563035 AS "LogProba_0.0", 0.782608695652174 AS "Proba_1.0", -0.245122458033 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.625 AS "Proba_0.0", -0.470003629246 AS "LogProba_0.0", 0.375 AS "Proba_1.0", -0.980829253012 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 0.13157894736842105 AS "Proba_0.0", -2.02814824729 AS "LogProba_0.0", 0.868421052631579 AS "Proba_1.0", -0.14107859826 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, 0.12628500930476477 AS threshold, 249 AS count, 1 AS depth, 0.7710843373493976 AS "Proba_0.0", -0.259957524437 AS "LogProba_0.0", 0.2289156626506024 AS "Proba_1.0", -1.47440162863 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 10.21062434597983 AS threshold, 221 AS count, 2 AS depth, 0.7420814479638009 AS "Proba_0.0", -0.298296273694 AS "LogProba_0.0", 0.2579185520361991 AS "Proba_1.0", -1.35511143368 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 210 AS count, 3 AS depth, 0.780952380952381 AS "Proba_0.0", -0.247241102893 AS "LogProba_0.0", 0.21904761904761905 AS "Proba_1.0", -1.51846613423 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0.0" AS "Proba_8_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1.0" AS "Proba_8_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_8_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 0.13906785397774266) THEN CASE WHEN ("ADS"."Feature_26" <= 0.40031743170077094) THEN CASE WHEN ("ADS"."Feature_12" <= 3.754391193290885) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.005322544935841731) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_19" <= 0.021273696682263733) THEN CASE WHEN ("ADS"."Feature_25" <= 0.6576764937719464) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_6' AS feature, 0.13906785397774266 AS threshold, 569 AS count, 0 AS depth, 0.37258347978910367 AS "Proba_0.0", -0.987294159454 AS "LogProba_0.0", 0.6274165202108963 AS "Proba_1.0", -0.466144652347 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_26' AS feature, 0.40031743170077094 AS threshold, 440 AS count, 1 AS depth, 0.20681818181818182 AS "Proba_0.0", -1.5759152204 AS "LogProba_0.0", 0.7931818181818182 AS "Proba_1.0", -0.23170280471 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 3.754391193290885 AS threshold, 413 AS count, 2 AS depth, 0.17675544794188863 AS "Proba_0.0", -1.73298815181 AS "LogProba_0.0", 0.8232445520581114 AS "Proba_1.0", -0.194501975351 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 374 AS count, 3 AS depth, 0.11764705882352941 AS "Proba_0.0", -2.1400661635 AS "LogProba_0.0", 0.8823529411764706 AS "Proba_1.0", -0.125163142954 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 0.7435897435897436 AS "Proba_0.0", -0.296265816143 AS "LogProba_0.0", 0.2564102564102564 AS "Proba_1.0", -1.36097655314 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_19' AS feature, 0.005322544935841731 AS threshold, 27 AS count, 2 AS depth, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 0.7619047619047619 AS "Proba_0.0", -0.271933715484 AS "LogProba_0.0", 0.23809523809523808 AS "Proba_1.0", -1.43508452529 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_19' AS feature, 0.021273696682263733 AS threshold, 129 AS count, 1 AS depth, 0.937984496124031 AS "Proba_0.0", -0.0640218587649 AS "LogProba_0.0", 0.06201550387596899 AS "Proba_1.0", -2.78037086268 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_25' AS feature, 0.6576764937719464 AS threshold, 128 AS count, 2 AS depth, 0.9453125 AS "Proba_0.0", -0.0562397183229 AS "LogProba_0.0", 0.0546875 AS "Proba_1.0", -2.90612011486 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, 0.9375 AS "Proba_0.0", -0.0645385211376 AS "LogProba_0.0", 0.0625 AS "Proba_1.0", -2.77258872224 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0.0" AS "Proba_9_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1.0" AS "Proba_9_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_9_1" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte