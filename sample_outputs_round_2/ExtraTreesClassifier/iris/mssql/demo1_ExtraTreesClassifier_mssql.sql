-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] <= 5.521128367517377) THEN CASE WHEN ([ADS].[Feature_1] <= 2.542369146721012) THEN CASE WHEN ([ADS].[Feature_2] <= 2.3285940238943343) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_3] <= 1.0022468056715876) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_3] <= 1.413716032838644) THEN CASE WHEN ([ADS].[Feature_2] <= 3.7778068329207684) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_3] <= 2.0486623568221285) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 5.521128367517377 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 2.542369146721012 AS threshold, 59 AS count, 1 AS depth, 0.7966101694915254 AS [Proba_0.0], -0.227389842196 AS [LogProba_0.0], 0.1864406779661017 AS [Proba_1.0], -1.67964217111 AS [LogProba_1.0], 0.01694915254237288 AS [Proba_2.0], -4.07753744391 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 2.3285940238943343 AS threshold, 10 AS count, 2 AS depth, 0.1 AS [Proba_0.0], -2.30258509299 AS [LogProba_0.0], 0.8 AS [Proba_1.0], -0.223143551314 AS [LogProba_1.0], 0.1 AS [Proba_2.0], -2.30258509299 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.8888888888888888 AS [Proba_1.0], -0.117783035656 AS [LogProba_1.0], 0.1111111111111111 AS [Proba_2.0], -2.19722457734 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 1.0022468056715876 AS threshold, 49 AS count, 2 AS depth, 0.9387755102040817 AS [Proba_0.0], -0.0631789016215 AS [LogProba_0.0], 0.061224489795918366 AS [Proba_1.0], -2.79320800944 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 1.413716032838644 AS threshold, 91 AS count, 1 AS depth, 0.03296703296703297 AS [Proba_0.0], -3.41224721785 AS [LogProba_0.0], 0.42857142857142855 AS [Proba_1.0], -0.847297860387 AS [LogProba_1.0], 0.5384615384615384 AS [Proba_2.0], -0.619039208406 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 3.7778068329207684 AS threshold, 29 AS count, 2 AS depth, 0.10344827586206896 AS [Proba_0.0], -2.26868354132 AS [LogProba_0.0], 0.8620689655172413 AS [Proba_1.0], -0.148420005118 AS [LogProba_1.0], 0.034482758620689655 AS [Proba_2.0], -3.36729582999 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.6 AS [Proba_0.0], -0.510825623766 AS [LogProba_0.0], 0.4 AS [Proba_1.0], -0.916290731874 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.9583333333333334 AS [Proba_1.0], -0.0425596144188 AS [LogProba_1.0], 0.041666666666666664 AS [Proba_2.0], -3.17805383035 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 2.0486623568221285 AS threshold, 62 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.22580645161290322 AS [Proba_1.0], -1.48807705543 AS [LogProba_1.0], 0.7741935483870968 AS [Proba_2.0], -0.255933374137 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.358974358974359 AS [Proba_1.0], -1.02450431651 AS [LogProba_1.0], 0.6410256410256411 AS [Proba_2.0], -0.444685821261 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].[Proba_0.0] AS [Proba_0.0], [DT_node_data].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data].[Proba_1.0] AS [Proba_1.0], [DT_node_data].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data].[Proba_2.0] AS [Proba_2.0], [DT_node_data].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0.0] AS [Proba_0_0], [DT_Output].[LogProba_0.0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1.0] AS [Proba_0_1], [DT_Output].[LogProba_1.0] AS [LogProba_0_1], CAST(NULL AS FLOAT) AS [Score_0_2], [DT_Output].[Proba_2.0] AS [Proba_0_2], [DT_Output].[LogProba_2.0] AS [LogProba_0_2] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 1.550495550183813) THEN CASE WHEN ([ADS].[Feature_2] <= 2.5923285292922946) THEN 2 ELSE CASE WHEN ([ADS].[Feature_0] <= 5.705189773431058) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_0] <= 7.837086453538894) THEN CASE WHEN ([ADS].[Feature_2] <= 4.929612401262796) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.550495550183813 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 2.5923285292922946 AS threshold, 98 AS count, 1 AS depth, 0.5102040816326531 AS [Proba_0.0], -0.672944473242 AS [LogProba_0.0], 0.45918367346938777 AS [Proba_1.0], -0.7783049889 AS [LogProba_1.0], 0.030612244897959183 AS [Proba_2.0], -3.48635519 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 2 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, 5.705189773431058 AS threshold, 48 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.9375 AS [Proba_1.0], -0.0645385211376 AS [LogProba_1.0], 0.0625 AS [Proba_2.0], -2.77258872224 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.8888888888888888 AS [Proba_1.0], -0.117783035656 AS [LogProba_1.0], 0.1111111111111111 AS [Proba_2.0], -2.19722457734 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_0' AS feature, 7.837086453538894 AS threshold, 52 AS count, 1 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.09615384615384616 AS [Proba_1.0], -2.34180580615 AS [LogProba_1.0], 0.9038461538461539 AS [Proba_2.0], -0.101096116871 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, 'Feature_2' AS feature, 4.929612401262796 AS threshold, 51 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.09803921568627451 AS [Proba_1.0], -2.32238772029 AS [LogProba_1.0], 0.9019607843137255 AS [Proba_2.0], -0.103184236235 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.6666666666666666 AS [Proba_2.0], -0.405465108108 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.047619047619047616 AS [Proba_1.0], -3.04452243772 AS [LogProba_1.0], 0.9523809523809523 AS [Proba_2.0], -0.0487901641694 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].[Proba_0.0] AS [Proba_0.0], [DT_node_data_1].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_1].[Proba_1.0] AS [Proba_1.0], [DT_node_data_1].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_1].[Proba_2.0] AS [Proba_2.0], [DT_node_data_1].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0.0] AS [Proba_1_0], [DT_Output_1].[LogProba_0.0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1.0] AS [Proba_1_1], [DT_Output_1].[LogProba_1.0] AS [LogProba_1_1], CAST(NULL AS FLOAT) AS [Score_1_2], [DT_Output_1].[Proba_2.0] AS [Proba_1_2], [DT_Output_1].[LogProba_2.0] AS [LogProba_1_2] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 1.5465266340960862) THEN CASE WHEN ([ADS].[Feature_2] <= 4.607131704041432) THEN CASE WHEN ([ADS].[Feature_2] <= 3.3003282579766613) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_1] <= 3.022618393331123) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_2] <= 5.5267771045887315) THEN CASE WHEN ([ADS].[Feature_2] <= 4.976488760894392) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.5465266340960862 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 4.607131704041432 AS threshold, 98 AS count, 1 AS depth, 0.5102040816326531 AS [Proba_0.0], -0.672944473242 AS [LogProba_0.0], 0.45918367346938777 AS [Proba_1.0], -0.7783049889 AS [LogProba_1.0], 0.030612244897959183 AS [Proba_2.0], -3.48635519 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 3.3003282579766613 AS threshold, 88 AS count, 2 AS depth, 0.5681818181818182 AS [Proba_0.0], -0.56531380905 AS [LogProba_0.0], 0.4318181818181818 AS [Proba_1.0], -0.839750654752 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 0.9433962264150944 AS [Proba_0.0], -0.058268908124 AS [LogProba_0.0], 0.05660377358490566 AS [Proba_1.0], -2.87167962488 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 3.022618393331123 AS threshold, 10 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.7 AS [Proba_1.0], -0.356674943939 AS [LogProba_1.0], 0.3 AS [Proba_2.0], -1.20397280433 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.5714285714285714 AS [Proba_1.0], -0.559615787935 AS [LogProba_1.0], 0.42857142857142855 AS [Proba_2.0], -0.847297860387 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 5.5267771045887315 AS threshold, 52 AS count, 1 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.09615384615384616 AS [Proba_1.0], -2.34180580615 AS [LogProba_1.0], 0.9038461538461539 AS [Proba_2.0], -0.101096116871 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 4.976488760894392 AS threshold, 28 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.17857142857142858 AS [Proba_1.0], -1.72276659774 AS [LogProba_1.0], 0.8214285714285714 AS [Proba_2.0], -0.196710294246 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.6666666666666666 AS [Proba_2.0], -0.405465108108 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.10526315789473684 AS [Proba_1.0], -2.25129179861 AS [LogProba_1.0], 0.8947368421052632 AS [Proba_2.0], -0.11122563511 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].[Proba_0.0] AS [Proba_0.0], [DT_node_data_2].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_2].[Proba_1.0] AS [Proba_1.0], [DT_node_data_2].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_2].[Proba_2.0] AS [Proba_2.0], [DT_node_data_2].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0.0] AS [Proba_2_0], [DT_Output_2].[LogProba_0.0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1.0] AS [Proba_2_1], [DT_Output_2].[LogProba_1.0] AS [LogProba_2_1], CAST(NULL AS FLOAT) AS [Score_2_2], [DT_Output_2].[Proba_2.0] AS [Proba_2_2], [DT_Output_2].[LogProba_2.0] AS [LogProba_2_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] <= 5.10965102517489) THEN CASE WHEN ([ADS].[Feature_3] <= 0.34237436990699954) THEN 2 ELSE CASE WHEN ([ADS].[Feature_3] <= 0.42014141078495837) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_0] <= 6.316368227848866) THEN CASE WHEN ([ADS].[Feature_2] <= 2.2660720664650214) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_0] <= 6.836921223642733) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 5.10965102517489 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.34237436990699954 AS threshold, 41 AS count, 1 AS depth, 0.8780487804878049 AS [Proba_0.0], -0.130053128248 AS [LogProba_0.0], 0.0975609756097561 AS [Proba_1.0], -2.32727770558 AS [LogProba_1.0], 0.024390243902439025 AS [Proba_2.0], -3.7135720667 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 2 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, 'Feature_3' AS feature, 0.42014141078495837 AS threshold, 10 AS count, 2 AS depth, 0.5 AS [Proba_0.0], -0.69314718056 AS [LogProba_0.0], 0.4 AS [Proba_1.0], -0.916290731874 AS [LogProba_1.0], 0.1 AS [Proba_2.0], -2.30258509299 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.2857142857142857 AS [Proba_0.0], -1.2527629685 AS [LogProba_0.0], 0.5714285714285714 AS [Proba_1.0], -0.559615787935 AS [LogProba_1.0], 0.14285714285714285 AS [Proba_2.0], -1.94591014906 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_0' AS feature, 6.316368227848866 AS threshold, 109 AS count, 1 AS depth, 0.12844036697247707 AS [Proba_0.0], -2.05229055261 AS [LogProba_0.0], 0.42201834862385323 AS [Proba_1.0], -0.86270648574 AS [LogProba_1.0], 0.44954128440366975 AS [Proba_2.0], -0.799527584119 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, 'Feature_2' AS feature, 2.2660720664650214 AS threshold, 67 AS count, 2 AS depth, 0.208955223880597 AS [Proba_0.0], -1.56563528978 AS [LogProba_0.0], 0.5223880597014925 AS [Proba_1.0], -0.649344557902 AS [LogProba_1.0], 0.26865671641791045 AS [Proba_2.0], -1.31432086149 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.660377358490566 AS [Proba_1.0], -0.414943852063 AS [LogProba_1.0], 0.33962264150943394 AS [Proba_2.0], -1.07992015566 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, 'Feature_0' AS feature, 6.836921223642733 AS threshold, 42 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.2619047619047619 AS [Proba_1.0], -1.33977434548 AS [LogProba_1.0], 0.7380952380952381 AS [Proba_2.0], -0.303682413798 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.36 AS [Proba_1.0], -1.02165124753 AS [LogProba_1.0], 0.64 AS [Proba_2.0], -0.446287102628 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.11764705882352941 AS [Proba_1.0], -2.1400661635 AS [LogProba_1.0], 0.8823529411764706 AS [Proba_2.0], -0.125163142954 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].[Proba_0.0] AS [Proba_0.0], [DT_node_data_3].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_3].[Proba_1.0] AS [Proba_1.0], [DT_node_data_3].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_3].[Proba_2.0] AS [Proba_2.0], [DT_node_data_3].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0.0] AS [Proba_3_0], [DT_Output_3].[LogProba_0.0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1.0] AS [Proba_3_1], [DT_Output_3].[LogProba_1.0] AS [LogProba_3_1], CAST(NULL AS FLOAT) AS [Score_3_2], [DT_Output_3].[Proba_2.0] AS [Proba_3_2], [DT_Output_3].[LogProba_2.0] AS [LogProba_3_2] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 1.3441161325132915) THEN CASE WHEN ([ADS].[Feature_1] <= 3.0101406622719056) THEN CASE WHEN ([ADS].[Feature_0] <= 5.551334735276994) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_3] <= 2.4678047676893247) THEN CASE WHEN ([ADS].[Feature_0] <= 7.448019989555711) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.3441161325132915 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 3.0101406622719056 AS threshold, 78 AS count, 1 AS depth, 0.6410256410256411 AS [Proba_0.0], -0.444685821261 AS [LogProba_0.0], 0.358974358974359 AS [Proba_1.0], -1.02450431651 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 5.551334735276994 AS threshold, 36 AS count, 2 AS depth, 0.2222222222222222 AS [Proba_0.0], -1.50407739678 AS [LogProba_0.0], 0.7777777777777778 AS [Proba_1.0], -0.251314428281 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.47058823529411764 AS [Proba_0.0], -0.753771802376 AS [LogProba_0.0], 0.5294117647058824 AS [Proba_1.0], -0.63598876672 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 2 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 2.4678047676893247 AS threshold, 72 AS count, 1 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.3055555555555556 AS [Proba_1.0], -1.18562366566 AS [LogProba_1.0], 0.6944444444444444 AS [Proba_2.0], -0.364643113588 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, 'Feature_0' AS feature, 7.448019989555711 AS threshold, 69 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.3188405797101449 AS [Proba_1.0], -1.14306405124 AS [LogProba_1.0], 0.6811594202898551 AS [Proba_2.0], -0.383958902887 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.3492063492063492 AS [Proba_1.0], -1.05209227303 AS [LogProba_1.0], 0.6507936507936508 AS [Proba_2.0], -0.429562659687 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].[Proba_0.0] AS [Proba_0.0], [DT_node_data_4].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_4].[Proba_1.0] AS [Proba_1.0], [DT_node_data_4].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_4].[Proba_2.0] AS [Proba_2.0], [DT_node_data_4].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_4].[Decision] AS [Decision] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, CAST(NULL AS FLOAT) AS [Score_4_0], [DT_Output_4].[Proba_0.0] AS [Proba_4_0], [DT_Output_4].[LogProba_0.0] AS [LogProba_4_0], CAST(NULL AS FLOAT) AS [Score_4_1], [DT_Output_4].[Proba_1.0] AS [Proba_4_1], [DT_Output_4].[LogProba_1.0] AS [LogProba_4_1], CAST(NULL AS FLOAT) AS [Score_4_2], [DT_Output_4].[Proba_2.0] AS [Proba_4_2], [DT_Output_4].[LogProba_2.0] AS [LogProba_4_2] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 1.7676213332657358) THEN CASE WHEN ([ADS].[Feature_1] <= 3.4545610617739615) THEN CASE WHEN ([ADS].[Feature_2] <= 3.650285462161111) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_2] <= 6.55489343400626) THEN CASE WHEN ([ADS].[Feature_3] <= 2.3957138480805513) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.7676213332657358 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 3.4545610617739615 AS threshold, 104 AS count, 1 AS depth, 0.4807692307692308 AS [Proba_0.0], -0.732367893713 AS [LogProba_0.0], 0.47115384615384615 AS [Proba_1.0], -0.752570601031 AS [LogProba_1.0], 0.04807692307692308 AS [Proba_2.0], -3.03495298671 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 3.650285462161111 AS threshold, 83 AS count, 2 AS depth, 0.3493975903614458 AS [Proba_0.0], -1.05154477781 AS [LogProba_0.0], 0.5903614457831325 AS [Proba_1.0], -0.527020309686 AS [LogProba_1.0], 0.060240963855421686 AS [Proba_2.0], -2.80940269536 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 0.8285714285714286 AS [Proba_0.0], -0.188052231503 AS [LogProba_0.0], 0.17142857142857143 AS [Proba_1.0], -1.76358859226 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.8958333333333334 AS [Proba_1.0], -0.110000895214 AS [LogProba_1.0], 0.10416666666666667 AS [Proba_2.0], -2.26176309847 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 6.55489343400626 AS threshold, 46 AS count, 1 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.021739130434782608 AS [Proba_1.0], -3.82864139649 AS [LogProba_1.0], 0.9782608695652174 AS [Proba_2.0], -0.0219789067188 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, 2.3957138480805513 AS threshold, 42 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.023809523809523808 AS [Proba_1.0], -3.73766961828 AS [LogProba_1.0], 0.9761904761904762 AS [Proba_2.0], -0.0240975515791 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.027777777777777776 AS [Proba_1.0], -3.58351893846 AS [LogProba_1.0], 0.9722222222222222 AS [Proba_2.0], -0.0281708769667 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].[Proba_0.0] AS [Proba_0.0], [DT_node_data_5].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_5].[Proba_1.0] AS [Proba_1.0], [DT_node_data_5].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_5].[Proba_2.0] AS [Proba_2.0], [DT_node_data_5].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_5].[Decision] AS [Decision] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, CAST(NULL AS FLOAT) AS [Score_5_0], [DT_Output_5].[Proba_0.0] AS [Proba_5_0], [DT_Output_5].[LogProba_0.0] AS [LogProba_5_0], CAST(NULL AS FLOAT) AS [Score_5_1], [DT_Output_5].[Proba_1.0] AS [Proba_5_1], [DT_Output_5].[LogProba_1.0] AS [LogProba_5_1], CAST(NULL AS FLOAT) AS [Score_5_2], [DT_Output_5].[Proba_2.0] AS [Proba_5_2], [DT_Output_5].[LogProba_2.0] AS [LogProba_5_2] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 1.838072087718473) THEN CASE WHEN ([ADS].[Feature_3] <= 0.9490862997275972) THEN 2 ELSE CASE WHEN ([ADS].[Feature_2] <= 3.9259614145650565) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 1.838072087718473 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.9490862997275972 AS threshold, 116 AS count, 1 AS depth, 0.43103448275862066 AS [Proba_0.0], -0.841567185678 AS [LogProba_0.0], 0.43103448275862066 AS [Proba_1.0], -0.841567185678 AS [LogProba_1.0], 0.13793103448275862 AS [Proba_2.0], -1.98100146887 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 2 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 3.9259614145650565 AS threshold, 66 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.7575757575757576 AS [Proba_1.0], -0.277631736598 AS [LogProba_1.0], 0.24242424242424243 AS [Proba_2.0], -1.41706601979 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.7090909090909091 AS [Proba_1.0], -0.343771539103 AS [LogProba_1.0], 0.2909090909090909 AS [Proba_2.0], -1.23474446299 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 1 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].[Proba_0.0] AS [Proba_0.0], [DT_node_data_6].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_6].[Proba_1.0] AS [Proba_1.0], [DT_node_data_6].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_6].[Proba_2.0] AS [Proba_2.0], [DT_node_data_6].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_6].[Decision] AS [Decision] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, CAST(NULL AS FLOAT) AS [Score_6_0], [DT_Output_6].[Proba_0.0] AS [Proba_6_0], [DT_Output_6].[LogProba_0.0] AS [LogProba_6_0], CAST(NULL AS FLOAT) AS [Score_6_1], [DT_Output_6].[Proba_1.0] AS [Proba_6_1], [DT_Output_6].[LogProba_1.0] AS [LogProba_6_1], CAST(NULL AS FLOAT) AS [Score_6_2], [DT_Output_6].[Proba_2.0] AS [Proba_6_2], [DT_Output_6].[LogProba_2.0] AS [LogProba_6_2] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] <= 4.835077980950054) THEN 1 ELSE CASE WHEN ([ADS].[Feature_2] <= 5.052121131706581) THEN CASE WHEN ([ADS].[Feature_3] <= 1.187984123199987) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_2] <= 5.857148444117273) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 4.835077980950054 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 5.052121131706581 AS threshold, 134 AS count, 1 AS depth, 0.2537313432835821 AS [Proba_0.0], -1.37147927533 AS [LogProba_0.0], 0.373134328358209 AS [Proba_1.0], -0.985816794523 AS [LogProba_1.0], 0.373134328358209 AS [Proba_2.0], -0.985816794523 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'Feature_3' AS feature, 1.187984123199987 AS threshold, 92 AS count, 2 AS depth, 0.3695652173913043 AS [Proba_0.0], -0.995428052433 AS [LogProba_0.0], 0.532608695652174 AS [Proba_1.0], -0.629968278938 AS [LogProba_1.0], 0.09782608695652174 AS [Proba_2.0], -2.32456399971 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 0.7727272727272727 AS [Proba_0.0], -0.257829109302 AS [LogProba_0.0], 0.22727272727272727 AS [Proba_1.0], -1.48160454092 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.8125 AS [Proba_1.0], -0.207639364778 AS [LogProba_1.0], 0.1875 AS [Proba_2.0], -1.67397643357 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 5.857148444117273 AS threshold, 42 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.023809523809523808 AS [Proba_1.0], -3.73766961828 AS [LogProba_1.0], 0.9761904761904762 AS [Proba_2.0], -0.0240975515791 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.034482758620689655 AS [Proba_1.0], -3.36729582999 AS [LogProba_1.0], 0.9655172413793104 AS [Proba_2.0], -0.0350913198113 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].[Proba_0.0] AS [Proba_0.0], [DT_node_data_7].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_7].[Proba_1.0] AS [Proba_1.0], [DT_node_data_7].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_7].[Proba_2.0] AS [Proba_2.0], [DT_node_data_7].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_7].[Decision] AS [Decision] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, CAST(NULL AS FLOAT) AS [Score_7_0], [DT_Output_7].[Proba_0.0] AS [Proba_7_0], [DT_Output_7].[LogProba_0.0] AS [LogProba_7_0], CAST(NULL AS FLOAT) AS [Score_7_1], [DT_Output_7].[Proba_1.0] AS [Proba_7_1], [DT_Output_7].[LogProba_1.0] AS [LogProba_7_1], CAST(NULL AS FLOAT) AS [Score_7_2], [DT_Output_7].[Proba_2.0] AS [Proba_7_2], [DT_Output_7].[LogProba_2.0] AS [LogProba_7_2] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 2.0691016397809667) THEN 1 ELSE CASE WHEN ([ADS].[Feature_3] <= 2.2998321977443212) THEN CASE WHEN ([ADS].[Feature_2] <= 5.756850155334021) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.0691016397809667 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 2.2998321977443212 AS threshold, 100 AS count, 1 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.5 AS [Proba_1.0], -0.69314718056 AS [LogProba_1.0], 0.5 AS [Proba_2.0], -0.69314718056 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 5.756850155334021 AS threshold, 86 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.5813953488372093 AS [Proba_1.0], -0.542324290825 AS [LogProba_1.0], 0.4186046511627907 AS [Proba_2.0], -0.870828357797 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.6666666666666666 AS [Proba_1.0], -0.405465108108 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 1.0 AS [Proba_2.0], 0.0 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].[Proba_0.0] AS [Proba_0.0], [DT_node_data_8].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_8].[Proba_1.0] AS [Proba_1.0], [DT_node_data_8].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_8].[Proba_2.0] AS [Proba_2.0], [DT_node_data_8].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_8].[Decision] AS [Decision] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, CAST(NULL AS FLOAT) AS [Score_8_0], [DT_Output_8].[Proba_0.0] AS [Proba_8_0], [DT_Output_8].[LogProba_0.0] AS [LogProba_8_0], CAST(NULL AS FLOAT) AS [Score_8_1], [DT_Output_8].[Proba_1.0] AS [Proba_8_1], [DT_Output_8].[LogProba_1.0] AS [LogProba_8_1], CAST(NULL AS FLOAT) AS [Score_8_2], [DT_Output_8].[Proba_2.0] AS [Proba_8_2], [DT_Output_8].[LogProba_2.0] AS [LogProba_8_2] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 1.7984751272085284) THEN 1 ELSE CASE WHEN ([ADS].[Feature_2] <= 2.743614525085631) THEN 3 ELSE CASE WHEN ([ADS].[Feature_3] <= 1.5726279935672078) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 1.7984751272085284 AS threshold, 150 AS count, 0 AS depth, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 1 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 2.743614525085631 AS threshold, 102 AS count, 1 AS depth, 0.0196078431372549 AS [Proba_0.0], -3.93182563272 AS [LogProba_0.0], 0.49019607843137253 AS [Proba_1.0], -0.712949807856 AS [LogProba_1.0], 0.49019607843137253 AS [Proba_2.0], -0.712949807856 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, 'Feature_3' AS feature, 1.5726279935672078 AS threshold, 100 AS count, 2 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.5 AS [Proba_1.0], -0.69314718056 AS [LogProba_1.0], 0.5 AS [Proba_2.0], -0.69314718056 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.9375 AS [Proba_1.0], -0.0645385211376 AS [LogProba_1.0], 0.0625 AS [Proba_2.0], -2.77258872224 AS [LogProba_2.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.09615384615384616 AS [Proba_1.0], -2.34180580615 AS [LogProba_1.0], 0.9038461538461539 AS [Proba_2.0], -0.101096116871 AS [LogProba_2.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].[Proba_0.0] AS [Proba_0.0], [DT_node_data_9].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_9].[Proba_1.0] AS [Proba_1.0], [DT_node_data_9].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_9].[Proba_2.0] AS [Proba_2.0], [DT_node_data_9].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_9].[Decision] AS [Decision] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, CAST(NULL AS FLOAT) AS [Score_9_0], [DT_Output_9].[Proba_0.0] AS [Proba_9_0], [DT_Output_9].[LogProba_0.0] AS [LogProba_9_0], CAST(NULL AS FLOAT) AS [Score_9_1], [DT_Output_9].[Proba_1.0] AS [Proba_9_1], [DT_Output_9].[LogProba_1.0] AS [LogProba_9_1], CAST(NULL AS FLOAT) AS [Score_9_2], [DT_Output_9].[Proba_2.0] AS [Proba_9_2], [DT_Output_9].[LogProba_2.0] AS [LogProba_9_2] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Score_0_0] AS [Score_0_0], [RF_Tree_0].[Proba_0_0] AS [Proba_0_0], [RF_Tree_0].[LogProba_0_0] AS [LogProba_0_0], [RF_Tree_0].[Score_0_1] AS [Score_0_1], [RF_Tree_0].[Proba_0_1] AS [Proba_0_1], [RF_Tree_0].[LogProba_0_1] AS [LogProba_0_1], [RF_Tree_0].[Score_0_2] AS [Score_0_2], [RF_Tree_0].[Proba_0_2] AS [Proba_0_2], [RF_Tree_0].[LogProba_0_2] AS [LogProba_0_2], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Score_1_0] AS [Score_1_0], [RF_Tree_1].[Proba_1_0] AS [Proba_1_0], [RF_Tree_1].[LogProba_1_0] AS [LogProba_1_0], [RF_Tree_1].[Score_1_1] AS [Score_1_1], [RF_Tree_1].[Proba_1_1] AS [Proba_1_1], [RF_Tree_1].[LogProba_1_1] AS [LogProba_1_1], [RF_Tree_1].[Score_1_2] AS [Score_1_2], [RF_Tree_1].[Proba_1_2] AS [Proba_1_2], [RF_Tree_1].[LogProba_1_2] AS [LogProba_1_2], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Score_2_0] AS [Score_2_0], [RF_Tree_2].[Proba_2_0] AS [Proba_2_0], [RF_Tree_2].[LogProba_2_0] AS [LogProba_2_0], [RF_Tree_2].[Score_2_1] AS [Score_2_1], [RF_Tree_2].[Proba_2_1] AS [Proba_2_1], [RF_Tree_2].[LogProba_2_1] AS [LogProba_2_1], [RF_Tree_2].[Score_2_2] AS [Score_2_2], [RF_Tree_2].[Proba_2_2] AS [Proba_2_2], [RF_Tree_2].[LogProba_2_2] AS [LogProba_2_2], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Score_3_0] AS [Score_3_0], [RF_Tree_3].[Proba_3_0] AS [Proba_3_0], [RF_Tree_3].[LogProba_3_0] AS [LogProba_3_0], [RF_Tree_3].[Score_3_1] AS [Score_3_1], [RF_Tree_3].[Proba_3_1] AS [Proba_3_1], [RF_Tree_3].[LogProba_3_1] AS [LogProba_3_1], [RF_Tree_3].[Score_3_2] AS [Score_3_2], [RF_Tree_3].[Proba_3_2] AS [Proba_3_2], [RF_Tree_3].[LogProba_3_2] AS [LogProba_3_2], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Score_4_0] AS [Score_4_0], [RF_Tree_4].[Proba_4_0] AS [Proba_4_0], [RF_Tree_4].[LogProba_4_0] AS [LogProba_4_0], [RF_Tree_4].[Score_4_1] AS [Score_4_1], [RF_Tree_4].[Proba_4_1] AS [Proba_4_1], [RF_Tree_4].[LogProba_4_1] AS [LogProba_4_1], [RF_Tree_4].[Score_4_2] AS [Score_4_2], [RF_Tree_4].[Proba_4_2] AS [Proba_4_2], [RF_Tree_4].[LogProba_4_2] AS [LogProba_4_2], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Score_5_0] AS [Score_5_0], [RF_Tree_5].[Proba_5_0] AS [Proba_5_0], [RF_Tree_5].[LogProba_5_0] AS [LogProba_5_0], [RF_Tree_5].[Score_5_1] AS [Score_5_1], [RF_Tree_5].[Proba_5_1] AS [Proba_5_1], [RF_Tree_5].[LogProba_5_1] AS [LogProba_5_1], [RF_Tree_5].[Score_5_2] AS [Score_5_2], [RF_Tree_5].[Proba_5_2] AS [Proba_5_2], [RF_Tree_5].[LogProba_5_2] AS [LogProba_5_2], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Score_6_0] AS [Score_6_0], [RF_Tree_6].[Proba_6_0] AS [Proba_6_0], [RF_Tree_6].[LogProba_6_0] AS [LogProba_6_0], [RF_Tree_6].[Score_6_1] AS [Score_6_1], [RF_Tree_6].[Proba_6_1] AS [Proba_6_1], [RF_Tree_6].[LogProba_6_1] AS [LogProba_6_1], [RF_Tree_6].[Score_6_2] AS [Score_6_2], [RF_Tree_6].[Proba_6_2] AS [Proba_6_2], [RF_Tree_6].[LogProba_6_2] AS [LogProba_6_2], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Score_7_0] AS [Score_7_0], [RF_Tree_7].[Proba_7_0] AS [Proba_7_0], [RF_Tree_7].[LogProba_7_0] AS [LogProba_7_0], [RF_Tree_7].[Score_7_1] AS [Score_7_1], [RF_Tree_7].[Proba_7_1] AS [Proba_7_1], [RF_Tree_7].[LogProba_7_1] AS [LogProba_7_1], [RF_Tree_7].[Score_7_2] AS [Score_7_2], [RF_Tree_7].[Proba_7_2] AS [Proba_7_2], [RF_Tree_7].[LogProba_7_2] AS [LogProba_7_2], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Score_8_0] AS [Score_8_0], [RF_Tree_8].[Proba_8_0] AS [Proba_8_0], [RF_Tree_8].[LogProba_8_0] AS [LogProba_8_0], [RF_Tree_8].[Score_8_1] AS [Score_8_1], [RF_Tree_8].[Proba_8_1] AS [Proba_8_1], [RF_Tree_8].[LogProba_8_1] AS [LogProba_8_1], [RF_Tree_8].[Score_8_2] AS [Score_8_2], [RF_Tree_8].[Proba_8_2] AS [Proba_8_2], [RF_Tree_8].[LogProba_8_2] AS [LogProba_8_2], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Score_9_0] AS [Score_9_0], [RF_Tree_9].[Proba_9_0] AS [Proba_9_0], [RF_Tree_9].[LogProba_9_0] AS [LogProba_9_0], [RF_Tree_9].[Score_9_1] AS [Score_9_1], [RF_Tree_9].[Proba_9_1] AS [Proba_9_1], [RF_Tree_9].[LogProba_9_1] AS [LogProba_9_1], [RF_Tree_9].[Score_9_2] AS [Score_9_2], [RF_Tree_9].[Proba_9_2] AS [Proba_9_2], [RF_Tree_9].[LogProba_9_2] AS [LogProba_9_2] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Score_0_0] / 10 + [RF_Join_CTE].[Score_1_0] / 10 + [RF_Join_CTE].[Score_2_0] / 10 + [RF_Join_CTE].[Score_3_0] / 10 + [RF_Join_CTE].[Score_4_0] / 10 + [RF_Join_CTE].[Score_5_0] / 10 + [RF_Join_CTE].[Score_6_0] / 10 + [RF_Join_CTE].[Score_7_0] / 10 + [RF_Join_CTE].[Score_8_0] / 10 + [RF_Join_CTE].[Score_9_0] / 10 AS [Score_0], [RF_Join_CTE].[Proba_0_0] / 10 + [RF_Join_CTE].[Proba_1_0] / 10 + [RF_Join_CTE].[Proba_2_0] / 10 + [RF_Join_CTE].[Proba_3_0] / 10 + [RF_Join_CTE].[Proba_4_0] / 10 + [RF_Join_CTE].[Proba_5_0] / 10 + [RF_Join_CTE].[Proba_6_0] / 10 + [RF_Join_CTE].[Proba_7_0] / 10 + [RF_Join_CTE].[Proba_8_0] / 10 + [RF_Join_CTE].[Proba_9_0] / 10 AS [Proba_0], [RF_Join_CTE].[LogProba_0_0] / 10 + [RF_Join_CTE].[LogProba_1_0] / 10 + [RF_Join_CTE].[LogProba_2_0] / 10 + [RF_Join_CTE].[LogProba_3_0] / 10 + [RF_Join_CTE].[LogProba_4_0] / 10 + [RF_Join_CTE].[LogProba_5_0] / 10 + [RF_Join_CTE].[LogProba_6_0] / 10 + [RF_Join_CTE].[LogProba_7_0] / 10 + [RF_Join_CTE].[LogProba_8_0] / 10 + [RF_Join_CTE].[LogProba_9_0] / 10 AS [LogProba_0], [RF_Join_CTE].[Score_0_1] / 10 + [RF_Join_CTE].[Score_1_1] / 10 + [RF_Join_CTE].[Score_2_1] / 10 + [RF_Join_CTE].[Score_3_1] / 10 + [RF_Join_CTE].[Score_4_1] / 10 + [RF_Join_CTE].[Score_5_1] / 10 + [RF_Join_CTE].[Score_6_1] / 10 + [RF_Join_CTE].[Score_7_1] / 10 + [RF_Join_CTE].[Score_8_1] / 10 + [RF_Join_CTE].[Score_9_1] / 10 AS [Score_1], [RF_Join_CTE].[Proba_0_1] / 10 + [RF_Join_CTE].[Proba_1_1] / 10 + [RF_Join_CTE].[Proba_2_1] / 10 + [RF_Join_CTE].[Proba_3_1] / 10 + [RF_Join_CTE].[Proba_4_1] / 10 + [RF_Join_CTE].[Proba_5_1] / 10 + [RF_Join_CTE].[Proba_6_1] / 10 + [RF_Join_CTE].[Proba_7_1] / 10 + [RF_Join_CTE].[Proba_8_1] / 10 + [RF_Join_CTE].[Proba_9_1] / 10 AS [Proba_1], [RF_Join_CTE].[LogProba_0_1] / 10 + [RF_Join_CTE].[LogProba_1_1] / 10 + [RF_Join_CTE].[LogProba_2_1] / 10 + [RF_Join_CTE].[LogProba_3_1] / 10 + [RF_Join_CTE].[LogProba_4_1] / 10 + [RF_Join_CTE].[LogProba_5_1] / 10 + [RF_Join_CTE].[LogProba_6_1] / 10 + [RF_Join_CTE].[LogProba_7_1] / 10 + [RF_Join_CTE].[LogProba_8_1] / 10 + [RF_Join_CTE].[LogProba_9_1] / 10 AS [LogProba_1], [RF_Join_CTE].[Score_0_2] / 10 + [RF_Join_CTE].[Score_1_2] / 10 + [RF_Join_CTE].[Score_2_2] / 10 + [RF_Join_CTE].[Score_3_2] / 10 + [RF_Join_CTE].[Score_4_2] / 10 + [RF_Join_CTE].[Score_5_2] / 10 + [RF_Join_CTE].[Score_6_2] / 10 + [RF_Join_CTE].[Score_7_2] / 10 + [RF_Join_CTE].[Score_8_2] / 10 + [RF_Join_CTE].[Score_9_2] / 10 AS [Score_2], [RF_Join_CTE].[Proba_0_2] / 10 + [RF_Join_CTE].[Proba_1_2] / 10 + [RF_Join_CTE].[Proba_2_2] / 10 + [RF_Join_CTE].[Proba_3_2] / 10 + [RF_Join_CTE].[Proba_4_2] / 10 + [RF_Join_CTE].[Proba_5_2] / 10 + [RF_Join_CTE].[Proba_6_2] / 10 + [RF_Join_CTE].[Proba_7_2] / 10 + [RF_Join_CTE].[Proba_8_2] / 10 + [RF_Join_CTE].[Proba_9_2] / 10 AS [Proba_2], [RF_Join_CTE].[LogProba_0_2] / 10 + [RF_Join_CTE].[LogProba_1_2] / 10 + [RF_Join_CTE].[LogProba_2_2] / 10 + [RF_Join_CTE].[LogProba_3_2] / 10 + [RF_Join_CTE].[LogProba_4_2] / 10 + [RF_Join_CTE].[LogProba_5_2] / 10 + [RF_Join_CTE].[LogProba_6_2] / 10 + [RF_Join_CTE].[LogProba_7_2] / 10 + [RF_Join_CTE].[LogProba_8_2] / 10 + [RF_Join_CTE].[LogProba_9_2] / 10 AS [LogProba_2] 
FROM [RF_Join_CTE]), 
orig_cte AS 
(SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Score_0] AS [Score_0], [RF_AVG_Scores].[Score_1] AS [Score_1], [RF_AVG_Scores].[Score_2] AS [Score_2], [RF_AVG_Scores].[Proba_0] AS [Proba_0], [RF_AVG_Scores].[Proba_1] AS [Proba_1], [RF_AVG_Scores].[Proba_2] AS [Proba_2], [RF_AVG_Scores].[LogProba_0] AS [LogProba_0], [RF_AVG_Scores].[LogProba_1] AS [LogProba_1], [RF_AVG_Scores].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [RF_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], arg_max_cte.[arg_max_Proba] AS [Decision] 
FROM arg_max_cte