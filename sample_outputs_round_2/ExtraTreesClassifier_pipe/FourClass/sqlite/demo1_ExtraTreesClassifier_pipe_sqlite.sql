-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.555115225168 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0226912633313 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.15843312661 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.235488552713 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0592719293977 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.174627732889 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0278033768397 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.100355834937 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.106701819276 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.123845032093 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.107024083039 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.0238437244578 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.02841156397 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.112102266942 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0549457483591 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.0458852917428 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.221573539301 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.23413210787 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.51192496096 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.00445536106112 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.555115225168 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.0226912633313 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.15843312661 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.235488552713 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.0592719293977 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.174627732889 AS impute_7, "ADS_imp_1_OUT".impute_8 - -0.0278033768397 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.100355834937 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.106701819276 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.123845032093 AS impute_11, "ADS_imp_1_OUT".impute_12 - 0.107024083039 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.0238437244578 AS impute_13, "ADS_imp_1_OUT".impute_14 - -0.02841156397 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.112102266942 AS impute_15, "ADS_imp_1_OUT".impute_16 - 0.0549457483591 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.0458852917428 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.221573539301 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.23413210787 AS impute_19, "ADS_imp_1_OUT".impute_20 - 0.51192496096 AS impute_20, "ADS_imp_1_OUT".impute_21 - 0.00445536106112 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.246709687527 + "CenteredDataForPCA".impute_3 * -0.0839981237286 + "CenteredDataForPCA".impute_4 * -0.415961726304 + "CenteredDataForPCA".impute_5 * -0.345049616272 + "CenteredDataForPCA".impute_6 * 0.00956252679369 + "CenteredDataForPCA".impute_7 * -0.0166475936841 + "CenteredDataForPCA".impute_8 * -0.0744133337562 + "CenteredDataForPCA".impute_9 * 0.0536089743599 + "CenteredDataForPCA".impute_10 * 0.10766453925 + "CenteredDataForPCA".impute_11 * 0.0352574541439 + "CenteredDataForPCA".impute_12 * -0.0742918485098 + "CenteredDataForPCA".impute_13 * -0.0550037473209 + "CenteredDataForPCA".impute_14 * -0.0576309929804 + "CenteredDataForPCA".impute_15 * -0.0246576114132 + "CenteredDataForPCA".impute_16 * 0.0504622884033 + "CenteredDataForPCA".impute_17 * 0.0503013883605 + "CenteredDataForPCA".impute_18 * 0.225987506797 + "CenteredDataForPCA".impute_19 * -0.0276428887032 + "CenteredDataForPCA".impute_20 * -0.740059517908 + "CenteredDataForPCA".impute_21 * 0.0361578923735 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.52400384829 + "CenteredDataForPCA".impute_3 * 0.0542132434386 + "CenteredDataForPCA".impute_4 * 0.209584775971 + "CenteredDataForPCA".impute_5 * -0.547770687977 + "CenteredDataForPCA".impute_6 * 0.0512415072117 + "CenteredDataForPCA".impute_7 * 0.0477469879423 + "CenteredDataForPCA".impute_8 * 0.0198325478347 + "CenteredDataForPCA".impute_9 * 0.0199005832753 + "CenteredDataForPCA".impute_10 * -0.339474105114 + "CenteredDataForPCA".impute_11 * 0.0163823745414 + "CenteredDataForPCA".impute_12 * -0.0183573284088 + "CenteredDataForPCA".impute_13 * -0.0289771562067 + "CenteredDataForPCA".impute_14 * -0.0531397344806 + "CenteredDataForPCA".impute_15 * 0.0348028513373 + "CenteredDataForPCA".impute_16 * 0.0580851460095 + "CenteredDataForPCA".impute_17 * -0.0179491261142 + "CenteredDataForPCA".impute_18 * 0.483264339901 + "CenteredDataForPCA".impute_19 * 0.0924893649301 + "CenteredDataForPCA".impute_20 * 0.0633505399823 + "CenteredDataForPCA".impute_21 * 0.047714965735 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.50622279176 + "CenteredDataForPCA".impute_3 * 0.0370245124245 + "CenteredDataForPCA".impute_4 * 0.574945787582 + "CenteredDataForPCA".impute_5 * -0.10772091859 + "CenteredDataForPCA".impute_6 * -0.0376996537193 + "CenteredDataForPCA".impute_7 * -0.233890900782 + "CenteredDataForPCA".impute_8 * 0.154331203617 + "CenteredDataForPCA".impute_9 * -0.0759586364055 + "CenteredDataForPCA".impute_10 * -0.166213145815 + "CenteredDataForPCA".impute_11 * 0.0197311891227 + "CenteredDataForPCA".impute_12 * -0.139817726943 + "CenteredDataForPCA".impute_13 * -0.0169547964301 + "CenteredDataForPCA".impute_14 * 0.0788559920334 + "CenteredDataForPCA".impute_15 * -0.053447552095 + "CenteredDataForPCA".impute_16 * 0.0916600071879 + "CenteredDataForPCA".impute_17 * 0.0238478852352 + "CenteredDataForPCA".impute_18 * 0.147097332612 + "CenteredDataForPCA".impute_19 * -0.0633652180101 + "CenteredDataForPCA".impute_20 * -0.104272618569 + "CenteredDataForPCA".impute_21 * -0.460503886958 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.135259968766 + "CenteredDataForPCA".impute_3 * -0.294827629775 + "CenteredDataForPCA".impute_4 * -0.151630859252 + "CenteredDataForPCA".impute_5 * 0.193655354828 + "CenteredDataForPCA".impute_6 * -0.362242019387 + "CenteredDataForPCA".impute_7 * -0.0443451029704 + "CenteredDataForPCA".impute_8 * -0.0482234144935 + "CenteredDataForPCA".impute_9 * -0.306491724891 + "CenteredDataForPCA".impute_10 * -0.590193637393 + "CenteredDataForPCA".impute_11 * -0.132930625399 + "CenteredDataForPCA".impute_12 * -0.0783754045975 + "CenteredDataForPCA".impute_13 * -0.0200168424086 + "CenteredDataForPCA".impute_14 * -0.0104980698331 + "CenteredDataForPCA".impute_15 * -0.15270354032 + "CenteredDataForPCA".impute_16 * -0.0306964533549 + "CenteredDataForPCA".impute_17 * 0.0570553409798 + "CenteredDataForPCA".impute_18 * 0.0295712413158 + "CenteredDataForPCA".impute_19 * 0.41407584338 + "CenteredDataForPCA".impute_20 * -0.0204028876204 + "CenteredDataForPCA".impute_21 * 0.178663056729 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.240935997793 + "CenteredDataForPCA".impute_3 * -0.011429061709 + "CenteredDataForPCA".impute_4 * 0.1435847455 + "CenteredDataForPCA".impute_5 * 0.0629464546279 + "CenteredDataForPCA".impute_6 * 0.406067442513 + "CenteredDataForPCA".impute_7 * 0.0209183417854 + "CenteredDataForPCA".impute_8 * -0.10250177568 + "CenteredDataForPCA".impute_9 * 0.314781677131 + "CenteredDataForPCA".impute_10 * -0.282087278845 + "CenteredDataForPCA".impute_11 * -0.22419487738 + "CenteredDataForPCA".impute_12 * 0.296309388869 + "CenteredDataForPCA".impute_13 * -0.0098723195626 + "CenteredDataForPCA".impute_14 * 0.339229728857 + "CenteredDataForPCA".impute_15 * 0.0370570469188 + "CenteredDataForPCA".impute_16 * 0.164426500781 + "CenteredDataForPCA".impute_17 * 0.278818276632 + "CenteredDataForPCA".impute_18 * 0.0431962614066 + "CenteredDataForPCA".impute_19 * -0.100456121986 + "CenteredDataForPCA".impute_20 * -0.0305042088699 + "CenteredDataForPCA".impute_21 * 0.436429874195 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.139101674167 + "CenteredDataForPCA".impute_3 * 0.269449539536 + "CenteredDataForPCA".impute_4 * -0.432295172078 + "CenteredDataForPCA".impute_5 * 0.173180990528 + "CenteredDataForPCA".impute_6 * 0.330750137722 + "CenteredDataForPCA".impute_7 * -0.280106218226 + "CenteredDataForPCA".impute_8 * 0.0848681605117 + "CenteredDataForPCA".impute_9 * -0.123504264101 + "CenteredDataForPCA".impute_10 * -0.42819663027 + "CenteredDataForPCA".impute_11 * 0.176755010923 + "CenteredDataForPCA".impute_12 * 0.180747513869 + "CenteredDataForPCA".impute_13 * 0.130583871857 + "CenteredDataForPCA".impute_14 * 0.00807517395603 + "CenteredDataForPCA".impute_15 * -0.0111642802624 + "CenteredDataForPCA".impute_16 * 0.00213457195566 + "CenteredDataForPCA".impute_17 * 0.118054830162 + "CenteredDataForPCA".impute_18 * -0.0126797094241 + "CenteredDataForPCA".impute_19 * -0.179069792997 + "CenteredDataForPCA".impute_20 * -0.0127672027411 + "CenteredDataForPCA".impute_21 * -0.412344792621 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.117239410213 + "CenteredDataForPCA".impute_3 * 0.326535541027 + "CenteredDataForPCA".impute_4 * 0.0130601757493 + "CenteredDataForPCA".impute_5 * -0.0931013343823 + "CenteredDataForPCA".impute_6 * -0.331281401616 + "CenteredDataForPCA".impute_7 * -0.650528300841 + "CenteredDataForPCA".impute_8 * -0.156652044481 + "CenteredDataForPCA".impute_9 * -0.165662363801 + "CenteredDataForPCA".impute_10 * 0.194072430605 + "CenteredDataForPCA".impute_11 * -0.0393059560536 + "CenteredDataForPCA".impute_12 * -0.0109117414233 + "CenteredDataForPCA".impute_13 * -0.0969944776906 + "CenteredDataForPCA".impute_14 * 0.287667779634 + "CenteredDataForPCA".impute_15 * 0.0246381833925 + "CenteredDataForPCA".impute_16 * -0.121627286099 + "CenteredDataForPCA".impute_17 * 0.271482579708 + "CenteredDataForPCA".impute_18 * 0.00921844512633 + "CenteredDataForPCA".impute_19 * -0.060900000981 + "CenteredDataForPCA".impute_20 * 0.0128164567304 + "CenteredDataForPCA".impute_21 * 0.247634455125 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.0472496248915 + "CenteredDataForPCA".impute_3 * -0.318616402675 + "CenteredDataForPCA".impute_4 * 0.0748205375541 + "CenteredDataForPCA".impute_5 * -0.0180652976563 + "CenteredDataForPCA".impute_6 * -0.161341573264 + "CenteredDataForPCA".impute_7 * 0.0897954417506 + "CenteredDataForPCA".impute_8 * -0.177301704705 + "CenteredDataForPCA".impute_9 * 0.123283140419 + "CenteredDataForPCA".impute_10 * -0.123106554181 + "CenteredDataForPCA".impute_11 * 0.333430540037 + "CenteredDataForPCA".impute_12 * 0.187519355477 + "CenteredDataForPCA".impute_13 * -0.0270377573049 + "CenteredDataForPCA".impute_14 * 0.0188427054655 + "CenteredDataForPCA".impute_15 * 0.422486131581 + "CenteredDataForPCA".impute_16 * -0.605709001629 + "CenteredDataForPCA".impute_17 * 0.235793931815 + "CenteredDataForPCA".impute_18 * 0.0504781379595 + "CenteredDataForPCA".impute_19 * -0.184174544514 + "CenteredDataForPCA".impute_20 * -0.00120677626689 + "CenteredDataForPCA".impute_21 * -0.0978285751078 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.0463527551111 + "CenteredDataForPCA".impute_3 * 0.379927161888 + "CenteredDataForPCA".impute_4 * -0.0163853749655 + "CenteredDataForPCA".impute_5 * -0.033854731469 + "CenteredDataForPCA".impute_6 * -0.257433721322 + "CenteredDataForPCA".impute_7 * 0.502084206386 + "CenteredDataForPCA".impute_8 * 0.102427704112 + "CenteredDataForPCA".impute_9 * -0.138837207722 + "CenteredDataForPCA".impute_10 * -0.101283001213 + "CenteredDataForPCA".impute_11 * -0.0104184161423 + "CenteredDataForPCA".impute_12 * 0.0871082998601 + "CenteredDataForPCA".impute_13 * 0.02173820432 + "CenteredDataForPCA".impute_14 * 0.360273368361 + "CenteredDataForPCA".impute_15 * -0.41462179538 + "CenteredDataForPCA".impute_16 * -0.28209552807 + "CenteredDataForPCA".impute_17 * -0.0635604652834 + "CenteredDataForPCA".impute_18 * 0.0549923551662 + "CenteredDataForPCA".impute_19 * -0.302211640227 + "CenteredDataForPCA".impute_20 * -0.0716470442119 + "CenteredDataForPCA".impute_21 * 0.0268662022624 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.0635726053711 + "CenteredDataForPCA".impute_3 * 0.0175400889568 + "CenteredDataForPCA".impute_4 * -0.0874901917362 + "CenteredDataForPCA".impute_5 * 0.000394465434482 + "CenteredDataForPCA".impute_6 * -0.421112031723 + "CenteredDataForPCA".impute_7 * 0.205297603425 + "CenteredDataForPCA".impute_8 * 0.424011440451 + "CenteredDataForPCA".impute_9 * 0.0556287484434 + "CenteredDataForPCA".impute_10 * 0.0661822852478 + "CenteredDataForPCA".impute_11 * 0.0136885977828 + "CenteredDataForPCA".impute_12 * 0.293836078669 + "CenteredDataForPCA".impute_13 * -0.0682425801931 + "CenteredDataForPCA".impute_14 * 0.0695701877748 + "CenteredDataForPCA".impute_15 * 0.289291058975 + "CenteredDataForPCA".impute_16 * 0.462043213508 + "CenteredDataForPCA".impute_17 * 0.405376714325 + "CenteredDataForPCA".impute_18 * -0.0219198095624 + "CenteredDataForPCA".impute_19 * 0.0467226097289 + "CenteredDataForPCA".impute_20 * -0.00851659169851 + "CenteredDataForPCA".impute_21 * -0.144878417105 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.16551969864 + "CenteredDataForPCA".impute_3 * -0.481765685305 + "CenteredDataForPCA".impute_4 * -0.0314723654999 + "CenteredDataForPCA".impute_5 * -0.128919405524 + "CenteredDataForPCA".impute_6 * 0.19720846227 + "CenteredDataForPCA".impute_7 * -0.0507035071321 + "CenteredDataForPCA".impute_8 * 0.196570061325 + "CenteredDataForPCA".impute_9 * -0.358279811762 + "CenteredDataForPCA".impute_10 * 0.231349929669 + "CenteredDataForPCA".impute_11 * -0.469866204016 + "CenteredDataForPCA".impute_12 * 0.141392122082 + "CenteredDataForPCA".impute_13 * 0.19676651609 + "CenteredDataForPCA".impute_14 * 0.311287761469 + "CenteredDataForPCA".impute_15 * -0.0637377555712 + "CenteredDataForPCA".impute_16 * -0.16846248174 + "CenteredDataForPCA".impute_17 * 0.0913474938932 + "CenteredDataForPCA".impute_18 * 0.0229051395424 + "CenteredDataForPCA".impute_19 * -0.0568925453162 + "CenteredDataForPCA".impute_20 * -0.0103070431853 + "CenteredDataForPCA".impute_21 * -0.19966991485 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.0228557451984 + "CenteredDataForPCA".impute_3 * 0.173359661006 + "CenteredDataForPCA".impute_4 * -0.0832121248884 + "CenteredDataForPCA".impute_5 * 0.00137877424818 + "CenteredDataForPCA".impute_6 * -0.0950866055657 + "CenteredDataForPCA".impute_7 * 0.0493516782655 + "CenteredDataForPCA".impute_8 * -0.177958119895 + "CenteredDataForPCA".impute_9 * 0.118463188929 + "CenteredDataForPCA".impute_10 * -0.0394239893808 + "CenteredDataForPCA".impute_11 * -0.0815953855845 + "CenteredDataForPCA".impute_12 * -0.0603856957601 + "CenteredDataForPCA".impute_13 * 0.356007005544 + "CenteredDataForPCA".impute_14 * 0.498784381166 + "CenteredDataForPCA".impute_15 * 0.465790904674 + "CenteredDataForPCA".impute_16 * 0.0460912201011 + "CenteredDataForPCA".impute_17 * -0.423089175601 + "CenteredDataForPCA".impute_18 * 0.0102359427857 + "CenteredDataForPCA".impute_19 * 0.304276134895 + "CenteredDataForPCA".impute_20 * -0.0673765963701 + "CenteredDataForPCA".impute_21 * -0.150381223254 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.155345150528 + "CenteredDataForPCA".impute_3 * 0.256956850531 + "CenteredDataForPCA".impute_4 * 0.0498606883101 + "CenteredDataForPCA".impute_5 * 0.0049799747991 + "CenteredDataForPCA".impute_6 * 0.249016190651 + "CenteredDataForPCA".impute_7 * 0.0790768252448 + "CenteredDataForPCA".impute_8 * 0.427649975574 + "CenteredDataForPCA".impute_9 * -0.478718088803 + "CenteredDataForPCA".impute_10 * -0.0206133014985 + "CenteredDataForPCA".impute_11 * -0.0162511774575 + "CenteredDataForPCA".impute_12 * -0.0560174426366 + "CenteredDataForPCA".impute_13 * -0.121209736231 + "CenteredDataForPCA".impute_14 * -0.144419145146 + "CenteredDataForPCA".impute_15 * 0.471169292754 + "CenteredDataForPCA".impute_16 * -0.189491261917 + "CenteredDataForPCA".impute_17 * -0.0962147166488 + "CenteredDataForPCA".impute_18 * 0.00752922647549 + "CenteredDataForPCA".impute_19 * 0.038957033312 + "CenteredDataForPCA".impute_20 * -0.0797844545208 + "CenteredDataForPCA".impute_21 * 0.33545818113 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.11605640886 + "CenteredDataForPCA".impute_3 * -0.0646824063465 + "CenteredDataForPCA".impute_4 * -0.158664402287 + "CenteredDataForPCA".impute_5 * 0.0842859448012 + "CenteredDataForPCA".impute_6 * 0.100315506676 + "CenteredDataForPCA".impute_7 * 0.0769852262101 + "CenteredDataForPCA".impute_8 * 0.0705156448704 + "CenteredDataForPCA".impute_9 * 0.160332722258 + "CenteredDataForPCA".impute_10 * -0.086443124358 + "CenteredDataForPCA".impute_11 * -0.141835195558 + "CenteredDataForPCA".impute_12 * -0.534124188094 + "CenteredDataForPCA".impute_13 * -0.655295753238 + "CenteredDataForPCA".impute_14 * 0.32181031834 + "CenteredDataForPCA".impute_15 * 0.115830856829 + "CenteredDataForPCA".impute_16 * -0.0368634595217 + "CenteredDataForPCA".impute_17 * 0.0656401982859 + "CenteredDataForPCA".impute_18 * -0.0420372847235 + "CenteredDataForPCA".impute_19 * -0.066107123854 + "CenteredDataForPCA".impute_20 * 0.0599919646867 + "CenteredDataForPCA".impute_21 * -0.169488261266 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.0128355584483 + "CenteredDataForPCA".impute_3 * -0.158657992992 + "CenteredDataForPCA".impute_4 * 0.0142268230413 + "CenteredDataForPCA".impute_5 * 0.0202679010165 + "CenteredDataForPCA".impute_6 * -0.105892980044 + "CenteredDataForPCA".impute_7 * 0.0862097250662 + "CenteredDataForPCA".impute_8 * -0.414279982577 + "CenteredDataForPCA".impute_9 * -0.408930217062 + "CenteredDataForPCA".impute_10 * -0.0969417385737 + "CenteredDataForPCA".impute_11 * -0.00832775051367 + "CenteredDataForPCA".impute_12 * -0.0422869250551 + "CenteredDataForPCA".impute_13 * -0.0445558585557 + "CenteredDataForPCA".impute_14 * -0.0123968279569 + "CenteredDataForPCA".impute_15 * 0.219550701184 + "CenteredDataForPCA".impute_16 * 0.424475659564 + "CenteredDataForPCA".impute_17 * -0.167587644881 + "CenteredDataForPCA".impute_18 * 0.0125467826197 + "CenteredDataForPCA".impute_19 * -0.585078313355 + "CenteredDataForPCA".impute_20 * 0.0375426124738 + "CenteredDataForPCA".impute_21 * 0.0529818284026 AS anoova_16, "CenteredDataForPCA".impute_2 * 0.0448543878439 + "CenteredDataForPCA".impute_3 * 0.186924652744 + "CenteredDataForPCA".impute_4 * 0.0579659731766 + "CenteredDataForPCA".impute_5 * -0.0345788586592 + "CenteredDataForPCA".impute_6 * 0.106053758516 + "CenteredDataForPCA".impute_7 * 0.129979689109 + "CenteredDataForPCA".impute_8 * -0.410090788932 + "CenteredDataForPCA".impute_9 * -0.221228885649 + "CenteredDataForPCA".impute_10 * 0.110090181516 + "CenteredDataForPCA".impute_11 * -0.145694904981 + "CenteredDataForPCA".impute_12 * 0.48941397387 + "CenteredDataForPCA".impute_13 * -0.494289291033 + "CenteredDataForPCA".impute_14 * -0.0629905719753 + "CenteredDataForPCA".impute_15 * -0.00128402492922 + "CenteredDataForPCA".impute_16 * -0.0260766627335 + "CenteredDataForPCA".impute_17 * -0.0302958119643 + "CenteredDataForPCA".impute_18 * -0.00419633218609 + "CenteredDataForPCA".impute_19 * 0.34412785522 + "CenteredDataForPCA".impute_20 * -0.0284477024793 + "CenteredDataForPCA".impute_21 * -0.266870318086 AS anoova_17, "CenteredDataForPCA".impute_2 * 0.0104967915849 + "CenteredDataForPCA".impute_3 * 0.239266242611 + "CenteredDataForPCA".impute_4 * 0.0398235767048 + "CenteredDataForPCA".impute_5 * 0.0023587919035 + "CenteredDataForPCA".impute_6 * 0.109320900878 + "CenteredDataForPCA".impute_7 * 0.293529586847 + "CenteredDataForPCA".impute_8 * -0.323729488245 + "CenteredDataForPCA".impute_9 * -0.13752350549 + "CenteredDataForPCA".impute_10 * 0.0531446792983 + "CenteredDataForPCA".impute_11 * -0.181394472816 + "CenteredDataForPCA".impute_12 * -0.399486958056 + "CenteredDataForPCA".impute_13 * 0.327263704252 + "CenteredDataForPCA".impute_14 * -0.153052392908 + "CenteredDataForPCA".impute_15 * 0.0849005218848 + "CenteredDataForPCA".impute_16 * -0.0205743556485 + "CenteredDataForPCA".impute_17 * 0.597200794954 + "CenteredDataForPCA".impute_18 * -0.0162185302664 + "CenteredDataForPCA".impute_19 * 0.121822275633 + "CenteredDataForPCA".impute_20 * 0.0181908487607 + "CenteredDataForPCA".impute_21 * -0.116903003751 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.0201824872266 + "CenteredDataForPCA".impute_3 * -0.162663263973 + "CenteredDataForPCA".impute_4 * 0.0538247539098 + "CenteredDataForPCA".impute_5 * -0.0263832969639 + "CenteredDataForPCA".impute_6 * 0.237809333437 + "CenteredDataForPCA".impute_7 * 0.0933587973369 + "CenteredDataForPCA".impute_8 * -0.0345632080925 + "CenteredDataForPCA".impute_9 * -0.292087089795 + "CenteredDataForPCA".impute_10 * 0.148803926164 + "CenteredDataForPCA".impute_11 * 0.695623810595 + "CenteredDataForPCA".impute_12 * -0.0761854400735 + "CenteredDataForPCA".impute_13 * -0.00758685777781 + "CenteredDataForPCA".impute_14 * 0.396217622891 + "CenteredDataForPCA".impute_15 * -0.154766108769 + "CenteredDataForPCA".impute_16 * 0.184130553489 + "CenteredDataForPCA".impute_17 * 0.131940296283 + "CenteredDataForPCA".impute_18 * -0.0233137352991 + "CenteredDataForPCA".impute_19 * 0.254197656651 + "CenteredDataForPCA".impute_20 * 0.023624258076 + "CenteredDataForPCA".impute_21 * 0.0888442664988 AS anoova_19, "CenteredDataForPCA".impute_2 * 0.470713761975 + "CenteredDataForPCA".impute_3 * 7.77156117238e-16 + "CenteredDataForPCA".impute_4 * -0.405770759226 + "CenteredDataForPCA".impute_5 * -0.360300430115 + "CenteredDataForPCA".impute_6 * 1.35308431126e-16 + "CenteredDataForPCA".impute_7 * 2.08166817117e-17 + "CenteredDataForPCA".impute_8 * 7.2858385991e-17 + "CenteredDataForPCA".impute_9 * -4.85722573274e-17 + "CenteredDataForPCA".impute_10 * 0.0843704853901 + "CenteredDataForPCA".impute_11 * 3.25260651746e-17 + "CenteredDataForPCA".impute_12 * -4.85722573274e-17 + "CenteredDataForPCA".impute_13 * 8.67361737988e-18 + "CenteredDataForPCA".impute_14 * 2.08166817117e-17 + "CenteredDataForPCA".impute_15 * -4.16333634234e-17 + "CenteredDataForPCA".impute_16 * 4.51028103754e-17 + "CenteredDataForPCA".impute_17 * 1.04083408559e-16 + "CenteredDataForPCA".impute_18 * 0.253019126939 + "CenteredDataForPCA".impute_19 * 6.93889390391e-17 + "CenteredDataForPCA".impute_20 * 0.642514737497 + "CenteredDataForPCA".impute_21 * -3.46944695195e-17 AS anoova_20, "CenteredDataForPCA".impute_2 * -0.0253858511423 + "CenteredDataForPCA".impute_3 * 3.1918911958e-16 + "CenteredDataForPCA".impute_4 * -0.00612065124636 + "CenteredDataForPCA".impute_5 * 0.576031125178 + "CenteredDataForPCA".impute_6 * -2.66713734431e-17 + "CenteredDataForPCA".impute_7 * 8.80372164058e-17 + "CenteredDataForPCA".impute_8 * -6.74373751286e-17 + "CenteredDataForPCA".impute_9 * 1.08420217249e-19 + "CenteredDataForPCA".impute_10 * 0.224164723881 + "CenteredDataForPCA".impute_11 * 1.03351572092e-16 + "CenteredDataForPCA".impute_12 * 4.66206934169e-17 + "CenteredDataForPCA".impute_13 * 1.98408997565e-16 + "CenteredDataForPCA".impute_14 * 2.24429849704e-16 + "CenteredDataForPCA".impute_15 * 5.26922255828e-17 + "CenteredDataForPCA".impute_16 * 3.69712940818e-17 + "CenteredDataForPCA".impute_17 * -7.8496237288e-17 + "CenteredDataForPCA".impute_18 * 0.785655946705 + "CenteredDataForPCA".impute_19 * 4.68375338514e-17 + "CenteredDataForPCA".impute_20 * -0.00107190992009 + "CenteredDataForPCA".impute_21 * -6.93889390391e-18 AS anoova_21 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= -0.7158317482215457) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.5696723064636204) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.057799257891461675) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -1.0811490656674767) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -5.367140161766429) THEN 9 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.3149914522887789) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_19' AS feature, -0.7158317482215457 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.5696723064636204 AS threshold, 16 AS count, 1 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.4375 AS "Proba_1.0", -0.826678573184 AS "LogProba_1.0", 0.1875 AS "Proba_2.0", -1.67397643357 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, -0.057799257891461675 AS threshold, 5 AS count, 2 AS depth, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.4 AS "Proba_2.0", -0.916290731874 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_6' AS feature, -1.0811490656674767 AS threshold, 11 AS count, 2 AS depth, 0.2727272727272727 AS "Proba_0.0", -1.29928298413 AS "LogProba_0.0", 0.5454545454545454 AS "Proba_1.0", -0.60613580357 AS "LogProba_1.0", 0.09090909090909091 AS "Proba_2.0", -2.3978952728 AS "LogProba_2.0", 0.09090909090909091 AS "Proba_3.0", -2.3978952728 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'anoova_3' AS feature, -5.367140161766429 AS threshold, 84 AS count, 1 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.2261904761904762 AS "Proba_1.0", -1.48637781968 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.27380952380952384 AS "Proba_3.0", -1.29532258291 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 10 AS node_id, 'anoova_5' AS feature, 0.3149914522887789 AS threshold, 83 AS count, 2 AS depth, 0.25301204819277107 AS "Proba_0.0", -1.37431817007 AS "LogProba_0.0", 0.2289156626506024 AS "Proba_1.0", -1.47440162863 AS "LogProba_1.0", 0.24096385542168675 AS "Proba_2.0", -1.42310833424 AS "LogProba_2.0", 0.27710843373493976 AS "Proba_3.0", -1.28334639187 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 0.1568627450980392 AS "Proba_0.0", -1.85238409104 AS "LogProba_0.0", 0.11764705882352941 AS "Proba_1.0", -2.1400661635 AS "LogProba_1.0", 0.35294117647058826 AS "Proba_2.0", -1.04145387483 AS "LogProba_2.0", 0.37254901960784315 AS "Proba_3.0", -0.987386653558 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 0.40625 AS "Proba_0.0", -0.900786545338 AS "LogProba_0.0", 0.40625 AS "Proba_1.0", -0.900786545338 AS "LogProba_1.0", 0.0625 AS "Proba_2.0", -2.77258872224 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.11703413947177843) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= -0.6598091472656131) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= -1.0066042683193859) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= 0.6191902898239654) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_17 <= 0.25557539538661134) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_16 <= 0.5355456170534527) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 1.7431869565162859) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.11703413947177843 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, -0.6598091472656131 AS threshold, 57 AS count, 1 AS depth, 0.14035087719298245 AS "Proba_0.0", -1.96360972615 AS "LogProba_0.0", 0.17543859649122806 AS "Proba_1.0", -1.74046617484 AS "LogProba_1.0", 0.3508771929824561 AS "Proba_2.0", -1.04731899428 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_19' AS feature, -1.0066042683193859 AS threshold, 15 AS count, 2 AS depth, 0.06666666666666667 AS "Proba_0.0", -2.7080502011 AS "LogProba_0.0", 0.13333333333333333 AS "Proba_1.0", -2.01490302054 AS "LogProba_1.0", 0.6 AS "Proba_2.0", -0.510825623766 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.07692307692307693 AS "Proba_0.0", -2.56494935746 AS "LogProba_0.0", 0.07692307692307693 AS "Proba_1.0", -2.56494935746 AS "LogProba_1.0", 0.6923076923076923 AS "Proba_2.0", -0.367724780125 AS "LogProba_2.0", 0.15384615384615385 AS "Proba_3.0", -1.8718021769 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_12' AS feature, 0.6191902898239654 AS threshold, 42 AS count, 2 AS depth, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.19047619047619047 AS "Proba_1.0", -1.6582280766 AS "LogProba_1.0", 0.2619047619047619 AS "Proba_2.0", -1.33977434548 AS "LogProba_2.0", 0.38095238095238093 AS "Proba_3.0", -0.965080896044 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 0.17142857142857143 AS "Proba_0.0", -1.76358859226 AS "LogProba_0.0", 0.22857142857142856 AS "Proba_1.0", -1.47590651981 AS "LogProba_1.0", 0.22857142857142856 AS "Proba_2.0", -1.47590651981 AS "LogProba_2.0", 0.37142857142857144 AS "Proba_3.0", -0.990398704028 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.14285714285714285 AS "Proba_0.0", -1.94591014906 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.42857142857142855 AS "Proba_2.0", -0.847297860387 AS "LogProba_2.0", 0.42857142857142855 AS "Proba_3.0", -0.847297860387 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 8 AS node_id, 'anoova_17' AS feature, 0.25557539538661134 AS threshold, 43 AS count, 1 AS depth, 0.3953488372093023 AS "Proba_0.0", -0.927986771637 AS "LogProba_0.0", 0.37209302325581395 AS "Proba_1.0", -0.988611393454 AS "LogProba_1.0", 0.09302325581395349 AS "Proba_2.0", -2.37490575457 AS "LogProba_2.0", 0.13953488372093023 AS "Proba_3.0", -1.96944064647 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'anoova_16' AS feature, 0.5355456170534527 AS threshold, 25 AS count, 2 AS depth, 0.52 AS "Proba_0.0", -0.653926467407 AS "LogProba_0.0", 0.28 AS "Proba_1.0", -1.27296567581 AS "LogProba_1.0", 0.04 AS "Proba_2.0", -3.21887582487 AS "LogProba_2.0", 0.16 AS "Proba_3.0", -1.83258146375 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.5294117647058824 AS "Proba_0.0", -0.63598876672 AS "LogProba_0.0", 0.17647058823529413 AS "Proba_1.0", -1.73460105539 AS "LogProba_1.0", 0.058823529411764705 AS "Proba_2.0", -2.83321334406 AS "LogProba_2.0", 0.23529411764705882 AS "Proba_3.0", -1.44691898294 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, 'anoova_8' AS feature, 1.7431869565162859 AS threshold, 18 AS count, 2 AS depth, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.16666666666666666 AS "Proba_2.0", -1.79175946923 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.1875 AS "Proba_2.0", -1.67397643357 AS "LogProba_2.0", 0.0625 AS "Proba_3.0", -2.77258872224 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 1.0897369988397587) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 3.1761828394107763) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -1.6452383595507087) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -1.5114737780819452) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 1.740956102328608) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 4.1446051833719775) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.0897369988397587 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 3.1761828394107763 AS threshold, 80 AS count, 1 AS depth, 0.225 AS "Proba_0.0", -1.49165487678 AS "LogProba_0.0", 0.175 AS "Proba_1.0", -1.74296930506 AS "LogProba_1.0", 0.2875 AS "Proba_2.0", -1.24653241874 AS "LogProba_2.0", 0.3125 AS "Proba_3.0", -1.16315080981 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -1.6452383595507087 AS threshold, 77 AS count, 2 AS depth, 0.2077922077922078 AS "Proba_0.0", -1.57121669961 AS "LogProba_0.0", 0.16883116883116883 AS "Proba_1.0", -1.77885606439 AS "LogProba_1.0", 0.2987012987012987 AS "Proba_2.0", -1.20831120592 AS "LogProba_2.0", 0.3246753246753247 AS "Proba_3.0", -1.12492959699 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, 0.2191780821917808 AS "Proba_0.0", -1.51787071891 AS "LogProba_0.0", 0.1643835616438356 AS "Proba_1.0", -1.80555279136 AS "LogProba_1.0", 0.273972602739726 AS "Proba_2.0", -1.29472716759 AS "LogProba_2.0", 0.3424657534246575 AS "Proba_3.0", -1.07158361628 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_3' AS feature, -1.5114737780819452 AS threshold, 3 AS count, 2 AS depth, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'anoova_8' AS feature, 1.740956102328608 AS threshold, 20 AS count, 1 AS depth, 0.35 AS "Proba_0.0", -1.0498221245 AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 0.05 AS "Proba_2.0", -2.99573227355 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, 'anoova_3' AS feature, 4.1446051833719775 AS threshold, 18 AS count, 2 AS depth, 0.3888888888888889 AS "Proba_0.0", -0.944461608841 AS "LogProba_0.0", 0.5555555555555556 AS "Proba_1.0", -0.587786664902 AS "LogProba_1.0", 0.05555555555555555 AS "Proba_2.0", -2.8903717579 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.4166666666666667 AS "Proba_1.0", -0.875468737354 AS "LogProba_1.0", 0.08333333333333333 AS "Proba_2.0", -2.48490664979 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.8333333333333334 AS "Proba_1.0", -0.182321556794 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -2.9167757236020497) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 2.402255858402336) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= -0.3697945944577443) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_16 <= 0.4930552120712526) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= -1.624859155008084) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -1.0305503959005533) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -2.9167757236020497 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 2.402255858402336 AS threshold, 18 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5555555555555556 AS "Proba_1.0", -0.587786664902 AS "LogProba_1.0", 0.2222222222222222 AS "Proba_2.0", -1.50407739678 AS "LogProba_2.0", 0.2222222222222222 AS "Proba_3.0", -1.50407739678 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, -0.3697945944577443 AS threshold, 16 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.42857142857142855 AS "Proba_1.0", -0.847297860387 AS "LogProba_1.0", 0.42857142857142855 AS "Proba_2.0", -0.847297860387 AS "LogProba_2.0", 0.14285714285714285 AS "Proba_3.0", -1.94591014906 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5555555555555556 AS "Proba_1.0", -0.587786664902 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_16' AS feature, 0.4930552120712526 AS threshold, 82 AS count, 1 AS depth, 0.3048780487804878 AS "Proba_0.0", -1.1878434224 AS "LogProba_0.0", 0.1951219512195122 AS "Proba_1.0", -1.63413052502 AS "LogProba_1.0", 0.24390243902439024 AS "Proba_2.0", -1.41098697371 AS "LogProba_2.0", 0.25609756097560976 AS "Proba_3.0", -1.36219680954 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, 'anoova_18' AS feature, -1.624859155008084 AS threshold, 61 AS count, 2 AS depth, 0.29508196721311475 AS "Proba_0.0", -1.22050210628 AS "LogProba_0.0", 0.13114754098360656 AS "Proba_1.0", -2.03143232249 AS "LogProba_1.0", 0.26229508196721313 AS "Proba_2.0", -1.33828514193 AS "LogProba_2.0", 0.3114754098360656 AS "Proba_3.0", -1.16643488501 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 60 AS count, 3 AS depth, 0.3 AS "Proba_0.0", -1.20397280433 AS "LogProba_0.0", 0.11666666666666667 AS "Proba_1.0", -2.14843441317 AS "LogProba_1.0", 0.26666666666666666 AS "Proba_2.0", -1.32175583998 AS "LogProba_2.0", 0.31666666666666665 AS "Proba_3.0", -1.14990558306 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, 'anoova_4' AS feature, -1.0305503959005533 AS threshold, 21 AS count, 2 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.38095238095238093 AS "Proba_1.0", -0.965080896044 AS "LogProba_1.0", 0.19047619047619047 AS "Proba_2.0", -1.6582280766 AS "LogProba_2.0", 0.09523809523809523 AS "Proba_3.0", -2.35137525716 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.8 AS "Proba_0.0", -0.223143551314 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.1875 AS "Proba_0.0", -1.67397643357 AS "LogProba_0.0", 0.4375 AS "Proba_1.0", -0.826678573184 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -3.660076000974627) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 2.8052706790008957) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.16275582183458948) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_14 <= -0.3010603823477088) THEN 7 ELSE 8 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -3.660076000974627 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 2.8052706790008957 AS threshold, 98 AS count, 1 AS depth, 0.25510204081632654 AS "Proba_0.0", -1.3660916538 AS "LogProba_0.0", 0.2653061224489796 AS "Proba_1.0", -1.32687094065 AS "LogProba_1.0", 0.22448979591836735 AS "Proba_2.0", -1.49392502531 AS "LogProba_2.0", 0.25510204081632654 AS "Proba_3.0", -1.3660916538 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'anoova_3' AS feature, -0.16275582183458948 AS threshold, 89 AS count, 2 AS depth, 0.2696629213483146 AS "Proba_0.0", -1.31058253938 AS "LogProba_0.0", 0.20224719101123595 AS "Proba_1.0", -1.59826461184 AS "LogProba_1.0", 0.24719101123595505 AS "Proba_2.0", -1.39759391637 AS "LogProba_2.0", 0.2808988764044944 AS "Proba_3.0", -1.26976054486 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 0.16981132075471697 AS "Proba_0.0", -1.77306733622 AS "LogProba_0.0", 0.1509433962264151 AS "Proba_1.0", -1.89085037187 AS "LogProba_1.0", 0.37735849056603776 AS "Proba_2.0", -0.974559639998 AS "LogProba_2.0", 0.3018867924528302 AS "Proba_3.0", -1.19770319131 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 0.4166666666666667 AS "Proba_0.0", -0.875468737354 AS "LogProba_0.0", 0.2777777777777778 AS "Proba_1.0", -1.28093384546 AS "LogProba_1.0", 0.05555555555555555 AS "Proba_2.0", -2.8903717579 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_14' AS feature, -0.3010603823477088 AS threshold, 9 AS count, 2 AS depth, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.8888888888888888 AS "Proba_1.0", -0.117783035656 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.8333333333333334 AS "Proba_1.0", -0.182321556794 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Proba_2.0" AS "Proba_2.0", "DT_node_data_4"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_4"."Proba_3.0" AS "Proba_3.0", "DT_node_data_4"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0.0" AS "Proba_4_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1.0" AS "Proba_4_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2.0" AS "Proba_4_2", "DT_Output_4"."LogProba_2.0" AS "LogProba_4_2", CAST(NULL AS FLOAT) AS "Score_4_3", "DT_Output_4"."Proba_3.0" AS "Proba_4_3", "DT_Output_4"."LogProba_3.0" AS "LogProba_4_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= -1.2967646996318607) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 3.667832236657836) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_15 <= 0.08382580929802146) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= 0.8845624474552221) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -1.2300660540868227) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 3.9357430945431595) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_19' AS feature, -1.2967646996318607 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 3.667832236657836 AS threshold, 3 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_15' AS feature, 0.08382580929802146 AS threshold, 2 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_18' AS feature, 0.8845624474552221 AS threshold, 97 AS count, 1 AS depth, 0.25773195876288657 AS "Proba_0.0", -1.35583515364 AS "LogProba_0.0", 0.24742268041237114 AS "Proba_1.0", -1.39665714816 AS "LogProba_1.0", 0.24742268041237114 AS "Proba_2.0", -1.39665714816 AS "LogProba_2.0", 0.24742268041237114 AS "Proba_3.0", -1.39665714816 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, 'anoova_4' AS feature, -1.2300660540868227 AS threshold, 88 AS count, 2 AS depth, 0.26136363636363635 AS "Proba_0.0", -1.34184259855 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.2727272727272727 AS "Proba_2.0", -1.29928298413 AS "LogProba_2.0", 0.2159090909090909 AS "Proba_3.0", -1.53289783531 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.3125 AS "Proba_0.0", -1.16315080981 AS "LogProba_0.0", 0.0625 AS "Proba_1.0", -2.77258872224 AS "LogProba_1.0", 0.1875 AS "Proba_2.0", -1.67397643357 AS "LogProba_2.0", 0.4375 AS "Proba_3.0", -0.826678573184 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.2916666666666667 AS "Proba_1.0", -1.23214368129 AS "LogProba_1.0", 0.2916666666666667 AS "Proba_2.0", -1.23214368129 AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, 'anoova_3' AS feature, 3.9357430945431595 AS threshold, 9 AS count, 2 AS depth, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.2222222222222222 AS "Proba_1.0", -1.50407739678 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5555555555555556 AS "Proba_3.0", -0.587786664902 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.125 AS "Proba_1.0", -2.07944154168 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.625 AS "Proba_3.0", -0.470003629246 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Proba_2.0" AS "Proba_2.0", "DT_node_data_5"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_5"."Proba_3.0" AS "Proba_3.0", "DT_node_data_5"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0.0" AS "Proba_5_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1.0" AS "Proba_5_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2.0" AS "Proba_5_2", "DT_Output_5"."LogProba_2.0" AS "LogProba_5_2", CAST(NULL AS FLOAT) AS "Score_5_3", "DT_Output_5"."Proba_3.0" AS "Proba_5_3", "DT_Output_5"."LogProba_3.0" AS "LogProba_5_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.6357606664636344) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -1.1446813990726574) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.1718929085389056) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= 2.3454091250277678) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.5242301441160317) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= -0.6249438787006804) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_15 <= -1.087922885168808) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.6357606664636344 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, -1.1446813990726574 AS threshold, 75 AS count, 1 AS depth, 0.18666666666666668 AS "Proba_0.0", -1.67843078392 AS "LogProba_0.0", 0.26666666666666666 AS "Proba_1.0", -1.32175583998 AS "LogProba_1.0", 0.28 AS "Proba_2.0", -1.27296567581 AS "LogProba_2.0", 0.26666666666666666 AS "Proba_3.0", -1.32175583998 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_12' AS feature, -0.1718929085389056 AS threshold, 13 AS count, 2 AS depth, 0.07692307692307693 AS "Proba_0.0", -2.56494935746 AS "LogProba_0.0", 0.15384615384615385 AS "Proba_1.0", -1.8718021769 AS "LogProba_1.0", 0.5384615384615384 AS "Proba_2.0", -0.619039208406 AS "LogProba_2.0", 0.23076923076923078 AS "Proba_3.0", -1.46633706879 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_18' AS feature, 2.3454091250277678 AS threshold, 62 AS count, 2 AS depth, 0.20967741935483872 AS "Proba_0.0", -1.56218502758 AS "LogProba_0.0", 0.2903225806451613 AS "Proba_1.0", -1.23676262715 AS "LogProba_1.0", 0.22580645161290322 AS "Proba_2.0", -1.48807705543 AS "LogProba_2.0", 0.27419354838709675 AS "Proba_3.0", -1.29392104099 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, 0.19672131147540983 AS "Proba_0.0", -1.62596721439 AS "LogProba_0.0", 0.29508196721311475 AS "Proba_1.0", -1.22050210628 AS "LogProba_1.0", 0.22950819672131148 AS "Proba_2.0", -1.47181653456 AS "LogProba_2.0", 0.2786885245901639 AS "Proba_3.0", -1.27766052012 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'anoova_9' AS feature, 0.5242301441160317 AS threshold, 25 AS count, 1 AS depth, 0.44 AS "Proba_0.0", -0.82098055207 AS "LogProba_0.0", 0.24 AS "Proba_1.0", -1.42711635564 AS "LogProba_1.0", 0.12 AS "Proba_2.0", -2.1202635362 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'anoova_13' AS feature, -0.6249438787006804 AS threshold, 19 AS count, 2 AS depth, 0.47368421052631576 AS "Proba_0.0", -0.74721440183 AS "LogProba_0.0", 0.15789473684210525 AS "Proba_1.0", -1.8458266905 AS "LogProba_1.0", 0.10526315789473684 AS "Proba_2.0", -2.25129179861 AS "LogProba_2.0", 0.2631578947368421 AS "Proba_3.0", -1.33500106673 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.6 AS "Proba_3.0", -0.510825623766 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.5714285714285714 AS "Proba_0.0", -0.559615787935 AS "LogProba_0.0", 0.21428571428571427 AS "Proba_1.0", -1.54044504095 AS "LogProba_1.0", 0.07142857142857142 AS "Proba_2.0", -2.63905732962 AS "LogProba_2.0", 0.14285714285714285 AS "Proba_3.0", -1.94591014906 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, 'anoova_15' AS feature, -1.087922885168808 AS threshold, 6 AS count, 2 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.16666666666666666 AS "Proba_2.0", -1.79175946923 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Proba_2.0" AS "Proba_2.0", "DT_node_data_6"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_6"."Proba_3.0" AS "Proba_3.0", "DT_node_data_6"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0.0" AS "Proba_6_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1.0" AS "Proba_6_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2.0" AS "Proba_6_2", "DT_Output_6"."LogProba_2.0" AS "LogProba_6_2", CAST(NULL AS FLOAT) AS "Score_6_3", "DT_Output_6"."Proba_3.0" AS "Proba_6_3", "DT_Output_6"."LogProba_3.0" AS "LogProba_6_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 3.2537657772386295) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.45523292587751474) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.5619851291699285) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= 0.9417180106938607) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= -1.3088192717450107) THEN 9 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -2.89321459437295) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 3.2537657772386295 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, -0.45523292587751474 AS threshold, 96 AS count, 1 AS depth, 0.23958333333333334 AS "Proba_0.0", -1.42885397554 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.2604166666666667 AS "Proba_3.0", -1.3454723666 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.5619851291699285 AS threshold, 31 AS count, 2 AS depth, 0.3548387096774194 AS "Proba_0.0", -1.03609193169 AS "LogProba_0.0", 0.16129032258064516 AS "Proba_1.0", -1.82454929205 AS "LogProba_1.0", 0.0967741935483871 AS "Proba_2.0", -2.33537491582 AS "LogProba_2.0", 0.3870967741935484 AS "Proba_3.0", -0.949080554697 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 0.3793103448275862 AS "Proba_0.0", -0.969400557188 AS "LogProba_0.0", 0.13793103448275862 AS "Proba_1.0", -1.98100146887 AS "LogProba_1.0", 0.10344827586206896 AS "Proba_2.0", -2.26868354132 AS "LogProba_2.0", 0.3793103448275862 AS "Proba_3.0", -0.969400557188 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_10' AS feature, 0.9417180106938607 AS threshold, 65 AS count, 2 AS depth, 0.18461538461538463 AS "Proba_0.0", -1.68948062011 AS "LogProba_0.0", 0.2923076923076923 AS "Proba_1.0", -1.22994829073 AS "LogProba_1.0", 0.3230769230769231 AS "Proba_2.0", -1.12986483217 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 0.21153846153846154 AS "Proba_0.0", -1.55334844578 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.34615384615384615 AS "Proba_2.0", -1.06087196069 AS "LogProba_2.0", 0.19230769230769232 AS "Proba_3.0", -1.64865862559 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.07692307692307693 AS "Proba_0.0", -2.56494935746 AS "LogProba_0.0", 0.46153846153846156 AS "Proba_1.0", -0.773189888233 AS "LogProba_1.0", 0.23076923076923078 AS "Proba_2.0", -1.46633706879 AS "LogProba_2.0", 0.23076923076923078 AS "Proba_3.0", -1.46633706879 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'anoova_10' AS feature, -1.3088192717450107 AS threshold, 4 AS count, 1 AS depth, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, 'anoova_3' AS feature, -2.89321459437295 AS threshold, 3 AS count, 2 AS depth, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Proba_2.0" AS "Proba_2.0", "DT_node_data_7"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_7"."Proba_3.0" AS "Proba_3.0", "DT_node_data_7"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0.0" AS "Proba_7_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1.0" AS "Proba_7_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2.0" AS "Proba_7_2", "DT_Output_7"."LogProba_2.0" AS "LogProba_7_2", CAST(NULL AS FLOAT) AS "Score_7_3", "DT_Output_7"."Proba_3.0" AS "Proba_7_3", "DT_Output_7"."LogProba_3.0" AS "LogProba_7_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= 0.995740197297597) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 3.206775685107049) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -1.245523373232457) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -1.8523895073505519) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.264173746624778) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_17 <= -0.6629670832383201) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= 0.40846840374841076) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_11' AS feature, 0.995740197297597 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 3.206775685107049 AS threshold, 85 AS count, 1 AS depth, 0.29411764705882354 AS "Proba_0.0", -1.22377543162 AS "LogProba_0.0", 0.24705882352941178 AS "Proba_1.0", -1.39812881877 AS "LogProba_1.0", 0.23529411764705882 AS "Proba_2.0", -1.44691898294 AS "LogProba_2.0", 0.2235294117647059 AS "Proba_3.0", -1.49821227732 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -1.245523373232457 AS threshold, 78 AS count, 2 AS depth, 0.3076923076923077 AS "Proba_0.0", -1.17865499634 AS "LogProba_0.0", 0.19230769230769232 AS "Proba_1.0", -1.64865862559 AS "LogProba_1.0", 0.2564102564102564 AS "Proba_2.0", -1.36097655314 AS "LogProba_2.0", 0.24358974358974358 AS "Proba_3.0", -1.41226984752 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.15384615384615385 AS "Proba_0.0", -1.8718021769 AS "LogProba_0.0", 0.15384615384615385 AS "Proba_1.0", -1.8718021769 AS "LogProba_1.0", 0.46153846153846156 AS "Proba_2.0", -0.773189888233 AS "LogProba_2.0", 0.23076923076923078 AS "Proba_3.0", -1.46633706879 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, 0.3384615384615385 AS "Proba_0.0", -1.08334481654 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.2153846153846154 AS "Proba_2.0", -1.53532994028 AS "LogProba_2.0", 0.24615384615384617 AS "Proba_3.0", -1.40179854766 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -1.8523895073505519 AS threshold, 7 AS count, 2 AS depth, 0.14285714285714285 AS "Proba_0.0", -1.94591014906 AS "LogProba_0.0", 0.8571428571428571 AS "Proba_1.0", -0.154150679827 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'anoova_6' AS feature, 0.264173746624778 AS threshold, 15 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.26666666666666666 AS "Proba_2.0", -1.32175583998 AS "LogProba_2.0", 0.4 AS "Proba_3.0", -0.916290731874 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 9 AS node_id, 'anoova_17' AS feature, -0.6629670832383201 AS threshold, 9 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.5555555555555556 AS "Proba_3.0", -0.587786664902 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.375 AS "Proba_1.0", -0.980829253012 AS "LogProba_1.0", 0.125 AS "Proba_2.0", -2.07944154168 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, 'anoova_18' AS feature, 0.40846840374841076 AS threshold, 6 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Proba_2.0" AS "Proba_2.0", "DT_node_data_8"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_8"."Proba_3.0" AS "Proba_3.0", "DT_node_data_8"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0.0" AS "Proba_8_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1.0" AS "Proba_8_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2.0" AS "Proba_8_2", "DT_Output_8"."LogProba_2.0" AS "LogProba_8_2", CAST(NULL AS FLOAT) AS "Score_8_3", "DT_Output_8"."Proba_3.0" AS "Proba_8_3", "DT_Output_8"."LogProba_3.0" AS "LogProba_8_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -1.3351215958342926) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 2.7520186734425947) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= -1.3422781116477487) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_14 <= -0.9652307237853054) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -1.1169365033486556) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -2.2430067604738393) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_11' AS feature, -1.3351215958342926 AS threshold, 100 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 2.7520186734425947 AS threshold, 7 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.42857142857142855 AS "Proba_1.0", -0.847297860387 AS "LogProba_1.0", 0.14285714285714285 AS "Proba_2.0", -1.94591014906 AS "LogProba_2.0", 0.42857142857142855 AS "Proba_3.0", -0.847297860387 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_13' AS feature, -1.3422781116477487 AS threshold, 5 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_14' AS feature, -0.9652307237853054 AS threshold, 93 AS count, 1 AS depth, 0.26881720430107525 AS "Proba_0.0", -1.31372366829 AS "LogProba_0.0", 0.24731182795698925 AS "Proba_1.0", -1.39710527722 AS "LogProba_1.0", 0.24731182795698925 AS "Proba_2.0", -1.39710527722 AS "LogProba_2.0", 0.23655913978494625 AS "Proba_3.0", -1.44155703979 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, 'anoova_4' AS feature, -1.1169365033486556 AS threshold, 12 AS count, 2 AS depth, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.4166666666666667 AS "Proba_1.0", -0.875468737354 AS "LogProba_1.0", 0.4166666666666667 AS "Proba_2.0", -0.875468737354 AS "LogProba_2.0", 0.08333333333333333 AS "Proba_3.0", -2.48490664979 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.09090909090909091 AS "Proba_0.0", -2.3978952728 AS "LogProba_0.0", 0.45454545454545453 AS "Proba_1.0", -0.788457360364 AS "LogProba_1.0", 0.45454545454545453 AS "Proba_2.0", -0.788457360364 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, 'anoova_6' AS feature, -2.2430067604738393 AS threshold, 81 AS count, 2 AS depth, 0.2962962962962963 AS "Proba_0.0", -1.21639532432 AS "LogProba_0.0", 0.2222222222222222 AS "Proba_1.0", -1.50407739678 AS "LogProba_1.0", 0.2222222222222222 AS "Proba_2.0", -1.50407739678 AS "LogProba_2.0", 0.25925925925925924 AS "Proba_3.0", -1.34992671695 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, 0.3076923076923077 AS "Proba_0.0", -1.17865499634 AS "LogProba_0.0", 0.21794871794871795 AS "Proba_1.0", -1.52349548263 AS "LogProba_1.0", 0.20512820512820512 AS "Proba_2.0", -1.58412010445 AS "LogProba_2.0", 0.2692307692307692 AS "Proba_3.0", -1.31218638897 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Proba_2.0" AS "Proba_2.0", "DT_node_data_9"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_9"."Proba_3.0" AS "Proba_3.0", "DT_node_data_9"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0.0" AS "Proba_9_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1.0" AS "Proba_9_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2.0" AS "Proba_9_2", "DT_Output_9"."LogProba_2.0" AS "LogProba_9_2", CAST(NULL AS FLOAT) AS "Score_9_3", "DT_Output_9"."Proba_3.0" AS "Proba_9_3", "DT_Output_9"."LogProba_3.0" AS "LogProba_9_3" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_4"."Score_4_2" AS "Score_4_2", "RF_Tree_4"."Proba_4_2" AS "Proba_4_2", "RF_Tree_4"."LogProba_4_2" AS "LogProba_4_2", "RF_Tree_4"."Score_4_3" AS "Score_4_3", "RF_Tree_4"."Proba_4_3" AS "Proba_4_3", "RF_Tree_4"."LogProba_4_3" AS "LogProba_4_3", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_5"."Score_5_2" AS "Score_5_2", "RF_Tree_5"."Proba_5_2" AS "Proba_5_2", "RF_Tree_5"."LogProba_5_2" AS "LogProba_5_2", "RF_Tree_5"."Score_5_3" AS "Score_5_3", "RF_Tree_5"."Proba_5_3" AS "Proba_5_3", "RF_Tree_5"."LogProba_5_3" AS "LogProba_5_3", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_6"."Score_6_2" AS "Score_6_2", "RF_Tree_6"."Proba_6_2" AS "Proba_6_2", "RF_Tree_6"."LogProba_6_2" AS "LogProba_6_2", "RF_Tree_6"."Score_6_3" AS "Score_6_3", "RF_Tree_6"."Proba_6_3" AS "Proba_6_3", "RF_Tree_6"."LogProba_6_3" AS "LogProba_6_3", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_7"."Score_7_2" AS "Score_7_2", "RF_Tree_7"."Proba_7_2" AS "Proba_7_2", "RF_Tree_7"."LogProba_7_2" AS "LogProba_7_2", "RF_Tree_7"."Score_7_3" AS "Score_7_3", "RF_Tree_7"."Proba_7_3" AS "Proba_7_3", "RF_Tree_7"."LogProba_7_3" AS "LogProba_7_3", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_8"."Score_8_2" AS "Score_8_2", "RF_Tree_8"."Proba_8_2" AS "Proba_8_2", "RF_Tree_8"."LogProba_8_2" AS "LogProba_8_2", "RF_Tree_8"."Score_8_3" AS "Score_8_3", "RF_Tree_8"."Proba_8_3" AS "Proba_8_3", "RF_Tree_8"."LogProba_8_3" AS "LogProba_8_3", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1", "RF_Tree_9"."Score_9_2" AS "Score_9_2", "RF_Tree_9"."Proba_9_2" AS "Proba_9_2", "RF_Tree_9"."LogProba_9_2" AS "LogProba_9_2", "RF_Tree_9"."Score_9_3" AS "Score_9_3", "RF_Tree_9"."Proba_9_3" AS "Proba_9_3", "RF_Tree_9"."LogProba_9_3" AS "LogProba_9_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 10 + "RF_Join_CTE"."Score_1_2" / 10 + "RF_Join_CTE"."Score_2_2" / 10 + "RF_Join_CTE"."Score_3_2" / 10 + "RF_Join_CTE"."Score_4_2" / 10 + "RF_Join_CTE"."Score_5_2" / 10 + "RF_Join_CTE"."Score_6_2" / 10 + "RF_Join_CTE"."Score_7_2" / 10 + "RF_Join_CTE"."Score_8_2" / 10 + "RF_Join_CTE"."Score_9_2" / 10 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 10 + "RF_Join_CTE"."Proba_1_2" / 10 + "RF_Join_CTE"."Proba_2_2" / 10 + "RF_Join_CTE"."Proba_3_2" / 10 + "RF_Join_CTE"."Proba_4_2" / 10 + "RF_Join_CTE"."Proba_5_2" / 10 + "RF_Join_CTE"."Proba_6_2" / 10 + "RF_Join_CTE"."Proba_7_2" / 10 + "RF_Join_CTE"."Proba_8_2" / 10 + "RF_Join_CTE"."Proba_9_2" / 10 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 10 + "RF_Join_CTE"."LogProba_1_2" / 10 + "RF_Join_CTE"."LogProba_2_2" / 10 + "RF_Join_CTE"."LogProba_3_2" / 10 + "RF_Join_CTE"."LogProba_4_2" / 10 + "RF_Join_CTE"."LogProba_5_2" / 10 + "RF_Join_CTE"."LogProba_6_2" / 10 + "RF_Join_CTE"."LogProba_7_2" / 10 + "RF_Join_CTE"."LogProba_8_2" / 10 + "RF_Join_CTE"."LogProba_9_2" / 10 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 10 + "RF_Join_CTE"."Score_1_3" / 10 + "RF_Join_CTE"."Score_2_3" / 10 + "RF_Join_CTE"."Score_3_3" / 10 + "RF_Join_CTE"."Score_4_3" / 10 + "RF_Join_CTE"."Score_5_3" / 10 + "RF_Join_CTE"."Score_6_3" / 10 + "RF_Join_CTE"."Score_7_3" / 10 + "RF_Join_CTE"."Score_8_3" / 10 + "RF_Join_CTE"."Score_9_3" / 10 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 10 + "RF_Join_CTE"."Proba_1_3" / 10 + "RF_Join_CTE"."Proba_2_3" / 10 + "RF_Join_CTE"."Proba_3_3" / 10 + "RF_Join_CTE"."Proba_4_3" / 10 + "RF_Join_CTE"."Proba_5_3" / 10 + "RF_Join_CTE"."Proba_6_3" / 10 + "RF_Join_CTE"."Proba_7_3" / 10 + "RF_Join_CTE"."Proba_8_3" / 10 + "RF_Join_CTE"."Proba_9_3" / 10 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 10 + "RF_Join_CTE"."LogProba_1_3" / 10 + "RF_Join_CTE"."LogProba_2_3" / 10 + "RF_Join_CTE"."LogProba_3_3" / 10 + "RF_Join_CTE"."LogProba_4_3" / 10 + "RF_Join_CTE"."LogProba_5_3" / 10 + "RF_Join_CTE"."LogProba_6_3" / 10 + "RF_Join_CTE"."LogProba_7_3" / 10 + "RF_Join_CTE"."LogProba_8_3" / 10 + "RF_Join_CTE"."LogProba_9_3" / 10 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte