-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM (SELECT `RF_Join_CTE`.join_key_0 AS `KEY`, `RF_Join_CTE`.`Estimator_0` / 10 + `RF_Join_CTE`.`Estimator_1` / 10 + `RF_Join_CTE`.`Estimator_2` / 10 + `RF_Join_CTE`.`Estimator_3` / 10 + `RF_Join_CTE`.`Estimator_4` / 10 + `RF_Join_CTE`.`Estimator_5` / 10 + `RF_Join_CTE`.`Estimator_6` / 10 + `RF_Join_CTE`.`Estimator_7` / 10 + `RF_Join_CTE`.`Estimator_8` / 10 + `RF_Join_CTE`.`Estimator_9` / 10 AS `Estimator` 
FROM (SELECT `RF_Tree_0`.join_key_0 AS join_key_0, `RF_Tree_0`.`Estimator_0` AS `Estimator_0`, `RF_Tree_1`.join_key_1 AS join_key_1, `RF_Tree_1`.`Estimator_1` AS `Estimator_1`, `RF_Tree_2`.join_key_2 AS join_key_2, `RF_Tree_2`.`Estimator_2` AS `Estimator_2`, `RF_Tree_3`.join_key_3 AS join_key_3, `RF_Tree_3`.`Estimator_3` AS `Estimator_3`, `RF_Tree_4`.join_key_4 AS join_key_4, `RF_Tree_4`.`Estimator_4` AS `Estimator_4`, `RF_Tree_5`.join_key_5 AS join_key_5, `RF_Tree_5`.`Estimator_5` AS `Estimator_5`, `RF_Tree_6`.join_key_6 AS join_key_6, `RF_Tree_6`.`Estimator_6` AS `Estimator_6`, `RF_Tree_7`.join_key_7 AS join_key_7, `RF_Tree_7`.`Estimator_7` AS `Estimator_7`, `RF_Tree_8`.join_key_8 AS join_key_8, `RF_Tree_8`.`Estimator_8` AS `Estimator_8`, `RF_Tree_9`.join_key_9 AS join_key_9, `RF_Tree_9`.`Estimator_9` AS `Estimator_9` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.644042781363403) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.6627502292409082) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.5663920134284962) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.7971692711515388) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.427822315237773) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.13856536456026014) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.7037789113092124) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.644042781363403 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.6627502292409082 AS threshold, 58 AS count, 1 AS depth, 12.661274400018083 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.5663920134284962 AS threshold, 36 AS count, 2 AS depth, 11.349061050537415 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, 9.894060648083482 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, 13.923292531802069 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.7971692711515388 AS threshold, 22 AS count, 2 AS depth, 14.808532608259183 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, 13.813127161362742 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 21.112767105269956 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.427822315237773 AS threshold, 42 AS count, 1 AS depth, 17.26743351983317 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 0.13856536456026014 AS threshold, 14 AS count, 2 AS depth, 13.141588323013824 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 19.108365808487438 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, 11.51428537243011 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.7037789113092124 AS threshold, 28 AS count, 2 AS depth, 19.33035611824284 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, 15.731516049630926 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, 21.03506983495375 AS `Estimator`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `RF_Tree_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.3843507324534964) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.22171020320621979) THEN CASE WHEN (`ADS`.`Feature_8` <= 0.5187505204521355) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.31246163072108535) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.5847659827085306) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.4754104028915916) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.1839163821007057) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.3843507324534964 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.22171020320621979 AS threshold, 32 AS count, 1 AS depth, 10.727381061680214 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.5187505204521355 AS threshold, 20 AS count, 2 AS depth, 10.05239591228262 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 8.405716124161003 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, 10.939069644348107 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.31246163072108535 AS threshold, 12 AS count, 2 AS depth, 11.852356310676202 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, 11.303604683950601 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 14.596114444304217 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.5847659827085306 AS threshold, 68 AS count, 1 AS depth, 16.41632248618052 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.4754104028915916 AS threshold, 39 AS count, 2 AS depth, 13.781484172339951 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, 12.24549270648735 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, 15.769237834031548 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.1839163821007057 AS threshold, 29 AS count, 2 AS depth, 19.959725735828176 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 14.462192521854353 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 20.83933105006399 AS `Estimator`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `RF_Tree_1` ON `RF_Tree_0`.join_key_0 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.5662717432885725) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.7949630511916344) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.2607716898546362) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.4471304105559798) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.5519194177062606) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.1567572964904584) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.8108375307494611) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.5662717432885725 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.7949630511916344 AS threshold, 49 AS count, 1 AS depth, 11.956744100226777 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.2607716898546362 AS threshold, 42 AS count, 2 AS depth, 10.974733433806458 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, 9.792084862474749 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, 12.40636065173432 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.4471304105559798 AS threshold, 7 AS count, 2 AS depth, 17.84880809874871 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 14.401744313075353 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 22.444893146313177 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.5519194177062606 AS threshold, 51 AS count, 1 AS depth, 17.131483571037837 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.1567572964904584 AS threshold, 27 AS count, 2 AS depth, 14.379387871403264 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 10.216133628515744 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, 15.836526856413897 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.8108375307494611 AS threshold, 24 AS count, 2 AS depth, 20.22759123312673 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 17.200034338846816 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, 21.47423230724199 AS `Estimator`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `RF_Tree_2` ON `RF_Tree_2`.join_key_2 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.14596956286321167) THEN CASE WHEN (`ADS`.`Feature_4` <= 0.29051969790612997) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.5998944955924963) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.5608329223296868) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.34399592581331406) THEN CASE WHEN (`ADS`.`Feature_7` <= 0.27097817022888837) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.3229662918566072) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.14596956286321167 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.29051969790612997 AS threshold, 14 AS count, 1 AS depth, 9.277692507027924 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.5998944955924963 AS threshold, 5 AS count, 2 AS depth, 7.088885236512141 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 6.880470316921067 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 7.922544914876433 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.5608329223296868 AS threshold, 9 AS count, 2 AS depth, 10.493696546203358 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 9.402889261613392 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 14.311522042268242 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.34399592581331406 AS threshold, 86 AS count, 1 AS depth, 15.461609627158735 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_7' AS feature, 0.27097817022888837 AS threshold, 32 AS count, 2 AS depth, 12.269192274277996 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, 9.75901809069179 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, 13.584045418061251 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.3229662918566072 AS threshold, 54 AS count, 2 AS depth, 17.35341250293991 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, 13.380391552053409 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 36 AS count, 3 AS depth, 19.339922978383168 AS `Estimator`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `RF_Tree_3` ON `RF_Tree_3`.join_key_3 = `RF_Tree_2`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Estimator` AS `Estimator_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.42162574565094035) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.8771296801638773) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.7228594158076431) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_7` <= 0.6668325795090977) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.3241289168894095) THEN CASE WHEN (`ADS`.`Feature_7` <= 0.24296124360506155) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.25564273004472704) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.42162574565094035 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.8771296801638773 AS threshold, 39 AS count, 1 AS depth, 11.122316539469585 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.7228594158076431 AS threshold, 37 AS count, 2 AS depth, 10.806459923684308 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, 10.222609188489614 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 14.543104628930333 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 0.6668325795090977 AS threshold, 2 AS count, 2 AS depth, 16.96566393149726 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 14.29105518592214 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 19.640272677072385 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.3241289168894095 AS threshold, 61 AS count, 1 AS depth, 16.816652098274236 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_7' AS feature, 0.24296124360506155 AS threshold, 17 AS count, 2 AS depth, 12.53036301934682 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 9.059324203233581 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, 13.976629192727342 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.25564273004472704 AS threshold, 44 AS count, 2 AS depth, 18.472718333314365 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, 13.905854030837869 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 34 AS count, 3 AS depth, 19.81591371639569 AS `Estimator`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `RF_Tree_4` ON `RF_Tree_4`.join_key_4 = `RF_Tree_3`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Estimator` AS `Estimator_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.545159661872892) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.5350333952065813) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.32493103725405253) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.1435730214106877) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.8688052181212575) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.4110955350851481) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.7195190209851274) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.545159661872892 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.5350333952065813 AS threshold, 61 AS count, 1 AS depth, 12.372097335660017 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.32493103725405253 AS threshold, 32 AS count, 2 AS depth, 10.652341400424648 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, 9.87363885245468 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, 12.365487005958576 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.1435730214106877 AS threshold, 29 AS count, 2 AS depth, 14.269759057299044 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 6.888503606139911 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, 15.121442378586634 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.8688052181212575 AS threshold, 39 AS count, 1 AS depth, 18.07405603996875 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.4110955350851481 AS threshold, 24 AS count, 2 AS depth, 15.763918477011346 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, 12.66314702566734 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, 18.864689928355368 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.7195190209851274 AS threshold, 15 AS count, 2 AS depth, 21.77027614070057 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 17.46195726095533 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, 22.433094429892147 AS `Estimator`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `RF_Tree_5` ON `RF_Tree_5`.join_key_5 = `RF_Tree_4`.join_key_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_6, `DT_Output_6`.`Estimator` AS `Estimator_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.33207389757576783) THEN CASE WHEN (`ADS`.`Feature_4` <= 0.05399773369449022) THEN CASE WHEN (`ADS`.`Feature_9` <= 0.8623007819836633) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.8791986605660986) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.6177927428112832) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.0845705345097386) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.27309331285807276) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.33207389757576783 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.05399773369449022 AS threshold, 30 AS count, 1 AS depth, 10.469465502838613 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_9' AS feature, 0.8623007819836633 AS threshold, 3 AS count, 2 AS depth, 7.98329216217583 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 6.762838858802376 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 10.424198768922738 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.8791986605660986 AS threshold, 27 AS count, 2 AS depth, 10.74570698513448 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, 10.225013856056847 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 13.036756753076054 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.6177927428112832 AS threshold, 70 AS count, 1 AS depth, 16.364316542126907 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 0.0845705345097386 AS threshold, 40 AS count, 2 AS depth, 13.635849255620474 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, 18.91473217404396 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 36 AS count, 3 AS depth, 13.049306709128977 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.27309331285807276 AS threshold, 30 AS count, 2 AS depth, 20.002272924135486 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, 16.130105774357283 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, 21.18075857841581 AS `Estimator`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `RF_Tree_6` ON `RF_Tree_6`.join_key_6 = `RF_Tree_5`.join_key_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_7, `DT_Output_7`.`Estimator` AS `Estimator_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.7493597640974682) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.43105327243718555) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.8458025665573514) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.7648539046552884) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.4443464611370338) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.22674030699836625) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.6957945862501931) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.7493597640974682 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.43105327243718555 AS threshold, 66 AS count, 1 AS depth, 13.193431389331835 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.8458025665573514 AS threshold, 40 AS count, 2 AS depth, 11.004191138158758 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 3 AS depth, 10.336203252463527 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, 12.765250109537096 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.7648539046552884 AS threshold, 26 AS count, 2 AS depth, 16.561493314213486 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, 15.14365911430796 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 21.287607313898583 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.4443464611370338 AS threshold, 34 AS count, 1 AS depth, 17.31822503935709 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.22674030699836625 AS threshold, 11 AS count, 2 AS depth, 11.895198936688177 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 6.888503606139911 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, 13.772709685643777 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.6957945862501931 AS threshold, 23 AS count, 2 AS depth, 19.91184621889439 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, 16.535182946651478 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, 20.84980823896187 AS `Estimator`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `RF_Tree_7` ON `RF_Tree_7`.join_key_7 = `RF_Tree_6`.join_key_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_8, `DT_Output_8`.`Estimator` AS `Estimator_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.27950004421596025) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.7891391746146418) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.1492211153837981) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.8759947916973818) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.30090464266037426) THEN CASE WHEN (`ADS`.`Feature_7` <= 0.11389926883439291) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.7336468365554012) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.27950004421596025 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.7891391746146418 AS threshold, 26 AS count, 1 AS depth, 10.304759822559014 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.1492211153837981 AS threshold, 23 AS count, 2 AS depth, 9.792084862474749 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, 9.012415482772377 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, 11.00490389756733 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.8759947916973818 AS threshold, 3 AS count, 2 AS depth, 14.23526784987171 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, 13.222914000714985 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, 16.259975548185153 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.30090464266037426 AS threshold, 74 AS count, 1 AS depth, 16.103545508750102 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_7' AS feature, 0.11389926883439291 AS threshold, 23 AS count, 2 AS depth, 12.202180609938019 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 9.35990613322131 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, 13.205336307602739 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.7336468365554012 AS threshold, 51 AS count, 2 AS depth, 17.862984580763403 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, 15.18929157124784 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, 20.643625310659576 AS `Estimator`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `RF_Tree_8` ON `RF_Tree_8`.join_key_8 = `RF_Tree_7`.join_key_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_9, `DT_Output_9`.`Estimator` AS `Estimator_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.5210094468136824) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.25531559373024904) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.27321387659272023) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.17744883334281367) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.23297942703316182) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.5009310235381065) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.18190925411760628) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.5210094468136824 AS threshold, 100 AS count, 0 AS depth, 14.595861230340427 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.25531559373024904 AS threshold, 61 AS count, 1 AS depth, 12.372097335660019 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.27321387659272023 AS threshold, 15 AS count, 2 AS depth, 8.71324255861224 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 7.131715034310758 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, 9.767594241479895 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.17744883334281367 AS threshold, 46 AS count, 2 AS depth, 13.565202154262554 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 8.673407012254492 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 3 AS depth, 14.29897142556376 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.23297942703316182 AS threshold, 39 AS count, 1 AS depth, 18.074056039968745 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.5009310235381065 AS threshold, 6 AS count, 2 AS depth, 12.059492016192346 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 9.54178737342245 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, 14.577196658962245 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.18190925411760628 AS threshold, 33 AS count, 2 AS depth, 19.167613135200813 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, 14.370430789736366 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, 20.233653656415136 AS `Estimator`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `RF_Tree_9` ON `RF_Tree_9`.join_key_9 = `RF_Tree_8`.join_key_8) AS `RF_Join_CTE`) AS `RF_AVG_Scores`