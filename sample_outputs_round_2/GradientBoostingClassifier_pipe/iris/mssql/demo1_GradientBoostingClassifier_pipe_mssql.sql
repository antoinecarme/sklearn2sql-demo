-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 5.84333333333 ELSE [ADS].[Feature_0] END AS impute_output_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 3.054 ELSE [ADS].[Feature_1] END AS impute_output_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 3.75866666667 ELSE [ADS].[Feature_2] END AS impute_output_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 1.19866666667 ELSE [ADS].[Feature_3] END AS impute_output_5 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_output_2 - 5.84333333333 AS impute_output_2, [ADS_imp_1_OUT].impute_output_3 - 3.054 AS impute_output_3, [ADS_imp_1_OUT].impute_output_4 - 3.75866666667 AS impute_output_4, [ADS_imp_1_OUT].impute_output_5 - 1.19866666667 AS impute_output_5 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_output_2 * 0.361589677381 + [CenteredDataForPCA].impute_output_3 * -0.0822688898922 + [CenteredDataForPCA].impute_output_4 * 0.856572105291 + [CenteredDataForPCA].impute_output_5 * 0.358843926248 AS anova_output_2, [CenteredDataForPCA].impute_output_2 * 0.656539883286 + [CenteredDataForPCA].impute_output_3 * 0.729712371326 + [CenteredDataForPCA].impute_output_4 * -0.175767403429 + [CenteredDataForPCA].impute_output_5 * -0.074706470135 AS anova_output_3, [CenteredDataForPCA].impute_output_2 * -0.580997279828 + [CenteredDataForPCA].impute_output_3 * 0.596418087938 + [CenteredDataForPCA].impute_output_4 * 0.072524075487 + [CenteredDataForPCA].impute_output_5 * 0.549060910727 AS anova_output_4, [CenteredDataForPCA].impute_output_2 * 0.317254547169 + [CenteredDataForPCA].impute_output_3 * -0.324094352418 + [CenteredDataForPCA].impute_output_4 * -0.47971898733 + [CenteredDataForPCA].impute_output_5 * 0.751120560381 AS anova_output_5 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 3.515706244646329e-16 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 2.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 1 AS depth, -1.0000000000000002 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0_0, [DT_Output].[Estimator] AS [Estimator_0_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.00035651168661645266 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, -0.9667773351250146 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 100 AS count, 1 AS depth, 0.1557466542564274 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 44 AS count, 2 AS depth, 0.6330193815291539 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 1.9365582786906388 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -1.0166527916526267 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 56 AS count, 2 AS depth, -0.21925334574357264 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.07137233952647129 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, -1.0166527916526265 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_0_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_0_1, [DT_Output_1].[Estimator] AS [Estimator_0_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.06412214040756226) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 0.0011763621092869259 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 94 AS count, 1 AS depth, -0.3098189038372622 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 93 AS count, 2 AS depth, -0.32007390400707675 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, -0.9797657691316 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, -0.9813523681114963 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1.872112855401758 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 56 AS count, 1 AS depth, 0.5232041299481376 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anova_output_3' AS feature, 0.06412214040756226 AS threshold, 19 AS count, 2 AS depth, 0.28817237551275704 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 1.5189512946824588 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -1.0153416682082848 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 2 AS depth, 1.8721128554017585 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_0_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_0_2, [DT_Output_2].[Estimator] AS [Estimator_0_2] 
FROM [DT_Output_2]), 
[RF_Join_CTE_0] AS 
(SELECT [RF_Tree_0_0].join_key_0_0 AS join_key_0_0, [RF_Tree_0_0].[Estimator_0_0] AS [Estimator_0_0], [RF_Tree_0_1].join_key_0_1 AS join_key_0_1, [RF_Tree_0_1].[Estimator_0_1] AS [Estimator_0_1], [RF_Tree_0_2].join_key_0_2 AS join_key_0_2, [RF_Tree_0_2].[Estimator_0_2] AS [Estimator_0_2] 
FROM [RF_Tree_0_0] LEFT OUTER JOIN [RF_Tree_0_1] ON [RF_Tree_0_0].join_key_0_0 = [RF_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [RF_Tree_0_2] ON [RF_Tree_0_2].join_key_0_2 = [RF_Tree_0_1].join_key_0_1), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.2433539628982544) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5554654598236084) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.7399235963821411) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, -0.000738481461754343 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.657068157383218 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_3' AS feature, 0.2433539628982544 AS threshold, 100 AS count, 1 AS depth, -0.2999492291951426 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_2' AS feature, 1.5554654598236084 AS threshold, 73 AS count, 2 AS depth, -0.29846344611926195 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, -0.9494867757546372 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, -0.9526618153265337 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.7399235963821411 AS threshold, 27 AS count, 2 AS depth, -0.30396634640030035 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -0.9688223272762132 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, -0.9526618153265338 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_1_0] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_1_0, [DT_Output_3].[Estimator] AS [Estimator_1_0] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.0004314451497370886 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, -0.9244094737787685 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 100 AS count, 1 AS depth, 0.1400566039231066 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 44 AS count, 2 AS depth, 0.5672393426602619 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 1.6165367283836312 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.9635088560985948 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 56 AS count, 2 AS depth, -0.1955869765132297 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.06952284849819487 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, -0.9635470827423468 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_1_1] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_1_1, [DT_Output_4].[Estimator] AS [Estimator_1_1] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.15936073660850525) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 0.001397664242788587 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 94 AS count, 1 AS depth, -0.2771198861740883 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 93 AS count, 2 AS depth, -0.28630130582985075 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, -0.9330342039513289 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, -0.9353445484934724 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1.5751211819962099 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 56 AS count, 1 AS depth, 0.4689092667282605 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anova_output_4' AS feature, -0.15936073660850525 AS threshold, 19 AS count, 2 AS depth, 0.2589759413817226 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -0.6012321946870437 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 1.4847989867862486 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 2 AS depth, 1.5749750310855337 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_1_2] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_1_2, [DT_Output_5].[Estimator] AS [Estimator_1_2] 
FROM [DT_Output_5]), 
[RF_Join_CTE_1] AS 
(SELECT [RF_Tree_1_0].join_key_1_0 AS join_key_1_0, [RF_Tree_1_0].[Estimator_1_0] AS [Estimator_1_0], [RF_Tree_1_1].join_key_1_1 AS join_key_1_1, [RF_Tree_1_1].[Estimator_1_1] AS [Estimator_1_1], [RF_Tree_1_2].join_key_1_2 AS join_key_1_2, [RF_Tree_1_2].[Estimator_1_2] AS [Estimator_1_2] 
FROM [RF_Tree_1_0] LEFT OUTER JOIN [RF_Tree_1_1] ON [RF_Tree_1_0].join_key_1_0 = [RF_Tree_1_1].join_key_1_1 LEFT OUTER JOIN [RF_Tree_1_2] ON [RF_Tree_1_2].join_key_1_2 = [RF_Tree_1_1].join_key_1_1), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.2433539628982544) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.3326296806335449) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.7399235963821411) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, -0.0014252406251414878 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.4314035111497574 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_3' AS feature, 0.2433539628982544 AS threshold, 100 AS count, 1 AS depth, -0.26926618587413265 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, -0.3326296806335449 AS threshold, 73 AS count, 2 AS depth, -0.26686970849137326 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -0.9153227003292755 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, -0.9088011038962004 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.7399235963821411 AS threshold, 27 AS count, 2 AS depth, -0.2757455506497414 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -0.9388209308779166 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, -0.9123777284482844 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_2_0] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_2_0, [DT_Output_6].[Estimator] AS [Estimator_2_0] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.0006049838694342609 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, -0.8883346001815151 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 100 AS count, 1 AS depth, 0.12567348934767145 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 44 AS count, 2 AS depth, 0.5067858713960063 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 1.403409778699464 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.9195130617821287 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 56 AS count, 2 AS depth, -0.17377195369030604 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.06921497710735042 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, -0.9195592234170683 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_2_1] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_2_1, [DT_Output_7].[Estimator] AS [Estimator_2_1] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.06412214040756226) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 0.0016343823673086073 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 94 AS count, 1 AS depth, -0.24718612725165967 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 93 AS count, 2 AS depth, -0.2553830461361233 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, -0.8941213718456342 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, -0.8967068086819853 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1.3749314130171186 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 56 AS count, 1 AS depth, 0.4192973806562904 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anova_output_3' AS feature, 0.06412214040756226 AS threshold, 19 AS count, 2 AS depth, 0.2328001630207527 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 1.1796466391940246 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -0.9872879649390535 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 2 AS depth, 1.3747581600964796 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_2_2] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_2_2, [DT_Output_8].[Estimator] AS [Estimator_2_2] 
FROM [DT_Output_8]), 
[RF_Join_CTE_2] AS 
(SELECT [RF_Tree_2_0].join_key_2_0 AS join_key_2_0, [RF_Tree_2_0].[Estimator_2_0] AS [Estimator_2_0], [RF_Tree_2_1].join_key_2_1 AS join_key_2_1, [RF_Tree_2_1].[Estimator_2_1] AS [Estimator_2_1], [RF_Tree_2_2].join_key_2_2 AS join_key_2_2, [RF_Tree_2_2].[Estimator_2_2] AS [Estimator_2_2] 
FROM [RF_Tree_2_0] LEFT OUTER JOIN [RF_Tree_2_1] ON [RF_Tree_2_0].join_key_2_0 = [RF_Tree_2_1].join_key_2_1 LEFT OUTER JOIN [RF_Tree_2_2] ON [RF_Tree_2_2].join_key_2_2 = [RF_Tree_2_1].join_key_2_1), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.2433539628982544) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5554654598236084) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.7399235963821411) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, -0.002054342915350819 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.2729024460717904 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_3' AS feature, 0.2433539628982544 AS threshold, 100 AS count, 1 AS depth, -0.24121279508349322 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_2' AS feature, 1.5554654598236084 AS threshold, 73 AS count, 2 AS depth, -0.23786684849621714 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, -0.8736693055556194 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, -0.8781423818555355 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.7399235963821411 AS threshold, 27 AS count, 2 AS depth, -0.2502592432639071 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -0.9159892634266149 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, -0.8780740101539118 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_3_0] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_3_0, [DT_Output_9].[Estimator] AS [Estimator_3_0] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.15936073660850525) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.0008269394838263114 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, -0.8575919756535975 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 100 AS count, 1 AS depth, 0.11255518035651 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 44 AS count, 2 AS depth, 0.45156192794581673 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, 1.2525608755579756 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -0.8827920301476406 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_4' AS feature, -0.15936073660850525 AS threshold, 56 AS count, 2 AS depth, -0.15380726417794557 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.1504967761104528 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, -0.8265063378132071 AS [Estimator]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].count AS count, [DT_node_data_10].depth AS depth, [DT_node_data_10].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[RF_Tree_3_1] AS 
(SELECT [DT_Output_10].[KEY] AS join_key_3_1, [DT_Output_10].[Estimator] AS [Estimator_3_1] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.3832025527954102) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.031229151412844658) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 0.0018529933382004816 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 94 AS count, 1 AS depth, -0.2199375468178567 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 93 AS count, 2 AS depth, -0.22723683365696326 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, -0.8615026819970624 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, -0.8641074025625024 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1.2320493396295058 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.3832025527954102 AS threshold, 56 AS count, 1 AS depth, 0.3741442571715822 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anova_output_4' AS feature, 0.031229151412844658 AS threshold, 11 AS count, 2 AS depth, 0.12196175237859004 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, -0.6028210103972566 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 1.3812964579002038 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 45 AS count, 2 AS depth, 0.4357888694543137 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.8603148128937909 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 1.2412722721725906 AS [Estimator]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].count AS count, [DT_node_data_11].depth AS depth, [DT_node_data_11].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[RF_Tree_3_2] AS 
(SELECT [DT_Output_11].[KEY] AS join_key_3_2, [DT_Output_11].[Estimator] AS [Estimator_3_2] 
FROM [DT_Output_11]), 
[RF_Join_CTE_3] AS 
(SELECT [RF_Tree_3_0].join_key_3_0 AS join_key_3_0, [RF_Tree_3_0].[Estimator_3_0] AS [Estimator_3_0], [RF_Tree_3_1].join_key_3_1 AS join_key_3_1, [RF_Tree_3_1].[Estimator_3_1] AS [Estimator_3_1], [RF_Tree_3_2].join_key_3_2 AS join_key_3_2, [RF_Tree_3_2].[Estimator_3_2] AS [Estimator_3_2] 
FROM [RF_Tree_3_0] LEFT OUTER JOIN [RF_Tree_3_1] ON [RF_Tree_3_0].join_key_3_0 = [RF_Tree_3_1].join_key_3_1 LEFT OUTER JOIN [RF_Tree_3_2] ON [RF_Tree_3_2].join_key_3_2 = [RF_Tree_3_1].join_key_3_1), 
[DT_node_lookup_12] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.2433539628982544) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.3326296806335449) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.7399235963821411) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, -0.002648803747164706 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.1564799650724797 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_3' AS feature, 0.2433539628982544 AS threshold, 100 AS count, 1 AS depth, -0.21574224321713753 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, -0.3326296806335449 AS threshold, 73 AS count, 2 AS depth, -0.21288972813106863 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -0.8547461740455218 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, -0.8462880424135855 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.7399235963821411 AS threshold, 27 AS count, 2 AS depth, -0.22345459882021346 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -0.8890010354516555 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, -0.8462454249788762 AS [Estimator]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].count AS count, [DT_node_data_12].depth AS depth, [DT_node_data_12].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[RF_Tree_4_0] AS 
(SELECT [DT_Output_12].[KEY] AS join_key_4_0, [DT_Output_12].[Estimator] AS [Estimator_4_0] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.3832025527954102) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.2105880230665207) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.15936073660850525) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.001075579533603005 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, -0.831358788020486 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.3832025527954102 AS threshold, 100 AS count, 1 AS depth, 0.1006633364908403 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.2105880230665207 AS threshold, 55 AS count, 2 AS depth, 0.3435305442632714 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 1.116203153408478 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.22101385523815703 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_4' AS feature, -0.15936073660850525 AS threshold, 45 AS count, 2 AS depth, -0.19617436189768636 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, -0.3454045844025382 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, -0.8714892070678262 AS [Estimator]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].count AS count, [DT_node_data_13].depth AS depth, [DT_node_data_13].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[RF_Tree_4_1] AS 
(SELECT [DT_Output_13].[KEY] AS join_key_4_1, [DT_Output_13].[Estimator] AS [Estimator_4_1] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.31593605875968933) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.06412214040756226) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.14712998270988464) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 0.002160557861971526 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 94 AS count, 1 AS depth, -0.19586828915640642 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_4' AS feature, 0.31593605875968933 AS threshold, 93 AS count, 2 AS depth, -0.20250312217064154 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, -0.8354017028915743 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -0.8487389225203502 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1.1517509926532024 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 56 AS count, 1 AS depth, 0.3345661224999629 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anova_output_3' AS feature, 0.06412214040756226 AS threshold, 19 AS count, 2 AS depth, 0.1816880713349511 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.9609487921060804 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -0.9687828006985941 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anova_output_4' AS feature, -0.14712998270988464 AS threshold, 37 AS count, 2 AS depth, 0.4130710676928066 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 1.1632131279698703 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 1.1260472802656099 AS [Estimator]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].count AS count, [DT_node_data_14].depth AS depth, [DT_node_data_14].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[RF_Tree_4_2] AS 
(SELECT [DT_Output_14].[KEY] AS join_key_4_2, [DT_Output_14].[Estimator] AS [Estimator_4_2] 
FROM [DT_Output_14]), 
[RF_Join_CTE_4] AS 
(SELECT [RF_Tree_4_0].join_key_4_0 AS join_key_4_0, [RF_Tree_4_0].[Estimator_4_0] AS [Estimator_4_0], [RF_Tree_4_1].join_key_4_1 AS join_key_4_1, [RF_Tree_4_1].[Estimator_4_1] AS [Estimator_4_1], [RF_Tree_4_2].join_key_4_2 AS join_key_4_2, [RF_Tree_4_2].[Estimator_4_2] AS [Estimator_4_2] 
FROM [RF_Tree_4_0] LEFT OUTER JOIN [RF_Tree_4_1] ON [RF_Tree_4_0].join_key_4_0 = [RF_Tree_4_1].join_key_4_1 LEFT OUTER JOIN [RF_Tree_4_2] ON [RF_Tree_4_2].join_key_4_2 = [RF_Tree_4_1].join_key_4_1), 
[DT_node_lookup_15] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_3 <= 0.2433539628982544) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.28315263986587524) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.7399235963821411) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, -0.003247862202858666 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, 1.0680988499275519 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_3' AS feature, 0.2433539628982544 AS threshold, 100 AS count, 1 AS depth, -0.19279081563453118 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.28315263986587524 AS threshold, 73 AS count, 2 AS depth, -0.18986837169737114 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, -0.822232659655885 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, -0.8256502671838415 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.7399235963821411 AS threshold, 27 AS count, 2 AS depth, -0.2006922381312973 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, -0.8678889660713418 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, -0.8209463744394255 AS [Estimator]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].count AS count, [DT_node_data_15].depth AS depth, [DT_node_data_15].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[RF_Tree_5_0] AS 
(SELECT [DT_Output_15].[KEY] AS join_key_5_0, [DT_Output_15].[Estimator] AS [Estimator_5_0] 
FROM [DT_Output_15]), 
[DT_node_lookup_16] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= -1.5537705421447754) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.3832025527954102) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.2105880230665207) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.5713317394256592) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, -1.5537705421447754 AS threshold, 150 AS count, 0 AS depth, 0.0012924425191525673 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 1 AS depth, -0.8089407242590205 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_2' AS feature, 1.3832025527954102 AS threshold, 100 AS count, 1 AS depth, 0.08987715749387404 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anova_output_4' AS feature, 0.2105880230665207 AS threshold, 55 AS count, 2 AS depth, 0.30584891836822414 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 1.0276503260926595 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.195514766325083 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_2' AS feature, 1.5713317394256592 AS threshold, 45 AS count, 2 AS depth, -0.17408832801922058 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -0.17718536801654544 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, -0.8337623733945898 AS [Estimator]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].count AS count, [DT_node_data_16].depth AS depth, [DT_node_data_16].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[RF_Tree_5_1] AS 
(SELECT [DT_Output_16].[KEY] AS join_key_5_1, [DT_Output_16].[Estimator] AS [Estimator_5_1] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.1425471305847168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.5032649040222168) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= 0.31593605875968933) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_4 <= -0.15936073660850525) THEN CASE WHEN ([ADS_ano_2_OUT].anova_output_2 <= 1.6685181856155396) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anova_output_5 <= -0.16771300137043) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anova_output_2' AS feature, 1.1425471305847168 AS threshold, 150 AS count, 0 AS depth, 0.002421811773208005 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anova_output_4' AS feature, 0.5032649040222168 AS threshold, 94 AS count, 1 AS depth, -0.17416610949664227 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anova_output_4' AS feature, 0.31593605875968933 AS threshold, 93 AS count, 2 AS depth, -0.18019806673734096 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, -0.8123056342872229 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -0.8347576016049206 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1.087203353336406 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anova_output_4' AS feature, -0.15936073660850525 AS threshold, 56 AS count, 1 AS depth, 0.2988372510475997 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anova_output_2' AS feature, 1.6685181856155396 AS threshold, 17 AS count, 2 AS depth, 0.149060470215836 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -0.5568906319219834 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 1.0735639512219248 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anova_output_5' AS feature, -0.16771300137043 AS threshold, 39 AS count, 2 AS depth, 0.3641245657691378 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.6635086207424598 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 1.0957083615443155 AS [Estimator]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].count AS count, [DT_node_data_17].depth AS depth, [DT_node_data_17].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[RF_Tree_5_2] AS 
(SELECT [DT_Output_17].[KEY] AS join_key_5_2, [DT_Output_17].[Estimator] AS [Estimator_5_2] 
FROM [DT_Output_17]), 
[RF_Join_CTE_5] AS 
(SELECT [RF_Tree_5_0].join_key_5_0 AS join_key_5_0, [RF_Tree_5_0].[Estimator_5_0] AS [Estimator_5_0], [RF_Tree_5_1].join_key_5_1 AS join_key_5_1, [RF_Tree_5_1].[Estimator_5_1] AS [Estimator_5_1], [RF_Tree_5_2].join_key_5_2 AS join_key_5_2, [RF_Tree_5_2].[Estimator_5_2] AS [Estimator_5_2] 
FROM [RF_Tree_5_0] LEFT OUTER JOIN [RF_Tree_5_1] ON [RF_Tree_5_0].join_key_5_0 = [RF_Tree_5_1].join_key_5_1 LEFT OUTER JOIN [RF_Tree_5_2] ON [RF_Tree_5_2].join_key_5_2 = [RF_Tree_5_1].join_key_5_1), 
[RF_Join_CTE] AS 
(SELECT [RF_Join_CTE_0].join_key_0_0 AS join_key_0_0, [RF_Join_CTE_0].[Estimator_0_0] AS [Estimator_0_0], [RF_Join_CTE_0].join_key_0_1 AS join_key_0_1, [RF_Join_CTE_0].[Estimator_0_1] AS [Estimator_0_1], [RF_Join_CTE_0].join_key_0_2 AS join_key_0_2, [RF_Join_CTE_0].[Estimator_0_2] AS [Estimator_0_2], [RF_Join_CTE_1].join_key_1_0 AS join_key_1_0, [RF_Join_CTE_1].[Estimator_1_0] AS [Estimator_1_0], [RF_Join_CTE_1].join_key_1_1 AS join_key_1_1, [RF_Join_CTE_1].[Estimator_1_1] AS [Estimator_1_1], [RF_Join_CTE_1].join_key_1_2 AS join_key_1_2, [RF_Join_CTE_1].[Estimator_1_2] AS [Estimator_1_2], [RF_Join_CTE_2].join_key_2_0 AS join_key_2_0, [RF_Join_CTE_2].[Estimator_2_0] AS [Estimator_2_0], [RF_Join_CTE_2].join_key_2_1 AS join_key_2_1, [RF_Join_CTE_2].[Estimator_2_1] AS [Estimator_2_1], [RF_Join_CTE_2].join_key_2_2 AS join_key_2_2, [RF_Join_CTE_2].[Estimator_2_2] AS [Estimator_2_2], [RF_Join_CTE_3].join_key_3_0 AS join_key_3_0, [RF_Join_CTE_3].[Estimator_3_0] AS [Estimator_3_0], [RF_Join_CTE_3].join_key_3_1 AS join_key_3_1, [RF_Join_CTE_3].[Estimator_3_1] AS [Estimator_3_1], [RF_Join_CTE_3].join_key_3_2 AS join_key_3_2, [RF_Join_CTE_3].[Estimator_3_2] AS [Estimator_3_2], [RF_Join_CTE_4].join_key_4_0 AS join_key_4_0, [RF_Join_CTE_4].[Estimator_4_0] AS [Estimator_4_0], [RF_Join_CTE_4].join_key_4_1 AS join_key_4_1, [RF_Join_CTE_4].[Estimator_4_1] AS [Estimator_4_1], [RF_Join_CTE_4].join_key_4_2 AS join_key_4_2, [RF_Join_CTE_4].[Estimator_4_2] AS [Estimator_4_2], [RF_Join_CTE_5].join_key_5_0 AS join_key_5_0, [RF_Join_CTE_5].[Estimator_5_0] AS [Estimator_5_0], [RF_Join_CTE_5].join_key_5_1 AS join_key_5_1, [RF_Join_CTE_5].[Estimator_5_1] AS [Estimator_5_1], [RF_Join_CTE_5].join_key_5_2 AS join_key_5_2, [RF_Join_CTE_5].[Estimator_5_2] AS [Estimator_5_2] 
FROM [RF_Join_CTE_0] LEFT OUTER JOIN [RF_Join_CTE_1] ON [RF_Join_CTE_0].join_key_0_0 = [RF_Join_CTE_1].join_key_1_0 LEFT OUTER JOIN [RF_Join_CTE_2] ON [RF_Join_CTE_2].join_key_2_0 = [RF_Join_CTE_1].join_key_1_0 LEFT OUTER JOIN [RF_Join_CTE_3] ON [RF_Join_CTE_3].join_key_3_0 = [RF_Join_CTE_2].join_key_2_0 LEFT OUTER JOIN [RF_Join_CTE_4] ON [RF_Join_CTE_4].join_key_4_0 = [RF_Join_CTE_3].join_key_3_0 LEFT OUTER JOIN [RF_Join_CTE_5] ON [RF_Join_CTE_5].join_key_5_0 = [RF_Join_CTE_4].join_key_4_0), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0_0 AS [KEY], 0.333333333333 + 0.1 * [RF_Join_CTE].[Estimator_0_0] + 0.1 * [RF_Join_CTE].[Estimator_1_0] + 0.1 * [RF_Join_CTE].[Estimator_2_0] + 0.1 * [RF_Join_CTE].[Estimator_3_0] + 0.1 * [RF_Join_CTE].[Estimator_4_0] + 0.1 * [RF_Join_CTE].[Estimator_5_0] AS [Score_0], CAST(NULL AS FLOAT) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], 0.333333333333 + 0.1 * [RF_Join_CTE].[Estimator_0_1] + 0.1 * [RF_Join_CTE].[Estimator_1_1] + 0.1 * [RF_Join_CTE].[Estimator_2_1] + 0.1 * [RF_Join_CTE].[Estimator_3_1] + 0.1 * [RF_Join_CTE].[Estimator_4_1] + 0.1 * [RF_Join_CTE].[Estimator_5_1] AS [Score_1], CAST(NULL AS FLOAT) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1], 0.333333333333 + 0.1 * [RF_Join_CTE].[Estimator_0_2] + 0.1 * [RF_Join_CTE].[Estimator_1_2] + 0.1 * [RF_Join_CTE].[Estimator_2_2] + 0.1 * [RF_Join_CTE].[Estimator_3_2] + 0.1 * [RF_Join_CTE].[Estimator_4_2] + 0.1 * [RF_Join_CTE].[Estimator_5_2] AS [Score_2], CAST(NULL AS FLOAT) AS [Proba_2], CAST(NULL AS FLOAT) AS [LogProba_2] 
FROM [RF_Join_CTE]), 
orig_cte AS 
(SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Score_0] AS [Score_0], [RF_AVG_Scores].[Score_1] AS [Score_1], [RF_AVG_Scores].[Score_2] AS [Score_2], [RF_AVG_Scores].[Proba_0] AS [Proba_0], [RF_AVG_Scores].[Proba_1] AS [Proba_1], [RF_AVG_Scores].[Proba_2] AS [Proba_2], [RF_AVG_Scores].[LogProba_0] AS [LogProba_0], [RF_AVG_Scores].[LogProba_1] AS [LogProba_1], [RF_AVG_Scores].[LogProba_2] AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [RF_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], exp(score_max.[Score_0] - score_max.[max_Score]) AS [exp_delta_Score_0], exp(score_max.[Score_1] - score_max.[max_Score]) AS [exp_delta_Score_1], exp(score_max.[Score_2] - score_max.[max_Score]) AS [exp_delta_Score_2] 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.[KEY] AS [KEY], soft_scu.class AS class, soft_scu.[LogProba] AS [LogProba], soft_scu.[Proba] AS [Proba], soft_scu.[Score] AS [Score], soft_scu.[exp_delta_Score] AS [exp_delta_Score] 
FROM (SELECT score_soft_max_comp.[KEY] AS [KEY], 0 AS class, score_soft_max_comp.[LogProba_0] AS [LogProba], score_soft_max_comp.[Proba_0] AS [Proba], score_soft_max_comp.[Score_0] AS [Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 1 AS class, score_soft_max_comp.[LogProba_1] AS [LogProba], score_soft_max_comp.[Proba_1] AS [Proba], score_soft_max_comp.[Score_1] AS [Score], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 2 AS class, score_soft_max_comp.[LogProba_2] AS [LogProba], score_soft_max_comp.[Proba_2] AS [Proba], score_soft_max_comp.[Score_2] AS [Score], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score] 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.[KEY] AS [KEY], score_soft_max_comp.[Score_0] AS [Score_0], score_soft_max_comp.[Score_1] AS [Score_1], score_soft_max_comp.[Score_2] AS [Score_2], score_soft_max_comp.[Proba_0] AS [Proba_0], score_soft_max_comp.[Proba_1] AS [Proba_1], score_soft_max_comp.[Proba_2] AS [Proba_2], score_soft_max_comp.[LogProba_0] AS [LogProba_0], score_soft_max_comp.[LogProba_1] AS [LogProba_1], score_soft_max_comp.[LogProba_2] AS [LogProba_2], score_soft_max_comp.[Decision] AS [Decision], score_soft_max_comp.[max_LogProba] AS [max_LogProba], score_soft_max_comp.[max_Proba] AS [max_Proba], score_soft_max_comp.[max_Score] AS [max_Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score_2], (SELECT sum(score_class_union_soft.[exp_delta_Score]) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.[KEY] = score_class_union_soft.[KEY]) AS [sum_ExpDeltaScore] 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Score_2] AS [Score_2], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[Proba_2] AS [Proba_2], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[LogProba_2] AS [LogProba_2], score_soft_max.[Decision] AS [Decision], score_soft_max.[max_LogProba] AS [max_LogProba], score_soft_max.[max_Proba] AS [max_Proba], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.[max_LogProba] = score_class_union.[LogProba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.[max_Proba] = score_class_union.[Proba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.[max_Score] = score_class_union.[Score] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score], score_soft_max.[exp_delta_Score_0] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_0], score_soft_max.[exp_delta_Score_1] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_1], score_soft_max.[exp_delta_Score_2] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_2] 
FROM score_soft_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[SoftProba_0] AS [Proba_0], arg_max_cte.[SoftProba_1] AS [Proba_1], arg_max_cte.[SoftProba_2] AS [Proba_2], CASE WHEN (arg_max_cte.[SoftProba_0] IS NULL OR arg_max_cte.[SoftProba_0] > 0.0) THEN log(arg_max_cte.[SoftProba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[SoftProba_1] IS NULL OR arg_max_cte.[SoftProba_1] > 0.0) THEN log(arg_max_cte.[SoftProba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[SoftProba_2] IS NULL OR arg_max_cte.[SoftProba_2] > 0.0) THEN log(arg_max_cte.[SoftProba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte