-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.6776765584945679) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5091458559036255) THEN CASE WHEN ("ADS"."Feature_3" <= 0.08858048170804977) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.33130204677581787) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.618640661239624) THEN CASE WHEN ("ADS"."Feature_3" <= 0.9122387170791626) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6245904564857483) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.6776765584945679 AS threshold, 100 AS count, 0 AS depth, -1.7497114868092467e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.5091458559036255 AS threshold, 62 AS count, 1 AS depth, -2.613702479726607 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.08858048170804977 AS threshold, 35 AS count, 2 AS depth, -4.4756527625053915 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -7.796048808613363 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, -3.491831711806733 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.33130204677581787 AS threshold, 27 AS count, 2 AS depth, -0.20006322427262718 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -3.52867101315185 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 1.2014558447291506 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 0.618640661239624 AS threshold, 38 AS count, 1 AS depth, 4.264461940606564 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.9122387170791626 AS threshold, 23 AS count, 2 AS depth, 2.55805893434463 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 1.4933213046307077 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 4.99174494511931 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.6245904564857483 AS threshold, 15 AS count, 2 AS depth, 6.880946550208195 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 3.4180845250296517 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 8.140169104818575 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.6776765584945679) THEN CASE WHEN ("ADS"."Feature_1" <= 0.2305179089307785) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5676248073577881) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.33130204677581787) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6228379011154175) THEN CASE WHEN ("ADS"."Feature_5" <= 0.3849926292896271) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.1707940697669983) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.6776765584945679 AS threshold, 100 AS count, 0 AS depth, -1.838529328779259e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.2305179089307785 AS threshold, 62 AS count, 1 AS depth, -2.352332231753946 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.5676248073577881 AS threshold, 19 AS count, 2 AS depth, -5.356812691954095 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, -6.5258565492621186 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -2.0834898914916242 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.33130204677581787 AS threshold, 43 AS count, 2 AS depth, -1.0247710981771363 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, -4.280396398740472 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 1.1039069829604296 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.6228379011154175 AS threshold, 38 AS count, 1 AS depth, 3.8380157465459077 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, 0.3849926292896271 AS threshold, 18 AS count, 2 AS depth, 1.8060949463367315 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 4.019769312284587 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.6992577633628035 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.1707940697669983 AS threshold, 20 AS count, 2 AS depth, 5.666744466734166 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -3.085850788446841 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 6.127407374901588 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.4943907558917999) THEN CASE WHEN ("ADS"."Feature_1" <= 0.3740273714065552) THEN CASE WHEN ("ADS"."Feature_5" <= 0.6210252046585083) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.3352934718132019) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.1776983141899109) THEN CASE WHEN ("ADS"."Feature_1" <= 0.07469799369573593) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.3946956694126129) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.4943907558917999 AS threshold, 100 AS count, 0 AS depth, -1.1457501614131616e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.3740273714065552 AS threshold, 44 AS count, 1 AS depth, -3.0878196265546975 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 0.6210252046585083 AS threshold, 18 AS count, 2 AS depth, -5.437354976191877 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, -6.304771572735498 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -4.0742717530518995 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.3352934718132019 AS threshold, 26 AS count, 2 AS depth, -1.4612182306520336 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, -4.469265826960957 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 0.7446833399745093 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.1776983141899109 AS threshold, 56 AS count, 1 AS depth, 2.4261439922929733 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.07469799369573593 AS threshold, 11 AS count, 2 AS depth, -1.7003231585237664 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -3.4998350127087954 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, -0.6720306704180354 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.3946956694126129 AS threshold, 45 AS count, 2 AS depth, 3.43483596249262 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.8614126158919538 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 4.597027151280019 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.6776765584945679) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5091458559036255) THEN CASE WHEN ("ADS"."Feature_2" <= 0.20365607738494873) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.3412249684333801) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.618640661239624) THEN CASE WHEN ("ADS"."Feature_3" <= 0.9122387170791626) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.9680527448654175) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.6776765584945679 AS threshold, 100 AS count, 0 AS depth, -1.4122036873231992e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.5091458559036255 AS threshold, 62 AS count, 1 AS depth, -1.9320647959629742 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.20365607738494873 AS threshold, 35 AS count, 2 AS depth, -3.4304510168750637 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -0.6617130273645404 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, -4.250817828581885 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.3412249684333801 AS threshold, 27 AS count, 2 AS depth, 0.010287712626770303 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, -1.6821086129690288 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 1.5817985863942983 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 0.618640661239624 AS threshold, 38 AS count, 1 AS depth, 3.152316246044849 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.9122387170791626 AS threshold, 23 AS count, 2 AS depth, 1.7478567168298889 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.8865151178447082 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 3.716637514510303 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.9680527448654175 AS threshold, 15 AS count, 2 AS depth, 5.305820857507788 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 4.642111792228996 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9.619929781819938 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.4943907558917999) THEN CASE WHEN ("ADS"."Feature_1" <= 0.3740273714065552) THEN CASE WHEN ("ADS"."Feature_3" <= 0.08858048170804977) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.3352934718132019) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.1776983141899109) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5676248073577881) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.857697606086731) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.4943907558917999 AS threshold, 100 AS count, 0 AS depth, -1.6431300764452318e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.3740273714065552 AS threshold, 44 AS count, 1 AS depth, -2.5073445171013207 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.08858048170804977 AS threshold, 18 AS count, 2 AS depth, -4.563692411620234 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -6.141113924591089 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, -3.9569918297083673 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.3352934718132019 AS threshold, 26 AS count, 2 AS depth, -1.0837190516651503 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, -3.743688854837833 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 0.8669254706614846 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.1776983141899109 AS threshold, 56 AS count, 1 AS depth, 1.9700564062938921 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.5676248073577881 AS threshold, 11 AS count, 2 AS depth, -1.6025266146930859 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, -5.202395909626052 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, -1.2425396851997887 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.857697606086731 AS threshold, 45 AS count, 2 AS depth, 2.843354478090709 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 1.9275095635083614 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 5.361927993192164 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4_0, "DT_Output_4"."Estimator" AS "Estimator_4_0" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.6599574685096741) THEN CASE WHEN ("ADS"."Feature_1" <= 0.2305179089307785) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5676248073577881) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.33130204677581787) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6498864889144897) THEN CASE WHEN ("ADS"."Feature_1" <= 0.17811262607574463) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.6245904564857483) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.6599574685096741 AS threshold, 100 AS count, 0 AS depth, -9.50350909079134e-16 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.2305179089307785 AS threshold, 61 AS count, 1 AS depth, -1.6142752968903076 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.5676248073577881 AS threshold, 18 AS count, 2 AS depth, -3.9539771988215886 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, -4.497233886452131 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -2.0525787921146885 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.33130204677581787 AS threshold, 43 AS count, 2 AS depth, -0.6348651984074466 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, -2.9766100523664814 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 0.8962756676426911 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 0.6498864889144897 AS threshold, 39 AS count, 1 AS depth, 2.5248921310335555 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.17811262607574463 AS threshold, 24 AS count, 2 AS depth, 1.3115467505064793 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -0.7111079203430226 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 1.8438242954668744 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.6245904564857483 AS threshold, 15 AS count, 2 AS depth, 4.466244739876876 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 2.0355578108300416 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 5.350130895893907 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5_0, "DT_Output_5"."Estimator" AS "Estimator_5_0" 
FROM "DT_Output_5"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0", "RF_Tree_4_0".join_key_4_0 AS join_key_4_0, "RF_Tree_4_0"."Estimator_4_0" AS "Estimator_4_0", "RF_Tree_5_0".join_key_5_0 AS join_key_5_0, "RF_Tree_5_0"."Estimator_5_0" AS "Estimator_5_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0 LEFT OUTER JOIN "RF_Tree_4_0" ON "RF_Tree_4_0".join_key_4_0 = "RF_Tree_3_0".join_key_3_0 LEFT OUTER JOIN "RF_Tree_5_0" ON "RF_Tree_5_0".join_key_5_0 = "RF_Tree_4_0".join_key_4_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 14.2340241778 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" + 0.1 * "RF_Join_CTE"."Estimator_4_0" + 0.1 * "RF_Join_CTE"."Estimator_5_0" AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"