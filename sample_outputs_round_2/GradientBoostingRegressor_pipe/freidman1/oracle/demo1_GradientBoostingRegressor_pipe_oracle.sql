-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.452799867839 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.512431279109 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.493120750562 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.47580755652 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.50734421748 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.493890579849 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.476659416521 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.508376264347 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.506427115437 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.506024514543 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.452799867839 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.512431279109 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.493120750562 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.47580755652 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.50734421748 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.493890579849 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.476659416521 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.508376264347 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.506427115437 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.506024514543 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.176028387538 + "CenteredDataForPCA".impute_3 * -0.252888440102 + "CenteredDataForPCA".impute_4 * -0.256752227338 + "CenteredDataForPCA".impute_5 * 0.193824683685 + "CenteredDataForPCA".impute_6 * -0.291715400237 + "CenteredDataForPCA".impute_7 * 0.0114738549611 + "CenteredDataForPCA".impute_8 * -0.224854391264 + "CenteredDataForPCA".impute_9 * -0.659130292654 + "CenteredDataForPCA".impute_10 * 0.292927617957 + "CenteredDataForPCA".impute_11 * 0.381475262612 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.286639685379 + "CenteredDataForPCA".impute_3 * 0.646088599289 + "CenteredDataForPCA".impute_4 * 0.142659167823 + "CenteredDataForPCA".impute_5 * 0.363962634957 + "CenteredDataForPCA".impute_6 * -0.476683792994 + "CenteredDataForPCA".impute_7 * 0.122518131968 + "CenteredDataForPCA".impute_8 * -0.19132758337 + "CenteredDataForPCA".impute_9 * 0.151234645352 + "CenteredDataForPCA".impute_10 * 0.0606784872408 + "CenteredDataForPCA".impute_11 * 0.205398643458 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.56064992816 + "CenteredDataForPCA".impute_3 * 0.313862563427 + "CenteredDataForPCA".impute_4 * -0.0733959356247 + "CenteredDataForPCA".impute_5 * 0.24689376994 + "CenteredDataForPCA".impute_6 * 0.511220588592 + "CenteredDataForPCA".impute_7 * -0.190986264589 + "CenteredDataForPCA".impute_8 * -0.376512491046 + "CenteredDataForPCA".impute_9 * 0.185041191856 + "CenteredDataForPCA".impute_10 * 0.0994325489184 + "CenteredDataForPCA".impute_11 * 0.192633015049 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.334008304331 + "CenteredDataForPCA".impute_3 * 0.213774174104 + "CenteredDataForPCA".impute_4 * -0.609878369413 + "CenteredDataForPCA".impute_5 * 0.105684948601 + "CenteredDataForPCA".impute_6 * -0.228159831999 + "CenteredDataForPCA".impute_7 * 0.293530967796 + "CenteredDataForPCA".impute_8 * 0.0794590062615 + "CenteredDataForPCA".impute_9 * -0.0218161334655 + "CenteredDataForPCA".impute_10 * -0.140188532174 + "CenteredDataForPCA".impute_11 * -0.543100618104 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.145085459931 + "CenteredDataForPCA".impute_3 * -0.101260829144 + "CenteredDataForPCA".impute_4 * 0.527984606421 + "CenteredDataForPCA".impute_5 * 0.0820593454559 + "CenteredDataForPCA".impute_6 * 0.0922151409087 + "CenteredDataForPCA".impute_7 * 0.584418373823 + "CenteredDataForPCA".impute_8 * -0.240682064582 + "CenteredDataForPCA".impute_9 * -0.11118998761 + "CenteredDataForPCA".impute_10 * 0.352590618754 + "CenteredDataForPCA".impute_11 * -0.372203292757 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.093746050967 + "CenteredDataForPCA".impute_3 * 0.0866415502438 + "CenteredDataForPCA".impute_4 * 0.231084703756 + "CenteredDataForPCA".impute_5 * 0.483988136502 + "CenteredDataForPCA".impute_6 * 0.00508211620686 + "CenteredDataForPCA".impute_7 * -0.455730212585 + "CenteredDataForPCA".impute_8 * 0.534167991915 + "CenteredDataForPCA".impute_9 * -0.207583312788 + "CenteredDataForPCA".impute_10 * 0.261086631992 + "CenteredDataForPCA".impute_11 * -0.302905767207 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.0478850220517 + "CenteredDataForPCA".impute_3 * -0.0222779087064 + "CenteredDataForPCA".impute_4 * 0.156436463413 + "CenteredDataForPCA".impute_5 * 0.419426191353 + "CenteredDataForPCA".impute_6 * 0.249882991579 + "CenteredDataForPCA".impute_7 * 0.246765009717 + "CenteredDataForPCA".impute_8 * 0.0652985990469 + "CenteredDataForPCA".impute_9 * -0.33500698451 + "CenteredDataForPCA".impute_10 * -0.738214929662 + "CenteredDataForPCA".impute_11 * 0.109684428171 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.405256215915 + "CenteredDataForPCA".impute_3 * -0.432659164237 + "CenteredDataForPCA".impute_4 * 0.110086009056 + "CenteredDataForPCA".impute_5 * 0.283910867841 + "CenteredDataForPCA".impute_6 * -0.356169867819 + "CenteredDataForPCA".impute_7 * 0.153205502848 + "CenteredDataForPCA".impute_8 * 0.224080239875 + "CenteredDataForPCA".impute_9 * 0.52393967753 + "CenteredDataForPCA".impute_10 * -0.0751604699761 + "CenteredDataForPCA".impute_11 * 0.274128437253 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.220280714945 + "CenteredDataForPCA".impute_3 * -0.100353640108 + "CenteredDataForPCA".impute_4 * 0.30015743203 + "CenteredDataForPCA".impute_5 * -0.109447858253 + "CenteredDataForPCA".impute_6 * -0.395176437673 + "CenteredDataForPCA".impute_7 * -0.464781798518 + "CenteredDataForPCA".impute_8 * -0.479548779867 + "CenteredDataForPCA".impute_9 * -0.0674033934662 + "CenteredDataForPCA".impute_10 * -0.358705285889 + "CenteredDataForPCA".impute_11 * -0.322437539515 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.464838172089 + "CenteredDataForPCA".impute_3 * 0.398605353768 + "CenteredDataForPCA".impute_4 * 0.278449997924 + "CenteredDataForPCA".impute_5 * -0.498353843523 + "CenteredDataForPCA".impute_6 * -0.142404095414 + "CenteredDataForPCA".impute_7 * 0.11224792645 + "CenteredDataForPCA".impute_8 * 0.370206261388 + "CenteredDataForPCA".impute_9 * -0.247425595044 + "CenteredDataForPCA".impute_10 * -0.0959460311909 + "CenteredDataForPCA".impute_11 * 0.242470669733 AS anoova_11 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.23838046193122864) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.1688404083251953) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 0.04965856671333313) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.2488883137702942) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.43610405921936035) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.13855496048927307) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= 0.3150765299797058) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.23838046193122864 AS threshold, 100 AS count, 0 AS depth, 2.415845301584341e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, 0.1688404083251953 AS threshold, 24 AS count, 1 AS depth, -4.347211660531458 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.04965856671333313 AS threshold, 18 AS count, 2 AS depth, -3.377356534069053 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, -1.5832178049359862 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -5.6200299454853875 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, 0.2488883137702942 AS threshold, 6 AS count, 2 AS depth, -7.2567770399186715 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -8.347760194658674 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -6.16579388517867 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_7' AS feature, -0.43610405921936035 AS threshold, 76 AS count, 1 AS depth, 1.372803682273095 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, 0.13855496048927307 AS threshold, 6 AS count, 2 AS depth, -4.309657467994673 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -1.6478407915771391 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -6.971474144412206 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_11' AS feature, 0.3150765299797058 AS threshold, 70 AS count, 2 AS depth, 1.8598717808674756 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 2.1510565260853203 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -2.9446765152269734 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.23838046193122864) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= 0.16869771480560303) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.1783575862646103) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.08733764290809631) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.43610405921936035) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.13855496048927307) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.2318916767835617) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.23838046193122864 AS threshold, 100 AS count, 0 AS depth, 2.3625545964023332e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 0.16869771480560303 AS threshold, 24 AS count, 1 AS depth, -3.912490494478312 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, 0.1783575862646103 AS threshold, 16 AS count, 2 AS depth, -2.789605984098489 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, -1.822075160412635 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -6.982239553403858 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -0.08733764290809631 AS threshold, 8 AS count, 2 AS depth, -6.158259515237957 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -7.665031106039962 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, -4.651487924435953 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_7' AS feature, -0.43610405921936035 AS threshold, 76 AS count, 1 AS depth, 1.2355233140457853 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, 0.13855496048927307 AS threshold, 6 AS count, 2 AS depth, -3.878691721195205 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -1.483056712419425 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -6.274326729970987 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_8' AS feature, -0.2318916767835617 AS threshold, 70 AS count, 2 AS depth, 1.6738846027807277 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, -0.39347559237184493 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, 2.286435771714823 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.22039315104484558) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.02650384232401848) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.4390560984611511) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -0.3654654920101166) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.43610405921936035) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.13855496048927307) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 0.16707803308963776) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.22039315104484558 AS threshold, 100 AS count, 0 AS depth, 2.0605739337042904e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.02650384232401848 AS threshold, 27 AS count, 1 AS depth, -3.2890921131418587 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 0.4390560984611511 AS threshold, 15 AS count, 2 AS depth, -4.675105447390124 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, -5.131548619198953 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.71509895793346 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, -0.3654654920101166 AS threshold, 12 AS count, 2 AS depth, -1.5565754453315257 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -6.338122483955645 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, -0.6002660376067018 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_7' AS feature, -0.43610405921936035 AS threshold, 73 AS count, 1 AS depth, 1.216513521299046 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, 0.13855496048927307 AS threshold, 6 AS count, 2 AS depth, -3.4908225490756855 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -1.3347510411774823 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -5.6468940569738875 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_8' AS feature, 0.16707803308963776 AS threshold, 67 AS count, 2 AS depth, 1.638066005213202 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, 0.8528450589532283 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 3.244199758926783 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.20350195467472076) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.6088405847549438) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= 0.1665726602077484) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.711148738861084) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.43610405921936035) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.13855496048927307) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 0.16957679390907288) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.20350195467472076 AS threshold, 100 AS count, 0 AS depth, 1.829647544582258e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, 0.6088405847549438 AS threshold, 30 AS count, 1 AS depth, -2.7522891853631193 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, 0.1665726602077484 AS threshold, 28 AS count, 2 AS depth, -3.2014924530623534 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, -2.45375440998541 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, -5.07083756075471 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, 0.711148738861084 AS threshold, 2 AS count, 2 AS depth, 3.5365565624261652 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3.2208345900573754 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3.852278534794955 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_7' AS feature, -0.43610405921936035 AS threshold, 70 AS count, 1 AS depth, 1.1795525080127676 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, 0.13855496048927307 AS threshold, 6 AS count, 2 AS depth, -3.1417402941681174 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -1.2012759370597343 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -5.082204651276499 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_8' AS feature, 0.16957679390907288 AS threshold, 64 AS count, 2 AS depth, 1.5846737082172255 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, 0.7615077486195556 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 3.3956388193321 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.20350195467472076) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.6088405847549438) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.3119449019432068) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.26332995295524597) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.2079898715019226) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.01189580000936985) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.0657631978392601) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.20350195467472076 AS threshold, 100 AS count, 0 AS depth, 1.6342482922482305e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, 0.6088405847549438 AS threshold, 30 AS count, 1 AS depth, -2.477060266826806 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -0.3119449019432068 AS threshold, 28 AS count, 2 AS depth, -2.8813432077561174 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, -5.359275528534589 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, -2.34266226845645 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_3' AS feature, -0.26332995295524597 AS threshold, 2 AS count, 2 AS depth, 3.1829009061835487 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 3.4670506813154596 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2.898751131051638 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_11' AS feature, -0.2079898715019226 AS threshold, 70 AS count, 1 AS depth, 1.061597257211491 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, 0.01189580000936985 AS threshold, 12 AS count, 2 AS depth, 3.7137853783562336 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5.255650524915752 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 2.6124531308137224 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_7' AS feature, -0.0657631978392601 AS threshold, 58 AS count, 2 AS depth, 0.512868680422923 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, -1.2037314697064556 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, 1.4163424436489114 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4_0" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4_0, "DT_Output_4"."Estimator" AS "Estimator_4_0" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.22039315104484558) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.02650384232401848) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.4390560984611511) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -0.3654654920101166) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= -0.43610405921936035) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.13855496048927307) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.2318916767835617) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.22039315104484558 AS threshold, 100 AS count, 0 AS depth, 1.3145040611561853e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.02650384232401848 AS threshold, 27 AS count, 1 AS depth, -2.403180595643062 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 0.4390560984611511 AS threshold, 15 AS count, 2 AS depth, -3.562937643574592 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, -3.9619496702573707 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 2.0232307299843004 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, -0.3654654920101166 AS threshold, 12 AS count, 2 AS depth, -0.9534842857286497 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, -4.942983747173523 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, -0.15558439343967514 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_7' AS feature, -0.43610405921936035 AS threshold, 73 AS count, 1 AS depth, 0.8888476175666141 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, 0.13855496048927307 AS threshold, 6 AS count, 2 AS depth, -2.7071931177806596 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -0.9607751963831147 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, -4.453611039178203 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'anoova_8' AS feature, -0.2318916767835617 AS threshold, 67 AS count, 2 AS depth, 1.2108811162544295 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, -0.615691385930865 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, 1.783923469881189 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5_0" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5_0, "DT_Output_5"."Estimator" AS "Estimator_5_0" 
FROM "DT_Output_5"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0", "RF_Tree_4_0".join_key_4_0 AS join_key_4_0, "RF_Tree_4_0"."Estimator_4_0" AS "Estimator_4_0", "RF_Tree_5_0".join_key_5_0 AS join_key_5_0, "RF_Tree_5_0"."Estimator_5_0" AS "Estimator_5_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0 LEFT OUTER JOIN "RF_Tree_4_0" ON "RF_Tree_4_0".join_key_4_0 = "RF_Tree_3_0".join_key_3_0 LEFT OUTER JOIN "RF_Tree_5_0" ON "RF_Tree_5_0".join_key_5_0 = "RF_Tree_4_0".join_key_4_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 13.9261247832 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" + 0.1 * "RF_Join_CTE"."Estimator_4_0" + 0.1 * "RF_Join_CTE"."Estimator_5_0" AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"