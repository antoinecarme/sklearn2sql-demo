-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.103769005449 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0239965638338 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0692430169563 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.141202265502 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.123460913092 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.00473805206827 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0706897572999 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0974048037651 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0552574885678 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.123064415638 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.113427281027 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.109426156477 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.0252127695598 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.17739821125 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0651371593972 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.0683053164923 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0832135110407 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.113047064981 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0227675238668 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.0108595382451 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.103769005449 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.0239965638338 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.0692430169563 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.141202265502 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.123460913092 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.00473805206827 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.0706897572999 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.0974048037651 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.0552574885678 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.123064415638 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.113427281027 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.109426156477 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.0252127695598 AS impute_14, "ADS_imp_1_OUT".impute_15 - 0.17739821125 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.0651371593972 AS impute_16, "ADS_imp_1_OUT".impute_17 - -0.0683053164923 AS impute_17, "ADS_imp_1_OUT".impute_18 - 0.0832135110407 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.113047064981 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.0227675238668 AS impute_20, "ADS_imp_1_OUT".impute_21 - 0.0108595382451 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.0294341118093 + "CenteredDataForPCA".impute_3 * 0.0666753098943 + "CenteredDataForPCA".impute_4 * -0.493331228285 + "CenteredDataForPCA".impute_5 * -0.143419619576 + "CenteredDataForPCA".impute_6 * -0.0260953705497 + "CenteredDataForPCA".impute_7 * -0.100115618329 + "CenteredDataForPCA".impute_8 * 0.000125200167064 + "CenteredDataForPCA".impute_9 * -0.096642291879 + "CenteredDataForPCA".impute_10 * -0.0388639973 + "CenteredDataForPCA".impute_11 * 0.0281277894016 + "CenteredDataForPCA".impute_12 * 0.0251985563907 + "CenteredDataForPCA".impute_13 * -0.00265570132229 + "CenteredDataForPCA".impute_14 * 0.658012389519 + "CenteredDataForPCA".impute_15 * -0.00834571654112 + "CenteredDataForPCA".impute_16 * -0.0552819581554 + "CenteredDataForPCA".impute_17 * 0.0398199755902 + "CenteredDataForPCA".impute_18 * -0.0302652289534 + "CenteredDataForPCA".impute_19 * -0.0571868679708 + "CenteredDataForPCA".impute_20 * -0.499803796832 + "CenteredDataForPCA".impute_21 * -0.126782700654 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.101029487123 + "CenteredDataForPCA".impute_3 * 0.0737652405004 + "CenteredDataForPCA".impute_4 * -0.25397943294 + "CenteredDataForPCA".impute_5 * -0.695039634256 + "CenteredDataForPCA".impute_6 * 0.135419725172 + "CenteredDataForPCA".impute_7 * -0.049781176436 + "CenteredDataForPCA".impute_8 * -0.187343041266 + "CenteredDataForPCA".impute_9 * 0.0603983777668 + "CenteredDataForPCA".impute_10 * 0.0593524933461 + "CenteredDataForPCA".impute_11 * -0.0628662941661 + "CenteredDataForPCA".impute_12 * -0.0665241544329 + "CenteredDataForPCA".impute_13 * 0.0599528639681 + "CenteredDataForPCA".impute_14 * -0.0338129970299 + "CenteredDataForPCA".impute_15 * 0.00577447004793 + "CenteredDataForPCA".impute_16 * -0.0366831813948 + "CenteredDataForPCA".impute_17 * -0.183132425692 + "CenteredDataForPCA".impute_18 * -0.287615479305 + "CenteredDataForPCA".impute_19 * 0.0209787895488 + "CenteredDataForPCA".impute_20 * 0.453700880433 + "CenteredDataForPCA".impute_21 * -0.191421719117 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.0549602133103 + "CenteredDataForPCA".impute_3 * 0.03610695522 + "CenteredDataForPCA".impute_4 * -0.232413651563 + "CenteredDataForPCA".impute_5 * 0.133923355552 + "CenteredDataForPCA".impute_6 * 0.0953314127498 + "CenteredDataForPCA".impute_7 * -0.122065809943 + "CenteredDataForPCA".impute_8 * 0.137867499221 + "CenteredDataForPCA".impute_9 * 0.117280816712 + "CenteredDataForPCA".impute_10 * 0.0549627448376 + "CenteredDataForPCA".impute_11 * -0.0650922207158 + "CenteredDataForPCA".impute_12 * -0.00675721585366 + "CenteredDataForPCA".impute_13 * -0.0544330377334 + "CenteredDataForPCA".impute_14 * -0.151516991881 + "CenteredDataForPCA".impute_15 * 0.116547889847 + "CenteredDataForPCA".impute_16 * -0.11727175367 + "CenteredDataForPCA".impute_17 * 0.158661252481 + "CenteredDataForPCA".impute_18 * 0.5496067509 + "CenteredDataForPCA".impute_19 * -0.0408596318674 + "CenteredDataForPCA".impute_20 * 0.154311442399 + "CenteredDataForPCA".impute_21 * -0.673566047561 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.000633504489152 + "CenteredDataForPCA".impute_3 * -0.13735647844 + "CenteredDataForPCA".impute_4 * -0.593091075051 + "CenteredDataForPCA".impute_5 * 0.369712230419 + "CenteredDataForPCA".impute_6 * 0.125096532427 + "CenteredDataForPCA".impute_7 * -0.0144575529909 + "CenteredDataForPCA".impute_8 * 0.0249066240565 + "CenteredDataForPCA".impute_9 * -0.084458328985 + "CenteredDataForPCA".impute_10 * -0.020307236247 + "CenteredDataForPCA".impute_11 * -0.12143802253 + "CenteredDataForPCA".impute_12 * 0.0677811829013 + "CenteredDataForPCA".impute_13 * 0.123809420344 + "CenteredDataForPCA".impute_14 * 0.0470680142858 + "CenteredDataForPCA".impute_15 * 0.122892925973 + "CenteredDataForPCA".impute_16 * -0.00989457691181 + "CenteredDataForPCA".impute_17 * 0.127441466942 + "CenteredDataForPCA".impute_18 * -0.0106972954387 + "CenteredDataForPCA".impute_19 * -0.129297047197 + "CenteredDataForPCA".impute_20 * 0.449896047978 + "CenteredDataForPCA".impute_21 * 0.425556549677 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.323009311108 + "CenteredDataForPCA".impute_3 * 0.108440378196 + "CenteredDataForPCA".impute_4 * -0.0625140192921 + "CenteredDataForPCA".impute_5 * 0.201021473434 + "CenteredDataForPCA".impute_6 * 0.287660435406 + "CenteredDataForPCA".impute_7 * -0.249269602119 + "CenteredDataForPCA".impute_8 * -0.304618844652 + "CenteredDataForPCA".impute_9 * 0.154817148644 + "CenteredDataForPCA".impute_10 * 0.399360762952 + "CenteredDataForPCA".impute_11 * 0.0827269530323 + "CenteredDataForPCA".impute_12 * -0.481575172633 + "CenteredDataForPCA".impute_13 * 0.159074046155 + "CenteredDataForPCA".impute_14 * 0.0405985336142 + "CenteredDataForPCA".impute_15 * -0.197311913888 + "CenteredDataForPCA".impute_16 * 0.143410923592 + "CenteredDataForPCA".impute_17 * -0.210924496987 + "CenteredDataForPCA".impute_18 * 0.0969946218975 + "CenteredDataForPCA".impute_19 * 0.183468189128 + "CenteredDataForPCA".impute_20 * -0.0611423693718 + "CenteredDataForPCA".impute_21 * 0.0441387051776 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.312569639186 + "CenteredDataForPCA".impute_3 * 0.242376895517 + "CenteredDataForPCA".impute_4 * -0.0259820750036 + "CenteredDataForPCA".impute_5 * -0.0173673827871 + "CenteredDataForPCA".impute_6 * 0.177434893643 + "CenteredDataForPCA".impute_7 * 0.23226035962 + "CenteredDataForPCA".impute_8 * 0.0295265558694 + "CenteredDataForPCA".impute_9 * 0.137806406028 + "CenteredDataForPCA".impute_10 * -0.255054037591 + "CenteredDataForPCA".impute_11 * 0.0677422433971 + "CenteredDataForPCA".impute_12 * -0.182051760366 + "CenteredDataForPCA".impute_13 * 0.25141310898 + "CenteredDataForPCA".impute_14 * 0.00310266458889 + "CenteredDataForPCA".impute_15 * -0.469228612379 + "CenteredDataForPCA".impute_16 * 0.248583273825 + "CenteredDataForPCA".impute_17 * 0.521565013784 + "CenteredDataForPCA".impute_18 * -0.00887981775322 + "CenteredDataForPCA".impute_19 * 0.128954541179 + "CenteredDataForPCA".impute_20 * 0.0240035750919 + "CenteredDataForPCA".impute_21 * -0.00066184754789 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.331336130376 + "CenteredDataForPCA".impute_3 * -0.0442410592307 + "CenteredDataForPCA".impute_4 * -0.137577482 + "CenteredDataForPCA".impute_5 * 0.0326622078386 + "CenteredDataForPCA".impute_6 * -0.309382284881 + "CenteredDataForPCA".impute_7 * 0.246704067656 + "CenteredDataForPCA".impute_8 * -0.645770820948 + "CenteredDataForPCA".impute_9 * -0.0753375886955 + "CenteredDataForPCA".impute_10 * -0.194301675235 + "CenteredDataForPCA".impute_11 * 0.181979363884 + "CenteredDataForPCA".impute_12 * 0.0601506855314 + "CenteredDataForPCA".impute_13 * -0.349091325303 + "CenteredDataForPCA".impute_14 * -0.026242275903 + "CenteredDataForPCA".impute_15 * -0.174373675923 + "CenteredDataForPCA".impute_16 * 0.0268667379458 + "CenteredDataForPCA".impute_17 * 0.168723001857 + "CenteredDataForPCA".impute_18 * 0.0958948146217 + "CenteredDataForPCA".impute_19 * -0.0247574673244 + "CenteredDataForPCA".impute_20 * 0.113252238078 + "CenteredDataForPCA".impute_21 * -0.0985763620469 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.178341701824 + "CenteredDataForPCA".impute_3 * -0.587806292527 + "CenteredDataForPCA".impute_4 * -0.0102868312154 + "CenteredDataForPCA".impute_5 * -0.172049603862 + "CenteredDataForPCA".impute_6 * 0.0883257228329 + "CenteredDataForPCA".impute_7 * 0.0850334441896 + "CenteredDataForPCA".impute_8 * 0.198662809108 + "CenteredDataForPCA".impute_9 * -0.340277195423 + "CenteredDataForPCA".impute_10 * 0.0525010435101 + "CenteredDataForPCA".impute_11 * 0.21586448969 + "CenteredDataForPCA".impute_12 * -0.22107013275 + "CenteredDataForPCA".impute_13 * 0.0210234595368 + "CenteredDataForPCA".impute_14 * 0.013992197679 + "CenteredDataForPCA".impute_15 * 0.205886922132 + "CenteredDataForPCA".impute_16 * 0.401151236586 + "CenteredDataForPCA".impute_17 * 0.23299869547 + "CenteredDataForPCA".impute_18 * -0.0243452311937 + "CenteredDataForPCA".impute_19 * 0.221751010347 + "CenteredDataForPCA".impute_20 * 0.00934524243119 + "CenteredDataForPCA".impute_21 * -0.127930602361 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.464060836904 + "CenteredDataForPCA".impute_3 * -0.136031332587 + "CenteredDataForPCA".impute_4 * -0.0646808747132 + "CenteredDataForPCA".impute_5 * 0.183380532472 + "CenteredDataForPCA".impute_6 * 0.182701782629 + "CenteredDataForPCA".impute_7 * 0.101196034282 + "CenteredDataForPCA".impute_8 * -0.16190590501 + "CenteredDataForPCA".impute_9 * -0.232954235172 + "CenteredDataForPCA".impute_10 * -0.391663108725 + "CenteredDataForPCA".impute_11 * 0.0827981847347 + "CenteredDataForPCA".impute_12 * -0.0983507678322 + "CenteredDataForPCA".impute_13 * -0.084879988822 + "CenteredDataForPCA".impute_14 * -0.00743738561819 + "CenteredDataForPCA".impute_15 * -0.0507974147505 + "CenteredDataForPCA".impute_16 * 0.11661113927 + "CenteredDataForPCA".impute_17 * -0.588462511065 + "CenteredDataForPCA".impute_18 * 0.15867120837 + "CenteredDataForPCA".impute_19 * 0.187986618958 + "CenteredDataForPCA".impute_20 * -0.0181460540732 + "CenteredDataForPCA".impute_21 * -0.0610689034784 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.173176220121 + "CenteredDataForPCA".impute_3 * 0.0800573769399 + "CenteredDataForPCA".impute_4 * -0.0814517047696 + "CenteredDataForPCA".impute_5 * 0.0018795106155 + "CenteredDataForPCA".impute_6 * -0.365948926437 + "CenteredDataForPCA".impute_7 * -0.133616498894 + "CenteredDataForPCA".impute_8 * 0.0788515228144 + "CenteredDataForPCA".impute_9 * 0.0724271270209 + "CenteredDataForPCA".impute_10 * -0.0781325238459 + "CenteredDataForPCA".impute_11 * -0.3261770385 + "CenteredDataForPCA".impute_12 * 0.290941809444 + "CenteredDataForPCA".impute_13 * 0.245368710953 + "CenteredDataForPCA".impute_14 * -0.00219430355048 + "CenteredDataForPCA".impute_15 * -0.132622402668 + "CenteredDataForPCA".impute_16 * 0.668597644872 + "CenteredDataForPCA".impute_17 * -0.232124933712 + "CenteredDataForPCA".impute_18 * 0.0737316121369 + "CenteredDataForPCA".impute_19 * 0.0156030426154 + "CenteredDataForPCA".impute_20 * 0.0400510828203 + "CenteredDataForPCA".impute_21 * -0.102938641595 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.0621136715656 + "CenteredDataForPCA".impute_3 * -0.123566587737 + "CenteredDataForPCA".impute_4 * -0.125491312819 + "CenteredDataForPCA".impute_5 * 0.00674953239297 + "CenteredDataForPCA".impute_6 * -0.527460234841 + "CenteredDataForPCA".impute_7 * -0.416974442536 + "CenteredDataForPCA".impute_8 * 0.286528909372 + "CenteredDataForPCA".impute_9 * 0.118342406816 + "CenteredDataForPCA".impute_10 * -0.125168525765 + "CenteredDataForPCA".impute_11 * 0.362714093167 + "CenteredDataForPCA".impute_12 * -0.198274928472 + "CenteredDataForPCA".impute_13 * -0.0374248382227 + "CenteredDataForPCA".impute_14 * -0.0264569028527 + "CenteredDataForPCA".impute_15 * -0.289197006601 + "CenteredDataForPCA".impute_16 * -0.219111657379 + "CenteredDataForPCA".impute_17 * -0.0526917862766 + "CenteredDataForPCA".impute_18 * -0.0272741213096 + "CenteredDataForPCA".impute_19 * 0.248630179957 + "CenteredDataForPCA".impute_20 * 0.164456815273 + "CenteredDataForPCA".impute_21 * 0.0649883985829 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.24615164522 + "CenteredDataForPCA".impute_3 * 0.0325794697153 + "CenteredDataForPCA".impute_4 * -0.153242880036 + "CenteredDataForPCA".impute_5 * -0.00150915060648 + "CenteredDataForPCA".impute_6 * 0.142715228331 + "CenteredDataForPCA".impute_7 * 0.485987272448 + "CenteredDataForPCA".impute_8 * 0.330031174369 + "CenteredDataForPCA".impute_9 * 0.484620976345 + "CenteredDataForPCA".impute_10 * -0.00948283706733 + "CenteredDataForPCA".impute_11 * 0.440130099472 + "CenteredDataForPCA".impute_12 * 0.147802349502 + "CenteredDataForPCA".impute_13 * -0.0726810022707 + "CenteredDataForPCA".impute_14 * 0.0669538645916 + "CenteredDataForPCA".impute_15 * 0.00743252456989 + "CenteredDataForPCA".impute_16 * 0.074569575833 + "CenteredDataForPCA".impute_17 * -0.284242273484 + "CenteredDataForPCA".impute_18 * 0.00387953830446 + "CenteredDataForPCA".impute_19 * -0.0358134262558 + "CenteredDataForPCA".impute_20 * 0.0375540489729 + "CenteredDataForPCA".impute_21 * -0.000389206945216 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.0476435186073 + "CenteredDataForPCA".impute_3 * 0.110178546215 + "CenteredDataForPCA".impute_4 * -0.066564690709 + "CenteredDataForPCA".impute_5 * 0.00595873298099 + "CenteredDataForPCA".impute_6 * -0.115446444959 + "CenteredDataForPCA".impute_7 * 0.35824486904 + "CenteredDataForPCA".impute_8 * 0.235338313843 + "CenteredDataForPCA".impute_9 * -0.55700145086 + "CenteredDataForPCA".impute_10 * 0.409450064975 + "CenteredDataForPCA".impute_11 * -0.0397044781155 + "CenteredDataForPCA".impute_12 * 0.0138281286929 + "CenteredDataForPCA".impute_13 * 0.0708174237248 + "CenteredDataForPCA".impute_14 * -0.0343615305616 + "CenteredDataForPCA".impute_15 * -0.469665700362 + "CenteredDataForPCA".impute_16 * -0.166974786741 + "CenteredDataForPCA".impute_17 * -0.160012527998 + "CenteredDataForPCA".impute_18 * 0.0630566889283 + "CenteredDataForPCA".impute_19 * -0.0869506408779 + "CenteredDataForPCA".impute_20 * 0.0788791862473 + "CenteredDataForPCA".impute_21 * -0.0798788278716 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.214139392077 + "CenteredDataForPCA".impute_3 * -0.131636911021 + "CenteredDataForPCA".impute_4 * 0.0780732946074 + "CenteredDataForPCA".impute_5 * 0.00340135329379 + "CenteredDataForPCA".impute_6 * -0.0631869796514 + "CenteredDataForPCA".impute_7 * -0.148290383024 + "CenteredDataForPCA".impute_8 * -0.209187654643 + "CenteredDataForPCA".impute_9 * -0.0386655449647 + "CenteredDataForPCA".impute_10 * 0.11373659098 + "CenteredDataForPCA".impute_11 * 0.505646393574 + "CenteredDataForPCA".impute_12 * 0.0967738631133 + "CenteredDataForPCA".impute_13 * 0.415069884726 + "CenteredDataForPCA".impute_14 * -0.0511795925418 + "CenteredDataForPCA".impute_15 * 0.00420462038847 + "CenteredDataForPCA".impute_16 * 0.105467317551 + "CenteredDataForPCA".impute_17 * -0.0205271492021 + "CenteredDataForPCA".impute_18 * 0.0425968000078 + "CenteredDataForPCA".impute_19 * -0.623622908629 + "CenteredDataForPCA".impute_20 * -0.0161119940902 + "CenteredDataForPCA".impute_21 * -0.0636243897563 AS anoova_15, "CenteredDataForPCA".impute_2 * 0.235628864447 + "CenteredDataForPCA".impute_3 * -0.20674567926 + "CenteredDataForPCA".impute_4 * 0.0412445151487 + "CenteredDataForPCA".impute_5 * -0.060214313164 + "CenteredDataForPCA".impute_6 * 0.0686842671844 + "CenteredDataForPCA".impute_7 * -0.0122377793505 + "CenteredDataForPCA".impute_8 * 0.185264414672 + "CenteredDataForPCA".impute_9 * 0.0715449461413 + "CenteredDataForPCA".impute_10 * -0.367003996116 + "CenteredDataForPCA".impute_11 * -0.301004244664 + "CenteredDataForPCA".impute_12 * -0.462544543782 + "CenteredDataForPCA".impute_13 * -0.131661689238 + "CenteredDataForPCA".impute_14 * -0.00172811960692 + "CenteredDataForPCA".impute_15 * -0.228927731555 + "CenteredDataForPCA".impute_16 * -0.0312827125807 + "CenteredDataForPCA".impute_17 * -0.0965981151818 + "CenteredDataForPCA".impute_18 * -0.0236619587329 + "CenteredDataForPCA".impute_19 * -0.575508779711 + "CenteredDataForPCA".impute_20 * -0.0198364711076 + "CenteredDataForPCA".impute_21 * -0.0252456815983 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.398534586842 + "CenteredDataForPCA".impute_3 * -0.215641607331 + "CenteredDataForPCA".impute_4 * -0.0360875793304 + "CenteredDataForPCA".impute_5 * 0.0140370573749 + "CenteredDataForPCA".impute_6 * 0.0194466568291 + "CenteredDataForPCA".impute_7 * -0.0828935711451 + "CenteredDataForPCA".impute_8 * 0.0069356508279 + "CenteredDataForPCA".impute_9 * 0.21779822597 + "CenteredDataForPCA".impute_10 * 0.43882213016 + "CenteredDataForPCA".impute_11 * -0.0710746217005 + "CenteredDataForPCA".impute_12 * 0.0677688870191 + "CenteredDataForPCA".impute_13 * -0.600339907765 + "CenteredDataForPCA".impute_14 * 0.0381372207757 + "CenteredDataForPCA".impute_15 * -0.227723424972 + "CenteredDataForPCA".impute_16 * 0.297160575099 + "CenteredDataForPCA".impute_17 * 0.0600724583336 + "CenteredDataForPCA".impute_18 * -0.0400839180845 + "CenteredDataForPCA".impute_19 * -0.153354097947 + "CenteredDataForPCA".impute_20 * -0.004562998928 + "CenteredDataForPCA".impute_21 * 0.0738120303202 AS anoova_17, "CenteredDataForPCA".impute_2 * 0.255509568406 + "CenteredDataForPCA".impute_3 * -0.132645924688 + "CenteredDataForPCA".impute_4 * 0.0652509603666 + "CenteredDataForPCA".impute_5 * -0.0450304214678 + "CenteredDataForPCA".impute_6 * 0.495384003134 + "CenteredDataForPCA".impute_7 * -0.385091524512 + "CenteredDataForPCA".impute_8 * 0.0497593534763 + "CenteredDataForPCA".impute_9 * -0.129042204595 + "CenteredDataForPCA".impute_10 * -0.180740475338 + "CenteredDataForPCA".impute_11 * 0.11263452312 + "CenteredDataForPCA".impute_12 * 0.519484403029 + "CenteredDataForPCA".impute_13 * -0.0860641379392 + "CenteredDataForPCA".impute_14 * -0.0368075169829 + "CenteredDataForPCA".impute_15 * -0.405895958611 + "CenteredDataForPCA".impute_16 * -0.0734347140379 + "CenteredDataForPCA".impute_17 * 0.0276683981341 + "CenteredDataForPCA".impute_18 * -0.0192086804159 + "CenteredDataForPCA".impute_19 * 0.0495971900501 + "CenteredDataForPCA".impute_20 * 0.00709355148592 + "CenteredDataForPCA".impute_21 * -0.01540735532 AS anoova_18, "CenteredDataForPCA".impute_2 * 0.0687659406132 + "CenteredDataForPCA".impute_3 * 0.611891947217 + "CenteredDataForPCA".impute_4 * -0.010266613613 + "CenteredDataForPCA".impute_5 * -0.000691049052776 + "CenteredDataForPCA".impute_6 * 0.0692158102602 + "CenteredDataForPCA".impute_7 * -0.210771173221 + "CenteredDataForPCA".impute_8 * 0.188897818043 + "CenteredDataForPCA".impute_9 * -0.335220776359 + "CenteredDataForPCA".impute_10 * -0.103496154683 + "CenteredDataForPCA".impute_11 * 0.284616070112 + "CenteredDataForPCA".impute_12 * -0.138971257667 + "CenteredDataForPCA".impute_13 * -0.361587484808 + "CenteredDataForPCA".impute_14 * -0.0552177812277 + "CenteredDataForPCA".impute_15 * 0.214073969103 + "CenteredDataForPCA".impute_16 * 0.299786746569 + "CenteredDataForPCA".impute_17 * 0.0267600019031 + "CenteredDataForPCA".impute_18 * -0.0355497976605 + "CenteredDataForPCA".impute_19 * -0.159657037767 + "CenteredDataForPCA".impute_20 * 0.107641237149 + "CenteredDataForPCA".impute_21 * 0.0624580299707 AS anoova_19, "CenteredDataForPCA".impute_2 * 1.50416906507e-16 + "CenteredDataForPCA".impute_3 * -4.0659809699e-16 + "CenteredDataForPCA".impute_4 * 0.286382045598 + "CenteredDataForPCA".impute_5 * 0.41389157411 + "CenteredDataForPCA".impute_6 * 1.83766566449e-16 + "CenteredDataForPCA".impute_7 * -3.36156771693e-16 + "CenteredDataForPCA".impute_8 * 1.45909857942e-16 + "CenteredDataForPCA".impute_9 * 2.53636371133e-16 + "CenteredDataForPCA".impute_10 * -2.86156964334e-16 + "CenteredDataForPCA".impute_11 * 1.08093285607e-16 + "CenteredDataForPCA".impute_12 * -1.08856006513e-16 + "CenteredDataForPCA".impute_13 * -1.59781919e-16 + "CenteredDataForPCA".impute_14 * 0.48301867458 + "CenteredDataForPCA".impute_15 * 1.36988790557e-16 + "CenteredDataForPCA".impute_16 * -6.92334010456e-17 + "CenteredDataForPCA".impute_17 * 4.60238697343e-17 + "CenteredDataForPCA".impute_18 * -0.456048743973 + "CenteredDataForPCA".impute_19 * -7.31590740521e-17 + "CenteredDataForPCA".impute_20 * 0.366913579707 + "CenteredDataForPCA".impute_21 * -0.413238450527 AS anoova_20, "CenteredDataForPCA".impute_2 * 1.3864666322e-16 + "CenteredDataForPCA".impute_3 * 1.09120848905e-16 + "CenteredDataForPCA".impute_4 * 0.335815769685 + "CenteredDataForPCA".impute_5 * -0.243854178933 + "CenteredDataForPCA".impute_6 * 2.67001311532e-16 + "CenteredDataForPCA".impute_7 * 6.75669423378e-17 + "CenteredDataForPCA".impute_8 * -1.50806920932e-16 + "CenteredDataForPCA".impute_9 * 1.96691996179e-16 + "CenteredDataForPCA".impute_10 * -1.44676557371e-16 + "CenteredDataForPCA".impute_11 * 3.44422817514e-17 + "CenteredDataForPCA".impute_12 * 2.31075287299e-16 + "CenteredDataForPCA".impute_13 * 2.93487892137e-17 + "CenteredDataForPCA".impute_14 * 0.538470073509 + "CenteredDataForPCA".impute_15 * 1.34448458363e-17 + "CenteredDataForPCA".impute_16 * -3.82166094499e-17 + "CenteredDataForPCA".impute_17 * 4.83145087469e-17 + "CenteredDataForPCA".impute_18 * 0.588185118438 + "CenteredDataForPCA".impute_19 * -2.80469963984e-17 + "CenteredDataForPCA".impute_20 * 0.342574311777 + "CenteredDataForPCA".impute_21 * 0.272935881742 AS anoova_21 
FROM "CenteredDataForPCA"), 
linear_model_cte AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", 0.1606856721229208 * "ADS_ano_2_OUT".anoova_2 + -0.07488822698667 * "ADS_ano_2_OUT".anoova_3 + -0.005240325145078623 * "ADS_ano_2_OUT".anoova_4 + -0.16199078021267063 * "ADS_ano_2_OUT".anoova_5 + 0.07562478226099284 * "ADS_ano_2_OUT".anoova_6 + 0.09308094546423361 * "ADS_ano_2_OUT".anoova_7 + -0.0666101134912586 * "ADS_ano_2_OUT".anoova_8 + 0.06609043517087172 * "ADS_ano_2_OUT".anoova_9 + -0.04452531518185142 * "ADS_ano_2_OUT".anoova_10 + -0.1571837793663256 * "ADS_ano_2_OUT".anoova_11 + -0.05372586107935904 * "ADS_ano_2_OUT".anoova_12 + 0.21059280034384184 * "ADS_ano_2_OUT".anoova_13 + -0.1689454569601163 * "ADS_ano_2_OUT".anoova_14 + -0.19254440820469473 * "ADS_ano_2_OUT".anoova_15 + -0.18505393904956488 * "ADS_ano_2_OUT".anoova_16 + 0.04082750456252409 * "ADS_ano_2_OUT".anoova_17 + -0.13301182717847979 * "ADS_ano_2_OUT".anoova_18 + -0.14710951701597436 * "ADS_ano_2_OUT".anoova_19 + 6.317597628990834e-15 * "ADS_ano_2_OUT".anoova_20 + 8.07751715817214e-15 * "ADS_ano_2_OUT".anoova_21 + -0.588731034511 AS "Score_0", 0.037335708896727146 * "ADS_ano_2_OUT".anoova_2 + -0.038463257817964 * "ADS_ano_2_OUT".anoova_3 + -0.11767878298908656 * "ADS_ano_2_OUT".anoova_4 + 0.07152976220145449 * "ADS_ano_2_OUT".anoova_5 + -0.1479874527256551 * "ADS_ano_2_OUT".anoova_6 + -0.005649178739573971 * "ADS_ano_2_OUT".anoova_7 + -0.011087166727828012 * "ADS_ano_2_OUT".anoova_8 + 0.0934341014864019 * "ADS_ano_2_OUT".anoova_9 + 0.02437224911034966 * "ADS_ano_2_OUT".anoova_10 + 0.10172815684364601 * "ADS_ano_2_OUT".anoova_11 + 0.03578566043228747 * "ADS_ano_2_OUT".anoova_12 + -0.06994043644161049 * "ADS_ano_2_OUT".anoova_13 + -0.17912519338424565 * "ADS_ano_2_OUT".anoova_14 + -0.061099427010108155 * "ADS_ano_2_OUT".anoova_15 + 0.3637953123855326 * "ADS_ano_2_OUT".anoova_16 + -0.08191268724171351 * "ADS_ano_2_OUT".anoova_17 + 0.07363286297122061 * "ADS_ano_2_OUT".anoova_18 + -0.24783290223263058 * "ADS_ano_2_OUT".anoova_19 + -3.546966170744054e-15 * "ADS_ano_2_OUT".anoova_20 + -5.801733266217236e-15 * "ADS_ano_2_OUT".anoova_21 + -0.556646472443 AS "Score_1", -0.5469127768801969 * "ADS_ano_2_OUT".anoova_2 + 0.9869374232259593 * "ADS_ano_2_OUT".anoova_3 + 0.5560623982270272 * "ADS_ano_2_OUT".anoova_4 + -0.2715715479644458 * "ADS_ano_2_OUT".anoova_5 + -0.16634758704471592 * "ADS_ano_2_OUT".anoova_6 + 0.018778336146568944 * "ADS_ano_2_OUT".anoova_7 + 0.2226699427613248 * "ADS_ano_2_OUT".anoova_8 + -0.1001200903558446 * "ADS_ano_2_OUT".anoova_9 + -0.01184580647787116 * "ADS_ano_2_OUT".anoova_10 + 0.20921444822263047 * "ADS_ano_2_OUT".anoova_11 + 0.06940991123578417 * "ADS_ano_2_OUT".anoova_12 + -0.2543086214160685 * "ADS_ano_2_OUT".anoova_13 + -0.12551240423121982 * "ADS_ano_2_OUT".anoova_14 + 0.18743475640855567 * "ADS_ano_2_OUT".anoova_15 + 3.869297134577389e-05 * "ADS_ano_2_OUT".anoova_16 + -0.2767936239251723 * "ADS_ano_2_OUT".anoova_17 + -0.20958881143914063 * "ADS_ano_2_OUT".anoova_18 + -0.07841755398654685 * "ADS_ano_2_OUT".anoova_19 + 1.6545424448207324e-15 * "ADS_ano_2_OUT".anoova_20 + 1.2390023104079699e-15 * "ADS_ano_2_OUT".anoova_21 + -1.75040946133 AS "Score_2", -0.21036283838179098 * "ADS_ano_2_OUT".anoova_2 + -0.4477028518128153 * "ADS_ano_2_OUT".anoova_3 + -0.04595047030454237 * "ADS_ano_2_OUT".anoova_4 + 0.3409970096976964 * "ADS_ano_2_OUT".anoova_5 + 0.11679308574955187 * "ADS_ano_2_OUT".anoova_6 + -0.017281076975305253 * "ADS_ano_2_OUT".anoova_7 + 0.07440665520775039 * "ADS_ano_2_OUT".anoova_8 + -0.11938375506826703 * "ADS_ano_2_OUT".anoova_9 + 0.06122701734895358 * "ADS_ano_2_OUT".anoova_10 + 0.13337703650082705 * "ADS_ano_2_OUT".anoova_11 + 0.13401571957414302 * "ADS_ano_2_OUT".anoova_12 + -0.18453692482359876 * "ADS_ano_2_OUT".anoova_13 + 0.14769342399603094 * "ADS_ano_2_OUT".anoova_14 + 0.20841564315741096 * "ADS_ano_2_OUT".anoova_15 + -0.31146590264005997 * "ADS_ano_2_OUT".anoova_16 + 0.24018407763698568 * "ADS_ano_2_OUT".anoova_17 + 0.2733816780346103 * "ADS_ano_2_OUT".anoova_18 + 0.13337780624469797 * "ADS_ano_2_OUT".anoova_19 + 1.3677471383479838e-15 * "ADS_ano_2_OUT".anoova_20 + -1.3841755282883732e-15 * "ADS_ano_2_OUT".anoova_21 + -0.939987210607 AS "Score_3" 
FROM "ADS_ano_2_OUT"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte