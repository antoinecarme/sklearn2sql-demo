-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.5245761578 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.465355913826 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.451277094854 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.426337194055 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.473785494936 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.50911530121 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.445881361745 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.492640403562 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.510329367251 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.502636401808 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.5245761578 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.465355913826 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.451277094854 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.426337194055 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.473785494936 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.50911530121 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.445881361745 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.492640403562 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.510329367251 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.502636401808 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.296288249247 + "CenteredDataForPCA".impute_3 * 0.491041426948 + "CenteredDataForPCA".impute_4 * -0.338636262286 + "CenteredDataForPCA".impute_5 * 0.120145920739 + "CenteredDataForPCA".impute_6 * 0.24043512043 + "CenteredDataForPCA".impute_7 * 0.600788905403 + "CenteredDataForPCA".impute_8 * 0.0719336516568 + "CenteredDataForPCA".impute_9 * -0.137842858258 + "CenteredDataForPCA".impute_10 * 0.267473932875 + "CenteredDataForPCA".impute_11 * -0.165856158768 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.255997446985 + "CenteredDataForPCA".impute_3 * 0.0993639563242 + "CenteredDataForPCA".impute_4 * 0.0748548838735 + "CenteredDataForPCA".impute_5 * -0.572371327835 + "CenteredDataForPCA".impute_6 * -0.401757096237 + "CenteredDataForPCA".impute_7 * 0.0984406818125 + "CenteredDataForPCA".impute_8 * -0.175528893055 + "CenteredDataForPCA".impute_9 * -0.536917142356 + "CenteredDataForPCA".impute_10 * 0.302449164963 + "CenteredDataForPCA".impute_11 * -0.0985630818346 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.657869078364 + "CenteredDataForPCA".impute_3 * 0.00360571923485 + "CenteredDataForPCA".impute_4 * -0.17722914257 + "CenteredDataForPCA".impute_5 * 0.157980909759 + "CenteredDataForPCA".impute_6 * 0.130038563889 + "CenteredDataForPCA".impute_7 * 0.0645737304693 + "CenteredDataForPCA".impute_8 * 0.609731850584 + "CenteredDataForPCA".impute_9 * -0.162765092989 + "CenteredDataForPCA".impute_10 * 0.0950315723312 + "CenteredDataForPCA".impute_11 * 0.287142713784 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.243854049325 + "CenteredDataForPCA".impute_3 * 0.464189861899 + "CenteredDataForPCA".impute_4 * 0.740549114215 + "CenteredDataForPCA".impute_5 * 0.320510203197 + "CenteredDataForPCA".impute_6 * 0.00614144670606 + "CenteredDataForPCA".impute_7 * 0.00592778970318 + "CenteredDataForPCA".impute_8 * -0.0752555770113 + "CenteredDataForPCA".impute_9 * 0.118265378215 + "CenteredDataForPCA".impute_10 * 0.195847876976 + "CenteredDataForPCA".impute_11 * -0.12587233727 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.0172295208492 + "CenteredDataForPCA".impute_3 * -0.31935728482 + "CenteredDataForPCA".impute_4 * -0.0470967440274 + "CenteredDataForPCA".impute_5 * 0.59906222155 + "CenteredDataForPCA".impute_6 * -0.41941644683 + "CenteredDataForPCA".impute_7 * 0.274850485149 + "CenteredDataForPCA".impute_8 * -0.323696525445 + "CenteredDataForPCA".impute_9 * -0.1977078644 + "CenteredDataForPCA".impute_10 * 0.185901103832 + "CenteredDataForPCA".impute_11 * 0.326711514892 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.0450153073841 + "CenteredDataForPCA".impute_3 * 0.175193409498 + "CenteredDataForPCA".impute_4 * -0.362095345086 + "CenteredDataForPCA".impute_5 * 0.140894689818 + "CenteredDataForPCA".impute_6 * -0.567084855163 + "CenteredDataForPCA".impute_7 * -0.289924113683 + "CenteredDataForPCA".impute_8 * 0.190078081529 + "CenteredDataForPCA".impute_9 * 0.395232951388 + "CenteredDataForPCA".impute_10 * 0.295719360564 + "CenteredDataForPCA".impute_11 * -0.361782546585 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.146089044418 + "CenteredDataForPCA".impute_3 * 0.345363403275 + "CenteredDataForPCA".impute_4 * -0.0395347236434 + "CenteredDataForPCA".impute_5 * -0.186212639681 + "CenteredDataForPCA".impute_6 * -0.385646942785 + "CenteredDataForPCA".impute_7 * 0.380189949954 + "CenteredDataForPCA".impute_8 * -0.0589384977748 + "CenteredDataForPCA".impute_9 * 0.329814097989 + "CenteredDataForPCA".impute_10 * -0.558507432885 + "CenteredDataForPCA".impute_11 * 0.325106703043 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.302438846897 + "CenteredDataForPCA".impute_3 * -0.194740145781 + "CenteredDataForPCA".impute_4 * -0.04561874315 + "CenteredDataForPCA".impute_5 * 0.222634675246 + "CenteredDataForPCA".impute_6 * -0.0174689586447 + "CenteredDataForPCA".impute_7 * 0.221612373595 + "CenteredDataForPCA".impute_8 * -0.0609881117506 + "CenteredDataForPCA".impute_9 * -0.197997155332 + "CenteredDataForPCA".impute_10 * -0.47276504759 + "CenteredDataForPCA".impute_11 * -0.709304820931 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.429466855117 + "CenteredDataForPCA".impute_3 * -0.23548641545 + "CenteredDataForPCA".impute_4 * 0.393832229191 + "CenteredDataForPCA".impute_5 * -0.0542468995741 + "CenteredDataForPCA".impute_6 * -0.313289951963 + "CenteredDataForPCA".impute_7 * 0.242250613156 + "CenteredDataForPCA".impute_8 * 0.655397955842 + "CenteredDataForPCA".impute_9 * -0.0855112702311 + "CenteredDataForPCA".impute_10 * -0.0505390421528 + "CenteredDataForPCA".impute_11 * -0.0762168709395 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.234191758846 + "CenteredDataForPCA".impute_3 * 0.433802523554 + "CenteredDataForPCA".impute_4 * -0.0884309764964 + "CenteredDataForPCA".impute_5 * 0.253693381431 + "CenteredDataForPCA".impute_6 * -0.13841868081 + "CenteredDataForPCA".impute_7 * -0.461753868765 + "CenteredDataForPCA".impute_8 * 0.0944983147656 + "CenteredDataForPCA".impute_9 * -0.549226982126 + "CenteredDataForPCA".impute_10 * -0.359991817934 + "CenteredDataForPCA".impute_11 * 0.110627918612 AS anoova_11 
FROM "CenteredDataForPCA"), 
"IL" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", "ADS_ano_2_OUT".anoova_2 AS anoova_2, "ADS_ano_2_OUT".anoova_3 AS anoova_3, "ADS_ano_2_OUT".anoova_4 AS anoova_4, "ADS_ano_2_OUT".anoova_5 AS anoova_5, "ADS_ano_2_OUT".anoova_6 AS anoova_6, "ADS_ano_2_OUT".anoova_7 AS anoova_7, "ADS_ano_2_OUT".anoova_8 AS anoova_8, "ADS_ano_2_OUT".anoova_9 AS anoova_9, "ADS_ano_2_OUT".anoova_10 AS anoova_10, "ADS_ano_2_OUT".anoova_11 AS anoova_11 
FROM "ADS_ano_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.29637887493 * "IL".anoova_2 + 0.787334640584 * "IL".anoova_3 + -0.767831475454 * "IL".anoova_4 + -0.646120240822 * "IL".anoova_5 + 0.149594211566 * "IL".anoova_6 + -0.241688120369 * "IL".anoova_7 + -0.387329300858 * "IL".anoova_8 + 0.421024904264 * "IL".anoova_9 + -0.586463118612 * "IL".anoova_10 + 0.798682674282 * "IL".anoova_11 + 0.0518696616425 AS "NEUR_1_1", 0.229823020941 * "IL".anoova_2 + -0.10628164197 * "IL".anoova_3 + 0.359757053302 * "IL".anoova_4 + 0.146045521432 * "IL".anoova_5 + 0.211694138684 * "IL".anoova_6 + -0.142602529179 * "IL".anoova_7 + -0.166423737679 * "IL".anoova_8 + -0.266532261539 * "IL".anoova_9 + -0.137823267972 * "IL".anoova_10 + 0.0645738868543 * "IL".anoova_11 + -0.115203927785 AS "NEUR_1_2", 0.148955388904 * "IL".anoova_2 + 0.308724059474 * "IL".anoova_3 + 0.29304102717 * "IL".anoova_4 + -0.384673614849 * "IL".anoova_5 + -0.528169517165 * "IL".anoova_6 + 0.218341908452 * "IL".anoova_7 + 0.0510556860781 * "IL".anoova_8 + -0.0333466601771 * "IL".anoova_9 + 0.348998554849 * "IL".anoova_10 + 0.246162581008 * "IL".anoova_11 + -0.530685688177 AS "NEUR_1_3", 0.133946879377 * "IL".anoova_2 + -0.148645398283 * "IL".anoova_3 + 0.648597962421 * "IL".anoova_4 + 0.749187615179 * "IL".anoova_5 + 0.0610605294406 * "IL".anoova_6 + -0.367871090832 * "IL".anoova_7 + 0.0536029087358 * "IL".anoova_8 + -0.147934327836 * "IL".anoova_9 + -0.688814835011 * "IL".anoova_10 + -0.567144288669 * "IL".anoova_11 + 0.440206331607 AS "NEUR_1_4", -0.0715027076841 * "IL".anoova_2 + 0.0712907473247 * "IL".anoova_3 + 0.41765029165 * "IL".anoova_4 + 0.0128494392843 * "IL".anoova_5 + 0.0652134695459 * "IL".anoova_6 + 0.0598727628653 * "IL".anoova_7 + 0.424655790108 * "IL".anoova_8 + -0.246046669772 * "IL".anoova_9 + 0.25707217541 * "IL".anoova_10 + -0.195497473411 * "IL".anoova_11 + -0.0483847303796 AS "NEUR_1_5", 0.279072381662 * "IL".anoova_2 + 0.407417427677 * "IL".anoova_3 + 0.37871155921 * "IL".anoova_4 + -0.0762176766063 * "IL".anoova_5 + 0.137419263604 * "IL".anoova_6 + 0.180836091102 * "IL".anoova_7 + -0.532014089918 * "IL".anoova_8 + -0.538129661619 * "IL".anoova_9 + -0.488539914264 * "IL".anoova_10 + -0.487910956681 * "IL".anoova_11 + -0.243991194926 AS "NEUR_1_6", 0.0777786295388 * "IL".anoova_2 + -0.722270866372 * "IL".anoova_3 + 0.225072642591 * "IL".anoova_4 + -0.0370009917429 * "IL".anoova_5 + 0.749081160397 * "IL".anoova_6 + -0.577459238164 * "IL".anoova_7 + -0.546790028153 * "IL".anoova_8 + 0.394459892023 * "IL".anoova_9 + 0.673039441319 * "IL".anoova_10 + -0.465811207802 * "IL".anoova_11 + 0.288764459461 AS "NEUR_1_7", 0.690323047251 * "IL".anoova_2 + -0.755891935344 * "IL".anoova_3 + 0.575200634256 * "IL".anoova_4 + 0.562745434773 * "IL".anoova_5 + 0.460142799594 * "IL".anoova_6 + -0.67324180598 * "IL".anoova_7 + -0.651873207093 * "IL".anoova_8 + -0.695050401075 * "IL".anoova_9 + -0.282870809113 * "IL".anoova_10 + -0.707268705966 * "IL".anoova_11 + -0.190889150508 AS "NEUR_1_8" 
FROM "IL"), 
"HL_1" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3", CASE WHEN ("HL_BA_1"."NEUR_1_4" >= 0.0) THEN "HL_BA_1"."NEUR_1_4" ELSE 0.0 END AS "NEUR_1_4", CASE WHEN ("HL_BA_1"."NEUR_1_5" >= 0.0) THEN "HL_BA_1"."NEUR_1_5" ELSE 0.0 END AS "NEUR_1_5", CASE WHEN ("HL_BA_1"."NEUR_1_6" >= 0.0) THEN "HL_BA_1"."NEUR_1_6" ELSE 0.0 END AS "NEUR_1_6", CASE WHEN ("HL_BA_1"."NEUR_1_7" >= 0.0) THEN "HL_BA_1"."NEUR_1_7" ELSE 0.0 END AS "NEUR_1_7", CASE WHEN ("HL_BA_1"."NEUR_1_8" >= 0.0) THEN "HL_BA_1"."NEUR_1_8" ELSE 0.0 END AS "NEUR_1_8" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1"."KEY" AS "KEY", -0.149631258132 * "HL_1"."NEUR_1_1" + 0.112794931045 * "HL_1"."NEUR_1_2" + 0.195627398457 * "HL_1"."NEUR_1_3" + -0.261901431942 * "HL_1"."NEUR_1_4" + -0.0515053952579 * "HL_1"."NEUR_1_5" + 0.110320693338 * "HL_1"."NEUR_1_6" + 0.0093595331081 * "HL_1"."NEUR_1_7" + -0.505832279021 * "HL_1"."NEUR_1_8" + 0.309808685631 AS "NEUR_2_1", 0.243847373306 * "HL_1"."NEUR_1_1" + -0.307933135326 * "HL_1"."NEUR_1_2" + -0.244701501357 * "HL_1"."NEUR_1_3" + -0.0257488957156 * "HL_1"."NEUR_1_4" + 0.0551462615567 * "HL_1"."NEUR_1_5" + 0.435502194015 * "HL_1"."NEUR_1_6" + -0.177067693824 * "HL_1"."NEUR_1_7" + -0.598036992532 * "HL_1"."NEUR_1_8" + -0.0129950405322 AS "NEUR_2_2", -0.302374748098 * "HL_1"."NEUR_1_1" + 0.197933488909 * "HL_1"."NEUR_1_2" + 0.320737219234 * "HL_1"."NEUR_1_3" + -0.625230655018 * "HL_1"."NEUR_1_4" + 0.0919764516243 * "HL_1"."NEUR_1_5" + -0.426519378315 * "HL_1"."NEUR_1_6" + 0.117087504084 * "HL_1"."NEUR_1_7" + 0.125878199737 * "HL_1"."NEUR_1_8" + -0.0494527011083 AS "NEUR_2_3", 0.172323037906 * "HL_1"."NEUR_1_1" + 0.477918677225 * "HL_1"."NEUR_1_2" + -0.135648847062 * "HL_1"."NEUR_1_3" + -0.239241520846 * "HL_1"."NEUR_1_4" + -0.119964849484 * "HL_1"."NEUR_1_5" + 0.380464062969 * "HL_1"."NEUR_1_6" + 0.386102859029 * "HL_1"."NEUR_1_7" + -0.288030855071 * "HL_1"."NEUR_1_8" + 0.060620000977 AS "NEUR_2_4", -0.563889642913 * "HL_1"."NEUR_1_1" + -0.362243148631 * "HL_1"."NEUR_1_2" + 0.394598032032 * "HL_1"."NEUR_1_3" + 0.00447265714503 * "HL_1"."NEUR_1_4" + 0.30992508286 * "HL_1"."NEUR_1_5" + -0.473619721955 * "HL_1"."NEUR_1_6" + 0.321373339152 * "HL_1"."NEUR_1_7" + -0.383344316302 * "HL_1"."NEUR_1_8" + 0.102715168046 AS "NEUR_2_5", 0.563942000234 * "HL_1"."NEUR_1_1" + 0.379974633732 * "HL_1"."NEUR_1_2" + 0.00942426058567 * "HL_1"."NEUR_1_3" + 0.103058003958 * "HL_1"."NEUR_1_4" + 0.183811937291 * "HL_1"."NEUR_1_5" + 0.448133286238 * "HL_1"."NEUR_1_6" + 0.70009316861 * "HL_1"."NEUR_1_7" + 0.796489791358 * "HL_1"."NEUR_1_8" + 0.112521740026 AS "NEUR_2_6", -0.093540173778 * "HL_1"."NEUR_1_1" + 0.0605180011916 * "HL_1"."NEUR_1_2" + 0.255416406881 * "HL_1"."NEUR_1_3" + 0.082970282821 * "HL_1"."NEUR_1_4" + -0.10006856133 * "HL_1"."NEUR_1_5" + -0.249836016446 * "HL_1"."NEUR_1_6" + -0.563006124692 * "HL_1"."NEUR_1_7" + 0.176456849979 * "HL_1"."NEUR_1_8" + -0.155222325638 AS "NEUR_2_7", -0.191174577292 * "HL_1"."NEUR_1_1" + 0.0671864641365 * "HL_1"."NEUR_1_2" + 0.0785310886575 * "HL_1"."NEUR_1_3" + -0.0900250971519 * "HL_1"."NEUR_1_4" + 0.417329268391 * "HL_1"."NEUR_1_5" + 0.369224315072 * "HL_1"."NEUR_1_6" + -0.165317267305 * "HL_1"."NEUR_1_7" + -0.34365737477 * "HL_1"."NEUR_1_8" + -0.329843868913 AS "NEUR_2_8", 0.0113167794147 * "HL_1"."NEUR_1_1" + -0.153083995114 * "HL_1"."NEUR_1_2" + 0.106167216876 * "HL_1"."NEUR_1_3" + -0.238174411735 * "HL_1"."NEUR_1_4" + 0.180914943711 * "HL_1"."NEUR_1_5" + 0.18199838642 * "HL_1"."NEUR_1_6" + 0.110321479881 * "HL_1"."NEUR_1_7" + -0.209235838489 * "HL_1"."NEUR_1_8" + -0.343758338764 AS "NEUR_2_9", -0.668689433907 * "HL_1"."NEUR_1_1" + 0.418222178785 * "HL_1"."NEUR_1_2" + -0.0214649671519 * "HL_1"."NEUR_1_3" + -0.376799150995 * "HL_1"."NEUR_1_4" + 0.0918040033141 * "HL_1"."NEUR_1_5" + -0.0401275761697 * "HL_1"."NEUR_1_6" + -0.503339370418 * "HL_1"."NEUR_1_7" + -0.00485565738166 * "HL_1"."NEUR_1_8" + 0.340891379141 AS "NEUR_2_10", 0.640076639369 * "HL_1"."NEUR_1_1" + 0.107189690826 * "HL_1"."NEUR_1_2" + 0.522728246482 * "HL_1"."NEUR_1_3" + 0.324427807352 * "HL_1"."NEUR_1_4" + -0.254517799455 * "HL_1"."NEUR_1_5" + 0.105201120944 * "HL_1"."NEUR_1_6" + 0.29326977745 * "HL_1"."NEUR_1_7" + 0.378192282809 * "HL_1"."NEUR_1_8" + 0.48699101323 AS "NEUR_2_11", -0.213402444517 * "HL_1"."NEUR_1_1" + 0.34070248611 * "HL_1"."NEUR_1_2" + 0.135149819881 * "HL_1"."NEUR_1_3" + 0.0656415125782 * "HL_1"."NEUR_1_4" + 0.418525968321 * "HL_1"."NEUR_1_5" + -0.515584869329 * "HL_1"."NEUR_1_6" + -0.528903194437 * "HL_1"."NEUR_1_7" + -0.325553317515 * "HL_1"."NEUR_1_8" + -0.0470946121974 AS "NEUR_2_12" 
FROM "HL_1"), 
"HL_2" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5", CASE WHEN ("HL_BA_2"."NEUR_2_6" >= 0.0) THEN "HL_BA_2"."NEUR_2_6" ELSE 0.0 END AS "NEUR_2_6", CASE WHEN ("HL_BA_2"."NEUR_2_7" >= 0.0) THEN "HL_BA_2"."NEUR_2_7" ELSE 0.0 END AS "NEUR_2_7", CASE WHEN ("HL_BA_2"."NEUR_2_8" >= 0.0) THEN "HL_BA_2"."NEUR_2_8" ELSE 0.0 END AS "NEUR_2_8", CASE WHEN ("HL_BA_2"."NEUR_2_9" >= 0.0) THEN "HL_BA_2"."NEUR_2_9" ELSE 0.0 END AS "NEUR_2_9", CASE WHEN ("HL_BA_2"."NEUR_2_10" >= 0.0) THEN "HL_BA_2"."NEUR_2_10" ELSE 0.0 END AS "NEUR_2_10", CASE WHEN ("HL_BA_2"."NEUR_2_11" >= 0.0) THEN "HL_BA_2"."NEUR_2_11" ELSE 0.0 END AS "NEUR_2_11", CASE WHEN ("HL_BA_2"."NEUR_2_12" >= 0.0) THEN "HL_BA_2"."NEUR_2_12" ELSE 0.0 END AS "NEUR_2_12" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2"."KEY" AS "KEY", -0.221545975668 * "HL_2"."NEUR_2_1" + -0.215185595471 * "HL_2"."NEUR_2_2" + -0.534313053592 * "HL_2"."NEUR_2_3" + 0.0687902242745 * "HL_2"."NEUR_2_4" + -0.100967594847 * "HL_2"."NEUR_2_5" + 0.618753189825 * "HL_2"."NEUR_2_6" + -0.130179951479 * "HL_2"."NEUR_2_7" + -0.424534972181 * "HL_2"."NEUR_2_8" + -0.470610503426 * "HL_2"."NEUR_2_9" + -0.471996507946 * "HL_2"."NEUR_2_10" + 0.494766651375 * "HL_2"."NEUR_2_11" + 0.0264000083816 * "HL_2"."NEUR_2_12" + 0.245304975939 AS "NEUR_3_1" 
FROM "HL_2"), 
"OL" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL"."KEY" AS "KEY", "OL"."NEUR_3_1" AS "Estimator" 
FROM "OL"