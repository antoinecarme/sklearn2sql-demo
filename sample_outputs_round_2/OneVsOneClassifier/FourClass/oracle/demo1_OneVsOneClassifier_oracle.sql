-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= 0.6360753774642944) THEN CASE WHEN ("ADS"."Feature_3" <= 0.0008814800530672073) THEN CASE WHEN ("ADS"."Feature_14" <= -0.7656349539756775) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.5360751152038574) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.6360753774642944 AS threshold, 51 AS count, 0 AS depth, 0.5294117647058824 AS "Proba_0", -0.63598876672 AS "LogProba_0", 0.47058823529411764 AS "Proba_1", -0.753771802376 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.0008814800530672073 AS threshold, 39 AS count, 1 AS depth, 0.38461538461538464 AS "Proba_0", -0.955511445027 AS "LogProba_0", 0.6153846153846154 AS "Proba_1", -0.485507815782 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_14' AS feature, -0.7656349539756775 AS threshold, 21 AS count, 2 AS depth, 0.09523809523809523 AS "Proba_0", -2.35137525716 AS "LogProba_0", 0.9047619047619048 AS "Proba_1", -0.100083458557 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.05 AS "Proba_0", -2.99573227355 AS "LogProba_0", 0.95 AS "Proba_1", -0.0512932943876 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.5360751152038574 AS threshold, 18 AS count, 2 AS depth, 0.7222222222222222 AS "Proba_0", -0.325422400435 AS "LogProba_0", 0.2777777777777778 AS "Proba_1", -1.28093384546 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.9230769230769231 AS "Proba_0", -0.0800427076735 AS "LogProba_0", 0.07692307692307693 AS "Proba_1", -2.56494935746 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.8 AS "Proba_1", -0.223143551314 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"OVO_Decision_0_1" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Decision" AS dec_0_1 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= -0.7673855423927307) THEN 1 ELSE CASE WHEN ("ADS"."Feature_19" <= -0.43647289276123047) THEN CASE WHEN ("ADS"."Feature_16" <= 2.113828182220459) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_17" <= -1.7580759525299072) THEN 7 ELSE 8 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.7673855423927307 AS threshold, 51 AS count, 0 AS depth, 0.5294117647058824 AS "Proba_0", -0.63598876672 AS "LogProba_0", 0.47058823529411764 AS "Proba_1", -0.753771802376 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 1 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_19' AS feature, -0.43647289276123047 AS threshold, 40 AS count, 1 AS depth, 0.4 AS "Proba_0", -0.916290731874 AS "LogProba_0", 0.6 AS "Proba_1", -0.510825623766 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_16' AS feature, 2.113828182220459 AS threshold, 9 AS count, 2 AS depth, 0.8888888888888888 AS "Proba_0", -0.117783035656 AS "LogProba_0", 0.1111111111111111 AS "Proba_1", -2.19722457734 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_17' AS feature, -1.7580759525299072 AS threshold, 31 AS count, 2 AS depth, 0.25806451612903225 AS "Proba_0", -1.35454566281 AS "LogProba_0", 0.7419354838709677 AS "Proba_1", -0.298492988556 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, 0.17857142857142858 AS "Proba_0", -1.72276659774 AS "LogProba_0", 0.8214285714285714 AS "Proba_1", -0.196710294246 AS "LogProba_1", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"OVO_Decision_0_2" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Decision" AS dec_0_2 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= -0.28142812848091125) THEN CASE WHEN ("ADS"."Feature_12" <= -1.2991803884506226) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS"."Feature_15" <= 0.15356719493865967) THEN CASE WHEN ("ADS"."Feature_12" <= -1.7171541452407837) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_11" <= -0.6993693709373474) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.28142812848091125 AS threshold, 52 AS count, 0 AS depth, 0.5192307692307693 AS "Proba_0", -0.655406852577 AS "LogProba_0", 0.4807692307692308 AS "Proba_1", -0.732367893713 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, -1.2991803884506226 AS threshold, 15 AS count, 1 AS depth, 0.9333333333333333 AS "Proba_0", -0.068992871487 AS "LogProba_0", 0.06666666666666667 AS "Proba_1", -2.7080502011 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 2 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_15' AS feature, 0.15356719493865967 AS threshold, 37 AS count, 1 AS depth, 0.35135135135135137 AS "Proba_0", -1.04596855518 AS "LogProba_0", 0.6486486486486487 AS "Proba_1", -0.432864082296 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_12' AS feature, -1.7171541452407837 AS threshold, 20 AS count, 2 AS depth, 0.1 AS "Proba_0", -2.30258509299 AS "LogProba_0", 0.9 AS "Proba_1", -0.105360515658 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.05263157894736842 AS "Proba_0", -2.94443897917 AS "LogProba_0", 0.9473684210526315 AS "Proba_1", -0.0540672212703 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_11' AS feature, -0.6993693709373474 AS threshold, 17 AS count, 2 AS depth, 0.6470588235294118 AS "Proba_0", -0.435318071258 AS "LogProba_0", 0.35294117647058826 AS "Proba_1", -1.04145387483 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.8461538461538461 AS "Proba_0", -0.167054084663 AS "LogProba_0", 0.15384615384615385 AS "Proba_1", -1.8718021769 AS "LogProba_1", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"OVO_Decision_0_3" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Decision" AS dec_0_3 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= 0.5555713176727295) THEN CASE WHEN ("ADS"."Feature_8" <= 0.4315122365951538) THEN CASE WHEN ("ADS"."Feature_10" <= -1.054102897644043) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_7" <= -1.0988093614578247) THEN 7 ELSE 8 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5555713176727295 AS threshold, 48 AS count, 0 AS depth, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.4315122365951538 AS threshold, 33 AS count, 1 AS depth, 0.6666666666666666 AS "Proba_0", -0.405465108108 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_10' AS feature, -1.054102897644043 AS threshold, 24 AS count, 2 AS depth, 0.9166666666666666 AS "Proba_0", -0.0870113769896 AS "LogProba_0", 0.08333333333333333 AS "Proba_1", -2.48490664979 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 2 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_7' AS feature, -1.0988093614578247 AS threshold, 15 AS count, 1 AS depth, 0.13333333333333333 AS "Proba_0", -2.01490302054 AS "LogProba_0", 0.8666666666666667 AS "Proba_1", -0.143100843641 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 2 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"OVO_Decision_1_2" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Decision" AS dec_1_2 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= -0.19931775331497192) THEN CASE WHEN ("ADS"."Feature_8" <= 0.35841619968414307) THEN CASE WHEN ("ADS"."Feature_0" <= -1.9229378700256348) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_7" <= -0.7577391862869263) THEN 7 ELSE CASE WHEN ("ADS"."Feature_17" <= -1.0107471942901611) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -0.19931775331497192 AS threshold, 49 AS count, 0 AS depth, 0.4897959183673469 AS "Proba_0", -0.713766467763 AS "LogProba_0", 0.5102040816326531 AS "Proba_1", -0.672944473242 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.35841619968414307 AS threshold, 23 AS count, 1 AS depth, 0.782608695652174 AS "Proba_0", -0.245122458033 AS "LogProba_0", 0.21739130434782608 AS "Proba_1", -1.5260563035 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -1.9229378700256348 AS threshold, 19 AS count, 2 AS depth, 0.9473684210526315 AS "Proba_0", -0.0540672212703 AS "LogProba_0", 0.05263157894736842 AS "Proba_1", -2.94443897917 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_7' AS feature, -0.7577391862869263 AS threshold, 26 AS count, 1 AS depth, 0.23076923076923078 AS "Proba_0", -1.46633706879 AS "LogProba_0", 0.7692307692307693 AS "Proba_1", -0.262364264467 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_17' AS feature, -1.0107471942901611 AS threshold, 21 AS count, 2 AS depth, 0.047619047619047616 AS "Proba_0", -3.04452243772 AS "LogProba_0", 0.9523809523809523 AS "Proba_1", -0.0487901641694 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"OVO_Decision_1_3" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Decision" AS dec_1_3 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= -0.3758711814880371) THEN CASE WHEN ("ADS"."Feature_18" <= 0.9424055814743042) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS"."Feature_15" <= -1.0036766529083252) THEN CASE WHEN ("ADS"."Feature_17" <= 0.48372146487236023) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_4" <= 1.22385835647583) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_19' AS feature, -0.3758711814880371 AS threshold, 49 AS count, 0 AS depth, 0.4897959183673469 AS "Proba_0", -0.713766467763 AS "LogProba_0", 0.5102040816326531 AS "Proba_1", -0.672944473242 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_18' AS feature, 0.9424055814743042 AS threshold, 11 AS count, 1 AS depth, 0.09090909090909091 AS "Proba_0", -2.3978952728 AS "LogProba_0", 0.9090909090909091 AS "Proba_1", -0.0953101798043 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_15' AS feature, -1.0036766529083252 AS threshold, 38 AS count, 1 AS depth, 0.6052631578947368 AS "Proba_0", -0.502091943797 AS "LogProba_0", 0.39473684210526316 AS "Proba_1", -0.929535958624 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_17' AS feature, 0.48372146487236023 AS threshold, 7 AS count, 2 AS depth, 0.14285714285714285 AS "Proba_0", -1.94591014906 AS "LogProba_0", 0.8571428571428571 AS "Proba_1", -0.154150679827 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 1.22385835647583 AS threshold, 31 AS count, 2 AS depth, 0.7096774193548387 AS "Proba_0", -0.342944751127 AS "LogProba_0", 0.2903225806451613 AS "Proba_1", -1.23676262715 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 0.9 AS "Proba_0", -0.105360515658 AS "LogProba_0", 0.1 AS "Proba_1", -2.30258509299 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.36363636363636365 AS "Proba_0", -1.01160091168 AS "LogProba_0", 0.6363636363636364 AS "Proba_1", -0.451985123743 AS "LogProba_1", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"OVO_Decision_2_3" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Decision" AS dec_2_3 
FROM "DT_Output_5"), 
"OVO_Decisions_CTE" AS 
(SELECT "OVO_Decision_0_1".join_key_0 AS join_key_0, "OVO_Decision_0_1".dec_0_1 AS dec_0_1, "OVO_Decision_0_2".join_key_1 AS join_key_1, "OVO_Decision_0_2".dec_0_2 AS dec_0_2, "OVO_Decision_0_3".join_key_2 AS join_key_2, "OVO_Decision_0_3".dec_0_3 AS dec_0_3, "OVO_Decision_1_2".join_key_3 AS join_key_3, "OVO_Decision_1_2".dec_1_2 AS dec_1_2, "OVO_Decision_1_3".join_key_4 AS join_key_4, "OVO_Decision_1_3".dec_1_3 AS dec_1_3, "OVO_Decision_2_3".join_key_5 AS join_key_5, "OVO_Decision_2_3".dec_2_3 AS dec_2_3 
FROM "OVO_Decision_0_1" LEFT OUTER JOIN "OVO_Decision_0_2" ON "OVO_Decision_0_1".join_key_0 = "OVO_Decision_0_2".join_key_1 LEFT OUTER JOIN "OVO_Decision_0_3" ON "OVO_Decision_0_3".join_key_2 = "OVO_Decision_0_2".join_key_1 LEFT OUTER JOIN "OVO_Decision_1_2" ON "OVO_Decision_1_2".join_key_3 = "OVO_Decision_0_3".join_key_2 LEFT OUTER JOIN "OVO_Decision_1_3" ON "OVO_Decision_1_3".join_key_4 = "OVO_Decision_1_2".join_key_3 LEFT OUTER JOIN "OVO_Decision_2_3" ON "OVO_Decision_2_3".join_key_5 = "OVO_Decision_1_3".join_key_4), 
"OVO_Scores" AS 
(SELECT "OVO_Decisions_CTE".join_key_0 AS "KEY", (1.0 - "OVO_Decisions_CTE".dec_0_1) + (1.0 - "OVO_Decisions_CTE".dec_0_2) + (1.0 - "OVO_Decisions_CTE".dec_0_3) AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "OVO_Decisions_CTE".dec_0_1 + (1.0 - "OVO_Decisions_CTE".dec_1_2) + (1.0 - "OVO_Decisions_CTE".dec_1_3) AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "OVO_Decisions_CTE".dec_0_2 + "OVO_Decisions_CTE".dec_1_2 + (1.0 - "OVO_Decisions_CTE".dec_2_3) AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", "OVO_Decisions_CTE".dec_0_3 + "OVO_Decisions_CTE".dec_1_3 + "OVO_Decisions_CTE".dec_2_3 AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "OVO_Decisions_CTE"), 
orig_cte AS 
(SELECT "OVO_Scores"."KEY" AS "KEY", "OVO_Scores"."Score_0" AS "Score_0", "OVO_Scores"."Score_1" AS "Score_1", "OVO_Scores"."Score_2" AS "Score_2", "OVO_Scores"."Score_3" AS "Score_3", "OVO_Scores"."Proba_0" AS "Proba_0", "OVO_Scores"."Proba_1" AS "Proba_1", "OVO_Scores"."Proba_2" AS "Proba_2", "OVO_Scores"."Proba_3" AS "Proba_3", "OVO_Scores"."LogProba_0" AS "LogProba_0", "OVO_Scores"."LogProba_1" AS "LogProba_1", "OVO_Scores"."LogProba_2" AS "LogProba_2", "OVO_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "OVO_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte