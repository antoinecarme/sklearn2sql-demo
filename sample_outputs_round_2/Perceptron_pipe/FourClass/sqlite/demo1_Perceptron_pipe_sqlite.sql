-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0682674863957 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0533374061403 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.119758062987 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.180341872085 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0279152334231 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.105549222696 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0905297342536 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.00847990009243 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.198753623826 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.310027677415 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0424251627548 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.029631461059 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.00545409721745 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.106799556069 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0770046496904 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.149039848658 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.0584180072058 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0484598631615 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.111563906944 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0172692673308 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.0682674863957 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.0533374061403 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.119758062987 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.180341872085 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.0279152334231 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.105549222696 AS impute_7, "ADS_imp_1_OUT".impute_8 - -0.0905297342536 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.00847990009243 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.198753623826 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.310027677415 AS impute_11, "ADS_imp_1_OUT".impute_12 - 0.0424251627548 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.029631461059 AS impute_13, "ADS_imp_1_OUT".impute_14 - -0.00545409721745 AS impute_14, "ADS_imp_1_OUT".impute_15 - 0.106799556069 AS impute_15, "ADS_imp_1_OUT".impute_16 - 0.0770046496904 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.149039848658 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.0584180072058 AS impute_18, "ADS_imp_1_OUT".impute_19 - 0.0484598631615 AS impute_19, "ADS_imp_1_OUT".impute_20 - 0.111563906944 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.0172692673308 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.00701352484552 + "CenteredDataForPCA".impute_3 * -0.00373563954299 + "CenteredDataForPCA".impute_4 * 0.0527625540987 + "CenteredDataForPCA".impute_5 * -0.0536507010023 + "CenteredDataForPCA".impute_6 * -0.22318276578 + "CenteredDataForPCA".impute_7 * 0.000247630298543 + "CenteredDataForPCA".impute_8 * -0.0191169213303 + "CenteredDataForPCA".impute_9 * -0.0399740162858 + "CenteredDataForPCA".impute_10 * -0.202268897159 + "CenteredDataForPCA".impute_11 * -0.495970870512 + "CenteredDataForPCA".impute_12 * 0.0101355945488 + "CenteredDataForPCA".impute_13 * 0.067081630891 + "CenteredDataForPCA".impute_14 * -0.00942074301595 + "CenteredDataForPCA".impute_15 * -0.0232741463179 + "CenteredDataForPCA".impute_16 * -0.0135031459661 + "CenteredDataForPCA".impute_17 * -0.253648790596 + "CenteredDataForPCA".impute_18 * 0.0457487496053 + "CenteredDataForPCA".impute_19 * 0.390318874875 + "CenteredDataForPCA".impute_20 * 0.653818962052 + "CenteredDataForPCA".impute_21 * 0.0626626647848 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.105366450858 + "CenteredDataForPCA".impute_3 * -0.0436810399628 + "CenteredDataForPCA".impute_4 * 0.0676399212053 + "CenteredDataForPCA".impute_5 * 0.103528447726 + "CenteredDataForPCA".impute_6 * -0.591964098322 + "CenteredDataForPCA".impute_7 * 0.0185409972242 + "CenteredDataForPCA".impute_8 * -0.0266680302549 + "CenteredDataForPCA".impute_9 * 0.0628120988622 + "CenteredDataForPCA".impute_10 * -0.525685793513 + "CenteredDataForPCA".impute_11 * 0.39595452961 + "CenteredDataForPCA".impute_12 * 0.077750030011 + "CenteredDataForPCA".impute_13 * -0.0718782085875 + "CenteredDataForPCA".impute_14 * -0.0377529188007 + "CenteredDataForPCA".impute_15 * -0.0491709266114 + "CenteredDataForPCA".impute_16 * -0.0752260059448 + "CenteredDataForPCA".impute_17 * 0.148830006383 + "CenteredDataForPCA".impute_18 * -0.0365471768155 + "CenteredDataForPCA".impute_19 * 0.320707169087 + "CenteredDataForPCA".impute_20 * -0.183886503753 + "CenteredDataForPCA".impute_21 * -0.0477731100393 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.243271663502 + "CenteredDataForPCA".impute_3 * 0.10102949267 + "CenteredDataForPCA".impute_4 * -0.0684832095884 + "CenteredDataForPCA".impute_5 * -0.018139717082 + "CenteredDataForPCA".impute_6 * -0.234611037563 + "CenteredDataForPCA".impute_7 * -0.0478943863305 + "CenteredDataForPCA".impute_8 * 0.142851718632 + "CenteredDataForPCA".impute_9 * 0.0381558162356 + "CenteredDataForPCA".impute_10 * 0.242704788965 + "CenteredDataForPCA".impute_11 * 0.2470184829 + "CenteredDataForPCA".impute_12 * -0.141575006571 + "CenteredDataForPCA".impute_13 * -0.174471853176 + "CenteredDataForPCA".impute_14 * -0.168829903094 + "CenteredDataForPCA".impute_15 * -0.113453386466 + "CenteredDataForPCA".impute_16 * 0.0782617939789 + "CenteredDataForPCA".impute_17 * -0.776689379424 + "CenteredDataForPCA".impute_18 * -0.108378667721 + "CenteredDataForPCA".impute_19 * -0.0727802043594 + "CenteredDataForPCA".impute_20 * -0.0512801333686 + "CenteredDataForPCA".impute_21 * 0.0746159504001 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.288900235417 + "CenteredDataForPCA".impute_3 * 0.117487691825 + "CenteredDataForPCA".impute_4 * -0.111540093841 + "CenteredDataForPCA".impute_5 * -0.29124609985 + "CenteredDataForPCA".impute_6 * -0.34628615818 + "CenteredDataForPCA".impute_7 * -0.317404584926 + "CenteredDataForPCA".impute_8 * 0.160748691085 + "CenteredDataForPCA".impute_9 * -0.0794810523902 + "CenteredDataForPCA".impute_10 * 0.394236202197 + "CenteredDataForPCA".impute_11 * -0.258793199909 + "CenteredDataForPCA".impute_12 * -0.0195737342228 + "CenteredDataForPCA".impute_13 * 0.14504484544 + "CenteredDataForPCA".impute_14 * -0.241623074065 + "CenteredDataForPCA".impute_15 * -0.135376498054 + "CenteredDataForPCA".impute_16 * 0.170854678312 + "CenteredDataForPCA".impute_17 * 0.358989074566 + "CenteredDataForPCA".impute_18 * -0.0226760963843 + "CenteredDataForPCA".impute_19 * 0.153978678368 + "CenteredDataForPCA".impute_20 * -0.166035555299 + "CenteredDataForPCA".impute_21 * -0.149227982662 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.112662181358 + "CenteredDataForPCA".impute_3 * -0.0576000985184 + "CenteredDataForPCA".impute_4 * 0.112556314585 + "CenteredDataForPCA".impute_5 * -0.102094400397 + "CenteredDataForPCA".impute_6 * -0.0493495615652 + "CenteredDataForPCA".impute_7 * 0.387787419746 + "CenteredDataForPCA".impute_8 * 0.4861603145 + "CenteredDataForPCA".impute_9 * 0.214278290792 + "CenteredDataForPCA".impute_10 * 0.111016202791 + "CenteredDataForPCA".impute_11 * -0.0651799871534 + "CenteredDataForPCA".impute_12 * -0.0772026910718 + "CenteredDataForPCA".impute_13 * -0.00437042083296 + "CenteredDataForPCA".impute_14 * 0.27647195067 + "CenteredDataForPCA".impute_15 * -0.00429862449968 + "CenteredDataForPCA".impute_16 * -0.377747684289 + "CenteredDataForPCA".impute_17 * -0.0206135930269 + "CenteredDataForPCA".impute_18 * 0.0805677171632 + "CenteredDataForPCA".impute_19 * 0.0143477590607 + "CenteredDataForPCA".impute_20 * 0.0021405966998 + "CenteredDataForPCA".impute_21 * -0.526296816622 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.152048699108 + "CenteredDataForPCA".impute_3 * 0.185704674388 + "CenteredDataForPCA".impute_4 * 0.141378975089 + "CenteredDataForPCA".impute_5 * -0.363763883767 + "CenteredDataForPCA".impute_6 * 0.328876389734 + "CenteredDataForPCA".impute_7 * -0.172529632 + "CenteredDataForPCA".impute_8 * 0.362275714 + "CenteredDataForPCA".impute_9 * 0.253878204701 + "CenteredDataForPCA".impute_10 * -0.398009638674 + "CenteredDataForPCA".impute_11 * 0.1560992035 + "CenteredDataForPCA".impute_12 * -0.0265013261213 + "CenteredDataForPCA".impute_13 * 0.156109230331 + "CenteredDataForPCA".impute_14 * -0.348516071945 + "CenteredDataForPCA".impute_15 * -0.0846850819837 + "CenteredDataForPCA".impute_16 * -0.0123682314668 + "CenteredDataForPCA".impute_17 * 0.0196128504467 + "CenteredDataForPCA".impute_18 * 0.27406513417 + "CenteredDataForPCA".impute_19 * -0.0975427432298 + "CenteredDataForPCA".impute_20 * 0.0995385977062 + "CenteredDataForPCA".impute_21 * 0.157800140825 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.192982459187 + "CenteredDataForPCA".impute_3 * 0.0364006897631 + "CenteredDataForPCA".impute_4 * -0.0934021866159 + "CenteredDataForPCA".impute_5 * -0.0425547370219 + "CenteredDataForPCA".impute_6 * -0.0273606225555 + "CenteredDataForPCA".impute_7 * 0.397528892978 + "CenteredDataForPCA".impute_8 * -0.131199269754 + "CenteredDataForPCA".impute_9 * -0.458216422729 + "CenteredDataForPCA".impute_10 * -0.0515143853048 + "CenteredDataForPCA".impute_11 * 0.116039240577 + "CenteredDataForPCA".impute_12 * -0.102552915838 + "CenteredDataForPCA".impute_13 * 0.32220973715 + "CenteredDataForPCA".impute_14 * -0.259316904603 + "CenteredDataForPCA".impute_15 * -0.268951922879 + "CenteredDataForPCA".impute_16 * 0.195255629207 + "CenteredDataForPCA".impute_17 * -0.106623828275 + "CenteredDataForPCA".impute_18 * 0.398476181331 + "CenteredDataForPCA".impute_19 * -0.0177272731121 + "CenteredDataForPCA".impute_20 * -0.0343757719214 + "CenteredDataForPCA".impute_21 * -0.291781525172 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.252665038337 + "CenteredDataForPCA".impute_3 * -0.204191875797 + "CenteredDataForPCA".impute_4 * 0.613672032304 + "CenteredDataForPCA".impute_5 * -0.294246527824 + "CenteredDataForPCA".impute_6 * -0.0546354157993 + "CenteredDataForPCA".impute_7 * 0.0125460839699 + "CenteredDataForPCA".impute_8 * -0.309066984733 + "CenteredDataForPCA".impute_9 * 0.031946812492 + "CenteredDataForPCA".impute_10 * 0.0735567947875 + "CenteredDataForPCA".impute_11 * 0.0451231926331 + "CenteredDataForPCA".impute_12 * -0.0959967177085 + "CenteredDataForPCA".impute_13 * 0.0205075844961 + "CenteredDataForPCA".impute_14 * 0.210786753794 + "CenteredDataForPCA".impute_15 * 0.302606489415 + "CenteredDataForPCA".impute_16 * 0.332495503538 + "CenteredDataForPCA".impute_17 * -0.0740102100829 + "CenteredDataForPCA".impute_18 * 0.235211018934 + "CenteredDataForPCA".impute_19 * -0.0167312795932 + "CenteredDataForPCA".impute_20 * -0.0555071004959 + "CenteredDataForPCA".impute_21 * -0.0616919305394 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.462430038462 + "CenteredDataForPCA".impute_3 * -0.300564785529 + "CenteredDataForPCA".impute_4 * 0.181671040303 + "CenteredDataForPCA".impute_5 * 0.503427401037 + "CenteredDataForPCA".impute_6 * 0.0688850729947 + "CenteredDataForPCA".impute_7 * 0.0437494093034 + "CenteredDataForPCA".impute_8 * 0.0365156283547 + "CenteredDataForPCA".impute_9 * -0.0555157030613 + "CenteredDataForPCA".impute_10 * 0.104784689523 + "CenteredDataForPCA".impute_11 * -0.0406645306464 + "CenteredDataForPCA".impute_12 * 0.298282299695 + "CenteredDataForPCA".impute_13 * 0.421139118193 + "CenteredDataForPCA".impute_14 * -0.248420254883 + "CenteredDataForPCA".impute_15 * 0.01269561183 + "CenteredDataForPCA".impute_16 * -0.201723360053 + "CenteredDataForPCA".impute_17 * -0.0278243280416 + "CenteredDataForPCA".impute_18 * 0.0339203774509 + "CenteredDataForPCA".impute_19 * -0.0546840889621 + "CenteredDataForPCA".impute_20 * -0.00336738444208 + "CenteredDataForPCA".impute_21 * 0.108833329681 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.140160673765 + "CenteredDataForPCA".impute_3 * -0.379560384018 + "CenteredDataForPCA".impute_4 * -0.390054776233 + "CenteredDataForPCA".impute_5 * -0.43014828874 + "CenteredDataForPCA".impute_6 * 0.0343338599962 + "CenteredDataForPCA".impute_7 * 0.0655634198856 + "CenteredDataForPCA".impute_8 * -0.0379136924846 + "CenteredDataForPCA".impute_9 * -0.249705991127 + "CenteredDataForPCA".impute_10 * -0.13364275895 + "CenteredDataForPCA".impute_11 * 0.0957388318849 + "CenteredDataForPCA".impute_12 * -0.143231262544 + "CenteredDataForPCA".impute_13 * 0.206692352984 + "CenteredDataForPCA".impute_14 * -0.0779464606802 + "CenteredDataForPCA".impute_15 * 0.452284008778 + "CenteredDataForPCA".impute_16 * -0.21566764881 + "CenteredDataForPCA".impute_17 * -0.055146872482 + "CenteredDataForPCA".impute_18 * -0.279747035659 + "CenteredDataForPCA".impute_19 * -0.0122722815724 + "CenteredDataForPCA".impute_20 * 0.0134272509144 + "CenteredDataForPCA".impute_21 * 0.0284251605463 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.365877678019 + "CenteredDataForPCA".impute_3 * 0.271128375642 + "CenteredDataForPCA".impute_4 * -0.368951115302 + "CenteredDataForPCA".impute_5 * 0.138486134139 + "CenteredDataForPCA".impute_6 * -0.0585062642516 + "CenteredDataForPCA".impute_7 * 0.156902175783 + "CenteredDataForPCA".impute_8 * -0.159057983718 + "CenteredDataForPCA".impute_9 * 0.154999179017 + "CenteredDataForPCA".impute_10 * 0.0192069953686 + "CenteredDataForPCA".impute_11 * -0.0248277555579 + "CenteredDataForPCA".impute_12 * -0.394851602255 + "CenteredDataForPCA".impute_13 * 0.124596244334 + "CenteredDataForPCA".impute_14 * 0.312839364102 + "CenteredDataForPCA".impute_15 * 0.0697003334554 + "CenteredDataForPCA".impute_16 * -0.0786802797465 + "CenteredDataForPCA".impute_17 * 0.0952310341671 + "CenteredDataForPCA".impute_18 * 0.403401967947 + "CenteredDataForPCA".impute_19 * 0.0346894151513 + "CenteredDataForPCA".impute_20 * -0.0336036985098 + "CenteredDataForPCA".impute_21 * 0.323241303158 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.217367410114 + "CenteredDataForPCA".impute_3 * -0.411821000795 + "CenteredDataForPCA".impute_4 * -0.120611016126 + "CenteredDataForPCA".impute_5 * -0.082390157143 + "CenteredDataForPCA".impute_6 * -0.113820389704 + "CenteredDataForPCA".impute_7 * -0.427339166996 + "CenteredDataForPCA".impute_8 * 0.222896461985 + "CenteredDataForPCA".impute_9 * -0.163427690654 + "CenteredDataForPCA".impute_10 * 0.0683669947301 + "CenteredDataForPCA".impute_11 * 0.0799819909267 + "CenteredDataForPCA".impute_12 * 0.183819552757 + "CenteredDataForPCA".impute_13 * 0.0464422122558 + "CenteredDataForPCA".impute_14 * 0.364392222659 + "CenteredDataForPCA".impute_15 * -0.152169554836 + "CenteredDataForPCA".impute_16 * -0.129127010546 + "CenteredDataForPCA".impute_17 * -0.128312062976 + "CenteredDataForPCA".impute_18 * 0.471840362803 + "CenteredDataForPCA".impute_19 * 0.000444611098606 + "CenteredDataForPCA".impute_20 * -0.0665588937929 + "CenteredDataForPCA".impute_21 * 0.163395562733 AS anoova_13, "CenteredDataForPCA".impute_2 * -0.482542774838 + "CenteredDataForPCA".impute_3 * -0.0179346808606 + "CenteredDataForPCA".impute_4 * -0.0770106223673 + "CenteredDataForPCA".impute_5 * -0.213576512764 + "CenteredDataForPCA".impute_6 * 0.228043024593 + "CenteredDataForPCA".impute_7 * 0.0467216178654 + "CenteredDataForPCA".impute_8 * -0.180012090576 + "CenteredDataForPCA".impute_9 * -0.246554801958 + "CenteredDataForPCA".impute_10 * -0.166580734887 + "CenteredDataForPCA".impute_11 * 0.0205441795112 + "CenteredDataForPCA".impute_12 * 0.233761336529 + "CenteredDataForPCA".impute_13 * -0.204286179377 + "CenteredDataForPCA".impute_14 * 0.315666580908 + "CenteredDataForPCA".impute_15 * -0.543863802295 + "CenteredDataForPCA".impute_16 * 0.00927382824406 + "CenteredDataForPCA".impute_17 * 0.0334450245731 + "CenteredDataForPCA".impute_18 * -0.179018747351 + "CenteredDataForPCA".impute_19 * -0.0683508275928 + "CenteredDataForPCA".impute_20 * 0.0797511379231 + "CenteredDataForPCA".impute_21 * -0.060324955182 AS anoova_14, "CenteredDataForPCA".impute_2 * 0.0138094235912 + "CenteredDataForPCA".impute_3 * 0.0569533207834 + "CenteredDataForPCA".impute_4 * 0.133302378456 + "CenteredDataForPCA".impute_5 * 0.235345968032 + "CenteredDataForPCA".impute_6 * 0.0667981745562 + "CenteredDataForPCA".impute_7 * -0.256652312953 + "CenteredDataForPCA".impute_8 * 0.285927887569 + "CenteredDataForPCA".impute_9 * -0.189504733332 + "CenteredDataForPCA".impute_10 * -0.174228032967 + "CenteredDataForPCA".impute_11 * 0.0806023436438 + "CenteredDataForPCA".impute_12 * -0.428741267182 + "CenteredDataForPCA".impute_13 * 0.425398403477 + "CenteredDataForPCA".impute_14 * 0.346818166052 + "CenteredDataForPCA".impute_15 * -0.0796845823468 + "CenteredDataForPCA".impute_16 * 0.274644002922 + "CenteredDataForPCA".impute_17 * -0.0190563131544 + "CenteredDataForPCA".impute_18 * -0.349184948154 + "CenteredDataForPCA".impute_19 * -0.00836561508389 + "CenteredDataForPCA".impute_20 * 0.0373588750301 + "CenteredDataForPCA".impute_21 * -0.0891818422825 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.0435661702091 + "CenteredDataForPCA".impute_3 * 0.00298476079398 + "CenteredDataForPCA".impute_4 * 0.314679710065 + "CenteredDataForPCA".impute_5 * 0.038505745715 + "CenteredDataForPCA".impute_6 * -0.0189244684881 + "CenteredDataForPCA".impute_7 * 0.171650219103 + "CenteredDataForPCA".impute_8 * 0.312348647848 + "CenteredDataForPCA".impute_9 * -0.550709287494 + "CenteredDataForPCA".impute_10 * 0.0371887832042 + "CenteredDataForPCA".impute_11 * -0.0655512577255 + "CenteredDataForPCA".impute_12 * -0.278658857942 + "CenteredDataForPCA".impute_13 * -0.396204975144 + "CenteredDataForPCA".impute_14 * -0.109098867252 + "CenteredDataForPCA".impute_15 * 0.0299166235983 + "CenteredDataForPCA".impute_16 * -0.173466450067 + "CenteredDataForPCA".impute_17 * 0.176254741289 + "CenteredDataForPCA".impute_18 * 0.0308195646777 + "CenteredDataForPCA".impute_19 * 0.0258773338265 + "CenteredDataForPCA".impute_20 * -0.037388679535 + "CenteredDataForPCA".impute_21 * 0.386836292486 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.0489567900019 + "CenteredDataForPCA".impute_3 * 0.620681603384 + "CenteredDataForPCA".impute_4 * 0.0811614220334 + "CenteredDataForPCA".impute_5 * -0.0105105174915 + "CenteredDataForPCA".impute_6 * -0.00806307953069 + "CenteredDataForPCA".impute_7 * -0.223124656631 + "CenteredDataForPCA".impute_8 * -0.0450079220387 + "CenteredDataForPCA".impute_9 * -0.371927411028 + "CenteredDataForPCA".impute_10 * -0.0202638227153 + "CenteredDataForPCA".impute_11 * 0.0772090566459 + "CenteredDataForPCA".impute_12 * 0.340857568715 + "CenteredDataForPCA".impute_13 * 0.0917173663988 + "CenteredDataForPCA".impute_14 * 0.150441302171 + "CenteredDataForPCA".impute_15 * 0.369609318843 + "CenteredDataForPCA".impute_16 * -0.272632421693 + "CenteredDataForPCA".impute_17 * -0.124029835178 + "CenteredDataForPCA".impute_18 * 0.0729555661151 + "CenteredDataForPCA".impute_19 * -0.0222732992733 + "CenteredDataForPCA".impute_20 * -0.0072337047115 + "CenteredDataForPCA".impute_21 * -0.17222184546 AS anoova_17, "CenteredDataForPCA".impute_2 * 0.23186105793 + "CenteredDataForPCA".impute_3 * 0.159393719009 + "CenteredDataForPCA".impute_4 * 0.228981340145 + "CenteredDataForPCA".impute_5 * -0.320896373342 + "CenteredDataForPCA".impute_6 * -0.169364407572 + "CenteredDataForPCA".impute_7 * 0.282537164091 + "CenteredDataForPCA".impute_8 * -0.0596382568973 + "CenteredDataForPCA".impute_9 * 0.0990888465389 + "CenteredDataForPCA".impute_10 * 0.16938711918 + "CenteredDataForPCA".impute_11 * 0.0303820374919 + "CenteredDataForPCA".impute_12 * 0.147316366738 + "CenteredDataForPCA".impute_13 * 0.42898672616 + "CenteredDataForPCA".impute_14 * 0.154050219874 + "CenteredDataForPCA".impute_15 * -0.241140906092 + "CenteredDataForPCA".impute_16 * -0.204191529168 + "CenteredDataForPCA".impute_17 * -0.0311009296434 + "CenteredDataForPCA".impute_18 * -0.252128458473 + "CenteredDataForPCA".impute_19 * 0.0158578661286 + "CenteredDataForPCA".impute_20 * -0.123682741099 + "CenteredDataForPCA".impute_21 * 0.452254340061 AS anoova_18, "CenteredDataForPCA".impute_2 * 0.0601387435332 + "CenteredDataForPCA".impute_3 * -0.0388034132407 + "CenteredDataForPCA".impute_4 * 0.199933470386 + "CenteredDataForPCA".impute_5 * -0.0103549592888 + "CenteredDataForPCA".impute_6 * 0.0338483481143 + "CenteredDataForPCA".impute_7 * -0.343082843839 + "CenteredDataForPCA".impute_8 * -0.421057091337 + "CenteredDataForPCA".impute_9 * 0.0321299477725 + "CenteredDataForPCA".impute_10 * 0.0318469296371 + "CenteredDataForPCA".impute_11 * -0.0034445648685 + "CenteredDataForPCA".impute_12 * -0.440278789378 + "CenteredDataForPCA".impute_13 * 0.0186700998729 + "CenteredDataForPCA".impute_14 * -0.159345328159 + "CenteredDataForPCA".impute_15 * -0.253412767479 + "CenteredDataForPCA".impute_16 * -0.579327538924 + "CenteredDataForPCA".impute_17 * -0.0239148582046 + "CenteredDataForPCA".impute_18 * 0.00253734373627 + "CenteredDataForPCA".impute_19 * -0.0271292299018 + "CenteredDataForPCA".impute_20 * -0.00146670271823 + "CenteredDataForPCA".impute_21 * -0.189362375455 AS anoova_19, "CenteredDataForPCA".impute_2 * -1.04131454589e-16 + "CenteredDataForPCA".impute_3 * 1.6136509361e-16 + "CenteredDataForPCA".impute_4 * 7.42206425696e-17 + "CenteredDataForPCA".impute_5 * 7.63299739761e-17 + "CenteredDataForPCA".impute_6 * 0.112740580068 + "CenteredDataForPCA".impute_7 * 6.01548395765e-18 + "CenteredDataForPCA".impute_8 * 2.10822873892e-16 + "CenteredDataForPCA".impute_9 * -8.48580175023e-17 + "CenteredDataForPCA".impute_10 * -0.338903088276 + "CenteredDataForPCA".impute_11 * -0.570936451437 + "CenteredDataForPCA".impute_12 * 4.71063253672e-17 + "CenteredDataForPCA".impute_13 * -1.00154109578e-16 + "CenteredDataForPCA".impute_14 * 2.93895191928e-16 + "CenteredDataForPCA".impute_15 * 6.43012374438e-17 + "CenteredDataForPCA".impute_16 * 1.04596379097e-16 + "CenteredDataForPCA".impute_17 * -0.286893181916 + "CenteredDataForPCA".impute_18 * 3.98701570799e-17 + "CenteredDataForPCA".impute_19 * 0.104614044863 + "CenteredDataForPCA".impute_20 * -0.673211727891 + "CenteredDataForPCA".impute_21 * 1.00930712832e-16 AS anoova_20, "CenteredDataForPCA".impute_2 * 1.34427851933e-16 + "CenteredDataForPCA".impute_3 * 1.18557330122e-16 + "CenteredDataForPCA".impute_4 * 2.1121438088e-17 + "CenteredDataForPCA".impute_5 * 2.9849281226e-18 + "CenteredDataForPCA".impute_6 * 0.434455494761 + "CenteredDataForPCA".impute_7 * -8.69518951407e-17 + "CenteredDataForPCA".impute_8 * -9.84149794254e-17 + "CenteredDataForPCA".impute_9 * 1.77948005921e-16 + "CenteredDataForPCA".impute_10 * 0.226429817764 + "CenteredDataForPCA".impute_11 * 0.251417618524 + "CenteredDataForPCA".impute_12 * -1.12015232483e-17 + "CenteredDataForPCA".impute_13 * 3.82999291267e-18 + "CenteredDataForPCA".impute_14 * -3.53185269161e-17 + "CenteredDataForPCA".impute_15 * -1.3271833508e-16 + "CenteredDataForPCA".impute_16 * -7.73481021556e-17 + "CenteredDataForPCA".impute_17 * -0.0510940070925 + "CenteredDataForPCA".impute_18 * 5.36198982714e-17 + "CenteredDataForPCA".impute_19 * 0.826615646286 + "CenteredDataForPCA".impute_20 * -0.104226280515 + "CenteredDataForPCA".impute_21 * -1.35444214721e-16 AS anoova_21 
FROM "CenteredDataForPCA"), 
linear_model_cte AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", 3.4506903052998705 * "ADS_ano_2_OUT".anoova_2 + 5.46986080479085 * "ADS_ano_2_OUT".anoova_3 + 13.422345085631047 * "ADS_ano_2_OUT".anoova_4 + 4.903529008618207 * "ADS_ano_2_OUT".anoova_5 + 0.055903899964540704 * "ADS_ano_2_OUT".anoova_6 + -7.223622033003559 * "ADS_ano_2_OUT".anoova_7 + -2.2116884241627703 * "ADS_ano_2_OUT".anoova_8 + -5.2618577951042464 * "ADS_ano_2_OUT".anoova_9 + -0.7790321774304267 * "ADS_ano_2_OUT".anoova_10 + 4.382953813150623 * "ADS_ano_2_OUT".anoova_11 + 1.6825236440482951 * "ADS_ano_2_OUT".anoova_12 + 3.8449828713554246 * "ADS_ano_2_OUT".anoova_13 + -1.7158224443649739 * "ADS_ano_2_OUT".anoova_14 + 7.241660686979082 * "ADS_ano_2_OUT".anoova_15 + -5.143425454407251 * "ADS_ano_2_OUT".anoova_16 + 0.4563339153644973 * "ADS_ano_2_OUT".anoova_17 + -1.3574029263200502 * "ADS_ano_2_OUT".anoova_18 + 10.332816199735788 * "ADS_ano_2_OUT".anoova_19 + -1.8419013206117884e-14 * "ADS_ano_2_OUT".anoova_20 + -5.2592482694090074e-15 * "ADS_ano_2_OUT".anoova_21 + -23.0 AS "Score_0", -0.5787457280322971 * "ADS_ano_2_OUT".anoova_2 + 4.740114327416846 * "ADS_ano_2_OUT".anoova_3 + -2.056712395038648 * "ADS_ano_2_OUT".anoova_4 + -8.714117771098266 * "ADS_ano_2_OUT".anoova_5 + -4.066012690124353 * "ADS_ano_2_OUT".anoova_6 + -1.3410408635227535 * "ADS_ano_2_OUT".anoova_7 + 2.2348791664190184 * "ADS_ano_2_OUT".anoova_8 + 1.9945864936113695 * "ADS_ano_2_OUT".anoova_9 + 3.8066269915725526 * "ADS_ano_2_OUT".anoova_10 + 2.4146931344108373 * "ADS_ano_2_OUT".anoova_11 + 1.2729690641845568 * "ADS_ano_2_OUT".anoova_12 + -6.615635743910919 * "ADS_ano_2_OUT".anoova_13 + -1.8716366137397025 * "ADS_ano_2_OUT".anoova_14 + 5.796612887756331 * "ADS_ano_2_OUT".anoova_15 + -5.328286125259192 * "ADS_ano_2_OUT".anoova_16 + 0.303659764544821 * "ADS_ano_2_OUT".anoova_17 + -5.596659954314408 * "ADS_ano_2_OUT".anoova_18 + -2.2119865120484494 * "ADS_ano_2_OUT".anoova_19 + 9.686013035865934e-15 * "ADS_ano_2_OUT".anoova_20 + 1.8519333863313687e-15 * "ADS_ano_2_OUT".anoova_21 + -12.0 AS "Score_1", -3.304793737823207 * "ADS_ano_2_OUT".anoova_2 + -6.794584374317224 * "ADS_ano_2_OUT".anoova_3 + -2.4619647633548776 * "ADS_ano_2_OUT".anoova_4 + 8.763379743439343 * "ADS_ano_2_OUT".anoova_5 + 4.590272905524866 * "ADS_ano_2_OUT".anoova_6 + -3.085976133071949 * "ADS_ano_2_OUT".anoova_7 + 0.6332852604117354 * "ADS_ano_2_OUT".anoova_8 + 2.0240399588339995 * "ADS_ano_2_OUT".anoova_9 + 1.8077400507470074 * "ADS_ano_2_OUT".anoova_10 + 6.008155593462792 * "ADS_ano_2_OUT".anoova_11 + -3.757394592374169 * "ADS_ano_2_OUT".anoova_12 + 3.8447536790557475 * "ADS_ano_2_OUT".anoova_13 + 1.6022043059769593 * "ADS_ano_2_OUT".anoova_14 + -10.031349458304447 * "ADS_ano_2_OUT".anoova_15 + 7.927222920881757 * "ADS_ano_2_OUT".anoova_16 + -6.4861385466215795 * "ADS_ano_2_OUT".anoova_17 + 7.032508368748566 * "ADS_ano_2_OUT".anoova_18 + -1.05749500116607 * "ADS_ano_2_OUT".anoova_19 + -4.644197911792335e-15 * "ADS_ano_2_OUT".anoova_20 + -1.3532316415465592e-14 * "ADS_ano_2_OUT".anoova_21 + -17.0 AS "Score_2", -0.09475817089216187 * "ADS_ano_2_OUT".anoova_2 + -8.855793677338626 * "ADS_ano_2_OUT".anoova_3 + -1.3693587428712268 * "ADS_ano_2_OUT".anoova_4 + -8.291737346004853 * "ADS_ano_2_OUT".anoova_5 + -6.666729718635324 * "ADS_ano_2_OUT".anoova_6 + 12.81518791173834 * "ADS_ano_2_OUT".anoova_7 + 0.2977138583706691 * "ADS_ano_2_OUT".anoova_8 + -4.887265707749266 * "ADS_ano_2_OUT".anoova_9 + -3.2746003866105937 * "ADS_ano_2_OUT".anoova_10 + 3.3471011381826195 * "ADS_ano_2_OUT".anoova_11 + -1.3537744394424507 * "ADS_ano_2_OUT".anoova_12 + -4.051256773939408 * "ADS_ano_2_OUT".anoova_13 + 4.6120943095233065 * "ADS_ano_2_OUT".anoova_14 + -6.620290724891863 * "ADS_ano_2_OUT".anoova_15 + 1.5577125328969181 * "ADS_ano_2_OUT".anoova_16 + 0.1854429192362989 * "ADS_ano_2_OUT".anoova_17 + -2.2551014831924285 * "ADS_ano_2_OUT".anoova_18 + -3.064729105367489 * "ADS_ano_2_OUT".anoova_19 + 1.393946472303234e-14 * "ADS_ano_2_OUT".anoova_20 + 6.140851375673624e-15 * "ADS_ano_2_OUT".anoova_21 + -22.0 AS "Score_3" 
FROM "ADS_ano_2_OUT"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte