-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 0.09749500453472137) THEN CASE WHEN ("ADS"."Feature_2" <= 107.44999694824219) THEN CASE WHEN ("ADS"."Feature_1" <= 21.80500030517578) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.09850500524044037) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_25" <= 0.14399999380111694) THEN 9 ELSE CASE WHEN ("ADS"."Feature_23" <= 810.25) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_6' AS feature, 0.09749500453472137 AS threshold, 358 AS count, 0 AS depth, 0.36379613356766255 AS "Proba_0.0", -1.01116164086 AS "LogProba_0.0", 0.6362038664323374 AS "Proba_1.0", -0.452236222301 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 107.44999694824219 AS threshold, 230 AS count, 1 AS depth, 0.08174386920980926 AS "Proba_0.0", -2.50416446639 AS "LogProba_0.0", 0.9182561307901907 AS "Proba_1.0", -0.0852789177022 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 21.80500030517578 AS threshold, 223 AS count, 2 AS depth, 0.05898876404494382 AS "Proba_0.0", -2.83040829313 AS "LogProba_0.0", 0.9410112359550562 AS "Proba_1.0", -0.060800199027 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 192 AS count, 3 AS depth, 0.02631578947368421 AS "Proba_0.0", -3.63758615973 AS "LogProba_0.0", 0.9736842105263158 AS "Proba_1.0", -0.0266682470822 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_27' AS feature, 0.09850500524044037 AS threshold, 7 AS count, 2 AS depth, 0.8181818181818182 AS "Proba_0.0", -0.200670695462 AS "LogProba_0.0", 0.18181818181818182 AS "Proba_1.0", -1.70474809224 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_25' AS feature, 0.14399999380111694 AS threshold, 128 AS count, 1 AS depth, 0.8762376237623762 AS "Proba_0.0", -0.132117964827 AS "LogProba_0.0", 0.12376237623762376 AS "Proba_1.0", -2.08939187253 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_23' AS feature, 810.25 AS threshold, 127 AS count, 2 AS depth, 0.885 AS "Proba_0.0", -0.122167633974 AS "LogProba_0.0", 0.115 AS "Proba_1.0", -2.16282315062 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 0.45 AS "Proba_0.0", -0.798507696218 AS "LogProba_0.0", 0.55 AS "Proba_1.0", -0.597837000756 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, 0.99375 AS "Proba_0.0", -0.0062696130136 AS "LogProba_0.0", 0.00625 AS "Proba_1.0", -5.07517381523 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 105.94999694824219) THEN CASE WHEN ("ADS"."Feature_29" <= 0.1607999950647354) THEN CASE WHEN ("ADS"."Feature_13" <= 91.55500030517578) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_21" <= 20.645000457763672) THEN CASE WHEN ("ADS"."Feature_6" <= 0.09048500657081604) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.10029999911785126) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 105.94999694824219 AS threshold, 362 AS count, 0 AS depth, 0.39191564147627417 AS "Proba_0.0", -0.936708662666 AS "LogProba_0.0", 0.6080843585237259 AS "Proba_1.0", -0.497441659069 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_29' AS feature, 0.1607999950647354 AS threshold, 210 AS count, 1 AS depth, 0.041791044776119404 AS "Proba_0.0", -3.17507320221 AS "LogProba_0.0", 0.9582089552238806 AS "Proba_1.0", -0.0426894086951 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 91.55500030517578 AS threshold, 208 AS count, 2 AS depth, 0.030211480362537766 AS "Proba_0.0", -3.49953328238 AS "LogProba_0.0", 0.9697885196374623 AS "Proba_1.0", -0.030677252247 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 207 AS count, 3 AS depth, 0.0243161094224924 AS "Proba_0.0", -3.71661620909 AS "LogProba_0.0", 0.9756838905775076 AS "Proba_1.0", -0.0246166276354 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_21' AS feature, 20.645000457763672 AS threshold, 152 AS count, 1 AS depth, 0.8931623931623932 AS "Proba_0.0", -0.112986863393 AS "LogProba_0.0", 0.10683760683760683 AS "Proba_1.0", -2.23644529049 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_6' AS feature, 0.09048500657081604 AS threshold, 16 AS count, 2 AS depth, 0.36 AS "Proba_0.0", -1.02165124753 AS "LogProba_0.0", 0.64 AS "Proba_1.0", -0.446287102628 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_24' AS feature, 0.10029999911785126 AS threshold, 136 AS count, 2 AS depth, 0.9569377990430622 AS "Proba_0.0", -0.0440168854168 AS "LogProba_0.0", 0.0430622009569378 AS "Proba_1.0", -3.14510967463 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 133 AS count, 3 AS depth, 0.9660194174757282 AS "Proba_0.0", -0.0345713440651 AS "LogProba_0.0", 0.03398058252427184 AS "Proba_1.0", -3.38196601973 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_13" <= 33.064998626708984) THEN CASE WHEN ("ADS"."Feature_6" <= 0.13130000233650208) THEN CASE WHEN ("ADS"."Feature_2" <= 97.14500427246094) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_13" <= 10.609000205993652) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.2605000138282776) THEN CASE WHEN ("ADS"."Feature_9" <= 0.056974999606609344) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_17" <= 0.046845000237226486) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 33.064998626708984 AS threshold, 372 AS count, 0 AS depth, 0.3866432337434095 AS "Proba_0.0", -0.950252887774 AS "LogProba_0.0", 0.6133567662565905 AS "Proba_1.0", -0.488808511924 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.13130000233650208 AS threshold, 235 AS count, 1 AS depth, 0.13019390581717452 AS "Proba_0.0", -2.03873035662 AS "LogProba_0.0", 0.8698060941828255 AS "Proba_1.0", -0.139484972425 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 97.14500427246094 AS threshold, 220 AS count, 2 AS depth, 0.0688622754491018 AS "Proba_0.0", -2.67564677705 AS "LogProba_0.0", 0.9311377245508982 AS "Proba_1.0", -0.0713480807975 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 210 AS count, 3 AS depth, 0.03459119496855346 AS "Proba_0.0", -3.36415610998 AS "LogProba_0.0", 0.9654088050314465 AS "Proba_1.0", -0.035203635193 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_13' AS feature, 10.609000205993652 AS threshold, 15 AS count, 2 AS depth, 0.8888888888888888 AS "Proba_0.0", -0.117783035656 AS "LogProba_0.0", 0.1111111111111111 AS "Proba_1.0", -2.19722457734 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_26' AS feature, 0.2605000138282776 AS threshold, 137 AS count, 1 AS depth, 0.8317307692307693 AS "Proba_0.0", -0.184246485204 AS "LogProba_0.0", 0.16826923076923078 AS "Proba_1.0", -1.78219001821 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.056974999606609344 AS threshold, 28 AS count, 2 AS depth, 0.3125 AS "Proba_0.0", -1.16315080981 AS "LogProba_0.0", 0.6875 AS "Proba_1.0", -0.374693449441 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.7222222222222222 AS "Proba_0.0", -0.325422400435 AS "LogProba_0.0", 0.2777777777777778 AS "Proba_1.0", -1.28093384546 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.06666666666666667 AS "Proba_0.0", -2.7080502011 AS "LogProba_0.0", 0.9333333333333333 AS "Proba_1.0", -0.068992871487 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_17' AS feature, 0.046845000237226486 AS threshold, 109 AS count, 2 AS depth, 0.9875 AS "Proba_0.0", -0.0125787822069 AS "LogProba_0.0", 0.0125 AS "Proba_1.0", -4.38202663467 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 108 AS count, 3 AS depth, 0.9937106918238994 AS "Proba_0.0", -0.00630916919326 AS "LogProba_0.0", 0.006289308176100629 AS "Proba_1.0", -5.06890420222 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.051419999450445175) THEN CASE WHEN ("ADS"."Feature_13" <= 38.415000915527344) THEN CASE WHEN ("ADS"."Feature_18" <= 0.012234999798238277) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_24" <= 0.10670000314712524) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_20" <= 14.869999885559082) THEN CASE WHEN ("ADS"."Feature_25" <= 0.6520999670028687) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_21" <= 20.625) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.051419999450445175 AS threshold, 372 AS count, 0 AS depth, 0.351493848857645 AS "Proba_0.0", -1.04556306758 AS "LogProba_0.0", 0.648506151142355 AS "Proba_1.0", -0.433083790086 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 38.415000915527344 AS threshold, 241 AS count, 1 AS depth, 0.05449591280653951 AS "Proba_0.0", -2.9096295745 AS "LogProba_0.0", 0.9455040871934605 AS "Proba_1.0", -0.0560370681077 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_18' AS feature, 0.012234999798238277 AS threshold, 229 AS count, 2 AS depth, 0.02849002849002849 AS "Proba_0.0", -3.55820113047 AS "LogProba_0.0", 0.9715099715099715 AS "Proba_1.0", -0.0289037461823 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 213 AS count, 3 AS depth, 0.012232415902140673 AS "Proba_0.0", -4.40366580978 AS "LogProba_0.0", 0.9877675840978594 AS "Proba_1.0", -0.0123078476746 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_24' AS feature, 0.10670000314712524 AS threshold, 12 AS count, 2 AS depth, 0.625 AS "Proba_0.0", -0.470003629246 AS "LogProba_0.0", 0.375 AS "Proba_1.0", -0.980829253012 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.14285714285714285 AS "Proba_0.0", -1.94591014906 AS "LogProba_0.0", 0.8571428571428571 AS "Proba_1.0", -0.154150679827 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_20' AS feature, 14.869999885559082 AS threshold, 131 AS count, 1 AS depth, 0.8910891089108911 AS "Proba_0.0", -0.115310846511 AS "LogProba_0.0", 0.10891089108910891 AS "Proba_1.0", -2.21722524404 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_25' AS feature, 0.6520999670028687 AS threshold, 10 AS count, 2 AS depth, 0.13333333333333333 AS "Proba_0.0", -2.01490302054 AS "LogProba_0.0", 0.8666666666666667 AS "Proba_1.0", -0.143100843641 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.07142857142857142 AS "Proba_0.0", -2.63905732962 AS "LogProba_0.0", 0.9285714285714286 AS "Proba_1.0", -0.0741079721537 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_21' AS feature, 20.625 AS threshold, 121 AS count, 2 AS depth, 0.9518716577540107 AS "Proba_0.0", -0.0493250665625 AS "LogProba_0.0", 0.0481283422459893 AS "Proba_1.0", -3.03388403952 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.45454545454545453 AS "Proba_0.0", -0.788457360364 AS "LogProba_0.0", 0.5454545454545454 AS "Proba_1.0", -0.60613580357 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, 0.9829545454545454 AS "Proba_0.0", -0.0171924005404 AS "LogProba_0.0", 0.017045454545454544 AS "Proba_1.0", -4.07187170637 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.1436000019311905) THEN CASE WHEN ("ADS"."Feature_16" <= 0.02133999951183796) THEN CASE WHEN ("ADS"."Feature_0" <= 15.079999923706055) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 695.7000122070312) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 401.75) THEN CASE WHEN ("ADS"."Feature_24" <= 0.18330000340938568) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_20" <= 17.025001525878906) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_27' AS feature, 0.1436000019311905 AS threshold, 375 AS count, 0 AS depth, 0.3936731107205624 AS "Proba_0.0", -0.932234382271 AS "LogProba_0.0", 0.6063268892794376 AS "Proba_1.0", -0.500336017095 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.02133999951183796 AS threshold, 249 AS count, 1 AS depth, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.9166666666666666 AS "Proba_1.0", -0.0870113769896 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 15.079999923706055 AS threshold, 165 AS count, 2 AS depth, 0.03543307086614173 AS "Proba_0.0", -3.34010968968 AS "LogProba_0.0", 0.9645669291338582 AS "Proba_1.0", -0.0360760564738 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 156 AS count, 3 AS depth, 0.00823045267489712 AS "Proba_0.0", -4.79991426278 AS "LogProba_0.0", 0.9917695473251029 AS "Proba_1.0", -0.00826450984989 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.6363636363636364 AS "Proba_0.0", -0.451985123743 AS "LogProba_0.0", 0.36363636363636365 AS "Proba_1.0", -1.01160091168 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 695.7000122070312 AS threshold, 84 AS count, 2 AS depth, 0.1864406779661017 AS "Proba_0.0", -1.67964217111 AS "LogProba_0.0", 0.8135593220338984 AS "Proba_1.0", -0.206336432998 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, 0.08653846153846154 AS "Proba_0.0", -2.44716632181 AS "LogProba_0.0", 0.9134615384615384 AS "Proba_1.0", -0.0905140075408 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.9285714285714286 AS "Proba_0.0", -0.0741079721537 AS "LogProba_0.0", 0.07142857142857142 AS "Proba_1.0", -2.63905732962 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 401.75 AS threshold, 126 AS count, 1 AS depth, 0.9796954314720813 AS "Proba_0.0", -0.0205135398331 AS "LogProba_0.0", 0.02030456852791878 AS "Proba_1.0", -3.89690936762 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_24' AS feature, 0.18330000340938568 AS threshold, 3 AS count, 2 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_20' AS feature, 17.025001525878906 AS threshold, 123 AS count, 2 AS depth, 0.9896907216494846 AS "Proba_0.0", -0.0103627870355 AS "LogProba_0.0", 0.010309278350515464 AS "Proba_1.0", -4.5747109785 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.9166666666666666 AS "Proba_0.0", -0.0870113769896 AS "LogProba_0.0", 0.08333333333333333 AS "Proba_1.0", -2.48490664979 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0.0" AS "Proba_4_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1.0" AS "Proba_4_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_4_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_13" <= 31.28499984741211) THEN CASE WHEN ("ADS"."Feature_20" <= 17.450000762939453) THEN CASE WHEN ("ADS"."Feature_4" <= 0.1180500015616417) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.20180000364780426) THEN CASE WHEN ("ADS"."Feature_13" <= 43.96500015258789) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_20" <= 16.790000915527344) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 31.28499984741211 AS threshold, 353 AS count, 0 AS depth, 0.37609841827768015 AS "Proba_0.0", -0.977904419104 AS "LogProba_0.0", 0.6239015817223199 AS "Proba_1.0", -0.471762644651 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_20' AS feature, 17.450000762939453 AS threshold, 221 AS count, 1 AS depth, 0.09375 AS "Proba_0.0", -2.36712361413 AS "LogProba_0.0", 0.90625 AS "Proba_1.0", -0.0984400728133 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.1180500015616417 AS threshold, 214 AS count, 2 AS depth, 0.05621301775147929 AS "Proba_0.0", -2.87860691632 AS "LogProba_0.0", 0.9437869822485208 AS "Proba_1.0", -0.0578547926982 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, 0.034161490683229816 AS "Proba_0.0", -3.37665627275 AS "LogProba_0.0", 0.9658385093167702 AS "Proba_1.0", -0.0347586333652 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_26' AS feature, 0.20180000364780426 AS threshold, 132 AS count, 1 AS depth, 0.8341013824884793 AS "Proba_0.0", -0.181400322275 AS "LogProba_0.0", 0.16589861751152074 AS "Proba_1.0", -1.79637841508 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_13' AS feature, 43.96500015258789 AS threshold, 21 AS count, 2 AS depth, 0.1891891891891892 AS "Proba_0.0", -1.66500776359 AS "LogProba_0.0", 0.8108108108108109 AS "Proba_1.0", -0.209720530982 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.5384615384615384 AS "Proba_0.0", -0.619039208406 AS "LogProba_0.0", 0.46153846153846156 AS "Proba_1.0", -0.773189888233 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_20' AS feature, 16.790000915527344 AS threshold, 111 AS count, 2 AS depth, 0.9666666666666667 AS "Proba_0.0", -0.0339015516757 AS "LogProba_0.0", 0.03333333333333333 AS "Proba_1.0", -3.40119738166 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.6470588235294118 AS "Proba_0.0", -0.435318071258 AS "LogProba_0.0", 0.35294117647058826 AS "Proba_1.0", -1.04145387483 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0.0" AS "Proba_5_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1.0" AS "Proba_5_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_5_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 694.5) THEN CASE WHEN ("ADS"."Feature_29" <= 0.10109999775886536) THEN CASE WHEN ("ADS"."Feature_7" <= 0.08014000207185745) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_20" <= 12.90999984741211) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 1.5295000076293945) THEN CASE WHEN ("ADS"."Feature_21" <= 23.584999084472656) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_25" <= 0.1735999882221222) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 694.5 AS threshold, 359 AS count, 0 AS depth, 0.35676625659050965 AS "Proba_0.0", -1.03067445508 AS "LogProba_0.0", 0.6432337434094904 AS "Proba_1.0", -0.441247100725 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_29' AS feature, 0.10109999775886536 AS threshold, 249 AS count, 1 AS depth, 0.1188118811881188 AS "Proba_0.0", -2.13021386705 AS "LogProba_0.0", 0.8811881188118812 AS "Proba_1.0", -0.126484147109 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 0.08014000207185745 AS threshold, 209 AS count, 2 AS depth, 0.03823529411764706 AS "Proba_0.0", -3.26399626015 AS "LogProba_0.0", 0.961764705882353 AS "Proba_1.0", -0.038985446713 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 206 AS count, 3 AS depth, 0.02967359050445104 AS "Proba_0.0", -3.51749783736 AS "LogProba_0.0", 0.9703264094955489 AS "Proba_1.0", -0.0301227594551 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_20' AS feature, 12.90999984741211 AS threshold, 40 AS count, 2 AS depth, 0.546875 AS "Proba_0.0", -0.60353502187 AS "LogProba_0.0", 0.453125 AS "Proba_1.0", -0.791587253373 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, 0.813953488372093 AS "Proba_0.0", -0.205852054204 AS "LogProba_0.0", 0.18604651162790697 AS "Proba_1.0", -1.68175857401 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 1.5295000076293945 AS threshold, 110 AS count, 1 AS depth, 0.9393939393939394 AS "Proba_0.0", -0.0625203569813 AS "LogProba_0.0", 0.06060606060606061 AS "Proba_1.0", -2.80336038091 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_21' AS feature, 23.584999084472656 AS threshold, 5 AS count, 2 AS depth, 0.125 AS "Proba_0.0", -2.07944154168 AS "LogProba_0.0", 0.875 AS "Proba_1.0", -0.133531392625 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_25' AS feature, 0.1735999882221222 AS threshold, 105 AS count, 2 AS depth, 0.9808917197452229 AS "Proba_0.0", -0.0192932029347 AS "LogProba_0.0", 0.01910828025477707 AS "Proba_1.0", -3.95763351668 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 0.8125 AS "Proba_0.0", -0.207639364778 AS "LogProba_0.0", 0.1875 AS "Proba_1.0", -1.67397643357 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0.0" AS "Proba_6_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1.0" AS "Proba_6_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_6_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 0.5500500202178955) THEN CASE WHEN ("ADS"."Feature_23" <= 874.8499755859375) THEN CASE WHEN ("ADS"."Feature_25" <= 0.40869998931884766) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.20785000920295715) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.08447499573230743) THEN CASE WHEN ("ADS"."Feature_20" <= 14.369999885559082) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_23" <= 654.6500244140625) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_10' AS feature, 0.5500500202178955 AS threshold, 367 AS count, 0 AS depth, 0.36906854130052724 AS "Proba_0.0", -0.996772903409 AS "LogProba_0.0", 0.6309314586994728 AS "Proba_1.0", -0.460558045638 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_23' AS feature, 874.8499755859375 AS threshold, 291 AS count, 1 AS depth, 0.20945945945945946 AS "Proba_0.0", -1.56322506928 AS "LogProba_0.0", 0.7905405405405406 AS "Proba_1.0", -0.235038338966 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_25' AS feature, 0.40869998931884766 AS threshold, 238 AS count, 2 AS depth, 0.0851063829787234 AS "Proba_0.0", -2.46385324059 AS "LogProba_0.0", 0.9148936170212766 AS "Proba_1.0", -0.0889474860165 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 222 AS count, 3 AS depth, 0.04261363636363636 AS "Proba_0.0", -3.1555809745 AS "LogProba_0.0", 0.9573863636363636 AS "Proba_1.0", -0.0435482452457 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.7083333333333334 AS "Proba_0.0", -0.344840486292 AS "LogProba_0.0", 0.2916666666666667 AS "Proba_1.0", -1.23214368129 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_26' AS feature, 0.20785000920295715 AS threshold, 53 AS count, 2 AS depth, 0.8970588235294118 AS "Proba_0.0", -0.108633841003 AS "LogProba_0.0", 0.10294117647058823 AS "Proba_1.0", -2.27359755612 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 0.9827586206896551 AS "Proba_0.0", -0.0173917427119 AS "LogProba_0.0", 0.017241379310344827 AS "Proba_1.0", -4.06044301055 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 0.08447499573230743 AS threshold, 76 AS count, 1 AS depth, 0.936 AS "Proba_0.0", -0.0661398025045 AS "LogProba_0.0", 0.064 AS "Proba_1.0", -2.74887219562 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_20' AS feature, 14.369999885559082 AS threshold, 7 AS count, 2 AS depth, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.7777777777777778 AS "Proba_1.0", -0.251314428281 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_23' AS feature, 654.6500244140625 AS threshold, 69 AS count, 2 AS depth, 0.9913793103448276 AS "Proba_0.0", -0.00865806274311 AS "LogProba_0.0", 0.008620689655172414 AS "Proba_1.0", -4.75359019111 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0.0" AS "Proba_7_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1.0" AS "Proba_7_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_7_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 16.795000076293945) THEN CASE WHEN ("ADS"."Feature_27" <= 0.15129999816417694) THEN CASE WHEN ("ADS"."Feature_23" <= 754.0999755859375) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.09237000346183777) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_28" <= 0.19214999675750732) THEN CASE WHEN ("ADS"."Feature_24" <= 0.11146000027656555) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_11" <= 0.47315001487731934) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_20' AS feature, 16.795000076293945 AS threshold, 362 AS count, 0 AS depth, 0.3866432337434095 AS "Proba_0.0", -0.950252887774 AS "LogProba_0.0", 0.6133567662565905 AS "Proba_1.0", -0.488808511924 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.15129999816417694 AS threshold, 238 AS count, 1 AS depth, 0.0855614973262032 AS "Proba_0.0", -2.45851989461 AS "LogProba_0.0", 0.9144385026737968 AS "Proba_1.0", -0.0894450603519 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_23' AS feature, 754.0999755859375 AS threshold, 222 AS count, 2 AS depth, 0.025936599423631124 AS "Proba_0.0", -3.65210020261 AS "LogProba_0.0", 0.9740634005763689 AS "Proba_1.0", -0.0262788844638 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, 0.006309148264984227 AS "Proba_0.0", -5.06575459332 AS "LogProba_0.0", 0.9936908517350158 AS "Proba_1.0", -0.00632913505165 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 0.23333333333333334 AS "Proba_0.0", -1.45528723261 AS "LogProba_0.0", 0.7666666666666667 AS "Proba_1.0", -0.265703165733 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.09237000346183777 AS threshold, 16 AS count, 2 AS depth, 0.8518518518518519 AS "Proba_0.0", -0.160342650075 AS "LogProba_0.0", 0.14814814814814814 AS "Proba_1.0", -1.90954250488 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 0.92 AS "Proba_0.0", -0.0833816089391 AS "LogProba_0.0", 0.08 AS "Proba_1.0", -2.52572864431 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_28' AS feature, 0.19214999675750732 AS threshold, 124 AS count, 1 AS depth, 0.9641025641025641 AS "Proba_0.0", -0.0365575957338 AS "LogProba_0.0", 0.035897435897435895 AS "Proba_1.0", -3.32708940951 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_24' AS feature, 0.11146000027656555 AS threshold, 2 AS count, 2 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_11' AS feature, 0.47315001487731934 AS threshold, 122 AS count, 2 AS depth, 0.9739583333333334 AS "Proba_0.0", -0.0263867551732 AS "LogProba_0.0", 0.026041666666666668 AS "Proba_1.0", -3.64805745959 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.8 AS "Proba_1.0", -0.223143551314 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 118 AS count, 3 AS depth, 0.9946524064171123 AS "Proba_0.0", -0.00536194314139 AS "LogProba_0.0", 0.0053475935828877 AS "Proba_1.0", -5.23110861685 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0.0" AS "Proba_8_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1.0" AS "Proba_8_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_8_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.051419999450445175) THEN CASE WHEN ("ADS"."Feature_27" <= 0.09917999804019928) THEN CASE WHEN ("ADS"."Feature_23" <= 896.7000122070312) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.07304999977350235) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.07443500310182571) THEN CASE WHEN ("ADS"."Feature_27" <= 0.14634999632835388) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_17" <= 0.04360000044107437) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.051419999450445175 AS threshold, 373 AS count, 0 AS depth, 0.3655536028119508 AS "Proba_0.0", -1.00634235443 AS "LogProba_0.0", 0.6344463971880492 AS "Proba_1.0", -0.455002475793 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.09917999804019928 AS threshold, 226 AS count, 1 AS depth, 0.0603448275862069 AS "Proba_0.0", -2.80768004205 AS "LogProba_0.0", 0.9396551724137931 AS "Proba_1.0", -0.0622423088772 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_23' AS feature, 896.7000122070312 AS threshold, 179 AS count, 2 AS depth, 0.014598540145985401 AS "Proba_0.0", -4.22683374527 AS "LogProba_0.0", 0.9854014598540146 AS "Proba_1.0", -0.0147061473897 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, 0.003745318352059925 AS "Proba_0.0", -5.5872486584 AS "LogProba_0.0", 0.9962546816479401 AS "Proba_1.0", -0.00375234961855 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.42857142857142855 AS "Proba_0.0", -0.847297860387 AS "LogProba_0.0", 0.5714285714285714 AS "Proba_1.0", -0.559615787935 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, 0.07304999977350235 AS threshold, 47 AS count, 2 AS depth, 0.22972972972972974 AS "Proba_0.0", -1.47085174915 AS "LogProba_0.0", 0.7702702702702703 AS "Proba_1.0", -0.26101382537 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.631578947368421 AS "Proba_0.0", -0.459532329378 AS "LogProba_0.0", 0.3684210526315789 AS "Proba_1.0", -0.998528830111 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, 0.09090909090909091 AS "Proba_0.0", -2.3978952728 AS "LogProba_0.0", 0.9090909090909091 AS "Proba_1.0", -0.0953101798043 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, 0.07443500310182571 AS threshold, 147 AS count, 1 AS depth, 0.8461538461538461 AS "Proba_0.0", -0.167054084663 AS "LogProba_0.0", 0.15384615384615385 AS "Proba_1.0", -1.8718021769 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_27' AS feature, 0.14634999632835388 AS threshold, 56 AS count, 2 AS depth, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 0.32608695652173914 AS "Proba_0.0", -1.12059119539 AS "LogProba_0.0", 0.6739130434782609 AS "Proba_1.0", -0.394654192004 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 0.98 AS "Proba_0.0", -0.0202027073175 AS "LogProba_0.0", 0.02 AS "Proba_1.0", -3.91202300543 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_17' AS feature, 0.04360000044107437 AS threshold, 91 AS count, 2 AS depth, 0.984 AS "Proba_0.0", -0.0161293819299 AS "LogProba_0.0", 0.016 AS "Proba_1.0", -4.13516655674 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 90 AS count, 3 AS depth, 0.9919354838709677 AS "Proba_0.0", -0.00809721023262 AS "LogProba_0.0", 0.008064516129032258 AS "Proba_1.0", -4.82028156561 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0.0" AS "Proba_9_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1.0" AS "Proba_9_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_9_1" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte