-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= -1.0389848947525024) THEN CASE WHEN ("ADS"."Feature_7" <= -2.1721322536468506) THEN 2 ELSE CASE WHEN ("ADS"."Feature_15" <= 0.6894828081130981) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_17" <= -0.7310702800750732) THEN CASE WHEN ("ADS"."Feature_5" <= -0.7810018658638) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_6" <= 1.1523327827453613) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -1.0389848947525024 AS threshold, 64 AS count, 0 AS depth, 0.19 AS "Proba_0.0", -1.66073120682 AS "LogProba_0.0", 0.21 AS "Proba_1.0", -1.56064774826 AS "LogProba_1.0", 0.29 AS "Proba_2.0", -1.237874356 AS "LogProba_2.0", 0.31 AS "Proba_3.0", -1.1711829815 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, -2.1721322536468506 AS threshold, 12 AS count, 1 AS depth, 0.22727272727272727 AS "Proba_0.0", -1.48160454092 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.7727272727272727 AS "Proba_2.0", -0.257829109302 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, 0.6894828081130981 AS threshold, 10 AS count, 2 AS depth, 0.10526315789473684 AS "Proba_0.0", -2.25129179861 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.8947368421052632 AS "Proba_2.0", -0.11122563511 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_17' AS feature, -0.7310702800750732 AS threshold, 52 AS count, 1 AS depth, 0.1794871794871795 AS "Proba_0.0", -1.71765149707 AS "LogProba_0.0", 0.2692307692307692 AS "Proba_1.0", -1.31218638897 AS "LogProba_1.0", 0.15384615384615385 AS "Proba_2.0", -1.8718021769 AS "LogProba_2.0", 0.3974358974358974 AS "Proba_3.0", -0.922721622204 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_5' AS feature, -0.7810018658638 AS threshold, 28 AS count, 2 AS depth, 0.2619047619047619 AS "Proba_0.0", -1.33977434548 AS "LogProba_0.0", 0.40476190476190477 AS "Proba_1.0", -0.904456274227 AS "LogProba_1.0", 0.16666666666666666 AS "Proba_2.0", -1.79175946923 AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.1 AS "Proba_0.0", -2.30258509299 AS "LogProba_0.0", 0.9 AS "Proba_1.0", -0.105360515658 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 0.3125 AS "Proba_0.0", -1.16315080981 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.21875 AS "Proba_2.0", -1.51982575374 AS "LogProba_2.0", 0.21875 AS "Proba_3.0", -1.51982575374 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_6' AS feature, 1.1523327827453613 AS threshold, 24 AS count, 2 AS depth, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.1111111111111111 AS "Proba_1.0", -2.19722457734 AS "LogProba_1.0", 0.1388888888888889 AS "Proba_2.0", -1.97408102602 AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 0.08823529411764706 AS "Proba_0.0", -2.42774823595 AS "LogProba_0.0", 0.11764705882352941 AS "Proba_1.0", -2.1400661635 AS "LogProba_1.0", 0.08823529411764706 AS "Proba_2.0", -2.42774823595 AS "LogProba_2.0", 0.7058823529411765 AS "Proba_3.0", -0.348306694268 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= -0.5835416913032532) THEN CASE WHEN ("ADS"."Feature_15" <= -0.7978309988975525) THEN CASE WHEN ("ADS"."Feature_9" <= 1.1393554210662842) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= -1.4580140113830566) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_13" <= -0.8166304230690002) THEN CASE WHEN ("ADS"."Feature_9" <= 0.03852333873510361) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.6576772332191467) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -0.5835416913032532 AS threshold, 64 AS count, 0 AS depth, 0.3 AS "Proba_0.0", -1.20397280433 AS "LogProba_0.0", 0.22 AS "Proba_1.0", -1.51412773263 AS "LogProba_1.0", 0.33 AS "Proba_2.0", -1.10866262452 AS "LogProba_2.0", 0.15 AS "Proba_3.0", -1.89711998489 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_15' AS feature, -0.7978309988975525 AS threshold, 26 AS count, 1 AS depth, 0.5454545454545454 AS "Proba_0.0", -0.60613580357 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.4318181818181818 AS "Proba_2.0", -0.839750654752 AS "LogProba_2.0", 0.022727272727272728 AS "Proba_3.0", -3.78418963392 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_9' AS feature, 1.1393554210662842 AS threshold, 9 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.9285714285714286 AS "Proba_2.0", -0.0741079721537 AS "LogProba_2.0", 0.07142857142857142 AS "Proba_3.0", -2.63905732962 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, -1.4580140113830566 AS threshold, 17 AS count, 2 AS depth, 0.8 AS "Proba_0.0", -0.223143551314 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.8846153846153846 AS "Proba_0.0", -0.122602322092 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.11538461538461539 AS "Proba_2.0", -2.15948424935 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_13' AS feature, -0.8166304230690002 AS threshold, 38 AS count, 1 AS depth, 0.10714285714285714 AS "Proba_0.0", -2.23359222151 AS "LogProba_0.0", 0.39285714285714285 AS "Proba_1.0", -0.934309237377 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.03852333873510361 AS threshold, 8 AS count, 2 AS depth, 0.06666666666666667 AS "Proba_0.0", -2.7080502011 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.6 AS "Proba_2.0", -0.510825623766 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.7142857142857143 AS "Proba_1.0", -0.336472236621 AS "LogProba_1.0", 0.2857142857142857 AS "Proba_2.0", -1.2527629685 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 0.125 AS "Proba_0.0", -2.07944154168 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.875 AS "Proba_2.0", -0.133531392625 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.6576772332191467 AS threshold, 30 AS count, 2 AS depth, 0.12195121951219512 AS "Proba_0.0", -2.10413415427 AS "LogProba_0.0", 0.4146341463414634 AS "Proba_1.0", -0.880358722648 AS "LogProba_1.0", 0.12195121951219512 AS "Proba_2.0", -2.10413415427 AS "LogProba_2.0", 0.34146341463414637 AS "Proba_3.0", -1.07451473709 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 0.18518518518518517 AS "Proba_0.0", -1.68639895357 AS "LogProba_0.0", 0.25925925925925924 AS "Proba_1.0", -1.34992671695 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.4444444444444444 AS "Proba_3.0", -0.810930216216 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.7142857142857143 AS "Proba_1.0", -0.336472236621 AS "LogProba_1.0", 0.14285714285714285 AS "Proba_2.0", -1.94591014906 AS "LogProba_2.0", 0.14285714285714285 AS "Proba_3.0", -1.94591014906 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= 0.21115386486053467) THEN CASE WHEN ("ADS"."Feature_11" <= -0.6212227940559387) THEN 2 ELSE CASE WHEN ("ADS"."Feature_17" <= -0.22988763451576233) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -1.3036916255950928) THEN CASE WHEN ("ADS"."Feature_7" <= 0.4986957311630249) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_1" <= -0.5187358856201172) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.21115386486053467 AS threshold, 64 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.3 AS "Proba_1.0", -1.20397280433 AS "LogProba_1.0", 0.27 AS "Proba_2.0", -1.30933331998 AS "LogProba_2.0", 0.18 AS "Proba_3.0", -1.71479842809 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_11' AS feature, -0.6212227940559387 AS threshold, 29 AS count, 1 AS depth, 0.4888888888888889 AS "Proba_0.0", -0.715620036412 AS "LogProba_0.0", 0.06666666666666667 AS "Proba_1.0", -2.7080502011 AS "LogProba_1.0", 0.35555555555555557 AS "Proba_2.0", -1.03407376753 AS "LogProba_2.0", 0.08888888888888889 AS "Proba_3.0", -2.42036812865 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_17' AS feature, -0.22988763451576233 AS threshold, 22 AS count, 2 AS depth, 0.30303030303030304 AS "Proba_0.0", -1.19392246847 AS "LogProba_0.0", 0.09090909090909091 AS "Proba_1.0", -2.3978952728 AS "LogProba_1.0", 0.48484848484848486 AS "Proba_2.0", -0.723918839227 AS "LogProba_2.0", 0.12121212121212122 AS "Proba_3.0", -2.11021320035 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.5454545454545454 AS "Proba_0.0", -0.60613580357 AS "LogProba_0.0", 0.2727272727272727 AS "Proba_1.0", -1.29928298413 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.18181818181818182 AS "Proba_3.0", -1.70474809224 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.18181818181818182 AS "Proba_0.0", -1.70474809224 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.7272727272727273 AS "Proba_2.0", -0.318453731119 AS "LogProba_2.0", 0.09090909090909091 AS "Proba_3.0", -2.3978952728 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, -1.3036916255950928 AS threshold, 35 AS count, 1 AS depth, 0.05454545454545454 AS "Proba_0.0", -2.90872089656 AS "LogProba_0.0", 0.4909090909090909 AS "Proba_1.0", -0.711496319228 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.2545454545454545 AS "Proba_3.0", -1.36827585562 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_7' AS feature, 0.4986957311630249 AS threshold, 5 AS count, 2 AS depth, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_1' AS feature, -0.5187358856201172 AS threshold, 30 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5869565217391305 AS "Proba_1.0", -0.532804530485 AS "LogProba_1.0", 0.2391304347826087 AS "Proba_2.0", -1.43074612369 AS "LogProba_2.0", 0.17391304347826086 AS "Proba_3.0", -1.74919985481 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.8333333333333334 AS "Proba_2.0", -0.182321556794 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.65 AS "Proba_1.0", -0.430782916092 AS "LogProba_1.0", 0.15 AS "Proba_2.0", -1.89711998489 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= -0.7389677166938782) THEN CASE WHEN ("ADS"."Feature_2" <= 0.52969890832901) THEN 2 ELSE CASE WHEN ("ADS"."Feature_8" <= -1.4376170635223389) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_1" <= -1.3056929111480713) THEN 7 ELSE CASE WHEN ("ADS"."Feature_2" <= 0.8889840841293335) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, -0.7389677166938782 AS threshold, 61 AS count, 0 AS depth, 0.24 AS "Proba_0.0", -1.42711635564 AS "LogProba_0.0", 0.24 AS "Proba_1.0", -1.42711635564 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.28 AS "Proba_3.0", -1.27296567581 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.52969890832901 AS threshold, 15 AS count, 1 AS depth, 0.038461538461538464 AS "Proba_0.0", -3.25809653802 AS "LogProba_0.0", 0.19230769230769232 AS "Proba_1.0", -1.64865862559 AS "LogProba_1.0", 0.6538461538461539 AS "Proba_2.0", -0.424883193965 AS "LogProba_2.0", 0.11538461538461539 AS "Proba_3.0", -2.15948424935 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_8' AS feature, -1.4376170635223389 AS threshold, 6 AS count, 2 AS depth, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.5555555555555556 AS "Proba_1.0", -0.587786664902 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.8333333333333334 AS "Proba_1.0", -0.182321556794 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_1' AS feature, -1.3056929111480713 AS threshold, 46 AS count, 1 AS depth, 0.3108108108108108 AS "Proba_0.0", -1.16857087728 AS "LogProba_0.0", 0.25675675675675674 AS "Proba_1.0", -1.35962611404 AS "LogProba_1.0", 0.0945945945945946 AS "Proba_2.0", -2.35815494415 AS "LogProba_2.0", 0.33783783783783783 AS "Proba_3.0", -1.08518926834 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.8889840841293335 AS threshold, 43 AS count, 2 AS depth, 0.2153846153846154 AS "Proba_0.0", -1.53532994028 AS "LogProba_0.0", 0.2923076923076923 AS "Proba_1.0", -1.22994829073 AS "LogProba_1.0", 0.1076923076923077 AS "Proba_2.0", -2.22847712084 AS "LogProba_2.0", 0.38461538461538464 AS "Proba_3.0", -0.955511445027 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.16326530612244897 AS "Proba_1.0", -1.81237875643 AS "LogProba_1.0", 0.10204081632653061 AS "Proba_2.0", -2.28238238568 AS "LogProba_2.0", 0.4489795918367347 AS "Proba_3.0", -0.800777844752 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.6875 AS "Proba_1.0", -0.374693449441 AS "LogProba_1.0", 0.125 AS "Proba_2.0", -2.07944154168 AS "LogProba_2.0", 0.1875 AS "Proba_3.0", -1.67397643357 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 0.790762186050415) THEN CASE WHEN ("ADS"."Feature_16" <= -0.40143883228302) THEN CASE WHEN ("ADS"."Feature_16" <= -2.564420700073242) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_19" <= -0.7465178966522217) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= -0.33747598528862) THEN 9 ELSE CASE WHEN ("ADS"."Feature_13" <= -0.9133577942848206) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 0.790762186050415 AS threshold, 65 AS count, 0 AS depth, 0.19 AS "Proba_0.0", -1.66073120682 AS "LogProba_0.0", 0.23 AS "Proba_1.0", -1.46967597006 AS "LogProba_1.0", 0.24 AS "Proba_2.0", -1.42711635564 AS "LogProba_2.0", 0.34 AS "Proba_3.0", -1.07880966137 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, -0.40143883228302 AS threshold, 49 AS count, 1 AS depth, 0.2463768115942029 AS "Proba_0.0", -1.40089316054 AS "LogProba_0.0", 0.3188405797101449 AS "Proba_1.0", -1.14306405124 AS "LogProba_1.0", 0.2463768115942029 AS "Proba_2.0", -1.40089316054 AS "LogProba_2.0", 0.18840579710144928 AS "Proba_3.0", -1.66915714714 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -2.564420700073242 AS threshold, 17 AS count, 2 AS depth, 0.5416666666666666 AS "Proba_0.0", -0.613104472886 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.4583333333333333 AS "Proba_2.0", -0.78015855755 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.6842105263157895 AS "Proba_0.0", -0.379489621705 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.3157894736842105 AS "Proba_2.0", -1.15267950994 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_19' AS feature, -0.7465178966522217 AS threshold, 32 AS count, 2 AS depth, 0.08888888888888889 AS "Proba_0.0", -2.42036812865 AS "LogProba_0.0", 0.4888888888888889 AS "Proba_1.0", -0.715620036412 AS "LogProba_1.0", 0.13333333333333333 AS "Proba_2.0", -2.01490302054 AS "LogProba_2.0", 0.28888888888888886 AS "Proba_3.0", -1.24171313231 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.125 AS "Proba_1.0", -2.07944154168 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.625 AS "Proba_3.0", -0.470003629246 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 0.05405405405405406 AS "Proba_0.0", -2.91777073208 AS "LogProba_0.0", 0.5675675675675675 AS "Proba_1.0", -0.566395474921 AS "LogProba_1.0", 0.16216216216216217 AS "Proba_2.0", -1.81915844342 AS "LogProba_2.0", 0.21621621621621623 AS "Proba_3.0", -1.53147637096 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_10' AS feature, -0.33747598528862 AS threshold, 16 AS count, 1 AS depth, 0.06451612903225806 AS "Proba_0.0", -2.74084002393 AS "LogProba_0.0", 0.03225806451612903 AS "Proba_1.0", -3.43398720449 AS "LogProba_1.0", 0.22580645161290322 AS "Proba_2.0", -1.48807705543 AS "LogProba_2.0", 0.6774193548387096 AS "Proba_3.0", -0.389464766762 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_13' AS feature, -0.9133577942848206 AS threshold, 10 AS count, 2 AS depth, 0.125 AS "Proba_0.0", -2.07944154168 AS "LogProba_0.0", 0.0625 AS "Proba_1.0", -2.77258872224 AS "LogProba_1.0", 0.4375 AS "Proba_2.0", -0.826678573184 AS "LogProba_2.0", 0.375 AS "Proba_3.0", -0.980829253012 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.08333333333333333 AS "Proba_1.0", -2.48490664979 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Proba_2.0" AS "Proba_2.0", "DT_node_data_4"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_4"."Proba_3.0" AS "Proba_3.0", "DT_node_data_4"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0.0" AS "Proba_4_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1.0" AS "Proba_4_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2.0" AS "Proba_4_2", "DT_Output_4"."LogProba_2.0" AS "LogProba_4_2", CAST(NULL AS FLOAT) AS "Score_4_3", "DT_Output_4"."Proba_3.0" AS "Proba_4_3", "DT_Output_4"."LogProba_3.0" AS "LogProba_4_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= -0.40364205837249756) THEN CASE WHEN ("ADS"."Feature_4" <= -0.41986554861068726) THEN CASE WHEN ("ADS"."Feature_3" <= 0.903072714805603) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= -0.9624249339103699) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.18223249912261963) THEN CASE WHEN ("ADS"."Feature_16" <= 0.41702723503112793) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_10" <= -1.5565439462661743) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.40364205837249756 AS threshold, 63 AS count, 0 AS depth, 0.26 AS "Proba_0.0", -1.34707364797 AS "LogProba_0.0", 0.18 AS "Proba_1.0", -1.71479842809 AS "LogProba_1.0", 0.33 AS "Proba_2.0", -1.10866262452 AS "LogProba_2.0", 0.23 AS "Proba_3.0", -1.46967597006 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -0.41986554861068726 AS threshold, 31 AS count, 1 AS depth, 0.2777777777777778 AS "Proba_0.0", -1.28093384546 AS "LogProba_0.0", 0.18518518518518517 AS "Proba_1.0", -1.68639895357 AS "LogProba_1.0", 0.5370370370370371 AS "Proba_2.0", -0.621688216578 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.903072714805603 AS threshold, 11 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.13636363636363635 AS "Proba_1.0", -1.99243016469 AS "LogProba_1.0", 0.8636363636363636 AS "Proba_2.0", -0.146603474192 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_18' AS feature, -0.9624249339103699 AS threshold, 20 AS count, 2 AS depth, 0.46875 AS "Proba_0.0", -0.757685701698 AS "LogProba_0.0", 0.21875 AS "Proba_1.0", -1.51982575374 AS "LogProba_1.0", 0.3125 AS "Proba_2.0", -1.16315080981 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.14285714285714285 AS "Proba_0.0", -1.94591014906 AS "LogProba_0.0", 0.7142857142857143 AS "Proba_1.0", -0.336472236621 AS "LogProba_1.0", 0.14285714285714285 AS "Proba_2.0", -1.94591014906 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.56 AS "Proba_0.0", -0.579818495253 AS "LogProba_0.0", 0.08 AS "Proba_1.0", -2.52572864431 AS "LogProba_1.0", 0.36 AS "Proba_2.0", -1.02165124753 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, -0.18223249912261963 AS threshold, 32 AS count, 1 AS depth, 0.2391304347826087 AS "Proba_0.0", -1.43074612369 AS "LogProba_0.0", 0.17391304347826086 AS "Proba_1.0", -1.74919985481 AS "LogProba_1.0", 0.08695652173913043 AS "Proba_2.0", -2.44234703537 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_16' AS feature, 0.41702723503112793 AS threshold, 17 AS count, 2 AS depth, 0.43478260869565216 AS "Proba_0.0", -0.832909122935 AS "LogProba_0.0", 0.2608695652173913 AS "Proba_1.0", -1.3437347467 AS "LogProba_1.0", 0.13043478260869565 AS "Proba_2.0", -2.03688192726 AS "LogProba_2.0", 0.17391304347826086 AS "Proba_3.0", -1.74919985481 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.8333333333333334 AS "Proba_0.0", -0.182321556794 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5454545454545454 AS "Proba_1.0", -0.60613580357 AS "LogProba_1.0", 0.2727272727272727 AS "Proba_2.0", -1.29928298413 AS "LogProba_2.0", 0.18181818181818182 AS "Proba_3.0", -1.70474809224 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_10' AS feature, -1.5565439462661743 AS threshold, 15 AS count, 2 AS depth, 0.043478260869565216 AS "Proba_0.0", -3.13549421593 AS "LogProba_0.0", 0.08695652173913043 AS "Proba_1.0", -2.44234703537 AS "LogProba_1.0", 0.043478260869565216 AS "Proba_2.0", -3.13549421593 AS "LogProba_2.0", 0.8260869565217391 AS "Proba_3.0", -0.191055236763 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 0.047619047619047616 AS "Proba_0.0", -3.04452243772 AS "LogProba_0.0", 0.047619047619047616 AS "Proba_1.0", -3.04452243772 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.9047619047619048 AS "Proba_3.0", -0.100083458557 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Proba_2.0" AS "Proba_2.0", "DT_node_data_5"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_5"."Proba_3.0" AS "Proba_3.0", "DT_node_data_5"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0.0" AS "Proba_5_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1.0" AS "Proba_5_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2.0" AS "Proba_5_2", "DT_Output_5"."LogProba_2.0" AS "LogProba_5_2", CAST(NULL AS FLOAT) AS "Score_5_3", "DT_Output_5"."Proba_3.0" AS "Proba_5_3", "DT_Output_5"."LogProba_3.0" AS "LogProba_5_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.31938686966896057) THEN CASE WHEN ("ADS"."Feature_1" <= -1.0886095762252808) THEN 2 ELSE CASE WHEN ("ADS"."Feature_11" <= 0.10783275216817856) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 1.2985973358154297) THEN CASE WHEN ("ADS"."Feature_18" <= 1.0746939182281494) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_0" <= 2.937857151031494) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.31938686966896057 AS threshold, 58 AS count, 0 AS depth, 0.19 AS "Proba_0.0", -1.66073120682 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.34 AS "Proba_2.0", -1.07880966137 AS "LogProba_2.0", 0.21 AS "Proba_3.0", -1.56064774826 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -1.0886095762252808 AS threshold, 37 AS count, 1 AS depth, 0.265625 AS "Proba_0.0", -1.3256697393 AS "LogProba_0.0", 0.15625 AS "Proba_1.0", -1.85629799037 AS "LogProba_1.0", 0.53125 AS "Proba_2.0", -0.632522558744 AS "LogProba_2.0", 0.046875 AS "Proba_3.0", -3.06027079469 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_11' AS feature, 0.10783275216817856 AS threshold, 33 AS count, 2 AS depth, 0.2033898305084746 AS "Proba_0.0", -1.59263079412 AS "LogProba_0.0", 0.1694915254237288 AS "Proba_1.0", -1.77495235091 AS "LogProba_1.0", 0.576271186440678 AS "Proba_2.0", -0.55117691929 AS "LogProba_2.0", 0.05084745762711865 AS "Proba_3.0", -2.97892515524 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 0.25925925925925924 AS "Proba_0.0", -1.34992671695 AS "LogProba_0.0", 0.37037037037037035 AS "Proba_1.0", -0.99325177301 AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 0.037037037037037035 AS "Proba_3.0", -3.295836866 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.15625 AS "Proba_0.0", -1.85629799037 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.78125 AS "Proba_2.0", -0.246860077932 AS "LogProba_2.0", 0.0625 AS "Proba_3.0", -2.77258872224 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_16' AS feature, 1.2985973358154297 AS threshold, 21 AS count, 1 AS depth, 0.05555555555555555 AS "Proba_0.0", -2.8903717579 AS "LogProba_0.0", 0.4444444444444444 AS "Proba_1.0", -0.810930216216 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_18' AS feature, 1.0746939182281494 AS threshold, 10 AS count, 2 AS depth, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.05555555555555555 AS "Proba_1.0", -2.8903717579 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8333333333333334 AS "Proba_3.0", -0.182321556794 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.4 AS "Proba_3.0", -0.916290731874 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_0' AS feature, 2.937857151031494 AS threshold, 11 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.8333333333333334 AS "Proba_1.0", -0.182321556794 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.75 AS "Proba_3.0", -0.287682072452 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Proba_2.0" AS "Proba_2.0", "DT_node_data_6"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_6"."Proba_3.0" AS "Proba_3.0", "DT_node_data_6"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0.0" AS "Proba_6_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1.0" AS "Proba_6_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2.0" AS "Proba_6_2", "DT_Output_6"."LogProba_2.0" AS "LogProba_6_2", CAST(NULL AS FLOAT) AS "Score_6_3", "DT_Output_6"."Proba_3.0" AS "Proba_6_3", "DT_Output_6"."LogProba_3.0" AS "LogProba_6_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= -0.5402498245239258) THEN CASE WHEN ("ADS"."Feature_4" <= 0.20181763172149658) THEN CASE WHEN ("ADS"."Feature_0" <= -4.139935493469238) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= 1.1648893356323242) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_14" <= -0.84951251745224) THEN CASE WHEN ("ADS"."Feature_6" <= 0.5711846351623535) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 0.7690119743347168) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -0.5402498245239258 AS threshold, 64 AS count, 0 AS depth, 0.22 AS "Proba_0.0", -1.51412773263 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.27 AS "Proba_2.0", -1.30933331998 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.20181763172149658 AS threshold, 19 AS count, 1 AS depth, 0.46875 AS "Proba_0.0", -0.757685701698 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.03125 AS "Proba_3.0", -3.4657359028 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -4.139935493469238 AS threshold, 8 AS count, 2 AS depth, 0.06666666666666667 AS "Proba_0.0", -2.7080502011 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.8666666666666667 AS "Proba_2.0", -0.143100843641 AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.9285714285714286 AS "Proba_2.0", -0.0741079721537 AS "LogProba_2.0", 0.07142857142857142 AS "Proba_3.0", -2.63905732962 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_11' AS feature, 1.1648893356323242 AS threshold, 11 AS count, 2 AS depth, 0.8235294117647058 AS "Proba_0.0", -0.194156014441 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.17647058823529413 AS "Proba_2.0", -1.73460105539 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_14' AS feature, -0.84951251745224 AS threshold, 45 AS count, 1 AS depth, 0.10294117647058823 AS "Proba_0.0", -2.27359755612 AS "LogProba_0.0", 0.38235294117647056 AS "Proba_1.0", -0.961411167155 AS "LogProba_1.0", 0.16176470588235295 AS "Proba_2.0", -1.82161243238 AS "LogProba_2.0", 0.35294117647058826 AS "Proba_3.0", -1.04145387483 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_6' AS feature, 0.5711846351623535 AS threshold, 4 AS count, 2 AS depth, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_12' AS feature, 0.7690119743347168 AS threshold, 41 AS count, 2 AS depth, 0.04838709677419355 AS "Proba_0.0", -3.02852209638 AS "LogProba_0.0", 0.41935483870967744 AS "Proba_1.0", -0.869037847024 AS "LogProba_1.0", 0.14516129032258066 AS "Proba_2.0", -1.92990980771 AS "LogProba_2.0", 0.3870967741935484 AS "Proba_3.0", -0.949080554697 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 0.022727272727272728 AS "Proba_0.0", -3.78418963392 AS "LogProba_0.0", 0.5227272727272727 AS "Proba_1.0", -0.648695417989 AS "LogProba_1.0", 0.1590909090909091 AS "Proba_2.0", -1.83827948486 AS "LogProba_2.0", 0.29545454545454547 AS "Proba_3.0", -1.21924027646 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.6111111111111112 AS "Proba_3.0", -0.492476485098 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Proba_2.0" AS "Proba_2.0", "DT_node_data_7"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_7"."Proba_3.0" AS "Proba_3.0", "DT_node_data_7"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0.0" AS "Proba_7_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1.0" AS "Proba_7_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2.0" AS "Proba_7_2", "DT_Output_7"."LogProba_2.0" AS "LogProba_7_2", CAST(NULL AS FLOAT) AS "Score_7_3", "DT_Output_7"."Proba_3.0" AS "Proba_7_3", "DT_Output_7"."LogProba_3.0" AS "LogProba_7_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -1.6082775592803955) THEN CASE WHEN ("ADS"."Feature_0" <= 4.141571044921875) THEN CASE WHEN ("ADS"."Feature_6" <= 0.42751795053482056) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= -0.43690842390060425) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= -0.027383951470255852) THEN CASE WHEN ("ADS"."Feature_15" <= -1.4389410018920898) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.22594520449638367) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -1.6082775592803955 AS threshold, 65 AS count, 0 AS depth, 0.33 AS "Proba_0.0", -1.10866262452 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.12 AS "Proba_2.0", -2.1202635362 AS "LogProba_2.0", 0.29 AS "Proba_3.0", -1.237874356 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 4.141571044921875 AS threshold, 18 AS count, 1 AS depth, 0.6764705882352942 AS "Proba_0.0", -0.390866308687 AS "LogProba_0.0", 0.08823529411764706 AS "Proba_1.0", -2.42774823595 AS "LogProba_1.0", 0.058823529411764705 AS "Proba_2.0", -2.83321334406 AS "LogProba_2.0", 0.17647058823529413 AS "Proba_3.0", -1.73460105539 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.42751795053482056 AS threshold, 15 AS count, 2 AS depth, 0.7931034482758621 AS "Proba_0.0", -0.231801614057 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.06896551724137931 AS "Proba_2.0", -2.67414864943 AS "LogProba_2.0", 0.13793103448275862 AS "Proba_3.0", -1.98100146887 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 0.8695652173913043 AS "Proba_0.0", -0.139761942375 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.08695652173913043 AS "Proba_2.0", -2.44234703537 AS "LogProba_2.0", 0.043478260869565216 AS "Proba_3.0", -3.13549421593 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_11' AS feature, -0.43690842390060425 AS threshold, 3 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.4 AS "Proba_3.0", -0.916290731874 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_10' AS feature, -0.027383951470255852 AS threshold, 47 AS count, 1 AS depth, 0.15151515151515152 AS "Proba_0.0", -1.88706964903 AS "LogProba_0.0", 0.3484848484848485 AS "Proba_1.0", -1.0541605261 AS "LogProba_1.0", 0.15151515151515152 AS "Proba_2.0", -1.88706964903 AS "LogProba_2.0", 0.3484848484848485 AS "Proba_3.0", -1.0541605261 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_15' AS feature, -1.4389410018920898 AS threshold, 23 AS count, 2 AS depth, 0.0967741935483871 AS "Proba_0.0", -2.33537491582 AS "LogProba_0.0", 0.16129032258064516 AS "Proba_1.0", -1.82454929205 AS "LogProba_1.0", 0.12903225806451613 AS "Proba_2.0", -2.04769284337 AS "LogProba_2.0", 0.6129032258064516 AS "Proba_3.0", -0.489548225319 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 0.10714285714285714 AS "Proba_0.0", -2.23359222151 AS "LogProba_0.0", 0.17857142857142858 AS "Proba_1.0", -1.72276659774 AS "LogProba_1.0", 0.03571428571428571 AS "Proba_2.0", -3.33220451018 AS "LogProba_2.0", 0.6785714285714286 AS "Proba_3.0", -0.387765531009 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_16' AS feature, 0.22594520449638367 AS threshold, 24 AS count, 2 AS depth, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.5142857142857142 AS "Proba_1.0", -0.664976303593 AS "LogProba_1.0", 0.17142857142857143 AS "Proba_2.0", -1.76358859226 AS "LogProba_2.0", 0.11428571428571428 AS "Proba_3.0", -2.16905370037 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 0.6363636363636364 AS "Proba_0.0", -0.451985123743 AS "LogProba_0.0", 0.09090909090909091 AS "Proba_1.0", -2.3978952728 AS "LogProba_1.0", 0.18181818181818182 AS "Proba_2.0", -1.70474809224 AS "LogProba_2.0", 0.09090909090909091 AS "Proba_3.0", -2.3978952728 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.7083333333333334 AS "Proba_1.0", -0.344840486292 AS "LogProba_1.0", 0.16666666666666666 AS "Proba_2.0", -1.79175946923 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Proba_2.0" AS "Proba_2.0", "DT_node_data_8"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_8"."Proba_3.0" AS "Proba_3.0", "DT_node_data_8"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0.0" AS "Proba_8_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1.0" AS "Proba_8_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2.0" AS "Proba_8_2", "DT_Output_8"."LogProba_2.0" AS "LogProba_8_2", CAST(NULL AS FLOAT) AS "Score_8_3", "DT_Output_8"."Proba_3.0" AS "Proba_8_3", "DT_Output_8"."LogProba_3.0" AS "LogProba_8_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= -0.05105690285563469) THEN CASE WHEN ("ADS"."Feature_4" <= -0.4968872666358948) THEN CASE WHEN ("ADS"."Feature_7" <= -0.4894191026687622) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_18" <= 1.364434003829956) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 1.4035849571228027) THEN CASE WHEN ("ADS"."Feature_13" <= -0.5992765426635742) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.08491978049278259) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -0.05105690285563469 AS threshold, 61 AS count, 0 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.26 AS "Proba_2.0", -1.34707364797 AS "LogProba_2.0", 0.29 AS "Proba_3.0", -1.237874356 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, -0.4968872666358948 AS threshold, 32 AS count, 1 AS depth, 0.4716981132075472 AS "Proba_0.0", -0.751416088684 AS "LogProba_0.0", 0.018867924528301886 AS "Proba_1.0", -3.97029191355 AS "LogProba_1.0", 0.33962264150943394 AS "Proba_2.0", -1.07992015566 AS "LogProba_2.0", 0.16981132075471697 AS "Proba_3.0", -1.77306733622 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, -0.4894191026687622 AS threshold, 11 AS count, 2 AS depth, 0.18181818181818182 AS "Proba_0.0", -1.70474809224 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.5454545454545454 AS "Proba_2.0", -0.60613580357 AS "LogProba_2.0", 0.2727272727272727 AS "Proba_3.0", -1.29928298413 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_18' AS feature, 1.364434003829956 AS threshold, 21 AS count, 2 AS depth, 0.6774193548387096 AS "Proba_0.0", -0.389464766762 AS "LogProba_0.0", 0.03225806451612903 AS "Proba_1.0", -3.43398720449 AS "LogProba_1.0", 0.1935483870967742 AS "Proba_2.0", -1.64222773526 AS "LogProba_2.0", 0.0967741935483871 AS "Proba_3.0", -2.33537491582 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.03571428571428571 AS "Proba_1.0", -3.33220451018 AS "LogProba_1.0", 0.10714285714285714 AS "Proba_2.0", -2.23359222151 AS "LogProba_2.0", 0.10714285714285714 AS "Proba_3.0", -2.23359222151 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 1.4035849571228027 AS threshold, 29 AS count, 1 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.40425531914893614 AS "Proba_1.0", -0.905708622544 AS "LogProba_1.0", 0.1702127659574468 AS "Proba_2.0", -1.77070606003 AS "LogProba_2.0", 0.425531914893617 AS "Proba_3.0", -0.854415328156 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_13' AS feature, -0.5992765426635742 AS threshold, 24 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.4864864864864865 AS "Proba_1.0", -0.720546154748 AS "LogProba_1.0", 0.02702702702702703 AS "Proba_2.0", -3.61091791264 AS "LogProba_2.0", 0.4864864864864865 AS "Proba_3.0", -0.720546154748 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.9090909090909091 AS "Proba_1.0", -0.0953101798043 AS "LogProba_1.0", 0.09090909090909091 AS "Proba_2.0", -2.3978952728 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3076923076923077 AS "Proba_1.0", -1.17865499634 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.6923076923076923 AS "Proba_3.0", -0.367724780125 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, 0.08491978049278259 AS threshold, 5 AS count, 2 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.1 AS "Proba_1.0", -2.30258509299 AS "LogProba_1.0", 0.7 AS "Proba_2.0", -0.356674943939 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Proba_2.0" AS "Proba_2.0", "DT_node_data_9"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_9"."Proba_3.0" AS "Proba_3.0", "DT_node_data_9"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0.0" AS "Proba_9_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1.0" AS "Proba_9_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2.0" AS "Proba_9_2", "DT_Output_9"."LogProba_2.0" AS "LogProba_9_2", CAST(NULL AS FLOAT) AS "Score_9_3", "DT_Output_9"."Proba_3.0" AS "Proba_9_3", "DT_Output_9"."LogProba_3.0" AS "LogProba_9_3" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_4"."Score_4_2" AS "Score_4_2", "RF_Tree_4"."Proba_4_2" AS "Proba_4_2", "RF_Tree_4"."LogProba_4_2" AS "LogProba_4_2", "RF_Tree_4"."Score_4_3" AS "Score_4_3", "RF_Tree_4"."Proba_4_3" AS "Proba_4_3", "RF_Tree_4"."LogProba_4_3" AS "LogProba_4_3", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_5"."Score_5_2" AS "Score_5_2", "RF_Tree_5"."Proba_5_2" AS "Proba_5_2", "RF_Tree_5"."LogProba_5_2" AS "LogProba_5_2", "RF_Tree_5"."Score_5_3" AS "Score_5_3", "RF_Tree_5"."Proba_5_3" AS "Proba_5_3", "RF_Tree_5"."LogProba_5_3" AS "LogProba_5_3", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_6"."Score_6_2" AS "Score_6_2", "RF_Tree_6"."Proba_6_2" AS "Proba_6_2", "RF_Tree_6"."LogProba_6_2" AS "LogProba_6_2", "RF_Tree_6"."Score_6_3" AS "Score_6_3", "RF_Tree_6"."Proba_6_3" AS "Proba_6_3", "RF_Tree_6"."LogProba_6_3" AS "LogProba_6_3", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_7"."Score_7_2" AS "Score_7_2", "RF_Tree_7"."Proba_7_2" AS "Proba_7_2", "RF_Tree_7"."LogProba_7_2" AS "LogProba_7_2", "RF_Tree_7"."Score_7_3" AS "Score_7_3", "RF_Tree_7"."Proba_7_3" AS "Proba_7_3", "RF_Tree_7"."LogProba_7_3" AS "LogProba_7_3", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_8"."Score_8_2" AS "Score_8_2", "RF_Tree_8"."Proba_8_2" AS "Proba_8_2", "RF_Tree_8"."LogProba_8_2" AS "LogProba_8_2", "RF_Tree_8"."Score_8_3" AS "Score_8_3", "RF_Tree_8"."Proba_8_3" AS "Proba_8_3", "RF_Tree_8"."LogProba_8_3" AS "LogProba_8_3", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1", "RF_Tree_9"."Score_9_2" AS "Score_9_2", "RF_Tree_9"."Proba_9_2" AS "Proba_9_2", "RF_Tree_9"."LogProba_9_2" AS "LogProba_9_2", "RF_Tree_9"."Score_9_3" AS "Score_9_3", "RF_Tree_9"."Proba_9_3" AS "Proba_9_3", "RF_Tree_9"."LogProba_9_3" AS "LogProba_9_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 10 + "RF_Join_CTE"."Score_1_2" / 10 + "RF_Join_CTE"."Score_2_2" / 10 + "RF_Join_CTE"."Score_3_2" / 10 + "RF_Join_CTE"."Score_4_2" / 10 + "RF_Join_CTE"."Score_5_2" / 10 + "RF_Join_CTE"."Score_6_2" / 10 + "RF_Join_CTE"."Score_7_2" / 10 + "RF_Join_CTE"."Score_8_2" / 10 + "RF_Join_CTE"."Score_9_2" / 10 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 10 + "RF_Join_CTE"."Proba_1_2" / 10 + "RF_Join_CTE"."Proba_2_2" / 10 + "RF_Join_CTE"."Proba_3_2" / 10 + "RF_Join_CTE"."Proba_4_2" / 10 + "RF_Join_CTE"."Proba_5_2" / 10 + "RF_Join_CTE"."Proba_6_2" / 10 + "RF_Join_CTE"."Proba_7_2" / 10 + "RF_Join_CTE"."Proba_8_2" / 10 + "RF_Join_CTE"."Proba_9_2" / 10 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 10 + "RF_Join_CTE"."LogProba_1_2" / 10 + "RF_Join_CTE"."LogProba_2_2" / 10 + "RF_Join_CTE"."LogProba_3_2" / 10 + "RF_Join_CTE"."LogProba_4_2" / 10 + "RF_Join_CTE"."LogProba_5_2" / 10 + "RF_Join_CTE"."LogProba_6_2" / 10 + "RF_Join_CTE"."LogProba_7_2" / 10 + "RF_Join_CTE"."LogProba_8_2" / 10 + "RF_Join_CTE"."LogProba_9_2" / 10 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 10 + "RF_Join_CTE"."Score_1_3" / 10 + "RF_Join_CTE"."Score_2_3" / 10 + "RF_Join_CTE"."Score_3_3" / 10 + "RF_Join_CTE"."Score_4_3" / 10 + "RF_Join_CTE"."Score_5_3" / 10 + "RF_Join_CTE"."Score_6_3" / 10 + "RF_Join_CTE"."Score_7_3" / 10 + "RF_Join_CTE"."Score_8_3" / 10 + "RF_Join_CTE"."Score_9_3" / 10 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 10 + "RF_Join_CTE"."Proba_1_3" / 10 + "RF_Join_CTE"."Proba_2_3" / 10 + "RF_Join_CTE"."Proba_3_3" / 10 + "RF_Join_CTE"."Proba_4_3" / 10 + "RF_Join_CTE"."Proba_5_3" / 10 + "RF_Join_CTE"."Proba_6_3" / 10 + "RF_Join_CTE"."Proba_7_3" / 10 + "RF_Join_CTE"."Proba_8_3" / 10 + "RF_Join_CTE"."Proba_9_3" / 10 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 10 + "RF_Join_CTE"."LogProba_1_3" / 10 + "RF_Join_CTE"."LogProba_2_3" / 10 + "RF_Join_CTE"."LogProba_3_3" / 10 + "RF_Join_CTE"."LogProba_4_3" / 10 + "RF_Join_CTE"."LogProba_5_3" / 10 + "RF_Join_CTE"."LogProba_6_3" / 10 + "RF_Join_CTE"."LogProba_7_3" / 10 + "RF_Join_CTE"."LogProba_8_3" / 10 + "RF_Join_CTE"."LogProba_9_3" / 10 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte