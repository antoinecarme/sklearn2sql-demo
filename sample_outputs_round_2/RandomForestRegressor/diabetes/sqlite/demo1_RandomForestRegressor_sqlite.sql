-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= -0.005612778477370739) THEN CASE WHEN ("ADS"."Feature_2" <= 0.0061888848431408405) THEN CASE WHEN ("ADS"."Feature_7" <= 0.06069315969944) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.04941532015800476) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.014811381697654724) THEN CASE WHEN ("ADS"."Feature_2" <= -0.02884000726044178) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.06870198249816895) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.005612778477370739 AS threshold, 276 AS count, 0 AS depth, 154.57466063348417 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 126 AS count, 1 AS depth, 103.56060606060606 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 0.06069315969944 AS threshold, 101 AS count, 2 AS depth, 90.1358024691358 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, 89.12422360248448 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 253.0 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.04941532015800476 AS threshold, 25 AS count, 2 AS depth, 163.97222222222223 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 136.30769230769232 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 235.9 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.014811381697654724 AS threshold, 150 AS count, 1 AS depth, 195.97131147540983 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, -0.02884000726044178 AS threshold, 73 AS count, 2 AS depth, 162.2719298245614 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 129.94444444444446 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 177.19230769230768 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.06870198249816895 AS threshold, 77 AS count, 2 AS depth, 225.52307692307693 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, 208.77173913043478 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 266.07894736842104 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= -0.00016888421669136733) THEN CASE WHEN ("ADS"."Feature_2" <= 0.0061888848431408405) THEN CASE WHEN ("ADS"."Feature_6" <= 0.057844195514917374) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.039086706936359406) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.015350287780165672) THEN CASE WHEN ("ADS"."Feature_0" <= 0.06531994044780731) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_9" <= -0.015575071796774864) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00016888421669136733 AS threshold, 278 AS count, 0 AS depth, 148.2285067873303 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 146 AS count, 1 AS depth, 110.47619047619048 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.057844195514917374 AS threshold, 115 AS count, 2 AS depth, 99.42696629213484 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, 108.06349206349206 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 78.5 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.039086706936359406 AS threshold, 31 AS count, 2 AS depth, 147.58490566037736 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 136.6 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 181.3846153846154 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.015350287780165672 AS threshold, 132 AS count, 1 AS depth, 189.55924170616115 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.06531994044780731 AS threshold, 72 AS count, 2 AS depth, 161.43697478991598 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 66 AS count, 3 AS depth, 152.9158878504673 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 237.41666666666666 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, -0.015575071796774864 AS threshold, 60 AS count, 2 AS depth, 225.93478260869566 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 132.9090909090909 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 238.5679012345679 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.0013557998463511467) THEN CASE WHEN ("ADS"."Feature_7" <= 0.03061874583363533) THEN CASE WHEN ("ADS"."Feature_8" <= -0.036472536623477936) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.09626181423664093) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.025845997035503387) THEN CASE WHEN ("ADS"."Feature_8" <= -0.04049498960375786) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.012106924317777157) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.0013557998463511467 AS threshold, 275 AS count, 0 AS depth, 157.3552036199095 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 0.03061874583363533 AS threshold, 153 AS count, 1 AS depth, 119.3061224489796 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.036472536623477936 AS threshold, 124 AS count, 2 AS depth, 107.53266331658291 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 86.44 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, 120.29032258064517 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 0.09626181423664093 AS threshold, 29 AS count, 2 AS depth, 170.2391304347826 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 160.5952380952381 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 271.5 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_9' AS feature, 0.025845997035503387 AS threshold, 122 AS count, 1 AS depth, 204.6751269035533 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, -0.04049498960375786 AS threshold, 79 AS count, 2 AS depth, 179.01612903225808 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 99.93333333333334 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, 189.89908256880733 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_6' AS feature, -0.012106924317777157 AS threshold, 43 AS count, 2 AS depth, 248.26027397260273 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 263.82142857142856 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 197.0 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.0061888848431408405) THEN CASE WHEN ("ADS"."Feature_8" <= 0.00661808904260397) THEN CASE WHEN ("ADS"."Feature_5" <= 0.11267216503620148) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.02237313613295555) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.00293656624853611) THEN CASE WHEN ("ADS"."Feature_2" <= 0.07840229570865631) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.05361261963844299) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 286 AS count, 0 AS depth, 156.7579185520362 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.00661808904260397 AS threshold, 172 AS count, 1 AS depth, 120.87593984962406 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 0.11267216503620148 AS threshold, 118 AS count, 2 AS depth, 97.8076923076923 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, 96.08333333333333 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 253.0 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, -0.02237313613295555 AS threshold, 54 AS count, 2 AS depth, 170.85714285714286 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 133.17857142857142 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, 189.69642857142858 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.00293656624853611 AS threshold, 114 AS count, 1 AS depth, 210.98863636363637 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 0.07840229570865631 AS threshold, 40 AS count, 2 AS depth, 167.83076923076922 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 155.94736842105263 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 252.5 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.05361261963844299 AS threshold, 74 AS count, 2 AS depth, 236.26126126126127 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, 218.078125 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 261.02127659574467 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.007805602625012398) THEN CASE WHEN ("ADS"."Feature_8" <= -0.00422451039776206) THEN CASE WHEN ("ADS"."Feature_3" <= 0.01613423600792885) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.034196749329566956) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.061465367674827576) THEN CASE WHEN ("ADS"."Feature_2" <= 0.06546854972839355) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.08702479302883148) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.007805602625012398 AS threshold, 280 AS count, 0 AS depth, 148.2262443438914 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, -0.00422451039776206 AS threshold, 173 AS count, 1 AS depth, 115.86842105263158 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.01613423600792885 AS threshold, 110 AS count, 2 AS depth, 97.22941176470589 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, 93.19310344827586 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 120.64 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_6' AS feature, -0.034196749329566956 AS threshold, 63 AS count, 2 AS depth, 148.875 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 181.5 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, 129.3 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.061465367674827576 AS threshold, 107 AS count, 1 AS depth, 197.1306818181818 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 0.06546854972839355 AS threshold, 79 AS count, 2 AS depth, 179.13138686131387 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, 170.325 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 241.2941176470588 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.08702479302883148 AS threshold, 28 AS count, 2 AS depth, 260.35897435897436 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 247.10714285714286 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 294.09090909090907 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= -0.009431487880647182) THEN CASE WHEN ("ADS"."Feature_2" <= 0.00726669654250145) THEN CASE WHEN ("ADS"."Feature_0" <= 0.07985009253025055) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.010963362641632557) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.01105610840022564) THEN CASE WHEN ("ADS"."Feature_8" <= 0.015194777399301529) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.016708049923181534) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.009431487880647182 AS threshold, 281 AS count, 0 AS depth, 152.9841628959276 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.00726669654250145 AS threshold, 129 AS count, 1 AS depth, 105.15094339622641 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.07985009253025055 AS threshold, 103 AS count, 2 AS depth, 91.61538461538461 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, 89.67469879518072 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 199.0 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.010963362641632557 AS threshold, 26 AS count, 2 AS depth, 158.34883720930233 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 191.1304347826087 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 120.65 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, -0.01105610840022564 AS threshold, 152 AS count, 1 AS depth, 197.07391304347826 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.015194777399301529 AS threshold, 40 AS count, 2 AS depth, 142.2549019607843 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 110.65217391304348 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 168.21428571428572 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.016708049923181534 AS threshold, 112 AS count, 2 AS depth, 212.6927374301676 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, 184.17073170731706 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, 236.8041237113402 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.009422320872545242) THEN CASE WHEN ("ADS"."Feature_8" <= 0.014069339260458946) THEN CASE WHEN ("ADS"."Feature_0" <= 0.0998290628194809) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.04177355766296387) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_8" <= -0.003761786036193371) THEN CASE WHEN ("ADS"."Feature_0" <= -0.08361412584781647) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.05113675445318222) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.009422320872545242 AS threshold, 283 AS count, 0 AS depth, 154.61764705882354 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.014069339260458946 AS threshold, 174 AS count, 1 AS depth, 115.73703703703704 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.0998290628194809 AS threshold, 128 AS count, 2 AS depth, 98.56796116504854 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 127 AS count, 3 AS depth, 96.81862745098039 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 277.0 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.04177355766296387 AS threshold, 46 AS count, 2 AS depth, 171.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 198.61111111111111 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 135.5 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, -0.003761786036193371 AS threshold, 109 AS count, 1 AS depth, 215.65116279069767 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, -0.08361412584781647 AS threshold, 27 AS count, 2 AS depth, 154.725 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 302.0 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, 150.94871794871796 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.05113675445318222 AS threshold, 82 AS count, 2 AS depth, 234.11363636363637 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, 213.07894736842104 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 262.6607142857143 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, "DT_Output_6"."Estimator" AS "Estimator_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.0061888848431408405) THEN CASE WHEN ("ADS"."Feature_8" <= -0.009924227371811867) THEN CASE WHEN ("ADS"."Feature_3" <= 0.11827273666858673) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.024388954043388367) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_8" <= -0.030139416456222534) THEN CASE WHEN ("ADS"."Feature_0" <= -0.029126055538654327) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.02359379082918167) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 289 AS count, 0 AS depth, 155.3393665158371 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, -0.009924227371811867 AS threshold, 174 AS count, 1 AS depth, 120.49626865671642 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.11827273666858673 AS threshold, 106 AS count, 2 AS depth, 97.71698113207547 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, 96.21019108280255 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 216.0 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, 0.024388954043388367 AS threshold, 68 AS count, 2 AS depth, 153.72477064220183 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, 133.59322033898306 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, 177.48 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, -0.030139416456222534 AS threshold, 115 AS count, 1 AS depth, 209.00574712643677 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, -0.029126055538654327 AS threshold, 15 AS count, 2 AS depth, 127.78260869565217 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 166.0 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 111.0625 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.02359379082918167 AS threshold, 100 AS count, 2 AS depth, 221.3774834437086 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, 189.75 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, 253.42666666666668 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, "DT_Output_7"."Estimator" AS "Estimator_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.018044818192720413) THEN CASE WHEN ("ADS"."Feature_8" <= -0.010411696508526802) THEN CASE WHEN ("ADS"."Feature_0" <= 0.07985009253025055) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.016671042889356613) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.02359379082918167) THEN CASE WHEN ("ADS"."Feature_9" <= 0.04241442680358887) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_8" <= -0.030139416456222534) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.018044818192720413 AS threshold, 282 AS count, 0 AS depth, 149.1289592760181 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, -0.010411696508526802 AS threshold, 194 AS count, 1 AS depth, 122.87128712871286 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.07985009253025055 AS threshold, 105 AS count, 2 AS depth, 97.88165680473372 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, 95.43030303030304 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 199.0 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, 0.016671042889356613 AS threshold, 89 AS count, 2 AS depth, 154.38805970149255 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, 136.640625 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, 170.61428571428573 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.02359379082918167 AS threshold, 88 AS count, 1 AS depth, 206.36690647482015 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.04241442680358887 AS threshold, 43 AS count, 2 AS depth, 169.5211267605634 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, 144.2037037037037 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 249.94117647058823 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_8' AS feature, -0.030139416456222534 AS threshold, 45 AS count, 2 AS depth, 244.83823529411765 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 127.5 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, 252.171875 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, "DT_Output_8"."Estimator" AS "Estimator_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.00996122695505619) THEN CASE WHEN ("ADS"."Feature_8" <= 0.02200143411755562) THEN CASE WHEN ("ADS"."Feature_6" <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.03205915912985802) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 6.750726606696844e-05) THEN CASE WHEN ("ADS"."Feature_8" <= 0.040063850581645966) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.06654636561870575) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.00996122695505619 AS threshold, 275 AS count, 0 AS depth, 154.02488687782807 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.02200143411755562 AS threshold, 172 AS count, 1 AS depth, 120.48188405797102 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.021027816459536552 AS threshold, 138 AS count, 2 AS depth, 104.08181818181818 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, 119.4453125 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, 82.70652173913044 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 0.03205915912985802 AS threshold, 34 AS count, 2 AS depth, 184.91071428571428 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 164.525 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 235.875 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 6.750726606696844e-05 AS threshold, 103 AS count, 1 AS depth, 209.79518072289156 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.040063850581645966 AS threshold, 41 AS count, 2 AS depth, 173.828125 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, 148.41666666666666 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 250.0625 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.06654636561870575 AS threshold, 62 AS count, 2 AS depth, 232.36274509803923 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, 219.68493150684932 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 264.2758620689655 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, "DT_Output_9"."Estimator" AS "Estimator_9" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Estimator_0" AS "Estimator_0", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Estimator_1" AS "Estimator_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Estimator_2" AS "Estimator_2", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Estimator_3" AS "Estimator_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Estimator_4" AS "Estimator_4", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Estimator_5" AS "Estimator_5", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Estimator_6" AS "Estimator_6", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Estimator_7" AS "Estimator_7", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Estimator_8" AS "Estimator_8", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Estimator_9" AS "Estimator_9" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Estimator_0" / 10 + "RF_Join_CTE"."Estimator_1" / 10 + "RF_Join_CTE"."Estimator_2" / 10 + "RF_Join_CTE"."Estimator_3" / 10 + "RF_Join_CTE"."Estimator_4" / 10 + "RF_Join_CTE"."Estimator_5" / 10 + "RF_Join_CTE"."Estimator_6" / 10 + "RF_Join_CTE"."Estimator_7" / 10 + "RF_Join_CTE"."Estimator_8" / 10 + "RF_Join_CTE"."Estimator_9" / 10 AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"