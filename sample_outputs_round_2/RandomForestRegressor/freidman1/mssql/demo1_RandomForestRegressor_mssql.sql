-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.41205033659935) THEN CASE WHEN ([ADS].[Feature_1] <= 0.5043701529502869) THEN CASE WHEN ([ADS].[Feature_3] <= 0.33766746520996094) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.06387236714363098) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.19752366840839386) THEN CASE WHEN ([ADS].[Feature_8] <= 0.3684418201446533) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.2989238500595093) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.41205033659935 AS threshold, 64 AS count, 0 AS depth, 14.843020022683035 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.5043701529502869 AS threshold, 25 AS count, 1 AS depth, 10.802369712227442 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.33766746520996094 AS threshold, 13 AS count, 2 AS depth, 8.606932734806657 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 7.082256122597911 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 10.589012330678027 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.06387236714363098 AS threshold, 12 AS count, 2 AS depth, 13.772666799326156 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 7.137703674962774 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 14.657328549241274 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.19752366840839386 AS threshold, 39 AS count, 1 AS depth, 17.5367868963201 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.3684418201446533 AS threshold, 7 AS count, 2 AS depth, 12.953167660830536 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 11.02355967891217 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 14.110932449981556 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.2989238500595093 AS threshold, 32 AS count, 2 AS depth, 18.24195908639542 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 16.202428234809652 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 19.41623442518722 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.36553460359573364) THEN CASE WHEN ([ADS].[Feature_0] <= 0.5118816494941711) THEN CASE WHEN ([ADS].[Feature_4] <= 0.34371304512023926) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.055616363883018494) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.3802873492240906) THEN CASE WHEN ([ADS].[Feature_8] <= 0.5424841642379761) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.21985316276550293) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.36553460359573364 AS threshold, 64 AS count, 0 AS depth, 14.733226951544282 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.5118816494941711 AS threshold, 18 AS count, 1 AS depth, 9.31450431464854 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.34371304512023926 AS threshold, 8 AS count, 2 AS depth, 5.917640371655624 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 3.849073329931103 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 7.469065652949015 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.055616363883018494 AS threshold, 10 AS count, 2 AS depth, 12.28676026476734 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 9.076257124936022 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 14.21306214866613 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.3802873492240906 AS threshold, 46 AS count, 1 AS depth, 17.05553665307102 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.5424841642379761 AS threshold, 21 AS count, 2 AS depth, 14.977185342411813 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 11.615684399779772 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 17.100238569337314 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.21985316276550293 AS threshold, 25 AS count, 2 AS depth, 18.707559489748853 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 13.241496715699645 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 19.511392250638444 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.5638010501861572) THEN CASE WHEN ([ADS].[Feature_3] <= 0.08836963772773743) THEN CASE WHEN ([ADS].[Feature_2] <= 0.83331298828125) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.23967096209526062) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.4144158959388733) THEN CASE WHEN ([ADS].[Feature_5] <= 0.10273659974336624) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.8790885210037231) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.5638010501861572 AS threshold, 64 AS count, 0 AS depth, 15.431587752503617 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.08836963772773743 AS threshold, 37 AS count, 1 AS depth, 12.01080069757553 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.83331298828125 AS threshold, 8 AS count, 2 AS depth, 7.027142469767846 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 6.264388337350031 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 16.180192058781643 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.23967096209526062 AS threshold, 29 AS count, 2 AS depth, 13.630489621613027 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 10.502302779245642 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 15.31489792134931 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.4144158959388733 AS threshold, 27 AS count, 1 AS depth, 19.289071027209754 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, 0.10273659974336624 AS threshold, 12 AS count, 2 AS depth, 17.215322323785024 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 21.76860674563949 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 16.361581494687307 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.8790885210037231 AS threshold, 15 AS count, 2 AS depth, 20.69625764739083 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 19.473615339622413 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 24.364184570696068 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.5598999857902527) THEN CASE WHEN ([ADS].[Feature_1] <= 0.33449065685272217) THEN CASE WHEN ([ADS].[Feature_3] <= 0.3314952254295349) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.3747512102127075) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_5] <= 0.635877251625061) THEN CASE WHEN ([ADS].[Feature_4] <= 0.4000508785247803) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_8] <= 0.2650018632411957) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.5598999857902527 AS threshold, 61 AS count, 0 AS depth, 15.43058472271603 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.33449065685272217 AS threshold, 31 AS count, 1 AS depth, 11.553951939874663 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.3314952254295349 AS threshold, 13 AS count, 2 AS depth, 8.67892705137705 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 7.507208176621567 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 11.022364800888019 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.3747512102127075 AS threshold, 18 AS count, 2 AS depth, 14.298293878895112 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 10.461195040752974 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 16.088940003361447 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 0.635877251625061 AS threshold, 30 AS count, 1 AS depth, 18.355062085210395 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, 0.4000508785247803 AS threshold, 15 AS count, 2 AS depth, 20.497771582611318 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 17.507390167853753 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 22.159094590809957 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_8' AS feature, 0.2650018632411957 AS threshold, 15 AS count, 2 AS depth, 16.28623912220261 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 10.20632169919595 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 16.736603375758662 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.5573682188987732) THEN CASE WHEN ([ADS].[Feature_3] <= 0.08836963772773743) THEN CASE WHEN ([ADS].[Feature_0] <= 0.33498331904411316) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.20906299352645874) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.19752366840839386) THEN CASE WHEN ([ADS].[Feature_8] <= 0.3096366822719574) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.27271243929862976) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.5573682188987732 AS threshold, 65 AS count, 0 AS depth, 14.86559400660562 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.08836963772773743 AS threshold, 32 AS count, 1 AS depth, 11.081796408007314 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.33498331904411316 AS threshold, 6 AS count, 2 AS depth, 7.354839212763269 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 4.558324771416121 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 8.553345401912049 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.20906299352645874 AS threshold, 26 AS count, 2 AS depth, 12.089082136451653 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 9.201124798154032 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, 13.653392361362867 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.19752366840839386 AS threshold, 33 AS count, 1 AS depth, 18.221037160079593 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.3096366822719574 AS threshold, 5 AS count, 2 AS depth, 12.762511624608397 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 11.243983965007166 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 13.673628220369135 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.27271243929862976 AS threshold, 28 AS count, 2 AS depth, 19.191441699718922 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 15.402002994687258 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 20.730901173638028 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.2309231013059616) THEN CASE WHEN ([ADS].[Feature_0] <= 0.5515985488891602) THEN CASE WHEN ([ADS].[Feature_8] <= 0.4378484785556793) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_4] <= 0.5332460403442383) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.6320550441741943) THEN CASE WHEN ([ADS].[Feature_1] <= 0.42204028367996216) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.21985316276550293) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.2309231013059616 AS threshold, 63 AS count, 0 AS depth, 15.388143213005185 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.5515985488891602 AS threshold, 14 AS count, 1 AS depth, 8.089980915843316 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.4378484785556793 AS threshold, 8 AS count, 2 AS depth, 5.784377894490705 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 7.179600638488682 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 3.5520215040939433 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.5332460403442383 AS threshold, 6 AS count, 2 AS depth, 11.83658582554131 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12.740488701098622 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9.124877198869367 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.6320550441741943 AS threshold, 49 AS count, 1 AS depth, 17.328161038833024 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.42204028367996216 AS threshold, 20 AS count, 2 AS depth, 14.486313710201024 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 12.215100520331976 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 16.490325348320777 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.21985316276550293 AS threshold, 29 AS count, 2 AS depth, 19.263035815773964 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12.87502669170379 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 20.023513092448983 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.34066110849380493) THEN CASE WHEN ([ADS].[Feature_1] <= 0.5043701529502869) THEN CASE WHEN ([ADS].[Feature_6] <= 0.5693872570991516) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.36963754892349243) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.3698451519012451) THEN CASE WHEN ([ADS].[Feature_6] <= 0.0978194922208786) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.2989238500595093) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.34066110849380493 AS threshold, 58 AS count, 0 AS depth, 15.511736487447376 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.5043701529502869 AS threshold, 16 AS count, 1 AS depth, 8.764195593256236 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.5693872570991516 AS threshold, 7 AS count, 2 AS depth, 6.534118328975715 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 5.491990313094807 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9.660502376618439 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.36963754892349243 AS threshold, 9 AS count, 2 AS depth, 12.007944341300627 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 10.103224959152312 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 15.341203260060176 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.3698451519012451 AS threshold, 42 AS count, 1 AS depth, 18.00740229762766 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_6' AS feature, 0.0978194922208786 AS threshold, 12 AS count, 2 AS depth, 14.776696856464133 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 10.850490036541682 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 15.758248561444745 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.2989238500595093 AS threshold, 30 AS count, 2 AS depth, 19.226536426368614 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 15.195497144169885 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, 20.282284809801617 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, [DT_Output_6].[Estimator] AS [Estimator_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.4134504199028015) THEN CASE WHEN ([ADS].[Feature_1] <= 0.5043701529502869) THEN CASE WHEN ([ADS].[Feature_3] <= 0.11427469551563263) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_6] <= 0.40630626678466797) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.36817318201065063) THEN CASE WHEN ([ADS].[Feature_2] <= 0.9271639585494995) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.960843026638031) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.4134504199028015 AS threshold, 64 AS count, 0 AS depth, 15.435065300052193 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.5043701529502869 AS threshold, 24 AS count, 1 AS depth, 10.499211920340505 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.11427469551563263 AS threshold, 13 AS count, 2 AS depth, 7.763325566989582 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 5.8000424592058275 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9.012687544670152 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_6' AS feature, 0.40630626678466797 AS threshold, 11 AS count, 2 AS depth, 14.016780088934551 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 7.800350385799667 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 15.712170007971338 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.36817318201065063 AS threshold, 40 AS count, 1 AS depth, 17.757819831681214 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 0.9271639585494995 AS threshold, 12 AS count, 2 AS depth, 14.208982448615174 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12.687219571390465 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 17.062287843411497 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.960843026638031 AS threshold, 28 AS count, 2 AS depth, 19.571670049692745 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 18.444354754105063 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 23.517273584249615 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, [DT_Output_7].[Estimator] AS [Estimator_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.4239978790283203) THEN CASE WHEN ([ADS].[Feature_6] <= 0.4490266442298889) THEN CASE WHEN ([ADS].[Feature_4] <= 0.34253162145614624) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_4] <= 0.759358286857605) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.15814144909381866) THEN CASE WHEN ([ADS].[Feature_3] <= 0.8154728412628174) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.466461718082428) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.4239978790283203 AS threshold, 65 AS count, 0 AS depth, 14.293880275319555 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.4490266442298889 AS threshold, 27 AS count, 1 AS depth, 10.340001402137895 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.34253162145614624 AS threshold, 12 AS count, 2 AS depth, 7.413988092098427 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 5.04086024726861 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 8.874374458147544 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.759358286857605 AS threshold, 15 AS count, 2 AS depth, 12.900263048422437 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 10.909397313624122 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 15.687475077140073 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.15814144909381866 AS threshold, 38 AS count, 1 AS depth, 17.528872080649997 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.8154728412628174 AS threshold, 4 AS count, 2 AS depth, 12.264166546931712 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 9.972447967830835 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 13.410025836482149 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 0.466461718082428 AS threshold, 34 AS count, 2 AS depth, 18.1735299011053 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, 16.56989649034179 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, 19.843981370650614 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, [DT_Output_8].[Estimator] AS [Estimator_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_3] <= 0.294463574886322) THEN CASE WHEN ([ADS].[Feature_8] <= 0.13172876834869385) THEN CASE WHEN ([ADS].[Feature_6] <= 0.2053826004266739) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.5258877873420715) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_1] <= 0.3747241795063019) THEN CASE WHEN ([ADS].[Feature_3] <= 0.6435147523880005) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_0] <= 0.21985316276550293) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.294463574886322 AS threshold, 61 AS count, 0 AS depth, 15.443210607800712 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.13172876834869385 AS threshold, 15 AS count, 1 AS depth, 10.428774396998163 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.2053826004266739 AS threshold, 4 AS count, 2 AS depth, 6.074279262260821 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 7.09747852286221 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 5.306879816809778 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.5258877873420715 AS threshold, 11 AS count, 2 AS depth, 11.952847694156231 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 9.179761802798975 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 13.80157162172774 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.3747241795063019 AS threshold, 46 AS count, 1 AS depth, 17.29786509672768 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.6435147523880005 AS threshold, 16 AS count, 2 AS depth, 13.985729280468325 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12.114122039988311 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 17.996316224354068 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.21985316276550293 AS threshold, 30 AS count, 2 AS depth, 18.726629566486626 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12.276843029850614 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 19.4276933204688 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, [DT_Output_9].[Estimator] AS [Estimator_9] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Estimator_0] AS [Estimator_0], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Estimator_1] AS [Estimator_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Estimator_2] AS [Estimator_2], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Estimator_3] AS [Estimator_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Estimator_4] AS [Estimator_4], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Estimator_5] AS [Estimator_5], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Estimator_6] AS [Estimator_6], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Estimator_7] AS [Estimator_7], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Estimator_8] AS [Estimator_8], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Estimator_9] AS [Estimator_9] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Estimator_0] / 10 + [RF_Join_CTE].[Estimator_1] / 10 + [RF_Join_CTE].[Estimator_2] / 10 + [RF_Join_CTE].[Estimator_3] / 10 + [RF_Join_CTE].[Estimator_4] / 10 + [RF_Join_CTE].[Estimator_5] / 10 + [RF_Join_CTE].[Estimator_6] / 10 + [RF_Join_CTE].[Estimator_7] / 10 + [RF_Join_CTE].[Estimator_8] / 10 + [RF_Join_CTE].[Estimator_9] / 10 AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]