-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.499536432841 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.53343672506 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.476703478792 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.477333487938 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.483400491318 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.515139707866 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.501850073964 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.506698727609 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.537016566279 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.475319935812 ELSE [ADS].[Feature_9] END AS impute_11 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 0.499536432841 AS impute_2, [ADS_imp_1_OUT].impute_3 - 0.53343672506 AS impute_3, [ADS_imp_1_OUT].impute_4 - 0.476703478792 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.477333487938 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.483400491318 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.515139707866 AS impute_7, [ADS_imp_1_OUT].impute_8 - 0.501850073964 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.506698727609 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.537016566279 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.475319935812 AS impute_11 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.0254570819041 + [CenteredDataForPCA].impute_3 * -0.0172577248302 + [CenteredDataForPCA].impute_4 * 0.617607997636 + [CenteredDataForPCA].impute_5 * -0.0812784191123 + [CenteredDataForPCA].impute_6 * 0.0588997342342 + [CenteredDataForPCA].impute_7 * -0.057079023986 + [CenteredDataForPCA].impute_8 * -0.265605619231 + [CenteredDataForPCA].impute_9 * -0.556795507153 + [CenteredDataForPCA].impute_10 * 0.284856731715 + [CenteredDataForPCA].impute_11 * 0.377584632538 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.34528221248 + [CenteredDataForPCA].impute_3 * 0.343275125064 + [CenteredDataForPCA].impute_4 * 0.181392227746 + [CenteredDataForPCA].impute_5 * 0.0019159085244 + [CenteredDataForPCA].impute_6 * -0.563582889707 + [CenteredDataForPCA].impute_7 * -0.482423185123 + [CenteredDataForPCA].impute_8 * -0.226203957956 + [CenteredDataForPCA].impute_9 * 0.104864405483 + [CenteredDataForPCA].impute_10 * -0.340884426783 + [CenteredDataForPCA].impute_11 * -0.0362049940697 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.138344816635 + [CenteredDataForPCA].impute_3 * -0.297444637412 + [CenteredDataForPCA].impute_4 * 0.0984187919131 + [CenteredDataForPCA].impute_5 * -0.34522586559 + [CenteredDataForPCA].impute_6 * -0.201602009143 + [CenteredDataForPCA].impute_7 * -0.234803811643 + [CenteredDataForPCA].impute_8 * 0.684978378111 + [CenteredDataForPCA].impute_9 * -0.343541434386 + [CenteredDataForPCA].impute_10 * -0.277583252417 + [CenteredDataForPCA].impute_11 * -0.0589532426304 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.269537477266 + [CenteredDataForPCA].impute_3 * 0.0812342378706 + [CenteredDataForPCA].impute_4 * 0.309801176271 + [CenteredDataForPCA].impute_5 * -0.637245277192 + [CenteredDataForPCA].impute_6 * 0.353353169333 + [CenteredDataForPCA].impute_7 * -0.220544749827 + [CenteredDataForPCA].impute_8 * -0.179684191062 + [CenteredDataForPCA].impute_9 * 0.414323851413 + [CenteredDataForPCA].impute_10 * -0.0340658162959 + [CenteredDataForPCA].impute_11 * -0.200206502549 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.00781441230005 + [CenteredDataForPCA].impute_3 * 0.683971016322 + [CenteredDataForPCA].impute_4 * -0.411127184251 + [CenteredDataForPCA].impute_5 * -0.277024616579 + [CenteredDataForPCA].impute_6 * 0.266452999288 + [CenteredDataForPCA].impute_7 * 0.00560594388471 + [CenteredDataForPCA].impute_8 * 0.0351099358154 + [CenteredDataForPCA].impute_9 * -0.417002441967 + [CenteredDataForPCA].impute_10 * -0.153244687219 + [CenteredDataForPCA].impute_11 * 0.129298407473 AS anoova_6, [CenteredDataForPCA].impute_2 * 0.315026877859 + [CenteredDataForPCA].impute_3 * -0.437499480254 + [CenteredDataForPCA].impute_4 * -0.440993353434 + [CenteredDataForPCA].impute_5 * -0.108708673271 + [CenteredDataForPCA].impute_6 * 0.259246432941 + [CenteredDataForPCA].impute_7 * -0.582029544842 + [CenteredDataForPCA].impute_8 * -0.206723602719 + [CenteredDataForPCA].impute_9 * -0.0709750321129 + [CenteredDataForPCA].impute_10 * 0.134943613066 + [CenteredDataForPCA].impute_11 * 0.176381891682 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.595034620865 + [CenteredDataForPCA].impute_3 * -0.216336853734 + [CenteredDataForPCA].impute_4 * 0.105919096806 + [CenteredDataForPCA].impute_5 * -0.268220931999 + [CenteredDataForPCA].impute_6 * 0.173642960474 + [CenteredDataForPCA].impute_7 * 0.480992373373 + [CenteredDataForPCA].impute_8 * -0.074671452095 + [CenteredDataForPCA].impute_9 * 0.0350812351888 + [CenteredDataForPCA].impute_10 * -0.48120956536 + [CenteredDataForPCA].impute_11 * 0.126870550871 AS anoova_8, [CenteredDataForPCA].impute_2 * -0.495958034541 + [CenteredDataForPCA].impute_3 * -0.200536177778 + [CenteredDataForPCA].impute_4 * -0.255534880634 + [CenteredDataForPCA].impute_5 * -0.215918436232 + [CenteredDataForPCA].impute_6 * -0.378002722557 + [CenteredDataForPCA].impute_7 * 0.158618339363 + [CenteredDataForPCA].impute_8 * -0.34701405805 + [CenteredDataForPCA].impute_9 * 0.0529214672745 + [CenteredDataForPCA].impute_10 * -0.247502375419 + [CenteredDataForPCA].impute_11 * 0.499368924932 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.0842878410636 + [CenteredDataForPCA].impute_3 * -0.190020056539 + [CenteredDataForPCA].impute_4 * -0.121225949822 + [CenteredDataForPCA].impute_5 * -0.109877208277 + [CenteredDataForPCA].impute_6 * -0.142985535793 + [CenteredDataForPCA].impute_7 * 0.129233662621 + [CenteredDataForPCA].impute_8 * -0.441061095726 + [CenteredDataForPCA].impute_9 * -0.442566706257 + [CenteredDataForPCA].impute_10 * -0.0567683895225 + [CenteredDataForPCA].impute_11 * -0.70657637482 AS anoova_10, [CenteredDataForPCA].impute_2 * -0.286171940915 + [CenteredDataForPCA].impute_3 * -0.0666774666549 + [CenteredDataForPCA].impute_4 * 0.158999474671 + [CenteredDataForPCA].impute_5 * 0.498930107434 + [CenteredDataForPCA].impute_6 * 0.426279957444 + [CenteredDataForPCA].impute_7 * -0.219618853433 + [CenteredDataForPCA].impute_8 * -0.110936060511 + [CenteredDataForPCA].impute_9 * -0.10233324313 + [CenteredDataForPCA].impute_10 * -0.621856151825 + [CenteredDataForPCA].impute_11 * 0.00407823354777 AS anoova_11 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.03978866711258888) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.010215302929282188) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.26704931259155273) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.02838466688990593) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.06858430802822113) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.10948692262172699) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.33306342363357544) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.03978866711258888 AS threshold, 64 AS count, 0 AS depth, 15.350052221910026 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, 0.010215302929282188 AS threshold, 29 AS count, 1 AS depth, 18.07503148204931 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_8' AS feature, 0.26704931259155273 AS threshold, 11 AS count, 2 AS depth, 21.155338402676506 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 19.952153282666085 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 22.96011608269214 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, 0.02838466688990593 AS threshold, 18 AS count, 2 AS depth, 15.705564620028394 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 17.61143322738833 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 12.105590583904064 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_10' AS feature, 0.06858430802822113 AS threshold, 35 AS count, 1 AS depth, 13.028773592902484 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, -0.10948692262172699 AS threshold, 21 AS count, 2 AS depth, 14.955395969169535 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 20.664185924815513 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 13.356934781588663 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.33306342363357544 AS threshold, 14 AS count, 2 AS depth, 10.22641377287768 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 9.686635768030586 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 21.561751874666662 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 0.3473602533340454) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.10590393096208572) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.18652129173278809) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 0.1882365643978119) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.5912385582923889) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.29134827852249146) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.3473602533340454 AS threshold, 64 AS count, 0 AS depth, 14.838053428199593 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, -0.10590393096208572 AS threshold, 58 AS count, 1 AS depth, 16.086346891999323 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 0.18652129173278809 AS threshold, 26 AS count, 2 AS depth, 18.416371959022168 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 19.473204410061516 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 12.77993222014567 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, 0.1882365643978119 AS threshold, 32 AS count, 2 AS depth, 14.241743713939586 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, 13.36454337046865 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 18.042945202313636 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 0.5912385582923889 AS threshold, 6 AS count, 1 AS depth, 7.169965007715447 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_10' AS feature, 0.29134827852249146 AS threshold, 5 AS count, 2 AS depth, 5.927390241116967 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 6.4488865882815585 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 4.189069083901657 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, 23.323436973495696 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.13039368391036987) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.06572306156158447) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.02333700843155384) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.02838466688990593) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.04302555322647095) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.16483096778392792) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.18110843002796173) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.13039368391036987 AS threshold, 64 AS count, 0 AS depth, 14.746179041445023 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, -0.06572306156158447 AS threshold, 18 AS count, 1 AS depth, 19.377249850859965 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, -0.02333700843155384 AS threshold, 10 AS count, 2 AS depth, 20.788673623269 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 19.61506779178004 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 21.96227945475796 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, 0.02838466688990593 AS threshold, 8 AS count, 2 AS depth, 16.554402306041897 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 18.304313870500227 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 13.054579177125243 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_10' AS feature, 0.04302555322647095 AS threshold, 46 AS count, 1 AS depth, 13.033317235223057 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_6' AS feature, -0.16483096778392792 AS threshold, 28 AS count, 2 AS depth, 14.882960003116342 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 10.848797431236115 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, 16.054168491726735 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_5' AS feature, -0.18110843002796173 AS threshold, 18 AS count, 2 AS depth, 10.79132600141301 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 14.819641069838838 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, 9.502265179516746 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.1663285195827484) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.14084169268608093) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.5875001549720764) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.14754030108451843) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.0069429706782102585) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.009725471958518028) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.1950182318687439) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.1663285195827484 AS threshold, 61 AS count, 0 AS depth, 15.180384978959838 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, -0.14084169268608093 AS threshold, 41 AS count, 1 AS depth, 17.332248215674415 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.5875001549720764 AS threshold, 14 AS count, 2 AS depth, 20.47267900405528 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 14.227676441297302 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, 20.756542756907916 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_11' AS feature, -0.14754030108451843 AS threshold, 27 AS count, 2 AS depth, 15.652482910261398 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12.41498844097904 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 17.386854947376957 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, -0.0069429706782102585 AS threshold, 20 AS count, 1 AS depth, 11.003238695925646 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, -0.009725471958518028 AS threshold, 6 AS count, 2 AS depth, 15.75817789525215 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 18.096609659416153 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12.640268876366813 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.1950182318687439 AS threshold, 14 AS count, 2 AS depth, 9.770476681285446 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 8.386385012361933 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 13.725024306781194 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.10018304735422134) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.2578008472919464) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.16008085012435913) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.036135006695985794) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.01613813266158104) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.18596486747264862) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.19263070821762085) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.10018304735422134 AS threshold, 65 AS count, 0 AS depth, 13.881889275766085 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, 0.2578008472919464 AS threshold, 41 AS count, 1 AS depth, 16.02730923751133 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 0.16008085012435913 AS threshold, 33 AS count, 2 AS depth, 17.30057877592243 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, 18.901739306756642 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 14.298402780608281 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -0.036135006695985794 AS threshold, 8 AS count, 2 AS depth, 10.702727531428557 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 14.903682927287157 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 8.30218159093793 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 0.01613813266158104 AS threshold, 24 AS count, 1 AS depth, 11.037960489266577 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, -0.18596486747264862 AS threshold, 11 AS count, 2 AS depth, 13.576955670751602 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 19.12625371905628 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 12.924097076833405 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.19263070821762085 AS threshold, 13 AS count, 2 AS depth, 9.027922637257603 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, 8.246077041337061 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 14.500841808701386 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.10524564981460571) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.4716416597366333) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.06876888871192932) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.2798585891723633) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.29479551315307617) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.03000275418162346) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.2203139066696167) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, -0.10524564981460571 AS threshold, 63 AS count, 0 AS depth, 15.087655713751303 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 0.4716416597366333 AS threshold, 19 AS count, 1 AS depth, 18.973186853891438 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, -0.06876888871192932 AS threshold, 16 AS count, 2 AS depth, 20.17928267562373 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 16.310566233731702 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 20.8240687492724 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_10' AS feature, 0.2798585891723633 AS threshold, 3 AS count, 2 AS depth, 7.716292517723382 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 6.469349479484144 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 10.210178594201857 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, -0.29479551315307617 AS threshold, 44 AS count, 1 AS depth, 13.341982302963702 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_8' AS feature, -0.03000275418162346 AS threshold, 8 AS count, 2 AS depth, 17.854172412289973 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 19.339530465276592 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, 16.925823629173337 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.2203139066696167 AS threshold, 36 AS count, 2 AS depth, 12.294509599012963 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, 11.288113870120208 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 15.984627271619727 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.10362094640731812) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.08156256377696991) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.1759321093559265) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.08465825021266937) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.24247923493385315) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.10948692262172699) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.6112158298492432) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.10362094640731812 AS threshold, 58 AS count, 0 AS depth, 15.22135650118084 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, -0.08156256377696991 AS threshold, 23 AS count, 1 AS depth, 18.835845545058838 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.1759321093559265 AS threshold, 10 AS count, 2 AS depth, 21.615558068051286 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 20.67625156345063 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 23.14193113802735 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, 0.08465825021266937 AS threshold, 13 AS count, 2 AS depth, 16.500887025745186 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 18.528211595635607 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 12.192822314728053 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_10' AS feature, 0.24247923493385315 AS threshold, 35 AS count, 1 AS depth, 12.142347315655142 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, -0.10948692262172699 AS threshold, 27 AS count, 2 AS depth, 13.6989136795042 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 17.64418984886325 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, 11.945457604233512 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_9' AS feature, 0.6112158298492432 AS threshold, 8 AS count, 2 AS depth, 8.095274769647599 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, 9.515713200827943 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 4.189069083901657 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, [DT_Output_6].[Estimator] AS [Estimator_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.16990616917610168) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.10862994194030762) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.3948339521884918) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.12128326296806335) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.0590987429022789) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.27769434452056885) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -0.01590677723288536) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.16990616917610168 AS threshold, 64 AS count, 0 AS depth, 14.941352327390543 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, -0.10862994194030762 AS threshold, 45 AS count, 1 AS depth, 16.650160854666606 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_8' AS feature, -0.3948339521884918 AS threshold, 15 AS count, 2 AS depth, 19.690754365604985 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 14.227676441297302 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, 20.265815199742637 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, 0.12128326296806335 AS threshold, 30 AS count, 2 AS depth, 15.231217216228693 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, 16.765875710113583 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12.161900228458904 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_6' AS feature, 0.0590987429022789 AS threshold, 19 AS count, 1 AS depth, 11.624253421501706 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_3' AS feature, 0.27769434452056885 AS threshold, 12 AS count, 2 AS depth, 9.605670992557643 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 8.69824655254601 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 12.509429200594871 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_7' AS feature, -0.01590677723288536 AS threshold, 7 AS count, 2 AS depth, 14.885040422103659 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 14.044209641627017 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 16.776909678176104 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, [DT_Output_7].[Estimator] AS [Estimator_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.0002945766318589449) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.10035883635282516) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.24623996019363403) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.1743060201406479) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.6089757084846497) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.3064207434654236) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.07415096461772919) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.0002945766318589449 AS threshold, 65 AS count, 0 AS depth, 14.628424332522629 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 0.10035883635282516 AS threshold, 34 AS count, 1 AS depth, 17.14795417558243 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, 0.24623996019363403 AS threshold, 21 AS count, 2 AS depth, 19.027654275422844 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, 20.07117050563857 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 14.22747961643048 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_6' AS feature, -0.1743060201406479 AS threshold, 13 AS count, 2 AS depth, 14.516374035805844 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, 10.955585839908398 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 15.703303434438334 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 0.6089757084846497 AS threshold, 31 AS count, 1 AS depth, 12.302704477390504 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_6' AS feature, 0.3064207434654236 AS threshold, 28 AS count, 2 AS depth, 11.635075951944222 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, 11.019299967994256 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, 16.930749413913947 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_11' AS feature, 0.07415096461772919 AS threshold, 3 AS count, 2 AS depth, 20.314246782745855 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 19.311183385829242 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 23.323436973495696 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, [DT_Output_8].[Estimator] AS [Estimator_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.1663285195827484) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.09744201600551605) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.5776188373565674) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.18548627197742462) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.1891302466392517) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.03524842858314514) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.6527429819107056) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.1663285195827484 AS threshold, 61 AS count, 0 AS depth, 14.91100692598756 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.09744201600551605 AS threshold, 37 AS count, 1 AS depth, 17.117674802020424 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, 0.5776188373565674 AS threshold, 25 AS count, 2 AS depth, 18.91989855527477 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, 19.262475984841593 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 4.189069083901657 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_9' AS feature, -0.18548627197742462 AS threshold, 12 AS count, 2 AS depth, 12.944104005010347 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, 19.584695577738223 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, 12.1628579376306 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_6' AS feature, 0.1891302466392517 AS threshold, 24 AS count, 1 AS depth, 11.153707569499185 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_5' AS feature, 0.03524842858314514 AS threshold, 17 AS count, 2 AS depth, 9.23984474206885 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, 10.77987259105717 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, 7.5714812389981745 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.6527429819107056 AS threshold, 7 AS count, 2 AS depth, 15.14092179331238 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, 14.555975855225062 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, 21.575327112272873 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, [DT_Output_9].[Estimator] AS [Estimator_9] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Estimator_0] AS [Estimator_0], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Estimator_1] AS [Estimator_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Estimator_2] AS [Estimator_2], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Estimator_3] AS [Estimator_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Estimator_4] AS [Estimator_4], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Estimator_5] AS [Estimator_5], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Estimator_6] AS [Estimator_6], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Estimator_7] AS [Estimator_7], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Estimator_8] AS [Estimator_8], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Estimator_9] AS [Estimator_9] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Estimator_0] / 10 + [RF_Join_CTE].[Estimator_1] / 10 + [RF_Join_CTE].[Estimator_2] / 10 + [RF_Join_CTE].[Estimator_3] / 10 + [RF_Join_CTE].[Estimator_4] / 10 + [RF_Join_CTE].[Estimator_5] / 10 + [RF_Join_CTE].[Estimator_6] / 10 + [RF_Join_CTE].[Estimator_7] / 10 + [RF_Join_CTE].[Estimator_8] / 10 + [RF_Join_CTE].[Estimator_9] / 10 AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]