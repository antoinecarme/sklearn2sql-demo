-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0575365896303 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.787781332954 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.18435375652 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.116112726739 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.229893904883 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.227281446953 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.173502964294 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0663403857979 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.375860957379 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.296790849335 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.158325268569 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0411144536843 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.281783713939 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.135285297503 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.45219447422 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.0764357718666 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.136841266877 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0219087511003 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.316385382751 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0876136802442 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.0575365896303 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.787781332954 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.18435375652 AS impute_4, "ADS_imp_1_OUT".impute_5 - -0.116112726739 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.229893904883 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.227281446953 AS impute_7, "ADS_imp_1_OUT".impute_8 - -0.173502964294 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.0663403857979 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.375860957379 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.296790849335 AS impute_11, "ADS_imp_1_OUT".impute_12 - 0.158325268569 AS impute_12, "ADS_imp_1_OUT".impute_13 - -0.0411144536843 AS impute_13, "ADS_imp_1_OUT".impute_14 - -0.281783713939 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.135285297503 AS impute_15, "ADS_imp_1_OUT".impute_16 - 0.45219447422 AS impute_16, "ADS_imp_1_OUT".impute_17 - -0.0764357718666 AS impute_17, "ADS_imp_1_OUT".impute_18 - 0.136841266877 AS impute_18, "ADS_imp_1_OUT".impute_19 - 0.0219087511003 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.316385382751 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.0876136802442 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.0503236542371 + "CenteredDataForPCA".impute_3 * 0.653582332083 + "CenteredDataForPCA".impute_4 * 0.00777476365729 + "CenteredDataForPCA".impute_5 * -0.0196859091328 + "CenteredDataForPCA".impute_6 * -0.0253112919382 + "CenteredDataForPCA".impute_7 * -0.00678900454946 + "CenteredDataForPCA".impute_8 * 0.016618343837 + "CenteredDataForPCA".impute_9 * 0.0259318882862 + "CenteredDataForPCA".impute_10 * 0.0817330017861 + "CenteredDataForPCA".impute_11 * -0.041923187145 + "CenteredDataForPCA".impute_12 * 0.0386925300796 + "CenteredDataForPCA".impute_13 * -0.0324538221814 + "CenteredDataForPCA".impute_14 * 0.328184439667 + "CenteredDataForPCA".impute_15 * -0.0222018604984 + "CenteredDataForPCA".impute_16 * -0.51413385884 + "CenteredDataForPCA".impute_17 * -0.0870231014192 + "CenteredDataForPCA".impute_18 * -0.0369956904496 + "CenteredDataForPCA".impute_19 * -0.017120487969 + "CenteredDataForPCA".impute_20 * 0.308848456656 + "CenteredDataForPCA".impute_21 * -0.282970570353 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.0441190146066 + "CenteredDataForPCA".impute_3 * 0.462434796864 + "CenteredDataForPCA".impute_4 * 0.0786853170911 + "CenteredDataForPCA".impute_5 * -0.040885689722 + "CenteredDataForPCA".impute_6 * 0.072389280506 + "CenteredDataForPCA".impute_7 * -0.00739044330206 + "CenteredDataForPCA".impute_8 * -0.0451062619505 + "CenteredDataForPCA".impute_9 * 0.0722744497321 + "CenteredDataForPCA".impute_10 * -0.633871915445 + "CenteredDataForPCA".impute_11 * -0.0722951144824 + "CenteredDataForPCA".impute_12 * 0.0447730542385 + "CenteredDataForPCA".impute_13 * -0.0427312893604 + "CenteredDataForPCA".impute_14 * -0.223525853362 + "CenteredDataForPCA".impute_15 * -0.0721972749149 + "CenteredDataForPCA".impute_16 * 0.386675307225 + "CenteredDataForPCA".impute_17 * 0.104956005255 + "CenteredDataForPCA".impute_18 * 0.0240052970792 + "CenteredDataForPCA".impute_19 * 0.051489735985 + "CenteredDataForPCA".impute_20 * -0.206207236253 + "CenteredDataForPCA".impute_21 * -0.30246007225 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.0567638178185 + "CenteredDataForPCA".impute_3 * 0.123993334926 + "CenteredDataForPCA".impute_4 * -0.0669085561468 + "CenteredDataForPCA".impute_5 * 0.0913028936845 + "CenteredDataForPCA".impute_6 * 0.188292518635 + "CenteredDataForPCA".impute_7 * -0.0923287980432 + "CenteredDataForPCA".impute_8 * -0.0355720014404 + "CenteredDataForPCA".impute_9 * 0.0323701073228 + "CenteredDataForPCA".impute_10 * -0.332619493941 + "CenteredDataForPCA".impute_11 * 0.0754919549838 + "CenteredDataForPCA".impute_12 * 0.0825090757094 + "CenteredDataForPCA".impute_13 * -0.252563292001 + "CenteredDataForPCA".impute_14 * -0.224644329234 + "CenteredDataForPCA".impute_15 * -0.0706503512949 + "CenteredDataForPCA".impute_16 * -0.0897570421121 + "CenteredDataForPCA".impute_17 * -0.0272658323111 + "CenteredDataForPCA".impute_18 * -0.0417116096377 + "CenteredDataForPCA".impute_19 * -0.0369813332012 + "CenteredDataForPCA".impute_20 * 0.494240454126 + "CenteredDataForPCA".impute_21 * 0.650945887145 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.0955031959794 + "CenteredDataForPCA".impute_3 * 0.0289263003567 + "CenteredDataForPCA".impute_4 * 0.0135148912141 + "CenteredDataForPCA".impute_5 * 0.27418216574 + "CenteredDataForPCA".impute_6 * -0.00442187182149 + "CenteredDataForPCA".impute_7 * 0.121137673314 + "CenteredDataForPCA".impute_8 * 0.114499285198 + "CenteredDataForPCA".impute_9 * -0.143234576072 + "CenteredDataForPCA".impute_10 * -0.311506452644 + "CenteredDataForPCA".impute_11 * 0.33814948117 + "CenteredDataForPCA".impute_12 * 0.0662127860369 + "CenteredDataForPCA".impute_13 * -0.0488319453415 + "CenteredDataForPCA".impute_14 * 0.525019252316 + "CenteredDataForPCA".impute_15 * -0.0944482889564 + "CenteredDataForPCA".impute_16 * -0.172496772308 + "CenteredDataForPCA".impute_17 * -0.0286193787939 + "CenteredDataForPCA".impute_18 * 0.0956473385265 + "CenteredDataForPCA".impute_19 * 0.0322429827868 + "CenteredDataForPCA".impute_20 * -0.492647376455 + "CenteredDataForPCA".impute_21 * 0.283168471362 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.0152328104801 + "CenteredDataForPCA".impute_3 * 0.0668139531237 + "CenteredDataForPCA".impute_4 * -0.402670397226 + "CenteredDataForPCA".impute_5 * 0.415797214589 + "CenteredDataForPCA".impute_6 * -0.0434093552972 + "CenteredDataForPCA".impute_7 * -0.168352491267 + "CenteredDataForPCA".impute_8 * -0.303683761318 + "CenteredDataForPCA".impute_9 * -0.303836427993 + "CenteredDataForPCA".impute_10 * -0.115430487658 + "CenteredDataForPCA".impute_11 * -0.311975771487 + "CenteredDataForPCA".impute_12 * -0.328944665605 + "CenteredDataForPCA".impute_13 * 0.172585912263 + "CenteredDataForPCA".impute_14 * 0.00838946697573 + "CenteredDataForPCA".impute_15 * 0.320893870373 + "CenteredDataForPCA".impute_16 * 0.0243577736784 + "CenteredDataForPCA".impute_17 * -0.300195108839 + "CenteredDataForPCA".impute_18 * -0.0324254645887 + "CenteredDataForPCA".impute_19 * -0.0135817737342 + "CenteredDataForPCA".impute_20 * -0.0403680211368 + "CenteredDataForPCA".impute_21 * 0.0155904969766 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.201873280136 + "CenteredDataForPCA".impute_3 * -0.0272229710694 + "CenteredDataForPCA".impute_4 * -0.139972435395 + "CenteredDataForPCA".impute_5 * 0.0136392748967 + "CenteredDataForPCA".impute_6 * 0.154844272289 + "CenteredDataForPCA".impute_7 * 0.784064837377 + "CenteredDataForPCA".impute_8 * -0.0698044406216 + "CenteredDataForPCA".impute_9 * 0.20991682112 + "CenteredDataForPCA".impute_10 * -0.00855080970909 + "CenteredDataForPCA".impute_11 * -0.473171944018 + "CenteredDataForPCA".impute_12 * 0.0521860500344 + "CenteredDataForPCA".impute_13 * -0.0916336119585 + "CenteredDataForPCA".impute_14 * 0.0498381282264 + "CenteredDataForPCA".impute_15 * -0.056487412263 + "CenteredDataForPCA".impute_16 * -0.0281943217729 + "CenteredDataForPCA".impute_17 * -0.0643353331888 + "CenteredDataForPCA".impute_18 * 0.0254469269673 + "CenteredDataForPCA".impute_19 * -0.00746377759625 + "CenteredDataForPCA".impute_20 * -0.0308377441123 + "CenteredDataForPCA".impute_21 * 0.0608923373214 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.311943611754 + "CenteredDataForPCA".impute_3 * -0.0235385875888 + "CenteredDataForPCA".impute_4 * -0.296016240262 + "CenteredDataForPCA".impute_5 * -0.282288961324 + "CenteredDataForPCA".impute_6 * 0.0697466482945 + "CenteredDataForPCA".impute_7 * -0.307992193861 + "CenteredDataForPCA".impute_8 * -0.291603732782 + "CenteredDataForPCA".impute_9 * 0.317168875692 + "CenteredDataForPCA".impute_10 * 0.00657195596833 + "CenteredDataForPCA".impute_11 * -0.042931268483 + "CenteredDataForPCA".impute_12 * -0.262366579344 + "CenteredDataForPCA".impute_13 * 0.0524872726443 + "CenteredDataForPCA".impute_14 * 0.128739228948 + "CenteredDataForPCA".impute_15 * -0.456854978201 + "CenteredDataForPCA".impute_16 * -0.0646106119475 + "CenteredDataForPCA".impute_17 * 0.00457416239499 + "CenteredDataForPCA".impute_18 * 0.167539191538 + "CenteredDataForPCA".impute_19 * 0.32905607713 + "CenteredDataForPCA".impute_20 * -0.0929625505346 + "CenteredDataForPCA".impute_21 * 0.0389791458157 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.282244531657 + "CenteredDataForPCA".impute_3 * 0.0808807686525 + "CenteredDataForPCA".impute_4 * 0.26655140503 + "CenteredDataForPCA".impute_5 * -0.20295503319 + "CenteredDataForPCA".impute_6 * -0.154079773874 + "CenteredDataForPCA".impute_7 * 0.0981895534848 + "CenteredDataForPCA".impute_8 * 0.378916599078 + "CenteredDataForPCA".impute_9 * -0.121774961549 + "CenteredDataForPCA".impute_10 * -0.138738084504 + "CenteredDataForPCA".impute_11 * -0.102031825075 + "CenteredDataForPCA".impute_12 * -0.280128341445 + "CenteredDataForPCA".impute_13 * 0.399859196802 + "CenteredDataForPCA".impute_14 * -0.0241857708445 + "CenteredDataForPCA".impute_15 * 0.262480719161 + "CenteredDataForPCA".impute_16 * -0.0442576469231 + "CenteredDataForPCA".impute_17 * 0.0485906272721 + "CenteredDataForPCA".impute_18 * -0.0192892511954 + "CenteredDataForPCA".impute_19 * 0.468414273181 + "CenteredDataForPCA".impute_20 * 0.114376747777 + "CenteredDataForPCA".impute_21 * 0.187302706866 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.176907822732 + "CenteredDataForPCA".impute_3 * 0.044992551969 + "CenteredDataForPCA".impute_4 * -0.419686572419 + "CenteredDataForPCA".impute_5 * 0.0384136225228 + "CenteredDataForPCA".impute_6 * -0.0554368900323 + "CenteredDataForPCA".impute_7 * 0.145356041253 + "CenteredDataForPCA".impute_8 * -0.234014979158 + "CenteredDataForPCA".impute_9 * -0.209801322793 + "CenteredDataForPCA".impute_10 * 0.0685069752694 + "CenteredDataForPCA".impute_11 * 0.265955605753 + "CenteredDataForPCA".impute_12 * 0.374724079559 + "CenteredDataForPCA".impute_13 * 0.0385810054471 + "CenteredDataForPCA".impute_14 * -0.0619721806821 + "CenteredDataForPCA".impute_15 * 0.207065889504 + "CenteredDataForPCA".impute_16 * -0.00219262754616 + "CenteredDataForPCA".impute_17 * 0.514031408419 + "CenteredDataForPCA".impute_18 * -0.0722922303748 + "CenteredDataForPCA".impute_19 * 0.338125112586 + "CenteredDataForPCA".impute_20 * 0.0916241769977 + "CenteredDataForPCA".impute_21 * -0.0992659860593 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.703355234078 + "CenteredDataForPCA".impute_3 * -0.0231995922916 + "CenteredDataForPCA".impute_4 * -0.0493995670448 + "CenteredDataForPCA".impute_5 * -0.18871035642 + "CenteredDataForPCA".impute_6 * -0.0808134538181 + "CenteredDataForPCA".impute_7 * 0.208588266272 + "CenteredDataForPCA".impute_8 * -0.221729418886 + "CenteredDataForPCA".impute_9 * -0.019347734526 + "CenteredDataForPCA".impute_10 * -0.083683980698 + "CenteredDataForPCA".impute_11 * 0.0292257617636 + "CenteredDataForPCA".impute_12 * -0.204339516199 + "CenteredDataForPCA".impute_13 * 0.116159434428 + "CenteredDataForPCA".impute_14 * 0.0815198031752 + "CenteredDataForPCA".impute_15 * -0.156198635896 + "CenteredDataForPCA".impute_16 * -0.0510717155325 + "CenteredDataForPCA".impute_17 * 0.0749158208891 + "CenteredDataForPCA".impute_18 * -0.418413126542 + "CenteredDataForPCA".impute_19 * 0.238967031501 + "CenteredDataForPCA".impute_20 * -0.0377826750994 + "CenteredDataForPCA".impute_21 * 0.176498762244 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.0242441505403 + "CenteredDataForPCA".impute_3 * 0.0210257468853 + "CenteredDataForPCA".impute_4 * -0.303085307858 + "CenteredDataForPCA".impute_5 * -0.49813869452 + "CenteredDataForPCA".impute_6 * 0.333325409549 + "CenteredDataForPCA".impute_7 * -0.0725450201671 + "CenteredDataForPCA".impute_8 * 0.0703173128817 + "CenteredDataForPCA".impute_9 * 0.150949694821 + "CenteredDataForPCA".impute_10 * -0.126664448327 + "CenteredDataForPCA".impute_11 * 0.0662145279621 + "CenteredDataForPCA".impute_12 * 0.178426936638 + "CenteredDataForPCA".impute_13 * 0.376013111149 + "CenteredDataForPCA".impute_14 * 0.123199591737 + "CenteredDataForPCA".impute_15 * 0.35804206242 + "CenteredDataForPCA".impute_16 * -0.0366566473775 + "CenteredDataForPCA".impute_17 * -0.0814635040542 + "CenteredDataForPCA".impute_18 * -0.0708785429649 + "CenteredDataForPCA".impute_19 * -0.371563592211 + "CenteredDataForPCA".impute_20 * -0.117563020618 + "CenteredDataForPCA".impute_21 * 0.11384836545 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.220910157017 + "CenteredDataForPCA".impute_3 * 0.0077690084813 + "CenteredDataForPCA".impute_4 * 0.417690842487 + "CenteredDataForPCA".impute_5 * 0.345038963445 + "CenteredDataForPCA".impute_6 * 0.310639266362 + "CenteredDataForPCA".impute_7 * 0.0179736782196 + "CenteredDataForPCA".impute_8 * -0.383226180228 + "CenteredDataForPCA".impute_9 * 0.284125345114 + "CenteredDataForPCA".impute_10 * 0.0483567996701 + "CenteredDataForPCA".impute_11 * 0.167462116438 + "CenteredDataForPCA".impute_12 * -0.0879096242588 + "CenteredDataForPCA".impute_13 * 0.37785941742 + "CenteredDataForPCA".impute_14 * 0.00849196976709 + "CenteredDataForPCA".impute_15 * 0.022357347678 + "CenteredDataForPCA".impute_16 * -0.0294967231767 + "CenteredDataForPCA".impute_17 * 0.154255833383 + "CenteredDataForPCA".impute_18 * -0.338091072301 + "CenteredDataForPCA".impute_19 * -0.105557800693 + "CenteredDataForPCA".impute_20 * 0.0294282010674 + "CenteredDataForPCA".impute_21 * -0.0277990693941 AS anoova_13, "CenteredDataForPCA".impute_2 * -0.251775477292 + "CenteredDataForPCA".impute_3 * -0.00288766859798 + "CenteredDataForPCA".impute_4 * 0.12634392527 + "CenteredDataForPCA".impute_5 * 0.019280624972 + "CenteredDataForPCA".impute_6 * 0.254072934148 + "CenteredDataForPCA".impute_7 * 0.153628932281 + "CenteredDataForPCA".impute_8 * -0.223717288249 + "CenteredDataForPCA".impute_9 * 0.127200598862 + "CenteredDataForPCA".impute_10 * 0.0542018120782 + "CenteredDataForPCA".impute_11 * 0.308994202078 + "CenteredDataForPCA".impute_12 * 0.0800615160725 + "CenteredDataForPCA".impute_13 * 0.0476168590627 + "CenteredDataForPCA".impute_14 * -0.0793434179043 + "CenteredDataForPCA".impute_15 * 0.244038170134 + "CenteredDataForPCA".impute_16 * 0.0255692197153 + "CenteredDataForPCA".impute_17 * -0.409639116972 + "CenteredDataForPCA".impute_18 * 0.525779707732 + "CenteredDataForPCA".impute_19 * 0.373583989915 + "CenteredDataForPCA".impute_20 * 0.0747792000921 + "CenteredDataForPCA".impute_21 * -0.0536677595902 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.111449541634 + "CenteredDataForPCA".impute_3 * -0.046827698044 + "CenteredDataForPCA".impute_4 * 0.363694500117 + "CenteredDataForPCA".impute_5 * -0.171267355414 + "CenteredDataForPCA".impute_6 * 0.192898304524 + "CenteredDataForPCA".impute_7 * -0.204467077844 + "CenteredDataForPCA".impute_8 * -0.321166263596 + "CenteredDataForPCA".impute_9 * -0.241211432316 + "CenteredDataForPCA".impute_10 * -0.011097376481 + "CenteredDataForPCA".impute_11 * -0.455785708747 + "CenteredDataForPCA".impute_12 * 0.110288168193 + "CenteredDataForPCA".impute_13 * -0.150956095194 + "CenteredDataForPCA".impute_14 * 0.198182485029 + "CenteredDataForPCA".impute_15 * 0.189788879404 + "CenteredDataForPCA".impute_16 * -0.123852750466 + "CenteredDataForPCA".impute_17 * 0.374599357152 + "CenteredDataForPCA".impute_18 * 0.275166445845 + "CenteredDataForPCA".impute_19 * 0.0198893693786 + "CenteredDataForPCA".impute_20 * -0.104759482749 + "CenteredDataForPCA".impute_21 * 0.150235514849 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.0164108591747 + "CenteredDataForPCA".impute_3 * 0.0490163406951 + "CenteredDataForPCA".impute_4 * 0.0617772953425 + "CenteredDataForPCA".impute_5 * -0.0437190449655 + "CenteredDataForPCA".impute_6 * -0.40765566771 + "CenteredDataForPCA".impute_7 * 0.14898502918 + "CenteredDataForPCA".impute_8 * -0.240179157442 + "CenteredDataForPCA".impute_9 * -0.199173394842 + "CenteredDataForPCA".impute_10 * -0.0741463645007 + "CenteredDataForPCA".impute_11 * 0.0124855187811 + "CenteredDataForPCA".impute_12 * 0.168685930564 + "CenteredDataForPCA".impute_13 * 0.521828804119 + "CenteredDataForPCA".impute_14 * -0.0863081055192 + "CenteredDataForPCA".impute_15 * -0.345754622222 + "CenteredDataForPCA".impute_16 * -0.00354467610985 + "CenteredDataForPCA".impute_17 * 0.00609739919882 + "CenteredDataForPCA".impute_18 * 0.374495255783 + "CenteredDataForPCA".impute_19 * -0.315531128214 + "CenteredDataForPCA".impute_20 * 0.139191864158 + "CenteredDataForPCA".impute_21 * 0.114998568655 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.134704670968 + "CenteredDataForPCA".impute_3 * 0.0584935920311 + "CenteredDataForPCA".impute_4 * -0.140050299344 + "CenteredDataForPCA".impute_5 * 0.0768788231675 + "CenteredDataForPCA".impute_6 * -0.0367959882476 + "CenteredDataForPCA".impute_7 * 0.149861820616 + "CenteredDataForPCA".impute_8 * 0.0787170246953 + "CenteredDataForPCA".impute_9 * 0.225135493194 + "CenteredDataForPCA".impute_10 * -0.00779550617107 + "CenteredDataForPCA".impute_11 * 0.192357116849 + "CenteredDataForPCA".impute_12 * -0.586970671777 + "CenteredDataForPCA".impute_13 * -0.0822190679121 + "CenteredDataForPCA".impute_14 * -0.009027031093 + "CenteredDataForPCA".impute_15 * 0.192184288761 + "CenteredDataForPCA".impute_16 * -0.0348326954245 + "CenteredDataForPCA".impute_17 * 0.478880886312 + "CenteredDataForPCA".impute_18 * 0.371807247595 + "CenteredDataForPCA".impute_19 * -0.270818916547 + "CenteredDataForPCA".impute_20 * 0.0684072887601 + "CenteredDataForPCA".impute_21 * 0.00613889856027 AS anoova_17, "CenteredDataForPCA".impute_2 * 0.159121242442 + "CenteredDataForPCA".impute_3 * 0.00336871572961 + "CenteredDataForPCA".impute_4 * 0.138114505492 + "CenteredDataForPCA".impute_5 * -0.189810287839 + "CenteredDataForPCA".impute_6 * -0.620627950553 + "CenteredDataForPCA".impute_7 * 0.00558341411106 + "CenteredDataForPCA".impute_8 * -0.35399002599 + "CenteredDataForPCA".impute_9 * 0.339696064012 + "CenteredDataForPCA".impute_10 * -0.0988493731021 + "CenteredDataForPCA".impute_11 * 0.081480671914 + "CenteredDataForPCA".impute_12 * 0.0431498623002 + "CenteredDataForPCA".impute_13 * -0.268890433206 + "CenteredDataForPCA".impute_14 * 0.056856403693 + "CenteredDataForPCA".impute_15 * 0.380234737384 + "CenteredDataForPCA".impute_16 * -0.00566411481681 + "CenteredDataForPCA".impute_17 * -0.149033181798 + "CenteredDataForPCA".impute_18 * -0.12203517668 + "CenteredDataForPCA".impute_19 * -0.0656354383295 + "CenteredDataForPCA".impute_20 * -0.0689117960602 + "CenteredDataForPCA".impute_21 * 0.0952636106501 AS anoova_18, "CenteredDataForPCA".impute_2 * 0.2651079657 + "CenteredDataForPCA".impute_3 * 0.0347121937797 + "CenteredDataForPCA".impute_4 * 0.1141563628 + "CenteredDataForPCA".impute_5 * -0.377680336738 + "CenteredDataForPCA".impute_6 * 0.180259851631 + "CenteredDataForPCA".impute_7 * 0.22086545094 + "CenteredDataForPCA".impute_8 * -0.243894411339 + "CenteredDataForPCA".impute_9 * -0.541033033093 + "CenteredDataForPCA".impute_10 * 0.0245563051477 + "CenteredDataForPCA".impute_11 * 0.297437164703 + "CenteredDataForPCA".impute_12 * -0.334527274652 + "CenteredDataForPCA".impute_13 * -0.233571290501 + "CenteredDataForPCA".impute_14 * -0.0543728320641 + "CenteredDataForPCA".impute_15 * -0.0632783402893 + "CenteredDataForPCA".impute_16 * 0.036217991421 + "CenteredDataForPCA".impute_17 * -0.15243005869 + "CenteredDataForPCA".impute_18 * -0.108906123527 + "CenteredDataForPCA".impute_19 * -0.170033235823 + "CenteredDataForPCA".impute_20 * 0.0244349741573 + "CenteredDataForPCA".impute_21 * -0.104643555411 AS anoova_19, "CenteredDataForPCA".impute_2 * -8.7126965097e-17 + "CenteredDataForPCA".impute_3 * 0.563183480662 + "CenteredDataForPCA".impute_4 * -5.55111512313e-17 + "CenteredDataForPCA".impute_5 * 2.70616862252e-16 + "CenteredDataForPCA".impute_6 * 3.33066907388e-16 + "CenteredDataForPCA".impute_7 * 7.2858385991e-17 + "CenteredDataForPCA".impute_8 * -6.93889390391e-18 + "CenteredDataForPCA".impute_9 * -3.46944695195e-17 + "CenteredDataForPCA".impute_10 * 0.545348587261 + "CenteredDataForPCA".impute_11 * -5.89805981832e-17 + "CenteredDataForPCA".impute_12 * 5.46437894933e-17 + "CenteredDataForPCA".impute_13 * 1.04083408559e-16 + "CenteredDataForPCA".impute_14 * -0.168024533687 + "CenteredDataForPCA".impute_15 * 3.64291929955e-17 + "CenteredDataForPCA".impute_16 * 0.261143677212 + "CenteredDataForPCA".impute_17 * -2.08166817117e-17 + "CenteredDataForPCA".impute_18 * 1.38777878078e-17 + "CenteredDataForPCA".impute_19 * -2.77555756156e-17 + "CenteredDataForPCA".impute_20 * -0.345573013077 + "CenteredDataForPCA".impute_21 * 0.411789162128 AS anoova_20, "CenteredDataForPCA".impute_2 * 8.91511175441e-17 + "CenteredDataForPCA".impute_3 * -0.0314638805465 + "CenteredDataForPCA".impute_4 * 2.60208521397e-17 + "CenteredDataForPCA".impute_5 * -1.0798653638e-16 + "CenteredDataForPCA".impute_6 * -2.64545330086e-17 + "CenteredDataForPCA".impute_7 * -1.81387023457e-16 + "CenteredDataForPCA".impute_8 * -2.10335221462e-17 + "CenteredDataForPCA".impute_9 * -7.3725747729e-18 + "CenteredDataForPCA".impute_10 * -0.0684700101566 + "CenteredDataForPCA".impute_11 * 1.36609473733e-17 + "CenteredDataForPCA".impute_12 * -8.77526133355e-17 + "CenteredDataForPCA".impute_13 * -8.32667268469e-17 + "CenteredDataForPCA".impute_14 * -0.619070335374 + "CenteredDataForPCA".impute_15 * 1.08528637466e-16 + "CenteredDataForPCA".impute_16 * -0.670246012928 + "CenteredDataForPCA".impute_17 * -1.14925430283e-16 + "CenteredDataForPCA".impute_18 * -1.25767452008e-16 + "CenteredDataForPCA".impute_19 * 1.12323345069e-16 + "CenteredDataForPCA".impute_20 * -0.401141992747 + "CenteredDataForPCA".impute_21 * -0.0304825458207 AS anoova_21 
FROM "CenteredDataForPCA"), 
linear_model_cte AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", -0.09794135428520508 * "ADS_ano_2_OUT".anoova_2 + 0.05395620831759244 * "ADS_ano_2_OUT".anoova_3 + -0.1791676992382359 * "ADS_ano_2_OUT".anoova_4 + -0.16769660012611431 * "ADS_ano_2_OUT".anoova_5 + 0.09118666610415091 * "ADS_ano_2_OUT".anoova_6 + -0.00887490355312522 * "ADS_ano_2_OUT".anoova_7 + 0.026723095347692252 * "ADS_ano_2_OUT".anoova_8 + -0.1307562221831381 * "ADS_ano_2_OUT".anoova_9 + -0.05656755193451174 * "ADS_ano_2_OUT".anoova_10 + -0.08148993587624198 * "ADS_ano_2_OUT".anoova_11 + -0.09608976932970827 * "ADS_ano_2_OUT".anoova_12 + 0.11188905107892089 * "ADS_ano_2_OUT".anoova_13 + 0.03798141477440271 * "ADS_ano_2_OUT".anoova_14 + -0.03409829063090558 * "ADS_ano_2_OUT".anoova_15 + -0.18302178432804428 * "ADS_ano_2_OUT".anoova_16 + 0.03824410583358025 * "ADS_ano_2_OUT".anoova_17 + -0.06483108886370628 * "ADS_ano_2_OUT".anoova_18 + 0.07635184158035749 * "ADS_ano_2_OUT".anoova_19 + -5.062883796771181e-16 * "ADS_ano_2_OUT".anoova_20 + -1.6664656623277232e-16 * "ADS_ano_2_OUT".anoova_21 + -0.5 AS "Score_0", 0.044995904046363 * "ADS_ano_2_OUT".anoova_2 + 0.08742318438250103 * "ADS_ano_2_OUT".anoova_3 + 0.11324219748600863 * "ADS_ano_2_OUT".anoova_4 + 0.08374616631390268 * "ADS_ano_2_OUT".anoova_5 + -0.030031382901683598 * "ADS_ano_2_OUT".anoova_6 + 0.0031433722461028865 * "ADS_ano_2_OUT".anoova_7 + 0.04384210443582705 * "ADS_ano_2_OUT".anoova_8 + -0.06413422129858687 * "ADS_ano_2_OUT".anoova_9 + -0.11715763827346819 * "ADS_ano_2_OUT".anoova_10 + 0.012987517435051159 * "ADS_ano_2_OUT".anoova_11 + 0.18256658521206945 * "ADS_ano_2_OUT".anoova_12 + -0.05154137241529026 * "ADS_ano_2_OUT".anoova_13 + 0.02099992905607108 * "ADS_ano_2_OUT".anoova_14 + 0.03630435264758055 * "ADS_ano_2_OUT".anoova_15 + 0.15090064766283762 * "ADS_ano_2_OUT".anoova_16 + -0.10702794721700182 * "ADS_ano_2_OUT".anoova_17 + -0.007120236922995437 * "ADS_ano_2_OUT".anoova_18 + -0.04813075999407199 * "ADS_ano_2_OUT".anoova_19 + -5.860932802032627e-16 * "ADS_ano_2_OUT".anoova_20 + -2.0041429293088673e-16 * "ADS_ano_2_OUT".anoova_21 + -0.52 AS "Score_1", 0.02827002166892223 * "ADS_ano_2_OUT".anoova_2 + -0.12443047238798485 * "ADS_ano_2_OUT".anoova_3 + -0.08004540258077072 * "ADS_ano_2_OUT".anoova_4 + -0.06951050146621031 * "ADS_ano_2_OUT".anoova_5 + -0.07009223107151781 * "ADS_ano_2_OUT".anoova_6 + -0.06598291992255724 * "ADS_ano_2_OUT".anoova_7 + -0.10496478116610615 * "ADS_ano_2_OUT".anoova_8 + -0.004809862085275812 * "ADS_ano_2_OUT".anoova_9 + 0.06345708993763445 * "ADS_ano_2_OUT".anoova_10 + -0.11834708679991673 * "ADS_ano_2_OUT".anoova_11 + -0.14523865318970464 * "ADS_ano_2_OUT".anoova_12 + 0.03410516398243182 * "ADS_ano_2_OUT".anoova_13 + -0.017863953098022613 * "ADS_ano_2_OUT".anoova_14 + -0.03761865317103215 * "ADS_ano_2_OUT".anoova_15 + 0.11841048177198271 * "ADS_ano_2_OUT".anoova_16 + -0.034211860131442944 * "ADS_ano_2_OUT".anoova_17 + -0.01679358390936041 * "ADS_ano_2_OUT".anoova_18 + -0.05135472243289328 * "ADS_ano_2_OUT".anoova_19 + 3.7500172122805055e-16 * "ADS_ano_2_OUT".anoova_20 + 3.572584469027382e-16 * "ADS_ano_2_OUT".anoova_21 + -0.5 AS "Score_2", 0.024675428569919736 * "ADS_ano_2_OUT".anoova_2 + -0.016948920312111954 * "ADS_ano_2_OUT".anoova_3 + 0.1459709043329984 * "ADS_ano_2_OUT".anoova_4 + 0.15346093527842178 * "ADS_ano_2_OUT".anoova_5 + 0.008936947869050249 * "ADS_ano_2_OUT".anoova_6 + 0.07171445122957928 * "ADS_ano_2_OUT".anoova_7 + 0.034399581382586794 * "ADS_ano_2_OUT".anoova_8 + 0.19970030556699914 * "ADS_ano_2_OUT".anoova_9 + 0.11026810027034498 * "ADS_ano_2_OUT".anoova_10 + 0.18684950524110783 * "ADS_ano_2_OUT".anoova_11 + 0.05876183730734482 * "ADS_ano_2_OUT".anoova_12 + -0.09445284264606103 * "ADS_ano_2_OUT".anoova_13 + -0.041117390732451665 * "ADS_ano_2_OUT".anoova_14 + 0.03541259115435727 * "ADS_ano_2_OUT".anoova_15 + -0.08628934510677498 * "ADS_ano_2_OUT".anoova_16 + 0.1029957015148644 * "ADS_ano_2_OUT".anoova_17 + 0.0887449096960622 * "ADS_ano_2_OUT".anoova_18 + 0.023133640846607743 * "ADS_ano_2_OUT".anoova_19 + 7.173799386523305e-16 * "ADS_ano_2_OUT".anoova_20 + 9.802412260920967e-18 * "ADS_ano_2_OUT".anoova_21 + -0.48 AS "Score_3" 
FROM "ADS_ano_2_OUT"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte