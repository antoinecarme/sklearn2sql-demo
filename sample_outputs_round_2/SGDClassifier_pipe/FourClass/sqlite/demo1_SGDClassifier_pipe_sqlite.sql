-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.104794651388 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0477588483292 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.057202897138 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0295895457204 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.358747760728 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0286851540339 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.977469020826 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.309416769424 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0566760063754 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.0989027402533 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.115731907849 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.0967277819391 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.0790701149314 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.249593978612 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0647629569091 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.114755941222 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.129475481814 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.103216473402 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.141793295681 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.127962839715 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.104794651388 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.0477588483292 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.057202897138 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.0295895457204 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.358747760728 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.0286851540339 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.977469020826 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.309416769424 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.0566760063754 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.0989027402533 AS impute_11, "ADS_imp_1_OUT".impute_12 - 0.115731907849 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.0967277819391 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.0790701149314 AS impute_14, "ADS_imp_1_OUT".impute_15 - 0.249593978612 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.0647629569091 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.114755941222 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.129475481814 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.103216473402 AS impute_19, "ADS_imp_1_OUT".impute_20 - 0.141793295681 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.127962839715 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.03727140009 + "CenteredDataForPCA".impute_3 * 0.135539871715 + "CenteredDataForPCA".impute_4 * 0.0713340615999 + "CenteredDataForPCA".impute_5 * -0.0631256609195 + "CenteredDataForPCA".impute_6 * 0.487724243099 + "CenteredDataForPCA".impute_7 * 0.0437612358504 + "CenteredDataForPCA".impute_8 * -0.272473147741 + "CenteredDataForPCA".impute_9 * -0.53238947799 + "CenteredDataForPCA".impute_10 * 0.00334912740064 + "CenteredDataForPCA".impute_11 * -0.608051711946 + "CenteredDataForPCA".impute_12 * -0.0197537354371 + "CenteredDataForPCA".impute_13 * 0.0287711881405 + "CenteredDataForPCA".impute_14 * 0.0155974503704 + "CenteredDataForPCA".impute_15 * 0.0364164594945 + "CenteredDataForPCA".impute_16 * -0.0206057445639 + "CenteredDataForPCA".impute_17 * 0.011589871519 + "CenteredDataForPCA".impute_18 * -0.00855328109278 + "CenteredDataForPCA".impute_19 * 0.00936319989137 + "CenteredDataForPCA".impute_20 * 0.0117641312592 + "CenteredDataForPCA".impute_21 * 0.0176792761652 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.085403181771 + "CenteredDataForPCA".impute_3 * -0.365795134488 + "CenteredDataForPCA".impute_4 * 0.0214490451402 + "CenteredDataForPCA".impute_5 * -0.0588903736159 + "CenteredDataForPCA".impute_6 * 0.434359899652 + "CenteredDataForPCA".impute_7 * 0.0597542866211 + "CenteredDataForPCA".impute_8 * 0.614853745635 + "CenteredDataForPCA".impute_9 * -0.00239359320271 + "CenteredDataForPCA".impute_10 * 0.126018167393 + "CenteredDataForPCA".impute_11 * -0.0199275547846 + "CenteredDataForPCA".impute_12 * 0.0787475474579 + "CenteredDataForPCA".impute_13 * 0.090410775006 + "CenteredDataForPCA".impute_14 * -0.0414340828531 + "CenteredDataForPCA".impute_15 * -0.425398711359 + "CenteredDataForPCA".impute_16 * -0.0833515525651 + "CenteredDataForPCA".impute_17 * 0.118883106781 + "CenteredDataForPCA".impute_18 * -0.12819838945 + "CenteredDataForPCA".impute_19 * -0.118140447987 + "CenteredDataForPCA".impute_20 * -0.139037344412 + "CenteredDataForPCA".impute_21 * 0.0233292985437 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.107296034303 + "CenteredDataForPCA".impute_3 * 0.658619233327 + "CenteredDataForPCA".impute_4 * -0.00627640469177 + "CenteredDataForPCA".impute_5 * -0.0741624334049 + "CenteredDataForPCA".impute_6 * 0.0759563057332 + "CenteredDataForPCA".impute_7 * -0.0701428203699 + "CenteredDataForPCA".impute_8 * 0.45299457748 + "CenteredDataForPCA".impute_9 * 0.167488664239 + "CenteredDataForPCA".impute_10 * 0.114187467983 + "CenteredDataForPCA".impute_11 * -0.133379688362 + "CenteredDataForPCA".impute_12 * 0.097975803462 + "CenteredDataForPCA".impute_13 * -0.0026787778931 + "CenteredDataForPCA".impute_14 * -0.35136796409 + "CenteredDataForPCA".impute_15 * 0.258407464767 + "CenteredDataForPCA".impute_16 * -0.182614102709 + "CenteredDataForPCA".impute_17 * -0.0691645048291 + "CenteredDataForPCA".impute_18 * -0.10148498449 + "CenteredDataForPCA".impute_19 * 0.0654086812436 + "CenteredDataForPCA".impute_20 * 0.145694800026 + "CenteredDataForPCA".impute_21 * -0.0248508050474 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.14904158639 + "CenteredDataForPCA".impute_3 * 0.24054453486 + "CenteredDataForPCA".impute_4 * 0.148626669337 + "CenteredDataForPCA".impute_5 * 0.252456761587 + "CenteredDataForPCA".impute_6 * -0.0375939788861 + "CenteredDataForPCA".impute_7 * 0.0997747166996 + "CenteredDataForPCA".impute_8 * -0.039527845055 + "CenteredDataForPCA".impute_9 * -0.0313134381849 + "CenteredDataForPCA".impute_10 * -0.0275166201094 + "CenteredDataForPCA".impute_11 * 0.0202806257769 + "CenteredDataForPCA".impute_12 * 0.345448884714 + "CenteredDataForPCA".impute_13 * 0.391440497226 + "CenteredDataForPCA".impute_14 * -0.0718830648158 + "CenteredDataForPCA".impute_15 * -0.136517208052 + "CenteredDataForPCA".impute_16 * 0.354024713729 + "CenteredDataForPCA".impute_17 * 0.0333962793677 + "CenteredDataForPCA".impute_18 * 0.186579685182 + "CenteredDataForPCA".impute_19 * -0.0121234010432 + "CenteredDataForPCA".impute_20 * -0.428762236443 + "CenteredDataForPCA".impute_21 * -0.421202254283 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.315424646937 + "CenteredDataForPCA".impute_3 * -0.220490776694 + "CenteredDataForPCA".impute_4 * -0.309384568205 + "CenteredDataForPCA".impute_5 * 0.182026513352 + "CenteredDataForPCA".impute_6 * 0.0770101439678 + "CenteredDataForPCA".impute_7 * 0.204521501483 + "CenteredDataForPCA".impute_8 * 0.135097295084 + "CenteredDataForPCA".impute_9 * 0.0917457508964 + "CenteredDataForPCA".impute_10 * -0.00559803523828 + "CenteredDataForPCA".impute_11 * -0.134484665994 + "CenteredDataForPCA".impute_12 * 0.489420649006 + "CenteredDataForPCA".impute_13 * -0.0113157785093 + "CenteredDataForPCA".impute_14 * 0.0884130318188 + "CenteredDataForPCA".impute_15 * 0.465030749539 + "CenteredDataForPCA".impute_16 * 0.229978892516 + "CenteredDataForPCA".impute_17 * -0.0197153362237 + "CenteredDataForPCA".impute_18 * -0.16406395663 + "CenteredDataForPCA".impute_19 * 0.175990554108 + "CenteredDataForPCA".impute_20 * -0.0961370931335 + "CenteredDataForPCA".impute_21 * 0.21529270964 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.263465228516 + "CenteredDataForPCA".impute_3 * -0.33943046866 + "CenteredDataForPCA".impute_4 * 0.242355941322 + "CenteredDataForPCA".impute_5 * -0.0873987539762 + "CenteredDataForPCA".impute_6 * 0.0202710778144 + "CenteredDataForPCA".impute_7 * -0.00389594161682 + "CenteredDataForPCA".impute_8 * 0.0533263035914 + "CenteredDataForPCA".impute_9 * 0.108719764153 + "CenteredDataForPCA".impute_10 * 0.267750424161 + "CenteredDataForPCA".impute_11 * -0.106624520279 + "CenteredDataForPCA".impute_12 * -0.282195028789 + "CenteredDataForPCA".impute_13 * 0.356051992644 + "CenteredDataForPCA".impute_14 * 0.0222074083553 + "CenteredDataForPCA".impute_15 * 0.541310958282 + "CenteredDataForPCA".impute_16 * -0.104945920358 + "CenteredDataForPCA".impute_17 * -0.291446298384 + "CenteredDataForPCA".impute_18 * 0.130090066222 + "CenteredDataForPCA".impute_19 * -0.0512523850132 + "CenteredDataForPCA".impute_20 * -0.180139441318 + "CenteredDataForPCA".impute_21 * -0.0545564953527 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.105331069326 + "CenteredDataForPCA".impute_3 * 0.0463387351716 + "CenteredDataForPCA".impute_4 * -0.104388324034 + "CenteredDataForPCA".impute_5 * 0.110957197945 + "CenteredDataForPCA".impute_6 * 0.132915599028 + "CenteredDataForPCA".impute_7 * 0.0412906593354 + "CenteredDataForPCA".impute_8 * 0.223875919833 + "CenteredDataForPCA".impute_9 * 0.00428879182694 + "CenteredDataForPCA".impute_10 * 0.070517506509 + "CenteredDataForPCA".impute_11 * -0.0228449751765 + "CenteredDataForPCA".impute_12 * -0.000966214930466 + "CenteredDataForPCA".impute_13 * -0.135094121871 + "CenteredDataForPCA".impute_14 * 0.278680669525 + "CenteredDataForPCA".impute_15 * -0.136660627311 + "CenteredDataForPCA".impute_16 * 0.0687256081406 + "CenteredDataForPCA".impute_17 * -0.439878834667 + "CenteredDataForPCA".impute_18 * 0.680260568853 + "CenteredDataForPCA".impute_19 * 0.213306514349 + "CenteredDataForPCA".impute_20 * 0.248723572274 + "CenteredDataForPCA".impute_21 * -0.074968228443 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.169848014047 + "CenteredDataForPCA".impute_3 * 0.159385402444 + "CenteredDataForPCA".impute_4 * -0.135865524208 + "CenteredDataForPCA".impute_5 * -0.385607159963 + "CenteredDataForPCA".impute_6 * -0.0468255779081 + "CenteredDataForPCA".impute_7 * 0.423365119984 + "CenteredDataForPCA".impute_8 * 0.0561813413146 + "CenteredDataForPCA".impute_9 * 0.0499307084755 + "CenteredDataForPCA".impute_10 * -0.208026226183 + "CenteredDataForPCA".impute_11 * 0.0416206466092 + "CenteredDataForPCA".impute_12 * -0.109467067955 + "CenteredDataForPCA".impute_13 * 0.605328793142 + "CenteredDataForPCA".impute_14 * 0.228731043973 + "CenteredDataForPCA".impute_15 * -0.0246661277527 + "CenteredDataForPCA".impute_16 * -0.0643850919972 + "CenteredDataForPCA".impute_17 * 0.221176231489 + "CenteredDataForPCA".impute_18 * 0.103880302235 + "CenteredDataForPCA".impute_19 * 0.0036888381885 + "CenteredDataForPCA".impute_20 * 0.194619230146 + "CenteredDataForPCA".impute_21 * 0.115889282422 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.13359857317 + "CenteredDataForPCA".impute_3 * -0.131468105594 + "CenteredDataForPCA".impute_4 * 0.237398312579 + "CenteredDataForPCA".impute_5 * -0.180870645834 + "CenteredDataForPCA".impute_6 * 0.0703936804007 + "CenteredDataForPCA".impute_7 * -0.261962949885 + "CenteredDataForPCA".impute_8 * 0.128894754447 + "CenteredDataForPCA".impute_9 * 0.049724110642 + "CenteredDataForPCA".impute_10 * -0.150226800927 + "CenteredDataForPCA".impute_11 * -0.0522228453462 + "CenteredDataForPCA".impute_12 * -0.0745981349365 + "CenteredDataForPCA".impute_13 * -0.0638267531327 + "CenteredDataForPCA".impute_14 * -0.16521467936 + "CenteredDataForPCA".impute_15 * 0.16239931193 + "CenteredDataForPCA".impute_16 * 0.528606392096 + "CenteredDataForPCA".impute_17 * 0.477316149567 + "CenteredDataForPCA".impute_18 * 0.269686763281 + "CenteredDataForPCA".impute_19 * 0.242222634461 + "CenteredDataForPCA".impute_20 * 0.211900903873 + "CenteredDataForPCA".impute_21 * 0.104716542289 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.212725597202 + "CenteredDataForPCA".impute_3 * 0.117261601426 + "CenteredDataForPCA".impute_4 * 0.386484388767 + "CenteredDataForPCA".impute_5 * -0.203438966378 + "CenteredDataForPCA".impute_6 * -0.064346343484 + "CenteredDataForPCA".impute_7 * -0.107586295569 + "CenteredDataForPCA".impute_8 * -0.0639404133786 + "CenteredDataForPCA".impute_9 * -0.0185067534261 + "CenteredDataForPCA".impute_10 * 0.255251128464 + "CenteredDataForPCA".impute_11 * 0.075697350062 + "CenteredDataForPCA".impute_12 * 0.211123993867 + "CenteredDataForPCA".impute_13 * 0.135911622921 + "CenteredDataForPCA".impute_14 * -0.0594617364684 + "CenteredDataForPCA".impute_15 * -0.17891997001 + "CenteredDataForPCA".impute_16 * 0.307758469468 + "CenteredDataForPCA".impute_17 * -0.345910738743 + "CenteredDataForPCA".impute_18 * -0.047338409868 + "CenteredDataForPCA".impute_19 * -0.252839699557 + "CenteredDataForPCA".impute_20 * 0.0373166919909 + "CenteredDataForPCA".impute_21 * 0.5279074937 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.39210425968 + "CenteredDataForPCA".impute_3 * 0.199780937366 + "CenteredDataForPCA".impute_4 * 0.0294306992743 + "CenteredDataForPCA".impute_5 * -0.00215085352164 + "CenteredDataForPCA".impute_6 * 0.00883529077788 + "CenteredDataForPCA".impute_7 * -0.311020554702 + "CenteredDataForPCA".impute_8 * 0.131619494342 + "CenteredDataForPCA".impute_9 * 0.0653654831361 + "CenteredDataForPCA".impute_10 * 0.0772907222107 + "CenteredDataForPCA".impute_11 * -0.0470861902925 + "CenteredDataForPCA".impute_12 * -0.112815297023 + "CenteredDataForPCA".impute_13 * -0.113558716272 + "CenteredDataForPCA".impute_14 * 0.313150053671 + "CenteredDataForPCA".impute_15 * 0.137941280349 + "CenteredDataForPCA".impute_16 * -0.162102853117 + "CenteredDataForPCA".impute_17 * 0.339272112103 + "CenteredDataForPCA".impute_18 * 0.280653026339 + "CenteredDataForPCA".impute_19 * -0.287798088414 + "CenteredDataForPCA".impute_20 * -0.47354383827 + "CenteredDataForPCA".impute_21 * 0.0945395627257 AS anoova_12, "CenteredDataForPCA".impute_2 * -0.438635332058 + "CenteredDataForPCA".impute_3 * -0.089933922362 + "CenteredDataForPCA".impute_4 * 0.335568725503 + "CenteredDataForPCA".impute_5 * 0.20356223875 + "CenteredDataForPCA".impute_6 * 0.039563796339 + "CenteredDataForPCA".impute_7 * 0.356901345648 + "CenteredDataForPCA".impute_8 * 0.0950494626736 + "CenteredDataForPCA".impute_9 * 0.0383503074643 + "CenteredDataForPCA".impute_10 * -0.404412431258 + "CenteredDataForPCA".impute_11 * -0.00876799098142 + "CenteredDataForPCA".impute_12 * -0.246846718312 + "CenteredDataForPCA".impute_13 * -0.112992338939 + "CenteredDataForPCA".impute_14 * -0.462739073651 + "CenteredDataForPCA".impute_15 * 0.0594243845289 + "CenteredDataForPCA".impute_16 * -0.0322791531626 + "CenteredDataForPCA".impute_17 * -0.110336733307 + "CenteredDataForPCA".impute_18 * 0.106607574674 + "CenteredDataForPCA".impute_19 * -0.145698945249 + "CenteredDataForPCA".impute_20 * -0.0511584701862 + "CenteredDataForPCA".impute_21 * -0.051046189189 AS anoova_13, "CenteredDataForPCA".impute_2 * -0.0798559834154 + "CenteredDataForPCA".impute_3 * 0.11228458071 + "CenteredDataForPCA".impute_4 * -0.0992715272924 + "CenteredDataForPCA".impute_5 * -0.463445083844 + "CenteredDataForPCA".impute_6 * -0.0064566542452 + "CenteredDataForPCA".impute_7 * 0.165616647948 + "CenteredDataForPCA".impute_8 * 0.0413328121211 + "CenteredDataForPCA".impute_9 * 0.00746734713309 + "CenteredDataForPCA".impute_10 * 0.0424450780689 + "CenteredDataForPCA".impute_11 * 0.026471957642 + "CenteredDataForPCA".impute_12 * -0.298287346076 + "CenteredDataForPCA".impute_13 * -0.235327736368 + "CenteredDataForPCA".impute_14 * -0.00165697665585 + "CenteredDataForPCA".impute_15 * -0.0896612047298 + "CenteredDataForPCA".impute_16 * 0.260867595065 + "CenteredDataForPCA".impute_17 * -0.204589435553 + "CenteredDataForPCA".impute_18 * -0.170267640469 + "CenteredDataForPCA".impute_19 * 0.431671415282 + "CenteredDataForPCA".impute_20 * -0.49340988661 + "CenteredDataForPCA".impute_21 * -0.0596006836419 AS anoova_14, "CenteredDataForPCA".impute_2 * 0.121348625789 + "CenteredDataForPCA".impute_3 * 0.213661314853 + "CenteredDataForPCA".impute_4 * 0.0159093143712 + "CenteredDataForPCA".impute_5 * 0.594864510895 + "CenteredDataForPCA".impute_6 * 0.0365227548388 + "CenteredDataForPCA".impute_7 * 0.126782474598 + "CenteredDataForPCA".impute_8 * 0.123327937809 + "CenteredDataForPCA".impute_9 * 0.016332085036 + "CenteredDataForPCA".impute_10 * 0.0970323764885 + "CenteredDataForPCA".impute_11 * -0.0208587608392 + "CenteredDataForPCA".impute_12 * -0.492082256816 + "CenteredDataForPCA".impute_13 * 0.0972524862961 + "CenteredDataForPCA".impute_14 * 0.244793137772 + "CenteredDataForPCA".impute_15 * -0.0497184998487 + "CenteredDataForPCA".impute_16 * 0.270566358305 + "CenteredDataForPCA".impute_17 * 0.0576137820954 + "CenteredDataForPCA".impute_18 * -0.237724390061 + "CenteredDataForPCA".impute_19 * 0.0789674882613 + "CenteredDataForPCA".impute_20 * 0.0204704204825 + "CenteredDataForPCA".impute_21 * 0.298462682848 AS anoova_15, "CenteredDataForPCA".impute_2 * 0.307823985141 + "CenteredDataForPCA".impute_3 * 0.0110171961958 + "CenteredDataForPCA".impute_4 * -0.540946668529 + "CenteredDataForPCA".impute_5 * -0.0327765022358 + "CenteredDataForPCA".impute_6 * 0.0413292474761 + "CenteredDataForPCA".impute_7 * -0.138517548395 + "CenteredDataForPCA".impute_8 * 0.00300367796328 + "CenteredDataForPCA".impute_9 * -0.0306600425508 + "CenteredDataForPCA".impute_10 * -0.38002215721 + "CenteredDataForPCA".impute_11 * -0.0421513625955 + "CenteredDataForPCA".impute_12 * -0.105135251641 + "CenteredDataForPCA".impute_13 * 0.0539379906032 + "CenteredDataForPCA".impute_14 * -0.247839516875 + "CenteredDataForPCA".impute_15 * 0.00101861901226 + "CenteredDataForPCA".impute_16 * 0.150110694199 + "CenteredDataForPCA".impute_17 * -0.200256148872 + "CenteredDataForPCA".impute_18 * 0.195414857863 + "CenteredDataForPCA".impute_19 * -0.355067073511 + "CenteredDataForPCA".impute_20 * -0.205098882119 + "CenteredDataForPCA".impute_21 * 0.314703798143 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.192299697638 + "CenteredDataForPCA".impute_3 * -0.0251902881998 + "CenteredDataForPCA".impute_4 * 0.106039497002 + "CenteredDataForPCA".impute_5 * 0.0319705223227 + "CenteredDataForPCA".impute_6 * 0.0705587121178 + "CenteredDataForPCA".impute_7 * -0.562465364673 + "CenteredDataForPCA".impute_8 * 0.119199885266 + "CenteredDataForPCA".impute_9 * 0.0127472915021 + "CenteredDataForPCA".impute_10 * -0.509172907444 + "CenteredDataForPCA".impute_11 * -0.017828274914 + "CenteredDataForPCA".impute_12 * -0.0180787004394 + "CenteredDataForPCA".impute_13 * 0.292528650726 + "CenteredDataForPCA".impute_14 * 0.205128704047 + "CenteredDataForPCA".impute_15 * -0.0233477134613 + "CenteredDataForPCA".impute_16 * -0.0341114468998 + "CenteredDataForPCA".impute_17 * -0.285936065963 + "CenteredDataForPCA".impute_18 * -0.285748845219 + "CenteredDataForPCA".impute_19 * 0.213011754016 + "CenteredDataForPCA".impute_20 * 0.025327239844 + "CenteredDataForPCA".impute_21 * -0.125356729109 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.418562445721 + "CenteredDataForPCA".impute_3 * -0.0732992417295 + "CenteredDataForPCA".impute_4 * -0.385692948788 + "CenteredDataForPCA".impute_5 * 0.00933027267991 + "CenteredDataForPCA".impute_6 * 0.0173403444447 + "CenteredDataForPCA".impute_7 * -0.223622159351 + "CenteredDataForPCA".impute_8 * -0.0328784585688 + "CenteredDataForPCA".impute_9 * -0.0286512402433 + "CenteredDataForPCA".impute_10 * 0.393266899684 + "CenteredDataForPCA".impute_11 * -0.004167623474 + "CenteredDataForPCA".impute_12 * -0.258826285755 + "CenteredDataForPCA".impute_13 * 0.218319948514 + "CenteredDataForPCA".impute_14 * -0.279313529528 + "CenteredDataForPCA".impute_15 * -0.0306154516803 + "CenteredDataForPCA".impute_16 * 0.274635926738 + "CenteredDataForPCA".impute_17 * 0.00969483285398 + "CenteredDataForPCA".impute_18 * -0.0731092560064 + "CenteredDataForPCA".impute_19 * -0.159743120866 + "CenteredDataForPCA".impute_20 * 0.202821529501 + "CenteredDataForPCA".impute_21 * -0.350106619564 AS anoova_18, "CenteredDataForPCA".impute_2 * 0.107062870467 + "CenteredDataForPCA".impute_3 * 0.066541783325 + "CenteredDataForPCA".impute_4 * 0.0810875476011 + "CenteredDataForPCA".impute_5 * -0.18751960498 + "CenteredDataForPCA".impute_6 * 0.0412404981695 + "CenteredDataForPCA".impute_7 * 0.153220468553 + "CenteredDataForPCA".impute_8 * 0.143440238397 + "CenteredDataForPCA".impute_9 * 0.0622837423584 + "CenteredDataForPCA".impute_10 * -0.153456489265 + "CenteredDataForPCA".impute_11 * -0.0571540253429 + "CenteredDataForPCA".impute_12 * -0.00578221872736 + "CenteredDataForPCA".impute_13 * -0.277487029778 + "CenteredDataForPCA".impute_14 * 0.382956650448 + "CenteredDataForPCA".impute_15 * 0.162905245923 + "CenteredDataForPCA".impute_16 * 0.345448831316 + "CenteredDataForPCA".impute_17 * -0.100968546265 + "CenteredDataForPCA".impute_18 * -0.212610931847 + "CenteredDataForPCA".impute_19 * -0.5349961865 + "CenteredDataForPCA".impute_20 * 0.182104752018 + "CenteredDataForPCA".impute_21 * -0.348685236631 AS anoova_19, "CenteredDataForPCA".impute_2 * -1.69153594654e-16 + "CenteredDataForPCA".impute_3 * -0.123354438225 + "CenteredDataForPCA".impute_4 * -1.97758476261e-16 + "CenteredDataForPCA".impute_5 * 3.64291929955e-17 + "CenteredDataForPCA".impute_6 * -0.564988091224 + "CenteredDataForPCA".impute_7 * -2.08166817117e-17 + "CenteredDataForPCA".impute_8 * 0.12600461371 + "CenteredDataForPCA".impute_9 * 0.20894715959 + "CenteredDataForPCA".impute_10 * 0.0 + "CenteredDataForPCA".impute_11 * -0.735387467358 + "CenteredDataForPCA".impute_12 * -7.6327832943e-17 + "CenteredDataForPCA".impute_13 * -5.55111512313e-17 + "CenteredDataForPCA".impute_14 * -4.16333634234e-17 + "CenteredDataForPCA".impute_15 * -0.255423832131 + "CenteredDataForPCA".impute_16 * -7.2858385991e-17 + "CenteredDataForPCA".impute_17 * 1.52221985017e-16 + "CenteredDataForPCA".impute_18 * 1.37476835471e-16 + "CenteredDataForPCA".impute_19 * 6.07153216592e-17 + "CenteredDataForPCA".impute_20 * -7.1123662515e-17 + "CenteredDataForPCA".impute_21 * -2.08166817117e-17 AS anoova_20, "CenteredDataForPCA".impute_2 * 7.66783112264e-18 + "CenteredDataForPCA".impute_3 * -0.0416555663504 + "CenteredDataForPCA".impute_4 * -6.59194920871e-17 + "CenteredDataForPCA".impute_5 * -2.79941000936e-16 + "CenteredDataForPCA".impute_6 * -0.447279416066 + "CenteredDataForPCA".impute_7 * 1.83880688454e-16 + "CenteredDataForPCA".impute_8 * 0.388388430857 + "CenteredDataForPCA".impute_9 * -0.778737123773 + "CenteredDataForPCA".impute_10 * -2.77555756156e-17 + "CenteredDataForPCA".impute_11 * 0.148003583986 + "CenteredDataForPCA".impute_12 * 7.1123662515e-17 + "CenteredDataForPCA".impute_13 * -3.64291929955e-17 + "CenteredDataForPCA".impute_14 * 4.16333634234e-17 + "CenteredDataForPCA".impute_15 * 0.137926776648 + "CenteredDataForPCA".impute_16 * -4.90059381963e-17 + "CenteredDataForPCA".impute_17 * 9.69276742202e-17 + "CenteredDataForPCA".impute_18 * 4.23923049442e-17 + "CenteredDataForPCA".impute_19 * 1.18178036801e-16 + "CenteredDataForPCA".impute_20 * -2.34187669257e-17 + "CenteredDataForPCA".impute_21 * 3.46944695195e-17 AS anoova_21 
FROM "CenteredDataForPCA"), 
linear_model_cte AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", -12.551815893814283 * "ADS_ano_2_OUT".anoova_2 + 35.54025583192424 * "ADS_ano_2_OUT".anoova_3 + -59.358686126900416 * "ADS_ano_2_OUT".anoova_4 + -73.0325738576869 * "ADS_ano_2_OUT".anoova_5 + 26.843987453128673 * "ADS_ano_2_OUT".anoova_6 + 42.334356610894226 * "ADS_ano_2_OUT".anoova_7 + 13.41342833938584 * "ADS_ano_2_OUT".anoova_8 + 6.566211839018872 * "ADS_ano_2_OUT".anoova_9 + 4.569166881330212 * "ADS_ano_2_OUT".anoova_10 + -5.7005758753483 * "ADS_ano_2_OUT".anoova_11 + -30.307959054597372 * "ADS_ano_2_OUT".anoova_12 + 3.1176883116665675 * "ADS_ano_2_OUT".anoova_13 + 8.732327563779839 * "ADS_ano_2_OUT".anoova_14 + -52.92438005196182 * "ADS_ano_2_OUT".anoova_15 + 23.23340171506002 * "ADS_ano_2_OUT".anoova_16 + -7.162768881874496 * "ADS_ano_2_OUT".anoova_17 + 12.883770222568922 * "ADS_ano_2_OUT".anoova_18 + -32.16550345310182 * "ADS_ano_2_OUT".anoova_19 + 4.572494895854469e-14 * "ADS_ano_2_OUT".anoova_20 + -6.219271033655566e-14 * "ADS_ano_2_OUT".anoova_21 + -137.476006025 AS "Score_0", -2.46066134681859 * "ADS_ano_2_OUT".anoova_2 + -35.42497314111498 * "ADS_ano_2_OUT".anoova_3 + -6.993884203447474 * "ADS_ano_2_OUT".anoova_4 + -25.57571541976462 * "ADS_ano_2_OUT".anoova_5 + -51.13295696600954 * "ADS_ano_2_OUT".anoova_6 + -32.12159515799245 * "ADS_ano_2_OUT".anoova_7 + -22.8809423852879 * "ADS_ano_2_OUT".anoova_8 + -11.70759760963335 * "ADS_ano_2_OUT".anoova_9 + -4.316257027738018 * "ADS_ano_2_OUT".anoova_10 + -17.47531825074072 * "ADS_ano_2_OUT".anoova_11 + -17.461271012113254 * "ADS_ano_2_OUT".anoova_12 + -39.390300230815754 * "ADS_ano_2_OUT".anoova_13 + 16.051353078435852 * "ADS_ano_2_OUT".anoova_14 + 22.317993602113148 * "ADS_ano_2_OUT".anoova_15 + -19.877919461315837 * "ADS_ano_2_OUT".anoova_16 + -60.480777110841565 * "ADS_ano_2_OUT".anoova_17 + -29.04095073965273 * "ADS_ano_2_OUT".anoova_18 + -14.210993340617112 * "ADS_ano_2_OUT".anoova_19 + -8.943335031823934e-14 * "ADS_ano_2_OUT".anoova_20 + -4.660042665519299e-14 * "ADS_ano_2_OUT".anoova_21 + -111.370382363 AS "Score_1", -17.388853692013196 * "ADS_ano_2_OUT".anoova_2 + -35.49886567778859 * "ADS_ano_2_OUT".anoova_3 + 64.5902288953644 * "ADS_ano_2_OUT".anoova_4 + 24.826586713491523 * "ADS_ano_2_OUT".anoova_5 + 2.635161500918761 * "ADS_ano_2_OUT".anoova_6 + 22.250578728231485 * "ADS_ano_2_OUT".anoova_7 + 18.139293209887455 * "ADS_ano_2_OUT".anoova_8 + 27.160552291996343 * "ADS_ano_2_OUT".anoova_9 + -11.20772483086061 * "ADS_ano_2_OUT".anoova_10 + 17.94870715229429 * "ADS_ano_2_OUT".anoova_11 + -8.154413419897002 * "ADS_ano_2_OUT".anoova_12 + -33.70450850792888 * "ADS_ano_2_OUT".anoova_13 + 29.207610019355425 * "ADS_ano_2_OUT".anoova_14 + -5.242004490123679 * "ADS_ano_2_OUT".anoova_15 + -31.722551407114835 * "ADS_ano_2_OUT".anoova_16 + 16.071958385212223 * "ADS_ano_2_OUT".anoova_17 + 11.159976072381603 * "ADS_ano_2_OUT".anoova_18 + 46.045801573336036 * "ADS_ano_2_OUT".anoova_19 + -2.892603541717057e-14 * "ADS_ano_2_OUT".anoova_20 + -3.5263089249085815e-14 * "ADS_ano_2_OUT".anoova_21 + -151.659461244 AS "Score_2", 6.914636951135453 * "ADS_ano_2_OUT".anoova_2 + 39.27862724088519 * "ADS_ano_2_OUT".anoova_3 + 10.400397536422963 * "ADS_ano_2_OUT".anoova_4 + -3.6546042195509285 * "ADS_ano_2_OUT".anoova_5 + -20.94836785592503 * "ADS_ano_2_OUT".anoova_6 + -35.72768302010245 * "ADS_ano_2_OUT".anoova_7 + -53.57782559163415 * "ADS_ano_2_OUT".anoova_8 + -36.494206981185705 * "ADS_ano_2_OUT".anoova_9 + -14.976803542065944 * "ADS_ano_2_OUT".anoova_10 + 7.999758902676111 * "ADS_ano_2_OUT".anoova_11 + 8.757499164603335 * "ADS_ano_2_OUT".anoova_12 + 41.5181168196846 * "ADS_ano_2_OUT".anoova_13 + -51.08471888064897 * "ADS_ano_2_OUT".anoova_14 + -3.526735835477275 * "ADS_ano_2_OUT".anoova_15 + -19.866086629259094 * "ADS_ano_2_OUT".anoova_16 + -8.248095706055945 * "ADS_ano_2_OUT".anoova_17 + 30.977951791990915 * "ADS_ano_2_OUT".anoova_18 + 16.640207933952368 * "ADS_ano_2_OUT".anoova_19 + -1.1463304624846552e-14 * "ADS_ano_2_OUT".anoova_20 + 1.2766302796680074e-13 * "ADS_ano_2_OUT".anoova_21 + -123.897353083 AS "Score_3" 
FROM "ADS_ano_2_OUT"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte