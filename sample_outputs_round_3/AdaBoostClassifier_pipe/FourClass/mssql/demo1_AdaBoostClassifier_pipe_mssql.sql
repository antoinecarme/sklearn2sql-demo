-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.0363170824049 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN -0.376837793703 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.015666452248 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.0284386631976 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.0567020309635 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.0172160463771 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.192435763052 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.0629868948903 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.0632624525962 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -0.0527923156986 ELSE [ADS].[Feature_9] END AS impute_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN 0.0170611790964 ELSE [ADS].[Feature_10] END AS impute_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN -0.0860219606103 ELSE [ADS].[Feature_11] END AS impute_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 0.337808997739 ELSE [ADS].[Feature_12] END AS impute_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN 0.032214307483 ELSE [ADS].[Feature_13] END AS impute_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN -0.013529032903 ELSE [ADS].[Feature_14] END AS impute_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN -0.0786911610109 ELSE [ADS].[Feature_15] END AS impute_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN -0.00238336548329 ELSE [ADS].[Feature_16] END AS impute_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN 0.169678543936 ELSE [ADS].[Feature_17] END AS impute_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN 0.170182706477 ELSE [ADS].[Feature_18] END AS impute_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN 0.324210739021 ELSE [ADS].[Feature_19] END AS impute_21 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - -0.0363170824049 AS impute_2, [ADS_imp_1_OUT].impute_3 - -0.376837793703 AS impute_3, [ADS_imp_1_OUT].impute_4 - 0.015666452248 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.0284386631976 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.0567020309635 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.0172160463771 AS impute_7, [ADS_imp_1_OUT].impute_8 - 0.192435763052 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.0629868948903 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.0632624525962 AS impute_10, [ADS_imp_1_OUT].impute_11 - -0.0527923156986 AS impute_11, [ADS_imp_1_OUT].impute_12 - 0.0170611790964 AS impute_12, [ADS_imp_1_OUT].impute_13 - -0.0860219606103 AS impute_13, [ADS_imp_1_OUT].impute_14 - 0.337808997739 AS impute_14, [ADS_imp_1_OUT].impute_15 - 0.032214307483 AS impute_15, [ADS_imp_1_OUT].impute_16 - -0.013529032903 AS impute_16, [ADS_imp_1_OUT].impute_17 - -0.0786911610109 AS impute_17, [ADS_imp_1_OUT].impute_18 - -0.00238336548329 AS impute_18, [ADS_imp_1_OUT].impute_19 - 0.169678543936 AS impute_19, [ADS_imp_1_OUT].impute_20 - 0.170182706477 AS impute_20, [ADS_imp_1_OUT].impute_21 - 0.324210739021 AS impute_21 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * -0.0439733720677 + [CenteredDataForPCA].impute_3 * -0.739526763702 + [CenteredDataForPCA].impute_4 * 0.00851163835198 + [CenteredDataForPCA].impute_5 * 7.31630164257e-05 + [CenteredDataForPCA].impute_6 * 0.0270639729961 + [CenteredDataForPCA].impute_7 * 0.0196815936355 + [CenteredDataForPCA].impute_8 * 0.421131264607 + [CenteredDataForPCA].impute_9 * -0.186153913915 + [CenteredDataForPCA].impute_10 * 0.032712371087 + [CenteredDataForPCA].impute_11 * 0.0282403804497 + [CenteredDataForPCA].impute_12 * 0.0131457825804 + [CenteredDataForPCA].impute_13 * -0.0208829523174 + [CenteredDataForPCA].impute_14 * -0.275661179438 + [CenteredDataForPCA].impute_15 * 0.003427392118 + [CenteredDataForPCA].impute_16 * -0.00279431400723 + [CenteredDataForPCA].impute_17 * 0.000880093383436 + [CenteredDataForPCA].impute_18 * 0.0299094893978 + [CenteredDataForPCA].impute_19 * 0.384105201011 + [CenteredDataForPCA].impute_20 * -0.0873227104671 + [CenteredDataForPCA].impute_21 * 0.0585391110986 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.0227999291277 + [CenteredDataForPCA].impute_3 * 0.11847644355 + [CenteredDataForPCA].impute_4 * 0.0341511265792 + [CenteredDataForPCA].impute_5 * -0.0248853643118 + [CenteredDataForPCA].impute_6 * 0.0110339258158 + [CenteredDataForPCA].impute_7 * -0.0734660725391 + [CenteredDataForPCA].impute_8 * -0.26389477789 + [CenteredDataForPCA].impute_9 * -0.75664274975 + [CenteredDataForPCA].impute_10 * -0.0819784588059 + [CenteredDataForPCA].impute_11 * -0.0231423535473 + [CenteredDataForPCA].impute_12 * -0.00829866405066 + [CenteredDataForPCA].impute_13 * 0.0728420259011 + [CenteredDataForPCA].impute_14 * 0.20741819523 + [CenteredDataForPCA].impute_15 * -0.0513958206369 + [CenteredDataForPCA].impute_16 * 0.0566323052642 + [CenteredDataForPCA].impute_17 * -0.0292171970878 + [CenteredDataForPCA].impute_18 * 0.0291296527131 + [CenteredDataForPCA].impute_19 * 0.373956493683 + [CenteredDataForPCA].impute_20 * 0.0104427062538 + [CenteredDataForPCA].impute_21 * -0.364463423992 AS anoova_3, [CenteredDataForPCA].impute_2 * 0.0107322393185 + [CenteredDataForPCA].impute_3 * -0.025324978776 + [CenteredDataForPCA].impute_4 * 0.0933799577191 + [CenteredDataForPCA].impute_5 * -0.0751987118876 + [CenteredDataForPCA].impute_6 * 0.0902554442992 + [CenteredDataForPCA].impute_7 * -0.0893906798664 + [CenteredDataForPCA].impute_8 * -0.536065602127 + [CenteredDataForPCA].impute_9 * 0.0631446232286 + [CenteredDataForPCA].impute_10 * 0.131460958201 + [CenteredDataForPCA].impute_11 * -0.0328660357144 + [CenteredDataForPCA].impute_12 * -0.238820385361 + [CenteredDataForPCA].impute_13 * 0.0462723362192 + [CenteredDataForPCA].impute_14 * -0.0840904194926 + [CenteredDataForPCA].impute_15 * -0.0365994964883 + [CenteredDataForPCA].impute_16 * -0.184808127319 + [CenteredDataForPCA].impute_17 * -0.00116062572512 + [CenteredDataForPCA].impute_18 * -0.0250043125948 + [CenteredDataForPCA].impute_19 * 0.412860483983 + [CenteredDataForPCA].impute_20 * -0.00839370624307 + [CenteredDataForPCA].impute_21 * 0.621389139157 AS anoova_4, [CenteredDataForPCA].impute_2 * 0.1200228273 + [CenteredDataForPCA].impute_3 * -0.0721624897041 + [CenteredDataForPCA].impute_4 * 0.220268818508 + [CenteredDataForPCA].impute_5 * -0.26185578373 + [CenteredDataForPCA].impute_6 * 0.450331958225 + [CenteredDataForPCA].impute_7 * -0.390530529942 + [CenteredDataForPCA].impute_8 * 0.225675271627 + [CenteredDataForPCA].impute_9 * 0.0510221259707 + [CenteredDataForPCA].impute_10 * -0.0821657421015 + [CenteredDataForPCA].impute_11 * -0.0133117275442 + [CenteredDataForPCA].impute_12 * -0.329944204188 + [CenteredDataForPCA].impute_13 * 0.103640655203 + [CenteredDataForPCA].impute_14 * 0.200105620507 + [CenteredDataForPCA].impute_15 * -0.361361577102 + [CenteredDataForPCA].impute_16 * -0.118062183469 + [CenteredDataForPCA].impute_17 * -0.252268193772 + [CenteredDataForPCA].impute_18 * -0.0838459980554 + [CenteredDataForPCA].impute_19 * -0.123957573454 + [CenteredDataForPCA].impute_20 * 0.229729824586 + [CenteredDataForPCA].impute_21 * -0.0674386489044 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.15333748258 + [CenteredDataForPCA].impute_3 * -0.141815841902 + [CenteredDataForPCA].impute_4 * -0.0517310021074 + [CenteredDataForPCA].impute_5 * 0.227201245417 + [CenteredDataForPCA].impute_6 * -0.100747986937 + [CenteredDataForPCA].impute_7 * 0.0515628629323 + [CenteredDataForPCA].impute_8 * 0.167840996443 + [CenteredDataForPCA].impute_9 * -0.0148430502829 + [CenteredDataForPCA].impute_10 * 0.0450291690272 + [CenteredDataForPCA].impute_11 * 0.0187552822956 + [CenteredDataForPCA].impute_12 * -0.16583921177 + [CenteredDataForPCA].impute_13 * -0.226163936303 + [CenteredDataForPCA].impute_14 * 0.794657643527 + [CenteredDataForPCA].impute_15 * -0.0324773824667 + [CenteredDataForPCA].impute_16 * -0.116798592252 + [CenteredDataForPCA].impute_17 * 0.233723639252 + [CenteredDataForPCA].impute_18 * -0.109095264498 + [CenteredDataForPCA].impute_19 * 0.0214654953689 + [CenteredDataForPCA].impute_20 * -0.16875478635 + [CenteredDataForPCA].impute_21 * 0.195454594316 AS anoova_6, [CenteredDataForPCA].impute_2 * 0.157126557902 + [CenteredDataForPCA].impute_3 * -0.0387500513147 + [CenteredDataForPCA].impute_4 * 0.38803030444 + [CenteredDataForPCA].impute_5 * -0.149130204576 + [CenteredDataForPCA].impute_6 * -0.198976721914 + [CenteredDataForPCA].impute_7 * 0.289922784871 + [CenteredDataForPCA].impute_8 * 0.0462250745616 + [CenteredDataForPCA].impute_9 * -0.00311216280778 + [CenteredDataForPCA].impute_10 * -0.330109122087 + [CenteredDataForPCA].impute_11 * -0.0513441045296 + [CenteredDataForPCA].impute_12 * 0.0104817296788 + [CenteredDataForPCA].impute_13 * 0.21201389156 + [CenteredDataForPCA].impute_14 * -0.00631898860319 + [CenteredDataForPCA].impute_15 * -0.0235363669853 + [CenteredDataForPCA].impute_16 * -0.351727105054 + [CenteredDataForPCA].impute_17 * 0.51873218504 + [CenteredDataForPCA].impute_18 * 0.00178442256409 + [CenteredDataForPCA].impute_19 * -0.000723725443929 + [CenteredDataForPCA].impute_20 * 0.353443200649 + [CenteredDataForPCA].impute_21 * -0.0150401545674 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.167811799625 + [CenteredDataForPCA].impute_3 * 0.00893654013886 + [CenteredDataForPCA].impute_4 * -0.191300715686 + [CenteredDataForPCA].impute_5 * -0.322462535146 + [CenteredDataForPCA].impute_6 * 0.00367929030837 + [CenteredDataForPCA].impute_7 * 0.192252661642 + [CenteredDataForPCA].impute_8 * 0.0384233286293 + [CenteredDataForPCA].impute_9 * -0.0253726499032 + [CenteredDataForPCA].impute_10 * -0.0562624811994 + [CenteredDataForPCA].impute_11 * 0.47645080582 + [CenteredDataForPCA].impute_12 * -0.421481722356 + [CenteredDataForPCA].impute_13 * -0.0548710365259 + [CenteredDataForPCA].impute_14 * 0.0710106316988 + [CenteredDataForPCA].impute_15 * 0.436588072161 + [CenteredDataForPCA].impute_16 * -0.150462023293 + [CenteredDataForPCA].impute_17 * -0.12634250778 + [CenteredDataForPCA].impute_18 * 0.377709204182 + [CenteredDataForPCA].impute_19 * -0.0267351022619 + [CenteredDataForPCA].impute_20 * -0.0364233274936 + [CenteredDataForPCA].impute_21 * -0.0479526782034 AS anoova_8, [CenteredDataForPCA].impute_2 * -0.114323797981 + [CenteredDataForPCA].impute_3 * 0.00270026763018 + [CenteredDataForPCA].impute_4 * 0.218866538525 + [CenteredDataForPCA].impute_5 * -0.36326418132 + [CenteredDataForPCA].impute_6 * -0.245648315821 + [CenteredDataForPCA].impute_7 * -0.116551489521 + [CenteredDataForPCA].impute_8 * 0.0844783714046 + [CenteredDataForPCA].impute_9 * 0.0188390527926 + [CenteredDataForPCA].impute_10 * 0.243125897615 + [CenteredDataForPCA].impute_11 * -0.52931083487 + [CenteredDataForPCA].impute_12 * -0.007554158387 + [CenteredDataForPCA].impute_13 * 0.251958802479 + [CenteredDataForPCA].impute_14 * 0.110295897489 + [CenteredDataForPCA].impute_15 * 0.14242855715 + [CenteredDataForPCA].impute_16 * -0.12380908653 + [CenteredDataForPCA].impute_17 * -0.0814900050259 + [CenteredDataForPCA].impute_18 * 0.327429085526 + [CenteredDataForPCA].impute_19 * -0.0715444809337 + [CenteredDataForPCA].impute_20 * -0.392573800846 + [CenteredDataForPCA].impute_21 * -0.04423841819 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.187826342646 + [CenteredDataForPCA].impute_3 * 0.0778686622642 + [CenteredDataForPCA].impute_4 * 0.376320511774 + [CenteredDataForPCA].impute_5 * 0.229244643123 + [CenteredDataForPCA].impute_6 * -0.0227875836525 + [CenteredDataForPCA].impute_7 * -0.175586962073 + [CenteredDataForPCA].impute_8 * 0.0289330403214 + [CenteredDataForPCA].impute_9 * -0.0596386955846 + [CenteredDataForPCA].impute_10 * 0.651340370921 + [CenteredDataForPCA].impute_11 * 0.312535693138 + [CenteredDataForPCA].impute_12 * -0.202969991029 + [CenteredDataForPCA].impute_13 * -0.0263163369951 + [CenteredDataForPCA].impute_14 * -0.168646710051 + [CenteredDataForPCA].impute_15 * 0.0516071968615 + [CenteredDataForPCA].impute_16 * -0.0969501006581 + [CenteredDataForPCA].impute_17 * 0.25829388447 + [CenteredDataForPCA].impute_18 * 0.0203329551564 + [CenteredDataForPCA].impute_19 * -0.0743720886286 + [CenteredDataForPCA].impute_20 * 0.093837427873 + [CenteredDataForPCA].impute_21 * -0.207270787689 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.473377884208 + [CenteredDataForPCA].impute_3 * -0.030474482256 + [CenteredDataForPCA].impute_4 * -0.170356808721 + [CenteredDataForPCA].impute_5 * 0.308371777031 + [CenteredDataForPCA].impute_6 * -0.0189139614693 + [CenteredDataForPCA].impute_7 * -0.352939394512 + [CenteredDataForPCA].impute_8 * 0.0146100454996 + [CenteredDataForPCA].impute_9 * 0.0565616749895 + [CenteredDataForPCA].impute_10 * -0.0505885834567 + [CenteredDataForPCA].impute_11 * 0.0366217834194 + [CenteredDataForPCA].impute_12 * -0.0657883748609 + [CenteredDataForPCA].impute_13 * 0.296080027186 + [CenteredDataForPCA].impute_14 * 0.0222125021626 + [CenteredDataForPCA].impute_15 * -0.143769486544 + [CenteredDataForPCA].impute_16 * 0.249766133488 + [CenteredDataForPCA].impute_17 * 0.35753082238 + [CenteredDataForPCA].impute_18 * 0.442861532634 + [CenteredDataForPCA].impute_19 * -0.00393520125699 + [CenteredDataForPCA].impute_20 * -0.121572075745 + [CenteredDataForPCA].impute_21 * 0.0659207321045 AS anoova_11, [CenteredDataForPCA].impute_2 * -0.113215818047 + [CenteredDataForPCA].impute_3 * -0.00222397760655 + [CenteredDataForPCA].impute_4 * -0.121099537842 + [CenteredDataForPCA].impute_5 * 0.37770864332 + [CenteredDataForPCA].impute_6 * -0.0889081261123 + [CenteredDataForPCA].impute_7 * 0.271985266524 + [CenteredDataForPCA].impute_8 * 0.0167112177198 + [CenteredDataForPCA].impute_9 * -0.0182641858791 + [CenteredDataForPCA].impute_10 * 0.0135114443875 + [CenteredDataForPCA].impute_11 * -0.451855811842 + [CenteredDataForPCA].impute_12 * -0.472288964443 + [CenteredDataForPCA].impute_13 * -0.119974472942 + [CenteredDataForPCA].impute_14 * -0.101038092279 + [CenteredDataForPCA].impute_15 * -0.109920073145 + [CenteredDataForPCA].impute_16 * 0.00776488485901 + [CenteredDataForPCA].impute_17 * -0.194999090967 + [CenteredDataForPCA].impute_18 * 0.310872197091 + [CenteredDataForPCA].impute_19 * -0.00720507530459 + [CenteredDataForPCA].impute_20 * 0.380466558224 + [CenteredDataForPCA].impute_21 * -0.0610209834428 AS anoova_12, [CenteredDataForPCA].impute_2 * 0.0234164460372 + [CenteredDataForPCA].impute_3 * -0.0867990160927 + [CenteredDataForPCA].impute_4 * -0.0991370658238 + [CenteredDataForPCA].impute_5 * -0.13338765375 + [CenteredDataForPCA].impute_6 * 0.0251434717849 + [CenteredDataForPCA].impute_7 * -0.185689158749 + [CenteredDataForPCA].impute_8 * 0.0196435964909 + [CenteredDataForPCA].impute_9 * 0.000209738116181 + [CenteredDataForPCA].impute_10 * 0.26611076258 + [CenteredDataForPCA].impute_11 * -0.0521332769931 + [CenteredDataForPCA].impute_12 * 0.460403762929 + [CenteredDataForPCA].impute_13 * -0.0868008689384 + [CenteredDataForPCA].impute_14 * 0.257250615643 + [CenteredDataForPCA].impute_15 * 0.252841085042 + [CenteredDataForPCA].impute_16 * 0.0520098565731 + [CenteredDataForPCA].impute_17 * -0.0533990071131 + [CenteredDataForPCA].impute_18 * 0.27286194698 + [CenteredDataForPCA].impute_19 * 0.068067327849 + [CenteredDataForPCA].impute_20 * 0.632420339867 + [CenteredDataForPCA].impute_21 * 0.145101721776 AS anoova_13, [CenteredDataForPCA].impute_2 * -0.0041974271778 + [CenteredDataForPCA].impute_3 * 0.012006795042 + [CenteredDataForPCA].impute_4 * -0.393892699143 + [CenteredDataForPCA].impute_5 * -0.0638073028375 + [CenteredDataForPCA].impute_6 * 0.232452086251 + [CenteredDataForPCA].impute_7 * -0.263510098682 + [CenteredDataForPCA].impute_8 * 0.0308819803449 + [CenteredDataForPCA].impute_9 * -0.0399723679275 + [CenteredDataForPCA].impute_10 * 0.0058172808536 + [CenteredDataForPCA].impute_11 * -0.35181270106 + [CenteredDataForPCA].impute_12 * -0.224377489568 + [CenteredDataForPCA].impute_13 * 0.00788835289362 + [CenteredDataForPCA].impute_14 * -0.121190336857 + [CenteredDataForPCA].impute_15 * 0.463258291701 + [CenteredDataForPCA].impute_16 * -0.105314070092 + [CenteredDataForPCA].impute_17 * 0.384497259413 + [CenteredDataForPCA].impute_18 * -0.366869572587 + [CenteredDataForPCA].impute_19 * -0.0235574654514 + [CenteredDataForPCA].impute_20 * 0.0641130614506 + [CenteredDataForPCA].impute_21 * -0.113558772695 AS anoova_14, [CenteredDataForPCA].impute_2 * 0.430648677873 + [CenteredDataForPCA].impute_3 * 0.0476039052592 + [CenteredDataForPCA].impute_4 * -0.196716605528 + [CenteredDataForPCA].impute_5 * 0.0392816646756 + [CenteredDataForPCA].impute_6 * 0.202609419344 + [CenteredDataForPCA].impute_7 * 0.153839603173 + [CenteredDataForPCA].impute_8 * -0.00364635100247 + [CenteredDataForPCA].impute_9 * -0.0603950442401 + [CenteredDataForPCA].impute_10 * 0.271066918082 + [CenteredDataForPCA].impute_11 * -0.116586434667 + [CenteredDataForPCA].impute_12 * 0.230103204143 + [CenteredDataForPCA].impute_13 * -0.319877919459 + [CenteredDataForPCA].impute_14 * -0.0667669229431 + [CenteredDataForPCA].impute_15 * -0.246409105455 + [CenteredDataForPCA].impute_16 * -0.589935281964 + [CenteredDataForPCA].impute_17 * 0.00753633154382 + [CenteredDataForPCA].impute_18 * 0.0886207656314 + [CenteredDataForPCA].impute_19 * -0.0194804669004 + [CenteredDataForPCA].impute_20 * -0.165546820424 + [CenteredDataForPCA].impute_21 * -0.111460464692 AS anoova_15, [CenteredDataForPCA].impute_2 * -0.0154753068668 + [CenteredDataForPCA].impute_3 * -0.0304242130236 + [CenteredDataForPCA].impute_4 * -0.377425862832 + [CenteredDataForPCA].impute_5 * 0.0301123066111 + [CenteredDataForPCA].impute_6 * -0.603289232944 + [CenteredDataForPCA].impute_7 * -0.255233273087 + [CenteredDataForPCA].impute_8 * 0.0395973662804 + [CenteredDataForPCA].impute_9 * -0.00846847029436 + [CenteredDataForPCA].impute_10 * 0.0581472312359 + [CenteredDataForPCA].impute_11 * 0.165404521501 + [CenteredDataForPCA].impute_12 * -0.0425793132508 + [CenteredDataForPCA].impute_13 * 0.32296226562 + [CenteredDataForPCA].impute_14 * -0.0205769386714 + [CenteredDataForPCA].impute_15 * -0.171392952592 + [CenteredDataForPCA].impute_16 * -0.357975054212 + [CenteredDataForPCA].impute_17 * -0.229184538738 + [CenteredDataForPCA].impute_18 * -0.233371132915 + [CenteredDataForPCA].impute_19 * -0.00140746960689 + [CenteredDataForPCA].impute_20 * 0.14941965863 + [CenteredDataForPCA].impute_21 * -0.0248582677647 AS anoova_16, [CenteredDataForPCA].impute_2 * -0.328047183133 + [CenteredDataForPCA].impute_3 * 0.00637492909319 + [CenteredDataForPCA].impute_4 * -0.138124422547 + [CenteredDataForPCA].impute_5 * 0.272520234805 + [CenteredDataForPCA].impute_6 * 0.45547821213 + [CenteredDataForPCA].impute_7 * 0.235859115003 + [CenteredDataForPCA].impute_8 * 0.0127970913591 + [CenteredDataForPCA].impute_9 * 0.00408124024649 + [CenteredDataForPCA].impute_10 * 0.0132945332824 + [CenteredDataForPCA].impute_11 * 0.0858066543703 + [CenteredDataForPCA].impute_12 * 0.169165012631 + [CenteredDataForPCA].impute_13 * 0.62992224301 + [CenteredDataForPCA].impute_14 * 0.0917240521041 + [CenteredDataForPCA].impute_15 * 0.0789861941851 + [CenteredDataForPCA].impute_16 * -0.260079611979 + [CenteredDataForPCA].impute_17 * -0.0643106853588 + [CenteredDataForPCA].impute_18 * 0.11959187331 + [CenteredDataForPCA].impute_19 * -0.0145248621707 + [CenteredDataForPCA].impute_20 * -0.0412027114307 + [CenteredDataForPCA].impute_21 * 0.0113940593372 AS anoova_17, [CenteredDataForPCA].impute_2 * -0.570087579644 + [CenteredDataForPCA].impute_3 * 0.0547499990566 + [CenteredDataForPCA].impute_4 * -0.202355545555 + [CenteredDataForPCA].impute_5 * -0.170049669963 + [CenteredDataForPCA].impute_6 * 0.0304452137408 + [CenteredDataForPCA].impute_7 * -0.282737626442 + [CenteredDataForPCA].impute_8 * -0.0555452112234 + [CenteredDataForPCA].impute_9 * 0.011708805876 + [CenteredDataForPCA].impute_10 * -0.275416827516 + [CenteredDataForPCA].impute_11 * 0.0950932816453 + [CenteredDataForPCA].impute_12 * 0.0628380192835 + [CenteredDataForPCA].impute_13 * -0.273671492062 + [CenteredDataForPCA].impute_14 * -0.147194186368 + [CenteredDataForPCA].impute_15 * -0.275351754681 + [CenteredDataForPCA].impute_16 * -0.185607404371 + [CenteredDataForPCA].impute_17 * 0.275378966851 + [CenteredDataForPCA].impute_18 * 0.380242847372 + [CenteredDataForPCA].impute_19 * -0.0133081953712 + [CenteredDataForPCA].impute_20 * -0.0279647606671 + [CenteredDataForPCA].impute_21 * -0.0315288049419 AS anoova_18, [CenteredDataForPCA].impute_2 * -0.0503217483684 + [CenteredDataForPCA].impute_3 * -0.00157545046591 + [CenteredDataForPCA].impute_4 * -0.335147478694 + [CenteredDataForPCA].impute_5 * -0.444462095471 + [CenteredDataForPCA].impute_6 * 0.035478578245 + [CenteredDataForPCA].impute_7 * 0.372531265513 + [CenteredDataForPCA].impute_8 * 0.00634126449633 + [CenteredDataForPCA].impute_9 * -0.0111939467227 + [CenteredDataForPCA].impute_10 * 0.379705864382 + [CenteredDataForPCA].impute_11 * 0.0143601880327 + [CenteredDataForPCA].impute_12 * -0.101582335987 + [CenteredDataForPCA].impute_13 * 0.173523175895 + [CenteredDataForPCA].impute_14 * 0.0393653060195 + [CenteredDataForPCA].impute_15 * -0.408434305264 + [CenteredDataForPCA].impute_16 * 0.330863669626 + [CenteredDataForPCA].impute_17 * 0.270891255471 + [CenteredDataForPCA].impute_18 * -0.0734283969022 + [CenteredDataForPCA].impute_19 * 0.0014998365981 + [CenteredDataForPCA].impute_20 * 0.0772052128202 + [CenteredDataForPCA].impute_21 * -0.00183530925812 AS anoova_19, [CenteredDataForPCA].impute_2 * 5.81440255791e-18 + [CenteredDataForPCA].impute_3 * 0.328422733009 + [CenteredDataForPCA].impute_4 * -8.32667268469e-17 + [CenteredDataForPCA].impute_5 * -2.77555756156e-17 + [CenteredDataForPCA].impute_6 * -9.71445146547e-17 + [CenteredDataForPCA].impute_7 * -1.52655665886e-16 + [CenteredDataForPCA].impute_8 * 0.397629084549 + [CenteredDataForPCA].impute_9 * -0.547124674721 + [CenteredDataForPCA].impute_10 * -0.0 + [CenteredDataForPCA].impute_11 * 3.81639164715e-17 + [CenteredDataForPCA].impute_12 * 2.04697370165e-16 + [CenteredDataForPCA].impute_13 * 1.2490009027e-16 + [CenteredDataForPCA].impute_14 * -0.169170813809 + [CenteredDataForPCA].impute_15 * -9.71445146547e-17 + [CenteredDataForPCA].impute_16 * -1.28369537222e-16 + [CenteredDataForPCA].impute_17 * 3.29597460436e-17 + [CenteredDataForPCA].impute_18 * 1.31838984174e-16 + [CenteredDataForPCA].impute_19 * -0.277623317374 + [CenteredDataForPCA].impute_20 * -4.85722573274e-17 + [CenteredDataForPCA].impute_21 * 0.573577143269 AS anoova_20, [CenteredDataForPCA].impute_2 * -1.47898717725e-16 + [CenteredDataForPCA].impute_3 * 0.531737646451 + [CenteredDataForPCA].impute_4 * -1.38777878078e-16 + [CenteredDataForPCA].impute_5 * -1.94289029309e-16 + [CenteredDataForPCA].impute_6 * 3.1918911958e-16 + [CenteredDataForPCA].impute_7 * 4.85722573274e-17 + [CenteredDataForPCA].impute_8 * 0.458413842129 + [CenteredDataForPCA].impute_9 * 0.270163156116 + [CenteredDataForPCA].impute_10 * -2.77555756156e-17 + [CenteredDataForPCA].impute_11 * 6.93889390391e-17 + [CenteredDataForPCA].impute_12 * -1.35308431126e-16 + [CenteredDataForPCA].impute_13 * 4.16333634234e-17 + [CenteredDataForPCA].impute_14 * -0.00298634007021 + [CenteredDataForPCA].impute_15 * 1.38777878078e-17 + [CenteredDataForPCA].impute_16 * 4.16333634234e-17 + [CenteredDataForPCA].impute_17 * 6.59194920871e-17 + [CenteredDataForPCA].impute_18 * -3.05311331772e-16 + [CenteredDataForPCA].impute_19 * 0.657170129823 + [CenteredDataForPCA].impute_20 * 4.16333634234e-17 + [CenteredDataForPCA].impute_21 * -0.0473518321787 AS anoova_21 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.029963340610265732) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.4780270755290985) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.5440880060195923) THEN 5 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.11463959515094757) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.029963340610265732 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.25 AS [Proba_1], -1.38629436112 AS [LogProba_1], 0.25 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.25 AS [Proba_3], -1.38629436112 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, -0.4780270755290985 AS threshold, 49 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.040816326530612235 AS [Proba_0], -3.19867311755 AS [LogProba_0], 0.489795918367347 AS [Proba_1], -0.713766467763 AS [LogProba_1], 0.40816326530612246 AS [Proba_2], -0.896088024557 AS [LogProba_2], 0.06122448979591835 AS [Proba_3], -2.79320800944 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08695652173913045 AS [Proba_0], -2.44234703537 AS [LogProba_0], 0.3043478260869566 AS [Proba_1], -1.18958406687 AS [LogProba_1], 0.5652173913043478 AS [Proba_2], -0.570544858468 AS [LogProba_2], 0.04347826086956522 AS [Proba_3], -3.13549421593 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.6538461538461539 AS [Proba_1], -0.424883193965 AS [LogProba_1], 0.2692307692307693 AS [Proba_2], -1.31218638897 AS [LogProba_2], 0.07692307692307693 AS [Proba_3], -2.56494935746 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, 'anoova_6' AS feature, -0.5440880060195923 AS threshold, 51 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.45098039215686275 AS [Proba_0], -0.796331416795 AS [LogProba_0], 0.019607843137254898 AS [Proba_1], -3.93182563272 AS [LogProba_1], 0.0980392156862745 AS [Proba_2], -2.32238772029 AS [LogProba_2], 0.43137254901960786 AS [Proba_3], -0.840783179366 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7894736842105263 AS [Proba_0], -0.236388778064 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.21052631578947367 AS [Proba_3], -1.55814461805 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, 'anoova_11' AS feature, -0.11463959515094757 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24999999999999994 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.031249999999999993 AS [Proba_1], -3.4657359028 AS [LogProba_1], 0.15624999999999997 AS [Proba_2], -1.85629799037 AS [LogProba_2], 0.5625 AS [Proba_3], -0.575364144904 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.43749999999999994 AS [Proba_0], -0.826678573184 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.24999999999999994 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.31249999999999994 AS [Proba_3], -1.16315080981 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06250000000000001 AS [Proba_0], -2.77258872224 AS [LogProba_0], 0.06250000000000001 AS [Proba_1], -2.77258872224 AS [LogProba_1], 0.06250000000000001 AS [Proba_2], -2.77258872224 AS [LogProba_2], 0.8125 AS [Proba_3], -0.207639364778 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0] AS [Proba_0_0], [DT_Output].[LogProba_0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1] AS [Proba_0_1], [DT_Output].[LogProba_1] AS [LogProba_0_1], CAST(NULL AS FLOAT) AS [Score_0_2], [DT_Output].[Proba_2] AS [Proba_0_2], [DT_Output].[LogProba_2] AS [LogProba_0_2], CAST(NULL AS FLOAT) AS [Score_0_3], [DT_Output].[Proba_3] AS [Proba_0_3], [DT_Output].[LogProba_3] AS [LogProba_0_3], [DT_Output].[Decision] AS [Decision_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_12 <= -0.6160291433334351) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= 0.5031079053878784) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.1725926697254181) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_12' AS feature, -0.6160291433334351 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24997299747112406 AS [Proba_0], -1.38640237707 AS [LogProba_0], 0.24998388432495192 AS [Proba_1], -1.3863588259 AS [LogProba_1], 0.2500215550474685 AS [Proba_2], -1.38620814465 AS [LogProba_2], 0.25002156315645563 AS [Proba_3], -1.38620811221 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7418718613511829 AS [Proba_0], -0.298578744325 AS [LogProba_0], 0.06988936097427613 AS [Proba_1], -2.66084184484 AS [LogProba_1], 0.18817167584469044 AS [Proba_2], -1.67040056345 AS [LogProba_2], 6.7101829850543e-05 AS [Proba_3], -9.60929924386 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_18' AS feature, 0.5031079053878784 AS threshold, 77 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.681964920408228e-05 AS [Proba_0], -9.77562835537 AS [LogProba_0], 0.3414834551258226 AS [Proba_1], -1.0744560488 AS [LogProba_1], 0.2814452613093205 AS [Proba_2], -1.26781730392 AS [LogProba_2], 0.3770144639156528 AS [Proba_3], -0.975471726446 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anoova_9' AS feature, 0.1725926697254181 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.498754049730381e-05 AS [Proba_0], -10.0091249844 AS [LogProba_0], 0.4730856833229925 AS [Proba_1], -0.748478758221 AS [LogProba_1], 0.3899099983037628 AS [Proba_2], -0.941839340071 AS [LogProba_2], 0.1369593308327475 AS [Proba_3], -1.98807125246 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.81820522045833e-05 AS [Proba_0], -9.5933291919 AS [LogProba_0], 0.09944222605425274 AS [Proba_1], -2.30817844613 AS [LogProba_1], 0.7343654852307175 AS [Proba_2], -0.308748438015 AS [LogProba_2], 0.1661241066628252 AS [Proba_3], -1.79502013946 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2268330033640788e-05 AS [Proba_0], -10.7123450668 AS [LogProba_0], 0.8390724499853398 AS [Proba_1], -0.17545822346 AS [LogProba_1], 0.05251308296361631 AS [Proba_2], -2.94669294112 AS [LogProba_2], 0.10839219872101029 AS [Proba_3], -2.22199916008 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.751760719527373e-05 AS [Proba_0], -9.34367055975 AS [LogProba_0], 4.6457473030370454e-05 AS [Proba_1], -9.97697322232 AS [LogProba_1], 3.7608430548395096e-05 AS [Proba_2], -10.188282316 AS [LogProba_2], 0.999828416489226 AS [Proba_3], -0.000171598232909 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Proba_3] AS [Proba_3], [DT_node_data_1].[LogProba_3] AS [LogProba_3], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0] AS [Proba_1_0], [DT_Output_1].[LogProba_0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1] AS [Proba_1_1], [DT_Output_1].[LogProba_1] AS [LogProba_1_1], CAST(NULL AS FLOAT) AS [Score_1_2], [DT_Output_1].[Proba_2] AS [Proba_1_2], [DT_Output_1].[LogProba_2] AS [LogProba_1_2], CAST(NULL AS FLOAT) AS [Score_1_3], [DT_Output_1].[Proba_3] AS [Proba_1_3], [DT_Output_1].[LogProba_3] AS [LogProba_1_3], [DT_Output_1].[Decision] AS [Decision_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -2.4538753032684326) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.0270321369171143) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -2.019343376159668) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -2.4538753032684326 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24999999999999997 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.2500000000000001 AS [Proba_1], -1.38629436112 AS [LogProba_1], 0.24999999999999997 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.24999999999999986 AS [Proba_3], -1.38629436112 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9405067374390662 AS [Proba_1], -0.0613364665888 AS [LogProba_1], 0.05949326256093381 AS [Proba_2], -2.82189220711 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -1.0270321369171143 AS threshold, 84 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3245014390021826 AS [Proba_0], -1.12546530833 AS [LogProba_0], 0.04422501768034929 AS [Proba_1], -3.11846463915 AS [LogProba_1], 0.3067721043152855 AS [Proba_2], -1.18165013828 AS [LogProba_2], 0.32450143900218253 AS [Proba_3], -1.12546530833 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.032683155066637666 AS [Proba_1], -3.42089546938 AS [LogProba_1], 0.9607097069680807 AS [Proba_2], -0.0400829895599 AS [LogProba_2], 0.006607137965281729 AS [Proba_3], -5.01960470447 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -2.019343376159668 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.42621018423717805 AS [Proba_0], -0.852822664162 AS [LogProba_0], 0.04784259289889069 AS [Proba_1], -3.03983897142 AS [LogProba_1], 0.10180791915692816 AS [Proba_2], -2.28466738657 AS [LogProba_2], 0.42413930370700315 AS [Proba_3], -0.857693331231 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6989332855059824 AS [Proba_0], -0.35819998407 AS [LogProba_0], 0.07828522616785952 AS [Proba_1], -2.54739637619 AS [LogProba_1], 0.17179933825706728 AS [Proba_2], -1.76142812126 AS [LogProba_2], 0.050982150069090626 AS [Proba_3], -2.97627970617 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18376232779679247 AS [Proba_0], -1.69411205309 AS [LogProba_0], 0.020779424629960058 AS [Proba_1], -3.87379198234 AS [LogProba_1], 0.03958631251230457 AS [Proba_2], -3.2292718641 AS [LogProba_2], 0.7558719350609429 AS [Proba_3], -0.27988331522 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Proba_3] AS [Proba_3], [DT_node_data_2].[LogProba_3] AS [LogProba_3], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0] AS [Proba_2_0], [DT_Output_2].[LogProba_0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1] AS [Proba_2_1], [DT_Output_2].[LogProba_1] AS [LogProba_2_1], CAST(NULL AS FLOAT) AS [Score_2_2], [DT_Output_2].[Proba_2] AS [Proba_2_2], [DT_Output_2].[LogProba_2] AS [LogProba_2_2], CAST(NULL AS FLOAT) AS [Score_2_3], [DT_Output_2].[Proba_3] AS [Proba_2_3], [DT_Output_2].[LogProba_3] AS [LogProba_2_3], [DT_Output_2].[Decision] AS [Decision_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_13 <= -0.9056400060653687) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.11167161166667938) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.21488246321678162) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.5651497840881348) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_13' AS feature, -0.9056400060653687 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2499930743712981 AS [Proba_0], -1.38632206402 AS [LogProba_0], 0.25000231044364246 AS [Proba_1], -1.38628511939 AS [LogProba_1], 0.2500023104436426 AS [Proba_2], -1.38628511939 AS [LogProba_2], 0.25000230474141694 AS [Proba_3], -1.3862851422 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10519475354291281 AS [Proba_0], -2.25194185119 AS [LogProba_0], 0.872628267239205 AS [Proba_1], -0.136245624548 AS [LogProba_1], 0.00040782410355161356 AS [Proba_2], -7.80467459526 AS [LogProba_2], 0.021769155114330693 AS [Proba_3], -3.82726121412 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, 0.11167161166667938 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3054939983736136 AS [Proba_0], -1.18582514582 AS [LogProba_0], 0.011350952387249067 AS [Proba_1], -4.4784536278 AS [LogProba_1], 0.34567140756098136 AS [Proba_2], -1.06226664429 AS [LogProba_2], 0.33748364167815603 AS [Proba_3], -1.08623823895 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anoova_17' AS feature, -0.21488246321678162 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7863827777568798 AS [Proba_0], -0.240311610495 AS [LogProba_0], 0.0008323325987395328 AS [Proba_1], -7.09127843892 AS [LogProba_1], 0.0008704068507481864 AS [Proba_2], -7.04654981109 AS [LogProba_2], 0.2119144827936325 AS [Proba_3], -1.55157246874 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00026175299645419555 AS [Proba_0], -8.24810926051 AS [LogProba_0], 7.152146991125704e-08 AS [Proba_1], -16.4532681538 AS [LogProba_1], 7.893678315308505e-08 AS [Proba_2], -16.3546185181 AS [LogProba_2], 0.9997380965452927 AS [Proba_3], -0.000261937757407 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.924117414646929 AS [Proba_0], -0.0789161432847 AS [LogProba_0], 0.0009781513386853153 AS [Proba_1], -6.92984615687 AS [LogProba_1], 0.0010228952023245616 AS [Proba_2], -6.88511823878 AS [LogProba_2], 0.07388153881206108 AS [Proba_3], -2.60529229533 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, 0.5651497840881348 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.737271838661382e-05 AS [Proba_0], -9.76594165706 AS [LogProba_0], 0.018031856314500157 AS [Proba_1], -4.01561529008 AS [LogProba_1], 0.5646718473602714 AS [Proba_2], -0.571510517698 AS [LogProba_2], 0.4172389236068417 AS [Proba_3], -0.874096262971 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8287461032726498e-09 AS [Proba_0], -20.1196352944 AS [LogProba_0], 0.03094404602640455 AS [Proba_1], -3.4755746723 AS [LogProba_1], 0.9690201235953827 AS [Proba_2], -0.0314698999227 AS [LogProba_2], 3.582854946666299e-05 AS [Proba_3], -10.2367655112 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00013749109193242467 AS [Proba_0], -8.8919514289 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.9998625089080676 AS [Proba_3], -0.000137500544699 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Proba_2] AS [Proba_2], [DT_node_data_3].[LogProba_2] AS [LogProba_2], [DT_node_data_3].[Proba_3] AS [Proba_3], [DT_node_data_3].[LogProba_3] AS [LogProba_3], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0] AS [Proba_3_0], [DT_Output_3].[LogProba_0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1] AS [Proba_3_1], [DT_Output_3].[LogProba_1] AS [LogProba_3_1], CAST(NULL AS FLOAT) AS [Score_3_2], [DT_Output_3].[Proba_2] AS [Proba_3_2], [DT_Output_3].[LogProba_2] AS [LogProba_3_2], CAST(NULL AS FLOAT) AS [Score_3_3], [DT_Output_3].[Proba_3] AS [Proba_3_3], [DT_Output_3].[LogProba_3] AS [LogProba_3_3], [DT_Output_3].[Decision] AS [Decision_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 2.372659206390381) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.8973798155784607) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= 0.38695985078811646) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 2.372659206390381 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2500000030388535 AS [Proba_0], -1.38629434896 AS [LogProba_0], 0.24999999696114644 AS [Proba_1], -1.38629437328 AS [LogProba_1], 0.24999999696114653 AS [Proba_2], -1.38629437328 AS [LogProba_2], 0.25000000303885356 AS [Proba_3], -1.38629434896 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 0.8973798155784607 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3148513191416334 AS [Proba_0], -1.15565475431 AS [LogProba_0], 0.3417850361918366 AS [Proba_1], -1.07357328869 AS [LogProba_1], 0.34178503619183653 AS [Proba_2], -1.07357328869 AS [LogProba_2], 0.0015786084746934905 AS [Proba_3], -6.45121153222 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_18' AS feature, 0.38695985078811646 AS threshold, 64 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06496630937269895 AS [Proba_0], -2.7338864608 AS [LogProba_0], 0.4672986912969859 AS [Proba_1], -0.760786629843 AS [LogProba_1], 0.4655766853546283 AS [Proba_2], -0.764478458229 AS [LogProba_2], 0.0021583139756867825 AS [Proba_3], -6.1384279289 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09521409801779483 AS [Proba_0], -2.35162725973 AS [LogProba_0], 0.8543537341498082 AS [Proba_1], -0.157409962348 AS [LogProba_1], 0.05027182317946286 AS [Proba_2], -2.99031053419 AS [LogProba_2], 0.00016034465293415884 AS [Proba_3], -8.7381849786 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.028792036330737476 AS [Proba_0], -3.54765644637 AS [LogProba_0], 0.004407503887946599 AS [Proba_1], -5.42444676157 AS [LogProba_1], 0.9622527120305278 AS [Proba_2], -0.0384781683961 AS [LogProba_2], 0.004547747750788033 AS [Proba_3], -5.3931231684 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9953057859325627 AS [Proba_0], -0.00470526649216 AS [LogProba_0], 2.5205518258032457e-06 AS [Proba_1], -12.8910327019 AS [LogProba_1], 0.00469166391581301 AS [Proba_2], -5.36196797995 AS [LogProba_2], 2.959979853738467e-08 AS [Proba_3], -17.3354982818 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07336088009995673 AS [Proba_0], -2.61236445411 AS [LogProba_0], 0.0 AS [Proba_1], -1.79769313486231e+308 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.9266391199000433 AS [Proba_3], -0.076191088134 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0] AS [Proba_0], [DT_node_data_4].[LogProba_0] AS [LogProba_0], [DT_node_data_4].[Proba_1] AS [Proba_1], [DT_node_data_4].[LogProba_1] AS [LogProba_1], [DT_node_data_4].[Proba_2] AS [Proba_2], [DT_node_data_4].[LogProba_2] AS [LogProba_2], [DT_node_data_4].[Proba_3] AS [Proba_3], [DT_node_data_4].[LogProba_3] AS [LogProba_3], [DT_node_data_4].[Decision] AS [Decision] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[AdaBoost_Estim_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, CAST(NULL AS FLOAT) AS [Score_4_0], [DT_Output_4].[Proba_0] AS [Proba_4_0], [DT_Output_4].[LogProba_0] AS [LogProba_4_0], CAST(NULL AS FLOAT) AS [Score_4_1], [DT_Output_4].[Proba_1] AS [Proba_4_1], [DT_Output_4].[LogProba_1] AS [LogProba_4_1], CAST(NULL AS FLOAT) AS [Score_4_2], [DT_Output_4].[Proba_2] AS [Proba_4_2], [DT_Output_4].[LogProba_2] AS [LogProba_4_2], CAST(NULL AS FLOAT) AS [Score_4_3], [DT_Output_4].[Proba_3] AS [Proba_4_3], [DT_Output_4].[LogProba_3] AS [LogProba_4_3], [DT_Output_4].[Decision] AS [Decision_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 1.312523365020752) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.9720947742462158) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_16 <= -0.20063135027885437) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 1.312523365020752 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2500000170632752 AS [Proba_0], -1.38629429287 AS [LogProba_0], 0.24999998293672462 AS [Proba_1], -1.38629442937 AS [LogProba_1], 0.2499999829367247 AS [Proba_2], -1.38629442937 AS [LogProba_2], 0.25000001706327546 AS [Proba_3], -1.38629429287 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 0.9720947742462158 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3148351466455568 AS [Proba_0], -1.15570612113 AS [LogProba_0], 0.3148397110909966 AS [Proba_1], -1.15569162335 AS [LogProba_1], 0.056907198199922265 AS [Proba_2], -2.8663334397 AS [LogProba_2], 0.3134179440635243 AS [Proba_3], -1.16021769459 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_16' AS feature, -0.20063135027885437 AS threshold, 69 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4029768725851876 AS [Proba_0], -0.908876106808 AS [LogProba_0], 0.13568049981476052 AS [Proba_1], -1.99745242317 AS [LogProba_1], 0.06020672291852709 AS [Proba_2], -2.80997125652 AS [LogProba_2], 0.40113590468152477 AS [Proba_3], -0.913454994676 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19616102445710826 AS [Proba_0], -1.62881940369 AS [LogProba_0], 0.10961123938050676 AS [Proba_1], -2.21081536063 AS [LogProba_1], 0.0726625396841585 AS [Proba_2], -2.62192929981 AS [LogProba_2], 0.6215651964782265 AS [Proba_3], -0.475514471718 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7792840311272641 AS [Proba_0], -0.249379689646 AS [LogProba_0], 0.1831142405464288 AS [Proba_1], -1.69764505563 AS [LogProba_1], 0.03754301964423665 AS [Proba_2], -3.28226781301 AS [LogProba_2], 5.870868207043272e-05 AS [Proba_3], -9.74292293627 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0], -1.79769313486231e+308 AS [LogProba_0], 0.9547819853515307 AS [Proba_1], -0.046272252153 AS [LogProba_1], 0.045121561629178394 AS [Proba_2], -3.09839506182 AS [LogProba_2], 9.64530192908615e-05 AS [Proba_3], -9.24645451489 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7770981288793516e-05 AS [Proba_0], -10.9379436957 AS [LogProba_0], 6.3225040415521505e-09 AS [Proba_1], -18.8791504982 AS [LogProba_1], 0.994500199743923 AS [Proba_2], -0.00551497983954 AS [LogProba_2], 0.005482022952284112 AS [Proba_3], -5.20628109427 AS [LogProba_3], 2 AS [Decision]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0] AS [Proba_0], [DT_node_data_5].[LogProba_0] AS [LogProba_0], [DT_node_data_5].[Proba_1] AS [Proba_1], [DT_node_data_5].[LogProba_1] AS [LogProba_1], [DT_node_data_5].[Proba_2] AS [Proba_2], [DT_node_data_5].[LogProba_2] AS [LogProba_2], [DT_node_data_5].[Proba_3] AS [Proba_3], [DT_node_data_5].[LogProba_3] AS [LogProba_3], [DT_node_data_5].[Decision] AS [Decision] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[AdaBoost_Estim_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, CAST(NULL AS FLOAT) AS [Score_5_0], [DT_Output_5].[Proba_0] AS [Proba_5_0], [DT_Output_5].[LogProba_0] AS [LogProba_5_0], CAST(NULL AS FLOAT) AS [Score_5_1], [DT_Output_5].[Proba_1] AS [Proba_5_1], [DT_Output_5].[LogProba_1] AS [LogProba_5_1], CAST(NULL AS FLOAT) AS [Score_5_2], [DT_Output_5].[Proba_2] AS [Proba_5_2], [DT_Output_5].[LogProba_2] AS [LogProba_5_2], CAST(NULL AS FLOAT) AS [Score_5_3], [DT_Output_5].[Proba_3] AS [Proba_5_3], [DT_Output_5].[LogProba_3] AS [LogProba_5_3], [DT_Output_5].[Decision] AS [Decision_5] 
FROM [DT_Output_5]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Score_0_0] AS [Score_0_0], [AdaBoost_Estim_0].[Proba_0_0] AS [Proba_0_0], [AdaBoost_Estim_0].[LogProba_0_0] AS [LogProba_0_0], [AdaBoost_Estim_0].[Score_0_1] AS [Score_0_1], [AdaBoost_Estim_0].[Proba_0_1] AS [Proba_0_1], [AdaBoost_Estim_0].[LogProba_0_1] AS [LogProba_0_1], [AdaBoost_Estim_0].[Score_0_2] AS [Score_0_2], [AdaBoost_Estim_0].[Proba_0_2] AS [Proba_0_2], [AdaBoost_Estim_0].[LogProba_0_2] AS [LogProba_0_2], [AdaBoost_Estim_0].[Score_0_3] AS [Score_0_3], [AdaBoost_Estim_0].[Proba_0_3] AS [Proba_0_3], [AdaBoost_Estim_0].[LogProba_0_3] AS [LogProba_0_3], [AdaBoost_Estim_0].[Decision_0] AS [Decision_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Score_1_0] AS [Score_1_0], [AdaBoost_Estim_1].[Proba_1_0] AS [Proba_1_0], [AdaBoost_Estim_1].[LogProba_1_0] AS [LogProba_1_0], [AdaBoost_Estim_1].[Score_1_1] AS [Score_1_1], [AdaBoost_Estim_1].[Proba_1_1] AS [Proba_1_1], [AdaBoost_Estim_1].[LogProba_1_1] AS [LogProba_1_1], [AdaBoost_Estim_1].[Score_1_2] AS [Score_1_2], [AdaBoost_Estim_1].[Proba_1_2] AS [Proba_1_2], [AdaBoost_Estim_1].[LogProba_1_2] AS [LogProba_1_2], [AdaBoost_Estim_1].[Score_1_3] AS [Score_1_3], [AdaBoost_Estim_1].[Proba_1_3] AS [Proba_1_3], [AdaBoost_Estim_1].[LogProba_1_3] AS [LogProba_1_3], [AdaBoost_Estim_1].[Decision_1] AS [Decision_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Score_2_0] AS [Score_2_0], [AdaBoost_Estim_2].[Proba_2_0] AS [Proba_2_0], [AdaBoost_Estim_2].[LogProba_2_0] AS [LogProba_2_0], [AdaBoost_Estim_2].[Score_2_1] AS [Score_2_1], [AdaBoost_Estim_2].[Proba_2_1] AS [Proba_2_1], [AdaBoost_Estim_2].[LogProba_2_1] AS [LogProba_2_1], [AdaBoost_Estim_2].[Score_2_2] AS [Score_2_2], [AdaBoost_Estim_2].[Proba_2_2] AS [Proba_2_2], [AdaBoost_Estim_2].[LogProba_2_2] AS [LogProba_2_2], [AdaBoost_Estim_2].[Score_2_3] AS [Score_2_3], [AdaBoost_Estim_2].[Proba_2_3] AS [Proba_2_3], [AdaBoost_Estim_2].[LogProba_2_3] AS [LogProba_2_3], [AdaBoost_Estim_2].[Decision_2] AS [Decision_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Score_3_0] AS [Score_3_0], [AdaBoost_Estim_3].[Proba_3_0] AS [Proba_3_0], [AdaBoost_Estim_3].[LogProba_3_0] AS [LogProba_3_0], [AdaBoost_Estim_3].[Score_3_1] AS [Score_3_1], [AdaBoost_Estim_3].[Proba_3_1] AS [Proba_3_1], [AdaBoost_Estim_3].[LogProba_3_1] AS [LogProba_3_1], [AdaBoost_Estim_3].[Score_3_2] AS [Score_3_2], [AdaBoost_Estim_3].[Proba_3_2] AS [Proba_3_2], [AdaBoost_Estim_3].[LogProba_3_2] AS [LogProba_3_2], [AdaBoost_Estim_3].[Score_3_3] AS [Score_3_3], [AdaBoost_Estim_3].[Proba_3_3] AS [Proba_3_3], [AdaBoost_Estim_3].[LogProba_3_3] AS [LogProba_3_3], [AdaBoost_Estim_3].[Decision_3] AS [Decision_3], [AdaBoost_Estim_4].join_key_4 AS join_key_4, [AdaBoost_Estim_4].[Score_4_0] AS [Score_4_0], [AdaBoost_Estim_4].[Proba_4_0] AS [Proba_4_0], [AdaBoost_Estim_4].[LogProba_4_0] AS [LogProba_4_0], [AdaBoost_Estim_4].[Score_4_1] AS [Score_4_1], [AdaBoost_Estim_4].[Proba_4_1] AS [Proba_4_1], [AdaBoost_Estim_4].[LogProba_4_1] AS [LogProba_4_1], [AdaBoost_Estim_4].[Score_4_2] AS [Score_4_2], [AdaBoost_Estim_4].[Proba_4_2] AS [Proba_4_2], [AdaBoost_Estim_4].[LogProba_4_2] AS [LogProba_4_2], [AdaBoost_Estim_4].[Score_4_3] AS [Score_4_3], [AdaBoost_Estim_4].[Proba_4_3] AS [Proba_4_3], [AdaBoost_Estim_4].[LogProba_4_3] AS [LogProba_4_3], [AdaBoost_Estim_4].[Decision_4] AS [Decision_4], [AdaBoost_Estim_5].join_key_5 AS join_key_5, [AdaBoost_Estim_5].[Score_5_0] AS [Score_5_0], [AdaBoost_Estim_5].[Proba_5_0] AS [Proba_5_0], [AdaBoost_Estim_5].[LogProba_5_0] AS [LogProba_5_0], [AdaBoost_Estim_5].[Score_5_1] AS [Score_5_1], [AdaBoost_Estim_5].[Proba_5_1] AS [Proba_5_1], [AdaBoost_Estim_5].[LogProba_5_1] AS [LogProba_5_1], [AdaBoost_Estim_5].[Score_5_2] AS [Score_5_2], [AdaBoost_Estim_5].[Proba_5_2] AS [Proba_5_2], [AdaBoost_Estim_5].[LogProba_5_2] AS [LogProba_5_2], [AdaBoost_Estim_5].[Score_5_3] AS [Score_5_3], [AdaBoost_Estim_5].[Proba_5_3] AS [Proba_5_3], [AdaBoost_Estim_5].[LogProba_5_3] AS [LogProba_5_3], [AdaBoost_Estim_5].[Decision_5] AS [Decision_5] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2 LEFT OUTER JOIN [AdaBoost_Estim_4] ON [AdaBoost_Estim_4].join_key_4 = [AdaBoost_Estim_3].join_key_3 LEFT OUTER JOIN [AdaBoost_Estim_5] ON [AdaBoost_Estim_5].join_key_5 = [AdaBoost_Estim_4].join_key_4), 
[AdaBoost_AVG_Scores_BN] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS [KEY], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_0], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_1], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_2], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_3], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [AdaBoost_Join_CTE]), 
[AdaBoost_AVG_Scores] AS 
(SELECT [AdaBoost_AVG_Scores_BN].[KEY] AS [KEY], [AdaBoost_AVG_Scores_BN].[Score_0] AS [Score_0], exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], [AdaBoost_AVG_Scores_BN].[Score_1] AS [Score_1], exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1], [AdaBoost_AVG_Scores_BN].[Score_2] AS [Score_2], exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_2], CAST(NULL AS FLOAT) AS [LogProba_2], [AdaBoost_AVG_Scores_BN].[Score_3] AS [Score_3], exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_3], CAST(NULL AS FLOAT) AS [LogProba_3] 
FROM [AdaBoost_AVG_Scores_BN]), 
orig_cte AS 
(SELECT [AdaBoost_AVG_Scores].[KEY] AS [KEY], [AdaBoost_AVG_Scores].[Score_0] AS [Score_0], [AdaBoost_AVG_Scores].[Score_1] AS [Score_1], [AdaBoost_AVG_Scores].[Score_2] AS [Score_2], [AdaBoost_AVG_Scores].[Score_3] AS [Score_3], [AdaBoost_AVG_Scores].[Proba_0] AS [Proba_0], [AdaBoost_AVG_Scores].[Proba_1] AS [Proba_1], [AdaBoost_AVG_Scores].[Proba_2] AS [Proba_2], [AdaBoost_AVG_Scores].[Proba_3] AS [Proba_3], [AdaBoost_AVG_Scores].[LogProba_0] AS [LogProba_0], [AdaBoost_AVG_Scores].[LogProba_1] AS [LogProba_1], [AdaBoost_AVG_Scores].[LogProba_2] AS [LogProba_2], [AdaBoost_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [AdaBoost_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte