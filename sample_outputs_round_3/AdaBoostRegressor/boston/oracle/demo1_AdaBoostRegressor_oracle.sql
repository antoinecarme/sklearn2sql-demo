-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 6.965000152587891) THEN CASE WHEN ("ADS"."Feature_5" <= 7.515000343322754) THEN CASE WHEN ("ADS"."Feature_5" <= 6.659000396728516) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_12" <= 14.399999618530273) THEN CASE WHEN ("ADS"."Feature_12" <= 9.649999618530273) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.103799819946289) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 6.965000152587891 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.284189723320164 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.515000343322754 AS threshold, 126 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.152380952380945 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 6.659000396728516 AS threshold, 100 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 30.14799999999999 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.402702702702708 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.93492063492064 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.707692307692305 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 380 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.680526315789468 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_12' AS feature, 9.649999618530273 AS threshold, 211 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.034597156398107 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.367500000000007 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.60992366412214 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_7' AS feature, 2.103799819946289 AS threshold, 169 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.49289940828401 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.952525252525257 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.085714285714285 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.53499984741211) THEN CASE WHEN ("ADS"."Feature_4" <= 0.5740000009536743) THEN CASE WHEN ("ADS"."Feature_5" <= 7.091500282287598) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6389999985694885) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 19.829999923706055) THEN CASE WHEN ("ADS"."Feature_12" <= 14.404999732971191) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6030000448226929) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.53499984741211 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.677667984189718 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.5740000009536743 AS threshold, 254 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.22125984251969 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 7.091500282287598 AS threshold, 184 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.04945652173913 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 134 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.288805970149255 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 39.127999999999986 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.6389999985694885 AS threshold, 70 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.18714285714285 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 48.351111111111116 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 36.692 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 19.829999923706055 AS threshold, 252 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.074206349206346 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 14.404999732971191 AS threshold, 195 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.79230769230768 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.912371134020617 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.693877551020414 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.6030000448226929 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.196491228070178 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.766666666666666 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.564285714285715 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.614999771118164) THEN CASE WHEN ("ADS"."Feature_7" <= 1.4849499464035034) THEN 2 ELSE CASE WHEN ("ADS"."Feature_5" <= 6.940999984741211) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6634999513626099) THEN CASE WHEN ("ADS"."Feature_10" <= 17.849998474121094) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_0" <= 7.244080066680908) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.614999771118164 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.0100790513834 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 1.4849499464035034 AS threshold, 236 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.486864406779677 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_5' AS feature, 6.940999984741211 AS threshold, 213 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.487793427230038 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.37384615384614 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 37.4975903614458 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_4' AS feature, 0.6634999513626099 AS threshold, 270 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.47481481481481 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_10' AS feature, 17.849998474121094 AS threshold, 169 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.92721893491124 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.510526315789477 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 131 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.597709923664127 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_0' AS feature, 7.244080066680908 AS threshold, 101 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.371287128712869 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.20952380952381 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.63898305084746 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.604999542236328) THEN CASE WHEN ("ADS"."Feature_12" <= 4.474999904632568) THEN CASE WHEN ("ADS"."Feature_5" <= 7.370500087738037) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_10" <= 13.850000381469727) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 20.19499969482422) THEN CASE WHEN ("ADS"."Feature_12" <= 14.800000190734863) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6030000448226929) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.604999542236328 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.2881422924901 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 4.474999904632568 AS threshold, 260 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.97153846153841 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 7.370500087738037 AS threshold, 65 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.356923076923074 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 37.589999999999996 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 47.364444444444445 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_10' AS feature, 13.850000381469727 AS threshold, 195 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.17641025641022 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 43.32857142857143 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 167 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.803592814371257 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 20.19499969482422 AS threshold, 246 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.167479674796745 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 14.800000190734863 AS threshold, 181 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.316574585635344 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.349000000000004 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.807407407407414 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.6030000448226929 AS threshold, 65 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.183076923076927 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.033333333333328 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.427999999999999 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.635000228881836) THEN CASE WHEN ("ADS"."Feature_6" <= 82.94999694824219) THEN CASE WHEN ("ADS"."Feature_5" <= 6.727499961853027) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_11" <= 390.81500244140625) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.075399875640869) THEN CASE WHEN ("ADS"."Feature_12" <= 22.93000030517578) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 6.789999961853027) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.635000228881836 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.890118577075107 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 82.94999694824219 AS threshold, 292 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 35.28972602739724 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 6.727499961853027 AS threshold, 183 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.60437158469944 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.271764705882365 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 98 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 35.96428571428572 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_11' AS feature, 390.81500244140625 AS threshold, 109 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.8348623853211 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 47.9875 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.62380952380952 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, 2.075399875640869 AS threshold, 214 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.79345794392523 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 22.93000030517578 AS threshold, 80 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.905000000000001 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.35681818181818 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.908333333333335 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_5' AS feature, 6.789999961853027 AS threshold, 134 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.71194029850746 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.530769230769227 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.841176470588238 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 10.020000457763672) THEN CASE WHEN ("ADS"."Feature_12" <= 4.474999904632568) THEN CASE WHEN ("ADS"."Feature_2" <= 2.7850000858306885) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.999205112457275) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6634999513626099) THEN CASE WHEN ("ADS"."Feature_5" <= 6.84250020980835) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 8.951885223388672) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 10.020000457763672 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.61620553359683 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 4.474999904632568 AS threshold, 326 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.02760736196313 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 2.7850000858306885 AS threshold, 74 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 45.118918918918915 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 48.903125 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 42.23571428571428 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 6.999205112457275 AS threshold, 252 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.47698412698406 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 229 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.415720524017434 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 50.0 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 0.6634999513626099 AS threshold, 180 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.815555555555548 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, 6.84250020980835 AS threshold, 118 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.762711864406786 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.42941176470588 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.2625 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 8.951885223388672 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.206451612903223 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.477419354838707 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.935483870967744 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Estimator_0" AS "Estimator_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Estimator_1" AS "Estimator_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Estimator_2" AS "Estimator_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Estimator_3" AS "Estimator_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Estimator_4" AS "Estimator_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Estimator_5" AS "Estimator_5" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4), 
"WeightedEstimators" AS 
(SELECT "Values"."Key" AS "Key", "Values".sub_estimator AS sub_estimator, "Values"."Weight" AS "Weight", "Values"."Value" AS "Value" 
FROM (SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 0 AS sub_estimator, 0.224871461839 AS "Weight", "AdaBoost_Join_CTE"."Estimator_0" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 1 AS sub_estimator, 0.201329833392 AS "Weight", "AdaBoost_Join_CTE"."Estimator_1" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 2 AS sub_estimator, 0.125255854889 AS "Weight", "AdaBoost_Join_CTE"."Estimator_2" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 3 AS sub_estimator, 0.156183104015 AS "Weight", "AdaBoost_Join_CTE"."Estimator_3" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 4 AS sub_estimator, 0.161114548773 AS "Weight", "AdaBoost_Join_CTE"."Estimator_4" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 5 AS sub_estimator, 0.131245197093 AS "Weight", "AdaBoost_Join_CTE"."Estimator_5" AS "Value" 
FROM "AdaBoost_Join_CTE") "Values"), 
"Cumulative_Frequencies" AS 
(SELECT u1."Key" AS "Key", u1.sub_estimator AS sub_estimator, u1."Weight" AS "Weight", u1."Value" AS "Value", (SELECT sum(u2."Weight") AS sum_1 
FROM "WeightedEstimators" u2 
WHERE u1."Key" = u2."Key" AND u1."Value" >= u2."Value") AS cum_weight 
FROM "WeightedEstimators" u1), 
"Quantiles" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS join_key_0, "AdaBoost_Join_CTE"."Estimator_0" AS "Estimator_0", "AdaBoost_Join_CTE".join_key_1 AS join_key_1, "AdaBoost_Join_CTE"."Estimator_1" AS "Estimator_1", "AdaBoost_Join_CTE".join_key_2 AS join_key_2, "AdaBoost_Join_CTE"."Estimator_2" AS "Estimator_2", "AdaBoost_Join_CTE".join_key_3 AS join_key_3, "AdaBoost_Join_CTE"."Estimator_3" AS "Estimator_3", "AdaBoost_Join_CTE".join_key_4 AS join_key_4, "AdaBoost_Join_CTE"."Estimator_4" AS "Estimator_4", "AdaBoost_Join_CTE".join_key_5 AS join_key_5, "AdaBoost_Join_CTE"."Estimator_5" AS "Estimator_5", (SELECT min("Cumulative_Frequencies"."Value") AS min_1 
FROM "Cumulative_Frequencies" 
WHERE "AdaBoost_Join_CTE".join_key_0 = "Cumulative_Frequencies"."Key" AND "Cumulative_Frequencies".cum_weight >= 0.5) AS "Median" 
FROM "AdaBoost_Join_CTE")
 SELECT "Quantiles".join_key_0 AS "KEY", "Quantiles"."Median" AS "Estimator" 
FROM "Quantiles"