-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.540030966247 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.484431855869 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.502557517309 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.53549332587 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.529665146689 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.485394778563 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.506181156506 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.462546759651 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.474243834589 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.477757486725 ELSE [ADS].[Feature_9] END AS impute_11 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 0.540030966247 AS impute_2, [ADS_imp_1_OUT].impute_3 - 0.484431855869 AS impute_3, [ADS_imp_1_OUT].impute_4 - 0.502557517309 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.53549332587 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.529665146689 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.485394778563 AS impute_7, [ADS_imp_1_OUT].impute_8 - 0.506181156506 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.462546759651 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.474243834589 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.477757486725 AS impute_11 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.00291728345589 + [CenteredDataForPCA].impute_3 * -0.486034759355 + [CenteredDataForPCA].impute_4 * -0.500263885596 + [CenteredDataForPCA].impute_5 * 0.127383801947 + [CenteredDataForPCA].impute_6 * 0.329051931833 + [CenteredDataForPCA].impute_7 * -0.496864456416 + [CenteredDataForPCA].impute_8 * -0.143088869875 + [CenteredDataForPCA].impute_9 * 0.275413827374 + [CenteredDataForPCA].impute_10 * 0.212361777654 + [CenteredDataForPCA].impute_11 * 0.0263993642785 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.0573093462396 + [CenteredDataForPCA].impute_3 * 0.0652144781481 + [CenteredDataForPCA].impute_4 * -0.0833528801702 + [CenteredDataForPCA].impute_5 * 0.326578296365 + [CenteredDataForPCA].impute_6 * -0.417184056707 + [CenteredDataForPCA].impute_7 * -0.449681182521 + [CenteredDataForPCA].impute_8 * 0.292425995859 + [CenteredDataForPCA].impute_9 * -0.417620794032 + [CenteredDataForPCA].impute_10 * 0.1475966902 + [CenteredDataForPCA].impute_11 * -0.470001114551 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.721286537952 + [CenteredDataForPCA].impute_3 * -0.109337227442 + [CenteredDataForPCA].impute_4 * 0.195039117247 + [CenteredDataForPCA].impute_5 * 0.0706112875512 + [CenteredDataForPCA].impute_6 * -0.0118290316389 + [CenteredDataForPCA].impute_7 * 0.0826416909502 + [CenteredDataForPCA].impute_8 * 0.467537567784 + [CenteredDataForPCA].impute_9 * 0.347912132275 + [CenteredDataForPCA].impute_10 * 0.263784174303 + [CenteredDataForPCA].impute_11 * -0.092622863913 AS anoova_4, [CenteredDataForPCA].impute_2 * 0.0517524292034 + [CenteredDataForPCA].impute_3 * -0.220012194719 + [CenteredDataForPCA].impute_4 * -0.595645771715 + [CenteredDataForPCA].impute_5 * -0.205538481691 + [CenteredDataForPCA].impute_6 * -0.336056989461 + [CenteredDataForPCA].impute_7 * 0.52202314289 + [CenteredDataForPCA].impute_8 * 0.0967591976901 + [CenteredDataForPCA].impute_9 * 0.1353092773 + [CenteredDataForPCA].impute_10 * -0.108007763882 + [CenteredDataForPCA].impute_11 * -0.356507062526 AS anoova_5, [CenteredDataForPCA].impute_2 * 0.203521285096 + [CenteredDataForPCA].impute_3 * -0.537594842995 + [CenteredDataForPCA].impute_4 * 0.276258617407 + [CenteredDataForPCA].impute_5 * -0.566502999554 + [CenteredDataForPCA].impute_6 * 0.134282494495 + [CenteredDataForPCA].impute_7 * -0.022778028089 + [CenteredDataForPCA].impute_8 * 0.324000872279 + [CenteredDataForPCA].impute_9 * -0.346509797819 + [CenteredDataForPCA].impute_10 * 0.167201957226 + [CenteredDataForPCA].impute_11 * -0.0278149687812 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.274502743251 + [CenteredDataForPCA].impute_3 * -0.202236968135 + [CenteredDataForPCA].impute_4 * 0.222108226894 + [CenteredDataForPCA].impute_5 * -0.0411605225737 + [CenteredDataForPCA].impute_6 * -0.16079582543 + [CenteredDataForPCA].impute_7 * 0.121316315733 + [CenteredDataForPCA].impute_8 * -0.734071456489 + [CenteredDataForPCA].impute_9 * -0.157315063496 + [CenteredDataForPCA].impute_10 * 0.369008442902 + [CenteredDataForPCA].impute_11 * -0.303929416621 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.126750815715 + [CenteredDataForPCA].impute_3 * -0.365252070503 + [CenteredDataForPCA].impute_4 * 0.351774264467 + [CenteredDataForPCA].impute_5 * 0.39791548841 + [CenteredDataForPCA].impute_6 * 0.256528872845 + [CenteredDataForPCA].impute_7 * 0.109163875102 + [CenteredDataForPCA].impute_8 * -0.00803841043403 + [CenteredDataForPCA].impute_9 * 0.140033164449 + [CenteredDataForPCA].impute_10 * -0.521313858964 + [CenteredDataForPCA].impute_11 * -0.446405006339 AS anoova_8, [CenteredDataForPCA].impute_2 * -0.516307536098 + [CenteredDataForPCA].impute_3 * -0.270084209033 + [CenteredDataForPCA].impute_4 * -0.162118951187 + [CenteredDataForPCA].impute_5 * -0.00241463928258 + [CenteredDataForPCA].impute_6 * -0.156670292619 + [CenteredDataForPCA].impute_7 * -0.109681697249 + [CenteredDataForPCA].impute_8 * -0.0834326719125 + [CenteredDataForPCA].impute_9 * -0.430308428787 + [CenteredDataForPCA].impute_10 * -0.544553361916 + [CenteredDataForPCA].impute_11 * 0.330079216977 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.000911169497939 + [CenteredDataForPCA].impute_3 * -0.0532274842187 + [CenteredDataForPCA].impute_4 * -0.187151786431 + [CenteredDataForPCA].impute_5 * 0.476418840911 + [CenteredDataForPCA].impute_6 * 0.395960149295 + [CenteredDataForPCA].impute_7 * 0.471235594151 + [CenteredDataForPCA].impute_8 * 0.120954711063 + [CenteredDataForPCA].impute_9 * -0.470632236996 + [CenteredDataForPCA].impute_10 * 0.314207584913 + [CenteredDataForPCA].impute_11 * 0.146515273896 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.272693607637 + [CenteredDataForPCA].impute_3 * -0.400076946176 + [CenteredDataForPCA].impute_4 * 0.198115705416 + [CenteredDataForPCA].impute_5 * 0.349214327401 + [CenteredDataForPCA].impute_6 * -0.559985619463 + [CenteredDataForPCA].impute_7 * 0.101628916559 + [CenteredDataForPCA].impute_8 * 0.0237856102116 + [CenteredDataForPCA].impute_9 * 0.198247928256 + [CenteredDataForPCA].impute_10 * 0.143921122112 + [CenteredDataForPCA].impute_11 * 0.468916344256 AS anoova_11 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.21057838201522827) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.24718374013900757) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.20412737131118774) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.21057838201522827 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.30370542319842 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.775234301767824 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_8' AS feature, 0.24718374013900757 AS threshold, 76 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.891643672071245 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_10' AS feature, -0.20412737131118774 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.86777252260879 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.595157089461761 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.114483163807657 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.190784042561358 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.12393394857645035) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.051451943814754486) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.022239260375499725) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.1004127711057663) THEN 7 ELSE 8 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, 0.12393394857645035 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.963684445071795 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 0.051451943814754486 AS threshold, 69 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.710125630741164 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.022239260375499725 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.464028621429993 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.58974192517856 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.338315317681428 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.98183208966966 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_6' AS feature, 0.1004127711057663 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.076444386646422 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.684846947120892 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.56856698620161 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.2088572233915329) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.08835355192422867) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.05688910931348801) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.10157399624586105) THEN 6 ELSE 7 END ELSE 8 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.2088572233915329 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.011760914456044 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, 0.08835355192422867 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.94555605470488 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.41586310384883 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.379643196132434 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_9' AS feature, 0.05688910931348801 AS threshold, 69 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.244403677532658 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, -0.10157399624586105 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.97095877163925 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.91637142622841 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.840268721374942 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.205666711905039 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.2601996064186096) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.22411087155342102) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.19987592101097107) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.2601996064186096 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.896737384481169 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.08146108991766 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.22411087155342102 AS threshold, 84 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.718694773921827 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.486538868552 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_10' AS feature, -0.19987592101097107 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.026879127440155 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.391875017640565 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.104835354176355 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -0.17252954840660095) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.13811366260051727) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.006350153125822544) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.036523811519145966) THEN 6 ELSE 7 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.029166921973228455) THEN 9 ELSE 10 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -0.17252954840660095 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.679782007973042 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, -0.13811366260051727 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.242053788680817 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.115406274823933 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.687962689886927 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_8' AS feature, -0.006350153125822544 AS threshold, 66 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.844672302759962 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_10' AS feature, -0.036523811519145966 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.544249204711274 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.846402838237951 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.348210969089177 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_6' AS feature, 0.029166921973228455 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.14509540080865 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.648437879701234 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.141084426137544 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[AdaBoost_Estim_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.08988430351018906) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.09972311556339264) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.23617959022521973) THEN 5 ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, 0.08988430351018906 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.366068384772374 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 0.09972311556339264 AS threshold, 53 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.131990826433032 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.71196805501784 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.425346087795802 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_8' AS feature, -0.23617959022521973 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.119389886729495 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.790171421292317 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.04910213631422 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[AdaBoost_Estim_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Estimator_0] AS [Estimator_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Estimator_1] AS [Estimator_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Estimator_2] AS [Estimator_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Estimator_3] AS [Estimator_3], [AdaBoost_Estim_4].join_key_4 AS join_key_4, [AdaBoost_Estim_4].[Estimator_4] AS [Estimator_4], [AdaBoost_Estim_5].join_key_5 AS join_key_5, [AdaBoost_Estim_5].[Estimator_5] AS [Estimator_5] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2 LEFT OUTER JOIN [AdaBoost_Estim_4] ON [AdaBoost_Estim_4].join_key_4 = [AdaBoost_Estim_3].join_key_3 LEFT OUTER JOIN [AdaBoost_Estim_5] ON [AdaBoost_Estim_5].join_key_5 = [AdaBoost_Estim_4].join_key_4), 
[WeightedEstimators] AS 
(SELECT [Values].[Key] AS [Key], [Values].sub_estimator AS sub_estimator, [Values].[Weight] AS [Weight], [Values].[Value] AS [Value] 
FROM (SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 0 AS sub_estimator, 0.191850421026 AS [Weight], [AdaBoost_Join_CTE].[Estimator_0] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 1 AS sub_estimator, 0.151021697054 AS [Weight], [AdaBoost_Join_CTE].[Estimator_1] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 2 AS sub_estimator, 0.128579421404 AS [Weight], [AdaBoost_Join_CTE].[Estimator_2] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 3 AS sub_estimator, 0.139768746175 AS [Weight], [AdaBoost_Join_CTE].[Estimator_3] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 4 AS sub_estimator, 0.195539465975 AS [Weight], [AdaBoost_Join_CTE].[Estimator_4] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 5 AS sub_estimator, 0.193240248367 AS [Weight], [AdaBoost_Join_CTE].[Estimator_5] AS [Value] 
FROM [AdaBoost_Join_CTE]) AS [Values]), 
[Cumulative_Frequencies] AS 
(SELECT u1.[Key] AS [Key], u1.sub_estimator AS sub_estimator, u1.[Weight] AS [Weight], u1.[Value] AS [Value], (SELECT sum(u2.[Weight]) AS sum_1 
FROM [WeightedEstimators] AS u2 
WHERE u1.[Key] = u2.[Key] AND u1.[Value] >= u2.[Value]) AS cum_weight 
FROM [WeightedEstimators] AS u1), 
[Quantiles] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS join_key_0, [AdaBoost_Join_CTE].[Estimator_0] AS [Estimator_0], [AdaBoost_Join_CTE].join_key_1 AS join_key_1, [AdaBoost_Join_CTE].[Estimator_1] AS [Estimator_1], [AdaBoost_Join_CTE].join_key_2 AS join_key_2, [AdaBoost_Join_CTE].[Estimator_2] AS [Estimator_2], [AdaBoost_Join_CTE].join_key_3 AS join_key_3, [AdaBoost_Join_CTE].[Estimator_3] AS [Estimator_3], [AdaBoost_Join_CTE].join_key_4 AS join_key_4, [AdaBoost_Join_CTE].[Estimator_4] AS [Estimator_4], [AdaBoost_Join_CTE].join_key_5 AS join_key_5, [AdaBoost_Join_CTE].[Estimator_5] AS [Estimator_5], (SELECT min([Cumulative_Frequencies].[Value]) AS min_1 
FROM [Cumulative_Frequencies] 
WHERE [AdaBoost_Join_CTE].join_key_0 = [Cumulative_Frequencies].[Key] AND [Cumulative_Frequencies].cum_weight >= 0.5) AS [Median] 
FROM [AdaBoost_Join_CTE])
 SELECT [Quantiles].join_key_0 AS [KEY], [Quantiles].[Median] AS [Estimator] 
FROM [Quantiles]