-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -3.63428492931e-16 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 1.30834257455e-16 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -8.04534920334e-16 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 1.28165452107e-16 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -8.83531558624e-17 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 1.32702421198e-16 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -4.57464634298e-16 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 3.77730149823e-16 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -3.83085421731e-16 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -3.41288201508e-16 ELSE [ADS].[Feature_9] END AS impute_11 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - -3.63428492931e-16 AS impute_2, [ADS_imp_1_OUT].impute_3 - 1.30834257455e-16 AS impute_3, [ADS_imp_1_OUT].impute_4 - -8.04534920334e-16 AS impute_4, [ADS_imp_1_OUT].impute_5 - 1.28165452107e-16 AS impute_5, [ADS_imp_1_OUT].impute_6 - -8.83531558624e-17 AS impute_6, [ADS_imp_1_OUT].impute_7 - 1.32702421198e-16 AS impute_7, [ADS_imp_1_OUT].impute_8 - -4.57464634298e-16 AS impute_8, [ADS_imp_1_OUT].impute_9 - 3.77730149823e-16 AS impute_9, [ADS_imp_1_OUT].impute_10 - -3.83085421731e-16 AS impute_10, [ADS_imp_1_OUT].impute_11 - -3.41288201508e-16 AS impute_11 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.21643100659 + [CenteredDataForPCA].impute_3 * 0.186967108192 + [CenteredDataForPCA].impute_4 * 0.303162498817 + [CenteredDataForPCA].impute_5 * 0.271739703287 + [CenteredDataForPCA].impute_6 * 0.34325493123 + [CenteredDataForPCA].impute_7 * 0.351860620033 + [CenteredDataForPCA].impute_8 * -0.282436391838 + [CenteredDataForPCA].impute_9 * 0.428833247772 + [CenteredDataForPCA].impute_10 * 0.378617309164 + [CenteredDataForPCA].impute_11 * 0.322182824553 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.044371505804 + [CenteredDataForPCA].impute_3 * -0.386548110735 + [CenteredDataForPCA].impute_4 * -0.156280609448 + [CenteredDataForPCA].impute_5 * -0.138255640728 + [CenteredDataForPCA].impute_6 * 0.573026691953 + [CenteredDataForPCA].impute_7 * 0.455939849626 + [CenteredDataForPCA].impute_8 * 0.506242872531 + [CenteredDataForPCA].impute_9 * -0.068184234517 + [CenteredDataForPCA].impute_10 * -0.0261893037261 + [CenteredDataForPCA].impute_11 * -0.0849466000238 AS anoova_3, [CenteredDataForPCA].impute_2 * 0.49466810716 + [CenteredDataForPCA].impute_3 * -0.106858334763 + [CenteredDataForPCA].impute_4 * 0.167531700938 + [CenteredDataForPCA].impute_5 * 0.513568043314 + [CenteredDataForPCA].impute_6 * -0.0685867001784 + [CenteredDataForPCA].impute_7 * -0.269694382255 + [CenteredDataForPCA].impute_8 * 0.386027874592 + [CenteredDataForPCA].impute_9 * -0.380681209291 + [CenteredDataForPCA].impute_10 * 0.0636315032871 + [CenteredDataForPCA].impute_11 * 0.276842712702 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.414009498941 + [CenteredDataForPCA].impute_3 * -0.679860516614 + [CenteredDataForPCA].impute_4 * 0.499825330253 + [CenteredDataForPCA].impute_5 * -0.019667344342 + [CenteredDataForPCA].impute_6 * -0.0683953319645 + [CenteredDataForPCA].impute_7 * -0.167773837077 + [CenteredDataForPCA].impute_8 * -0.0760200485782 + [CenteredDataForPCA].impute_9 * 0.00792120338562 + [CenteredDataForPCA].impute_10 * 0.264427419183 + [CenteredDataForPCA].impute_11 * 0.0870862356146 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.686863892154 + [CenteredDataForPCA].impute_3 * 0.373456115735 + [CenteredDataForPCA].impute_4 * 0.12935935855 + [CenteredDataForPCA].impute_5 * 0.486890138051 + [CenteredDataForPCA].impute_6 * 0.129174145487 + [CenteredDataForPCA].impute_7 * 0.116731430474 + [CenteredDataForPCA].impute_8 * 0.244991147174 + [CenteredDataForPCA].impute_9 * -0.14364377424 + [CenteredDataForPCA].impute_10 * -0.151661098575 + [CenteredDataForPCA].impute_11 * 0.0313879194047 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.225850503591 + [CenteredDataForPCA].impute_3 * 0.0417310316277 + [CenteredDataForPCA].impute_4 * -0.403141902489 + [CenteredDataForPCA].impute_5 * -0.272762738803 + [CenteredDataForPCA].impute_6 * 0.00540864137623 + [CenteredDataForPCA].impute_7 * -0.13325719548 + [CenteredDataForPCA].impute_8 * 0.106371596751 + [CenteredDataForPCA].impute_9 * -0.0339453956408 + [CenteredDataForPCA].impute_10 * 0.178730050963 + [CenteredDataForPCA].impute_11 * 0.805064466151 AS anoova_7, [CenteredDataForPCA].impute_2 * -0.109538210099 + [CenteredDataForPCA].impute_3 * -0.0676055051661 + [CenteredDataForPCA].impute_4 * -0.519857870077 + [CenteredDataForPCA].impute_5 * 0.32064908429 + [CenteredDataForPCA].impute_6 * 0.0736490780231 + [CenteredDataForPCA].impute_7 * -0.230540112449 + [CenteredDataForPCA].impute_8 * -0.00753445287491 + [CenteredDataForPCA].impute_9 * 0.0712361931688 + [CenteredDataForPCA].impute_10 * 0.647313447679 + [CenteredDataForPCA].impute_11 * -0.357272785105 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.0149346777542 + [CenteredDataForPCA].impute_3 * 0.442939663138 + [CenteredDataForPCA].impute_4 * 0.392941868456 + [CenteredDataForPCA].impute_5 * -0.477364351173 + [CenteredDataForPCA].impute_6 * 0.129413507459 + [CenteredDataForPCA].impute_7 * -0.191311206733 + [CenteredDataForPCA].impute_8 * 0.324636408704 + [CenteredDataForPCA].impute_9 * -0.180588338623 + [CenteredDataForPCA].impute_10 * 0.449660024059 + [CenteredDataForPCA].impute_11 * -0.166608696019 AS anoova_9, [CenteredDataForPCA].impute_2 * 0.00810057312789 + [CenteredDataForPCA].impute_3 * -0.00210552195289 + [CenteredDataForPCA].impute_4 * 0.0423775137715 + [CenteredDataForPCA].impute_5 * 0.027194101566 + [CenteredDataForPCA].impute_6 * -0.0420398366517 + [CenteredDataForPCA].impute_7 * -0.359315489659 + [CenteredDataForPCA].impute_8 * 0.481247705071 + [CenteredDataForPCA].impute_9 * 0.773816561846 + [CenteredDataForPCA].impute_10 * -0.18945947188 + [CenteredDataForPCA].impute_11 * -0.0152738068842 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.00326308608059 + [CenteredDataForPCA].impute_3 * 0.00366069256477 + [CenteredDataForPCA].impute_4 * 0.00824808535829 + [CenteredDataForPCA].impute_5 * -0.00322110536704 + [CenteredDataForPCA].impute_6 * 0.709774472551 + [CenteredDataForPCA].impute_7 * -0.563196047553 + [CenteredDataForPCA].impute_8 * -0.317444125112 + [CenteredDataForPCA].impute_9 * -0.0905946399327 + [CenteredDataForPCA].impute_10 * -0.264467346072 + [CenteredDataForPCA].impute_11 * 0.00261090257808 AS anoova_11 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.010119196958839893) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.05623718351125717) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.0006481186137534678) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.015399656258523464) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.03287399560213089) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.020496344193816185) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.010119196958839893 AS threshold, 277 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.66515837104072 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.05623718351125717 AS threshold, 126 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 107.7363184079602 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, 0.0006481186137534678 AS threshold, 111 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 97.94857142857143 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 117.63157894736842 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 82.83838383838383 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 173.6153846153846 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_5' AS feature, 0.015399656258523464 AS threshold, 151 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 193.80497925311204 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_2' AS feature, 0.03287399560213089 AS threshold, 91 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 163.2992700729927 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.11428571428571 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 179.49019607843138 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_3' AS feature, -0.020496344193816185 AS threshold, 60 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 233.9903846153846 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 274.19444444444446 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 212.7058823529412 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.040310151875019073) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.06655117124319077) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.023503128439188004) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.05020445957779884) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.05126885324716568) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.00037052034167572856) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.040310151875019073 AS threshold, 279 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.28054298642533 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.06655117124319077 AS threshold, 185 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 122.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, 0.023503128439188004 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 101.93129770992367 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 88.58333333333333 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 138.54285714285714 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, 0.05020445957779884 AS threshold, 99 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 138.03048780487805 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 127.57664233576642 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 191.07407407407408 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, 0.05126885324716568 AS threshold, 94 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 201.0204081632653 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_11' AS feature, 0.00037052034167572856 AS threshold, 79 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 185.9579831932773 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 170.41304347826087 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 238.92592592592592 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 265.0357142857143 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.003389422781765461) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.04318813607096672) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.00424254359677434) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.031905047595500946) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.05214158445596695) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.08457545936107635) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.003389422781765461 AS threshold, 274 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 157.70814479638008 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.04318813607096672 AS threshold, 140 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 113.27522935779817 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, -0.00424254359677434 AS threshold, 117 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 104.48947368421052 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 124.17894736842105 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 84.8 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 172.89285714285714 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_4' AS feature, 0.031905047595500946 AS threshold, 134 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 200.95089285714286 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_5' AS feature, 0.05214158445596695 AS threshold, 96 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 183.19753086419752 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 172.1417910447761 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 236.10714285714286 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_2' AS feature, 0.08457545936107635 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 247.33870967741936 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 220.6551724137931 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 270.7878787878788 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.031214548274874687) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.032367005944252014) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.08430438488721848) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.03553903102874756) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.03504867106676102) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.006605732720345259) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.04058433324098587) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.031214548274874687 AS threshold, 286 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 156.83031674208144 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.032367005944252014 AS threshold, 171 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 123.4172932330827 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.08430438488721848 AS threshold, 138 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 105.04306220095694 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 80.22368421052632 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 119.22556390977444 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.03553903102874756 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 190.78947368421052 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 160.66666666666666 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 217.9 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, -0.03504867106676102 AS threshold, 115 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 207.32954545454547 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_10' AS feature, -0.006605732720345259 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.4047619047619 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 136.35 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 170.8181818181818 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_3' AS feature, -0.04058433324098587 AS threshold, 85 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 223.9179104477612 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 257.44444444444446 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 206.96629213483146 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.041249096393585205) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.03133465722203255) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.042298100888729095) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.053505949676036835) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.012186123058199883) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.004118083510547876) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.014088407158851624) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.041249096393585205 AS threshold, 280 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.69230769230768 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.03133465722203255 AS threshold, 185 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 121.62068965517241 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.042298100888729095 AS threshold, 142 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 107.9372197309417 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 135.8923076923077 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 96.4367088607595 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.053505949676036835 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 167.16417910447763 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 136.35714285714286 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 218.92 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 0.012186123058199883 AS threshold, 95 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 200.3421052631579 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_9' AS feature, 0.004118083510547876 AS threshold, 48 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 178.50617283950618 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.45454545454547 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 195.04166666666666 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.014088407158851624 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 225.25352112676057 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 207.27659574468086 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 260.4583333333333 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.04098830744624138) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.031191857531666756) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.06655117124319077) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.05572471395134926) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.045108355581760406) THEN 9 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.01600184105336666) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.04098830744624138 AS threshold, 281 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.80769230769232 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.031191857531666756 AS threshold, 182 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.46503496503496 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.06655117124319077 AS threshold, 141 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 101.11555555555556 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 81.76136363636364 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 113.54744525547446 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.05572471395134926 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 191.8360655737705 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 151.45454545454547 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 214.6153846153846 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, -0.045108355581760406 AS threshold, 99 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 212.10256410256412 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.70967741935485 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_4' AS feature, 0.01600184105336666 AS threshold, 79 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 226.336 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 206.6986301369863 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 253.90384615384616 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.0458085723221302) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.0313534140586853) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.001821227022446692) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.012646126560866833) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.015399656258523464) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.034563422203063965) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.00037420878652483225) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.0458085723221302 AS threshold, 283 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.42760180995475 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0313534140586853 AS threshold, 185 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 119.60416666666667 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, 0.001821227022446692 AS threshold, 135 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 104.32558139534883 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 83 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 118.57364341085271 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 82.95348837209302 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.012646126560866833 AS threshold, 50 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 164.6027397260274 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 137.85714285714286 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 200.83870967741936 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, 0.015399656258523464 AS threshold, 98 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 219.55194805194805 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_3' AS feature, 0.034563422203063965 AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 195.0843373493976 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 209.82258064516128 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 151.57142857142858 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_3' AS feature, 0.00037420878652483225 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 248.1549295774648 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 273.3030303030303 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 226.31578947368422 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, [DT_Output_6].[Estimator] AS [Estimator_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.03798676282167435) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.013422827236354351) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.0009013669332489371) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.01235608197748661) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.012460146099328995) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.05840165168046951) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.02497326210141182) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.03798676282167435 AS threshold, 290 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 155.90271493212668 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.013422827236354351 AS threshold, 109 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 110.39877300613497 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, -0.0009013669332489371 AS threshold, 61 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 88.11111111111111 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 114.86206896551724 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 75.39344262295081 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_8' AS feature, -0.01235608197748661 AS threshold, 48 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 137.87671232876713 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 99.91666666666667 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 156.46938775510205 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, 0.012460146099328995 AS threshold, 181 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 182.48745519713262 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_2' AS feature, 0.05840165168046951 AS threshold, 104 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.14102564102564 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 126.63855421686748 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 181.13698630136986 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_3' AS feature, -0.02497326210141182 AS threshold, 77 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 220.97560975609755 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 262.8918918918919 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 202.9418604651163 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, [DT_Output_7].[Estimator] AS [Estimator_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.026282064616680145) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.023503128439188004) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.062354348599910736) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.0017418430652469397) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.012186123058199883) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.043557967990636826) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.029253017157316208) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.026282064616680145 AS threshold, 282 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 149.65384615384616 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.023503128439188004 AS threshold, 164 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 117.74903474903475 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.062354348599910736 AS threshold, 111 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 101.92528735632185 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 143.6551724137931 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 92 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 93.57931034482759 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_10' AS feature, -0.0017418430652469397 AS threshold, 53 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 150.14117647058825 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 173.36170212765958 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 121.42105263157895 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 0.012186123058199883 AS threshold, 118 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 194.8087431693989 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_5' AS feature, -0.043557967990636826 AS threshold, 63 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 158.96 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.81481481481481 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 174.54794520547946 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_5' AS feature, -0.029253017157316208 AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 238.0 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 183.28571428571428 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 256.53225806451616 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, [DT_Output_8].[Estimator] AS [Estimator_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.045893989503383636) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.03140190988779068) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.004332616925239563) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.04899412393569946) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.041420262306928635) THEN 9 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.0205669067800045) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.045893989503383636 AS threshold, 276 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.19683257918552 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.03140190988779068 AS threshold, 183 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 122.6713780918728 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, -0.004332616925239563 AS threshold, 134 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 106.35238095238095 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 126.74226804123711 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 88.84955752212389 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.04899412393569946 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 169.6164383561644 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 137.23684210526315 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 204.77142857142857 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, -0.041420262306928635 AS threshold, 93 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 210.30817610062894 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 140.0 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_4' AS feature, 0.0205669067800045 AS threshold, 77 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 228.0236220472441 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 211.26666666666668 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 252.19230769230768 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, [DT_Output_9].[Estimator] AS [Estimator_9] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Estimator_0] AS [Estimator_0], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Estimator_1] AS [Estimator_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Estimator_2] AS [Estimator_2], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Estimator_3] AS [Estimator_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Estimator_4] AS [Estimator_4], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Estimator_5] AS [Estimator_5], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Estimator_6] AS [Estimator_6], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Estimator_7] AS [Estimator_7], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Estimator_8] AS [Estimator_8], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Estimator_9] AS [Estimator_9] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Estimator_0] / 10 + [RF_Join_CTE].[Estimator_1] / 10 + [RF_Join_CTE].[Estimator_2] / 10 + [RF_Join_CTE].[Estimator_3] / 10 + [RF_Join_CTE].[Estimator_4] / 10 + [RF_Join_CTE].[Estimator_5] / 10 + [RF_Join_CTE].[Estimator_6] / 10 + [RF_Join_CTE].[Estimator_7] / 10 + [RF_Join_CTE].[Estimator_8] / 10 + [RF_Join_CTE].[Estimator_9] / 10 AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]