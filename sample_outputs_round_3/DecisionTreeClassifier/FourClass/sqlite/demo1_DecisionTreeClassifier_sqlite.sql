-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= -0.16362789273262024) THEN CASE WHEN ("ADS"."Feature_17" <= 0.29632478952407837) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.6752446889877319) THEN 5 ELSE 6 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_6' AS feature, -0.16362789273262024 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS "Proba_0", -1.42711635564 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.26 AS "Proba_2", -1.34707364797 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.29632478952407837 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.48936170212765956 AS "Proba_0", -0.714653385781 AS "LogProba_0", 0.1276595744680851 AS "Proba_1", -2.05838813248 AS "LogProba_1", 0.3617021276595745 AS "Proba_2", -1.01693425765 AS "LogProba_2", 0.02127659574468085 AS "Proba_3", -3.85014760171 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6896551724137931 AS "Proba_0", -0.371563556432 AS "LogProba_0", 0.20689655172413793 AS "Proba_1", -1.57553636076 AS "LogProba_1", 0.10344827586206896 AS "Proba_2", -2.26868354132 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0", -1.79175946923 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.7777777777777778 AS "Proba_2", -0.251314428281 AS "LogProba_2", 0.05555555555555555 AS "Proba_3", -2.8903717579 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, 'Feature_8' AS feature, 0.6752446889877319 AS threshold, 53 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.018867924528301886 AS "Proba_0", -3.97029191355 AS "LogProba_0", 0.3584905660377358 AS "Proba_1", -1.02585293439 AS "LogProba_1", 0.16981132075471697 AS "Proba_2", -1.77306733622 AS "LogProba_2", 0.4528301886792453 AS "Proba_3", -0.792238083204 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.034482758620689655 AS "Proba_0", -3.36729582999 AS "LogProba_0", 0.10344827586206896 AS "Proba_1", -2.26868354132 AS "LogProba_1", 0.3103448275862069 AS "Proba_2", -1.17007125265 AS "LogProba_2", 0.5517241379310345 AS "Proba_3", -0.594707107747 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.09861228867 AS "LogProba_3", 1 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", "DT_Output"."Decision" AS "Decision" 
FROM "DT_Output"