-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_5] <= 6.940999984741211) THEN CASE WHEN ([ADS].[Feature_12] <= 14.399999618530273) THEN CASE WHEN ([ADS].[Feature_12] <= 4.909999847412109) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_4] <= 0.6069999933242798) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_5] <= 7.437000274658203) THEN CASE WHEN ([ADS].[Feature_12] <= 5.494999885559082) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_9] <= 270.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.940999984741211 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 430 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.93372093023255 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 4.909999847412109 AS threshold, 255 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.34980392156863 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.565000000000005 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 235 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.650638297872337 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.6069999933242798 AS threshold, 175 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.955999999999996 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.123529411764707 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.942990654205609 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 76 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 37.23815789473685 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 5.494999885559082 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.11304347826087 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 35.247826086956515 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.97826086956522 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, 270.0 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 45.096666666666664 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 46.28666666666666 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 43.906666666666666 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id)
 SELECT [DT_Output].[KEY] AS [KEY], [DT_Output].[Estimator] AS [Estimator] 
FROM [DT_Output]