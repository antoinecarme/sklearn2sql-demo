-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.553056302979 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.466554326976 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.486644934631 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.544963762048 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.483846289234 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.491919887928 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.496071642168 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.51300446608 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.555016662359 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.5162623023 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.553056302979 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.466554326976 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.486644934631 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.544963762048 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.483846289234 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.491919887928 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.496071642168 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.51300446608 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.555016662359 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.5162623023 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.273662036814 + "CenteredDataForPCA".impute_3 * -0.3624566686 + "CenteredDataForPCA".impute_4 * -0.231019503184 + "CenteredDataForPCA".impute_5 * 0.304027810723 + "CenteredDataForPCA".impute_6 * 0.479467049852 + "CenteredDataForPCA".impute_7 * -0.432316810598 + "CenteredDataForPCA".impute_8 * 0.252555406714 + "CenteredDataForPCA".impute_9 * -0.187834143886 + "CenteredDataForPCA".impute_10 * -0.101886140476 + "CenteredDataForPCA".impute_11 * 0.34885264961 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.322417043302 + "CenteredDataForPCA".impute_3 * -0.07410254998 + "CenteredDataForPCA".impute_4 * 0.342901721107 + "CenteredDataForPCA".impute_5 * 0.303437399853 + "CenteredDataForPCA".impute_6 * -0.00234854691369 + "CenteredDataForPCA".impute_7 * -0.161437295474 + "CenteredDataForPCA".impute_8 * -0.369383029961 + "CenteredDataForPCA".impute_9 * -0.695608060429 + "CenteredDataForPCA".impute_10 * 0.137145828136 + "CenteredDataForPCA".impute_11 * -0.125336848261 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.110382413037 + "CenteredDataForPCA".impute_3 * -0.341302307351 + "CenteredDataForPCA".impute_4 * -0.596623360388 + "CenteredDataForPCA".impute_5 * -0.299221647771 + "CenteredDataForPCA".impute_6 * 0.16633583902 + "CenteredDataForPCA".impute_7 * 0.249304171828 + "CenteredDataForPCA".impute_8 * -0.226030214879 + "CenteredDataForPCA".impute_9 * -0.272375979561 + "CenteredDataForPCA".impute_10 * 0.133454757176 + "CenteredDataForPCA".impute_11 * -0.439234269277 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.19950119967 + "CenteredDataForPCA".impute_3 * 0.280178806724 + "CenteredDataForPCA".impute_4 * 0.292414856566 + "CenteredDataForPCA".impute_5 * 0.173111811531 + "CenteredDataForPCA".impute_6 * 0.502467164182 + "CenteredDataForPCA".impute_7 * 0.143126369045 + "CenteredDataForPCA".impute_8 * 0.380277809568 + "CenteredDataForPCA".impute_9 * 0.00624350545007 + "CenteredDataForPCA".impute_10 * 0.250696547399 + "CenteredDataForPCA".impute_11 * -0.534572351208 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.588456557107 + "CenteredDataForPCA".impute_3 * -0.383134374056 + "CenteredDataForPCA".impute_4 * -0.0192080499709 + "CenteredDataForPCA".impute_5 * 0.182307371579 + "CenteredDataForPCA".impute_6 * 0.000990059772359 + "CenteredDataForPCA".impute_7 * 0.415188998175 + "CenteredDataForPCA".impute_8 * 0.488102491316 + "CenteredDataForPCA".impute_9 * -0.0156112105232 + "CenteredDataForPCA".impute_10 * -0.248196511831 + "CenteredDataForPCA".impute_11 * -0.0291523595498 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.0775642130569 + "CenteredDataForPCA".impute_3 * -0.343198253477 + "CenteredDataForPCA".impute_4 * -0.0491454744323 + "CenteredDataForPCA".impute_5 * 0.516213976061 + "CenteredDataForPCA".impute_6 * -0.322815919185 + "CenteredDataForPCA".impute_7 * -0.281493108755 + "CenteredDataForPCA".impute_8 * -0.134792066735 + "CenteredDataForPCA".impute_9 * 0.428359158219 + "CenteredDataForPCA".impute_10 * 0.0199798426436 + "CenteredDataForPCA".impute_11 * -0.47095483135 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.586173109231 + "CenteredDataForPCA".impute_3 * 0.20656755675 + "CenteredDataForPCA".impute_4 * -0.167768946123 + "CenteredDataForPCA".impute_5 * -0.140485253452 + "CenteredDataForPCA".impute_6 * 0.477288801669 + "CenteredDataForPCA".impute_7 * -0.378627554756 + "CenteredDataForPCA".impute_8 * -0.24238382736 + "CenteredDataForPCA".impute_9 * 0.318268438472 + "CenteredDataForPCA".impute_10 * -0.132063140609 + "CenteredDataForPCA".impute_11 * -0.131147198108 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.269135863626 + "CenteredDataForPCA".impute_3 * 0.1258878818 + "CenteredDataForPCA".impute_4 * -0.316612929349 + "CenteredDataForPCA".impute_5 * 0.0144431297497 + "CenteredDataForPCA".impute_6 * -0.235606559578 + "CenteredDataForPCA".impute_7 * -0.229674601554 + "CenteredDataForPCA".impute_8 * 0.342366483527 + "CenteredDataForPCA".impute_9 * -0.0371977433322 + "CenteredDataForPCA".impute_10 * 0.756239202827 + "CenteredDataForPCA".impute_11 * 0.111842257397 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.021684761977 + "CenteredDataForPCA".impute_3 * -0.094031088631 + "CenteredDataForPCA".impute_4 * -0.00016530365981 + "CenteredDataForPCA".impute_5 * 0.355884068002 + "CenteredDataForPCA".impute_6 * 0.302074381545 + "CenteredDataForPCA".impute_7 * 0.481593389427 + "CenteredDataForPCA".impute_8 * -0.413945695199 + "CenteredDataForPCA".impute_9 * 0.293795492855 + "CenteredDataForPCA".impute_10 * 0.389704654514 + "CenteredDataForPCA".impute_11 * 0.362376538444 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.019254903033 + "CenteredDataForPCA".impute_3 * -0.579836008752 + "CenteredDataForPCA".impute_4 * 0.506367550135 + "CenteredDataForPCA".impute_5 * -0.499680411649 + "CenteredDataForPCA".impute_6 * 0.105782271724 + "CenteredDataForPCA".impute_7 * -0.157291869645 + "CenteredDataForPCA".impute_8 * 0.0185030419847 + "CenteredDataForPCA".impute_9 * 0.184093900147 + "CenteredDataForPCA".impute_10 * 0.294860102026 + "CenteredDataForPCA".impute_11 * 0.0149938113986 AS anoova_11 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.07930898666381836) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.11170057207345963) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 0.13037870824337006) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= 0.04842604696750641) THEN 6 ELSE 7 END ELSE 8 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.07930898666381836 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.875143384079607 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.11170057207345963 AS threshold, 42 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.339944952239772 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.839353414685622 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.546697213348825 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, 0.13037870824337006 AS threshold, 58 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.090287076101554 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_11' AS feature, 0.04842604696750641 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.895783035950636 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.841691193919843 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.430966035856297 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.199167799648677 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"