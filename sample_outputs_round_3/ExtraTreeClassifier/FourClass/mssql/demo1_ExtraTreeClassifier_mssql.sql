-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_15] <= 0.40290056806639374) THEN CASE WHEN ([ADS].[Feature_12] <= 0.15937792106548532) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS].[Feature_7] <= -0.3882651855715964) THEN 5 ELSE 6 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 0.40290056806639374 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.25 AS [Proba_1], -1.38629436112 AS [LogProba_1], 0.24 AS [Proba_2], -1.42711635564 AS [LogProba_2], 0.26 AS [Proba_3], -1.34707364797 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 0.15937792106548532 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24193548387096775 AS [Proba_0], -1.41908418394 AS [LogProba_0], 0.27419354838709675 AS [Proba_1], -1.29392104099 AS [LogProba_1], 0.24193548387096775 AS [Proba_2], -1.41908418394 AS [LogProba_2], 0.24193548387096775 AS [Proba_3], -1.41908418394 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.20689655172413793 AS [Proba_0], -1.57553636076 AS [LogProba_0], 0.3448275862068966 AS [Proba_1], -1.06471073699 AS [LogProba_1], 0.20689655172413793 AS [Proba_2], -1.57553636076 AS [LogProba_2], 0.2413793103448276 AS [Proba_3], -1.42138568093 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2727272727272727 AS [Proba_0], -1.29928298413 AS [LogProba_0], 0.21212121212121213 AS [Proba_1], -1.55059741241 AS [LogProba_1], 0.2727272727272727 AS [Proba_2], -1.29928298413 AS [LogProba_2], 0.24242424242424243 AS [Proba_3], -1.41706601979 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, 'Feature_7' AS feature, -0.3882651855715964 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2631578947368421 AS [Proba_0], -1.33500106673 AS [LogProba_0], 0.21052631578947367 AS [Proba_1], -1.55814461805 AS [LogProba_1], 0.23684210526315788 AS [Proba_2], -1.44036158239 AS [LogProba_2], 0.2894736842105263 AS [Proba_3], -1.23969088693 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23529411764705882 AS [Proba_0], -1.44691898294 AS [LogProba_0], 0.29411764705882354 AS [Proba_1], -1.22377543162 AS [LogProba_1], 0.11764705882352941 AS [Proba_2], -2.1400661635 AS [LogProba_2], 0.35294117647058826 AS [Proba_3], -1.04145387483 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS [Proba_0], -1.2527629685 AS [LogProba_0], 0.14285714285714285 AS [Proba_1], -1.94591014906 AS [LogProba_1], 0.3333333333333333 AS [Proba_2], -1.09861228867 AS [LogProba_2], 0.23809523809523808 AS [Proba_3], -1.43508452529 AS [LogProba_3], 2 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id)
 SELECT [DT_Output].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], CAST(NULL AS FLOAT) AS [Score_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output].[Proba_0] AS [Proba_0], [DT_Output].[Proba_1] AS [Proba_1], [DT_Output].[Proba_2] AS [Proba_2], [DT_Output].[Proba_3] AS [Proba_3], [DT_Output].[LogProba_0] AS [LogProba_0], [DT_Output].[LogProba_1] AS [LogProba_1], [DT_Output].[LogProba_2] AS [LogProba_2], [DT_Output].[LogProba_3] AS [LogProba_3], [DT_Output].[Decision] AS [Decision] 
FROM [DT_Output]