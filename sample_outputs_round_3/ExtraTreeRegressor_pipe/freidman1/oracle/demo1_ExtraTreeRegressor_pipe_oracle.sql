-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.541072004071 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.529285380767 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.509657999241 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.514623074767 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.501676496348 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.520038715021 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.492736955109 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.481096022439 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.431001491726 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.435402207983 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.541072004071 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.529285380767 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.509657999241 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.514623074767 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.501676496348 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.520038715021 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.492736955109 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.481096022439 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.431001491726 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.435402207983 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.0365346729346 + "CenteredDataForPCA".impute_3 * -0.249073478338 + "CenteredDataForPCA".impute_4 * -0.276025243863 + "CenteredDataForPCA".impute_5 * -0.110551661057 + "CenteredDataForPCA".impute_6 * -0.35633042466 + "CenteredDataForPCA".impute_7 * -0.082264136932 + "CenteredDataForPCA".impute_8 * -0.479779207937 + "CenteredDataForPCA".impute_9 * -0.593434579548 + "CenteredDataForPCA".impute_10 * -0.358205086709 + "CenteredDataForPCA".impute_11 * -0.0617550206132 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.705993099592 + "CenteredDataForPCA".impute_3 * 0.0745591170543 + "CenteredDataForPCA".impute_4 * 0.161111524506 + "CenteredDataForPCA".impute_5 * -0.213621078107 + "CenteredDataForPCA".impute_6 * 0.175886737262 + "CenteredDataForPCA".impute_7 * -0.417774482518 + "CenteredDataForPCA".impute_8 * 0.183999899057 + "CenteredDataForPCA".impute_9 * -0.306502859328 + "CenteredDataForPCA".impute_10 * 0.0948366852327 + "CenteredDataForPCA".impute_11 * 0.286632461472 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.175972442476 + "CenteredDataForPCA".impute_3 * -0.235196608182 + "CenteredDataForPCA".impute_4 * 0.417841786979 + "CenteredDataForPCA".impute_5 * 0.42730876123 + "CenteredDataForPCA".impute_6 * -0.554064312839 + "CenteredDataForPCA".impute_7 * 0.179729936109 + "CenteredDataForPCA".impute_8 * -0.114872976243 + "CenteredDataForPCA".impute_9 * 0.0720611567244 + "CenteredDataForPCA".impute_10 * 0.203598299643 + "CenteredDataForPCA".impute_11 * 0.396737605132 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.305224821593 + "CenteredDataForPCA".impute_3 * -0.485552240153 + "CenteredDataForPCA".impute_4 * 0.100991578773 + "CenteredDataForPCA".impute_5 * -0.371321582757 + "CenteredDataForPCA".impute_6 * 0.0229717607817 + "CenteredDataForPCA".impute_7 * -0.293307576686 + "CenteredDataForPCA".impute_8 * 0.11690991001 + "CenteredDataForPCA".impute_9 * 0.299669860692 + "CenteredDataForPCA".impute_10 * -0.345012218583 + "CenteredDataForPCA".impute_11 * 0.462533667735 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.26062618216 + "CenteredDataForPCA".impute_3 * -0.0585790715392 + "CenteredDataForPCA".impute_4 * 0.202335032248 + "CenteredDataForPCA".impute_5 * -0.513232019538 + "CenteredDataForPCA".impute_6 * -0.256479792714 + "CenteredDataForPCA".impute_7 * 0.304872965254 + "CenteredDataForPCA".impute_8 * 0.411468080171 + "CenteredDataForPCA".impute_9 * -0.414518530011 + "CenteredDataForPCA".impute_10 * 0.347659781957 + "CenteredDataForPCA".impute_11 * -0.0597292949107 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.211551206197 + "CenteredDataForPCA".impute_3 * -0.0629076386185 + "CenteredDataForPCA".impute_4 * 0.409135076936 + "CenteredDataForPCA".impute_5 * -0.0636383616072 + "CenteredDataForPCA".impute_6 * -0.0777743029482 + "CenteredDataForPCA".impute_7 * -0.605832027691 + "CenteredDataForPCA".impute_8 * -0.320791133124 + "CenteredDataForPCA".impute_9 * 0.0582130239858 + "CenteredDataForPCA".impute_10 * 0.349117594141 + "CenteredDataForPCA".impute_11 * -0.422595875685 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.0635602693572 + "CenteredDataForPCA".impute_3 * 0.327034057147 + "CenteredDataForPCA".impute_4 * 0.388679314259 + "CenteredDataForPCA".impute_5 * 0.184102124968 + "CenteredDataForPCA".impute_6 * -0.26239671673 + "CenteredDataForPCA".impute_7 * -0.156662718219 + "CenteredDataForPCA".impute_8 * 0.396789703225 + "CenteredDataForPCA".impute_9 * -0.0960506548404 + "CenteredDataForPCA".impute_10 * -0.626355168458 + "CenteredDataForPCA".impute_11 * -0.227287874093 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.157979336016 + "CenteredDataForPCA".impute_3 * -0.467101215103 + "CenteredDataForPCA".impute_4 * -0.236896645967 + "CenteredDataForPCA".impute_5 * 0.532936142766 + "CenteredDataForPCA".impute_6 * 0.15410278175 + "CenteredDataForPCA".impute_7 * -0.253696627237 + "CenteredDataForPCA".impute_8 * 0.453029375438 + "CenteredDataForPCA".impute_9 * -0.305913341569 + "CenteredDataForPCA".impute_10 * 0.147254614285 + "CenteredDataForPCA".impute_11 * -0.0900326390971 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.0346948792275 + "CenteredDataForPCA".impute_3 * -0.246623035836 + "CenteredDataForPCA".impute_4 * 0.54546881094 + "CenteredDataForPCA".impute_5 * 0.0863917055683 + "CenteredDataForPCA".impute_6 * 0.594859209669 + "CenteredDataForPCA".impute_7 * 0.341783717574 + "CenteredDataForPCA".impute_8 * -0.228291953312 + "CenteredDataForPCA".impute_9 * -0.273693486607 + "CenteredDataForPCA".impute_10 * -0.182275365382 + "CenteredDataForPCA".impute_11 * -0.0452808429732 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.482938335619 + "CenteredDataForPCA".impute_3 * -0.497974194037 + "CenteredDataForPCA".impute_4 * -0.00180364265702 + "CenteredDataForPCA".impute_5 * -0.169814226607 + "CenteredDataForPCA".impute_6 * -0.127630755186 + "CenteredDataForPCA".impute_7 * 0.186181746656 + "CenteredDataForPCA".impute_8 * 0.148608174126 + "CenteredDataForPCA".impute_9 * 0.325523221851 + "CenteredDataForPCA".impute_10 * -0.110589215403 + "CenteredDataForPCA".impute_11 * -0.546552062457 AS anoova_11 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.2904936509422089) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.01760011993967231) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -0.0057060354932544355) THEN 5 ELSE 6 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.2904936509422089 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.064330849630679 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.754293760940293 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, -0.01760011993967231 AS threshold, 79 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.083454632700285 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.439901339149547 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_5' AS feature, -0.0057060354932544355 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.8994308559912 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.1713445973977 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.688084435604063 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"