-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.287352040572 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0805703189681 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0909774082971 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0439871499091 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0263448202152 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.321178846261 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0764680404923 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.184897465967 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00359553429322 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.192470486471 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.104145237261 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0537195932757 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.0114011056889 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0779749908129 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.350472826803 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.149419257485 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.606990072465 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.0595519464989 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.169633829062 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.464285586663 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.287352040572 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.0805703189681 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.0909774082971 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.0439871499091 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.0263448202152 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.321178846261 AS impute_7, "ADS_imp_1_OUT".impute_8 - -0.0764680404923 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.184897465967 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.00359553429322 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.192470486471 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.104145237261 AS impute_12, "ADS_imp_1_OUT".impute_13 - -0.0537195932757 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.0114011056889 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.0779749908129 AS impute_15, "ADS_imp_1_OUT".impute_16 - 0.350472826803 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.149419257485 AS impute_17, "ADS_imp_1_OUT".impute_18 - 0.606990072465 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.0595519464989 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.169633829062 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.464285586663 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.0256895439758 + "CenteredDataForPCA".impute_3 * 0.0147100307053 + "CenteredDataForPCA".impute_4 * 0.000393730078395 + "CenteredDataForPCA".impute_5 * -0.0379918703236 + "CenteredDataForPCA".impute_6 * -0.0858879147875 + "CenteredDataForPCA".impute_7 * -0.220666734512 + "CenteredDataForPCA".impute_8 * 0.0549616575077 + "CenteredDataForPCA".impute_9 * 0.0300557831904 + "CenteredDataForPCA".impute_10 * -0.0225840558648 + "CenteredDataForPCA".impute_11 * 0.0251685768182 + "CenteredDataForPCA".impute_12 * -0.0281531110091 + "CenteredDataForPCA".impute_13 * -0.00537184345163 + "CenteredDataForPCA".impute_14 * 0.229992659294 + "CenteredDataForPCA".impute_15 * -0.0290225773069 + "CenteredDataForPCA".impute_16 * 0.0195288697047 + "CenteredDataForPCA".impute_17 * -0.0484514306004 + "CenteredDataForPCA".impute_18 * -0.70754478771 + "CenteredDataForPCA".impute_19 * 0.0370602772265 + "CenteredDataForPCA".impute_20 * 0.416685798352 + "CenteredDataForPCA".impute_21 * 0.451256580954 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.310523804266 + "CenteredDataForPCA".impute_3 * -0.0329704287726 + "CenteredDataForPCA".impute_4 * 0.0376047272033 + "CenteredDataForPCA".impute_5 * 0.0490799982901 + "CenteredDataForPCA".impute_6 * 0.0409956599006 + "CenteredDataForPCA".impute_7 * -0.674978757991 + "CenteredDataForPCA".impute_8 * -0.079871506061 + "CenteredDataForPCA".impute_9 * -0.0446358237954 + "CenteredDataForPCA".impute_10 * 0.0342787367486 + "CenteredDataForPCA".impute_11 * -0.0364747144172 + "CenteredDataForPCA".impute_12 * 0.152704509417 + "CenteredDataForPCA".impute_13 * 0.0270672236282 + "CenteredDataForPCA".impute_14 * 0.545358022592 + "CenteredDataForPCA".impute_15 * 0.0283911196872 + "CenteredDataForPCA".impute_16 * -0.0833442952731 + "CenteredDataForPCA".impute_17 * -0.00352286157556 + "CenteredDataForPCA".impute_18 * 0.14728257626 + "CenteredDataForPCA".impute_19 * 0.00323091651572 + "CenteredDataForPCA".impute_20 * -0.259171576481 + "CenteredDataForPCA".impute_21 * -0.111385918504 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.725545940118 + "CenteredDataForPCA".impute_3 * -0.127985458731 + "CenteredDataForPCA".impute_4 * 0.151664185424 + "CenteredDataForPCA".impute_5 * -0.0155759457121 + "CenteredDataForPCA".impute_6 * 0.0288689780965 + "CenteredDataForPCA".impute_7 * 0.163243705136 + "CenteredDataForPCA".impute_8 * 0.0247579111097 + "CenteredDataForPCA".impute_9 * 0.081211300738 + "CenteredDataForPCA".impute_10 * 0.0285137663287 + "CenteredDataForPCA".impute_11 * -0.095103957107 + "CenteredDataForPCA".impute_12 * 0.0773857709905 + "CenteredDataForPCA".impute_13 * -0.0668021854685 + "CenteredDataForPCA".impute_14 * 0.45650655488 + "CenteredDataForPCA".impute_15 * -0.0132669237807 + "CenteredDataForPCA".impute_16 * -0.0395686123264 + "CenteredDataForPCA".impute_17 * -0.0226209432273 + "CenteredDataForPCA".impute_18 * -0.220901658347 + "CenteredDataForPCA".impute_19 * -0.00842463572238 + "CenteredDataForPCA".impute_20 * -0.300459474947 + "CenteredDataForPCA".impute_21 * -0.170772049381 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.202566936252 + "CenteredDataForPCA".impute_3 * -0.0460559368378 + "CenteredDataForPCA".impute_4 * -0.131834707495 + "CenteredDataForPCA".impute_5 * -0.134321931535 + "CenteredDataForPCA".impute_6 * -0.096203518347 + "CenteredDataForPCA".impute_7 * 0.259809536047 + "CenteredDataForPCA".impute_8 * -0.0531864080482 + "CenteredDataForPCA".impute_9 * 0.147519040894 + "CenteredDataForPCA".impute_10 * 0.109191749691 + "CenteredDataForPCA".impute_11 * -0.202591635073 + "CenteredDataForPCA".impute_12 * 0.171766039095 + "CenteredDataForPCA".impute_13 * 0.0830168445474 + "CenteredDataForPCA".impute_14 * -0.0109133106279 + "CenteredDataForPCA".impute_15 * 0.122589131248 + "CenteredDataForPCA".impute_16 * -0.206702670168 + "CenteredDataForPCA".impute_17 * 0.0226397612044 + "CenteredDataForPCA".impute_18 * -0.0412284098586 + "CenteredDataForPCA".impute_19 * 0.0289666381402 + "CenteredDataForPCA".impute_20 * -0.564965534522 + "CenteredDataForPCA".impute_21 * 0.592117989574 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.0683465302597 + "CenteredDataForPCA".impute_3 * -0.330842085563 + "CenteredDataForPCA".impute_4 * 0.373858302419 + "CenteredDataForPCA".impute_5 * 0.151375241452 + "CenteredDataForPCA".impute_6 * -0.0416078653184 + "CenteredDataForPCA".impute_7 * 0.0322314462131 + "CenteredDataForPCA".impute_8 * 0.247054283067 + "CenteredDataForPCA".impute_9 * 0.0505128485407 + "CenteredDataForPCA".impute_10 * 0.326304189818 + "CenteredDataForPCA".impute_11 * 0.383962321785 + "CenteredDataForPCA".impute_12 * 0.079056121541 + "CenteredDataForPCA".impute_13 * 0.311397398597 + "CenteredDataForPCA".impute_14 * -0.0454826354358 + "CenteredDataForPCA".impute_15 * 0.126127764575 + "CenteredDataForPCA".impute_16 * 0.147678606473 + "CenteredDataForPCA".impute_17 * -0.430733860816 + "CenteredDataForPCA".impute_18 * 0.0209345325497 + "CenteredDataForPCA".impute_19 * -0.257917524591 + "CenteredDataForPCA".impute_20 * -0.0463406418593 + "CenteredDataForPCA".impute_21 * 0.0727045659573 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.047676963854 + "CenteredDataForPCA".impute_3 * 0.445772337366 + "CenteredDataForPCA".impute_4 * 0.153810679451 + "CenteredDataForPCA".impute_5 * -0.238319719938 + "CenteredDataForPCA".impute_6 * 7.64258366e-05 + "CenteredDataForPCA".impute_7 * 0.0409460585604 + "CenteredDataForPCA".impute_8 * -0.105703190027 + "CenteredDataForPCA".impute_9 * -0.282899030098 + "CenteredDataForPCA".impute_10 * 0.0248911133577 + "CenteredDataForPCA".impute_11 * 0.594719389505 + "CenteredDataForPCA".impute_12 * -0.244858305098 + "CenteredDataForPCA".impute_13 * -0.11242542027 + "CenteredDataForPCA".impute_14 * 0.0730983076133 + "CenteredDataForPCA".impute_15 * 0.205775471227 + "CenteredDataForPCA".impute_16 * -0.319149803924 + "CenteredDataForPCA".impute_17 * -0.0775305543929 + "CenteredDataForPCA".impute_18 * -0.0130572013325 + "CenteredDataForPCA".impute_19 * 0.130372070101 + "CenteredDataForPCA".impute_20 * -0.149881746109 + "CenteredDataForPCA".impute_21 * 0.059884258051 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.0163865732788 + "CenteredDataForPCA".impute_3 * -0.122821179592 + "CenteredDataForPCA".impute_4 * 0.449443134994 + "CenteredDataForPCA".impute_5 * 0.179080402229 + "CenteredDataForPCA".impute_6 * 0.345107731836 + "CenteredDataForPCA".impute_7 * 0.0808819309449 + "CenteredDataForPCA".impute_8 * -0.365053951483 + "CenteredDataForPCA".impute_9 * -0.37223739053 + "CenteredDataForPCA".impute_10 * -0.106545557849 + "CenteredDataForPCA".impute_11 * -0.156325224869 + "CenteredDataForPCA".impute_12 * 0.383363305368 + "CenteredDataForPCA".impute_13 * 0.0318274357292 + "CenteredDataForPCA".impute_14 * -0.119815157048 + "CenteredDataForPCA".impute_15 * 0.271515683903 + "CenteredDataForPCA".impute_16 * -0.0577970150415 + "CenteredDataForPCA".impute_17 * 0.0816814764071 + "CenteredDataForPCA".impute_18 * -0.0696730337061 + "CenteredDataForPCA".impute_19 * 0.216661523337 + "CenteredDataForPCA".impute_20 * 0.118938731999 + "CenteredDataForPCA".impute_21 * 0.072866402344 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.0776272944242 + "CenteredDataForPCA".impute_3 * -0.194233535745 + "CenteredDataForPCA".impute_4 * -0.340864428771 + "CenteredDataForPCA".impute_5 * -0.176476024165 + "CenteredDataForPCA".impute_6 * 0.0417621171133 + "CenteredDataForPCA".impute_7 * -0.0534360357617 + "CenteredDataForPCA".impute_8 * -0.330164565676 + "CenteredDataForPCA".impute_9 * 0.453882034271 + "CenteredDataForPCA".impute_10 * 0.136290111524 + "CenteredDataForPCA".impute_11 * 0.16768032699 + "CenteredDataForPCA".impute_12 * 0.208323327819 + "CenteredDataForPCA".impute_13 * 0.0155504587932 + "CenteredDataForPCA".impute_14 * -0.048328768152 + "CenteredDataForPCA".impute_15 * 0.460334463148 + "CenteredDataForPCA".impute_16 * -0.27111325352 + "CenteredDataForPCA".impute_17 * -0.0916370354347 + "CenteredDataForPCA".impute_18 * -0.00882068423293 + "CenteredDataForPCA".impute_19 * 0.025094821859 + "CenteredDataForPCA".impute_20 * 0.253212759345 + "CenteredDataForPCA".impute_21 * -0.194931696908 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.0460629956987 + "CenteredDataForPCA".impute_3 * -0.442165768929 + "CenteredDataForPCA".impute_4 * 0.0288109199503 + "CenteredDataForPCA".impute_5 * -0.300265636854 + "CenteredDataForPCA".impute_6 * 0.0183765181366 + "CenteredDataForPCA".impute_7 * -0.0445837763149 + "CenteredDataForPCA".impute_8 * 0.0197826061174 + "CenteredDataForPCA".impute_9 * -0.101806672945 + "CenteredDataForPCA".impute_10 * -0.205918020478 + "CenteredDataForPCA".impute_11 * -0.151061001073 + "CenteredDataForPCA".impute_12 * -0.573461967953 + "CenteredDataForPCA".impute_13 * 0.0129110172574 + "CenteredDataForPCA".impute_14 * 0.0476730889547 + "CenteredDataForPCA".impute_15 * 0.387104770126 + "CenteredDataForPCA".impute_16 * 0.257089250966 + "CenteredDataForPCA".impute_17 * -0.0776698542867 + "CenteredDataForPCA".impute_18 * 0.0328514424619 + "CenteredDataForPCA".impute_19 * 0.269082671521 + "CenteredDataForPCA".impute_20 * -0.0775757730705 + "CenteredDataForPCA".impute_21 * 0.0172265445998 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.0781414561787 + "CenteredDataForPCA".impute_3 * 0.140850972895 + "CenteredDataForPCA".impute_4 * 0.212377193243 + "CenteredDataForPCA".impute_5 * 0.100423526094 + "CenteredDataForPCA".impute_6 * -0.216995451204 + "CenteredDataForPCA".impute_7 * -0.0210281363664 + "CenteredDataForPCA".impute_8 * 0.270052651074 + "CenteredDataForPCA".impute_9 * 0.130381780893 + "CenteredDataForPCA".impute_10 * -0.0931928705868 + "CenteredDataForPCA".impute_11 * -0.224988148552 + "CenteredDataForPCA".impute_12 * 0.12388689977 + "CenteredDataForPCA".impute_13 * -0.699074394405 + "CenteredDataForPCA".impute_14 * -0.0553051383429 + "CenteredDataForPCA".impute_15 * 0.317091012932 + "CenteredDataForPCA".impute_16 * -0.0390205813675 + "CenteredDataForPCA".impute_17 * -0.32622671895 + "CenteredDataForPCA".impute_18 * 0.0526603368454 + "CenteredDataForPCA".impute_19 * -0.0523932403466 + "CenteredDataForPCA".impute_20 * 0.0291592574753 + "CenteredDataForPCA".impute_21 * -0.011449246579 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.0608321767866 + "CenteredDataForPCA".impute_3 * 0.310432655946 + "CenteredDataForPCA".impute_4 * -0.0816141288459 + "CenteredDataForPCA".impute_5 * -0.139706163087 + "CenteredDataForPCA".impute_6 * -0.280951317523 + "CenteredDataForPCA".impute_7 * 0.00247785923892 + "CenteredDataForPCA".impute_8 * -0.380582985631 + "CenteredDataForPCA".impute_9 * -0.167175219075 + "CenteredDataForPCA".impute_10 * 0.417005289045 + "CenteredDataForPCA".impute_11 * -0.248201704293 + "CenteredDataForPCA".impute_12 * 0.0634455740507 + "CenteredDataForPCA".impute_13 * 0.0947672832302 + "CenteredDataForPCA".impute_14 * 0.0152629392885 + "CenteredDataForPCA".impute_15 * -0.0217387645124 + "CenteredDataForPCA".impute_16 * 0.41473943988 + "CenteredDataForPCA".impute_17 * -0.398253225132 + "CenteredDataForPCA".impute_18 * 0.00684396228126 + "CenteredDataForPCA".impute_19 * 0.193965766198 + "CenteredDataForPCA".impute_20 * 0.0178450624935 + "CenteredDataForPCA".impute_21 * -0.0648840730538 AS anoova_12, "CenteredDataForPCA".impute_2 * -0.0439490664277 + "CenteredDataForPCA".impute_3 * 0.298671709321 + "CenteredDataForPCA".impute_4 * -0.193000382642 + "CenteredDataForPCA".impute_5 * -0.189788404884 + "CenteredDataForPCA".impute_6 * 0.488484928491 + "CenteredDataForPCA".impute_7 * -0.0223284497654 + "CenteredDataForPCA".impute_8 * 0.387340856102 + "CenteredDataForPCA".impute_9 * -0.20189783593 + "CenteredDataForPCA".impute_10 * 0.234932158282 + "CenteredDataForPCA".impute_11 * -0.265053914885 + "CenteredDataForPCA".impute_12 * 0.0113627530268 + "CenteredDataForPCA".impute_13 * 0.152480905101 + "CenteredDataForPCA".impute_14 * 0.0291916647867 + "CenteredDataForPCA".impute_15 * 0.36710638173 + "CenteredDataForPCA".impute_16 * 0.0506044154655 + "CenteredDataForPCA".impute_17 * 0.0420942474017 + "CenteredDataForPCA".impute_18 * -0.0443443206009 + "CenteredDataForPCA".impute_19 * -0.333607994757 + "CenteredDataForPCA".impute_20 * 0.0541358894241 + "CenteredDataForPCA".impute_21 * -0.0267117789901 AS anoova_13, "CenteredDataForPCA".impute_2 * -0.0718563667141 + "CenteredDataForPCA".impute_3 * -0.102028571435 + "CenteredDataForPCA".impute_4 * -0.0601361795967 + "CenteredDataForPCA".impute_5 * -0.0657223637403 + "CenteredDataForPCA".impute_6 * -0.648459024483 + "CenteredDataForPCA".impute_7 * -0.0147256861843 + "CenteredDataForPCA".impute_8 * 0.291392716036 + "CenteredDataForPCA".impute_9 * -0.363125905304 + "CenteredDataForPCA".impute_10 * 0.0369099115388 + "CenteredDataForPCA".impute_11 * -0.00806031390664 + "CenteredDataForPCA".impute_12 * 0.248428082967 + "CenteredDataForPCA".impute_13 * 0.196762428846 + "CenteredDataForPCA".impute_14 * -0.00846220530205 + "CenteredDataForPCA".impute_15 * 0.264670063759 + "CenteredDataForPCA".impute_16 * -0.116293302824 + "CenteredDataForPCA".impute_17 * 0.351826122629 + "CenteredDataForPCA".impute_18 * 0.0150396955088 + "CenteredDataForPCA".impute_19 * 0.0711775754919 + "CenteredDataForPCA".impute_20 * 0.0940511381011 + "CenteredDataForPCA".impute_21 * -0.124819938008 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.0066199979116 + "CenteredDataForPCA".impute_3 * -0.0109420969515 + "CenteredDataForPCA".impute_4 * 0.0468250814395 + "CenteredDataForPCA".impute_5 * -0.451948503726 + "CenteredDataForPCA".impute_6 * -0.121834112982 + "CenteredDataForPCA".impute_7 * 0.00206261553068 + "CenteredDataForPCA".impute_8 * -0.181648484117 + "CenteredDataForPCA".impute_9 * -0.139095476323 + "CenteredDataForPCA".impute_10 * -0.550159672389 + "CenteredDataForPCA".impute_11 * -0.0631458294756 + "CenteredDataForPCA".impute_12 * 0.182170475102 + "CenteredDataForPCA".impute_13 * 0.147976071761 + "CenteredDataForPCA".impute_14 * -0.0135810430078 + "CenteredDataForPCA".impute_15 * -0.108848884202 + "CenteredDataForPCA".impute_16 * -0.0460826899615 + "CenteredDataForPCA".impute_17 * -0.298767377578 + "CenteredDataForPCA".impute_18 * 0.0122875133319 + "CenteredDataForPCA".impute_19 * -0.509783641339 + "CenteredDataForPCA".impute_20 * 0.0188068535395 + "CenteredDataForPCA".impute_21 * -0.0254301421365 AS anoova_15, "CenteredDataForPCA".impute_2 * 0.067420341116 + "CenteredDataForPCA".impute_3 * -0.109254983644 + "CenteredDataForPCA".impute_4 * 0.198530130997 + "CenteredDataForPCA".impute_5 * -0.655078841817 + "CenteredDataForPCA".impute_6 * 0.172125134153 + "CenteredDataForPCA".impute_7 * -0.0293162269855 + "CenteredDataForPCA".impute_8 * 0.268845788545 + "CenteredDataForPCA".impute_9 * 0.106400110211 + "CenteredDataForPCA".impute_10 * 0.159217506243 + "CenteredDataForPCA".impute_11 * 0.0984295495583 + "CenteredDataForPCA".impute_12 * 0.340081251523 + "CenteredDataForPCA".impute_13 * -0.161641069953 + "CenteredDataForPCA".impute_14 * -0.0567866595806 + "CenteredDataForPCA".impute_15 * -0.289954773063 + "CenteredDataForPCA".impute_16 * 0.106676001579 + "CenteredDataForPCA".impute_17 * 0.0875288777231 + "CenteredDataForPCA".impute_18 * 0.052589062277 + "CenteredDataForPCA".impute_19 * 0.33256249862 + "CenteredDataForPCA".impute_20 * 0.0553295057397 + "CenteredDataForPCA".impute_21 * -0.0361077291589 AS anoova_16, "CenteredDataForPCA".impute_2 * 0.0381044013201 + "CenteredDataForPCA".impute_3 * 0.123426868554 + "CenteredDataForPCA".impute_4 * 0.523232071077 + "CenteredDataForPCA".impute_5 * -0.153057054141 + "CenteredDataForPCA".impute_6 * -0.135508373783 + "CenteredDataForPCA".impute_7 * -0.0562405977589 + "CenteredDataForPCA".impute_8 * -0.0788406807945 + "CenteredDataForPCA".impute_9 * 0.269879072847 + "CenteredDataForPCA".impute_10 * 0.230843972054 + "CenteredDataForPCA".impute_11 * -0.378893023654 + "CenteredDataForPCA".impute_12 * -0.326240583871 + "CenteredDataForPCA".impute_13 * 0.224459243045 + "CenteredDataForPCA".impute_14 * -0.059844493718 + "CenteredDataForPCA".impute_15 * -0.0594053985476 + "CenteredDataForPCA".impute_16 * -0.412189826115 + "CenteredDataForPCA".impute_17 * 0.120940451063 + "CenteredDataForPCA".impute_18 * 0.0294318821486 + "CenteredDataForPCA".impute_19 * -0.0949944712061 + "CenteredDataForPCA".impute_20 * 0.148191641613 + "CenteredDataForPCA".impute_21 * -0.0915828492169 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.0268362363538 + "CenteredDataForPCA".impute_3 * 0.396784845256 + "CenteredDataForPCA".impute_4 * 0.0992146687456 + "CenteredDataForPCA".impute_5 * 0.101398581315 + "CenteredDataForPCA".impute_6 * 0.0045408335824 + "CenteredDataForPCA".impute_7 * -0.00444579996279 + "CenteredDataForPCA".impute_8 * 0.233038071286 + "CenteredDataForPCA".impute_9 * 0.375998616305 + "CenteredDataForPCA".impute_10 * -0.430926282117 + "CenteredDataForPCA".impute_11 * 0.00570396015766 + "CenteredDataForPCA".impute_12 * 0.133683494687 + "CenteredDataForPCA".impute_13 * 0.452848794584 + "CenteredDataForPCA".impute_14 * 0.0266065155073 + "CenteredDataForPCA".impute_15 * 0.169756961357 + "CenteredDataForPCA".impute_16 * 0.145185654575 + "CenteredDataForPCA".impute_17 * -0.115626573841 + "CenteredDataForPCA".impute_18 * 0.0293281011003 + "CenteredDataForPCA".impute_19 * 0.386794490567 + "CenteredDataForPCA".impute_20 * -0.0376906772882 + "CenteredDataForPCA".impute_21 * -0.0381651203098 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.0289771567186 + "CenteredDataForPCA".impute_3 * -0.152159668496 + "CenteredDataForPCA".impute_4 * -0.240634996266 + "CenteredDataForPCA".impute_5 * 0.0879963627041 + "CenteredDataForPCA".impute_6 * 0.0997531830235 + "CenteredDataForPCA".impute_7 * 0.00665745864316 + "CenteredDataForPCA".impute_8 * 0.231890761962 + "CenteredDataForPCA".impute_9 * -0.262261770588 + "CenteredDataForPCA".impute_10 * -0.00313367701308 + "CenteredDataForPCA".impute_11 * -0.177892000524 + "CenteredDataForPCA".impute_12 * -0.024536088861 + "CenteredDataForPCA".impute_13 * 0.117151209564 + "CenteredDataForPCA".impute_14 * -0.0381893401406 + "CenteredDataForPCA".impute_15 * -0.235185422476 + "CenteredDataForPCA".impute_16 * -0.53635648768 + "CenteredDataForPCA".impute_17 * -0.518139868462 + "CenteredDataForPCA".impute_18 * 0.013524129459 + "CenteredDataForPCA".impute_19 * 0.329197303916 + "CenteredDataForPCA".impute_20 * 0.0754644763123 + "CenteredDataForPCA".impute_21 * -0.0682740067626 AS anoova_19, "CenteredDataForPCA".impute_2 * -0.293986198945 + "CenteredDataForPCA".impute_3 * 2.77555756156e-16 + "CenteredDataForPCA".impute_4 * -4.16333634234e-17 + "CenteredDataForPCA".impute_5 * -1.5959455979e-16 + "CenteredDataForPCA".impute_6 * -6.38378239159e-16 + "CenteredDataForPCA".impute_7 * 0.00467001039647 + "CenteredDataForPCA".impute_8 * 2.81025203108e-16 + "CenteredDataForPCA".impute_9 * 1.2490009027e-16 + "CenteredDataForPCA".impute_10 * -3.09214459593e-16 + "CenteredDataForPCA".impute_11 * 4.68375338514e-17 + "CenteredDataForPCA".impute_12 * 1.17961196366e-16 + "CenteredDataForPCA".impute_13 * 2.8449465006e-16 + "CenteredDataForPCA".impute_14 * 0.290085710101 + "CenteredDataForPCA".impute_15 * -6.93889390391e-17 + "CenteredDataForPCA".impute_16 * -1.02348685083e-16 + "CenteredDataForPCA".impute_17 * 1.90819582357e-17 + "CenteredDataForPCA".impute_18 * 0.640866674579 + "CenteredDataForPCA".impute_19 * 2.16840434497e-17 + "CenteredDataForPCA".impute_20 * 0.387486933871 + "CenteredDataForPCA".impute_21 * 0.518212666886 AS anoova_20, "CenteredDataForPCA".impute_2 * 0.457354968092 + "CenteredDataForPCA".impute_3 * -2.22044604925e-16 + "CenteredDataForPCA".impute_4 * 5.55111512313e-17 + "CenteredDataForPCA".impute_5 * -3.98986399475e-16 + "CenteredDataForPCA".impute_6 * -1.00613961607e-16 + "CenteredDataForPCA".impute_7 * 0.618209985808 + "CenteredDataForPCA".impute_8 * -7.6327832943e-17 + "CenteredDataForPCA".impute_9 * 1.38777878078e-16 + "CenteredDataForPCA".impute_10 * -4.16333634234e-17 + "CenteredDataForPCA".impute_11 * -0.0 + "CenteredDataForPCA".impute_12 * -1.11022302463e-16 + "CenteredDataForPCA".impute_13 * 2.77555756156e-17 + "CenteredDataForPCA".impute_14 * 0.563269570256 + "CenteredDataForPCA".impute_15 * 3.81639164715e-17 + "CenteredDataForPCA".impute_16 * 1.31838984174e-16 + "CenteredDataForPCA".impute_17 * 1.13190706807e-16 + "CenteredDataForPCA".impute_18 * -0.00471897454062 + "CenteredDataForPCA".impute_19 * 2.94902990916e-17 + "CenteredDataForPCA".impute_20 * 0.212756994418 + "CenteredDataForPCA".impute_21 * -0.214668186833 AS anoova_21 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= -0.22870074703146015) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.22244851447908065) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_18' AS feature, -0.22870074703146015 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23684210526315788 AS "Proba_0.0", -1.44036158239 AS "LogProba_0.0", 0.2631578947368421 AS "Proba_1.0", -1.33500106673 AS "LogProba_1.0", 0.3157894736842105 AS "Proba_2.0", -1.15267950994 AS "LogProba_2.0", 0.18421052631578946 AS "Proba_3.0", -1.69167601067 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.22244851447908065 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25806451612903225 AS "Proba_0.0", -1.35454566281 AS "LogProba_0.0", 0.24193548387096775 AS "Proba_1.0", -1.41908418394 AS "LogProba_1.0", 0.20967741935483872 AS "Proba_2.0", -1.56218502758 AS "LogProba_2.0", 0.2903225806451613 AS "Proba_3.0", -1.23676262715 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21212121212121213 AS "Proba_0.0", -1.55059741241 AS "LogProba_0.0", 0.3939393939393939 AS "Proba_1.0", -0.931558204005 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3939393939393939 AS "Proba_3.0", -0.931558204005 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3103448275862069 AS "Proba_0.0", -1.17007125265 AS "LogProba_0.0", 0.06896551724137931 AS "Proba_1.0", -2.67414864943 AS "LogProba_1.0", 0.4482758620689655 AS "Proba_2.0", -0.802346472525 AS "LogProba_2.0", 0.1724137931034483 AS "Proba_3.0", -1.75785791755 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.31847456961828735) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.21962513624052526) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.31847456961828735 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, -0.21962513624052526 AS threshold, 60 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11666666666666667 AS "Proba_0.0", -2.14843441317 AS "LogProba_0.0", 0.3 AS "Proba_1.0", -1.20397280433 AS "LogProba_1.0", 0.3 AS "Proba_2.0", -1.20397280433 AS "LogProba_2.0", 0.2833333333333333 AS "Proba_3.0", -1.26113121817 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.20833333333333334 AS "Proba_1.0", -1.56861591791 AS "LogProba_1.0", 0.375 AS "Proba_2.0", -0.980829253012 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1388888888888889 AS "Proba_0.0", -1.97408102602 AS "LogProba_0.0", 0.3611111111111111 AS "Proba_1.0", -1.01856958099 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.45 AS "Proba_0.0", -0.798507696218 AS "LogProba_0.0", 0.175 AS "Proba_1.0", -1.74296930506 AS "LogProba_1.0", 0.175 AS "Proba_2.0", -1.74296930506 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 1.0955479077925894) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.7792680449662335) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= -0.6039418584280793) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.0955479077925894 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, 0.7792680449662335 AS threshold, 66 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2727272727272727 AS "Proba_0.0", -1.29928298413 AS "LogProba_0.0", 0.2878787878787879 AS "Proba_1.0", -1.24521576286 AS "LogProba_1.0", 0.2727272727272727 AS "Proba_2.0", -1.29928298413 AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -0.6039418584280793 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29411764705882354 AS "Proba_0.0", -1.22377543162 AS "LogProba_0.0", 0.23529411764705882 AS "Proba_1.0", -1.44691898294 AS "LogProba_1.0", 0.3137254901960784 AS "Proba_2.0", -1.15923691048 AS "LogProba_2.0", 0.1568627450980392 AS "Proba_3.0", -1.85238409104 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.35294117647058826 AS "Proba_0.0", -1.04145387483 AS "LogProba_0.0", 0.058823529411764705 AS "Proba_1.0", -2.83321334406 AS "LogProba_1.0", 0.23529411764705882 AS "Proba_2.0", -1.44691898294 AS "LogProba_2.0", 0.35294117647058826 AS "Proba_3.0", -1.04145387483 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2647058823529412 AS "Proba_0.0", -1.32913594728 AS "LogProba_0.0", 0.3235294117647059 AS "Proba_1.0", -1.12846525182 AS "LogProba_1.0", 0.35294117647058826 AS "Proba_2.0", -1.04145387483 AS "LogProba_2.0", 0.058823529411764705 AS "Proba_3.0", -2.83321334406 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.4666666666666667 AS "Proba_1.0", -0.762140052047 AS "LogProba_1.0", 0.13333333333333333 AS "Proba_2.0", -2.01490302054 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.20588235294117646 AS "Proba_0.0", -1.58045037556 AS "LogProba_0.0", 0.17647058823529413 AS "Proba_1.0", -1.73460105539 AS "LogProba_1.0", 0.20588235294117646 AS "Proba_2.0", -1.58045037556 AS "LogProba_2.0", 0.4117647058823529 AS "Proba_3.0", -0.887303195001 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= -0.8155841128316177) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_17 <= -0.205440176331666) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, -0.8155841128316177 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3181818181818182 AS "Proba_0.0", -1.1451323043 AS "LogProba_0.0", 0.045454545454545456 AS "Proba_1.0", -3.09104245336 AS "LogProba_1.0", 0.18181818181818182 AS "Proba_2.0", -1.70474809224 AS "LogProba_2.0", 0.45454545454545453 AS "Proba_3.0", -0.788457360364 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_17' AS feature, -0.205440176331666 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23076923076923078 AS "Proba_0.0", -1.46633706879 AS "LogProba_0.0", 0.3076923076923077 AS "Proba_1.0", -1.17865499634 AS "LogProba_1.0", 0.2692307692307692 AS "Proba_2.0", -1.31218638897 AS "LogProba_2.0", 0.19230769230769232 AS "Proba_3.0", -1.64865862559 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32142857142857145 AS "Proba_0.0", -1.13497993284 AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.2857142857142857 AS "Proba_2.0", -1.2527629685 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18 AS "Proba_0.0", -1.71479842809 AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0.26 AS "Proba_2.0", -1.34707364797 AS "LogProba_2.0", 0.16 AS "Proba_3.0", -1.83258146375 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= 0.8457156650191462) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 1.7648423341771409) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= -0.12007152774276708) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_11' AS feature, 0.8457156650191462 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 1.7648423341771409 AS threshold, 80 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.2625 AS "Proba_2.0", -1.33750419695 AS "LogProba_2.0", 0.2875 AS "Proba_3.0", -1.24653241874 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_18' AS feature, -0.12007152774276708 AS threshold, 61 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2459016393442623 AS "Proba_0.0", -1.40282366307 AS "LogProba_0.0", 0.22950819672131148 AS "Proba_1.0", -1.47181653456 AS "LogProba_1.0", 0.3114754098360656 AS "Proba_2.0", -1.16643488501 AS "LogProba_2.0", 0.21311475409836064 AS "Proba_3.0", -1.54592450671 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32142857142857145 AS "Proba_0.0", -1.13497993284 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.32142857142857145 AS "Proba_2.0", -1.13497993284 AS "LogProba_2.0", 0.10714285714285714 AS "Proba_3.0", -2.23359222151 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18181818181818182 AS "Proba_0.0", -1.70474809224 AS "LogProba_0.0", 0.21212121212121213 AS "Proba_1.0", -1.55059741241 AS "LogProba_1.0", 0.30303030303030304 AS "Proba_2.0", -1.19392246847 AS "LogProba_2.0", 0.30303030303030304 AS "Proba_3.0", -1.19392246847 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2631578947368421 AS "Proba_0.0", -1.33500106673 AS "LogProba_0.0", 0.10526315789473684 AS "Proba_1.0", -2.25129179861 AS "LogProba_1.0", 0.10526315789473684 AS "Proba_2.0", -2.25129179861 AS "LogProba_2.0", 0.5263157894736842 AS "Proba_3.0", -0.641853886172 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.45 AS "Proba_1.0", -0.798507696218 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.1 AS "Proba_3.0", -2.30258509299 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Proba_2.0" AS "Proba_2.0", "DT_node_data_4"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_4"."Proba_3.0" AS "Proba_3.0", "DT_node_data_4"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0.0" AS "Proba_4_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1.0" AS "Proba_4_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2.0" AS "Proba_4_2", "DT_Output_4"."LogProba_2.0" AS "LogProba_4_2", CAST(NULL AS FLOAT) AS "Score_4_3", "DT_Output_4"."Proba_3.0" AS "Proba_4_3", "DT_Output_4"."LogProba_3.0" AS "LogProba_4_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= 0.6165182896811932) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= 0.5318130917767552) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_18' AS feature, 0.6165182896811932 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, 0.5318130917767552 AS threshold, 81 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2345679012345679 AS "Proba_0.0", -1.45001017551 AS "LogProba_0.0", 0.25925925925925924 AS "Proba_1.0", -1.34992671695 AS "LogProba_1.0", 0.25925925925925924 AS "Proba_2.0", -1.34992671695 AS "LogProba_2.0", 0.24691358024691357 AS "Proba_3.0", -1.39871688112 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2909090909090909 AS "Proba_0.0", -1.23474446299 AS "LogProba_0.0", 0.2545454545454545 AS "Proba_1.0", -1.36827585562 AS "LogProba_1.0", 0.23636363636363636 AS "Proba_2.0", -1.44238382777 AS "LogProba_2.0", 0.21818181818181817 AS "Proba_3.0", -1.52242653544 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11538461538461539 AS "Proba_0.0", -2.15948424935 AS "LogProba_0.0", 0.2692307692307692 AS "Proba_1.0", -1.31218638897 AS "LogProba_1.0", 0.3076923076923077 AS "Proba_2.0", -1.17865499634 AS "LogProba_2.0", 0.3076923076923077 AS "Proba_3.0", -1.17865499634 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3157894736842105 AS "Proba_0.0", -1.15267950994 AS "LogProba_0.0", 0.21052631578947367 AS "Proba_1.0", -1.55814461805 AS "LogProba_1.0", 0.21052631578947367 AS "Proba_2.0", -1.55814461805 AS "LogProba_2.0", 0.2631578947368421 AS "Proba_3.0", -1.33500106673 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Proba_2.0" AS "Proba_2.0", "DT_node_data_5"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_5"."Proba_3.0" AS "Proba_3.0", "DT_node_data_5"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0.0" AS "Proba_5_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1.0" AS "Proba_5_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2.0" AS "Proba_5_2", "DT_Output_5"."LogProba_2.0" AS "LogProba_5_2", CAST(NULL AS FLOAT) AS "Score_5_3", "DT_Output_5"."Proba_3.0" AS "Proba_5_3", "DT_Output_5"."LogProba_3.0" AS "LogProba_5_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.15734546995027276) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= 0.21112865143048376) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.15734546995027276 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.24074074074074073 AS "Proba_1.0", -1.4240346891 AS "LogProba_1.0", 0.3148148148148148 AS "Proba_2.0", -1.15577070251 AS "LogProba_2.0", 0.2222222222222222 AS "Proba_3.0", -1.50407739678 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_12' AS feature, 0.21112865143048376 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2826086956521739 AS "Proba_0.0", -1.26369203903 AS "LogProba_0.0", 0.2608695652173913 AS "Proba_1.0", -1.3437347467 AS "LogProba_1.0", 0.17391304347826086 AS "Proba_2.0", -1.74919985481 AS "LogProba_2.0", 0.2826086956521739 AS "Proba_3.0", -1.26369203903 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3448275862068966 AS "Proba_0.0", -1.06471073699 AS "LogProba_0.0", 0.27586206896551724 AS "Proba_1.0", -1.28785428831 AS "LogProba_1.0", 0.13793103448275862 AS "Proba_2.0", -1.98100146887 AS "LogProba_2.0", 0.2413793103448276 AS "Proba_3.0", -1.42138568093 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17647058823529413 AS "Proba_0.0", -1.73460105539 AS "LogProba_0.0", 0.23529411764705882 AS "Proba_1.0", -1.44691898294 AS "LogProba_1.0", 0.23529411764705882 AS "Proba_2.0", -1.44691898294 AS "LogProba_2.0", 0.35294117647058826 AS "Proba_3.0", -1.04145387483 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Proba_2.0" AS "Proba_2.0", "DT_node_data_6"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_6"."Proba_3.0" AS "Proba_3.0", "DT_node_data_6"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0.0" AS "Proba_6_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1.0" AS "Proba_6_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2.0" AS "Proba_6_2", "DT_Output_6"."LogProba_2.0" AS "LogProba_6_2", CAST(NULL AS FLOAT) AS "Score_6_3", "DT_Output_6"."Proba_3.0" AS "Proba_6_3", "DT_Output_6"."LogProba_3.0" AS "LogProba_6_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Proba_2.0" AS "Proba_2.0", "DT_node_data_7"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_7"."Proba_3.0" AS "Proba_3.0", "DT_node_data_7"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0.0" AS "Proba_7_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1.0" AS "Proba_7_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2.0" AS "Proba_7_2", "DT_Output_7"."LogProba_2.0" AS "LogProba_7_2", CAST(NULL AS FLOAT) AS "Score_7_3", "DT_Output_7"."Proba_3.0" AS "Proba_7_3", "DT_Output_7"."LogProba_3.0" AS "LogProba_7_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Proba_2.0" AS "Proba_2.0", "DT_node_data_8"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_8"."Proba_3.0" AS "Proba_3.0", "DT_node_data_8"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0.0" AS "Proba_8_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1.0" AS "Proba_8_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2.0" AS "Proba_8_2", "DT_Output_8"."LogProba_2.0" AS "LogProba_8_2", CAST(NULL AS FLOAT) AS "Score_8_3", "DT_Output_8"."Proba_3.0" AS "Proba_8_3", "DT_Output_8"."LogProba_3.0" AS "LogProba_8_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= -0.27102691647685284) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.16519499961739648) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_17 <= -0.10261554187478583) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_18' AS feature, -0.27102691647685284 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, 0.16519499961739648 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.2777777777777778 AS "Proba_1.0", -1.28093384546 AS "LogProba_1.0", 0.3055555555555556 AS "Proba_2.0", -1.18562366566 AS "LogProba_2.0", 0.19444444444444445 AS "Proba_3.0", -1.6376087894 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21052631578947367 AS "Proba_0.0", -1.55814461805 AS "LogProba_0.0", 0.21052631578947367 AS "Proba_1.0", -1.55814461805 AS "LogProba_1.0", 0.42105263157894735 AS "Proba_2.0", -0.864997437487 AS "LogProba_2.0", 0.15789473684210525 AS "Proba_3.0", -1.8458266905 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23529411764705882 AS "Proba_0.0", -1.44691898294 AS "LogProba_0.0", 0.35294117647058826 AS "Proba_1.0", -1.04145387483 AS "LogProba_1.0", 0.17647058823529413 AS "Proba_2.0", -1.73460105539 AS "LogProba_2.0", 0.23529411764705882 AS "Proba_3.0", -1.44691898294 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, 'anoova_17' AS feature, -0.10261554187478583 AS threshold, 64 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.265625 AS "Proba_0.0", -1.3256697393 AS "LogProba_0.0", 0.234375 AS "Proba_1.0", -1.45083288226 AS "LogProba_1.0", 0.21875 AS "Proba_2.0", -1.51982575374 AS "LogProba_2.0", 0.28125 AS "Proba_3.0", -1.26851132546 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3870967741935484 AS "Proba_0.0", -0.949080554697 AS "LogProba_0.0", 0.16129032258064516 AS "Proba_1.0", -1.82454929205 AS "LogProba_1.0", 0.22580645161290322 AS "Proba_2.0", -1.48807705543 AS "LogProba_2.0", 0.22580645161290322 AS "Proba_3.0", -1.48807705543 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15151515151515152 AS "Proba_0.0", -1.88706964903 AS "LogProba_0.0", 0.30303030303030304 AS "Proba_1.0", -1.19392246847 AS "LogProba_1.0", 0.21212121212121213 AS "Proba_2.0", -1.55059741241 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Proba_2.0" AS "Proba_2.0", "DT_node_data_9"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_9"."Proba_3.0" AS "Proba_3.0", "DT_node_data_9"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0.0" AS "Proba_9_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1.0" AS "Proba_9_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2.0" AS "Proba_9_2", "DT_Output_9"."LogProba_2.0" AS "LogProba_9_2", CAST(NULL AS FLOAT) AS "Score_9_3", "DT_Output_9"."Proba_3.0" AS "Proba_9_3", "DT_Output_9"."LogProba_3.0" AS "LogProba_9_3" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_4"."Score_4_2" AS "Score_4_2", "RF_Tree_4"."Proba_4_2" AS "Proba_4_2", "RF_Tree_4"."LogProba_4_2" AS "LogProba_4_2", "RF_Tree_4"."Score_4_3" AS "Score_4_3", "RF_Tree_4"."Proba_4_3" AS "Proba_4_3", "RF_Tree_4"."LogProba_4_3" AS "LogProba_4_3", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_5"."Score_5_2" AS "Score_5_2", "RF_Tree_5"."Proba_5_2" AS "Proba_5_2", "RF_Tree_5"."LogProba_5_2" AS "LogProba_5_2", "RF_Tree_5"."Score_5_3" AS "Score_5_3", "RF_Tree_5"."Proba_5_3" AS "Proba_5_3", "RF_Tree_5"."LogProba_5_3" AS "LogProba_5_3", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_6"."Score_6_2" AS "Score_6_2", "RF_Tree_6"."Proba_6_2" AS "Proba_6_2", "RF_Tree_6"."LogProba_6_2" AS "LogProba_6_2", "RF_Tree_6"."Score_6_3" AS "Score_6_3", "RF_Tree_6"."Proba_6_3" AS "Proba_6_3", "RF_Tree_6"."LogProba_6_3" AS "LogProba_6_3", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_7"."Score_7_2" AS "Score_7_2", "RF_Tree_7"."Proba_7_2" AS "Proba_7_2", "RF_Tree_7"."LogProba_7_2" AS "LogProba_7_2", "RF_Tree_7"."Score_7_3" AS "Score_7_3", "RF_Tree_7"."Proba_7_3" AS "Proba_7_3", "RF_Tree_7"."LogProba_7_3" AS "LogProba_7_3", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_8"."Score_8_2" AS "Score_8_2", "RF_Tree_8"."Proba_8_2" AS "Proba_8_2", "RF_Tree_8"."LogProba_8_2" AS "LogProba_8_2", "RF_Tree_8"."Score_8_3" AS "Score_8_3", "RF_Tree_8"."Proba_8_3" AS "Proba_8_3", "RF_Tree_8"."LogProba_8_3" AS "LogProba_8_3", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1", "RF_Tree_9"."Score_9_2" AS "Score_9_2", "RF_Tree_9"."Proba_9_2" AS "Proba_9_2", "RF_Tree_9"."LogProba_9_2" AS "LogProba_9_2", "RF_Tree_9"."Score_9_3" AS "Score_9_3", "RF_Tree_9"."Proba_9_3" AS "Proba_9_3", "RF_Tree_9"."LogProba_9_3" AS "LogProba_9_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 10 + "RF_Join_CTE"."Score_1_2" / 10 + "RF_Join_CTE"."Score_2_2" / 10 + "RF_Join_CTE"."Score_3_2" / 10 + "RF_Join_CTE"."Score_4_2" / 10 + "RF_Join_CTE"."Score_5_2" / 10 + "RF_Join_CTE"."Score_6_2" / 10 + "RF_Join_CTE"."Score_7_2" / 10 + "RF_Join_CTE"."Score_8_2" / 10 + "RF_Join_CTE"."Score_9_2" / 10 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 10 + "RF_Join_CTE"."Proba_1_2" / 10 + "RF_Join_CTE"."Proba_2_2" / 10 + "RF_Join_CTE"."Proba_3_2" / 10 + "RF_Join_CTE"."Proba_4_2" / 10 + "RF_Join_CTE"."Proba_5_2" / 10 + "RF_Join_CTE"."Proba_6_2" / 10 + "RF_Join_CTE"."Proba_7_2" / 10 + "RF_Join_CTE"."Proba_8_2" / 10 + "RF_Join_CTE"."Proba_9_2" / 10 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 10 + "RF_Join_CTE"."LogProba_1_2" / 10 + "RF_Join_CTE"."LogProba_2_2" / 10 + "RF_Join_CTE"."LogProba_3_2" / 10 + "RF_Join_CTE"."LogProba_4_2" / 10 + "RF_Join_CTE"."LogProba_5_2" / 10 + "RF_Join_CTE"."LogProba_6_2" / 10 + "RF_Join_CTE"."LogProba_7_2" / 10 + "RF_Join_CTE"."LogProba_8_2" / 10 + "RF_Join_CTE"."LogProba_9_2" / 10 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 10 + "RF_Join_CTE"."Score_1_3" / 10 + "RF_Join_CTE"."Score_2_3" / 10 + "RF_Join_CTE"."Score_3_3" / 10 + "RF_Join_CTE"."Score_4_3" / 10 + "RF_Join_CTE"."Score_5_3" / 10 + "RF_Join_CTE"."Score_6_3" / 10 + "RF_Join_CTE"."Score_7_3" / 10 + "RF_Join_CTE"."Score_8_3" / 10 + "RF_Join_CTE"."Score_9_3" / 10 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 10 + "RF_Join_CTE"."Proba_1_3" / 10 + "RF_Join_CTE"."Proba_2_3" / 10 + "RF_Join_CTE"."Proba_3_3" / 10 + "RF_Join_CTE"."Proba_4_3" / 10 + "RF_Join_CTE"."Proba_5_3" / 10 + "RF_Join_CTE"."Proba_6_3" / 10 + "RF_Join_CTE"."Proba_7_3" / 10 + "RF_Join_CTE"."Proba_8_3" / 10 + "RF_Join_CTE"."Proba_9_3" / 10 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 10 + "RF_Join_CTE"."LogProba_1_3" / 10 + "RF_Join_CTE"."LogProba_2_3" / 10 + "RF_Join_CTE"."LogProba_3_3" / 10 + "RF_Join_CTE"."LogProba_4_3" / 10 + "RF_Join_CTE"."LogProba_5_3" / 10 + "RF_Join_CTE"."LogProba_6_3" / 10 + "RF_Join_CTE"."LogProba_7_3" / 10 + "RF_Join_CTE"."LogProba_8_3" / 10 + "RF_Join_CTE"."LogProba_9_3" / 10 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte