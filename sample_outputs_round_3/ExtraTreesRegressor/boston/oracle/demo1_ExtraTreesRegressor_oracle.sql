-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 7.634645451765699) THEN CASE WHEN ("ADS"."Feature_12" <= 11.57930760333881) THEN CASE WHEN ("ADS"."Feature_7" <= 2.2812189778036585) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 18.263968370776336) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 7.634645451765699 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 11.57930760333881 AS threshold, 481 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.354677754677756 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 2.2812189778036585 AS threshold, 233 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.4107296137339 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.37499999999999 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 209 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.611004784688994 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_12' AS feature, 18.263968370776336 AS threshold, 248 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.604435483870965 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 152 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.708552631578943 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.272916666666672 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 45.2 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.846537533269284) THEN CASE WHEN ("ADS"."Feature_12" <= 21.71016111657829) THEN CASE WHEN ("ADS"."Feature_10" <= 19.109154479628966) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_9" <= 437.62929628958426) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_10" <= 18.20139607234482) THEN CASE WHEN ("ADS"."Feature_5" <= 7.197088218099771) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.846537533269284 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 21.71016111657829 AS threshold, 420 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.74595238095239 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_10' AS feature, 19.109154479628966 AS threshold, 363 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.98347107438016 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 183 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.953005464480867 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 180 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.9811111111111 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 437.62929628958426 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.864912280701752 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.776470588235293 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.202499999999999 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_10' AS feature, 18.20139607234482 AS threshold, 86 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 36.143023255813944 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, 7.197088218099771 AS threshold, 64 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 38.309375 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.836000000000002 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 42.45897435897435 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.840909090909086 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 17.923105384791338) THEN CASE WHEN ("ADS"."Feature_1" <= 74.30653310115753) THEN CASE WHEN ("ADS"."Feature_12" <= 8.594428382306795) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.755862864956043) THEN CASE WHEN ("ADS"."Feature_12" <= 9.511661271199053) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6725609444563512) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_10' AS feature, 17.923105384791338 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 74.30653310115753 AS threshold, 185 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.878378378378372 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 8.594428382306795 AS threshold, 162 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.131481481481487 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.175308641975306 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.087654320987646 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.13913043478261 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_12' AS feature, 21.755862864956043 AS threshold, 321 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.45202492211838 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_12' AS feature, 9.511661271199053 AS threshold, 272 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.90330882352941 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.599999999999998 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.178804347826084 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_4' AS feature, 0.6725609444563512 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.39591836734694 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.359090909090908 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.981481481481483 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 6.9415550576066005) THEN CASE WHEN ("ADS"."Feature_12" <= 5.202134589094089) THEN CASE WHEN ("ADS"."Feature_6" <= 34.628503655273384) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_9" <= 270.1974472008634) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 21.82303897759357) THEN CASE WHEN ("ADS"."Feature_12" <= 15.57687715280265) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_9" <= 647.3567008605957) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 6.9415550576066005 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 5.202134589094089 AS threshold, 127 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.6527559055118 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 34.628503655273384 AS threshold, 68 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 37.44852941176471 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 34.18378378378379 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 41.34516129032258 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 270.1974472008634 AS threshold, 59 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.125423728813566 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.805555555555557 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.948780487804882 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 21.82303897759357 AS threshold, 379 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.141688654353565 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 15.57687715280265 AS threshold, 323 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.398142414860697 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 227 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.267400881057274 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.978125000000004 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, 647.3567008605957 AS threshold, 56 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.894642857142852 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.776470588235293 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.2025641025641 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" <= 0.6494124539791422) THEN CASE WHEN ("ADS"."Feature_5" <= 5.773420512209187) THEN CASE WHEN ("ADS"."Feature_12" <= 14.713533528311766) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 6.811949652942153) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 22.321394196704478) THEN CASE WHEN ("ADS"."Feature_11" <= 217.9164766170149) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= 99.31048380458284) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, 0.6494124539791422 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 5.773420512209187 AS threshold, 397 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.750881612090698 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 14.713533528311766 AS threshold, 50 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.050000000000004 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.02857142857143 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.893103448275859 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 6.811949652942153 AS threshold, 347 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.716426512968322 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 177 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.1135593220339 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.179411764705886 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 22.321394196704478 AS threshold, 109 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.454128440366974 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_11' AS feature, 217.9164766170149 AS threshold, 72 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.527777777777782 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.213333333333333 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.399999999999995 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_6' AS feature, 99.31048380458284 AS threshold, 37 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.418918918918921 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.495238095238099 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.318750000000001 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_10" <= 18.688312781461676) THEN CASE WHEN ("ADS"."Feature_12" <= 14.784916038511602) THEN CASE WHEN ("ADS"."Feature_2" <= 4.014791606591064) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 10.07227450228558) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.5239109498750156) THEN CASE WHEN ("ADS"."Feature_12" <= 9.93532092832885) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 22.017788911471676) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_10' AS feature, 18.688312781461676 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.784916038511602 AS threshold, 235 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.22978723404257 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.014791606591064 AS threshold, 199 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.78743718592965 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.32500000000001 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.203478260869563 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 10.07227450228558 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.619444444444444 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.7375 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.725 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 0.5239109498750156 AS threshold, 271 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.459778597785974 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 9.93532092832885 AS threshold, 77 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.720779220779225 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.37254901960784 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.48076923076923 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 22.017788911471676 AS threshold, 194 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.768556701030924 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 178 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.41797752808988 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.54375 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 14.601838539082047) THEN CASE WHEN ("ADS"."Feature_12" <= 11.652993992064614) THEN CASE WHEN ("ADS"."Feature_12" <= 7.542269604388731) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_8" <= 10.117078421226273) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 21.39051225659927) THEN CASE WHEN ("ADS"."Feature_2" <= 14.268253915384703) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.291520212743871) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 14.601838539082047 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 11.652993992064614 AS threshold, 332 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.46626506024097 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 7.542269604388731 AS threshold, 260 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.195000000000007 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 145 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.972413793103456 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.432173913043467 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, 10.117078421226273 AS threshold, 72 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.223611111111108 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.014814814814812 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.85 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, 21.39051225659927 AS threshold, 174 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.027586206896551 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 14.268253915384703 AS threshold, 78 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.476923076923075 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.804347826086953 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.568750000000003 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, 2.291520212743871 AS threshold, 96 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.037499999999996 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.050666666666668 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.561904761904763 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, "DT_Output_6"."Estimator" AS "Estimator_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.549520491271267) THEN CASE WHEN ("ADS"."Feature_0" <= 9.56296766494338) THEN CASE WHEN ("ADS"."Feature_12" <= 11.10264719210043) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 26.670484529251198) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.068734600367388) THEN CASE WHEN ("ADS"."Feature_9" <= 428.05700486947643) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.257050079728891) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.549520491271267 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 9.56296766494338 AS threshold, 364 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.940384615384623 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 11.10264719210043 AS threshold, 315 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.011428571428574 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.183064516129022 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 191 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.952356020942414 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_12' AS feature, 26.670484529251198 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.055102040816323 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.326470588235292 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.173333333333334 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.068734600367388 AS threshold, 142 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.74154929577466 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 428.05700486947643 AS threshold, 84 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.703571428571415 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.55692307692307 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.363157894736837 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_12' AS feature, 5.257050079728891 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 39.03793103448276 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 43.187878787878795 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.55999999999999 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, "DT_Output_7"."Estimator" AS "Estimator_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 8.296821050271044) THEN CASE WHEN ("ADS"."Feature_5" <= 7.778266168024748) THEN CASE WHEN ("ADS"."Feature_10" <= 17.718004695088304) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_2" <= 17.666340919058012) THEN CASE WHEN ("ADS"."Feature_12" <= 17.52482454455332) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.6637289462649895) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 8.296821050271044 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.778266168024748 AS threshold, 169 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 30.97633136094675 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_10' AS feature, 17.718004695088304 AS threshold, 148 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.869594594594588 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 30.79565217391303 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.1873417721519 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 45.82380952380952 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 17.666340919058012 AS threshold, 337 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.298516320474775 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_12' AS feature, 17.52482454455332 AS threshold, 164 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.880487804878054 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.359574468085107 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.943478260869565 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_4' AS feature, 0.6637289462649895 AS threshold, 173 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.850867052023126 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.69178082191781 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.776999999999997 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, "DT_Output_8"."Estimator" AS "Estimator_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 13.538385789016255) THEN CASE WHEN ("ADS"."Feature_12" <= 4.044688323012833) THEN CASE WHEN ("ADS"."Feature_11" <= 390.2509698285441) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 6.054719225579161) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 496.56677388007137) THEN CASE WHEN ("ADS"."Feature_12" <= 19.282218627136125) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.4600376909569954) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 13.538385789016255 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 4.044688323012833 AS threshold, 310 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.9367741935484 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 390.2509698285441 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 41.6970588235294 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 43.475 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 40.11666666666667 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_12' AS feature, 6.054719225579161 AS threshold, 276 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.118478260869566 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 30.740983606557386 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 215 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.523255813953487 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_9' AS feature, 496.56677388007137 AS threshold, 196 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.567346938775518 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 19.282218627136125 AS threshold, 89 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.197752808988763 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.135937500000004 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.796 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, 2.4600376909569954 AS threshold, 107 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.37943925233645 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.556043956043956 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.0625 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, "DT_Output_9"."Estimator" AS "Estimator_9" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Estimator_0" AS "Estimator_0", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Estimator_1" AS "Estimator_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Estimator_2" AS "Estimator_2", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Estimator_3" AS "Estimator_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Estimator_4" AS "Estimator_4", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Estimator_5" AS "Estimator_5", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Estimator_6" AS "Estimator_6", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Estimator_7" AS "Estimator_7", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Estimator_8" AS "Estimator_8", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Estimator_9" AS "Estimator_9" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Estimator_0" / 10 + "RF_Join_CTE"."Estimator_1" / 10 + "RF_Join_CTE"."Estimator_2" / 10 + "RF_Join_CTE"."Estimator_3" / 10 + "RF_Join_CTE"."Estimator_4" / 10 + "RF_Join_CTE"."Estimator_5" / 10 + "RF_Join_CTE"."Estimator_6" / 10 + "RF_Join_CTE"."Estimator_7" / 10 + "RF_Join_CTE"."Estimator_8" / 10 + "RF_Join_CTE"."Estimator_9" / 10 AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"