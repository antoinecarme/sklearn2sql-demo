-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 3.59376071146 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 11.3636363636 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 11.1367786561 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.0691699604743 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.554695059289 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 6.28463438735 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 68.5749011858 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 3.79504268775 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 9.54940711462 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 408.23715415 ELSE [ADS].[Feature_9] END AS impute_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN 18.4555335968 ELSE [ADS].[Feature_10] END AS impute_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN 356.674031621 ELSE [ADS].[Feature_11] END AS impute_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 12.6530632411 ELSE [ADS].[Feature_12] END AS impute_14 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 3.59376071146 AS impute_2, [ADS_imp_1_OUT].impute_3 - 11.3636363636 AS impute_3, [ADS_imp_1_OUT].impute_4 - 11.1367786561 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.0691699604743 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.554695059289 AS impute_6, [ADS_imp_1_OUT].impute_7 - 6.28463438735 AS impute_7, [ADS_imp_1_OUT].impute_8 - 68.5749011858 AS impute_8, [ADS_imp_1_OUT].impute_9 - 3.79504268775 AS impute_9, [ADS_imp_1_OUT].impute_10 - 9.54940711462 AS impute_10, [ADS_imp_1_OUT].impute_11 - 408.23715415 AS impute_11, [ADS_imp_1_OUT].impute_12 - 18.4555335968 AS impute_12, [ADS_imp_1_OUT].impute_13 - 356.674031621 AS impute_13, [ADS_imp_1_OUT].impute_14 - 12.6530632411 AS impute_14 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.0290793418705 + [CenteredDataForPCA].impute_3 * -0.0435901379884 + [CenteredDataForPCA].impute_4 * 0.0283311854744 + [CenteredDataForPCA].impute_5 * -5.55834284791e-05 + [CenteredDataForPCA].impute_6 * 0.000449723983032 + [CenteredDataForPCA].impute_7 * -0.00116817520949 + [CenteredDataForPCA].impute_8 * 0.0836340850971 + [CenteredDataForPCA].impute_9 * -0.00656167700943 + [CenteredDataForPCA].impute_10 * 0.0450056440522 + [CenteredDataForPCA].impute_11 * 0.949748861684 + [CenteredDataForPCA].impute_12 * 0.00560015635568 + [CenteredDataForPCA].impute_13 * -0.291215007119 + [CenteredDataForPCA].impute_14 * 0.0229433981219 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.00595358533578 + [CenteredDataForPCA].impute_3 * 0.00117454545239 + [CenteredDataForPCA].impute_4 * -0.00494881025195 + [CenteredDataForPCA].impute_5 * -0.00010267276141 + [CenteredDataForPCA].impute_6 * 1.83085404137e-06 + [CenteredDataForPCA].impute_7 * 0.000365743217289 + [CenteredDataForPCA].impute_8 * -0.00572142591607 + [CenteredDataForPCA].impute_9 * 0.000353613792575 + [CenteredDataForPCA].impute_10 * -0.00861821318903 + [CenteredDataForPCA].impute_11 * -0.292380996231 + [CenteredDataForPCA].impute_12 * -0.00252890004647 + [CenteredDataForPCA].impute_13 * -0.95619302773 + [CenteredDataForPCA].impute_14 * 0.00576700106093 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.0115545557501 + [CenteredDataForPCA].impute_3 * 0.632896918644 + [CenteredDataForPCA].impute_4 * -0.088340421489 + [CenteredDataForPCA].impute_5 * -0.000975318528256 + [CenteredDataForPCA].impute_6 * -0.00180719024026 + [CenteredDataForPCA].impute_7 * 0.00473411946642 + [CenteredDataForPCA].impute_8 * -0.7558624017 + [CenteredDataForPCA].impute_9 * 0.0450884909145 + [CenteredDataForPCA].impute_10 * 0.00284762033646 + [CenteredDataForPCA].impute_11 * 0.0938666635186 + [CenteredDataForPCA].impute_12 * -0.0111591438347 + [CenteredDataForPCA].impute_13 * -0.023554219456 + [CenteredDataForPCA].impute_14 * -0.0928331511404 AS anoova_4, [CenteredDataForPCA].impute_2 * 0.0270010188326 + [CenteredDataForPCA].impute_3 * 0.768061561807 + [CenteredDataForPCA].impute_4 * -0.0127967831999 + [CenteredDataForPCA].impute_5 * 0.000854486449613 + [CenteredDataForPCA].impute_6 * 0.000679594076936 + [CenteredDataForPCA].impute_7 * 0.00570054720395 + [CenteredDataForPCA].impute_8 * 0.636611733776 + [CenteredDataForPCA].impute_9 * 0.00257396992201 + [CenteredDataForPCA].impute_10 * -0.0195657921452 + [CenteredDataForPCA].impute_11 * -0.0199759769684 + [CenteredDataForPCA].impute_12 * -0.0320122564453 + [CenteredDataForPCA].impute_13 * 0.0040139802958 + [CenteredDataForPCA].impute_14 * 0.0452885745068 AS anoova_5, [CenteredDataForPCA].impute_2 * 0.953871800695 + [CenteredDataForPCA].impute_3 * -0.00565379160917 + [CenteredDataForPCA].impute_4 * -0.0562384399835 + [CenteredDataForPCA].impute_5 * -0.00213578787488 + [CenteredDataForPCA].impute_6 * -0.000179163492751 + [CenteredDataForPCA].impute_7 * -0.0132180033155 + [CenteredDataForPCA].impute_8 * -0.0459165992573 + [CenteredDataForPCA].impute_9 * -0.00667171091971 + [CenteredDataForPCA].impute_10 * 0.17058785538 + [CenteredDataForPCA].impute_11 * -0.0326258446098 + [CenteredDataForPCA].impute_12 * 0.0213376088824 + [CenteredDataForPCA].impute_13 * 0.0162708060102 + [CenteredDataForPCA].impute_14 * 0.231769304291 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.166034349246 + [CenteredDataForPCA].impute_3 * 0.0467338831346 + [CenteredDataForPCA].impute_4 * 0.341930158111 + [CenteredDataForPCA].impute_5 * -0.00351936887193 + [CenteredDataForPCA].impute_6 * 0.00187779954519 + [CenteredDataForPCA].impute_7 * -0.0726614168834 + [CenteredDataForPCA].impute_8 * -0.109563953631 + [CenteredDataForPCA].impute_9 * 0.0073890536197 + [CenteredDataForPCA].impute_10 * -0.207176649927 + [CenteredDataForPCA].impute_11 * -0.00342146728837 + [CenteredDataForPCA].impute_12 * 0.0412943586628 + [CenteredDataForPCA].impute_13 * 0.0060542050517 + [CenteredDataForPCA].impute_14 * 0.889551632117 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.212852802248 + [CenteredDataForPCA].impute_3 * 0.035176546336 + [CenteredDataForPCA].impute_4 * 0.785689931958 + [CenteredDataForPCA].impute_5 * 0.00509255441973 + [CenteredDataForPCA].impute_6 * 0.00385766581269 + [CenteredDataForPCA].impute_7 * 0.00787523138869 + [CenteredDataForPCA].impute_8 * -0.0263745768272 + [CenteredDataForPCA].impute_9 * -0.0889173024929 + [CenteredDataForPCA].impute_10 * -0.435623734582 + [CenteredDataForPCA].impute_11 * 0.00277590025712 + [CenteredDataForPCA].impute_12 * -0.0713658865352 + [CenteredDataForPCA].impute_13 * -0.00150020771634 + [CenteredDataForPCA].impute_14 * -0.364104108592 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.122652780398 + [CenteredDataForPCA].impute_3 * -0.0514137942919 + [CenteredDataForPCA].impute_4 * -0.492499395662 + [CenteredDataForPCA].impute_5 * -0.0113553130638 + [CenteredDataForPCA].impute_6 * -0.0044543901623 + [CenteredDataForPCA].impute_7 * -0.0151387973731 + [CenteredDataForPCA].impute_8 * 0.0176803007577 + [CenteredDataForPCA].impute_9 * 0.0657533681177 + [CenteredDataForPCA].impute_10 * -0.853570768015 + [CenteredDataForPCA].impute_11 * 0.0468119918264 + [CenteredDataForPCA].impute_12 * -0.0598374746853 + [CenteredDataForPCA].impute_13 * -0.00318176205366 + [CenteredDataForPCA].impute_14 * 0.0194455791662 AS anoova_9, [CenteredDataForPCA].impute_2 * 0.0137295009078 + [CenteredDataForPCA].impute_3 * 0.0235097341661 + [CenteredDataForPCA].impute_4 * 0.0352709234238 + [CenteredDataForPCA].impute_5 * -0.0178059044254 + [CenteredDataForPCA].impute_6 * -0.0139018168355 + [CenteredDataForPCA].impute_7 * -0.0529937903518 + [CenteredDataForPCA].impute_8 * 0.0231883052927 + [CenteredDataForPCA].impute_9 * 0.224532665334 + [CenteredDataForPCA].impute_10 * -0.070331864193 + [CenteredDataForPCA].impute_11 * -0.00203423468159 + [CenteredDataForPCA].impute_12 * 0.96586112087 + [CenteredDataForPCA].impute_13 * -0.0019041485606 + [CenteredDataForPCA].impute_14 * -0.0768208791925 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.0164239950024 + [CenteredDataForPCA].impute_3 * -0.0306822646896 + [CenteredDataForPCA].impute_4 * 0.0980506613801 + [CenteredDataForPCA].impute_5 * -0.00156368116258 + [CenteredDataForPCA].impute_6 * -0.0106223819107 + [CenteredDataForPCA].impute_7 * -0.0512068200773 + [CenteredDataForPCA].impute_8 * 0.0260681878414 + [CenteredDataForPCA].impute_9 * 0.964823647455 + [CenteredDataForPCA].impute_10 * 0.0390661641493 + [CenteredDataForPCA].impute_11 * -0.000480480028877 + [CenteredDataForPCA].impute_12 * -0.229898826892 + [CenteredDataForPCA].impute_13 * 7.36484057084e-06 + [CenteredDataForPCA].impute_14 * -0.0222128903555 AS anoova_11, [CenteredDataForPCA].impute_2 * -0.00226717797688 + [CenteredDataForPCA].impute_3 * 0.00552239680166 + [CenteredDataForPCA].impute_4 * -0.0178836079801 + [CenteredDataForPCA].impute_5 * -0.0157986253619 + [CenteredDataForPCA].impute_6 * 0.0115661438829 + [CenteredDataForPCA].impute_7 * -0.994165624979 + [CenteredDataForPCA].impute_8 * 0.00551780566759 + [CenteredDataForPCA].impute_9 * -0.0635307633029 + [CenteredDataForPCA].impute_10 * 0.0241265968226 + [CenteredDataForPCA].impute_11 * -0.000774619844149 + [CenteredDataForPCA].impute_12 * -0.0430041587914 + [CenteredDataForPCA].impute_13 * -0.000616615255131 + [CenteredDataForPCA].impute_14 * -0.0663086932677 AS anoova_12, [CenteredDataForPCA].impute_2 * 0.00196895828586 + [CenteredDataForPCA].impute_3 * -0.000193077157234 + [CenteredDataForPCA].impute_4 * -0.00812264862898 + [CenteredDataForPCA].impute_5 * 0.999597129178 + [CenteredDataForPCA].impute_6 * 0.00778846475673 + [CenteredDataForPCA].impute_7 * -0.0171507849184 + [CenteredDataForPCA].impute_8 * -0.000892510155887 + [CenteredDataForPCA].impute_9 * 0.005875198507 + [CenteredDataForPCA].impute_10 * -0.0086510290719 + [CenteredDataForPCA].impute_11 * 0.00051750984589 + [CenteredDataForPCA].impute_12 * 0.0161466468914 + [CenteredDataForPCA].impute_13 * -0.000156477757414 + [CenteredDataForPCA].impute_14 * 0.00311719313324 AS anoova_13, [CenteredDataForPCA].impute_2 * 0.000531945671707 + [CenteredDataForPCA].impute_3 * 0.000126484701586 + [CenteredDataForPCA].impute_4 * -0.00423973116962 + [CenteredDataForPCA].impute_5 * -0.00793521441916 + [CenteredDataForPCA].impute_6 * 0.999728591757 + [CenteredDataForPCA].impute_7 * 0.0103958814617 + [CenteredDataForPCA].impute_8 * -0.000916065930923 + [CenteredDataForPCA].impute_9 * 0.0147667106543 + [CenteredDataForPCA].impute_10 * -0.00247893969767 + [CenteredDataForPCA].impute_11 * -7.34637920241e-05 + [CenteredDataForPCA].impute_12 * 0.0112939726501 + [CenteredDataForPCA].impute_13 * 5.25551852109e-05 + [CenteredDataForPCA].impute_14 * -0.000908030955549 AS anoova_14 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -91.71349334070285) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_12 <= -0.5070957389076147) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -1.0164050711640886) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -4.9995280497031835) THEN 7 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 42.13768309138614) THEN 9 ELSE 10 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -91.71349334070285 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.5070957389076147 AS threshold, 238 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.273529411764702 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 43.15416666666666 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_7' AS feature, -1.0164050711640886 AS threshold, 214 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.380373831775692 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.801098901098907 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.58943089430893 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_7' AS feature, -4.9995280497031835 AS threshold, 268 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.2108208955224 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.729032258064514 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 42.13768309138614 AS threshold, 237 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.965822784810136 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 211 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.763033175355453 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.72692307692307 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 255.5526283115185) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 155.00445510141992) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.18100092388042022) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 2.7300206492958914) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 325.1255181824878) THEN 9 ELSE 10 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 255.5526283115185 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 155.00445510141992 AS threshold, 451 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.609090909090916 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, -0.18100092388042022 AS threshold, 369 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.857181571815723 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 165 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.548484848484847 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.680392156862744 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, 2.7300206492958914 AS threshold, 82 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.992682926829268 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.75522388059701 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.120000000000001 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 325.1255181824878 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.70727272727273 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.386206896551721 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.834615384615384 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 22.28728597136552) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 1.232598437925449) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -0.6240515963064102) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 13.223400252483813) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_14 <= -0.011187364732085633) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 1.3133289416800906) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -1.8955396848865698) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 22.28728597136552 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 1.232598437925449 AS threshold, 356 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.10337078651685 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -0.6240515963064102 AS threshold, 256 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.749609375000006 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.722689075630246 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 137 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.429927007299263 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, 13.223400252483813 AS threshold, 100 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.888999999999992 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.009210526315798 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.84166666666667 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_14' AS feature, -0.011187364732085633 AS threshold, 150 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.432 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_7' AS feature, 1.3133289416800906 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.66451612903225 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.297500000000007 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.05909090909091 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_9' AS feature, -1.8955396848865698 AS threshold, 88 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.154545454545461 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.704545454545457 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.604545454545452 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -0.8900704151941738) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 12.455707183453029) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.022993021505091527) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -4.830861306950675) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 74.88247371034385) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 37.38741547108364) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -0.8900704151941738 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 12.455707183453029 AS threshold, 223 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.43856502242152 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, 0.022993021505091527 AS threshold, 145 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.973103448275857 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 78 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.74102564102564 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.586567164179108 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, -4.830861306950675 AS threshold, 78 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.867948717948718 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.91666666666666 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.624074074074073 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_3' AS feature, 74.88247371034385 AS threshold, 283 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.455123674911658 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_4' AS feature, 37.38741547108364 AS threshold, 256 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.14726562500001 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 213 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.61924882629108 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.716279069767435 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.89259259259259 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -34.78380494010895) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 2.059462157762841) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_12 <= -0.1525575441332927) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -22.63885910964551) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 118.64617480169244) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -1.4549921876345806) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.019595398314871115) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -34.78380494010895 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, 2.059462157762841 AS threshold, 275 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.810909090909085 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_12' AS feature, -0.1525575441332927 AS threshold, 204 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.71764705882351 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 35.3859375 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.212142857142844 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -22.63885910964551 AS threshold, 71 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.332394366197185 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.803703703703704 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.88409090909091 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 118.64617480169244 AS threshold, 231 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.630303030303036 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_4' AS feature, -1.4549921876345806 AS threshold, 94 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.067021276595742 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.959999999999994 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.295833333333334 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_10' AS feature, -0.019595398314871115 AS threshold, 137 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.272262773722634 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.44909090909091 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.165853658536584 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -162.69905998454004) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 2.7739601697958425) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 17.352599228772085) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 67.60287639560747) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 1.0576430082357344) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 177.20164638272797) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -162.69905998454004 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 2.7739601697958425 AS threshold, 73 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.606849315068494 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 17.352599228772085 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.086046511627906 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.57368421052631 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 34.074999999999996 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.620000000000005 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, 67.60287639560747 AS threshold, 433 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.50877598152425 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_7' AS feature, 1.0576430082357344 AS threshold, 385 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.446753246753243 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 244 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.68442622950821 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 141 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.574468085106382 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_3' AS feature, 177.20164638272797 AS threshold, 48 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.985416666666666 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.705555555555556 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.353333333333333 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -33.788932012407656) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -6.937003844457084) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.7650710167515764) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 48.787290451439105) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 3.2717759517936713) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 253.97955696720734) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -33.788932012407656 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, -6.937003844457084 AS threshold, 277 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.798555956678687 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 37.33809523809524 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_11' AS feature, -0.7650710167515764 AS threshold, 256 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.851953125 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 30.06805555555555 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.810869565217384 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_2' AS feature, 48.787290451439105 AS threshold, 229 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.5825327510917 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_7' AS feature, 3.2717759517936713 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.486046511627904 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.387301587301582 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.27826086956522 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_2' AS feature, 253.97955696720734 AS threshold, 143 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.23496503496503 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.814772727272725 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.707272727272727 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, [DT_Output_6].[Estimator] AS [Estimator_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 20.253364268711465) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 1.2829401711548947) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -21.20123708874607) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 228.30892021510078) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 20.253364268711465 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, 1.2829401711548947 AS threshold, 460 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.676304347826072 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -21.20123708874607 AS threshold, 297 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.08013468013468 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.59545454545454 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 121 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.42148760330579 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 228.30892021510078 AS threshold, 163 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.29631901840491 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.563793103448276 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.700000000000001 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.097826086956527 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, [DT_Output_7].[Estimator] AS [Estimator_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -86.09469460692165) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 30.331752719408982) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_12 <= -0.01900196931008069) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.7397869267953201) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 61.311388445969726) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 2.9112306909214) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 59.2549404979556) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -86.09469460692165 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 30.331752719408982 AS threshold, 248 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.23709677419356 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_12' AS feature, -0.01900196931008069 AS threshold, 204 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.44607843137255 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.827380952380945 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.37916666666666 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_11' AS feature, -0.7397869267953201 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.904545454545453 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 35.27058823529413 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.52592592592592 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 61.311388445969726 AS threshold, 258 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.97209302325582 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_3' AS feature, 2.9112306909214 AS threshold, 118 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.18813559322034 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.139772727272724 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.39666666666667 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_3' AS feature, 59.2549404979556 AS threshold, 140 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.26142857142857 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 102 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.429411764705875 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.126315789473683 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, [DT_Output_8].[Estimator] AS [Estimator_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 161.78610237390552) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -70.34935839039196) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -142.7976256049737) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.17666853219979828) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.6539283142039476) THEN 9 ELSE 10 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 161.78610237390552 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.532806324110698 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -70.34935839039196 AS threshold, 471 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.27834394904459 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -142.7976256049737 AS threshold, 266 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.95939849624058 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.708333333333325 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.842352941176465 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_11' AS feature, 0.17666853219979828 AS threshold, 205 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.799512195121956 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 132 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.45 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.23972602739726 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_9' AS feature, -0.6539283142039476 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.500000000000004 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.726315789473682 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.23125 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, [DT_Output_9].[Estimator] AS [Estimator_9] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Estimator_0] AS [Estimator_0], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Estimator_1] AS [Estimator_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Estimator_2] AS [Estimator_2], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Estimator_3] AS [Estimator_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Estimator_4] AS [Estimator_4], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Estimator_5] AS [Estimator_5], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Estimator_6] AS [Estimator_6], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Estimator_7] AS [Estimator_7], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Estimator_8] AS [Estimator_8], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Estimator_9] AS [Estimator_9] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Estimator_0] / 10 + [RF_Join_CTE].[Estimator_1] / 10 + [RF_Join_CTE].[Estimator_2] / 10 + [RF_Join_CTE].[Estimator_3] / 10 + [RF_Join_CTE].[Estimator_4] / 10 + [RF_Join_CTE].[Estimator_5] / 10 + [RF_Join_CTE].[Estimator_6] / 10 + [RF_Join_CTE].[Estimator_7] / 10 + [RF_Join_CTE].[Estimator_8] / 10 + [RF_Join_CTE].[Estimator_9] / 10 AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]