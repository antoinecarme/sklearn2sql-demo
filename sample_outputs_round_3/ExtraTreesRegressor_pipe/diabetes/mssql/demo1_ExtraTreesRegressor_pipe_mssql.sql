-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -3.63428492931e-16 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 1.30834257455e-16 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -8.04534920334e-16 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 1.28165452107e-16 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -8.83531558624e-17 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 1.32702421198e-16 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -4.57464634298e-16 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 3.77730149823e-16 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -3.83085421731e-16 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -3.41288201508e-16 ELSE [ADS].[Feature_9] END AS impute_11 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - -3.63428492931e-16 AS impute_2, [ADS_imp_1_OUT].impute_3 - 1.30834257455e-16 AS impute_3, [ADS_imp_1_OUT].impute_4 - -8.04534920334e-16 AS impute_4, [ADS_imp_1_OUT].impute_5 - 1.28165452107e-16 AS impute_5, [ADS_imp_1_OUT].impute_6 - -8.83531558624e-17 AS impute_6, [ADS_imp_1_OUT].impute_7 - 1.32702421198e-16 AS impute_7, [ADS_imp_1_OUT].impute_8 - -4.57464634298e-16 AS impute_8, [ADS_imp_1_OUT].impute_9 - 3.77730149823e-16 AS impute_9, [ADS_imp_1_OUT].impute_10 - -3.83085421731e-16 AS impute_10, [ADS_imp_1_OUT].impute_11 - -3.41288201508e-16 AS impute_11 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.21643100659 + [CenteredDataForPCA].impute_3 * 0.186967108192 + [CenteredDataForPCA].impute_4 * 0.303162498817 + [CenteredDataForPCA].impute_5 * 0.271739703287 + [CenteredDataForPCA].impute_6 * 0.34325493123 + [CenteredDataForPCA].impute_7 * 0.351860620033 + [CenteredDataForPCA].impute_8 * -0.282436391838 + [CenteredDataForPCA].impute_9 * 0.428833247772 + [CenteredDataForPCA].impute_10 * 0.378617309164 + [CenteredDataForPCA].impute_11 * 0.322182824553 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.044371505804 + [CenteredDataForPCA].impute_3 * -0.386548110735 + [CenteredDataForPCA].impute_4 * -0.156280609448 + [CenteredDataForPCA].impute_5 * -0.138255640728 + [CenteredDataForPCA].impute_6 * 0.573026691953 + [CenteredDataForPCA].impute_7 * 0.455939849626 + [CenteredDataForPCA].impute_8 * 0.506242872531 + [CenteredDataForPCA].impute_9 * -0.068184234517 + [CenteredDataForPCA].impute_10 * -0.0261893037261 + [CenteredDataForPCA].impute_11 * -0.0849466000238 AS anoova_3, [CenteredDataForPCA].impute_2 * 0.49466810716 + [CenteredDataForPCA].impute_3 * -0.106858334763 + [CenteredDataForPCA].impute_4 * 0.167531700938 + [CenteredDataForPCA].impute_5 * 0.513568043314 + [CenteredDataForPCA].impute_6 * -0.0685867001784 + [CenteredDataForPCA].impute_7 * -0.269694382255 + [CenteredDataForPCA].impute_8 * 0.386027874592 + [CenteredDataForPCA].impute_9 * -0.380681209291 + [CenteredDataForPCA].impute_10 * 0.0636315032871 + [CenteredDataForPCA].impute_11 * 0.276842712702 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.414009498941 + [CenteredDataForPCA].impute_3 * -0.679860516614 + [CenteredDataForPCA].impute_4 * 0.499825330253 + [CenteredDataForPCA].impute_5 * -0.019667344342 + [CenteredDataForPCA].impute_6 * -0.0683953319645 + [CenteredDataForPCA].impute_7 * -0.167773837077 + [CenteredDataForPCA].impute_8 * -0.0760200485782 + [CenteredDataForPCA].impute_9 * 0.00792120338562 + [CenteredDataForPCA].impute_10 * 0.264427419183 + [CenteredDataForPCA].impute_11 * 0.0870862356146 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.686863892154 + [CenteredDataForPCA].impute_3 * 0.373456115735 + [CenteredDataForPCA].impute_4 * 0.12935935855 + [CenteredDataForPCA].impute_5 * 0.486890138051 + [CenteredDataForPCA].impute_6 * 0.129174145487 + [CenteredDataForPCA].impute_7 * 0.116731430474 + [CenteredDataForPCA].impute_8 * 0.244991147174 + [CenteredDataForPCA].impute_9 * -0.14364377424 + [CenteredDataForPCA].impute_10 * -0.151661098575 + [CenteredDataForPCA].impute_11 * 0.0313879194047 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.225850503591 + [CenteredDataForPCA].impute_3 * 0.0417310316277 + [CenteredDataForPCA].impute_4 * -0.403141902489 + [CenteredDataForPCA].impute_5 * -0.272762738803 + [CenteredDataForPCA].impute_6 * 0.00540864137623 + [CenteredDataForPCA].impute_7 * -0.13325719548 + [CenteredDataForPCA].impute_8 * 0.106371596751 + [CenteredDataForPCA].impute_9 * -0.0339453956408 + [CenteredDataForPCA].impute_10 * 0.178730050963 + [CenteredDataForPCA].impute_11 * 0.805064466151 AS anoova_7, [CenteredDataForPCA].impute_2 * -0.109538210099 + [CenteredDataForPCA].impute_3 * -0.0676055051661 + [CenteredDataForPCA].impute_4 * -0.519857870077 + [CenteredDataForPCA].impute_5 * 0.32064908429 + [CenteredDataForPCA].impute_6 * 0.0736490780231 + [CenteredDataForPCA].impute_7 * -0.230540112449 + [CenteredDataForPCA].impute_8 * -0.00753445287491 + [CenteredDataForPCA].impute_9 * 0.0712361931688 + [CenteredDataForPCA].impute_10 * 0.647313447679 + [CenteredDataForPCA].impute_11 * -0.357272785105 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.0149346777542 + [CenteredDataForPCA].impute_3 * 0.442939663138 + [CenteredDataForPCA].impute_4 * 0.392941868456 + [CenteredDataForPCA].impute_5 * -0.477364351173 + [CenteredDataForPCA].impute_6 * 0.129413507459 + [CenteredDataForPCA].impute_7 * -0.191311206733 + [CenteredDataForPCA].impute_8 * 0.324636408704 + [CenteredDataForPCA].impute_9 * -0.180588338623 + [CenteredDataForPCA].impute_10 * 0.449660024059 + [CenteredDataForPCA].impute_11 * -0.166608696019 AS anoova_9, [CenteredDataForPCA].impute_2 * 0.00810057312789 + [CenteredDataForPCA].impute_3 * -0.00210552195289 + [CenteredDataForPCA].impute_4 * 0.0423775137715 + [CenteredDataForPCA].impute_5 * 0.027194101566 + [CenteredDataForPCA].impute_6 * -0.0420398366517 + [CenteredDataForPCA].impute_7 * -0.359315489659 + [CenteredDataForPCA].impute_8 * 0.481247705071 + [CenteredDataForPCA].impute_9 * 0.773816561846 + [CenteredDataForPCA].impute_10 * -0.18945947188 + [CenteredDataForPCA].impute_11 * -0.0152738068842 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.00326308608059 + [CenteredDataForPCA].impute_3 * 0.00366069256477 + [CenteredDataForPCA].impute_4 * 0.00824808535829 + [CenteredDataForPCA].impute_5 * -0.00322110536704 + [CenteredDataForPCA].impute_6 * 0.709774472551 + [CenteredDataForPCA].impute_7 * -0.563196047553 + [CenteredDataForPCA].impute_8 * -0.317444125112 + [CenteredDataForPCA].impute_9 * -0.0905946399327 + [CenteredDataForPCA].impute_10 * -0.264467346072 + [CenteredDataForPCA].impute_11 * 0.00261090257808 AS anoova_11 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.0486485359931836) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.06435082104358414) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.0021892576607988774) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.03798842725758318) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.015479286887215421) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.05886100013848483) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, -0.0486485359931836 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 0.06435082104358414 AS threshold, 77 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.66233766233766 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, 0.0021892576607988774 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 101.60344827586206 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 110.18604651162791 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 77.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 162.6315789473684 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_8' AS feature, -0.03798842725758318 AS threshold, 365 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 159.6164383561644 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_2' AS feature, -0.015479286887215421 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 171.7058823529412 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 114.8 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 208.41935483870967 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_2' AS feature, 0.05886100013848483 AS threshold, 314 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 157.65286624203821 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 221 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 132.70135746606334 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 216.94623655913978 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.04312056931845157) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.07967482396002018) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.05210530142493425) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -0.01077367048472204) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.069321417852104) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.021477901000416105) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.04312056931845157 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 0.07967482396002018 AS threshold, 98 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 176.51020408163265 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.05210530142493425 AS threshold, 76 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 151.6578947368421 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 119.07142857142857 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 170.66666666666666 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 262.3636363636364 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_7' AS feature, -0.01077367048472204 AS threshold, 344 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 145.1889534883721 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_2' AS feature, -0.069321417852104 AS threshold, 137 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.17518248175182 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 104.1875 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 169.40952380952382 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_2' AS feature, 0.021477901000416105 AS threshold, 207 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 139.2415458937198 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 110.68461538461538 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 77 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 187.45454545454547 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.017516794761928994) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.059845820350024254) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.009260177983857615) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.04317231244120033) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.033480444355406175) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.06709382224579244) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.020813186585195473) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.017516794761928994 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.059845820350024254 AS threshold, 199 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 112.03015075376885 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.009260177983857615 AS threshold, 127 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 102.55905511811024 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 115.6923076923077 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 75 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 93.45333333333333 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, -0.04317231244120033 AS threshold, 72 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 128.73611111111111 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 103.36363636363636 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 139.9 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, 0.033480444355406175 AS threshold, 243 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 184.97530864197532 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_2' AS feature, 0.06709382224579244 AS threshold, 177 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 171.4858757062147 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 140.65934065934067 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 204.1046511627907 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_6' AS feature, 0.020813186585195473 AS threshold, 66 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 221.15151515151516 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 219.19607843137254 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 227.8 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.10573870618106922) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.015241632542037337) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.002396195071885286) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.04269432810524238) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.0340086878029509) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.164796500814612) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.10573870618106922 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.015241632542037337 AS threshold, 70 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 94.6 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, 0.002396195071885286 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 80.44444444444444 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 87.20833333333333 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 72.71428571428571 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.08 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_2' AS feature, -0.04269432810524238 AS threshold, 372 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 162.95967741935485 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_5' AS feature, -0.0340086878029509 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 115.43023255813954 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 88.55555555555556 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 122.54411764705883 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_2' AS feature, 0.164796500814612 AS threshold, 286 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 177.25174825174824 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 267 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 173.02621722846442 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 236.6315789473684 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.03542234415717657) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.045716909488388385) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.005925107971422733) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.06448170115654689) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.06547291876727096) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.032165488546778656) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, -0.03542234415717657 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 0.045716909488388385 AS threshold, 115 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 122.38260869565218 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.005925107971422733 AS threshold, 99 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 121.61616161616162 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 92.19565217391305 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 147.1509433962264 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 127.125 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_2' AS feature, 0.06448170115654689 AS threshold, 327 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 162.59633027522935 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_2' AS feature, -0.06547291876727096 AS threshold, 239 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 138.69456066945608 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 99 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 105.43434343434343 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 162.21428571428572 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_4' AS feature, -0.032165488546778656 AS threshold, 88 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 227.51136363636363 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 207.48 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 235.46031746031747 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.07886212068195564) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.013927111514910884) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.0031390587748431923) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.0116801474566021) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.014203797035253457) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.025036663200111497) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.09711302908661151) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.07886212068195564 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 0.013927111514910884 AS threshold, 337 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 133.16023738872403 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, -0.0031390587748431923 AS threshold, 210 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 143.1809523809524 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 176.35 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 135.3764705882353 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_10' AS feature, -0.0116801474566021 AS threshold, 127 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.59055118110236 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 141.71428571428572 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 111.61320754716981 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, -0.014203797035253457 AS threshold, 105 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 213.02857142857144 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_5' AS feature, -0.025036663200111497 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 201.2325581395349 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 161.4 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 222.57142857142858 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_2' AS feature, 0.09711302908661151 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 221.20967741935485 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 212.29166666666666 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 226.8421052631579 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.04264297856702809) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.0014137747406588238) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.023637246253733812) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.06351904500184574) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.055538355754740254) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.04474149848739728) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.11481397238546324) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.04264297856702809 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, -0.0014137747406588238 AS threshold, 156 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 106.08333333333333 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.023637246253733812 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 131.84782608695653 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 145.80645161290323 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 103.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.06351904500184574 AS threshold, 110 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 95.30909090909091 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 89 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 92.03370786516854 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 109.19047619047619 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 0.055538355754740254 AS threshold, 286 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 177.25174825174824 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_5' AS feature, 0.04474149848739728 AS threshold, 149 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.36241610738256 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 116 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 130.45689655172413 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 211.3030303030303 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'anoova_2' AS feature, 0.11481397238546324 AS threshold, 137 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 208.67153284671534 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 91 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 197.1978021978022 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 231.3695652173913 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, [DT_Output_6].[Estimator] AS [Estimator_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.09371412251363137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.10747391793335702) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.12351306608324071) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.0036917094217981533) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.008022503894737812) THEN 9 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.008221794055690068) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.09371412251363137 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.10747391793335702 AS threshold, 366 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 138.46448087431693 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.12351306608324071 AS threshold, 69 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 94.71014492753623 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 87.36 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 114.05263157894737 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -0.0036917094217981533 AS threshold, 297 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.62962962962962 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 143 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 122.58041958041959 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 154 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 172.8181818181818 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_5' AS feature, -0.008022503894737812 AS threshold, 76 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 217.96052631578948 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 188.6 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'anoova_3' AS feature, -0.008221794055690068 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 237.1086956521739 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 256.4782608695652 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 217.7391304347826 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, [DT_Output_7].[Estimator] AS [Estimator_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.08524309053304813) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.14258647745023095) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.0044922651939664215) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= -0.04250786850699807) THEN 7 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.09772383283945074) THEN 9 ELSE 10 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.08524309053304813 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.14258647745023095 AS threshold, 352 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 137.2840909090909 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 92.34482758620689 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_2' AS feature, 0.0044922651939664215 AS threshold, 323 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 141.3188854489164 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 193 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 118.16580310880829 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 130 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 175.69230769230768 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_5' AS feature, -0.04250786850699807 AS threshold, 90 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 210.2111111111111 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 139.66666666666666 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 0.09772383283945074 AS threshold, 72 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 227.84722222222223 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 202.06666666666666 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 234.6315789473684 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, [DT_Output_8].[Estimator] AS [Estimator_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.02538838088998671) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.09113392231862638) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.12876982833731798) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.10332385461282936) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.0722957319001547) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.0023435949994182192) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.02538838088998671 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.09113392231862638 AS threshold, 306 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 136.24183006535947 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.12876982833731798 AS threshold, 64 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 86.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 77.44444444444444 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 97.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 0.10332385461282936 AS threshold, 242 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 149.52892561983472 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 203 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 137.79310344827587 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 210.6153846153846 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_4' AS feature, 0.0722957319001547 AS threshold, 136 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 187.88970588235293 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'anoova_2' AS feature, -0.0023435949994182192 AS threshold, 119 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 183.2436974789916 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 144.13793103448276 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 61 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 220.4262295081967 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 220.41176470588235 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, [DT_Output_9].[Estimator] AS [Estimator_9] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Estimator_0] AS [Estimator_0], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Estimator_1] AS [Estimator_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Estimator_2] AS [Estimator_2], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Estimator_3] AS [Estimator_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Estimator_4] AS [Estimator_4], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Estimator_5] AS [Estimator_5], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Estimator_6] AS [Estimator_6], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Estimator_7] AS [Estimator_7], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Estimator_8] AS [Estimator_8], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Estimator_9] AS [Estimator_9] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Estimator_0] / 10 + [RF_Join_CTE].[Estimator_1] / 10 + [RF_Join_CTE].[Estimator_2] / 10 + [RF_Join_CTE].[Estimator_3] / 10 + [RF_Join_CTE].[Estimator_4] / 10 + [RF_Join_CTE].[Estimator_5] / 10 + [RF_Join_CTE].[Estimator_6] / 10 + [RF_Join_CTE].[Estimator_7] / 10 + [RF_Join_CTE].[Estimator_8] / 10 + [RF_Join_CTE].[Estimator_9] / 10 AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]