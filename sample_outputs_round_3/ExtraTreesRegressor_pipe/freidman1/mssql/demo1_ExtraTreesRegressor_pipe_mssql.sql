-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.485744107364 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.513526359786 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.477558150766 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.503307785266 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.521873575797 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.451476847679 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.479979052915 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.48402955996 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.486385316234 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.493738651524 ELSE [ADS].[Feature_9] END AS impute_11 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 0.485744107364 AS impute_2, [ADS_imp_1_OUT].impute_3 - 0.513526359786 AS impute_3, [ADS_imp_1_OUT].impute_4 - 0.477558150766 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.503307785266 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.521873575797 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.451476847679 AS impute_7, [ADS_imp_1_OUT].impute_8 - 0.479979052915 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.48402955996 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.486385316234 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.493738651524 AS impute_11 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * -0.207961325692 + [CenteredDataForPCA].impute_3 * -0.0544707817744 + [CenteredDataForPCA].impute_4 * 0.304540499656 + [CenteredDataForPCA].impute_5 * 0.473568672753 + [CenteredDataForPCA].impute_6 * 0.119005516966 + [CenteredDataForPCA].impute_7 * 0.0154826318087 + [CenteredDataForPCA].impute_8 * -0.254988399839 + [CenteredDataForPCA].impute_9 * 0.476928850299 + [CenteredDataForPCA].impute_10 * -0.227075972571 + [CenteredDataForPCA].impute_11 * -0.527567135661 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.018011405636 + [CenteredDataForPCA].impute_3 * 0.10997379143 + [CenteredDataForPCA].impute_4 * -0.233832562277 + [CenteredDataForPCA].impute_5 * 0.183232109291 + [CenteredDataForPCA].impute_6 * 0.321905414853 + [CenteredDataForPCA].impute_7 * -0.0698056471485 + [CenteredDataForPCA].impute_8 * -0.297083327001 + [CenteredDataForPCA].impute_9 * 0.170393505366 + [CenteredDataForPCA].impute_10 * 0.820278288631 + [CenteredDataForPCA].impute_11 * 0.0261693765966 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.375171689448 + [CenteredDataForPCA].impute_3 * -0.418949639885 + [CenteredDataForPCA].impute_4 * 0.467627020029 + [CenteredDataForPCA].impute_5 * -0.295910470748 + [CenteredDataForPCA].impute_6 * -0.122194919359 + [CenteredDataForPCA].impute_7 * -0.333082810464 + [CenteredDataForPCA].impute_8 * -0.167587228896 + [CenteredDataForPCA].impute_9 * 0.231760329182 + [CenteredDataForPCA].impute_10 * 0.162498131947 + [CenteredDataForPCA].impute_11 * 0.378694648516 AS anoova_4, [CenteredDataForPCA].impute_2 * 0.181527265168 + [CenteredDataForPCA].impute_3 * -0.536728489285 + [CenteredDataForPCA].impute_4 * 0.149051311742 + [CenteredDataForPCA].impute_5 * 0.172397416037 + [CenteredDataForPCA].impute_6 * 0.552769982857 + [CenteredDataForPCA].impute_7 * 0.0783209840394 + [CenteredDataForPCA].impute_8 * 0.55571740325 + [CenteredDataForPCA].impute_9 * -0.0350028773873 + [CenteredDataForPCA].impute_10 * 0.0695436503874 + [CenteredDataForPCA].impute_11 * 0.0214717187268 AS anoova_5, [CenteredDataForPCA].impute_2 * 0.0761416017039 + [CenteredDataForPCA].impute_3 * -0.202260477176 + [CenteredDataForPCA].impute_4 * -0.0807326218935 + [CenteredDataForPCA].impute_5 * 0.191637772793 + [CenteredDataForPCA].impute_6 * -0.292728323361 + [CenteredDataForPCA].impute_7 * -0.705858683876 + [CenteredDataForPCA].impute_8 * 0.108153306188 + [CenteredDataForPCA].impute_9 * -0.35844524383 + [CenteredDataForPCA].impute_10 * 0.141060308554 + [CenteredDataForPCA].impute_11 * -0.407487263176 AS anoova_6, [CenteredDataForPCA].impute_2 * 0.394865194034 + [CenteredDataForPCA].impute_3 * -0.321613970505 + [CenteredDataForPCA].impute_4 * 0.0484153967155 + [CenteredDataForPCA].impute_5 * -0.270975205797 + [CenteredDataForPCA].impute_6 * 0.296499494446 + [CenteredDataForPCA].impute_7 * 0.0319413651977 + [CenteredDataForPCA].impute_8 * -0.659028353538 + [CenteredDataForPCA].impute_9 * -0.298715322712 + [CenteredDataForPCA].impute_10 * -0.176854741656 + [CenteredDataForPCA].impute_11 * -0.145311060374 AS anoova_7, [CenteredDataForPCA].impute_2 * -0.408251832911 + [CenteredDataForPCA].impute_3 * -0.559480856592 + [CenteredDataForPCA].impute_4 * -0.540451182961 + [CenteredDataForPCA].impute_5 * 0.169070958884 + [CenteredDataForPCA].impute_6 * -0.239099015409 + [CenteredDataForPCA].impute_7 * 0.343378430216 + [CenteredDataForPCA].impute_8 * -0.129049074361 + [CenteredDataForPCA].impute_9 * -0.0878497742275 + [CenteredDataForPCA].impute_10 * -0.0134013124567 + [CenteredDataForPCA].impute_11 * 0.00334882387149 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.216536298179 + [CenteredDataForPCA].impute_3 * 0.0102652936791 + [CenteredDataForPCA].impute_4 * 0.111707101227 + [CenteredDataForPCA].impute_5 * 0.688764468779 + [CenteredDataForPCA].impute_6 * -0.0951560772945 + [CenteredDataForPCA].impute_7 * -0.0888041033711 + [CenteredDataForPCA].impute_8 * -0.210673511404 + [CenteredDataForPCA].impute_9 * -0.165042123975 + [CenteredDataForPCA].impute_10 * -0.159306510804 + [CenteredDataForPCA].impute_11 * 0.593456015304 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.461991258953 + [CenteredDataForPCA].impute_3 * 0.186239245178 + [CenteredDataForPCA].impute_4 * -0.326650481328 + [CenteredDataForPCA].impute_5 * -0.0250865846288 + [CenteredDataForPCA].impute_6 * 0.559919284304 + [CenteredDataForPCA].impute_7 * -0.414197666571 + [CenteredDataForPCA].impute_8 * -0.0400111416439 + [CenteredDataForPCA].impute_9 * -0.102243497652 + [CenteredDataForPCA].impute_10 * -0.355219535787 + [CenteredDataForPCA].impute_11 * 0.145754216838 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.440468178076 + [CenteredDataForPCA].impute_3 * -0.170845892307 + [CenteredDataForPCA].impute_4 * -0.437673156633 + [CenteredDataForPCA].impute_5 * -0.105410687885 + [CenteredDataForPCA].impute_6 * -0.0916181963354 + [CenteredDataForPCA].impute_7 * -0.284952224156 + [CenteredDataForPCA].impute_8 * 0.0340838574703 + [CenteredDataForPCA].impute_9 * 0.65225977823 + [CenteredDataForPCA].impute_10 * -0.203527347611 + [CenteredDataForPCA].impute_11 * 0.128493918973 AS anoova_11 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.30446046231713597) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.042277808245095416) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.0009723475610757815) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.30446046231713597 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 0.042277808245095416 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.51567401012716 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.0009723475610757815 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.983468485296193 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.809892830831359 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.157044139761027 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.684927522301184 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.36582818145162 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.15942176249954276) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.03156149974026487) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.01009860156005632) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.15942176249954276 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.982252347845225 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 0.03156149974026487 AS threshold, 68 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.52114854361043 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.122219039847746 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_9' AS feature, -0.01009860156005632 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.805776619759715 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.033567239421169 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.23717650387931 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.08832027006109666) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.15948809786325013) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.25278400175766963) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.11147518108269927) THEN 6 ELSE 7 END ELSE 8 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.08832027006109666 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 0.15948809786325013 AS threshold, 41 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.046431757438988 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.383106330786845 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.082877736582965 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_4' AS feature, 0.25278400175766963 AS threshold, 59 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.185872441382346 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_9' AS feature, 0.11147518108269927 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.320730747426055 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.53408590705031 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.402367402942701 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.132319316160388 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.10094596947866064) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.24308559183819062) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, -0.10094596947866064 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.644295848564534 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.24308559183819062 AS threshold, 68 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.974304543271929 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.499867831215406 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.93378000304896 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.2246554720230154) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.0674565315930939) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.07878917437492716) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.2246554720230154 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.614944468013025 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -0.0674565315930939 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.888992279490639 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.532238280328205 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_3' AS feature, 0.07878917437492716 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.283805870831674 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.944248396957905 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.679178239450183 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.2666845188270548) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.003647720153940992) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.10440475857927412) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.2666845188270548 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, 0.003647720153940992 AS threshold, 74 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.95110927106992 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -0.10440475857927412 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.123762985796576 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.915190058103954 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.842641339917616 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.324525086126494 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.403388078360873 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.22576690962989465) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.041079821212818834) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.2238797169890801) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.06848360491608746) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.22576690962989465 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.524896565167953 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, 0.041079821212818834 AS threshold, 70 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.473189702021688 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_9' AS feature, -0.2238797169890801 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.724814779214718 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.257518751297727 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.69865160154831 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_10' AS feature, -0.06848360491608746 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.324410208523183 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.512148640060275 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.046420491601317 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, [DT_Output_6].[Estimator] AS [Estimator_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.25433760961634866) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.1580261257111939) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.03728400635432061) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.25433760961634866 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, -0.1580261257111939 AS threshold, 79 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.77330975262264 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.982252347845225 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_9' AS feature, 0.03728400635432061 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.588497772896622 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.621363173517368 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.785902514985226 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.132319316160386 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, [DT_Output_7].[Estimator] AS [Estimator_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.2972688050886649) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.11139197898820119) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.035593184986395854) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.2972688050886649 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.251342592108946 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.11139197898820119 AS threshold, 77 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.585575278935726 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.375095234475427 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_9' AS feature, -0.035593184986395854 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.031768352376364 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.237320037408224 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.412113210044167 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, [DT_Output_8].[Estimator] AS [Estimator_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.21403439699017562) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.14277657108851405) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.08065547469778156) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, -0.21403439699017562 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.588701760965574 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.90438761418432 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.14277657108851405 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.080380476112671 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.278686587313208 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_10' AS feature, 0.08065547469778156 AS threshold, 53 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.06621298130482 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.027277029171831 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.92536152722702 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, [DT_Output_9].[Estimator] AS [Estimator_9] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Estimator_0] AS [Estimator_0], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Estimator_1] AS [Estimator_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Estimator_2] AS [Estimator_2], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Estimator_3] AS [Estimator_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Estimator_4] AS [Estimator_4], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Estimator_5] AS [Estimator_5], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Estimator_6] AS [Estimator_6], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Estimator_7] AS [Estimator_7], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Estimator_8] AS [Estimator_8], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Estimator_9] AS [Estimator_9] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Estimator_0] / 10 + [RF_Join_CTE].[Estimator_1] / 10 + [RF_Join_CTE].[Estimator_2] / 10 + [RF_Join_CTE].[Estimator_3] / 10 + [RF_Join_CTE].[Estimator_4] / 10 + [RF_Join_CTE].[Estimator_5] / 10 + [RF_Join_CTE].[Estimator_6] / 10 + [RF_Join_CTE].[Estimator_7] / 10 + [RF_Join_CTE].[Estimator_8] / 10 + [RF_Join_CTE].[Estimator_9] / 10 AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]