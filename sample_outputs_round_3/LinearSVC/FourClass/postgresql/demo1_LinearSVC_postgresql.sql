-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", 0.1924089693068797 * "ADS"."Feature_0" + 0.19212711503413366 * "ADS"."Feature_1" + 0.05023440881065084 * "ADS"."Feature_2" + 0.12850792750399323 * "ADS"."Feature_3" + 0.16235363077498738 * "ADS"."Feature_4" + -0.21827335953341948 * "ADS"."Feature_5" + -0.1257508988698341 * "ADS"."Feature_6" + 0.18242090915542283 * "ADS"."Feature_7" + 0.08429286426073031 * "ADS"."Feature_8" + 0.032684039999162195 * "ADS"."Feature_9" + 0.06296894844659325 * "ADS"."Feature_10" + 0.12678948065201293 * "ADS"."Feature_11" + 0.04990963101036415 * "ADS"."Feature_12" + 0.13239753245835276 * "ADS"."Feature_13" + 0.09137392121905742 * "ADS"."Feature_14" + -0.10697682248928847 * "ADS"."Feature_15" + 0.24629185285004895 * "ADS"."Feature_16" + 0.12414930737001828 * "ADS"."Feature_17" + -0.0030102637696335826 * "ADS"."Feature_18" + 0.06603151490370972 * "ADS"."Feature_19" + -0.724489491527 AS "Score_0", -0.3316943853154738 * "ADS"."Feature_0" + 0.20876809214314188 * "ADS"."Feature_1" + -0.10065951219867188 * "ADS"."Feature_2" + -0.04706962891991253 * "ADS"."Feature_3" + -0.02339792572197456 * "ADS"."Feature_4" + 0.12483467876641596 * "ADS"."Feature_5" + 0.08256506757547073 * "ADS"."Feature_6" + -0.014356176575848287 * "ADS"."Feature_7" + 0.1646574168615599 * "ADS"."Feature_8" + -0.05827007470847902 * "ADS"."Feature_9" + 0.14207114804436313 * "ADS"."Feature_10" + -0.030507353602345442 * "ADS"."Feature_11" + -0.27330621890240875 * "ADS"."Feature_12" + 0.12046554403301993 * "ADS"."Feature_13" + 0.061037750448623106 * "ADS"."Feature_14" + -0.16372439034139102 * "ADS"."Feature_15" + -0.22127270352940295 * "ADS"."Feature_16" + -0.27701852380422226 * "ADS"."Feature_17" + -0.22762225171002012 * "ADS"."Feature_18" + -0.11894161674763379 * "ADS"."Feature_19" + -0.974580452582 AS "Score_1", -0.4860771475814837 * "ADS"."Feature_0" + -0.32838942320947445 * "ADS"."Feature_1" + 0.003906302410045088 * "ADS"."Feature_2" + 0.14825161041825421 * "ADS"."Feature_3" + 0.2239265823568059 * "ADS"."Feature_4" + 0.16714907485291722 * "ADS"."Feature_5" + -0.06539034527854469 * "ADS"."Feature_6" + -0.264812082491258 * "ADS"."Feature_7" + 0.11825539168790125 * "ADS"."Feature_8" + 0.3195251776981035 * "ADS"."Feature_9" + -0.11694816329051577 * "ADS"."Feature_10" + 0.00913183209747553 * "ADS"."Feature_11" + 0.6255525019048382 * "ADS"."Feature_12" + -0.43481951239052596 * "ADS"."Feature_13" + -0.15655413506920776 * "ADS"."Feature_14" + 0.3268401543758919 * "ADS"."Feature_15" + 0.16722681430678293 * "ADS"."Feature_16" + -0.21495083037080706 * "ADS"."Feature_17" + 0.04688061700549241 * "ADS"."Feature_18" + 0.44136723100955516 * "ADS"."Feature_19" + -1.28887727509 AS "Score_2", 0.3935524687949808 * "ADS"."Feature_0" + -0.2876957056165862 * "ADS"."Feature_1" + -0.1449971048238201 * "ADS"."Feature_2" + -0.0179129284289318 * "ADS"."Feature_3" + -0.31172050300771675 * "ADS"."Feature_4" + 0.06578485117207866 * "ADS"."Feature_5" + 0.011691827498576217 * "ADS"."Feature_6" + -0.031832006516404436 * "ADS"."Feature_7" + -0.4402306232681677 * "ADS"."Feature_8" + -0.07936860132920673 * "ADS"."Feature_9" + -0.11543425844636887 * "ADS"."Feature_10" + 0.09781017808352252 * "ADS"."Feature_11" + -0.12432869860720978 * "ADS"."Feature_12" + -0.00547923023043486 * "ADS"."Feature_13" + -0.19618352541542863 * "ADS"."Feature_14" + 0.1094601860670107 * "ADS"."Feature_15" + -0.043641273479847004 * "ADS"."Feature_16" + 0.2769607801690037 * "ADS"."Feature_17" + 0.08368265358822298 * "ADS"."Feature_18" + -0.16766303238996558 * "ADS"."Feature_19" + -0.724829684822 AS "Score_3" 
FROM "INPUT_DATA" AS "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT(53)) AS "Proba_0", CAST(NULL AS FLOAT(53)) AS "Proba_1", CAST(NULL AS FLOAT(53)) AS "Proba_2", CAST(NULL AS FLOAT(53)) AS "Proba_3", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_2", CAST(NULL AS FLOAT(53)) AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte