-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.045293675642 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.403935433998 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.279228613278 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.380452713619 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.141332804275 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.159487424321 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.12321974798 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0585200537588 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0830736241028 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.0106779898043 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.0575085546856 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0926623238848 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.101911867645 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0507361484907 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.052815587391 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.0285285882861 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.0591463417243 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.104232893701 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.690223531764 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.00317368832676 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.045293675642 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.403935433998 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.279228613278 AS impute_4, "ADS_imp_1_OUT".impute_5 - -0.380452713619 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.141332804275 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.159487424321 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.12321974798 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.0585200537588 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.0830736241028 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.0106779898043 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.0575085546856 AS impute_12, "ADS_imp_1_OUT".impute_13 - -0.0926623238848 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.101911867645 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.0507361484907 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.052815587391 AS impute_16, "ADS_imp_1_OUT".impute_17 - -0.0285285882861 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.0591463417243 AS impute_18, "ADS_imp_1_OUT".impute_19 - 0.104232893701 AS impute_19, "ADS_imp_1_OUT".impute_20 - 0.690223531764 AS impute_20, "ADS_imp_1_OUT".impute_21 - 0.00317368832676 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.0288201055474 + "CenteredDataForPCA".impute_3 * 0.0786741319905 + "CenteredDataForPCA".impute_4 * 0.342606152354 + "CenteredDataForPCA".impute_5 * 0.277930782271 + "CenteredDataForPCA".impute_6 * -0.0315818446704 + "CenteredDataForPCA".impute_7 * 0.00913915296613 + "CenteredDataForPCA".impute_8 * 0.0447677407029 + "CenteredDataForPCA".impute_9 * -0.00531997862028 + "CenteredDataForPCA".impute_10 * -0.0171367000309 + "CenteredDataForPCA".impute_11 * -0.467753030374 + "CenteredDataForPCA".impute_12 * 0.0743701863063 + "CenteredDataForPCA".impute_13 * -0.0273402123026 + "CenteredDataForPCA".impute_14 * -0.745504830736 + "CenteredDataForPCA".impute_15 * 0.00165425183779 + "CenteredDataForPCA".impute_16 * 0.0198079837389 + "CenteredDataForPCA".impute_17 * 0.0721001502953 + "CenteredDataForPCA".impute_18 * -0.0636676881139 + "CenteredDataForPCA".impute_19 * -0.0477951090577 + "CenteredDataForPCA".impute_20 * 0.00542082194026 + "CenteredDataForPCA".impute_21 * -0.04624513167 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.10301957481 + "CenteredDataForPCA".impute_3 * -0.417870092554 + "CenteredDataForPCA".impute_4 * 0.24137943491 + "CenteredDataForPCA".impute_5 * -0.377366260343 + "CenteredDataForPCA".impute_6 * -0.0631353221222 + "CenteredDataForPCA".impute_7 * -0.0234215278977 + "CenteredDataForPCA".impute_8 * 0.0448893375082 + "CenteredDataForPCA".impute_9 * -0.0081492298162 + "CenteredDataForPCA".impute_10 * 0.140874398403 + "CenteredDataForPCA".impute_11 * -0.107511174638 + "CenteredDataForPCA".impute_12 * 0.0302744561351 + "CenteredDataForPCA".impute_13 * 0.0266078448468 + "CenteredDataForPCA".impute_14 * 0.00324726144688 + "CenteredDataForPCA".impute_15 * -0.0538089303384 + "CenteredDataForPCA".impute_16 * 0.0317921738436 + "CenteredDataForPCA".impute_17 * 0.0143384296891 + "CenteredDataForPCA".impute_18 * 0.011143076959 + "CenteredDataForPCA".impute_19 * -0.0159981308802 + "CenteredDataForPCA".impute_20 * 0.75425722205 + "CenteredDataForPCA".impute_21 * -0.0324193558096 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.0783879716944 + "CenteredDataForPCA".impute_3 * -0.499879154289 + "CenteredDataForPCA".impute_4 * 0.149648434539 + "CenteredDataForPCA".impute_5 * 0.575712510952 + "CenteredDataForPCA".impute_6 * -0.0236018590484 + "CenteredDataForPCA".impute_7 * 0.0621270379757 + "CenteredDataForPCA".impute_8 * -0.059654953151 + "CenteredDataForPCA".impute_9 * -0.130037124381 + "CenteredDataForPCA".impute_10 * 0.0676342166616 + "CenteredDataForPCA".impute_11 * 0.558304154451 + "CenteredDataForPCA".impute_12 * 0.0260846901713 + "CenteredDataForPCA".impute_13 * -0.0290862841007 + "CenteredDataForPCA".impute_14 * -0.119990125506 + "CenteredDataForPCA".impute_15 * 0.123640830137 + "CenteredDataForPCA".impute_16 * -0.0720053910001 + "CenteredDataForPCA".impute_17 * 0.0581163472503 + "CenteredDataForPCA".impute_18 * -0.0449027640864 + "CenteredDataForPCA".impute_19 * 0.041270995711 + "CenteredDataForPCA".impute_20 * 0.0370856149197 + "CenteredDataForPCA".impute_21 * 0.0640719713139 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.23695498477 + "CenteredDataForPCA".impute_3 * 0.0610912325464 + "CenteredDataForPCA".impute_4 * 0.529176938723 + "CenteredDataForPCA".impute_5 * -0.0772351515072 + "CenteredDataForPCA".impute_6 * 0.227161741322 + "CenteredDataForPCA".impute_7 * -0.25338156167 + "CenteredDataForPCA".impute_8 * -0.14348573525 + "CenteredDataForPCA".impute_9 * 0.419367806276 + "CenteredDataForPCA".impute_10 * -0.303220246556 + "CenteredDataForPCA".impute_11 * 0.155886334828 + "CenteredDataForPCA".impute_12 * 0.0635443457889 + "CenteredDataForPCA".impute_13 * -0.1070875916 + "CenteredDataForPCA".impute_14 * 0.139880432925 + "CenteredDataForPCA".impute_15 * -0.0364932716639 + "CenteredDataForPCA".impute_16 * -0.124255927568 + "CenteredDataForPCA".impute_17 * 0.0494733813981 + "CenteredDataForPCA".impute_18 * -0.0775679335678 + "CenteredDataForPCA".impute_19 * -0.391560618426 + "CenteredDataForPCA".impute_20 * -0.108812813399 + "CenteredDataForPCA".impute_21 * -0.0123947682737 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.260950950957 + "CenteredDataForPCA".impute_3 * 0.155127558223 + "CenteredDataForPCA".impute_4 * 0.587395315124 + "CenteredDataForPCA".impute_5 * -0.115949171971 + "CenteredDataForPCA".impute_6 * -0.272424095968 + "CenteredDataForPCA".impute_7 * 0.204919799203 + "CenteredDataForPCA".impute_8 * 0.246872834424 + "CenteredDataForPCA".impute_9 * 0.0299161318809 + "CenteredDataForPCA".impute_10 * 0.349757590359 + "CenteredDataForPCA".impute_11 * 0.118176693416 + "CenteredDataForPCA".impute_12 * -0.29083014035 + "CenteredDataForPCA".impute_13 * -0.0688413458986 + "CenteredDataForPCA".impute_14 * 0.156211657644 + "CenteredDataForPCA".impute_15 * 0.07621565772 + "CenteredDataForPCA".impute_16 * 0.100966942558 + "CenteredDataForPCA".impute_17 * 0.113124677719 + "CenteredDataForPCA".impute_18 * 0.135087103594 + "CenteredDataForPCA".impute_19 * 0.132261802159 + "CenteredDataForPCA".impute_20 * -0.183917682824 + "CenteredDataForPCA".impute_21 * 0.151417101948 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.281015028805 + "CenteredDataForPCA".impute_3 * -0.0407385830549 + "CenteredDataForPCA".impute_4 * -0.116546916676 + "CenteredDataForPCA".impute_5 * 0.13822826615 + "CenteredDataForPCA".impute_6 * 0.108811046942 + "CenteredDataForPCA".impute_7 * 0.0345424171251 + "CenteredDataForPCA".impute_8 * 0.257410354361 + "CenteredDataForPCA".impute_9 * 0.382070460791 + "CenteredDataForPCA".impute_10 * 0.285109547406 + "CenteredDataForPCA".impute_11 * 0.00978619999975 + "CenteredDataForPCA".impute_12 * -0.0975852653502 + "CenteredDataForPCA".impute_13 * 0.194465978105 + "CenteredDataForPCA".impute_14 * -0.0962048096197 + "CenteredDataForPCA".impute_15 * -0.436138484698 + "CenteredDataForPCA".impute_16 * 0.170976289951 + "CenteredDataForPCA".impute_17 * -0.356768517799 + "CenteredDataForPCA".impute_18 * 0.0642464560219 + "CenteredDataForPCA".impute_19 * -0.0628332545067 + "CenteredDataForPCA".impute_20 * -0.0260988211596 + "CenteredDataForPCA".impute_21 * 0.409806083346 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.21607751745 + "CenteredDataForPCA".impute_3 * -0.114788144236 + "CenteredDataForPCA".impute_4 * -0.118474260758 + "CenteredDataForPCA".impute_5 * 0.0864514422508 + "CenteredDataForPCA".impute_6 * -0.082790533861 + "CenteredDataForPCA".impute_7 * 0.0972011743194 + "CenteredDataForPCA".impute_8 * -0.0797854143621 + "CenteredDataForPCA".impute_9 * 0.311932176847 + "CenteredDataForPCA".impute_10 * -0.233609248099 + "CenteredDataForPCA".impute_11 * 0.064336482544 + "CenteredDataForPCA".impute_12 * -0.419126360585 + "CenteredDataForPCA".impute_13 * 0.0886997702056 + "CenteredDataForPCA".impute_14 * -0.0243600102917 + "CenteredDataForPCA".impute_15 * -0.304085441969 + "CenteredDataForPCA".impute_16 * 0.434796319002 + "CenteredDataForPCA".impute_17 * 0.347256467885 + "CenteredDataForPCA".impute_18 * -0.246112900131 + "CenteredDataForPCA".impute_19 * 0.00725389602412 + "CenteredDataForPCA".impute_20 * 0.0622236289549 + "CenteredDataForPCA".impute_21 * -0.298689157125 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.0882896035034 + "CenteredDataForPCA".impute_3 * -0.000125426614671 + "CenteredDataForPCA".impute_4 * 0.0609612139548 + "CenteredDataForPCA".impute_5 * -0.025944826405 + "CenteredDataForPCA".impute_6 * -0.063416445387 + "CenteredDataForPCA".impute_7 * 0.433942114937 + "CenteredDataForPCA".impute_8 * -0.168551065046 + "CenteredDataForPCA".impute_9 * 0.163790861146 + "CenteredDataForPCA".impute_10 * -0.202011373542 + "CenteredDataForPCA".impute_11 * 0.0337735190575 + "CenteredDataForPCA".impute_12 * 0.631857177104 + "CenteredDataForPCA".impute_13 * 0.187194168065 + "CenteredDataForPCA".impute_14 * 0.0437209552672 + "CenteredDataForPCA".impute_15 * -0.00189963418808 + "CenteredDataForPCA".impute_16 * 0.343272668124 + "CenteredDataForPCA".impute_17 * 0.157561431962 + "CenteredDataForPCA".impute_18 * 0.289890165222 + "CenteredDataForPCA".impute_19 * 0.0393043661718 + "CenteredDataForPCA".impute_20 * -0.00328287216085 + "CenteredDataForPCA".impute_21 * 0.183978371888 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.0107287405936 + "CenteredDataForPCA".impute_3 * -0.0167792420603 + "CenteredDataForPCA".impute_4 * -0.204318166382 + "CenteredDataForPCA".impute_5 * 0.0400564866178 + "CenteredDataForPCA".impute_6 * -0.107204029571 + "CenteredDataForPCA".impute_7 * -0.218141149671 + "CenteredDataForPCA".impute_8 * -0.340803269883 + "CenteredDataForPCA".impute_9 * 0.0584635249098 + "CenteredDataForPCA".impute_10 * 0.241031527467 + "CenteredDataForPCA".impute_11 * -0.0761711773336 + "CenteredDataForPCA".impute_12 * -0.255282094141 + "CenteredDataForPCA".impute_13 * 0.065438089587 + "CenteredDataForPCA".impute_14 * -0.0762739266929 + "CenteredDataForPCA".impute_15 * 0.302113229853 + "CenteredDataForPCA".impute_16 * 0.12932483179 + "CenteredDataForPCA".impute_17 * 0.283448113086 + "CenteredDataForPCA".impute_18 * 0.435799145073 + "CenteredDataForPCA".impute_19 * -0.454391183177 + "CenteredDataForPCA".impute_20 * 0.0366969716215 + "CenteredDataForPCA".impute_21 * 0.228831141324 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.38825658751 + "CenteredDataForPCA".impute_3 * -0.0282342578261 + "CenteredDataForPCA".impute_4 * 0.0534933009937 + "CenteredDataForPCA".impute_5 * 0.000545880550264 + "CenteredDataForPCA".impute_6 * 0.0156367743188 + "CenteredDataForPCA".impute_7 * -0.297166475664 + "CenteredDataForPCA".impute_8 * -0.409006201881 + "CenteredDataForPCA".impute_9 * 0.183765180948 + "CenteredDataForPCA".impute_10 * 0.171623761724 + "CenteredDataForPCA".impute_11 * 0.00736083735987 + "CenteredDataForPCA".impute_12 * 0.11421610406 + "CenteredDataForPCA".impute_13 * -0.184782752981 + "CenteredDataForPCA".impute_14 * -0.01383574852 + "CenteredDataForPCA".impute_15 * 0.192995059132 + "CenteredDataForPCA".impute_16 * 0.334776313254 + "CenteredDataForPCA".impute_17 * -0.461341987401 + "CenteredDataForPCA".impute_18 * -0.270455926203 + "CenteredDataForPCA".impute_19 * 0.173981031972 + "CenteredDataForPCA".impute_20 * 0.030870938568 + "CenteredDataForPCA".impute_21 * 0.112124242218 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.0403091938878 + "CenteredDataForPCA".impute_3 * 0.0695280202541 + "CenteredDataForPCA".impute_4 * -0.0365497911244 + "CenteredDataForPCA".impute_5 * -0.0129024073721 + "CenteredDataForPCA".impute_6 * 0.138863440306 + "CenteredDataForPCA".impute_7 * -0.00304904752043 + "CenteredDataForPCA".impute_8 * -0.0862889041128 + "CenteredDataForPCA".impute_9 * 0.0949079186847 + "CenteredDataForPCA".impute_10 * 0.642181047497 + "CenteredDataForPCA".impute_11 * 0.0148141997876 + "CenteredDataForPCA".impute_12 * 0.328148317822 + "CenteredDataForPCA".impute_13 * 0.255389937166 + "CenteredDataForPCA".impute_14 * 0.0582914406963 + "CenteredDataForPCA".impute_15 * -0.0839852362297 + "CenteredDataForPCA".impute_16 * -0.142233221307 + "CenteredDataForPCA".impute_17 * 0.347691384693 + "CenteredDataForPCA".impute_18 * -0.389157277156 + "CenteredDataForPCA".impute_19 * -0.127253727073 + "CenteredDataForPCA".impute_20 * -0.0858959479856 + "CenteredDataForPCA".impute_21 * -0.210203986464 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.194764948556 + "CenteredDataForPCA".impute_3 * 0.0461726895966 + "CenteredDataForPCA".impute_4 * 0.0190595425821 + "CenteredDataForPCA".impute_5 * -0.0827026139676 + "CenteredDataForPCA".impute_6 * 0.264912768959 + "CenteredDataForPCA".impute_7 * 0.205572902325 + "CenteredDataForPCA".impute_8 * 0.17087072683 + "CenteredDataForPCA".impute_9 * -0.310358895932 + "CenteredDataForPCA".impute_10 * -0.0920600986786 + "CenteredDataForPCA".impute_11 * -0.0364505899402 + "CenteredDataForPCA".impute_12 * -0.102599628569 + "CenteredDataForPCA".impute_13 * 0.0747598372898 + "CenteredDataForPCA".impute_14 * 0.0443977156338 + "CenteredDataForPCA".impute_15 * 0.362260898228 + "CenteredDataForPCA".impute_16 * 0.393214543475 + "CenteredDataForPCA".impute_17 * 0.0561447239759 + "CenteredDataForPCA".impute_18 * -0.485650110011 + "CenteredDataForPCA".impute_19 * -0.238319768927 + "CenteredDataForPCA".impute_20 * 0.00408967797067 + "CenteredDataForPCA".impute_21 * 0.324362069222 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.326949469036 + "CenteredDataForPCA".impute_3 * 0.000494827252469 + "CenteredDataForPCA".impute_4 * -0.139126197207 + "CenteredDataForPCA".impute_5 * 0.0273475579096 + "CenteredDataForPCA".impute_6 * -0.351146700603 + "CenteredDataForPCA".impute_7 * 0.214007120475 + "CenteredDataForPCA".impute_8 * 0.193409034024 + "CenteredDataForPCA".impute_9 * 0.443914123131 + "CenteredDataForPCA".impute_10 * 0.0744409568111 + "CenteredDataForPCA".impute_11 * -0.0166393614209 + "CenteredDataForPCA".impute_12 * 0.0320129887528 + "CenteredDataForPCA".impute_13 * -0.0669162267009 + "CenteredDataForPCA".impute_14 * -0.0118106509652 + "CenteredDataForPCA".impute_15 * 0.520896115529 + "CenteredDataForPCA".impute_16 * 0.036218225391 + "CenteredDataForPCA".impute_17 * -0.196590533495 + "CenteredDataForPCA".impute_18 * -0.0645859211052 + "CenteredDataForPCA".impute_19 * -0.0362574606031 + "CenteredDataForPCA".impute_20 * -0.00737758204058 + "CenteredDataForPCA".impute_21 * -0.375681771023 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.167104544093 + "CenteredDataForPCA".impute_3 * 0.00794262912306 + "CenteredDataForPCA".impute_4 * 0.0910778346888 + "CenteredDataForPCA".impute_5 * -0.0146695414745 + "CenteredDataForPCA".impute_6 * -0.286963683743 + "CenteredDataForPCA".impute_7 * 0.366456483425 + "CenteredDataForPCA".impute_8 * -0.290652145949 + "CenteredDataForPCA".impute_9 * -0.194521912708 + "CenteredDataForPCA".impute_10 * -0.0493447954424 + "CenteredDataForPCA".impute_11 * 0.0151294200179 + "CenteredDataForPCA".impute_12 * -0.118186618654 + "CenteredDataForPCA".impute_13 * 0.310029660889 + "CenteredDataForPCA".impute_14 * 0.0123720179055 + "CenteredDataForPCA".impute_15 * -0.157993024433 + "CenteredDataForPCA".impute_16 * -0.200238133134 + "CenteredDataForPCA".impute_17 * -0.435274584562 + "CenteredDataForPCA".impute_18 * -0.119627683952 + "CenteredDataForPCA".impute_19 * -0.481962463 + "CenteredDataForPCA".impute_20 * -0.00898466071244 + "CenteredDataForPCA".impute_21 * -0.102190651534 AS anoova_15, "CenteredDataForPCA".impute_2 * 0.521413990794 + "CenteredDataForPCA".impute_3 * 0.10041846209 + "CenteredDataForPCA".impute_4 * 0.0149377725284 + "CenteredDataForPCA".impute_5 * -0.0493626353143 + "CenteredDataForPCA".impute_6 * -0.309810852564 + "CenteredDataForPCA".impute_7 * 0.159790148441 + "CenteredDataForPCA".impute_8 * -0.454577007256 + "CenteredDataForPCA".impute_9 * -0.14941310142 + "CenteredDataForPCA".impute_10 * 0.123561174628 + "CenteredDataForPCA".impute_11 * -0.053192317678 + "CenteredDataForPCA".impute_12 * -0.0261886825071 + "CenteredDataForPCA".impute_13 * -0.43857303734 + "CenteredDataForPCA".impute_14 * 0.0202955344073 + "CenteredDataForPCA".impute_15 * -0.273442948363 + "CenteredDataForPCA".impute_16 * 0.0818540009906 + "CenteredDataForPCA".impute_17 * 0.109458275777 + "CenteredDataForPCA".impute_18 * -0.149450248739 + "CenteredDataForPCA".impute_19 * 0.149867348395 + "CenteredDataForPCA".impute_20 * -0.070128089637 + "CenteredDataForPCA".impute_21 * 0.100979961314 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.130390404355 + "CenteredDataForPCA".impute_3 * -0.0293337688881 + "CenteredDataForPCA".impute_4 * -0.067165444167 + "CenteredDataForPCA".impute_5 * 0.0542523876026 + "CenteredDataForPCA".impute_6 * -0.0461322429784 + "CenteredDataForPCA".impute_7 * -0.0847302187521 + "CenteredDataForPCA".impute_8 * 0.326284263451 + "CenteredDataForPCA".impute_9 * -0.214147213163 + "CenteredDataForPCA".impute_10 * 0.120077287297 + "CenteredDataForPCA".impute_11 * 0.0807279970891 + "CenteredDataForPCA".impute_12 * 0.252155008099 + "CenteredDataForPCA".impute_13 * -0.499184751909 + "CenteredDataForPCA".impute_14 * 0.0398845777012 + "CenteredDataForPCA".impute_15 * -0.22471125611 + "CenteredDataForPCA".impute_16 * 0.333180676646 + "CenteredDataForPCA".impute_17 * -0.0795105585653 + "CenteredDataForPCA".impute_18 * 0.122797004414 + "CenteredDataForPCA".impute_19 * -0.476737042935 + "CenteredDataForPCA".impute_20 * -0.033203629785 + "CenteredDataForPCA".impute_21 * -0.257828174992 AS anoova_17, "CenteredDataForPCA".impute_2 * 0.21865714419 + "CenteredDataForPCA".impute_3 * 0.0567251875227 + "CenteredDataForPCA".impute_4 * 0.122267175592 + "CenteredDataForPCA".impute_5 * 0.0137366477322 + "CenteredDataForPCA".impute_6 * -0.475751677198 + "CenteredDataForPCA".impute_7 * -0.539668864423 + "CenteredDataForPCA".impute_8 * 0.106826121911 + "CenteredDataForPCA".impute_9 * -0.230520038869 + "CenteredDataForPCA".impute_10 * -0.0982824759492 + "CenteredDataForPCA".impute_11 * 0.0637767610661 + "CenteredDataForPCA".impute_12 * 0.148617606007 + "CenteredDataForPCA".impute_13 * 0.463904626396 + "CenteredDataForPCA".impute_14 * 0.0499129092188 + "CenteredDataForPCA".impute_15 * -0.053149751396 + "CenteredDataForPCA".impute_16 * 0.268928157697 + "CenteredDataForPCA".impute_17 * -0.00961762174323 + "CenteredDataForPCA".impute_18 * -0.0505222576347 + "CenteredDataForPCA".impute_19 * 0.0676550076797 + "CenteredDataForPCA".impute_20 * -0.106836604668 + "CenteredDataForPCA".impute_21 * -0.0663586995368 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.250585512408 + "CenteredDataForPCA".impute_3 * -0.050860121538 + "CenteredDataForPCA".impute_4 * -0.195151976558 + "CenteredDataForPCA".impute_5 * -0.00451945312775 + "CenteredDataForPCA".impute_6 * -0.463275893069 + "CenteredDataForPCA".impute_7 * -0.0903317014512 + "CenteredDataForPCA".impute_8 * 0.208273193955 + "CenteredDataForPCA".impute_9 * 0.19335262603 + "CenteredDataForPCA".impute_10 * -0.169115135949 + "CenteredDataForPCA".impute_11 * -0.0220307008176 + "CenteredDataForPCA".impute_12 * 0.148487104572 + "CenteredDataForPCA".impute_13 * -0.184905530378 + "CenteredDataForPCA".impute_14 * 0.00152547413184 + "CenteredDataForPCA".impute_15 * -0.0281825359093 + "CenteredDataForPCA".impute_16 * -0.31076436028 + "CenteredDataForPCA".impute_17 * 0.198869531205 + "CenteredDataForPCA".impute_18 * -0.334648162108 + "CenteredDataForPCA".impute_19 * -0.147476779031 + "CenteredDataForPCA".impute_20 * 0.0731628806307 + "CenteredDataForPCA".impute_21 * 0.481282227183 AS anoova_19, "CenteredDataForPCA".impute_2 * 3.30882222247e-16 + "CenteredDataForPCA".impute_3 * 0.0480098993517 + "CenteredDataForPCA".impute_4 * -0.116995921341 + "CenteredDataForPCA".impute_5 * -0.564647782246 + "CenteredDataForPCA".impute_6 * 1.60461921528e-16 + "CenteredDataForPCA".impute_7 * 9.45424294407e-17 + "CenteredDataForPCA".impute_8 * 1.26634813746e-16 + "CenteredDataForPCA".impute_9 * -4.07660016855e-17 + "CenteredDataForPCA".impute_10 * 8.67361737988e-17 + "CenteredDataForPCA".impute_11 * 0.537451708199 + "CenteredDataForPCA".impute_12 * 1.77375475419e-16 + "CenteredDataForPCA".impute_13 * -1.07119174642e-16 + "CenteredDataForPCA".impute_14 * -0.597432848327 + "CenteredDataForPCA".impute_15 * -7.3725747729e-18 + "CenteredDataForPCA".impute_16 * 1.69135538908e-16 + "CenteredDataForPCA".impute_17 * -1.15359111152e-16 + "CenteredDataForPCA".impute_18 * 8.63024929298e-17 + "CenteredDataForPCA".impute_19 * -1.14491749414e-16 + "CenteredDataForPCA".impute_20 * -0.139282228058 + "CenteredDataForPCA".impute_21 * -7.7195194681e-17 AS anoova_20, "CenteredDataForPCA".impute_2 * 1.54619642165e-16 + "CenteredDataForPCA".impute_3 * 0.706768164025 + "CenteredDataForPCA".impute_4 * -0.0123060976867 + "CenteredDataForPCA".impute_5 * 0.261247856987 + "CenteredDataForPCA".impute_6 * -8.32667268469e-17 + "CenteredDataForPCA".impute_7 * -9.02056207508e-17 + "CenteredDataForPCA".impute_8 * -1.66533453694e-16 + "CenteredDataForPCA".impute_9 * -8.32667268469e-17 + "CenteredDataForPCA".impute_10 * 7.8062556419e-18 + "CenteredDataForPCA".impute_11 * 0.321930638078 + "CenteredDataForPCA".impute_12 * -1.38777878078e-17 + "CenteredDataForPCA".impute_13 * 7.2858385991e-17 + "CenteredDataForPCA".impute_14 * -0.0315021913679 + "CenteredDataForPCA".impute_15 * -5.55111512313e-17 + "CenteredDataForPCA".impute_16 * 2.77555756156e-17 + "CenteredDataForPCA".impute_17 * 2.77555756156e-17 + "CenteredDataForPCA".impute_18 * 6.07153216592e-17 + "CenteredDataForPCA".impute_19 * 5.55111512313e-17 + "CenteredDataForPCA".impute_20 * 0.572228237424 + "CenteredDataForPCA".impute_21 * -9.71445146547e-17 AS anoova_21 
FROM "CenteredDataForPCA"), 
"IL" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", "ADS_ano_2_OUT".anoova_2 AS anoova_2, "ADS_ano_2_OUT".anoova_3 AS anoova_3, "ADS_ano_2_OUT".anoova_4 AS anoova_4, "ADS_ano_2_OUT".anoova_5 AS anoova_5, "ADS_ano_2_OUT".anoova_6 AS anoova_6, "ADS_ano_2_OUT".anoova_7 AS anoova_7, "ADS_ano_2_OUT".anoova_8 AS anoova_8, "ADS_ano_2_OUT".anoova_9 AS anoova_9, "ADS_ano_2_OUT".anoova_10 AS anoova_10, "ADS_ano_2_OUT".anoova_11 AS anoova_11, "ADS_ano_2_OUT".anoova_12 AS anoova_12, "ADS_ano_2_OUT".anoova_13 AS anoova_13, "ADS_ano_2_OUT".anoova_14 AS anoova_14, "ADS_ano_2_OUT".anoova_15 AS anoova_15, "ADS_ano_2_OUT".anoova_16 AS anoova_16, "ADS_ano_2_OUT".anoova_17 AS anoova_17, "ADS_ano_2_OUT".anoova_18 AS anoova_18, "ADS_ano_2_OUT".anoova_19 AS anoova_19, "ADS_ano_2_OUT".anoova_20 AS anoova_20, "ADS_ano_2_OUT".anoova_21 AS anoova_21 
FROM "ADS_ano_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.212125705197 * "IL".anoova_2 + 0.593147878391 * "IL".anoova_3 + -0.672120152656 * "IL".anoova_4 + -0.302442062798 * "IL".anoova_5 + -0.215183506935 * "IL".anoova_6 + -0.0213808123009 * "IL".anoova_7 + -0.236519277242 * "IL".anoova_8 + 0.0979167100804 * "IL".anoova_9 + -0.102506062577 * "IL".anoova_10 + 0.177090119505 * "IL".anoova_11 + -0.263391386526 * "IL".anoova_12 + -0.00747000474142 * "IL".anoova_13 + -0.156361448325 * "IL".anoova_14 + -0.162209250457 * "IL".anoova_15 + 0.371077949849 * "IL".anoova_16 + 0.313523543929 * "IL".anoova_17 + 0.0108294802937 * "IL".anoova_18 + -0.151038319783 * "IL".anoova_19 + 0.136246965827 * "IL".anoova_20 + -0.1609243212 * "IL".anoova_21 + 0.387794637722 AS "NEUR_1_1", 0.0742133024241 * "IL".anoova_2 + -0.298262435892 * "IL".anoova_3 + 0.231906469086 * "IL".anoova_4 + 0.041708807704 * "IL".anoova_5 + 0.299654438325 * "IL".anoova_6 + 0.0403075028033 * "IL".anoova_7 + -0.0611112607785 * "IL".anoova_8 + -0.0118809532751 * "IL".anoova_9 + 0.106577081008 * "IL".anoova_10 + 0.318220830844 * "IL".anoova_11 + -0.124889887341 * "IL".anoova_12 + 0.188088247953 * "IL".anoova_13 + -0.431856451192 * "IL".anoova_14 + -0.0812762253571 * "IL".anoova_15 + -0.0765071941794 * "IL".anoova_16 + -0.223662260532 * "IL".anoova_17 + -0.27287734415 * "IL".anoova_18 + 0.251196898902 * "IL".anoova_19 + 0.0625982105584 * "IL".anoova_20 + 0.0159254541644 * "IL".anoova_21 + -0.0170531443702 AS "NEUR_1_2", -0.0519259059016 * "IL".anoova_2 + 0.196638030783 * "IL".anoova_3 + 0.133728005954 * "IL".anoova_4 + -0.482457833213 * "IL".anoova_5 + -0.651573077969 * "IL".anoova_6 + 0.16597307872 * "IL".anoova_7 + -0.0575775162115 * "IL".anoova_8 + -0.145297409645 * "IL".anoova_9 + 0.239469496932 * "IL".anoova_10 + 0.0177159877167 * "IL".anoova_11 + -0.385181322892 * "IL".anoova_12 + -0.0476131616666 * "IL".anoova_13 + 0.192514564343 * "IL".anoova_14 + -0.0305283806544 * "IL".anoova_15 + 0.148540258106 * "IL".anoova_16 + 0.48665072172 * "IL".anoova_17 + 0.0457562371883 * "IL".anoova_18 + 0.193162309098 * "IL".anoova_19 + -0.211756355939 * "IL".anoova_20 + -0.192263245547 * "IL".anoova_21 + 0.195155767913 AS "NEUR_1_3", -0.129058380739 * "IL".anoova_2 + -0.128664696991 * "IL".anoova_3 + 0.54853816448 * "IL".anoova_4 + 0.223097358677 * "IL".anoova_5 + 0.0199957851801 * "IL".anoova_6 + -0.245398694203 * "IL".anoova_7 + -0.0671267771314 * "IL".anoova_8 + -0.199917330068 * "IL".anoova_9 + -0.448781740436 * "IL".anoova_10 + -0.261697317518 * "IL".anoova_11 + 0.335066515396 * "IL".anoova_12 + 0.134135300439 * "IL".anoova_13 + -0.450718108396 * "IL".anoova_14 + 0.214025387659 * "IL".anoova_15 + -0.218429256678 * "IL".anoova_16 + 0.217058651534 * "IL".anoova_17 + 0.0189713879196 * "IL".anoova_18 + 0.0310065873512 * "IL".anoova_19 + 0.228221402988 * "IL".anoova_20 + 0.169349259609 * "IL".anoova_21 + 0.424684516665 AS "NEUR_1_4", -0.0874315149272 * "IL".anoova_2 + 0.0834080592778 * "IL".anoova_3 + 0.369506155638 * "IL".anoova_4 + -0.142221467331 * "IL".anoova_5 + 0.0134610095958 * "IL".anoova_6 + 0.0203680165962 * "IL".anoova_7 + 0.447936854842 * "IL".anoova_8 + -0.588016557965 * "IL".anoova_9 + 0.174813109972 * "IL".anoova_10 + -0.306969824471 * "IL".anoova_11 + -0.0211087661674 * "IL".anoova_12 + -0.357078363032 * "IL".anoova_13 + -0.0950207524345 * "IL".anoova_14 + -0.132573550855 * "IL".anoova_15 + 0.480177588853 * "IL".anoova_16 + -0.20766591801 * "IL".anoova_17 + -0.255434018304 * "IL".anoova_18 + 0.337129156351 * "IL".anoova_19 + 0.0693704591088 * "IL".anoova_20 + 0.137120773585 * "IL".anoova_21 + 0.444926510306 AS "NEUR_1_5", 0.347085962311 * "IL".anoova_2 + 0.419645219893 * "IL".anoova_3 + 0.382559971107 * "IL".anoova_4 + 0.0646091099834 * "IL".anoova_5 + 0.158146751506 * "IL".anoova_6 + 0.145678745989 * "IL".anoova_7 + -0.489336036337 * "IL".anoova_8 + -0.201688445406 * "IL".anoova_9 + -0.181475836095 * "IL".anoova_10 + -0.153085088321 * "IL".anoova_11 + -0.363295065834 * "IL".anoova_12 + 0.138424430468 * "IL".anoova_13 + -0.141438405975 * "IL".anoova_14 + 0.297738226813 * "IL".anoova_15 + -0.134600823564 * "IL".anoova_16 + 0.299460331304 * "IL".anoova_17 + -0.30232231515 * "IL".anoova_18 + -0.152888344713 * "IL".anoova_19 + 0.295820530044 * "IL".anoova_20 + 0.00331626229425 * "IL".anoova_21 + 0.322029496493 AS "NEUR_1_6", -0.0567737901576 * "IL".anoova_2 + -0.223448182481 * "IL".anoova_3 + -0.188737972163 * "IL".anoova_4 + -0.411620724934 * "IL".anoova_5 + 0.283069813956 * "IL".anoova_6 + -0.44427696998 * "IL".anoova_7 + -0.152402059545 * "IL".anoova_8 + -0.0371026751412 * "IL".anoova_9 + 0.490010719925 * "IL".anoova_10 + 0.00150210980106 * "IL".anoova_11 + 0.176010084075 * "IL".anoova_12 + -0.0378083376654 * "IL".anoova_13 + 0.023753025918 * "IL".anoova_14 + -0.166465619151 * "IL".anoova_15 + 0.158822802739 * "IL".anoova_16 + -0.628728214126 * "IL".anoova_17 + -0.12063544871 * "IL".anoova_18 + 0.141080633144 * "IL".anoova_19 + -0.171399933626 * "IL".anoova_20 + -0.00847783339285 * "IL".anoova_21 + -0.496285833073 AS "NEUR_1_7", 0.267253615143 * "IL".anoova_2 + -0.498045358792 * "IL".anoova_3 + 0.262733179969 * "IL".anoova_4 + 0.495994140963 * "IL".anoova_5 + 0.13872183436 * "IL".anoova_6 + -0.419814685406 * "IL".anoova_7 + -0.26140469411 * "IL".anoova_8 + -0.216796969052 * "IL".anoova_9 + 0.184582620219 * "IL".anoova_10 + -0.165077802444 * "IL".anoova_11 + -0.508600851825 * "IL".anoova_12 + -0.221383781525 * "IL".anoova_13 + 0.386662538885 * "IL".anoova_14 + 0.327092612633 * "IL".anoova_15 + 0.0990695178228 * "IL".anoova_16 + -0.181063184806 * "IL".anoova_17 + 0.0990523585346 * "IL".anoova_18 + 0.514531328457 * "IL".anoova_19 + 0.185669257613 * "IL".anoova_20 + -0.237769705675 * "IL".anoova_21 + -0.103451989863 AS "NEUR_1_8" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3", CASE WHEN ("HL_BA_1"."NEUR_1_4" >= 0.0) THEN "HL_BA_1"."NEUR_1_4" ELSE 0.0 END AS "NEUR_1_4", CASE WHEN ("HL_BA_1"."NEUR_1_5" >= 0.0) THEN "HL_BA_1"."NEUR_1_5" ELSE 0.0 END AS "NEUR_1_5", CASE WHEN ("HL_BA_1"."NEUR_1_6" >= 0.0) THEN "HL_BA_1"."NEUR_1_6" ELSE 0.0 END AS "NEUR_1_6", CASE WHEN ("HL_BA_1"."NEUR_1_7" >= 0.0) THEN "HL_BA_1"."NEUR_1_7" ELSE 0.0 END AS "NEUR_1_7", CASE WHEN ("HL_BA_1"."NEUR_1_8" >= 0.0) THEN "HL_BA_1"."NEUR_1_8" ELSE 0.0 END AS "NEUR_1_8" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", 0.242870348221 * "HL_1_relu"."NEUR_1_1" + -0.244899178728 * "HL_1_relu"."NEUR_1_2" + -0.177769393216 * "HL_1_relu"."NEUR_1_3" + -0.469540283023 * "HL_1_relu"."NEUR_1_4" + -0.174640546097 * "HL_1_relu"."NEUR_1_5" + 0.716805366542 * "HL_1_relu"."NEUR_1_6" + 0.39716674348 * "HL_1_relu"."NEUR_1_7" + 0.411273403618 * "HL_1_relu"."NEUR_1_8" + 0.332992670853 AS "NEUR_2_1", -0.473433938699 * "HL_1_relu"."NEUR_1_1" + 0.0552172847664 * "HL_1_relu"."NEUR_1_2" + 0.375972970629 * "HL_1_relu"."NEUR_1_3" + -0.629466763908 * "HL_1_relu"."NEUR_1_4" + -0.156297741566 * "HL_1_relu"."NEUR_1_5" + 0.160727184098 * "HL_1_relu"."NEUR_1_6" + -0.25724888282 * "HL_1_relu"."NEUR_1_7" + 0.209950217427 * "HL_1_relu"."NEUR_1_8" + 0.243956215518 AS "NEUR_2_2", 0.198177065201 * "HL_1_relu"."NEUR_1_1" + -0.00771422799816 * "HL_1_relu"."NEUR_1_2" + 0.233835313558 * "HL_1_relu"."NEUR_1_3" + 0.129024555573 * "HL_1_relu"."NEUR_1_4" + 0.0298400016958 * "HL_1_relu"."NEUR_1_5" + -0.288770410885 * "HL_1_relu"."NEUR_1_6" + -0.0853913445572 * "HL_1_relu"."NEUR_1_7" + 0.388902613686 * "HL_1_relu"."NEUR_1_8" + -0.29008921923 AS "NEUR_2_3", -0.698619133915 * "HL_1_relu"."NEUR_1_1" + -0.0395983742385 * "HL_1_relu"."NEUR_1_2" + 0.148167268108 * "HL_1_relu"."NEUR_1_3" + 0.149542725413 * "HL_1_relu"."NEUR_1_4" + 0.554297904147 * "HL_1_relu"."NEUR_1_5" + -0.0846294033552 * "HL_1_relu"."NEUR_1_6" + -0.322924786313 * "HL_1_relu"."NEUR_1_7" + -0.244283226031 * "HL_1_relu"."NEUR_1_8" + 0.260157946651 AS "NEUR_2_4", -0.171361511207 * "HL_1_relu"."NEUR_1_1" + 0.491042550372 * "HL_1_relu"."NEUR_1_2" + -0.466241088792 * "HL_1_relu"."NEUR_1_3" + -0.101744591942 * "HL_1_relu"."NEUR_1_4" + 0.210895753488 * "HL_1_relu"."NEUR_1_5" + -0.0332394697712 * "HL_1_relu"."NEUR_1_6" + 0.443871429483 * "HL_1_relu"."NEUR_1_7" + -0.000616642599899 * "HL_1_relu"."NEUR_1_8" + -0.487103274718 AS "NEUR_2_5", -0.689568187601 * "HL_1_relu"."NEUR_1_1" + 0.113333095885 * "HL_1_relu"."NEUR_1_2" + -0.298181916264 * "HL_1_relu"."NEUR_1_3" + 0.658579118748 * "HL_1_relu"."NEUR_1_4" + 0.42897158295 * "HL_1_relu"."NEUR_1_5" + -0.48369001544 * "HL_1_relu"."NEUR_1_6" + -0.179722568143 * "HL_1_relu"."NEUR_1_7" + 0.0556400844324 * "HL_1_relu"."NEUR_1_8" + -0.0991386518818 AS "NEUR_2_6", 0.195684722023 * "HL_1_relu"."NEUR_1_1" + 0.234118925784 * "HL_1_relu"."NEUR_1_2" + -0.66926127983 * "HL_1_relu"."NEUR_1_3" + 0.555717928978 * "HL_1_relu"."NEUR_1_4" + -0.176993511369 * "HL_1_relu"."NEUR_1_5" + -0.463734465004 * "HL_1_relu"."NEUR_1_6" + 0.213346653881 * "HL_1_relu"."NEUR_1_7" + 0.578494755524 * "HL_1_relu"."NEUR_1_8" + 0.603833957885 AS "NEUR_2_7", -0.48435200824 * "HL_1_relu"."NEUR_1_1" + 0.28659621747 * "HL_1_relu"."NEUR_1_2" + 0.00203990720064 * "HL_1_relu"."NEUR_1_3" + -0.196486262715 * "HL_1_relu"."NEUR_1_4" + 0.445845010808 * "HL_1_relu"."NEUR_1_5" + 0.0550761966782 * "HL_1_relu"."NEUR_1_6" + -0.173226319907 * "HL_1_relu"."NEUR_1_7" + -0.0662863665332 * "HL_1_relu"."NEUR_1_8" + 0.572216646389 AS "NEUR_2_8", -0.0495862930321 * "HL_1_relu"."NEUR_1_1" + 0.192558019261 * "HL_1_relu"."NEUR_1_2" + -0.312607489408 * "HL_1_relu"."NEUR_1_3" + 0.119009653003 * "HL_1_relu"."NEUR_1_4" + -0.303912975254 * "HL_1_relu"."NEUR_1_5" + -0.192533595266 * "HL_1_relu"."NEUR_1_6" + -0.228841814725 * "HL_1_relu"."NEUR_1_7" + -0.339350994506 * "HL_1_relu"."NEUR_1_8" + -0.241233952189 AS "NEUR_2_9", 0.634534740326 * "HL_1_relu"."NEUR_1_1" + -0.311843789397 * "HL_1_relu"."NEUR_1_2" + 0.186690111845 * "HL_1_relu"."NEUR_1_3" + -0.369928786668 * "HL_1_relu"."NEUR_1_4" + 0.392951606832 * "HL_1_relu"."NEUR_1_5" + -0.0745625625432 * "HL_1_relu"."NEUR_1_6" + -0.0912851001505 * "HL_1_relu"."NEUR_1_7" + -0.524010786197 * "HL_1_relu"."NEUR_1_8" + 0.448258885805 AS "NEUR_2_10", 0.452588885823 * "HL_1_relu"."NEUR_1_1" + -0.0542939077464 * "HL_1_relu"."NEUR_1_2" + 0.0468371457029 * "HL_1_relu"."NEUR_1_3" + -0.355500726547 * "HL_1_relu"."NEUR_1_4" + 0.342329851926 * "HL_1_relu"."NEUR_1_5" + -0.0231573015397 * "HL_1_relu"."NEUR_1_6" + -0.320973367505 * "HL_1_relu"."NEUR_1_7" + -0.437370440916 * "HL_1_relu"."NEUR_1_8" + -0.098632348293 AS "NEUR_2_11", -0.353834444484 * "HL_1_relu"."NEUR_1_1" + -0.1608260017 * "HL_1_relu"."NEUR_1_2" + -0.176951538476 * "HL_1_relu"."NEUR_1_3" + 0.449739023922 * "HL_1_relu"."NEUR_1_4" + -0.151300618042 * "HL_1_relu"."NEUR_1_5" + 0.278612392015 * "HL_1_relu"."NEUR_1_6" + 0.643374387785 * "HL_1_relu"."NEUR_1_7" + 0.577591781985 * "HL_1_relu"."NEUR_1_8" + 0.668135095741 AS "NEUR_2_12" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5", CASE WHEN ("HL_BA_2"."NEUR_2_6" >= 0.0) THEN "HL_BA_2"."NEUR_2_6" ELSE 0.0 END AS "NEUR_2_6", CASE WHEN ("HL_BA_2"."NEUR_2_7" >= 0.0) THEN "HL_BA_2"."NEUR_2_7" ELSE 0.0 END AS "NEUR_2_7", CASE WHEN ("HL_BA_2"."NEUR_2_8" >= 0.0) THEN "HL_BA_2"."NEUR_2_8" ELSE 0.0 END AS "NEUR_2_8", CASE WHEN ("HL_BA_2"."NEUR_2_9" >= 0.0) THEN "HL_BA_2"."NEUR_2_9" ELSE 0.0 END AS "NEUR_2_9", CASE WHEN ("HL_BA_2"."NEUR_2_10" >= 0.0) THEN "HL_BA_2"."NEUR_2_10" ELSE 0.0 END AS "NEUR_2_10", CASE WHEN ("HL_BA_2"."NEUR_2_11" >= 0.0) THEN "HL_BA_2"."NEUR_2_11" ELSE 0.0 END AS "NEUR_2_11", CASE WHEN ("HL_BA_2"."NEUR_2_12" >= 0.0) THEN "HL_BA_2"."NEUR_2_12" ELSE 0.0 END AS "NEUR_2_12" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 0.315454672583 * "HL_2_relu"."NEUR_2_1" + -0.29692079919 * "HL_2_relu"."NEUR_2_2" + -0.163026350432 * "HL_2_relu"."NEUR_2_3" + -0.133721836183 * "HL_2_relu"."NEUR_2_4" + 0.664519317324 * "HL_2_relu"."NEUR_2_5" + -0.70315217084 * "HL_2_relu"."NEUR_2_6" + 0.76113871413 * "HL_2_relu"."NEUR_2_7" + -0.021298475706 * "HL_2_relu"."NEUR_2_8" + 0.235004139249 * "HL_2_relu"."NEUR_2_9" + -0.640440482117 * "HL_2_relu"."NEUR_2_10" + -0.353166066737 * "HL_2_relu"."NEUR_2_11" + -0.127375609204 * "HL_2_relu"."NEUR_2_12" + -0.143025981258 AS "NEUR_3_1", 0.167853529489 * "HL_2_relu"."NEUR_2_1" + 0.589417924754 * "HL_2_relu"."NEUR_2_2" + -0.42096987019 * "HL_2_relu"."NEUR_2_3" + 0.425135993532 * "HL_2_relu"."NEUR_2_4" + -0.395965521699 * "HL_2_relu"."NEUR_2_5" + 0.60891652459 * "HL_2_relu"."NEUR_2_6" + 0.524979632781 * "HL_2_relu"."NEUR_2_7" + -0.135519266042 * "HL_2_relu"."NEUR_2_8" + -0.558833012404 * "HL_2_relu"."NEUR_2_9" + -0.69487261274 * "HL_2_relu"."NEUR_2_10" + -0.177544376108 * "HL_2_relu"."NEUR_2_11" + -0.307064818323 * "HL_2_relu"."NEUR_2_12" + -0.163709733389 AS "NEUR_3_2", 0.353399418816 * "HL_2_relu"."NEUR_2_1" + 0.058414729047 * "HL_2_relu"."NEUR_2_2" + 0.543084042352 * "HL_2_relu"."NEUR_2_3" + -0.352406283359 * "HL_2_relu"."NEUR_2_4" + -0.0918718973741 * "HL_2_relu"."NEUR_2_5" + 0.471742495403 * "HL_2_relu"."NEUR_2_6" + -0.304081056915 * "HL_2_relu"."NEUR_2_7" + -0.609463788905 * "HL_2_relu"."NEUR_2_8" + 0.291300314225 * "HL_2_relu"."NEUR_2_9" + 0.292671175172 * "HL_2_relu"."NEUR_2_10" + 0.701064753615 * "HL_2_relu"."NEUR_2_11" + -0.700366135677 * "HL_2_relu"."NEUR_2_12" + 0.122203093858 AS "NEUR_3_3", 0.669523918468 * "HL_2_relu"."NEUR_2_1" + -0.495738511025 * "HL_2_relu"."NEUR_2_2" + 0.0595761377993 * "HL_2_relu"."NEUR_2_3" + -0.252523246921 * "HL_2_relu"."NEUR_2_4" + -0.527426704179 * "HL_2_relu"."NEUR_2_5" + 0.690716731867 * "HL_2_relu"."NEUR_2_6" + -0.605456729429 * "HL_2_relu"."NEUR_2_7" + -0.399917905537 * "HL_2_relu"."NEUR_2_8" + -0.39102964351 * "HL_2_relu"."NEUR_2_9" + -0.170477883107 * "HL_2_relu"."NEUR_2_10" + 0.156066143494 * "HL_2_relu"."NEUR_2_11" + -0.0664276613161 * "HL_2_relu"."NEUR_2_12" + 0.368542787719 AS "NEUR_3_4" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1", "OL_BA"."NEUR_3_2" AS "NEUR_3_2", "OL_BA"."NEUR_3_3" AS "NEUR_3_3", "OL_BA"."NEUR_3_4" AS "NEUR_3_4" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "Score_0", "OL_softmax"."NEUR_3_2" AS "Score_1", "OL_softmax"."NEUR_3_3" AS "Score_2", "OL_softmax"."NEUR_3_4" AS "Score_3", CAST(NULL AS FLOAT(53)) AS "Proba_0", CAST(NULL AS FLOAT(53)) AS "Proba_1", CAST(NULL AS FLOAT(53)) AS "Proba_2", CAST(NULL AS FLOAT(53)) AS "Proba_3", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_2", CAST(NULL AS FLOAT(53)) AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "OL_softmax"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte