-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, arg_max_cte.`Proba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`Proba_3` IS NULL OR arg_max_cte.`Proba_3` > 0.0) THEN ln(arg_max_cte.`Proba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM (SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, (SELECT min(score_class_union.class) AS min_1 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_max.`max_LogProba` = score_class_union.`LogProba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_max.`max_Proba` = score_class_union.`Proba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_max.`max_Score` = score_class_union.`Score` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM (SELECT `OVO_Scores`.`KEY` AS `KEY`, `OVO_Scores`.`Score_0` AS `Score_0`, `OVO_Scores`.`Score_1` AS `Score_1`, `OVO_Scores`.`Score_2` AS `Score_2`, `OVO_Scores`.`Score_3` AS `Score_3`, `OVO_Scores`.`Proba_0` AS `Proba_0`, `OVO_Scores`.`Proba_1` AS `Proba_1`, `OVO_Scores`.`Proba_2` AS `Proba_2`, `OVO_Scores`.`Proba_3` AS `Proba_3`, `OVO_Scores`.`LogProba_0` AS `LogProba_0`, `OVO_Scores`.`LogProba_1` AS `LogProba_1`, `OVO_Scores`.`LogProba_2` AS `LogProba_2`, `OVO_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVO_Decisions_CTE`.join_key_0 AS `KEY`, (1.0 - `OVO_Decisions_CTE`.dec_0_1) + (1.0 - `OVO_Decisions_CTE`.dec_0_2) + (1.0 - `OVO_Decisions_CTE`.dec_0_3) AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, `OVO_Decisions_CTE`.dec_0_1 + (1.0 - `OVO_Decisions_CTE`.dec_1_2) + (1.0 - `OVO_Decisions_CTE`.dec_1_3) AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, `OVO_Decisions_CTE`.dec_0_2 + `OVO_Decisions_CTE`.dec_1_2 + (1.0 - `OVO_Decisions_CTE`.dec_2_3) AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, `OVO_Decisions_CTE`.dec_0_3 + `OVO_Decisions_CTE`.dec_1_3 + `OVO_Decisions_CTE`.dec_2_3 AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM (SELECT `OVO_Decision_0_1`.join_key_0 AS join_key_0, `OVO_Decision_0_1`.dec_0_1 AS dec_0_1, `OVO_Decision_0_2`.join_key_1 AS join_key_1, `OVO_Decision_0_2`.dec_0_2 AS dec_0_2, `OVO_Decision_0_3`.join_key_2 AS join_key_2, `OVO_Decision_0_3`.dec_0_3 AS dec_0_3, `OVO_Decision_1_2`.join_key_3 AS join_key_3, `OVO_Decision_1_2`.dec_1_2 AS dec_1_2, `OVO_Decision_1_3`.join_key_4 AS join_key_4, `OVO_Decision_1_3`.dec_1_3 AS dec_1_3, `OVO_Decision_2_3`.join_key_5 AS join_key_5, `OVO_Decision_2_3`.dec_2_3 AS dec_2_3 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Decision` AS dec_0_1 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4377153813838959) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4377153813838959 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.85 AS `Proba_0`, -0.162518929498 AS `LogProba_0`, 0.15 AS `Proba_1`, -1.89711998489 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2413793103448276 AS `Proba_0`, -1.42138568093 AS `LogProba_0`, 0.7586206896551724 AS `Proba_1`, -0.276253376628 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVO_Decision_0_1` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Decision` AS dec_0_2 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= -0.668930172920227) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6678128242492676) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, -0.668930172920227 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0`, -0.73396917508 AS `LogProba_0`, 0.52 AS `Proba_1`, -0.653926467407 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6678128242492676 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2571428571428571 AS `Proba_0`, -1.35812348415 AS `LogProba_0`, 0.7428571428571429 AS `Proba_1`, -0.297251523468 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1 AS `Proba_0`, -2.30258509299 AS `LogProba_0`, 0.9 AS `Proba_1`, -0.105360515658 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVO_Decision_0_2` ON `OVO_Decision_0_1`.join_key_0 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Decision` AS dec_0_3 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.16781368851661682) THEN CASE WHEN (`ADS`.`Feature_17` <= 0.2817765772342682) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.16781368851661682 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4897959183673469 AS `Proba_0`, -0.713766467763 AS `LogProba_0`, 0.5102040816326531 AS `Proba_1`, -0.672944473242 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_17' AS feature, 0.2817765772342682 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0`, -0.405465108108 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21052631578947367 AS `Proba_0`, -1.55814461805 AS `LogProba_0`, 0.7894736842105263 AS `Proba_1`, -0.236388778064 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVO_Decision_0_3` ON `OVO_Decision_0_3`.join_key_2 = `OVO_Decision_0_2`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Decision` AS dec_1_2 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_13` <= 0.06966458261013031) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_13' AS feature, 0.06966458261013031 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.49019607843137253 AS `Proba_0`, -0.712949807856 AS `LogProba_0`, 0.5098039215686274 AS `Proba_1`, -0.673729094703 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.92 AS `Proba_0`, -0.0833816089391 AS `LogProba_0`, 0.08 AS `Proba_1`, -2.52572864431 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07692307692307693 AS `Proba_0`, -2.56494935746 AS `LogProba_0`, 0.9230769230769231 AS `Proba_1`, -0.0800427076735 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVO_Decision_1_2` ON `OVO_Decision_1_2`.join_key_3 = `OVO_Decision_0_3`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Decision` AS dec_1_3 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0` AS `Proba_0`, `DT_node_data_4`.`LogProba_0` AS `LogProba_0`, `DT_node_data_4`.`Proba_1` AS `Proba_1`, `DT_node_data_4`.`LogProba_1` AS `LogProba_1`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.5184763669967651) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.37654978036880493) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.5184763669967651 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15789473684210525 AS `Proba_0`, -1.8458266905 AS `LogProba_0`, 0.8421052631578947 AS `Proba_1`, -0.171850256927 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.37654978036880493 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7096774193548387 AS `Proba_0`, -0.342944751127 AS `LogProba_0`, 0.2903225806451613 AS `Proba_1`, -1.23676262715 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `OVO_Decision_1_3` ON `OVO_Decision_1_3`.join_key_4 = `OVO_Decision_1_2`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Decision` AS dec_2_3 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0` AS `Proba_0`, `DT_node_data_5`.`LogProba_0` AS `LogProba_0`, `DT_node_data_5`.`Proba_1` AS `Proba_1`, `DT_node_data_5`.`LogProba_1` AS `LogProba_1`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -1.7633575201034546) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= 0.6334265470504761) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.7633575201034546 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5098039215686274 AS `Proba_0`, -0.673729094703 AS `LogProba_0`, 0.49019607843137253 AS `Proba_1`, -0.712949807856 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9473684210526315 AS `Proba_0`, -0.0540672212703 AS `LogProba_0`, 0.05263157894736842 AS `Proba_1`, -2.94443897917 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.6334265470504761 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0`, -1.38629436112 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5333333333333333 AS `Proba_0`, -0.628608659422 AS `LogProba_0`, 0.4666666666666667 AS `Proba_1`, -0.762140052047 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `OVO_Decision_2_3` ON `OVO_Decision_2_3`.join_key_5 = `OVO_Decision_1_3`.join_key_4) AS `OVO_Decisions_CTE`) AS `OVO_Scores`) AS orig_cte) AS score_max) AS arg_max_cte