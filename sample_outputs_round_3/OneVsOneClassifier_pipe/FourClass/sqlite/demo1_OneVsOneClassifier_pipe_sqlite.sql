-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.390354246243 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0561898628082 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.101941947419 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0437647102046 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0201436800057 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.12176731597 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0092854573463 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0289289147384 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0813026718108 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.0994469658848 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.204033281381 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.322474819131 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0446873621239 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0662686950477 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.393132970671 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.175110431933 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.00478508939039 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.160408814182 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0367536198467 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.062941856724 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.390354246243 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.0561898628082 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.101941947419 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.0437647102046 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.0201436800057 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.12176731597 AS impute_7, "ADS_imp_1_OUT".impute_8 - -0.0092854573463 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.0289289147384 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.0813026718108 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.0994469658848 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.204033281381 AS impute_12, "ADS_imp_1_OUT".impute_13 - -0.322474819131 AS impute_13, "ADS_imp_1_OUT".impute_14 - -0.0446873621239 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.0662686950477 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.393132970671 AS impute_16, "ADS_imp_1_OUT".impute_17 - -0.175110431933 AS impute_17, "ADS_imp_1_OUT".impute_18 - 0.00478508939039 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.160408814182 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.0367536198467 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.062941856724 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.193599961478 + "CenteredDataForPCA".impute_3 * 0.0503495114356 + "CenteredDataForPCA".impute_4 * -0.00747623034579 + "CenteredDataForPCA".impute_5 * 0.0730569438924 + "CenteredDataForPCA".impute_6 * 0.0505364743893 + "CenteredDataForPCA".impute_7 * -0.00416690576565 + "CenteredDataForPCA".impute_8 * 0.0661727322596 + "CenteredDataForPCA".impute_9 * 0.106379954757 + "CenteredDataForPCA".impute_10 * -0.048461528772 + "CenteredDataForPCA".impute_11 * -0.790515178495 + "CenteredDataForPCA".impute_12 * -0.138285711128 + "CenteredDataForPCA".impute_13 * 0.230085926387 + "CenteredDataForPCA".impute_14 * -0.324153629515 + "CenteredDataForPCA".impute_15 * 0.0167481831314 + "CenteredDataForPCA".impute_16 * -0.348315574445 + "CenteredDataForPCA".impute_17 * 0.044638425883 + "CenteredDataForPCA".impute_18 * 0.0773512631226 + "CenteredDataForPCA".impute_19 * 0.0149567303764 + "CenteredDataForPCA".impute_20 * -0.0458158476802 + "CenteredDataForPCA".impute_21 * 0.00450434029022 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.20788217636 + "CenteredDataForPCA".impute_3 * -0.00955237394881 + "CenteredDataForPCA".impute_4 * -0.00769550722586 + "CenteredDataForPCA".impute_5 * -0.118302029198 + "CenteredDataForPCA".impute_6 * -0.0620445295862 + "CenteredDataForPCA".impute_7 * 0.0595547352142 + "CenteredDataForPCA".impute_8 * 0.1196105026 + "CenteredDataForPCA".impute_9 * -0.0584421764497 + "CenteredDataForPCA".impute_10 * 0.0944589099298 + "CenteredDataForPCA".impute_11 * 0.0407354497535 + "CenteredDataForPCA".impute_12 * 0.505946955787 + "CenteredDataForPCA".impute_13 * 0.416726996778 + "CenteredDataForPCA".impute_14 * -0.58313624785 + "CenteredDataForPCA".impute_15 * -0.0383960274554 + "CenteredDataForPCA".impute_16 * 0.365574907125 + "CenteredDataForPCA".impute_17 * 0.000813282622131 + "CenteredDataForPCA".impute_18 * -0.0112683035068 + "CenteredDataForPCA".impute_19 * -0.0161610309876 + "CenteredDataForPCA".impute_20 * -0.0415705637246 + "CenteredDataForPCA".impute_21 * -0.00332551828938 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.470344192671 + "CenteredDataForPCA".impute_3 * 0.104524062364 + "CenteredDataForPCA".impute_4 * 0.036860228124 + "CenteredDataForPCA".impute_5 * -0.0147303079431 + "CenteredDataForPCA".impute_6 * 0.0787949639429 + "CenteredDataForPCA".impute_7 * -0.126523295644 + "CenteredDataForPCA".impute_8 * -0.0110992079187 + "CenteredDataForPCA".impute_9 * -0.0700406788047 + "CenteredDataForPCA".impute_10 * -0.0401586182159 + "CenteredDataForPCA".impute_11 * -0.0164519041985 + "CenteredDataForPCA".impute_12 * 0.450815046196 + "CenteredDataForPCA".impute_13 * -0.38853082364 + "CenteredDataForPCA".impute_14 * -0.102893863565 + "CenteredDataForPCA".impute_15 * -0.0493615702147 + "CenteredDataForPCA".impute_16 * -0.584982610686 + "CenteredDataForPCA".impute_17 * -0.108902711322 + "CenteredDataForPCA".impute_18 * -0.0389017598277 + "CenteredDataForPCA".impute_19 * -0.0408461639799 + "CenteredDataForPCA".impute_20 * -0.00679497017865 + "CenteredDataForPCA".impute_21 * -0.112427048819 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.0212502324295 + "CenteredDataForPCA".impute_3 * 0.0595593450284 + "CenteredDataForPCA".impute_4 * 0.0804739506544 + "CenteredDataForPCA".impute_5 * -0.0784994219866 + "CenteredDataForPCA".impute_6 * -0.0154261905782 + "CenteredDataForPCA".impute_7 * -0.117602098944 + "CenteredDataForPCA".impute_8 * -0.309096068291 + "CenteredDataForPCA".impute_9 * 0.553713278956 + "CenteredDataForPCA".impute_10 * -0.163917094248 + "CenteredDataForPCA".impute_11 * 0.0414629426593 + "CenteredDataForPCA".impute_12 * 0.103911894953 + "CenteredDataForPCA".impute_13 * 0.0263385394399 + "CenteredDataForPCA".impute_14 * -0.00346348755833 + "CenteredDataForPCA".impute_15 * -0.303330760516 + "CenteredDataForPCA".impute_16 * 0.034913909333 + "CenteredDataForPCA".impute_17 * -0.398049516343 + "CenteredDataForPCA".impute_18 * 0.3212977166 + "CenteredDataForPCA".impute_19 * 0.0139869223057 + "CenteredDataForPCA".impute_20 * -0.0254583307771 + "CenteredDataForPCA".impute_21 * 0.413904074013 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.0465567869781 + "CenteredDataForPCA".impute_3 * -0.2564217341 + "CenteredDataForPCA".impute_4 * -0.446232459608 + "CenteredDataForPCA".impute_5 * -0.195274862694 + "CenteredDataForPCA".impute_6 * 0.0517274505479 + "CenteredDataForPCA".impute_7 * 0.0579562018688 + "CenteredDataForPCA".impute_8 * 0.192028391585 + "CenteredDataForPCA".impute_9 * 0.53373924875 + "CenteredDataForPCA".impute_10 * 0.227414279434 + "CenteredDataForPCA".impute_11 * 0.0139721857139 + "CenteredDataForPCA".impute_12 * -0.0467879837561 + "CenteredDataForPCA".impute_13 * -0.0456624608787 + "CenteredDataForPCA".impute_14 * 0.0135116113284 + "CenteredDataForPCA".impute_15 * 0.0131999139966 + "CenteredDataForPCA".impute_16 * -0.0275242919611 + "CenteredDataForPCA".impute_17 * -0.0398335043523 + "CenteredDataForPCA".impute_18 * -0.0935152690139 + "CenteredDataForPCA".impute_19 * -0.459243825685 + "CenteredDataForPCA".impute_20 * 0.024334086998 + "CenteredDataForPCA".impute_21 * -0.296492238493 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.00952085218723 + "CenteredDataForPCA".impute_3 * 0.39519706328 + "CenteredDataForPCA".impute_4 * 0.381649528595 + "CenteredDataForPCA".impute_5 * 0.147090615345 + "CenteredDataForPCA".impute_6 * -0.0572014035506 + "CenteredDataForPCA".impute_7 * 0.0424729256562 + "CenteredDataForPCA".impute_8 * -0.149062671516 + "CenteredDataForPCA".impute_9 * 0.138291099483 + "CenteredDataForPCA".impute_10 * -0.0229415113172 + "CenteredDataForPCA".impute_11 * 0.0273706963456 + "CenteredDataForPCA".impute_12 * -0.105558030447 + "CenteredDataForPCA".impute_13 * 0.0346989355722 + "CenteredDataForPCA".impute_14 * -0.0146422853407 + "CenteredDataForPCA".impute_15 * -0.283842939218 + "CenteredDataForPCA".impute_16 * 0.0918083352848 + "CenteredDataForPCA".impute_17 * 0.071926572081 + "CenteredDataForPCA".impute_18 * -0.215579620156 + "CenteredDataForPCA".impute_19 * -0.318975075765 + "CenteredDataForPCA".impute_20 * -0.482954649902 + "CenteredDataForPCA".impute_21 * -0.374895057769 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.292941594098 + "CenteredDataForPCA".impute_3 * -0.0724355225808 + "CenteredDataForPCA".impute_4 * -0.0925130116026 + "CenteredDataForPCA".impute_5 * -0.472458802189 + "CenteredDataForPCA".impute_6 * 0.289401757728 + "CenteredDataForPCA".impute_7 * 0.177362529422 + "CenteredDataForPCA".impute_8 * -0.473548081255 + "CenteredDataForPCA".impute_9 * -0.143888186984 + "CenteredDataForPCA".impute_10 * -0.263235190927 + "CenteredDataForPCA".impute_11 * -0.0336781444242 + "CenteredDataForPCA".impute_12 * -0.308896307189 + "CenteredDataForPCA".impute_13 * -0.0216764131102 + "CenteredDataForPCA".impute_14 * -0.192131179407 + "CenteredDataForPCA".impute_15 * -0.0288466279253 + "CenteredDataForPCA".impute_16 * 0.0338240541586 + "CenteredDataForPCA".impute_17 * 0.240548975763 + "CenteredDataForPCA".impute_18 * -0.123160545061 + "CenteredDataForPCA".impute_19 * -0.14050779111 + "CenteredDataForPCA".impute_20 * -0.00190490514225 + "CenteredDataForPCA".impute_21 * 0.137902645581 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.281524423093 + "CenteredDataForPCA".impute_3 * 0.330976442323 + "CenteredDataForPCA".impute_4 * -0.381056168993 + "CenteredDataForPCA".impute_5 * -0.310480710024 + "CenteredDataForPCA".impute_6 * -0.466815910613 + "CenteredDataForPCA".impute_7 * -0.00773188749287 + "CenteredDataForPCA".impute_8 * -0.0409985904069 + "CenteredDataForPCA".impute_9 * -0.0665388720792 + "CenteredDataForPCA".impute_10 * -0.466933910742 + "CenteredDataForPCA".impute_11 * -0.0213020376955 + "CenteredDataForPCA".impute_12 * 0.263569007019 + "CenteredDataForPCA".impute_13 * 0.0355592408386 + "CenteredDataForPCA".impute_14 * 0.155777676768 + "CenteredDataForPCA".impute_15 * 0.0261648916841 + "CenteredDataForPCA".impute_16 * -0.0504713277745 + "CenteredDataForPCA".impute_17 * 0.119978259569 + "CenteredDataForPCA".impute_18 * -0.0132300170634 + "CenteredDataForPCA".impute_19 * -0.0515850822974 + "CenteredDataForPCA".impute_20 * -0.00471260910993 + "CenteredDataForPCA".impute_21 * -0.107450056961 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.0550807355353 + "CenteredDataForPCA".impute_3 * 0.120432742446 + "CenteredDataForPCA".impute_4 * -0.24742053946 + "CenteredDataForPCA".impute_5 * -0.142832538539 + "CenteredDataForPCA".impute_6 * 0.0121661811024 + "CenteredDataForPCA".impute_7 * 0.493208477981 + "CenteredDataForPCA".impute_8 * 0.144704142682 + "CenteredDataForPCA".impute_9 * -0.249142165563 + "CenteredDataForPCA".impute_10 * 0.373629419366 + "CenteredDataForPCA".impute_11 * -0.0177363542128 + "CenteredDataForPCA".impute_12 * 0.0228422643496 + "CenteredDataForPCA".impute_13 * -0.0817135612747 + "CenteredDataForPCA".impute_14 * 0.106917015757 + "CenteredDataForPCA".impute_15 * -0.273640032665 + "CenteredDataForPCA".impute_16 * -0.114060928476 + "CenteredDataForPCA".impute_17 * -0.0646468485775 + "CenteredDataForPCA".impute_18 * 0.21913834663 + "CenteredDataForPCA".impute_19 * 0.0106548592319 + "CenteredDataForPCA".impute_20 * -0.442824015054 + "CenteredDataForPCA".impute_21 * 0.282117726382 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.191687650053 + "CenteredDataForPCA".impute_3 * -0.1419770784 + "CenteredDataForPCA".impute_4 * 0.338278034459 + "CenteredDataForPCA".impute_5 * -0.0749314577673 + "CenteredDataForPCA".impute_6 * -0.266518509063 + "CenteredDataForPCA".impute_7 * 0.225426767735 + "CenteredDataForPCA".impute_8 * -0.158143304282 + "CenteredDataForPCA".impute_9 * 0.00739062095415 + "CenteredDataForPCA".impute_10 * 0.20057504524 + "CenteredDataForPCA".impute_11 * -0.0878514104623 + "CenteredDataForPCA".impute_12 * 0.220443488448 + "CenteredDataForPCA".impute_13 * 0.00239102038158 + "CenteredDataForPCA".impute_14 * 0.0925777157857 + "CenteredDataForPCA".impute_15 * 0.20929551426 + "CenteredDataForPCA".impute_16 * -0.131130712479 + "CenteredDataForPCA".impute_17 * -0.0364258438065 + "CenteredDataForPCA".impute_18 * -0.454913591044 + "CenteredDataForPCA".impute_19 * -0.356335116721 + "CenteredDataForPCA".impute_20 * 0.141116675534 + "CenteredDataForPCA".impute_21 * 0.393518368953 AS anoova_11, "CenteredDataForPCA".impute_2 * 0.31252989844 + "CenteredDataForPCA".impute_3 * 0.135872171951 + "CenteredDataForPCA".impute_4 * 0.0460328201465 + "CenteredDataForPCA".impute_5 * 0.175837230832 + "CenteredDataForPCA".impute_6 * -0.500331299741 + "CenteredDataForPCA".impute_7 * 0.425253427129 + "CenteredDataForPCA".impute_8 * -0.104965008115 + "CenteredDataForPCA".impute_9 * -0.00545343731649 + "CenteredDataForPCA".impute_10 * 0.0454712222358 + "CenteredDataForPCA".impute_11 * -0.00192343515526 + "CenteredDataForPCA".impute_12 * -0.276264738894 + "CenteredDataForPCA".impute_13 * -0.0643656046035 + "CenteredDataForPCA".impute_14 * -0.162710514719 + "CenteredDataForPCA".impute_15 * 0.0688205664483 + "CenteredDataForPCA".impute_16 * 0.00200852018248 + "CenteredDataForPCA".impute_17 * -0.129757647592 + "CenteredDataForPCA".impute_18 * 0.322427956407 + "CenteredDataForPCA".impute_19 * -0.0961976254443 + "CenteredDataForPCA".impute_20 * 0.374691726715 + "CenteredDataForPCA".impute_21 * -0.15623889184 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.0217859437866 + "CenteredDataForPCA".impute_3 * -0.142058047445 + "CenteredDataForPCA".impute_4 * 0.24167070936 + "CenteredDataForPCA".impute_5 * 0.102907170124 + "CenteredDataForPCA".impute_6 * 0.103854879714 + "CenteredDataForPCA".impute_7 * 0.0717130761426 + "CenteredDataForPCA".impute_8 * 0.398245410869 + "CenteredDataForPCA".impute_9 * -0.00741192950804 + "CenteredDataForPCA".impute_10 * -0.384203902988 + "CenteredDataForPCA".impute_11 * 0.0745165776718 + "CenteredDataForPCA".impute_12 * 0.0726550681035 + "CenteredDataForPCA".impute_13 * -0.0431380124444 + "CenteredDataForPCA".impute_14 * 0.0390218440067 + "CenteredDataForPCA".impute_15 * 0.0352626825659 + "CenteredDataForPCA".impute_16 * -0.00844081869192 + "CenteredDataForPCA".impute_17 * 0.364098773545 + "CenteredDataForPCA".impute_18 * 0.420460255703 + "CenteredDataForPCA".impute_19 * -0.464552312601 + "CenteredDataForPCA".impute_20 * -0.0377394623282 + "CenteredDataForPCA".impute_21 * 0.214562448775 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.0123531562197 + "CenteredDataForPCA".impute_3 * 0.137979049485 + "CenteredDataForPCA".impute_4 * -0.318595651833 + "CenteredDataForPCA".impute_5 * 0.561611772837 + "CenteredDataForPCA".impute_6 * 0.244549265925 + "CenteredDataForPCA".impute_7 * 0.363215263802 + "CenteredDataForPCA".impute_8 * -0.248608366303 + "CenteredDataForPCA".impute_9 * 0.240329990256 + "CenteredDataForPCA".impute_10 * -0.151693612693 + "CenteredDataForPCA".impute_11 * 0.0758554526307 + "CenteredDataForPCA".impute_12 * 0.202293160841 + "CenteredDataForPCA".impute_13 * 0.00842319424222 + "CenteredDataForPCA".impute_14 * -0.0144663614851 + "CenteredDataForPCA".impute_15 * 0.332765654501 + "CenteredDataForPCA".impute_16 * 0.0149507484065 + "CenteredDataForPCA".impute_17 * 0.161920015138 + "CenteredDataForPCA".impute_18 * -0.111352765035 + "CenteredDataForPCA".impute_19 * 0.0892782441725 + "CenteredDataForPCA".impute_20 * -0.113976127612 + "CenteredDataForPCA".impute_21 * 0.110004386066 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.142676110429 + "CenteredDataForPCA".impute_3 * 0.565280527212 + "CenteredDataForPCA".impute_4 * -0.0521204785676 + "CenteredDataForPCA".impute_5 * -0.0420621481545 + "CenteredDataForPCA".impute_6 * 0.456949436098 + "CenteredDataForPCA".impute_7 * -0.0450135608606 + "CenteredDataForPCA".impute_8 * 0.0479019213053 + "CenteredDataForPCA".impute_9 * -0.196088781998 + "CenteredDataForPCA".impute_10 * 0.105352025787 + "CenteredDataForPCA".impute_11 * -0.00290058588609 + "CenteredDataForPCA".impute_12 * 0.0177086603395 + "CenteredDataForPCA".impute_13 * 0.0800826556355 + "CenteredDataForPCA".impute_14 * 0.0419807521584 + "CenteredDataForPCA".impute_15 * 0.105627130376 + "CenteredDataForPCA".impute_16 * 0.0843470079663 + "CenteredDataForPCA".impute_17 * -0.300329739023 + "CenteredDataForPCA".impute_18 * 0.0656710274663 + "CenteredDataForPCA".impute_19 * -0.358777722822 + "CenteredDataForPCA".impute_20 * 0.377797199011 + "CenteredDataForPCA".impute_21 * 0.0145008658951 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.0696597554823 + "CenteredDataForPCA".impute_3 * 0.205950170882 + "CenteredDataForPCA".impute_4 * 0.286591266098 + "CenteredDataForPCA".impute_5 * -0.289007491417 + "CenteredDataForPCA".impute_6 * 0.188585367117 + "CenteredDataForPCA".impute_7 * 0.387185804423 + "CenteredDataForPCA".impute_8 * 0.214622158042 + "CenteredDataForPCA".impute_9 * 0.358881153237 + "CenteredDataForPCA".impute_10 * 0.0293129231019 + "CenteredDataForPCA".impute_11 * 0.0272118810824 + "CenteredDataForPCA".impute_12 * 0.115663268757 + "CenteredDataForPCA".impute_13 * -0.0356336700905 + "CenteredDataForPCA".impute_14 * 0.0834049247115 + "CenteredDataForPCA".impute_15 * -0.166079746905 + "CenteredDataForPCA".impute_16 * -0.0506596030467 + "CenteredDataForPCA".impute_17 * 0.309381335243 + "CenteredDataForPCA".impute_18 * -0.0745121230152 + "CenteredDataForPCA".impute_19 * 0.389499394689 + "CenteredDataForPCA".impute_20 * 0.325986658527 + "CenteredDataForPCA".impute_21 * -0.118902609741 AS anoova_16, "CenteredDataForPCA".impute_2 * 0.15578491905 + "CenteredDataForPCA".impute_3 * 0.0187971523921 + "CenteredDataForPCA".impute_4 * 0.0162144117117 + "CenteredDataForPCA".impute_5 * -0.0338974027929 + "CenteredDataForPCA".impute_6 * 0.0130503152599 + "CenteredDataForPCA".impute_7 * 0.211443415508 + "CenteredDataForPCA".impute_8 * 0.474501274046 + "CenteredDataForPCA".impute_9 * 0.0254935172341 + "CenteredDataForPCA".impute_10 * -0.440746076998 + "CenteredDataForPCA".impute_11 * 0.0152580836858 + "CenteredDataForPCA".impute_12 * -0.222711911005 + "CenteredDataForPCA".impute_13 * -0.0260847174502 + "CenteredDataForPCA".impute_14 * -0.0695855399337 + "CenteredDataForPCA".impute_15 * 0.0807828145843 + "CenteredDataForPCA".impute_16 * 0.0451390273729 + "CenteredDataForPCA".impute_17 * -0.499836723307 + "CenteredDataForPCA".impute_18 * -0.390192636102 + "CenteredDataForPCA".impute_19 * 0.101294956366 + "CenteredDataForPCA".impute_20 * -0.132355168332 + "CenteredDataForPCA".impute_21 * 0.123465429263 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.0618918762258 + "CenteredDataForPCA".impute_3 * -0.0231546033777 + "CenteredDataForPCA".impute_4 * 0.257978302686 + "CenteredDataForPCA".impute_5 * -0.340750123255 + "CenteredDataForPCA".impute_6 * 0.0698879874386 + "CenteredDataForPCA".impute_7 * 0.0924302992625 + "CenteredDataForPCA".impute_8 * -0.0978528851467 + "CenteredDataForPCA".impute_9 * 0.0797200037516 + "CenteredDataForPCA".impute_10 * 0.0391970850037 + "CenteredDataForPCA".impute_11 * 0.0115807578068 + "CenteredDataForPCA".impute_12 * 0.0631489607788 + "CenteredDataForPCA".impute_13 * 6.65458530732e-05 + "CenteredDataForPCA".impute_14 * 0.046498636819 + "CenteredDataForPCA".impute_15 * 0.674765713335 + "CenteredDataForPCA".impute_16 * -0.00802454717808 + "CenteredDataForPCA".impute_17 * -0.200166375001 + "CenteredDataForPCA".impute_18 * 0.322377928527 + "CenteredDataForPCA".impute_19 * 0.0943271138228 + "CenteredDataForPCA".impute_20 * -0.333108095853 + "CenteredDataForPCA".impute_21 * -0.237834673085 AS anoova_18, "CenteredDataForPCA".impute_2 * 0.264040574826 + "CenteredDataForPCA".impute_3 * 0.437021100848 + "CenteredDataForPCA".impute_4 * -0.0645384890668 + "CenteredDataForPCA".impute_5 * -0.097047237894 + "CenteredDataForPCA".impute_6 * -0.19495675398 + "CenteredDataForPCA".impute_7 * -0.335777018164 + "CenteredDataForPCA".impute_8 * 0.200429508412 + "CenteredDataForPCA".impute_9 * 0.224519860431 + "CenteredDataForPCA".impute_10 * 0.245787567387 + "CenteredDataForPCA".impute_11 * 0.052351295109 + "CenteredDataForPCA".impute_12 * -0.231329284899 + "CenteredDataForPCA".impute_13 * -0.0757994648168 + "CenteredDataForPCA".impute_14 * -0.0986712798536 + "CenteredDataForPCA".impute_15 * 0.292525136387 + "CenteredDataForPCA".impute_16 * 0.0210817921131 + "CenteredDataForPCA".impute_17 * 0.302882149261 + "CenteredDataForPCA".impute_18 * -0.066516176905 + "CenteredDataForPCA".impute_19 * 0.0537255774647 + "CenteredDataForPCA".impute_20 * -0.115423830765 + "CenteredDataForPCA".impute_21 * 0.392227935296 AS anoova_19, "CenteredDataForPCA".impute_2 * 0.333307920097 + "CenteredDataForPCA".impute_3 * -3.88578058619e-16 + "CenteredDataForPCA".impute_4 * 5.03069808033e-17 + "CenteredDataForPCA".impute_5 * 0.0 + "CenteredDataForPCA".impute_6 * 2.08166817117e-16 + "CenteredDataForPCA".impute_7 * 2.18629368082e-16 + "CenteredDataForPCA".impute_8 * -3.98986399475e-16 + "CenteredDataForPCA".impute_9 * 1.17961196366e-16 + "CenteredDataForPCA".impute_10 * 1.63064006742e-16 + "CenteredDataForPCA".impute_11 * -0.587191227275 + "CenteredDataForPCA".impute_12 * 0.200196139249 + "CenteredDataForPCA".impute_13 * -0.241686543125 + "CenteredDataForPCA".impute_14 * 0.409355120027 + "CenteredDataForPCA".impute_15 * 6.93889390391e-17 + "CenteredDataForPCA".impute_16 * 0.527304275937 + "CenteredDataForPCA".impute_17 * 1.4224732503e-16 + "CenteredDataForPCA".impute_18 * 2.77555756156e-17 + "CenteredDataForPCA".impute_19 * -7.4593109467e-17 + "CenteredDataForPCA".impute_20 * -2.11636264069e-16 + "CenteredDataForPCA".impute_21 * 2.42861286637e-17 AS anoova_20, "CenteredDataForPCA".impute_2 * 0.397617356707 + "CenteredDataForPCA".impute_3 * -0.0 + "CenteredDataForPCA".impute_4 * -4.68375338514e-17 + "CenteredDataForPCA".impute_5 * 1.80411241502e-16 + "CenteredDataForPCA".impute_6 * -1.47451495458e-16 + "CenteredDataForPCA".impute_7 * -3.35289521841e-16 + "CenteredDataForPCA".impute_8 * 1.52655665886e-16 + "CenteredDataForPCA".impute_9 * -9.71445146547e-17 + "CenteredDataForPCA".impute_10 * -6.93889390391e-17 + "CenteredDataForPCA".impute_11 * 0.0301865378939 + "CenteredDataForPCA".impute_12 * -0.0115496044347 + "CenteredDataForPCA".impute_13 * 0.729003985287 + "CenteredDataForPCA".impute_14 * 0.491385916114 + "CenteredDataForPCA".impute_15 * -2.42861286637e-16 + "CenteredDataForPCA".impute_16 * -0.260670075177 + "CenteredDataForPCA".impute_17 * -1.97758476261e-16 + "CenteredDataForPCA".impute_18 * -4.85722573274e-17 + "CenteredDataForPCA".impute_19 * 3.12250225676e-17 + "CenteredDataForPCA".impute_20 * 6.41847686111e-17 + "CenteredDataForPCA".impute_21 * -6.24500451352e-17 AS anoova_21 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 1.3968017101287842) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -1.2338972091674805) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.3968017101287842 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4897959183673469 AS "Proba_0", -0.713766467763 AS "LogProba_0", 0.5102040816326531 AS "Proba_1", -0.672944473242 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -1.2338972091674805 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.8 AS "Proba_1", -0.223143551314 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0", -0.916290731874 AS "LogProba_0", 0.6 AS "Proba_1", -0.510825623766 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9473684210526315 AS "Proba_0", -0.0540672212703 AS "LogProba_0", 0.05263157894736842 AS "Proba_1", -2.94443897917 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"OVO_Decision_0_1" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Decision" AS dec_0_1 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.8221375942230225) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.8221375942230225 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.48 AS "Proba_0", -0.73396917508 AS "LogProba_0", 0.52 AS "Proba_1", -0.653926467407 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7857142857142857 AS "Proba_0", -0.241162056817 AS "LogProba_0", 0.21428571428571427 AS "Proba_1", -1.54044504095 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09090909090909091 AS "Proba_0", -2.3978952728 AS "LogProba_0", 0.9090909090909091 AS "Proba_1", -0.0953101798043 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"OVO_Decision_0_2" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Decision" AS dec_0_2 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 0.8477535843849182) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.8477535843849182 AS threshold, 49 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4897959183673469 AS "Proba_0", -0.713766467763 AS "LogProba_0", 0.5102040816326531 AS "Proba_1", -0.672944473242 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0", -1.79175946923 AS "LogProba_0", 0.8333333333333334 AS "Proba_1", -0.182321556794 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8 AS "Proba_0", -0.223143551314 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"OVO_Decision_0_3" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Decision" AS dec_0_3 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.945626974105835) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.945626974105835 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.49019607843137253 AS "Proba_0", -0.712949807856 AS "LogProba_0", 0.5098039215686274 AS "Proba_1", -0.673729094703 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7586206896551724 AS "Proba_0", -0.276253376628 AS "LogProba_0", 0.2413793103448276 AS "Proba_1", -1.42138568093 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13636363636363635 AS "Proba_0", -1.99243016469 AS "LogProba_0", 0.8636363636363636 AS "Proba_1", -0.146603474192 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"OVO_Decision_1_2" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Decision" AS dec_1_2 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.24853253364562988) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.3725598156452179) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.24853253364562988 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, -0.3725598156452179 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25806451612903225 AS "Proba_0", -1.35454566281 AS "LogProba_0", 0.7419354838709677 AS "Proba_1", -0.298492988556 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06666666666666667 AS "Proba_0", -2.7080502011 AS "LogProba_0", 0.9333333333333333 AS "Proba_1", -0.068992871487 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4375 AS "Proba_0", -0.826678573184 AS "LogProba_0", 0.5625 AS "Proba_1", -0.575364144904 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8947368421052632 AS "Proba_0", -0.11122563511 AS "LogProba_0", 0.10526315789473684 AS "Proba_1", -2.25129179861 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"OVO_Decision_1_3" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Decision" AS dec_1_3 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.5271081328392029) THEN 1 ELSE 2 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.5271081328392029 AS threshold, 51 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5098039215686274 AS "Proba_0", -0.673729094703 AS "LogProba_0", 0.49019607843137253 AS "Proba_1", -0.712949807856 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS "Proba_0", -2.48490664979 AS "LogProba_0", 0.9166666666666666 AS "Proba_1", -0.0870113769896 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8888888888888888 AS "Proba_0", -0.117783035656 AS "LogProba_0", 0.1111111111111111 AS "Proba_1", -2.19722457734 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"OVO_Decision_2_3" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Decision" AS dec_2_3 
FROM "DT_Output_5"), 
"OVO_Decisions_CTE" AS 
(SELECT "OVO_Decision_0_1".join_key_0 AS join_key_0, "OVO_Decision_0_1".dec_0_1 AS dec_0_1, "OVO_Decision_0_2".join_key_1 AS join_key_1, "OVO_Decision_0_2".dec_0_2 AS dec_0_2, "OVO_Decision_0_3".join_key_2 AS join_key_2, "OVO_Decision_0_3".dec_0_3 AS dec_0_3, "OVO_Decision_1_2".join_key_3 AS join_key_3, "OVO_Decision_1_2".dec_1_2 AS dec_1_2, "OVO_Decision_1_3".join_key_4 AS join_key_4, "OVO_Decision_1_3".dec_1_3 AS dec_1_3, "OVO_Decision_2_3".join_key_5 AS join_key_5, "OVO_Decision_2_3".dec_2_3 AS dec_2_3 
FROM "OVO_Decision_0_1" LEFT OUTER JOIN "OVO_Decision_0_2" ON "OVO_Decision_0_1".join_key_0 = "OVO_Decision_0_2".join_key_1 LEFT OUTER JOIN "OVO_Decision_0_3" ON "OVO_Decision_0_3".join_key_2 = "OVO_Decision_0_2".join_key_1 LEFT OUTER JOIN "OVO_Decision_1_2" ON "OVO_Decision_1_2".join_key_3 = "OVO_Decision_0_3".join_key_2 LEFT OUTER JOIN "OVO_Decision_1_3" ON "OVO_Decision_1_3".join_key_4 = "OVO_Decision_1_2".join_key_3 LEFT OUTER JOIN "OVO_Decision_2_3" ON "OVO_Decision_2_3".join_key_5 = "OVO_Decision_1_3".join_key_4), 
"OVO_Scores" AS 
(SELECT "OVO_Decisions_CTE".join_key_0 AS "KEY", (1.0 - "OVO_Decisions_CTE".dec_0_1) + (1.0 - "OVO_Decisions_CTE".dec_0_2) + (1.0 - "OVO_Decisions_CTE".dec_0_3) AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "OVO_Decisions_CTE".dec_0_1 + (1.0 - "OVO_Decisions_CTE".dec_1_2) + (1.0 - "OVO_Decisions_CTE".dec_1_3) AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "OVO_Decisions_CTE".dec_0_2 + "OVO_Decisions_CTE".dec_1_2 + (1.0 - "OVO_Decisions_CTE".dec_2_3) AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", "OVO_Decisions_CTE".dec_0_3 + "OVO_Decisions_CTE".dec_1_3 + "OVO_Decisions_CTE".dec_2_3 AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "OVO_Decisions_CTE"), 
orig_cte AS 
(SELECT "OVO_Scores"."KEY" AS "KEY", "OVO_Scores"."Score_0" AS "Score_0", "OVO_Scores"."Score_1" AS "Score_1", "OVO_Scores"."Score_2" AS "Score_2", "OVO_Scores"."Score_3" AS "Score_3", "OVO_Scores"."Proba_0" AS "Proba_0", "OVO_Scores"."Proba_1" AS "Proba_1", "OVO_Scores"."Proba_2" AS "Proba_2", "OVO_Scores"."Proba_3" AS "Proba_3", "OVO_Scores"."LogProba_0" AS "LogProba_0", "OVO_Scores"."LogProba_1" AS "LogProba_1", "OVO_Scores"."LogProba_2" AS "LogProba_2", "OVO_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "OVO_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte