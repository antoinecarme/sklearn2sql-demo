-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, arg_max_cte.`Proba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`Proba_3` IS NULL OR arg_max_cte.`Proba_3` > 0.0) THEN ln(arg_max_cte.`Proba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM (SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, (SELECT min(score_class_union.class) AS min_1 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_max.`max_LogProba` = score_class_union.`LogProba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_max.`max_Proba` = score_class_union.`Proba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_max.`max_Score` = score_class_union.`Score` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM (SELECT `OVR_Scores`.`KEY` AS `KEY`, `OVR_Scores`.`Score_0` AS `Score_0`, `OVR_Scores`.`Score_1` AS `Score_1`, `OVR_Scores`.`Score_2` AS `Score_2`, `OVR_Scores`.`Score_3` AS `Score_3`, `OVR_Scores`.`Proba_0` AS `Proba_0`, `OVR_Scores`.`Proba_1` AS `Proba_1`, `OVR_Scores`.`Proba_2` AS `Proba_2`, `OVR_Scores`.`Proba_3` AS `Proba_3`, `OVR_Scores`.`LogProba_0` AS `LogProba_0`, `OVR_Scores`.`LogProba_1` AS `LogProba_1`, `OVR_Scores`.`LogProba_2` AS `LogProba_2`, `OVR_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM (SELECT `OVR_Join_CTE`.join_key_0 AS `KEY`, `OVR_Join_CTE`.`Score_0` AS `Score_0`, `OVR_Join_CTE`.`Proba_0` AS `Proba_0`, `OVR_Join_CTE`.`LogProba_0` AS `LogProba_0`, `OVR_Join_CTE`.`Score_1` AS `Score_1`, `OVR_Join_CTE`.`Proba_1` AS `Proba_1`, `OVR_Join_CTE`.`LogProba_1` AS `LogProba_1`, `OVR_Join_CTE`.`Score_2` AS `Score_2`, `OVR_Join_CTE`.`Proba_2` AS `Proba_2`, `OVR_Join_CTE`.`LogProba_2` AS `LogProba_2`, `OVR_Join_CTE`.`Score_3` AS `Score_3`, `OVR_Join_CTE`.`Proba_3` AS `Proba_3`, `OVR_Join_CTE`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `OVR_Score_0`.join_key_0 AS join_key_0, `OVR_Score_0`.`Score_0` AS `Score_0`, `OVR_Score_0`.`Proba_0` AS `Proba_0`, `OVR_Score_0`.`LogProba_0` AS `LogProba_0`, `OVR_Score_1`.join_key_1 AS join_key_1, `OVR_Score_1`.`Score_1` AS `Score_1`, `OVR_Score_1`.`Proba_1` AS `Proba_1`, `OVR_Score_1`.`LogProba_1` AS `LogProba_1`, `OVR_Score_2`.join_key_2 AS join_key_2, `OVR_Score_2`.`Score_2` AS `Score_2`, `OVR_Score_2`.`Proba_2` AS `Proba_2`, `OVR_Score_2`.`LogProba_2` AS `LogProba_2`, `OVR_Score_3`.join_key_3 AS join_key_3, `OVR_Score_3`.`Score_3` AS `Score_3`, `OVR_Score_3`.`Proba_3` AS `Proba_3`, `OVR_Score_3`.`LogProba_3` AS `LogProba_3` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0`, `DT_Output`.`Proba_1` AS `Proba_0`, `DT_Output`.`LogProba_1` AS `LogProba_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4214174449443817) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.1390627771615982) THEN CASE WHEN (`ADS`.`Feature_16` <= -1.1265747547149658) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.6341391801834106) THEN 7 ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4214174449443817 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.1390627771615982 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5740740740740741 AS `Proba_0`, -0.554996842079 AS `LogProba_0`, 0.42592592592592593 AS `Proba_1`, -0.853489830635 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -1.1265747547149658 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3 AS `Proba_0`, -1.20397280433 AS `LogProba_0`, 0.7 AS `Proba_1`, -0.356674943939 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13333333333333333 AS `Proba_0`, -2.01490302054 AS `LogProba_0`, 0.8666666666666667 AS `Proba_1`, -0.143100843641 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4666666666666667 AS `Proba_0`, -0.762140052047 AS `LogProba_0`, 0.5333333333333333 AS `Proba_1`, -0.628608659422 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9166666666666666 AS `Proba_0`, -0.0870113769896 AS `LogProba_0`, 0.08333333333333333 AS `Proba_1`, -2.48490664979 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.6341391801834106 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9565217391304348 AS `Proba_0`, -0.0444517625708 AS `LogProba_0`, 0.043478260869565216 AS `Proba_1`, -3.13549421593 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `OVR_Score_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1`, `DT_Output_1`.`Proba_1` AS `Proba_1`, `DT_Output_1`.`LogProba_1` AS `LogProba_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0` AS `Proba_0`, `DT_node_data_1`.`LogProba_0` AS `LogProba_0`, `DT_node_data_1`.`Proba_1` AS `Proba_1`, `DT_node_data_1`.`LogProba_1` AS `LogProba_1`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.07484441250562668) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.24119432270526886) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_11` <= -2.366511344909668) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.07484441250562668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.24119432270526886 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4888888888888889 AS `Proba_0`, -0.715620036412 AS `LogProba_0`, 0.5111111111111111 AS `Proba_1`, -0.671168273841 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.875 AS `Proba_0`, -0.133531392625 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.047619047619047616 AS `Proba_0`, -3.04452243772 AS `LogProba_0`, 0.9523809523809523 AS `Proba_1`, -0.0487901641694 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_11' AS feature, -2.366511344909668 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9636363636363636 AS `Proba_0`, -0.0370412716803 AS `LogProba_0`, 0.03636363636363636 AS `Proba_1`, -3.31418600467 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8666666666666667 AS `Proba_0`, -0.143100843641 AS `LogProba_0`, 0.13333333333333333 AS `Proba_1`, -2.01490302054 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `OVR_Score_1` ON `OVR_Score_0`.join_key_0 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2`, `DT_Output_2`.`Proba_1` AS `Proba_2`, `DT_Output_2`.`LogProba_1` AS `LogProba_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0` AS `Proba_0`, `DT_node_data_2`.`LogProba_0` AS `LogProba_0`, `DT_node_data_2`.`Proba_1` AS `Proba_1`, `DT_node_data_2`.`LogProba_1` AS `LogProba_1`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 2.1312382221221924) THEN CASE WHEN (`ADS`.`Feature_16` <= 0.23990145325660706) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_15` <= -0.29520517587661743) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 2.1312382221221924 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, 0.23990145325660706 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8536585365853658 AS `Proba_0`, -0.158224005215 AS `LogProba_0`, 0.14634146341463414 AS `Proba_1`, -1.92181259748 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_15' AS feature, -0.29520517587661743 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7073170731707317 AS `Proba_0`, -0.346276236718 AS `LogProba_0`, 0.2926829268292683 AS `Proba_1`, -1.22866541692 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9 AS `Proba_0`, -0.105360515658 AS `LogProba_0`, 0.1 AS `Proba_1`, -2.30258509299 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5238095238095238 AS `Proba_0`, -0.646627164925 AS `LogProba_0`, 0.47619047619047616 AS `Proba_1`, -0.741937344729 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.7222222222222222 AS `Proba_1`, -0.325422400435 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `OVR_Score_2` ON `OVR_Score_2`.join_key_2 = `OVR_Score_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3`, `DT_Output_3`.`Proba_1` AS `Proba_3`, `DT_Output_3`.`LogProba_1` AS `LogProba_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0` AS `Proba_0`, `DT_node_data_3`.`LogProba_0` AS `LogProba_0`, `DT_node_data_3`.`Proba_1` AS `Proba_1`, `DT_node_data_3`.`LogProba_1` AS `LogProba_1`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= 0.4595257043838501) THEN CASE WHEN (`ADS`.`Feature_9` <= -0.6137983798980713) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.4905810058116913) THEN 5 ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, 0.4595257043838501 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.6137983798980713 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9464285714285714 AS `Proba_0`, -0.055059777183 AS `LogProba_0`, 0.05357142857142857 AS `Proba_1`, -2.92673940207 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8125 AS `Proba_0`, -0.207639364778 AS `LogProba_0`, 0.1875 AS `Proba_1`, -1.67397643357 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, -0.4905810058116913 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0`, -0.69314718056 AS `LogProba_0`, 0.5 AS `Proba_1`, -0.69314718056 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0`, -0.287682072452 AS `LogProba_0`, 0.25 AS `Proba_1`, -1.38629436112 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2 AS `Proba_0`, -1.60943791243 AS `LogProba_0`, 0.8 AS `Proba_1`, -0.223143551314 AS `LogProba_1`, 1 AS `Decision`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `OVR_Score_3` ON `OVR_Score_3`.join_key_3 = `OVR_Score_2`.join_key_2) AS `OVR_Join_CTE`) AS `OVR_Scores`) AS orig_cte) AS score_max) AS arg_max_cte