-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", -7.682004715545759 * "ADS"."Feature_0" + 2.6559875423171464 * "ADS"."Feature_1" + 0.6613181959071575 * "ADS"."Feature_2" + -0.007062300664322674 * "ADS"."Feature_3" + 0.7627609969077084 * "ADS"."Feature_4" + -3.0646933251652415 * "ADS"."Feature_5" + 2.410946019787347 * "ADS"."Feature_6" + -8.77662501552813 * "ADS"."Feature_7" + -2.2044747559891142 * "ADS"."Feature_8" + -0.5221865748936164 * "ADS"."Feature_9" + 1.606454399211687 * "ADS"."Feature_10" + 5.557866455136266 * "ADS"."Feature_11" + -2.54106488189465 * "ADS"."Feature_12" + -7.047730519512956 * "ADS"."Feature_13" + 2.0596180080893873 * "ADS"."Feature_14" + -2.8890373272593797 * "ADS"."Feature_15" + -0.12176530309142178 * "ADS"."Feature_16" + -2.4081278881369164 * "ADS"."Feature_17" + -4.000572764059804 * "ADS"."Feature_18" + -3.6426418872892814 * "ADS"."Feature_19" + -11.0 AS "Score_0", -2.641512260101416 * "ADS"."Feature_0" + -0.5240604790438728 * "ADS"."Feature_1" + -3.1578779172593565 * "ADS"."Feature_2" + -0.6066589905172839 * "ADS"."Feature_3" + -2.717447497034571 * "ADS"."Feature_4" + 6.10004294699882 * "ADS"."Feature_5" + -8.385258722457298 * "ADS"."Feature_6" + 2.340158410016125 * "ADS"."Feature_7" + -3.987476139378412 * "ADS"."Feature_8" + 11.44704931617953 * "ADS"."Feature_9" + 1.7618315116550813 * "ADS"."Feature_10" + -9.559025691142091 * "ADS"."Feature_11" + -5.574325597607417 * "ADS"."Feature_12" + 8.403353148859603 * "ADS"."Feature_13" + -3.292941250768904 * "ADS"."Feature_14" + -0.27778781330767693 * "ADS"."Feature_15" + -2.633794527534376 * "ADS"."Feature_16" + -0.8972519069288314 * "ADS"."Feature_17" + 2.87370634111896 * "ADS"."Feature_18" + -2.4630767256762214 * "ADS"."Feature_19" + -16.0 AS "Score_1", -0.6555429701873938 * "ADS"."Feature_0" + -1.9796043424657037 * "ADS"."Feature_1" + 4.103407314594978 * "ADS"."Feature_2" + 3.501286650112835 * "ADS"."Feature_3" + 7.282630445165761 * "ADS"."Feature_4" + -1.6177723517923872 * "ADS"."Feature_5" + 4.981887598893053 * "ADS"."Feature_6" + 9.35033048198736 * "ADS"."Feature_7" + 0.3861764020852574 * "ADS"."Feature_8" + 2.2542031760243972 * "ADS"."Feature_9" + -1.4396268783513413 * "ADS"."Feature_10" + 7.581819371743749 * "ADS"."Feature_11" + 4.100194713954718 * "ADS"."Feature_12" + -2.7312645883708484 * "ADS"."Feature_13" + 5.044831970395936 * "ADS"."Feature_14" + -0.7401370697017386 * "ADS"."Feature_15" + 6.108925757597088 * "ADS"."Feature_16" + 1.1136926802949536 * "ADS"."Feature_17" + -0.10329111800455149 * "ADS"."Feature_18" + -1.6569868567765436 * "ADS"."Feature_19" + -13.0 AS "Score_2", 0.93096867043722 * "ADS"."Feature_0" + 2.0447708501124384 * "ADS"."Feature_1" + 0.3744807677802745 * "ADS"."Feature_2" + -3.846068720899961 * "ADS"."Feature_3" + -11.694504679347308 * "ADS"."Feature_4" + 0.020588151844212366 * "ADS"."Feature_5" + -0.10073723042541594 * "ADS"."Feature_6" + -1.7954542722891438 * "ADS"."Feature_7" + 0.41878327254726455 * "ADS"."Feature_8" + -0.13034957239635359 * "ADS"."Feature_9" + 0.8524573792143157 * "ADS"."Feature_10" + -0.52401290602343 * "ADS"."Feature_11" + -2.1318934107745564 * "ADS"."Feature_12" + -1.2220365965898425 * "ADS"."Feature_13" + -2.1232528636952916 * "ADS"."Feature_14" + 8.745882425969945 * "ADS"."Feature_15" + -1.8667103019439426 * "ADS"."Feature_16" + 12.585608807797977 * "ADS"."Feature_17" + -1.7662210975813486 * "ADS"."Feature_18" + 3.1843827057442486 * "ADS"."Feature_19" + -16.0 AS "Score_3" 
FROM "INPUT_DATA" "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte