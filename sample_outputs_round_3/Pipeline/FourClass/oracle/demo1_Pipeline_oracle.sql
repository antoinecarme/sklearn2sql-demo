-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_11" <= 0.9318068623542786) THEN CASE WHEN ("ADS"."Feature_14" <= -0.6906886696815491) THEN CASE WHEN ("ADS"."Feature_13" <= 0.1192205548286438) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= -0.6917043328285217) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.9318068623542786 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.26 AS "Proba_2", -1.34707364797 AS "LogProba_2", 0.24 AS "Proba_3", -1.42711635564 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, -0.6906886696815491 AS threshold, 84 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2976190476190476 AS "Proba_0", -1.21194097398 AS "LogProba_0", 0.14285714285714285 AS "Proba_1", -1.94591014906 AS "LogProba_1", 0.2976190476190476 AS "Proba_2", -1.21194097398 AS "LogProba_2", 0.2619047619047619 AS "Proba_3", -1.33977434548 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 0.1192205548286438 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6333333333333333 AS "Proba_0", -0.456758402496 AS "LogProba_0", 0.06666666666666667 AS "Proba_1", -2.7080502011 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0.3 AS "Proba_3", -1.20397280433 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8 AS "Proba_0", -0.223143551314 AS "LogProba_0", 0.06666666666666667 AS "Proba_1", -2.7080502011 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0.13333333333333333 AS "Proba_3", -2.01490302054 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4666666666666667 AS "Proba_0", -0.762140052047 AS "LogProba_0", 0.06666666666666667 AS "Proba_1", -2.7080502011 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0.4666666666666667 AS "Proba_3", -0.762140052047 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.6917043328285217 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS "Proba_0", -2.19722457734 AS "LogProba_0", 0.18518518518518517 AS "Proba_1", -1.68639895357 AS "LogProba_1", 0.46296296296296297 AS "Proba_2", -0.770108221696 AS "LogProba_2", 0.24074074074074073 AS "Proba_3", -1.4240346891 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.95 AS "Proba_2", -0.0512932943876 AS "LogProba_2", 0.05 AS "Proba_3", -2.99573227355 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17647058823529413 AS "Proba_0", -1.73460105539 AS "LogProba_0", 0.29411764705882354 AS "Proba_1", -1.22377543162 AS "LogProba_1", 0.17647058823529413 AS "Proba_2", -1.73460105539 AS "LogProba_2", 0.35294117647058826 AS "Proba_3", -1.04145387483 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.8125 AS "Proba_1", -0.207639364778 AS "LogProba_1", 0.0625 AS "Proba_2", -2.77258872224 AS "LogProba_2", 0.125 AS "Proba_3", -2.07944154168 AS "LogProba_3", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", "DT_Output"."Decision" AS "Decision" 
FROM "DT_Output"