-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.160957648826 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN -0.119489793926 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.0875177924767 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.32373453297 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -0.0925251631738 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN -0.0612324954926 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.0701089295873 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.039732523967 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -0.00485430218069 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.358709614905 ELSE [ADS].[Feature_9] END AS impute_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN -0.0425769224483 ELSE [ADS].[Feature_10] END AS impute_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN 0.118825346114 ELSE [ADS].[Feature_11] END AS impute_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 0.0890881976061 ELSE [ADS].[Feature_12] END AS impute_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.0922267113283 ELSE [ADS].[Feature_13] END AS impute_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.112736797933 ELSE [ADS].[Feature_14] END AS impute_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN -0.0725785119419 ELSE [ADS].[Feature_15] END AS impute_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 0.278406784021 ELSE [ADS].[Feature_16] END AS impute_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN -0.158863201157 ELSE [ADS].[Feature_17] END AS impute_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN 0.114199576935 ELSE [ADS].[Feature_18] END AS impute_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN -0.0558856384159 ELSE [ADS].[Feature_19] END AS impute_21 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 0.160957648826 AS impute_2, [ADS_imp_1_OUT].impute_3 - -0.119489793926 AS impute_3, [ADS_imp_1_OUT].impute_4 - 0.0875177924767 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.32373453297 AS impute_5, [ADS_imp_1_OUT].impute_6 - -0.0925251631738 AS impute_6, [ADS_imp_1_OUT].impute_7 - -0.0612324954926 AS impute_7, [ADS_imp_1_OUT].impute_8 - -0.0701089295873 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.039732523967 AS impute_9, [ADS_imp_1_OUT].impute_10 - -0.00485430218069 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.358709614905 AS impute_11, [ADS_imp_1_OUT].impute_12 - -0.0425769224483 AS impute_12, [ADS_imp_1_OUT].impute_13 - 0.118825346114 AS impute_13, [ADS_imp_1_OUT].impute_14 - 0.0890881976061 AS impute_14, [ADS_imp_1_OUT].impute_15 - -0.0922267113283 AS impute_15, [ADS_imp_1_OUT].impute_16 - 0.112736797933 AS impute_16, [ADS_imp_1_OUT].impute_17 - -0.0725785119419 AS impute_17, [ADS_imp_1_OUT].impute_18 - 0.278406784021 AS impute_18, [ADS_imp_1_OUT].impute_19 - -0.158863201157 AS impute_19, [ADS_imp_1_OUT].impute_20 - 0.114199576935 AS impute_20, [ADS_imp_1_OUT].impute_21 - -0.0558856384159 AS impute_21 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * -0.0580020642634 + [CenteredDataForPCA].impute_3 * -0.028317954402 + [CenteredDataForPCA].impute_4 * 0.049556646206 + [CenteredDataForPCA].impute_5 * 0.122212126696 + [CenteredDataForPCA].impute_6 * -0.0305178337845 + [CenteredDataForPCA].impute_7 * -0.0706458752344 + [CenteredDataForPCA].impute_8 * 0.0273107207616 + [CenteredDataForPCA].impute_9 * 0.363942839786 + [CenteredDataForPCA].impute_10 * -0.35136135423 + [CenteredDataForPCA].impute_11 * -0.267699555238 + [CenteredDataForPCA].impute_12 * 0.0204674887197 + [CenteredDataForPCA].impute_13 * 0.494495600641 + [CenteredDataForPCA].impute_14 * -0.0882126673446 + [CenteredDataForPCA].impute_15 * -0.0767345201742 + [CenteredDataForPCA].impute_16 * -0.0288155304192 + [CenteredDataForPCA].impute_17 * -0.0337802650535 + [CenteredDataForPCA].impute_18 * 0.615917340106 + [CenteredDataForPCA].impute_19 * -0.025688646293 + [CenteredDataForPCA].impute_20 * -0.0056991466589 + [CenteredDataForPCA].impute_21 * -0.0597445866949 AS anoova_2, [CenteredDataForPCA].impute_2 * -0.162565188416 + [CenteredDataForPCA].impute_3 * 0.0750736284207 + [CenteredDataForPCA].impute_4 * -0.000365515045032 + [CenteredDataForPCA].impute_5 * 0.0393884515517 + [CenteredDataForPCA].impute_6 * -0.053608709171 + [CenteredDataForPCA].impute_7 * -0.0644633328262 + [CenteredDataForPCA].impute_8 * -0.0474955683695 + [CenteredDataForPCA].impute_9 * -0.219702098957 + [CenteredDataForPCA].impute_10 * -0.450869357667 + [CenteredDataForPCA].impute_11 * -0.38502092944 + [CenteredDataForPCA].impute_12 * -0.00429980510046 + [CenteredDataForPCA].impute_13 * -0.264189383578 + [CenteredDataForPCA].impute_14 * 0.00183490591886 + [CenteredDataForPCA].impute_15 * -0.663047220636 + [CenteredDataForPCA].impute_16 * 0.03564839738 + [CenteredDataForPCA].impute_17 * 0.0108991668323 + [CenteredDataForPCA].impute_18 * -0.193812148827 + [CenteredDataForPCA].impute_19 * 0.06270027513 + [CenteredDataForPCA].impute_20 * -0.0345618784674 + [CenteredDataForPCA].impute_21 * -0.0614676874659 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.0254552440721 + [CenteredDataForPCA].impute_3 * -0.00666976403142 + [CenteredDataForPCA].impute_4 * -0.0872902749051 + [CenteredDataForPCA].impute_5 * 0.125949120982 + [CenteredDataForPCA].impute_6 * -0.0678569107664 + [CenteredDataForPCA].impute_7 * 0.124378761286 + [CenteredDataForPCA].impute_8 * 0.323450790057 + [CenteredDataForPCA].impute_9 * -0.264478544653 + [CenteredDataForPCA].impute_10 * 0.0166894054569 + [CenteredDataForPCA].impute_11 * -0.654440521112 + [CenteredDataForPCA].impute_12 * 0.0146923952239 + [CenteredDataForPCA].impute_13 * 0.26283775707 + [CenteredDataForPCA].impute_14 * 0.0420235578593 + [CenteredDataForPCA].impute_15 * 0.403751426363 + [CenteredDataForPCA].impute_16 * 0.0424693176444 + [CenteredDataForPCA].impute_17 * -0.00522135033359 + [CenteredDataForPCA].impute_18 * -0.279540177584 + [CenteredDataForPCA].impute_19 * -0.0140229203264 + [CenteredDataForPCA].impute_20 * -0.0657518015052 + [CenteredDataForPCA].impute_21 * 0.18448735509 AS anoova_4, [CenteredDataForPCA].impute_2 * 0.198293119924 + [CenteredDataForPCA].impute_3 * 0.158003683408 + [CenteredDataForPCA].impute_4 * 0.0372479534268 + [CenteredDataForPCA].impute_5 * 0.197656179082 + [CenteredDataForPCA].impute_6 * -0.250105614949 + [CenteredDataForPCA].impute_7 * 0.152001253047 + [CenteredDataForPCA].impute_8 * -0.0627228435794 + [CenteredDataForPCA].impute_9 * -0.0483348689346 + [CenteredDataForPCA].impute_10 * -0.0173972321433 + [CenteredDataForPCA].impute_11 * 0.0374510526448 + [CenteredDataForPCA].impute_12 * -0.314265676137 + [CenteredDataForPCA].impute_13 * 0.0216327313415 + [CenteredDataForPCA].impute_14 * -0.0627139058287 + [CenteredDataForPCA].impute_15 * -0.0374166972011 + [CenteredDataForPCA].impute_16 * 0.614468352472 + [CenteredDataForPCA].impute_17 * 0.0768365715239 + [CenteredDataForPCA].impute_18 * 0.0196652602651 + [CenteredDataForPCA].impute_19 * -0.447098851485 + [CenteredDataForPCA].impute_20 * 0.334512975814 + [CenteredDataForPCA].impute_21 * -0.0374733954795 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.190290001603 + [CenteredDataForPCA].impute_3 * -0.353503114418 + [CenteredDataForPCA].impute_4 * 0.301753438525 + [CenteredDataForPCA].impute_5 * 0.0903202777174 + [CenteredDataForPCA].impute_6 * -0.00590230477908 + [CenteredDataForPCA].impute_7 * -0.274072246502 + [CenteredDataForPCA].impute_8 * 0.114208312811 + [CenteredDataForPCA].impute_9 * -0.513455253178 + [CenteredDataForPCA].impute_10 * 0.011503842244 + [CenteredDataForPCA].impute_11 * 0.225736244224 + [CenteredDataForPCA].impute_12 * 0.0619654527705 + [CenteredDataForPCA].impute_13 * 0.264664489268 + [CenteredDataForPCA].impute_14 * -0.0418894023125 + [CenteredDataForPCA].impute_15 * -0.0199711743788 + [CenteredDataForPCA].impute_16 * 0.160617540133 + [CenteredDataForPCA].impute_17 * -0.261479017942 + [CenteredDataForPCA].impute_18 * 0.0255688413567 + [CenteredDataForPCA].impute_19 * -0.142075446658 + [CenteredDataForPCA].impute_20 * -0.19653081795 + [CenteredDataForPCA].impute_21 * -0.327138354392 AS anoova_6, [CenteredDataForPCA].impute_2 * 0.118127691947 + [CenteredDataForPCA].impute_3 * -0.093870814368 + [CenteredDataForPCA].impute_4 * 0.122570948897 + [CenteredDataForPCA].impute_5 * -0.288183462258 + [CenteredDataForPCA].impute_6 * -0.362885774595 + [CenteredDataForPCA].impute_7 * -0.202389960791 + [CenteredDataForPCA].impute_8 * 0.291823814806 + [CenteredDataForPCA].impute_9 * 0.369901643721 + [CenteredDataForPCA].impute_10 * 0.039965688075 + [CenteredDataForPCA].impute_11 * -0.147737898422 + [CenteredDataForPCA].impute_12 * -0.320024751788 + [CenteredDataForPCA].impute_13 * -0.260995104786 + [CenteredDataForPCA].impute_14 * -0.0560159197783 + [CenteredDataForPCA].impute_15 * 0.0408146911519 + [CenteredDataForPCA].impute_16 * -0.103714878852 + [CenteredDataForPCA].impute_17 * -0.186463841692 + [CenteredDataForPCA].impute_18 * -0.0900920541509 + [CenteredDataForPCA].impute_19 * -0.270400021757 + [CenteredDataForPCA].impute_20 * -0.354543498191 + [CenteredDataForPCA].impute_21 * -0.18249271919 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.361572217636 + [CenteredDataForPCA].impute_3 * -0.351858764479 + [CenteredDataForPCA].impute_4 * 0.0162835867302 + [CenteredDataForPCA].impute_5 * 0.479556061419 + [CenteredDataForPCA].impute_6 * 0.141045146974 + [CenteredDataForPCA].impute_7 * 0.0868906087761 + [CenteredDataForPCA].impute_8 * 0.189172523475 + [CenteredDataForPCA].impute_9 * 0.135487146 + [CenteredDataForPCA].impute_10 * -0.0306160152152 + [CenteredDataForPCA].impute_11 * 0.0585885032315 + [CenteredDataForPCA].impute_12 * -0.109510337013 + [CenteredDataForPCA].impute_13 * -0.164126373119 + [CenteredDataForPCA].impute_14 * 0.0747054512497 + [CenteredDataForPCA].impute_15 * -0.135504200557 + [CenteredDataForPCA].impute_16 * 0.0739837196723 + [CenteredDataForPCA].impute_17 * -0.470463030171 + [CenteredDataForPCA].impute_18 * 0.00298143476427 + [CenteredDataForPCA].impute_19 * 0.227853483826 + [CenteredDataForPCA].impute_20 * -0.00416636721802 + [CenteredDataForPCA].impute_21 * 0.296041062913 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.219912612922 + [CenteredDataForPCA].impute_3 * 0.283414072762 + [CenteredDataForPCA].impute_4 * 0.0809422547745 + [CenteredDataForPCA].impute_5 * -0.138964707972 + [CenteredDataForPCA].impute_6 * -0.336199977166 + [CenteredDataForPCA].impute_7 * 0.612873254495 + [CenteredDataForPCA].impute_8 * 0.143746427946 + [CenteredDataForPCA].impute_9 * -0.265990912705 + [CenteredDataForPCA].impute_10 * -0.0803202214354 + [CenteredDataForPCA].impute_11 * 0.198756367114 + [CenteredDataForPCA].impute_12 * 0.0306256781749 + [CenteredDataForPCA].impute_13 * 0.171536808141 + [CenteredDataForPCA].impute_14 * 0.0999084519924 + [CenteredDataForPCA].impute_15 * -0.152574894768 + [CenteredDataForPCA].impute_16 * -0.252898551129 + [CenteredDataForPCA].impute_17 * -0.198981170042 + [CenteredDataForPCA].impute_18 * 0.131040676332 + [CenteredDataForPCA].impute_19 * 0.0455654615579 + [CenteredDataForPCA].impute_20 * -0.179356809556 + [CenteredDataForPCA].impute_21 * -0.0291008512842 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.377178188159 + [CenteredDataForPCA].impute_3 * 0.238640486543 + [CenteredDataForPCA].impute_4 * 0.374325586065 + [CenteredDataForPCA].impute_5 * 0.402306204022 + [CenteredDataForPCA].impute_6 * -0.0382817432133 + [CenteredDataForPCA].impute_7 * 0.216603735217 + [CenteredDataForPCA].impute_8 * 0.309037198322 + [CenteredDataForPCA].impute_9 * 0.256975807045 + [CenteredDataForPCA].impute_10 * 0.0997998924353 + [CenteredDataForPCA].impute_11 * 0.0774549724934 + [CenteredDataForPCA].impute_12 * 0.151625108704 + [CenteredDataForPCA].impute_13 * -0.190906200382 + [CenteredDataForPCA].impute_14 * -0.0465995927346 + [CenteredDataForPCA].impute_15 * 0.0504244076821 + [CenteredDataForPCA].impute_16 * 0.20032922648 + [CenteredDataForPCA].impute_17 * 0.219184262529 + [CenteredDataForPCA].impute_18 * -0.0275543785501 + [CenteredDataForPCA].impute_19 * 0.221007890676 + [CenteredDataForPCA].impute_20 * -0.194059953305 + [CenteredDataForPCA].impute_21 * -0.182616699615 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.241338678495 + [CenteredDataForPCA].impute_3 * 0.174364587473 + [CenteredDataForPCA].impute_4 * -0.0923559862766 + [CenteredDataForPCA].impute_5 * 0.0801644682704 + [CenteredDataForPCA].impute_6 * -0.168952690097 + [CenteredDataForPCA].impute_7 * -0.299087390718 + [CenteredDataForPCA].impute_8 * 0.151010012394 + [CenteredDataForPCA].impute_9 * -0.197156807968 + [CenteredDataForPCA].impute_10 * 0.0113095127693 + [CenteredDataForPCA].impute_11 * 0.102190349075 + [CenteredDataForPCA].impute_12 * -0.344445724748 + [CenteredDataForPCA].impute_13 * 0.10803746393 + [CenteredDataForPCA].impute_14 * -0.526169690206 + [CenteredDataForPCA].impute_15 * -0.000937621372765 + [CenteredDataForPCA].impute_16 * -0.0455261090545 + [CenteredDataForPCA].impute_17 * 0.218944825824 + [CenteredDataForPCA].impute_18 * 0.0173807267469 + [CenteredDataForPCA].impute_19 * 0.497850943185 + [CenteredDataForPCA].impute_20 * 0.00124917058082 + [CenteredDataForPCA].impute_21 * -0.0285259992967 AS anoova_11, [CenteredDataForPCA].impute_2 * -0.02424836793 + [CenteredDataForPCA].impute_3 * -0.053998995437 + [CenteredDataForPCA].impute_4 * 0.228251401957 + [CenteredDataForPCA].impute_5 * -0.0403936936262 + [CenteredDataForPCA].impute_6 * 0.349171276426 + [CenteredDataForPCA].impute_7 * 0.347740929555 + [CenteredDataForPCA].impute_8 * -0.519300127568 + [CenteredDataForPCA].impute_9 * 0.0100606167794 + [CenteredDataForPCA].impute_10 * 0.0101965152677 + [CenteredDataForPCA].impute_11 * -0.184890543927 + [CenteredDataForPCA].impute_12 * -0.430425267391 + [CenteredDataForPCA].impute_13 * 0.0373135766809 + [CenteredDataForPCA].impute_14 * -0.229470245074 + [CenteredDataForPCA].impute_15 * 0.11563033774 + [CenteredDataForPCA].impute_16 * 0.0442779876698 + [CenteredDataForPCA].impute_17 * -0.089321326496 + [CenteredDataForPCA].impute_18 * -0.0651739911652 + [CenteredDataForPCA].impute_19 * 0.0961018482446 + [CenteredDataForPCA].impute_20 * -0.314811110744 + [CenteredDataForPCA].impute_21 * -0.143686622816 AS anoova_12, [CenteredDataForPCA].impute_2 * -0.534339410565 + [CenteredDataForPCA].impute_3 * -0.025590162541 + [CenteredDataForPCA].impute_4 * -0.494105423705 + [CenteredDataForPCA].impute_5 * 0.281850366282 + [CenteredDataForPCA].impute_6 * -0.339369725509 + [CenteredDataForPCA].impute_7 * 0.0832259696303 + [CenteredDataForPCA].impute_8 * -0.191835458886 + [CenteredDataForPCA].impute_9 * 0.0209433683105 + [CenteredDataForPCA].impute_10 * 0.0726282961973 + [CenteredDataForPCA].impute_11 * 0.117216792581 + [CenteredDataForPCA].impute_12 * -0.101654742854 + [CenteredDataForPCA].impute_13 * -0.0356892902538 + [CenteredDataForPCA].impute_14 * -0.259373545744 + [CenteredDataForPCA].impute_15 * 0.0394024958842 + [CenteredDataForPCA].impute_16 * -0.138601531105 + [CenteredDataForPCA].impute_17 * -0.288556613605 + [CenteredDataForPCA].impute_18 * -0.00317966699026 + [CenteredDataForPCA].impute_19 * -0.109135639354 + [CenteredDataForPCA].impute_20 * -0.0661262715 + [CenteredDataForPCA].impute_21 * 0.112654170472 AS anoova_13, [CenteredDataForPCA].impute_2 * -0.173699355636 + [CenteredDataForPCA].impute_3 * 0.508937076616 + [CenteredDataForPCA].impute_4 * -0.156618089142 + [CenteredDataForPCA].impute_5 * -0.256907104225 + [CenteredDataForPCA].impute_6 * 0.327890064219 + [CenteredDataForPCA].impute_7 * -0.190359854088 + [CenteredDataForPCA].impute_8 * 0.185859356532 + [CenteredDataForPCA].impute_9 * -0.0138085545877 + [CenteredDataForPCA].impute_10 * -0.00964478663755 + [CenteredDataForPCA].impute_11 * 0.0971802569733 + [CenteredDataForPCA].impute_12 * -0.130717153027 + [CenteredDataForPCA].impute_13 * 0.0644368497629 + [CenteredDataForPCA].impute_14 * 0.116950686261 + [CenteredDataForPCA].impute_15 * -0.0238238328295 + [CenteredDataForPCA].impute_16 * 0.375983882596 + [CenteredDataForPCA].impute_17 * -0.35575475859 + [CenteredDataForPCA].impute_18 * 0.0905027097519 + [CenteredDataForPCA].impute_19 * 0.0553164210302 + [CenteredDataForPCA].impute_20 * -0.235123329257 + [CenteredDataForPCA].impute_21 * 0.249635446025 AS anoova_14, [CenteredDataForPCA].impute_2 * -0.1221613098 + [CenteredDataForPCA].impute_3 * 0.00620335013643 + [CenteredDataForPCA].impute_4 * 0.183229958532 + [CenteredDataForPCA].impute_5 * 0.0953664320364 + [CenteredDataForPCA].impute_6 * -0.381007158592 + [CenteredDataForPCA].impute_7 * -0.21724786028 + [CenteredDataForPCA].impute_8 * -0.296315329457 + [CenteredDataForPCA].impute_9 * -0.0331602038454 + [CenteredDataForPCA].impute_10 * 0.0237788007099 + [CenteredDataForPCA].impute_11 * 0.0114319824036 + [CenteredDataForPCA].impute_12 * -0.323887150674 + [CenteredDataForPCA].impute_13 * 0.0901052972902 + [CenteredDataForPCA].impute_14 * 0.642827420261 + [CenteredDataForPCA].impute_15 * 0.0721648574225 + [CenteredDataForPCA].impute_16 * 0.00678825902011 + [CenteredDataForPCA].impute_17 * 0.0973593279264 + [CenteredDataForPCA].impute_18 * 0.0358085897069 + [CenteredDataForPCA].impute_19 * 0.292068141848 + [CenteredDataForPCA].impute_20 * -0.0628650079067 + [CenteredDataForPCA].impute_21 * 0.169967299947 AS anoova_15, [CenteredDataForPCA].impute_2 * 0.251424973446 + [CenteredDataForPCA].impute_3 * -0.0212649940347 + [CenteredDataForPCA].impute_4 * -0.408122127834 + [CenteredDataForPCA].impute_5 * -0.0198427562967 + [CenteredDataForPCA].impute_6 * -0.177550232616 + [CenteredDataForPCA].impute_7 * 0.00483865547343 + [CenteredDataForPCA].impute_8 * -0.205795337086 + [CenteredDataForPCA].impute_9 * 0.0964206168073 + [CenteredDataForPCA].impute_10 * 0.024903584729 + [CenteredDataForPCA].impute_11 * -0.103537650831 + [CenteredDataForPCA].impute_12 * 0.333890323545 + [CenteredDataForPCA].impute_13 * -0.0124537154702 + [CenteredDataForPCA].impute_14 * 0.123855810791 + [CenteredDataForPCA].impute_15 * 0.0890603508959 + [CenteredDataForPCA].impute_16 * 0.381707717166 + [CenteredDataForPCA].impute_17 * -0.127804998935 + [CenteredDataForPCA].impute_18 * -0.0258638355982 + [CenteredDataForPCA].impute_19 * 0.305950338578 + [CenteredDataForPCA].impute_20 * -0.197634979629 + [CenteredDataForPCA].impute_21 * -0.494530692663 AS anoova_16, [CenteredDataForPCA].impute_2 * 0.303656933644 + [CenteredDataForPCA].impute_3 * 0.305307076227 + [CenteredDataForPCA].impute_4 * -0.11378485673 + [CenteredDataForPCA].impute_5 * 0.477859732812 + [CenteredDataForPCA].impute_6 * 0.144861107075 + [CenteredDataForPCA].impute_7 * -0.224712560973 + [CenteredDataForPCA].impute_8 * -0.145411067289 + [CenteredDataForPCA].impute_9 * -0.0747171473015 + [CenteredDataForPCA].impute_10 * 0.00499017750237 + [CenteredDataForPCA].impute_11 * 0.0396808290042 + [CenteredDataForPCA].impute_12 * 0.0757781777519 + [CenteredDataForPCA].impute_13 * 0.0126543125392 + [CenteredDataForPCA].impute_14 * 0.0966204784873 + [CenteredDataForPCA].impute_15 * -0.0147197869736 + [CenteredDataForPCA].impute_16 * -0.231861699746 + [CenteredDataForPCA].impute_17 * 0.190709475692 + [CenteredDataForPCA].impute_18 * -0.0128604623188 + [CenteredDataForPCA].impute_19 * -0.383739781994 + [CenteredDataForPCA].impute_20 * -0.469512430198 + [CenteredDataForPCA].impute_21 * -0.005293702027 AS anoova_17, [CenteredDataForPCA].impute_2 * -0.117578796644 + [CenteredDataForPCA].impute_3 * -0.207263080221 + [CenteredDataForPCA].impute_4 * -0.427688823488 + [CenteredDataForPCA].impute_5 * 0.0364058898589 + [CenteredDataForPCA].impute_6 * 0.279237906074 + [CenteredDataForPCA].impute_7 * 0.190990423866 + [CenteredDataForPCA].impute_8 * 0.350857808213 + [CenteredDataForPCA].impute_9 * -0.0372935673175 + [CenteredDataForPCA].impute_10 * -0.0346618458314 + [CenteredDataForPCA].impute_11 * 0.104567359944 + [CenteredDataForPCA].impute_12 * -0.437088498103 + [CenteredDataForPCA].impute_13 * 0.0332418600707 + [CenteredDataForPCA].impute_14 * 0.318583404137 + [CenteredDataForPCA].impute_15 * -0.0834856996401 + [CenteredDataForPCA].impute_16 * -0.0646602133194 + [CenteredDataForPCA].impute_17 * 0.286061356345 + [CenteredDataForPCA].impute_18 * 0.0765977418592 + [CenteredDataForPCA].impute_19 * -0.0148599961321 + [CenteredDataForPCA].impute_20 * -0.00910432632554 + [CenteredDataForPCA].impute_21 * -0.339257419058 AS anoova_18, [CenteredDataForPCA].impute_2 * -0.00487019494149 + [CenteredDataForPCA].impute_3 * 0.37953527079 + [CenteredDataForPCA].impute_4 * 0.101106088636 + [CenteredDataForPCA].impute_5 * 0.183237456195 + [CenteredDataForPCA].impute_6 * 0.118863078562 + [CenteredDataForPCA].impute_7 * -0.13560061704 + [CenteredDataForPCA].impute_8 * -0.00803210697835 + [CenteredDataForPCA].impute_9 * 0.0196115697753 + [CenteredDataForPCA].impute_10 * 0.0520958828865 + [CenteredDataForPCA].impute_11 * -0.116466594137 + [CenteredDataForPCA].impute_12 * -0.117914724585 + [CenteredDataForPCA].impute_13 * -0.0208245733269 + [CenteredDataForPCA].impute_14 * 0.118439953568 + [CenteredDataForPCA].impute_15 * 0.117744722716 + [CenteredDataForPCA].impute_16 * -0.322662264032 + [CenteredDataForPCA].impute_17 * -0.413452011706 + [CenteredDataForPCA].impute_18 * -0.0937297778812 + [CenteredDataForPCA].impute_19 * 0.0269659084771 + [CenteredDataForPCA].impute_20 * 0.475478871537 + [CenteredDataForPCA].impute_21 * -0.458270485983 AS anoova_19, [CenteredDataForPCA].impute_2 * -4.85574535224e-17 + [CenteredDataForPCA].impute_3 * 3.30322798793e-16 + [CenteredDataForPCA].impute_4 * 5.68620901288e-16 + [CenteredDataForPCA].impute_5 * -9.9398084694e-17 + [CenteredDataForPCA].impute_6 * -2.09039115071e-16 + [CenteredDataForPCA].impute_7 * -1.56921594853e-16 + [CenteredDataForPCA].impute_8 * -2.34588861195e-17 + [CenteredDataForPCA].impute_9 * 0.334122418724 + [CenteredDataForPCA].impute_10 * -0.382666815846 + [CenteredDataForPCA].impute_11 * 0.308255857687 + [CenteredDataForPCA].impute_12 * -1.70394179343e-16 + [CenteredDataForPCA].impute_13 * 0.463695099589 + [CenteredDataForPCA].impute_14 * 5.64223345946e-17 + [CenteredDataForPCA].impute_15 * -0.0222690641681 + [CenteredDataForPCA].impute_16 * -6.06628787419e-17 + [CenteredDataForPCA].impute_17 * -3.76231441809e-17 + [CenteredDataForPCA].impute_18 * -0.656808638004 + [CenteredDataForPCA].impute_19 * -4.94882102889e-17 + [CenteredDataForPCA].impute_20 * 9.98462555653e-17 + [CenteredDataForPCA].impute_21 * 5.16019620051e-17 AS anoova_20, [CenteredDataForPCA].impute_2 * 1.18340645842e-16 + [CenteredDataForPCA].impute_3 * 3.33127875926e-16 + [CenteredDataForPCA].impute_4 * 2.96436068649e-17 + [CenteredDataForPCA].impute_5 * 3.46097365155e-16 + [CenteredDataForPCA].impute_6 * -1.07642360559e-16 + [CenteredDataForPCA].impute_7 * 1.20571919115e-16 + [CenteredDataForPCA].impute_8 * -1.30436615192e-16 + [CenteredDataForPCA].impute_9 * 0.149631852346 + [CenteredDataForPCA].impute_10 * 0.704587060642 + [CenteredDataForPCA].impute_11 * -0.170072338489 + [CenteredDataForPCA].impute_12 * -8.77263386219e-17 + [CenteredDataForPCA].impute_13 * 0.376399922532 + [CenteredDataForPCA].impute_14 * 5.41126620573e-17 + [CenteredDataForPCA].impute_15 * -0.541885610447 + [CenteredDataForPCA].impute_16 * -2.50909273016e-16 + [CenteredDataForPCA].impute_17 * -3.91678232601e-18 + [CenteredDataForPCA].impute_18 * -0.130099446306 + [CenteredDataForPCA].impute_19 * -5.33897258728e-17 + [CenteredDataForPCA].impute_20 * 5.22405092601e-17 + [CenteredDataForPCA].impute_21 * -2.39990210661e-16 AS anoova_21 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -1.0252681970596313) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.2103155106306076) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -1.0252681970596313 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21 AS [Proba_0.0], -1.56064774826 AS [LogProba_0.0], 0.23 AS [Proba_1.0], -1.46967597006 AS [LogProba_1.0], 0.33 AS [Proba_2.0], -1.10866262452 AS [LogProba_2.0], 0.23 AS [Proba_3.0], -1.46967597006 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12 AS [Proba_0.0], -2.1202635362 AS [LogProba_0.0], 0.24 AS [Proba_1.0], -1.42711635564 AS [LogProba_1.0], 0.6 AS [Proba_2.0], -0.510825623766 AS [LogProba_2.0], 0.04 AS [Proba_3.0], -3.21887582487 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.2103155106306076 AS threshold, 49 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS [Proba_0.0], -1.42711635564 AS [LogProba_0.0], 0.22666666666666666 AS [Proba_1.0], -1.48427476948 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.29333333333333333 AS [Proba_3.0], -1.22644566018 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06666666666666667 AS [Proba_0.0], -2.7080502011 AS [LogProba_0.0], 0.17777777777777778 AS [Proba_1.0], -1.72722094809 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0.4222222222222222 AS [Proba_3.0], -0.862223510604 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS [Proba_0.0], -0.69314718056 AS [LogProba_0.0], 0.3 AS [Proba_1.0], -1.20397280433 AS [LogProba_1.0], 0.1 AS [Proba_2.0], -2.30258509299 AS [LogProba_2.0], 0.1 AS [Proba_3.0], -2.30258509299 AS [LogProba_3.0], 0 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0.0] AS [Proba_0.0], [DT_node_data].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data].[Proba_1.0] AS [Proba_1.0], [DT_node_data].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data].[Proba_2.0] AS [Proba_2.0], [DT_node_data].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data].[Proba_3.0] AS [Proba_3.0], [DT_node_data].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0.0] AS [Proba_0_0], [DT_Output].[LogProba_0.0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1.0] AS [Proba_0_1], [DT_Output].[LogProba_1.0] AS [LogProba_0_1], CAST(NULL AS FLOAT) AS [Score_0_2], [DT_Output].[Proba_2.0] AS [Proba_0_2], [DT_Output].[LogProba_2.0] AS [LogProba_0_2], CAST(NULL AS FLOAT) AS [Score_0_3], [DT_Output].[Proba_3.0] AS [Proba_0_3], [DT_Output].[LogProba_3.0] AS [LogProba_0_3] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.12020948529243469) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.0812271311879158) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, 0.12020948529243469 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19 AS [Proba_0.0], -1.66073120682 AS [LogProba_0.0], 0.29 AS [Proba_1.0], -1.237874356 AS [LogProba_1.0], 0.3 AS [Proba_2.0], -1.20397280433 AS [LogProba_2.0], 0.22 AS [Proba_3.0], -1.51412773263 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19148936170212766 AS [Proba_0.0], -1.65292302437 AS [LogProba_0.0], 0.3617021276595745 AS [Proba_1.0], -1.01693425765 AS [LogProba_1.0], 0.3617021276595745 AS [Proba_2.0], -1.01693425765 AS [LogProba_2.0], 0.0851063829787234 AS [Proba_3.0], -2.46385324059 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.0812271311879158 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18867924528301888 AS [Proba_0.0], -1.66770682056 AS [LogProba_0.0], 0.22641509433962265 AS [Proba_1.0], -1.48538526376 AS [LogProba_1.0], 0.24528301886792453 AS [Proba_2.0], -1.40534255609 AS [LogProba_2.0], 0.33962264150943394 AS [Proba_3.0], -1.07992015566 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.1724137931034483 AS [Proba_1.0], -1.75785791755 AS [LogProba_1.0], 0.3793103448275862 AS [Proba_2.0], -0.969400557188 AS [LogProba_2.0], 0.4482758620689655 AS [Proba_3.0], -0.802346472525 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4166666666666667 AS [Proba_0.0], -0.875468737354 AS [LogProba_0.0], 0.2916666666666667 AS [Proba_1.0], -1.23214368129 AS [LogProba_1.0], 0.08333333333333333 AS [Proba_2.0], -2.48490664979 AS [LogProba_2.0], 0.20833333333333334 AS [Proba_3.0], -1.56861591791 AS [LogProba_3.0], 0 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0.0] AS [Proba_0.0], [DT_node_data_1].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_1].[Proba_1.0] AS [Proba_1.0], [DT_node_data_1].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_1].[Proba_2.0] AS [Proba_2.0], [DT_node_data_1].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_1].[Proba_3.0] AS [Proba_3.0], [DT_node_data_1].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0.0] AS [Proba_1_0], [DT_Output_1].[LogProba_0.0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1.0] AS [Proba_1_1], [DT_Output_1].[LogProba_1.0] AS [LogProba_1_1], CAST(NULL AS FLOAT) AS [Score_1_2], [DT_Output_1].[Proba_2.0] AS [Proba_1_2], [DT_Output_1].[LogProba_2.0] AS [LogProba_1_2], CAST(NULL AS FLOAT) AS [Score_1_3], [DT_Output_1].[Proba_3.0] AS [Proba_1_3], [DT_Output_1].[LogProba_3.0] AS [LogProba_1_3] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.459078311920166) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_13 <= 0.6097568273544312) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.031000271439552307) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.459078311920166 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.22 AS [Proba_0.0], -1.51412773263 AS [LogProba_0.0], 0.26 AS [Proba_1.0], -1.34707364797 AS [LogProba_1.0], 0.31 AS [Proba_2.0], -1.1711829815 AS [LogProba_2.0], 0.21 AS [Proba_3.0], -1.56064774826 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.041666666666666664 AS [Proba_0.0], -3.17805383035 AS [LogProba_0.0], 0.20833333333333334 AS [Proba_1.0], -1.56861591791 AS [LogProba_1.0], 0.16666666666666666 AS [Proba_2.0], -1.79175946923 AS [LogProba_2.0], 0.5833333333333334 AS [Proba_3.0], -0.538996500733 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_13' AS feature, 0.6097568273544312 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.27631578947368424 AS [Proba_0.0], -1.28621090256 AS [LogProba_0.0], 0.27631578947368424 AS [Proba_1.0], -1.28621090256 AS [LogProba_1.0], 0.35526315789473684 AS [Proba_2.0], -1.03489647428 AS [LogProba_2.0], 0.09210526315789473 AS [Proba_3.0], -2.38482319123 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anoova_8' AS feature, 0.031000271439552307 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32653061224489793 AS [Proba_0.0], -1.11923157587 AS [LogProba_0.0], 0.16326530612244897 AS [Proba_1.0], -1.81237875643 AS [LogProba_1.0], 0.42857142857142855 AS [Proba_2.0], -0.847297860387 AS [LogProba_2.0], 0.08163265306122448 AS [Proba_3.0], -2.50552593699 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19230769230769232 AS [Proba_0.0], -1.64865862559 AS [LogProba_0.0], 0.23076923076923078 AS [Proba_1.0], -1.46633706879 AS [LogProba_1.0], 0.5 AS [Proba_2.0], -0.69314718056 AS [LogProba_2.0], 0.07692307692307693 AS [Proba_3.0], -2.56494935746 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4782608695652174 AS [Proba_0.0], -0.737598943131 AS [LogProba_0.0], 0.08695652173913043 AS [Proba_1.0], -2.44234703537 AS [LogProba_1.0], 0.34782608695652173 AS [Proba_2.0], -1.05605267425 AS [LogProba_2.0], 0.08695652173913043 AS [Proba_3.0], -2.44234703537 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18518518518518517 AS [Proba_0.0], -1.68639895357 AS [LogProba_0.0], 0.48148148148148145 AS [Proba_1.0], -0.730887508543 AS [LogProba_1.0], 0.2222222222222222 AS [Proba_2.0], -1.50407739678 AS [LogProba_2.0], 0.1111111111111111 AS [Proba_3.0], -2.19722457734 AS [LogProba_3.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0.0] AS [Proba_0.0], [DT_node_data_2].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_2].[Proba_1.0] AS [Proba_1.0], [DT_node_data_2].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_2].[Proba_2.0] AS [Proba_2.0], [DT_node_data_2].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_2].[Proba_3.0] AS [Proba_3.0], [DT_node_data_2].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0.0] AS [Proba_2_0], [DT_Output_2].[LogProba_0.0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1.0] AS [Proba_2_1], [DT_Output_2].[LogProba_1.0] AS [LogProba_2_1], CAST(NULL AS FLOAT) AS [Score_2_2], [DT_Output_2].[Proba_2.0] AS [Proba_2_2], [DT_Output_2].[LogProba_2.0] AS [LogProba_2_2], CAST(NULL AS FLOAT) AS [Score_2_3], [DT_Output_2].[Proba_3.0] AS [Proba_2_3], [DT_Output_2].[LogProba_3.0] AS [LogProba_2_3] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -1.3613930940628052) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_13 <= 0.1529628187417984) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.3613930940628052 AS threshold, 61 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.28 AS [Proba_0.0], -1.27296567581 AS [LogProba_0.0], 0.2 AS [Proba_1.0], -1.60943791243 AS [LogProba_1.0], 0.22 AS [Proba_2.0], -1.51412773263 AS [LogProba_2.0], 0.3 AS [Proba_3.0], -1.20397280433 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6216216216216216 AS [Proba_0.0], -0.475423696715 AS [LogProba_0.0], 0.13513513513513514 AS [Proba_1.0], -2.00148000021 AS [LogProba_1.0], 0.02702702702702703 AS [Proba_2.0], -3.61091791264 AS [LogProba_2.0], 0.21621621621621623 AS [Proba_3.0], -1.53147637096 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_13' AS feature, 0.1529628187417984 AS threshold, 37 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07936507936507936 AS [Proba_0.0], -2.53369681396 AS [LogProba_0.0], 0.23809523809523808 AS [Proba_1.0], -1.43508452529 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0.3492063492063492 AS [Proba_3.0], -1.05209227303 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS [Proba_0.0], -2.19722457734 AS [LogProba_0.0], 0.1111111111111111 AS [Proba_1.0], -2.19722457734 AS [LogProba_1.0], 0.2962962962962963 AS [Proba_2.0], -1.21639532432 AS [LogProba_2.0], 0.48148148148148145 AS [Proba_3.0], -0.730887508543 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05555555555555555 AS [Proba_0.0], -2.8903717579 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.3611111111111111 AS [Proba_2.0], -1.01856958099 AS [LogProba_2.0], 0.25 AS [Proba_3.0], -1.38629436112 AS [LogProba_3.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0.0] AS [Proba_0.0], [DT_node_data_3].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_3].[Proba_1.0] AS [Proba_1.0], [DT_node_data_3].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_3].[Proba_2.0] AS [Proba_2.0], [DT_node_data_3].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_3].[Proba_3.0] AS [Proba_3.0], [DT_node_data_3].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0.0] AS [Proba_3_0], [DT_Output_3].[LogProba_0.0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1.0] AS [Proba_3_1], [DT_Output_3].[LogProba_1.0] AS [LogProba_3_1], CAST(NULL AS FLOAT) AS [Score_3_2], [DT_Output_3].[Proba_2.0] AS [Proba_3_2], [DT_Output_3].[LogProba_2.0] AS [LogProba_3_2], CAST(NULL AS FLOAT) AS [Score_3_3], [DT_Output_3].[Proba_3.0] AS [Proba_3_3], [DT_Output_3].[LogProba_3.0] AS [LogProba_3_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.20065675675868988) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.08265937864780426) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.20065675675868988 AS threshold, 65 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29 AS [Proba_0.0], -1.237874356 AS [LogProba_0.0], 0.27 AS [Proba_1.0], -1.30933331998 AS [LogProba_1.0], 0.25 AS [Proba_2.0], -1.38629436112 AS [LogProba_2.0], 0.19 AS [Proba_3.0], -1.66073120682 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0975609756097561 AS [Proba_0.0], -2.32727770558 AS [LogProba_0.0], 0.14634146341463414 AS [Proba_1.0], -1.92181259748 AS [LogProba_1.0], 0.3902439024390244 AS [Proba_2.0], -0.940983344465 AS [LogProba_2.0], 0.36585365853658536 AS [Proba_3.0], -1.0055218656 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_19' AS feature, -0.08265937864780426 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.423728813559322 AS [Proba_0.0], -0.858661619038 AS [LogProba_0.0], 0.3559322033898305 AS [Proba_1.0], -1.03301500618 AS [LogProba_1.0], 0.15254237288135594 AS [Proba_2.0], -1.88031286657 AS [LogProba_2.0], 0.06779661016949153 AS [Proba_3.0], -2.69124308279 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6071428571428571 AS [Proba_0.0], -0.498991166119 AS [LogProba_0.0], 0.14285714285714285 AS [Proba_1.0], -1.94591014906 AS [LogProba_1.0], 0.17857142857142858 AS [Proba_2.0], -1.72276659774 AS [LogProba_2.0], 0.07142857142857142 AS [Proba_3.0], -2.63905732962 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25806451612903225 AS [Proba_0.0], -1.35454566281 AS [LogProba_0.0], 0.5483870967741935 AS [Proba_1.0], -0.600773860429 AS [LogProba_1.0], 0.12903225806451613 AS [Proba_2.0], -2.04769284337 AS [LogProba_2.0], 0.06451612903225806 AS [Proba_3.0], -2.74084002393 AS [LogProba_3.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0.0] AS [Proba_0.0], [DT_node_data_4].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_4].[Proba_1.0] AS [Proba_1.0], [DT_node_data_4].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_4].[Proba_2.0] AS [Proba_2.0], [DT_node_data_4].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_4].[Proba_3.0] AS [Proba_3.0], [DT_node_data_4].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_4].[Decision] AS [Decision] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, CAST(NULL AS FLOAT) AS [Score_4_0], [DT_Output_4].[Proba_0.0] AS [Proba_4_0], [DT_Output_4].[LogProba_0.0] AS [LogProba_4_0], CAST(NULL AS FLOAT) AS [Score_4_1], [DT_Output_4].[Proba_1.0] AS [Proba_4_1], [DT_Output_4].[LogProba_1.0] AS [LogProba_4_1], CAST(NULL AS FLOAT) AS [Score_4_2], [DT_Output_4].[Proba_2.0] AS [Proba_4_2], [DT_Output_4].[LogProba_2.0] AS [LogProba_4_2], CAST(NULL AS FLOAT) AS [Score_4_3], [DT_Output_4].[Proba_3.0] AS [Proba_4_3], [DT_Output_4].[LogProba_3.0] AS [LogProba_4_3] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -1.2379482984542847) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -0.32424890995025635) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.012532862834632397) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, -1.2379482984542847 AS threshold, 63 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS [Proba_0.0], -1.42711635564 AS [LogProba_0.0], 0.24 AS [Proba_1.0], -1.42711635564 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.28 AS [Proba_3.0], -1.27296567581 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.043478260869565216 AS [Proba_0.0], -3.13549421593 AS [LogProba_0.0], 0.391304347826087 AS [Proba_1.0], -0.938269638593 AS [LogProba_1.0], 0.43478260869565216 AS [Proba_2.0], -0.832909122935 AS [LogProba_2.0], 0.13043478260869565 AS [Proba_3.0], -2.03688192726 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -0.32424890995025635 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2987012987012987 AS [Proba_0.0], -1.20831120592 AS [LogProba_0.0], 0.19480519480519481 AS [Proba_1.0], -1.63575522075 AS [LogProba_1.0], 0.18181818181818182 AS [Proba_2.0], -1.70474809224 AS [LogProba_2.0], 0.3246753246753247 AS [Proba_3.0], -1.12492959699 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS [Proba_0.0], -2.19722457734 AS [LogProba_0.0], 0.2222222222222222 AS [Proba_1.0], -1.50407739678 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0.6666666666666666 AS [Proba_3.0], -0.405465108108 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 4 AS node_id, 'anoova_11' AS feature, 0.012532862834632397 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS [Proba_0.0], -0.916290731874 AS [LogProba_0.0], 0.18 AS [Proba_1.0], -1.71479842809 AS [LogProba_1.0], 0.28 AS [Proba_2.0], -1.27296567581 AS [LogProba_2.0], 0.14 AS [Proba_3.0], -1.96611285637 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.42857142857142855 AS [Proba_0.0], -0.847297860387 AS [LogProba_0.0], 0.07142857142857142 AS [Proba_1.0], -2.63905732962 AS [LogProba_1.0], 0.35714285714285715 AS [Proba_2.0], -1.02961941718 AS [LogProba_2.0], 0.14285714285714285 AS [Proba_3.0], -1.94591014906 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36363636363636365 AS [Proba_0.0], -1.01160091168 AS [LogProba_0.0], 0.3181818181818182 AS [Proba_1.0], -1.1451323043 AS [LogProba_1.0], 0.18181818181818182 AS [Proba_2.0], -1.70474809224 AS [LogProba_2.0], 0.13636363636363635 AS [Proba_3.0], -1.99243016469 AS [LogProba_3.0], 0 AS [Decision]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0.0] AS [Proba_0.0], [DT_node_data_5].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_5].[Proba_1.0] AS [Proba_1.0], [DT_node_data_5].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_5].[Proba_2.0] AS [Proba_2.0], [DT_node_data_5].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_5].[Proba_3.0] AS [Proba_3.0], [DT_node_data_5].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_5].[Decision] AS [Decision] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, CAST(NULL AS FLOAT) AS [Score_5_0], [DT_Output_5].[Proba_0.0] AS [Proba_5_0], [DT_Output_5].[LogProba_0.0] AS [LogProba_5_0], CAST(NULL AS FLOAT) AS [Score_5_1], [DT_Output_5].[Proba_1.0] AS [Proba_5_1], [DT_Output_5].[LogProba_1.0] AS [LogProba_5_1], CAST(NULL AS FLOAT) AS [Score_5_2], [DT_Output_5].[Proba_2.0] AS [Proba_5_2], [DT_Output_5].[LogProba_2.0] AS [LogProba_5_2], CAST(NULL AS FLOAT) AS [Score_5_3], [DT_Output_5].[Proba_3.0] AS [Proba_5_3], [DT_Output_5].[LogProba_3.0] AS [LogProba_5_3] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.11229577660560608) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_15 <= -0.23803246021270752) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.11229577660560608 AS threshold, 58 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.22 AS [Proba_0.0], -1.51412773263 AS [LogProba_0.0], 0.24 AS [Proba_1.0], -1.42711635564 AS [LogProba_1.0], 0.25 AS [Proba_2.0], -1.38629436112 AS [LogProba_2.0], 0.29 AS [Proba_3.0], -1.237874356 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03773584905660377 AS [Proba_0.0], -3.27714473299 AS [LogProba_0.0], 0.1320754716981132 AS [Proba_1.0], -2.0243817645 AS [LogProba_1.0], 0.33962264150943394 AS [Proba_2.0], -1.07992015566 AS [LogProba_2.0], 0.49056603773584906 AS [Proba_3.0], -0.712195375531 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_15' AS feature, -0.23803246021270752 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.425531914893617 AS [Proba_0.0], -0.854415328156 AS [LogProba_0.0], 0.3617021276595745 AS [Proba_1.0], -1.01693425765 AS [LogProba_1.0], 0.14893617021276595 AS [Proba_2.0], -1.90423745265 AS [LogProba_2.0], 0.06382978723404255 AS [Proba_3.0], -2.75153531304 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2962962962962963 AS [Proba_0.0], -1.21639532432 AS [LogProba_0.0], 0.5185185185185185 AS [Proba_1.0], -0.656779536389 AS [LogProba_1.0], 0.18518518518518517 AS [Proba_2.0], -1.68639895357 AS [LogProba_2.0], 0.0 AS [Proba_3.0], -1.79769313486231e+308 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6 AS [Proba_0.0], -0.510825623766 AS [LogProba_0.0], 0.15 AS [Proba_1.0], -1.89711998489 AS [LogProba_1.0], 0.1 AS [Proba_2.0], -2.30258509299 AS [LogProba_2.0], 0.15 AS [Proba_3.0], -1.89711998489 AS [LogProba_3.0], 0 AS [Decision]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Proba_0.0] AS [Proba_0.0], [DT_node_data_6].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_6].[Proba_1.0] AS [Proba_1.0], [DT_node_data_6].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_6].[Proba_2.0] AS [Proba_2.0], [DT_node_data_6].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_6].[Proba_3.0] AS [Proba_3.0], [DT_node_data_6].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_6].[Decision] AS [Decision] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, CAST(NULL AS FLOAT) AS [Score_6_0], [DT_Output_6].[Proba_0.0] AS [Proba_6_0], [DT_Output_6].[LogProba_0.0] AS [LogProba_6_0], CAST(NULL AS FLOAT) AS [Score_6_1], [DT_Output_6].[Proba_1.0] AS [Proba_6_1], [DT_Output_6].[LogProba_1.0] AS [LogProba_6_1], CAST(NULL AS FLOAT) AS [Score_6_2], [DT_Output_6].[Proba_2.0] AS [Proba_6_2], [DT_Output_6].[LogProba_2.0] AS [LogProba_6_2], CAST(NULL AS FLOAT) AS [Score_6_3], [DT_Output_6].[Proba_3.0] AS [Proba_6_3], [DT_Output_6].[LogProba_3.0] AS [LogProba_6_3] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.7228596806526184) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_13 <= 0.1529628187417984) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -1.169339656829834) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.7228596806526184 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21 AS [Proba_0.0], -1.56064774826 AS [LogProba_0.0], 0.33 AS [Proba_1.0], -1.10866262452 AS [LogProba_1.0], 0.3 AS [Proba_2.0], -1.20397280433 AS [LogProba_2.0], 0.16 AS [Proba_3.0], -1.83258146375 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS [Proba_0.0], -2.48490664979 AS [LogProba_0.0], 0.125 AS [Proba_1.0], -2.07944154168 AS [LogProba_1.0], 0.6666666666666666 AS [Proba_2.0], -0.405465108108 AS [LogProba_2.0], 0.125 AS [Proba_3.0], -2.07944154168 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_13' AS feature, 0.1529628187417984 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.39473684210526316 AS [Proba_1.0], -0.929535958624 AS [LogProba_1.0], 0.18421052631578946 AS [Proba_2.0], -1.69167601067 AS [LogProba_2.0], 0.17105263157894737 AS [Proba_3.0], -1.76578398282 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anoova_2' AS feature, -1.169339656829834 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3191489361702128 AS [Proba_0.0], -1.14209740061 AS [LogProba_0.0], 0.2765957446808511 AS [Proba_1.0], -1.28519824425 AS [LogProba_1.0], 0.14893617021276595 AS [Proba_2.0], -1.90423745265 AS [LogProba_2.0], 0.2553191489361702 AS [Proba_3.0], -1.36524095192 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6363636363636364 AS [Proba_0.0], -0.451985123743 AS [LogProba_0.0], 0.22727272727272727 AS [Proba_1.0], -1.48160454092 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0.13636363636363635 AS [Proba_3.0], -1.99243016469 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04 AS [Proba_0.0], -3.21887582487 AS [LogProba_0.0], 0.32 AS [Proba_1.0], -1.13943428319 AS [LogProba_1.0], 0.28 AS [Proba_2.0], -1.27296567581 AS [LogProba_2.0], 0.36 AS [Proba_3.0], -1.02165124753 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13793103448275862 AS [Proba_0.0], -1.98100146887 AS [LogProba_0.0], 0.5862068965517241 AS [Proba_1.0], -0.53408248593 AS [LogProba_1.0], 0.2413793103448276 AS [Proba_2.0], -1.42138568093 AS [LogProba_2.0], 0.034482758620689655 AS [Proba_3.0], -3.36729582999 AS [LogProba_3.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Proba_0.0] AS [Proba_0.0], [DT_node_data_7].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_7].[Proba_1.0] AS [Proba_1.0], [DT_node_data_7].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_7].[Proba_2.0] AS [Proba_2.0], [DT_node_data_7].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_7].[Proba_3.0] AS [Proba_3.0], [DT_node_data_7].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_7].[Decision] AS [Decision] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, CAST(NULL AS FLOAT) AS [Score_7_0], [DT_Output_7].[Proba_0.0] AS [Proba_7_0], [DT_Output_7].[LogProba_0.0] AS [LogProba_7_0], CAST(NULL AS FLOAT) AS [Score_7_1], [DT_Output_7].[Proba_1.0] AS [Proba_7_1], [DT_Output_7].[LogProba_1.0] AS [LogProba_7_1], CAST(NULL AS FLOAT) AS [Score_7_2], [DT_Output_7].[Proba_2.0] AS [Proba_7_2], [DT_Output_7].[LogProba_2.0] AS [LogProba_7_2], CAST(NULL AS FLOAT) AS [Score_7_3], [DT_Output_7].[Proba_3.0] AS [Proba_7_3], [DT_Output_7].[LogProba_3.0] AS [LogProba_7_3] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.42938584089279175) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_15 <= -0.09167474508285522) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_17' AS feature, -0.42938584089279175 AS threshold, 65 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.28 AS [Proba_0.0], -1.27296567581 AS [LogProba_0.0], 0.23 AS [Proba_1.0], -1.46967597006 AS [LogProba_1.0], 0.31 AS [Proba_2.0], -1.1711829815 AS [LogProba_2.0], 0.18 AS [Proba_3.0], -1.71479842809 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2608695652173913 AS [Proba_0.0], -1.3437347467 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.6521739130434783 AS [Proba_2.0], -0.427444014827 AS [LogProba_2.0], 0.08695652173913043 AS [Proba_3.0], -2.44234703537 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_15' AS feature, -0.09167474508285522 AS threshold, 50 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS [Proba_0.0], -1.2527629685 AS [LogProba_0.0], 0.2987012987012987 AS [Proba_1.0], -1.20831120592 AS [LogProba_1.0], 0.2077922077922078 AS [Proba_2.0], -1.57121669961 AS [LogProba_2.0], 0.2077922077922078 AS [Proba_3.0], -1.57121669961 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2727272727272727 AS [Proba_0.0], -1.29928298413 AS [LogProba_0.0], 0.5151515151515151 AS [Proba_1.0], -0.66329421741 AS [LogProba_1.0], 0.06060606060606061 AS [Proba_2.0], -2.80336038091 AS [LogProba_2.0], 0.15151515151515152 AS [Proba_3.0], -1.88706964903 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29545454545454547 AS [Proba_0.0], -1.21924027646 AS [LogProba_0.0], 0.13636363636363635 AS [Proba_1.0], -1.99243016469 AS [LogProba_1.0], 0.3181818181818182 AS [Proba_2.0], -1.1451323043 AS [LogProba_2.0], 0.25 AS [Proba_3.0], -1.38629436112 AS [LogProba_3.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Proba_0.0] AS [Proba_0.0], [DT_node_data_8].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_8].[Proba_1.0] AS [Proba_1.0], [DT_node_data_8].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_8].[Proba_2.0] AS [Proba_2.0], [DT_node_data_8].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_8].[Proba_3.0] AS [Proba_3.0], [DT_node_data_8].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_8].[Decision] AS [Decision] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, CAST(NULL AS FLOAT) AS [Score_8_0], [DT_Output_8].[Proba_0.0] AS [Proba_8_0], [DT_Output_8].[LogProba_0.0] AS [LogProba_8_0], CAST(NULL AS FLOAT) AS [Score_8_1], [DT_Output_8].[Proba_1.0] AS [Proba_8_1], [DT_Output_8].[LogProba_1.0] AS [LogProba_8_1], CAST(NULL AS FLOAT) AS [Score_8_2], [DT_Output_8].[Proba_2.0] AS [Proba_8_2], [DT_Output_8].[LogProba_2.0] AS [LogProba_8_2], CAST(NULL AS FLOAT) AS [Score_8_3], [DT_Output_8].[Proba_3.0] AS [Proba_8_3], [DT_Output_8].[LogProba_3.0] AS [LogProba_8_3] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 1.2148232460021973) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= -0.3713492155075073) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.2148232460021973 AS threshold, 61 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.27 AS [Proba_2.0], -1.30933331998 AS [LogProba_2.0], 0.23 AS [Proba_3.0], -1.46967597006 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, -0.3713492155075073 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11688311688311688 AS [Proba_0.0], -2.14658084452 AS [LogProba_0.0], 0.24675324675324675 AS [Proba_1.0], -1.39936644269 AS [LogProba_1.0], 0.35064935064935066 AS [Proba_2.0], -1.04796855585 AS [LogProba_2.0], 0.2857142857142857 AS [Proba_3.0], -1.2527629685 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.043478260869565216 AS [Proba_0.0], -3.13549421593 AS [LogProba_0.0], 0.13043478260869565 AS [Proba_1.0], -2.03688192726 AS [LogProba_1.0], 0.6086956521739131 AS [Proba_2.0], -0.496436886314 AS [LogProba_2.0], 0.21739130434782608 AS [Proba_3.0], -1.5260563035 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14814814814814814 AS [Proba_0.0], -1.90954250488 AS [LogProba_0.0], 0.2962962962962963 AS [Proba_1.0], -1.21639532432 AS [LogProba_1.0], 0.24074074074074073 AS [Proba_2.0], -1.4240346891 AS [LogProba_2.0], 0.3148148148148148 AS [Proba_3.0], -1.15577070251 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6956521739130435 AS [Proba_0.0], -0.362905493689 AS [LogProba_0.0], 0.2608695652173913 AS [Proba_1.0], -1.3437347467 AS [LogProba_1.0], 0.0 AS [Proba_2.0], -1.79769313486231e+308 AS [LogProba_2.0], 0.043478260869565216 AS [Proba_3.0], -3.13549421593 AS [LogProba_3.0], 0 AS [Decision]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Proba_0.0] AS [Proba_0.0], [DT_node_data_9].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_9].[Proba_1.0] AS [Proba_1.0], [DT_node_data_9].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_9].[Proba_2.0] AS [Proba_2.0], [DT_node_data_9].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_9].[Proba_3.0] AS [Proba_3.0], [DT_node_data_9].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_9].[Decision] AS [Decision] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, CAST(NULL AS FLOAT) AS [Score_9_0], [DT_Output_9].[Proba_0.0] AS [Proba_9_0], [DT_Output_9].[LogProba_0.0] AS [LogProba_9_0], CAST(NULL AS FLOAT) AS [Score_9_1], [DT_Output_9].[Proba_1.0] AS [Proba_9_1], [DT_Output_9].[LogProba_1.0] AS [LogProba_9_1], CAST(NULL AS FLOAT) AS [Score_9_2], [DT_Output_9].[Proba_2.0] AS [Proba_9_2], [DT_Output_9].[LogProba_2.0] AS [LogProba_9_2], CAST(NULL AS FLOAT) AS [Score_9_3], [DT_Output_9].[Proba_3.0] AS [Proba_9_3], [DT_Output_9].[LogProba_3.0] AS [LogProba_9_3] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Score_0_0] AS [Score_0_0], [RF_Tree_0].[Proba_0_0] AS [Proba_0_0], [RF_Tree_0].[LogProba_0_0] AS [LogProba_0_0], [RF_Tree_0].[Score_0_1] AS [Score_0_1], [RF_Tree_0].[Proba_0_1] AS [Proba_0_1], [RF_Tree_0].[LogProba_0_1] AS [LogProba_0_1], [RF_Tree_0].[Score_0_2] AS [Score_0_2], [RF_Tree_0].[Proba_0_2] AS [Proba_0_2], [RF_Tree_0].[LogProba_0_2] AS [LogProba_0_2], [RF_Tree_0].[Score_0_3] AS [Score_0_3], [RF_Tree_0].[Proba_0_3] AS [Proba_0_3], [RF_Tree_0].[LogProba_0_3] AS [LogProba_0_3], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Score_1_0] AS [Score_1_0], [RF_Tree_1].[Proba_1_0] AS [Proba_1_0], [RF_Tree_1].[LogProba_1_0] AS [LogProba_1_0], [RF_Tree_1].[Score_1_1] AS [Score_1_1], [RF_Tree_1].[Proba_1_1] AS [Proba_1_1], [RF_Tree_1].[LogProba_1_1] AS [LogProba_1_1], [RF_Tree_1].[Score_1_2] AS [Score_1_2], [RF_Tree_1].[Proba_1_2] AS [Proba_1_2], [RF_Tree_1].[LogProba_1_2] AS [LogProba_1_2], [RF_Tree_1].[Score_1_3] AS [Score_1_3], [RF_Tree_1].[Proba_1_3] AS [Proba_1_3], [RF_Tree_1].[LogProba_1_3] AS [LogProba_1_3], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Score_2_0] AS [Score_2_0], [RF_Tree_2].[Proba_2_0] AS [Proba_2_0], [RF_Tree_2].[LogProba_2_0] AS [LogProba_2_0], [RF_Tree_2].[Score_2_1] AS [Score_2_1], [RF_Tree_2].[Proba_2_1] AS [Proba_2_1], [RF_Tree_2].[LogProba_2_1] AS [LogProba_2_1], [RF_Tree_2].[Score_2_2] AS [Score_2_2], [RF_Tree_2].[Proba_2_2] AS [Proba_2_2], [RF_Tree_2].[LogProba_2_2] AS [LogProba_2_2], [RF_Tree_2].[Score_2_3] AS [Score_2_3], [RF_Tree_2].[Proba_2_3] AS [Proba_2_3], [RF_Tree_2].[LogProba_2_3] AS [LogProba_2_3], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Score_3_0] AS [Score_3_0], [RF_Tree_3].[Proba_3_0] AS [Proba_3_0], [RF_Tree_3].[LogProba_3_0] AS [LogProba_3_0], [RF_Tree_3].[Score_3_1] AS [Score_3_1], [RF_Tree_3].[Proba_3_1] AS [Proba_3_1], [RF_Tree_3].[LogProba_3_1] AS [LogProba_3_1], [RF_Tree_3].[Score_3_2] AS [Score_3_2], [RF_Tree_3].[Proba_3_2] AS [Proba_3_2], [RF_Tree_3].[LogProba_3_2] AS [LogProba_3_2], [RF_Tree_3].[Score_3_3] AS [Score_3_3], [RF_Tree_3].[Proba_3_3] AS [Proba_3_3], [RF_Tree_3].[LogProba_3_3] AS [LogProba_3_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Score_4_0] AS [Score_4_0], [RF_Tree_4].[Proba_4_0] AS [Proba_4_0], [RF_Tree_4].[LogProba_4_0] AS [LogProba_4_0], [RF_Tree_4].[Score_4_1] AS [Score_4_1], [RF_Tree_4].[Proba_4_1] AS [Proba_4_1], [RF_Tree_4].[LogProba_4_1] AS [LogProba_4_1], [RF_Tree_4].[Score_4_2] AS [Score_4_2], [RF_Tree_4].[Proba_4_2] AS [Proba_4_2], [RF_Tree_4].[LogProba_4_2] AS [LogProba_4_2], [RF_Tree_4].[Score_4_3] AS [Score_4_3], [RF_Tree_4].[Proba_4_3] AS [Proba_4_3], [RF_Tree_4].[LogProba_4_3] AS [LogProba_4_3], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Score_5_0] AS [Score_5_0], [RF_Tree_5].[Proba_5_0] AS [Proba_5_0], [RF_Tree_5].[LogProba_5_0] AS [LogProba_5_0], [RF_Tree_5].[Score_5_1] AS [Score_5_1], [RF_Tree_5].[Proba_5_1] AS [Proba_5_1], [RF_Tree_5].[LogProba_5_1] AS [LogProba_5_1], [RF_Tree_5].[Score_5_2] AS [Score_5_2], [RF_Tree_5].[Proba_5_2] AS [Proba_5_2], [RF_Tree_5].[LogProba_5_2] AS [LogProba_5_2], [RF_Tree_5].[Score_5_3] AS [Score_5_3], [RF_Tree_5].[Proba_5_3] AS [Proba_5_3], [RF_Tree_5].[LogProba_5_3] AS [LogProba_5_3], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Score_6_0] AS [Score_6_0], [RF_Tree_6].[Proba_6_0] AS [Proba_6_0], [RF_Tree_6].[LogProba_6_0] AS [LogProba_6_0], [RF_Tree_6].[Score_6_1] AS [Score_6_1], [RF_Tree_6].[Proba_6_1] AS [Proba_6_1], [RF_Tree_6].[LogProba_6_1] AS [LogProba_6_1], [RF_Tree_6].[Score_6_2] AS [Score_6_2], [RF_Tree_6].[Proba_6_2] AS [Proba_6_2], [RF_Tree_6].[LogProba_6_2] AS [LogProba_6_2], [RF_Tree_6].[Score_6_3] AS [Score_6_3], [RF_Tree_6].[Proba_6_3] AS [Proba_6_3], [RF_Tree_6].[LogProba_6_3] AS [LogProba_6_3], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Score_7_0] AS [Score_7_0], [RF_Tree_7].[Proba_7_0] AS [Proba_7_0], [RF_Tree_7].[LogProba_7_0] AS [LogProba_7_0], [RF_Tree_7].[Score_7_1] AS [Score_7_1], [RF_Tree_7].[Proba_7_1] AS [Proba_7_1], [RF_Tree_7].[LogProba_7_1] AS [LogProba_7_1], [RF_Tree_7].[Score_7_2] AS [Score_7_2], [RF_Tree_7].[Proba_7_2] AS [Proba_7_2], [RF_Tree_7].[LogProba_7_2] AS [LogProba_7_2], [RF_Tree_7].[Score_7_3] AS [Score_7_3], [RF_Tree_7].[Proba_7_3] AS [Proba_7_3], [RF_Tree_7].[LogProba_7_3] AS [LogProba_7_3], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Score_8_0] AS [Score_8_0], [RF_Tree_8].[Proba_8_0] AS [Proba_8_0], [RF_Tree_8].[LogProba_8_0] AS [LogProba_8_0], [RF_Tree_8].[Score_8_1] AS [Score_8_1], [RF_Tree_8].[Proba_8_1] AS [Proba_8_1], [RF_Tree_8].[LogProba_8_1] AS [LogProba_8_1], [RF_Tree_8].[Score_8_2] AS [Score_8_2], [RF_Tree_8].[Proba_8_2] AS [Proba_8_2], [RF_Tree_8].[LogProba_8_2] AS [LogProba_8_2], [RF_Tree_8].[Score_8_3] AS [Score_8_3], [RF_Tree_8].[Proba_8_3] AS [Proba_8_3], [RF_Tree_8].[LogProba_8_3] AS [LogProba_8_3], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Score_9_0] AS [Score_9_0], [RF_Tree_9].[Proba_9_0] AS [Proba_9_0], [RF_Tree_9].[LogProba_9_0] AS [LogProba_9_0], [RF_Tree_9].[Score_9_1] AS [Score_9_1], [RF_Tree_9].[Proba_9_1] AS [Proba_9_1], [RF_Tree_9].[LogProba_9_1] AS [LogProba_9_1], [RF_Tree_9].[Score_9_2] AS [Score_9_2], [RF_Tree_9].[Proba_9_2] AS [Proba_9_2], [RF_Tree_9].[LogProba_9_2] AS [LogProba_9_2], [RF_Tree_9].[Score_9_3] AS [Score_9_3], [RF_Tree_9].[Proba_9_3] AS [Proba_9_3], [RF_Tree_9].[LogProba_9_3] AS [LogProba_9_3] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Score_0_0] / 10 + [RF_Join_CTE].[Score_1_0] / 10 + [RF_Join_CTE].[Score_2_0] / 10 + [RF_Join_CTE].[Score_3_0] / 10 + [RF_Join_CTE].[Score_4_0] / 10 + [RF_Join_CTE].[Score_5_0] / 10 + [RF_Join_CTE].[Score_6_0] / 10 + [RF_Join_CTE].[Score_7_0] / 10 + [RF_Join_CTE].[Score_8_0] / 10 + [RF_Join_CTE].[Score_9_0] / 10 AS [Score_0], [RF_Join_CTE].[Proba_0_0] / 10 + [RF_Join_CTE].[Proba_1_0] / 10 + [RF_Join_CTE].[Proba_2_0] / 10 + [RF_Join_CTE].[Proba_3_0] / 10 + [RF_Join_CTE].[Proba_4_0] / 10 + [RF_Join_CTE].[Proba_5_0] / 10 + [RF_Join_CTE].[Proba_6_0] / 10 + [RF_Join_CTE].[Proba_7_0] / 10 + [RF_Join_CTE].[Proba_8_0] / 10 + [RF_Join_CTE].[Proba_9_0] / 10 AS [Proba_0], [RF_Join_CTE].[LogProba_0_0] / 10 + [RF_Join_CTE].[LogProba_1_0] / 10 + [RF_Join_CTE].[LogProba_2_0] / 10 + [RF_Join_CTE].[LogProba_3_0] / 10 + [RF_Join_CTE].[LogProba_4_0] / 10 + [RF_Join_CTE].[LogProba_5_0] / 10 + [RF_Join_CTE].[LogProba_6_0] / 10 + [RF_Join_CTE].[LogProba_7_0] / 10 + [RF_Join_CTE].[LogProba_8_0] / 10 + [RF_Join_CTE].[LogProba_9_0] / 10 AS [LogProba_0], [RF_Join_CTE].[Score_0_1] / 10 + [RF_Join_CTE].[Score_1_1] / 10 + [RF_Join_CTE].[Score_2_1] / 10 + [RF_Join_CTE].[Score_3_1] / 10 + [RF_Join_CTE].[Score_4_1] / 10 + [RF_Join_CTE].[Score_5_1] / 10 + [RF_Join_CTE].[Score_6_1] / 10 + [RF_Join_CTE].[Score_7_1] / 10 + [RF_Join_CTE].[Score_8_1] / 10 + [RF_Join_CTE].[Score_9_1] / 10 AS [Score_1], [RF_Join_CTE].[Proba_0_1] / 10 + [RF_Join_CTE].[Proba_1_1] / 10 + [RF_Join_CTE].[Proba_2_1] / 10 + [RF_Join_CTE].[Proba_3_1] / 10 + [RF_Join_CTE].[Proba_4_1] / 10 + [RF_Join_CTE].[Proba_5_1] / 10 + [RF_Join_CTE].[Proba_6_1] / 10 + [RF_Join_CTE].[Proba_7_1] / 10 + [RF_Join_CTE].[Proba_8_1] / 10 + [RF_Join_CTE].[Proba_9_1] / 10 AS [Proba_1], [RF_Join_CTE].[LogProba_0_1] / 10 + [RF_Join_CTE].[LogProba_1_1] / 10 + [RF_Join_CTE].[LogProba_2_1] / 10 + [RF_Join_CTE].[LogProba_3_1] / 10 + [RF_Join_CTE].[LogProba_4_1] / 10 + [RF_Join_CTE].[LogProba_5_1] / 10 + [RF_Join_CTE].[LogProba_6_1] / 10 + [RF_Join_CTE].[LogProba_7_1] / 10 + [RF_Join_CTE].[LogProba_8_1] / 10 + [RF_Join_CTE].[LogProba_9_1] / 10 AS [LogProba_1], [RF_Join_CTE].[Score_0_2] / 10 + [RF_Join_CTE].[Score_1_2] / 10 + [RF_Join_CTE].[Score_2_2] / 10 + [RF_Join_CTE].[Score_3_2] / 10 + [RF_Join_CTE].[Score_4_2] / 10 + [RF_Join_CTE].[Score_5_2] / 10 + [RF_Join_CTE].[Score_6_2] / 10 + [RF_Join_CTE].[Score_7_2] / 10 + [RF_Join_CTE].[Score_8_2] / 10 + [RF_Join_CTE].[Score_9_2] / 10 AS [Score_2], [RF_Join_CTE].[Proba_0_2] / 10 + [RF_Join_CTE].[Proba_1_2] / 10 + [RF_Join_CTE].[Proba_2_2] / 10 + [RF_Join_CTE].[Proba_3_2] / 10 + [RF_Join_CTE].[Proba_4_2] / 10 + [RF_Join_CTE].[Proba_5_2] / 10 + [RF_Join_CTE].[Proba_6_2] / 10 + [RF_Join_CTE].[Proba_7_2] / 10 + [RF_Join_CTE].[Proba_8_2] / 10 + [RF_Join_CTE].[Proba_9_2] / 10 AS [Proba_2], [RF_Join_CTE].[LogProba_0_2] / 10 + [RF_Join_CTE].[LogProba_1_2] / 10 + [RF_Join_CTE].[LogProba_2_2] / 10 + [RF_Join_CTE].[LogProba_3_2] / 10 + [RF_Join_CTE].[LogProba_4_2] / 10 + [RF_Join_CTE].[LogProba_5_2] / 10 + [RF_Join_CTE].[LogProba_6_2] / 10 + [RF_Join_CTE].[LogProba_7_2] / 10 + [RF_Join_CTE].[LogProba_8_2] / 10 + [RF_Join_CTE].[LogProba_9_2] / 10 AS [LogProba_2], [RF_Join_CTE].[Score_0_3] / 10 + [RF_Join_CTE].[Score_1_3] / 10 + [RF_Join_CTE].[Score_2_3] / 10 + [RF_Join_CTE].[Score_3_3] / 10 + [RF_Join_CTE].[Score_4_3] / 10 + [RF_Join_CTE].[Score_5_3] / 10 + [RF_Join_CTE].[Score_6_3] / 10 + [RF_Join_CTE].[Score_7_3] / 10 + [RF_Join_CTE].[Score_8_3] / 10 + [RF_Join_CTE].[Score_9_3] / 10 AS [Score_3], [RF_Join_CTE].[Proba_0_3] / 10 + [RF_Join_CTE].[Proba_1_3] / 10 + [RF_Join_CTE].[Proba_2_3] / 10 + [RF_Join_CTE].[Proba_3_3] / 10 + [RF_Join_CTE].[Proba_4_3] / 10 + [RF_Join_CTE].[Proba_5_3] / 10 + [RF_Join_CTE].[Proba_6_3] / 10 + [RF_Join_CTE].[Proba_7_3] / 10 + [RF_Join_CTE].[Proba_8_3] / 10 + [RF_Join_CTE].[Proba_9_3] / 10 AS [Proba_3], [RF_Join_CTE].[LogProba_0_3] / 10 + [RF_Join_CTE].[LogProba_1_3] / 10 + [RF_Join_CTE].[LogProba_2_3] / 10 + [RF_Join_CTE].[LogProba_3_3] / 10 + [RF_Join_CTE].[LogProba_4_3] / 10 + [RF_Join_CTE].[LogProba_5_3] / 10 + [RF_Join_CTE].[LogProba_6_3] / 10 + [RF_Join_CTE].[LogProba_7_3] / 10 + [RF_Join_CTE].[LogProba_8_3] / 10 + [RF_Join_CTE].[LogProba_9_3] / 10 AS [LogProba_3] 
FROM [RF_Join_CTE]), 
orig_cte AS 
(SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Score_0] AS [Score_0], [RF_AVG_Scores].[Score_1] AS [Score_1], [RF_AVG_Scores].[Score_2] AS [Score_2], [RF_AVG_Scores].[Score_3] AS [Score_3], [RF_AVG_Scores].[Proba_0] AS [Proba_0], [RF_AVG_Scores].[Proba_1] AS [Proba_1], [RF_AVG_Scores].[Proba_2] AS [Proba_2], [RF_AVG_Scores].[Proba_3] AS [Proba_3], [RF_AVG_Scores].[LogProba_0] AS [LogProba_0], [RF_AVG_Scores].[LogProba_1] AS [LogProba_1], [RF_AVG_Scores].[LogProba_2] AS [LogProba_2], [RF_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [RF_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Proba] AS [Decision] 
FROM arg_max_cte