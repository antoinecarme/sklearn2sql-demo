-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM (SELECT `RF_Join_CTE`.join_key_0 AS `KEY`, `RF_Join_CTE`.`Estimator_0` / 10 + `RF_Join_CTE`.`Estimator_1` / 10 + `RF_Join_CTE`.`Estimator_2` / 10 + `RF_Join_CTE`.`Estimator_3` / 10 + `RF_Join_CTE`.`Estimator_4` / 10 + `RF_Join_CTE`.`Estimator_5` / 10 + `RF_Join_CTE`.`Estimator_6` / 10 + `RF_Join_CTE`.`Estimator_7` / 10 + `RF_Join_CTE`.`Estimator_8` / 10 + `RF_Join_CTE`.`Estimator_9` / 10 AS `Estimator` 
FROM (SELECT `RF_Tree_0`.join_key_0 AS join_key_0, `RF_Tree_0`.`Estimator_0` AS `Estimator_0`, `RF_Tree_1`.join_key_1 AS join_key_1, `RF_Tree_1`.`Estimator_1` AS `Estimator_1`, `RF_Tree_2`.join_key_2 AS join_key_2, `RF_Tree_2`.`Estimator_2` AS `Estimator_2`, `RF_Tree_3`.join_key_3 AS join_key_3, `RF_Tree_3`.`Estimator_3` AS `Estimator_3`, `RF_Tree_4`.join_key_4 AS join_key_4, `RF_Tree_4`.`Estimator_4` AS `Estimator_4`, `RF_Tree_5`.join_key_5 AS join_key_5, `RF_Tree_5`.`Estimator_5` AS `Estimator_5`, `RF_Tree_6`.join_key_6 AS join_key_6, `RF_Tree_6`.`Estimator_6` AS `Estimator_6`, `RF_Tree_7`.join_key_7 AS join_key_7, `RF_Tree_7`.`Estimator_7` AS `Estimator_7`, `RF_Tree_8`.join_key_8 AS join_key_8, `RF_Tree_8`.`Estimator_8` AS `Estimator_8`, `RF_Tree_9`.join_key_9 AS join_key_9, `RF_Tree_9`.`Estimator_9` AS `Estimator_9` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 9.950000762939453) THEN CASE WHEN (`ADS`.`Feature_5` <= 7.011499881744385) THEN CASE WHEN (`ADS`.`Feature_12` <= 5.409999847412109) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.440999984741211) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_4` <= 0.6634999513626099) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.895000457763672) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 11.486350059509277) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.950000762939453 AS threshold, 319 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.312252964426882 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.011499881744385 AS threshold, 132 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 29.10142857142857 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 5.409999847412109 AS threshold, 100 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.925308641975306 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.611764705882358 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 79 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.680468749999996 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, 7.440999984741211 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 39.82083333333333 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.834782608695654 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 44.407999999999994 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 0.6634999513626099 AS threshold, 187 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.49560810810811 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 14.895000457763672 AS threshold, 125 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.41029411764706 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 76 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.78983050847457 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.517441860465116 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 11.486350059509277 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.249999999999998 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 15.508928571428575 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.73611111111111 AS `Estimator`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `RF_Tree_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.824999809265137) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.399999618530273) THEN CASE WHEN (`ADS`.`Feature_12` <= 7.734999656677246) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 7.872354984283447) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.437000274658203) THEN CASE WHEN (`ADS`.`Feature_12` <= 5.59499979019165) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.824999809265137 AS threshold, 322 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.32154150197629 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 265 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.4002380952381 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 7.734999656677246 AS threshold, 150 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.757613168724298 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 26.39705882352942 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 103 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.34342857142857 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 7.872354984283447 AS threshold, 115 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.790960451977401 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 76 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.782300884955752 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.274999999999999 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 36.58837209302325 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 5.59499979019165 AS threshold, 37 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.167307692307695 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 35.05454545454546 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.05 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 43.35 AS `Estimator`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `RF_Tree_1` ON `RF_Tree_0`.join_key_0 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.667500019073486) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.915000915527344) THEN CASE WHEN (`ADS`.`Feature_12` <= 7.649999618530273) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_12` <= 20.099998474121094) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.444999694824219) THEN CASE WHEN (`ADS`.`Feature_8` <= 7.5) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.667500019073486 AS threshold, 317 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.54901185770754 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.915000915527344 AS threshold, 248 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.83828124999999 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 7.649999618530273 AS threshold, 150 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.964377682403423 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.33518518518519 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 113 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.947486033519553 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_12' AS feature, 20.099998474121094 AS threshold, 98 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.014569536423846 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.28493150684932 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.889743589743592 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.444999694824219 AS threshold, 69 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.22868852459017 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 7.5 AS threshold, 52 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.927777777777784 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.40845070422535 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.394736842105264 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 43.512499999999996 AS `Estimator`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `RF_Tree_2` ON `RF_Tree_2`.join_key_2 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.824999809265137) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.399999618530273) THEN CASE WHEN (`ADS`.`Feature_5` <= 6.543000221252441) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.5537550449371338) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.434999942779541) THEN CASE WHEN (`ADS`.`Feature_12` <= 5.494999885559082) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.824999809265137 AS threshold, 325 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.17944664031621 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 271 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.611084905660366 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 6.543000221252441 AS threshold, 164 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.726848249027242 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 136 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.882027649769586 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 27.310000000000002 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.5537550449371338 AS threshold, 107 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.816167664670662 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.148076923076925 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 73 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.857391304347827 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.434999942779541 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 35.45975609756099 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 5.494999885559082 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.21525423728814 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.20322580645161 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.014285714285716 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 43.78260869565217 AS `Estimator`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `RF_Tree_3` ON `RF_Tree_3`.join_key_3 = `RF_Tree_2`.join_key_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Estimator` AS `Estimator_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.945000171661377) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.404999732971191) THEN CASE WHEN (`ADS`.`Feature_12` <= 7.704999923706055) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_4` <= 0.656999945640564) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.433000087738037) THEN 9 ELSE 10 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.945000171661377 AS threshold, 322 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.635177865612658 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.404999732971191 AS threshold, 276 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.638679245283008 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 7.704999923706055 AS threshold, 166 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.130645161290325 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 26.5974358974359 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 113 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.539999999999992 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.656999945640564 AS threshold, 110 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.718181818181826 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.643181818181816 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.793181818181813 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.433000087738037 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 38.12926829268293 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.31296296296296 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 45.489285714285714 AS `Estimator`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `RF_Tree_4` ON `RF_Tree_4`.join_key_4 = `RF_Tree_3`.join_key_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Estimator` AS `Estimator_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.837500095367432) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.399999618530273) THEN CASE WHEN (`ADS`.`Feature_12` <= 9.845000267028809) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 7.537955284118652) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.437000274658203) THEN CASE WHEN (`ADS`.`Feature_5` <= 7.011499881744385) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.837500095367432 AS threshold, 324 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.652371541501974 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 268 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.80531400966182 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 9.845000267028809 AS threshold, 157 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.239112903225813 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 88 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.40567375886525 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 69 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.384112149532708 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 7.537955284118652 AS threshold, 111 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.675301204819277 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 64 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.71555555555555 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.075000000000001 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 35.46413043478262 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, 7.011499881744385 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 31.945454545454545 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 29.006451612903223 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.54857142857143 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 44.396153846153844 AS `Estimator`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `RF_Tree_5` ON `RF_Tree_5`.join_key_5 = `RF_Tree_4`.join_key_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_6, `DT_Output_6`.`Estimator` AS `Estimator_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.980999946594238) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.475000381469727) THEN CASE WHEN (`ADS`.`Feature_5` <= 6.543000221252441) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 7.537955284118652) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.454500198364258) THEN 9 ELSE 10 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.980999946594238 AS threshold, 323 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.800592885375515 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.475000381469727 AS threshold, 283 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.174657534246567 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 6.543000221252441 AS threshold, 173 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.39483394833948 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 132 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.687378640776696 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 28.806153846153837 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 7.537955284118652 AS threshold, 110 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.94910179640718 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 62 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.363541666666666 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.68450704225352 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.454500198364258 AS threshold, 40 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 39.71470588235294 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.57741935483871 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 45.6945945945946 AS `Estimator`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `RF_Tree_6` ON `RF_Tree_6`.join_key_6 = `RF_Tree_5`.join_key_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_7, `DT_Output_7`.`Estimator` AS `Estimator_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.974999904632568) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.399999618530273) THEN CASE WHEN (`ADS`.`Feature_12` <= 5.055000305175781) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 6.911880016326904) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.437000274658203) THEN 9 ELSE 10 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.974999904632568 AS threshold, 334 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.097628458498043 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 291 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.088578088578096 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 5.055000305175781 AS threshold, 178 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.337546468401474 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 31.94827586206896 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 159 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.297083333333326 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 6.911880016326904 AS threshold, 113 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.626249999999995 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.50869565217391 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.079411764705881 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 39.862337662337666 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 35.05227272727273 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 46.27575757575758 AS `Estimator`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `RF_Tree_7` ON `RF_Tree_7`.join_key_7 = `RF_Tree_6`.join_key_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_8, `DT_Output_8`.`Estimator` AS `Estimator_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 9.635000228881836) THEN CASE WHEN (`ADS`.`Feature_5` <= 7.452499866485596) THEN CASE WHEN (`ADS`.`Feature_5` <= 6.659000396728516) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_12` <= 17.619998931884766) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.404999732971191) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_4` <= 0.6460000276565552) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.635000228881836 AS threshold, 324 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.20632411067191 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.452499866485596 AS threshold, 127 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 29.437878787878788 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 6.659000396728516 AS threshold, 110 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 27.112716763005775 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 68 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.698165137614684 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 31.225000000000005 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 45.52799999999999 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_12' AS feature, 17.619998931884766 AS threshold, 197 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.557467532467538 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'Feature_12' AS feature, 14.404999732971191 AS threshold, 128 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.535265700483098 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 77 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.745669291338594 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.613750000000003 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'Feature_4' AS feature, 0.6460000276565552 AS threshold, 69 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.503960396039606 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.18604651162791 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.515517241379307 AS `Estimator`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `RF_Tree_8` ON `RF_Tree_8`.join_key_8 = `RF_Tree_7`.join_key_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_9, `DT_Output_9`.`Estimator` AS `Estimator_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.940999984741211) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.805000305175781) THEN CASE WHEN (`ADS`.`Feature_12` <= 9.545000076293945) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 8.103765487670898) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_12` <= 5.184999942779541) THEN 9 ELSE 10 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.940999984741211 AS threshold, 313 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.201383399209494 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.805000305175781 AS threshold, 271 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.451388888888886 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 9.545000076293945 AS threshold, 166 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.831007751937964 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 88 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.427049180327863 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 78 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.502205882352932 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 8.103765487670898 AS threshold, 105 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.440229885057482 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 62 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.70654205607477 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.82089552238806 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 5.184999942779541 AS threshold, 42 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 38.2554054054054 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 43.50697674418604 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.970967741935485 AS `Estimator`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `RF_Tree_9` ON `RF_Tree_9`.join_key_9 = `RF_Tree_8`.join_key_8) AS `RF_Join_CTE`) AS `RF_AVG_Scores`