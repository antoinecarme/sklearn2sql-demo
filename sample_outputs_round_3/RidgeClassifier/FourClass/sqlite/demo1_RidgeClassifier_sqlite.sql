-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", -0.08456156438839592 * "ADS"."Feature_0" + 0.11094857834293073 * "ADS"."Feature_1" + -0.1879990795399707 * "ADS"."Feature_2" + 0.06958034884051793 * "ADS"."Feature_3" + -0.012720068573585772 * "ADS"."Feature_4" + 0.09701551533455068 * "ADS"."Feature_5" + 0.10645464470508788 * "ADS"."Feature_6" + -0.00905171514556418 * "ADS"."Feature_7" + -0.02437861162957669 * "ADS"."Feature_8" + -0.01853752692834414 * "ADS"."Feature_9" + -0.10790296511798121 * "ADS"."Feature_10" + 0.10242720662769829 * "ADS"."Feature_11" + -0.009723447038426323 * "ADS"."Feature_12" + 0.13918144181491238 * "ADS"."Feature_13" + 0.08452426086661863 * "ADS"."Feature_14" + -0.03958554648062622 * "ADS"."Feature_15" + 0.05041004975639492 * "ADS"."Feature_16" + 0.02553010983634667 * "ADS"."Feature_17" + -0.09927391748028437 * "ADS"."Feature_18" + -0.039750352424166774 * "ADS"."Feature_19" + -0.435128393417 AS "Score_0", -0.12281356025969255 * "ADS"."Feature_0" + -0.07860995800448105 * "ADS"."Feature_1" + 0.13321129305350474 * "ADS"."Feature_2" + 0.12101856560128826 * "ADS"."Feature_3" + 0.134212420439787 * "ADS"."Feature_4" + 0.003167515821710945 * "ADS"."Feature_5" + 0.031409494840139086 * "ADS"."Feature_6" + -0.024947730399178764 * "ADS"."Feature_7" + -0.12646537022235455 * "ADS"."Feature_8" + -0.11657500177113606 * "ADS"."Feature_9" + 0.04181372839316907 * "ADS"."Feature_10" + 0.022299783478357933 * "ADS"."Feature_11" + 0.007020875457771907 * "ADS"."Feature_12" + -0.21143989782773423 * "ADS"."Feature_13" + -0.1722693973301138 * "ADS"."Feature_14" + 0.05233911885456656 * "ADS"."Feature_15" + -0.09100540356152745 * "ADS"."Feature_16" + 0.09224877163849846 * "ADS"."Feature_17" + 0.010450362720960728 * "ADS"."Feature_18" + 0.01035423288766772 * "ADS"."Feature_19" + -0.394090424079 AS "Score_1", 0.06427381429578569 * "ADS"."Feature_0" + 0.030460328821129805 * "ADS"."Feature_1" + 0.02853901875921096 * "ADS"."Feature_2" + -0.0764134906389804 * "ADS"."Feature_3" + 0.06239014850282177 * "ADS"."Feature_4" + -0.17742575295847213 * "ADS"."Feature_5" + -0.1447222819240541 * "ADS"."Feature_6" + 0.10820162676855112 * "ADS"."Feature_7" + 0.1335353370829794 * "ADS"."Feature_8" + 0.16373913995289205 * "ADS"."Feature_9" + 0.09342985414902291 * "ADS"."Feature_10" + -0.25785280232422 * "ADS"."Feature_11" + -0.022862243529096157 * "ADS"."Feature_12" + 0.0031162790061298267 * "ADS"."Feature_13" + 0.03722915734979779 * "ADS"."Feature_14" + -0.02733963400939036 * "ADS"."Feature_15" + -0.011314596386003963 * "ADS"."Feature_16" + 0.006049237093303221 * "ADS"."Feature_17" + -0.009404218092340317 * "ADS"."Feature_18" + -0.08077093184239405 * "ADS"."Feature_19" + -0.608058360796 AS "Score_2", 0.14310131035229992 * "ADS"."Feature_0" + -0.06279894915957956 * "ADS"."Feature_1" + 0.026248767727255016 * "ADS"."Feature_2" + -0.11418542380283239 * "ADS"."Feature_3" + -0.18388250036902284 * "ADS"."Feature_4" + 0.07724272180221056 * "ADS"."Feature_5" + 0.006858142378827263 * "ADS"."Feature_6" + -0.07420218122380812 * "ADS"."Feature_7" + 0.01730864476895339 * "ADS"."Feature_8" + -0.028626611253412055 * "ADS"."Feature_9" + -0.02734061742421075 * "ADS"."Feature_10" + 0.13312581221816358 * "ADS"."Feature_11" + 0.025564815109750616 * "ADS"."Feature_12" + 0.06914217700669202 * "ADS"."Feature_13" + 0.05051597911369748 * "ADS"."Feature_14" + 0.014586061635450061 * "ADS"."Feature_15" + 0.05190995019113655 * "ADS"."Feature_16" + -0.12382811856814196 * "ADS"."Feature_17" + 0.09822777285166026 * "ADS"."Feature_18" + 0.11016705137890027 * "ADS"."Feature_19" + -0.562722821708 AS "Score_3" 
FROM "INPUT_DATA" AS "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte