-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] <= 0.30277055501937866) THEN CASE WHEN ([ADS].[Feature_9] <= -0.07463686913251877) THEN 2 ELSE CASE WHEN ([ADS].[Feature_19] <= 0.33176419138908386) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS].[Feature_17] <= -0.14205192029476166) THEN 7 ELSE 8 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 0.30277055501937866 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.25 AS [Proba_1], -1.38629436112 AS [LogProba_1], 0.25 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.25 AS [Proba_3], -1.38629436112 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, -0.07463686913251877 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29508196721311475 AS [Proba_0], -1.22050210628 AS [LogProba_0], 0.2786885245901639 AS [Proba_1], -1.27766052012 AS [LogProba_1], 0.4098360655737705 AS [Proba_2], -0.891998039305 AS [LogProba_2], 0.016393442622950817 AS [Proba_3], -4.11087386417 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12000000000000001 AS [Proba_0], -2.1202635362 AS [LogProba_0], 0.52 AS [Proba_1], -0.653926467407 AS [LogProba_1], 0.36000000000000004 AS [Proba_2], -1.02165124753 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'Feature_19' AS feature, 0.33176419138908386 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4166666666666667 AS [Proba_0], -0.875468737354 AS [LogProba_0], 0.11111111111111112 AS [Proba_1], -2.19722457734 AS [LogProba_1], 0.4444444444444445 AS [Proba_2], -0.810930216216 AS [LogProba_2], 0.02777777777777778 AS [Proba_3], -3.58351893846 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.22222222222222224 AS [Proba_0], -1.50407739678 AS [LogProba_0], 0.11111111111111112 AS [Proba_1], -2.19722457734 AS [LogProba_1], 0.6666666666666666 AS [Proba_2], -0.405465108108 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.611111111111111 AS [Proba_0], -0.492476485098 AS [LogProba_0], 0.11111111111111112 AS [Proba_1], -2.19722457734 AS [LogProba_1], 0.22222222222222224 AS [Proba_2], -1.50407739678 AS [LogProba_2], 0.05555555555555556 AS [Proba_3], -2.8903717579 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_17' AS feature, -0.14205192029476166 AS threshold, 39 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17948717948717946 AS [Proba_0], -1.71765149707 AS [LogProba_0], 0.20512820512820507 AS [Proba_1], -1.58412010445 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.6153846153846154 AS [Proba_3], -0.485507815782 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS [Proba_0], -1.2527629685 AS [LogProba_0], 0.3333333333333333 AS [Proba_1], -1.09861228867 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.38095238095238093 AS [Proba_3], -0.965080896044 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05555555555555556 AS [Proba_0], -2.8903717579 AS [LogProba_0], 0.05555555555555556 AS [Proba_1], -2.8903717579 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.888888888888889 AS [Proba_3], -0.117783035656 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0] AS [Proba_0_0], [DT_Output].[LogProba_0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1] AS [Proba_0_1], [DT_Output].[LogProba_1] AS [LogProba_0_1], CAST(NULL AS FLOAT) AS [Score_0_2], [DT_Output].[Proba_2] AS [Proba_0_2], [DT_Output].[LogProba_2] AS [LogProba_0_2], CAST(NULL AS FLOAT) AS [Score_0_3], [DT_Output].[Proba_3] AS [Proba_0_3], [DT_Output].[LogProba_3] AS [LogProba_0_3], [DT_Output].[Decision] AS [Decision_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_5] <= 0.7628483772277832) THEN CASE WHEN ([ADS].[Feature_10] <= 0.7394096851348877) THEN CASE WHEN ([ADS].[Feature_0] <= -1.1038966178894043) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 0.7628483772277832 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25007319694552055 AS [Proba_0], -1.38600161619 AS [LogProba_0], 0.25007319694552044 AS [Proba_1], -1.38600161619 AS [LogProba_1], 0.2499409459212578 AS [Proba_2], -1.38653060534 AS [LogProba_2], 0.24991266018770128 AS [Proba_3], -1.38664378141 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_10' AS feature, 0.7394096851348877 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.33331799155304387 AS [Proba_0], -1.09865831507 AS [LogProba_0], 0.33333515105975287 AS [Proba_1], -1.0986068355 AS [LogProba_1], 0.3332533898278702 AS [Proba_2], -1.09885214795 AS [LogProba_2], 9.346755933309128e-05 AS [Proba_3], -9.27789614088 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -1.1038966178894043 AS threshold, 64 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.44989352524132487 AS [Proba_0], -0.798744334789 AS [LogProba_0], 0.0002993618668191294 AS [Proba_1], -8.11385745942 AS [LogProba_1], 0.5496811241519605 AS [Proba_2], -0.598416943159 AS [LogProba_2], 0.00012598873989555013 AS [Proba_3], -8.97931802091 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08340998819232226 AS [Proba_0], -2.48398721429 AS [LogProba_0], 8.155976847861533e-05 AS [Proba_1], -9.41417445093 AS [LogProba_1], 0.9165084520391991 AS [Proba_2], -0.0871839896618 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.998707114753706 AS [Proba_0], -0.0012937217435 AS [LogProba_0], 0.0006255231791555233 AS [Proba_1], -7.37692217174 AS [LogProba_1], 0.0003527036447328548 AS [Proba_2], -7.94988238697 AS [LogProba_2], 0.00031465842240566334 AS [Proba_3], -8.06402288081 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15383559275426126 AS [Proba_0], -1.87187082636 AS [LogProba_0], 0.8460847859018912 AS [Proba_1], -0.167135704655 AS [LogProba_1], 3.622414931959469e-05 AS [Proba_2], -10.2257845533 AS [LogProba_2], 4.339719452801693e-05 AS [Proba_3], -10.0451157612 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00035657835044446953 AS [Proba_0], -7.93895656541 AS [LogProba_0], 0.00030510349231828985 AS [Proba_1], -8.09485951984 AS [LogProba_1], 2.1393865915885914e-05 AS [Proba_2], -10.7524063165 AS [LogProba_2], 0.9993169242913215 AS [Proba_3], -0.000683309111184 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Proba_3] AS [Proba_3], [DT_node_data_1].[LogProba_3] AS [LogProba_3], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0] AS [Proba_1_0], [DT_Output_1].[LogProba_0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1] AS [Proba_1_1], [DT_Output_1].[LogProba_1] AS [LogProba_1_1], CAST(NULL AS FLOAT) AS [Score_1_2], [DT_Output_1].[Proba_2] AS [Proba_1_2], [DT_Output_1].[LogProba_2] AS [LogProba_1_2], CAST(NULL AS FLOAT) AS [Score_1_3], [DT_Output_1].[Proba_3] AS [Proba_1_3], [DT_Output_1].[LogProba_3] AS [LogProba_1_3], [DT_Output_1].[Decision] AS [Decision_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] <= 0.30277055501937866) THEN CASE WHEN ([ADS].[Feature_19] <= 0.33176419138908386) THEN CASE WHEN ([ADS].[Feature_2] <= -0.33367985486984253) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_10] <= 0.05001074820756912) THEN 7 ELSE 8 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 0.30277055501937866 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25005323886722847 AS [Proba_0], -1.38608142832 AS [LogProba_0], 0.2500532388672284 AS [Proba_1], -1.38608142832 AS [LogProba_1], 0.2500532388672284 AS [Proba_2], -1.38608142832 AS [LogProba_2], 0.24984028339831454 AS [Proba_3], -1.38693343169 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_19' AS feature, 0.33176419138908386 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32527367728660334 AS [Proba_0], -1.12308836705 AS [LogProba_0], 0.26835001100495076 AS [Proba_1], -1.31546313935 AS [LogProba_1], 0.3509047701896083 AS [Proba_2], -1.04724040233 AS [LogProba_2], 0.05547154151883779 AS [Proba_3], -2.89188515517 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.33367985486984253 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0750075013877337 AS [Proba_0], -2.59016715194 AS [LogProba_0], 0.12673471679048182 AS [Proba_1], -2.06565922137 AS [LogProba_1], 0.7982577818217844 AS [Proba_2], -0.225323698832 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2408103103346824 AS [Proba_0], -1.42374574946 AS [LogProba_0], 0.31348141821822845 AS [Proba_1], -1.1600151927 AS [LogProba_1], 0.4457082714470892 AS [Proba_2], -0.808090640873 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.026526398728556e-05 AS [Proba_0], -10.4055099061 AS [LogProba_0], 0.04228650015768029 AS [Proba_1], -3.16328738908 AS [LogProba_1], 0.9576832345783325 AS [Proba_2], -0.04323820853 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.49196349822277535 AS [Proba_0], -0.709350755846 AS [LogProba_0], 0.36267289722658724 AS [Proba_1], -1.01425396053 AS [LogProba_1], 0.05294523516096128 AS [Proba_2], -2.9384971985 AS [LogProba_2], 0.09241836938967621 AS [Proba_3], -2.38142951717 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_10' AS feature, 0.05001074820756912 AS threshold, 39 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06355022786531538 AS [Proba_0], -2.75592469575 AS [LogProba_0], 0.2046878678722333 AS [Proba_1], -1.58626905592 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.7317619042624512 AS [Proba_3], -0.312300085333 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16338390268319797 AS [Proba_0], -1.8116526162 AS [LogProba_0], 0.5274896862288495 AS [Proba_1], -0.639625965996 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.3091264110879524 AS [Proba_3], -1.17400498837 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0002721676741067832 AS [Proba_0], -8.20909223267 AS [LogProba_0], 8.483258315563636e-05 AS [Proba_1], -9.37483085364 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.9996429997427376 AS [Proba_3], -0.000357063997025 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Proba_3] AS [Proba_3], [DT_node_data_2].[LogProba_3] AS [LogProba_3], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0] AS [Proba_2_0], [DT_Output_2].[LogProba_0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1] AS [Proba_2_1], [DT_Output_2].[LogProba_1] AS [LogProba_2_1], CAST(NULL AS FLOAT) AS [Score_2_2], [DT_Output_2].[Proba_2] AS [Proba_2_2], [DT_Output_2].[LogProba_2] AS [LogProba_2_2], CAST(NULL AS FLOAT) AS [Score_2_3], [DT_Output_2].[Proba_3] AS [Proba_2_3], [DT_Output_2].[LogProba_3] AS [LogProba_2_3], [DT_Output_2].[Decision] AS [Decision_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_9] <= -0.6848531365394592) THEN 1 ELSE CASE WHEN ([ADS].[Feature_2] <= -0.939725399017334) THEN 3 ELSE CASE WHEN ([ADS].[Feature_16] <= 0.2517118752002716) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, -0.6848531365394592 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25000951825337914 AS [Proba_0], -1.38625628883 AS [LogProba_0], 0.25000951825337914 AS [Proba_1], -1.38625628883 AS [LogProba_1], 0.24998992283558452 AS [Proba_2], -1.38633467059 AS [LogProba_2], 0.24999104065765734 AS [Proba_3], -1.38633019913 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.589972959973336e-06 AS [Proba_0], -12.5373658875 AS [LogProba_0], 0.024875715164262038 AS [Proba_1], -3.69386324603 AS [LogProba_1], 0.9751071976413799 AS [Proba_2], -0.0252078677291 AS [LogProba_2], 1.3497221398216214e-05 AS [Proba_3], -11.2130267161 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.939725399017334 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.335106490065514 AS [Proba_0], -1.09330691688 AS [LogProba_0], 0.32664052067482774 AS [Proba_1], -1.11889503794 AS [LogProba_1], 0.003174638417892256 AS [Proba_2], -5.75256153725 AS [LogProba_2], 0.33507835084176596 AS [Proba_3], -1.09339089139 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.1117150753132553e-05 AS [Proba_0], -10.7654250157 AS [LogProba_0], 3.0163092953449797e-05 AS [Proba_1], -10.4088914686 AS [LogProba_1], 6.307427247605082e-05 AS [Proba_2], -9.67119759777 AS [LogProba_2], 0.9998856454838173 AS [Proba_3], -0.000114361055159 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 4 AS node_id, 'Feature_16' AS feature, 0.2517118752002716 AS threshold, 63 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5039808897287046 AS [Proba_0], -0.685216928835 AS [LogProba_0], 0.4912437308377784 AS [Proba_1], -0.710814877533 AS [LogProba_1], 0.0047427866259142715 AS [Proba_2], -5.35113042026 AS [LogProba_2], 3.2592807602782604e-05 AS [Proba_3], -10.3314189196 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9664773556543153 AS [Proba_0], -0.0340974098329 AS [LogProba_0], 0.02605332450603506 AS [Proba_1], -3.64760989873 AS [LogProba_1], 0.00741572145741774 AS [Proba_2], -4.9041530111 AS [LogProba_2], 5.359838223189419e-05 AS [Proba_3], -9.83399167258 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07745821694852877 AS [Proba_0], -2.55801662416 AS [LogProba_0], 0.9202508045744774 AS [Proba_1], -0.0831090324235 AS [LogProba_1], 0.0022777573932726064 AS [Proba_2], -6.08456391951 AS [LogProba_2], 1.3221083721257462e-05 AS [Proba_3], -11.233697751 AS [LogProba_3], 1 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Proba_2] AS [Proba_2], [DT_node_data_3].[LogProba_2] AS [LogProba_2], [DT_node_data_3].[Proba_3] AS [Proba_3], [DT_node_data_3].[LogProba_3] AS [LogProba_3], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0] AS [Proba_3_0], [DT_Output_3].[LogProba_0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1] AS [Proba_3_1], [DT_Output_3].[LogProba_1] AS [LogProba_3_1], CAST(NULL AS FLOAT) AS [Score_3_2], [DT_Output_3].[Proba_2] AS [Proba_3_2], [DT_Output_3].[LogProba_2] AS [LogProba_3_2], CAST(NULL AS FLOAT) AS [Score_3_3], [DT_Output_3].[Proba_3] AS [Proba_3_3], [DT_Output_3].[LogProba_3] AS [LogProba_3_3], [DT_Output_3].[Decision] AS [Decision_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] <= 0.5053794980049133) THEN CASE WHEN ([ADS].[Feature_2] <= -0.1263822764158249) THEN CASE WHEN ([ADS].[Feature_0] <= -0.9440003037452698) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_13] <= 0.07364505529403687) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.818745493888855) THEN 9 ELSE 10 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 0.5053794980049133 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24999999999999997 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.25 AS [Proba_1], -1.38629436112 AS [LogProba_1], 0.24999999999999997 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.25000000000000006 AS [Proba_3], -1.38629436112 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, -0.1263822764158249 AS threshold, 66 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3283445956645412 AS [Proba_0], -1.11369162555 AS [LogProba_0], 0.32570539686767735 AS [Proba_1], -1.12176199678 AS [LogProba_1], 0.32862929526669876 AS [Proba_2], -1.1128249256 AS [LogProba_2], 0.017320712201082746 AS [Proba_3], -4.05585225654 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -0.9440003037452698 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09826349394019841 AS [Proba_0], -2.32010269476 AS [LogProba_0], 0.0626003575392101 AS [Proba_1], -2.7709842894 AS [LogProba_1], 0.8182162082404288 AS [Proba_2], -0.200628664052 AS [LogProba_2], 0.020919940280162464 AS [Proba_3], -3.86705249447 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00011621086916432839 AS [Proba_0], -9.0601041795 AS [LogProba_0], 0.008141221017365165 AS [Proba_1], -4.81081510808 AS [LogProba_1], 0.9670161693377402 AS [Proba_2], -0.0335400625334 AS [LogProba_2], 0.024726398775730195 AS [Proba_3], -3.69988382974 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6376717924667784 AS [Proba_0], -0.449931559873 AS [LogProba_0], 0.3619026841172617 AS [Proba_1], -1.0163799317 AS [LogProba_1], 0.00042552341595990023 AS [Proba_2], -7.76219057983 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_13' AS feature, 0.07364505529403687 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.47517036855783834 AS [Proba_0], -0.744081868606 AS [LogProba_0], 0.49360532633605386 AS [Proba_1], -0.706019015655 AS [LogProba_1], 0.016200432760926302 AS [Proba_2], -4.12271732346 AS [LogProba_2], 0.01502387234518151 AS [Proba_3], -4.19811485328 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9430503734505084 AS [Proba_0], -0.0586355794822 AS [LogProba_0], 3.794566125432605e-06 AS [Proba_1], -12.4819404816 AS [LogProba_1], 0.05694583198336618 AS [Proba_2], -2.86565477907 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2917926178412341 AS [Proba_0], -1.23171194191 AS [LogProba_0], 0.6870641997645173 AS [Proba_1], -0.375327541687 AS [LogProba_1], 0.0002309542977996271 AS [Proba_2], -8.37329071204 AS [LogProba_2], 0.020912228096448927 AS [Proba_3], -3.86742121472 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.818745493888855 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0009051957072485238 AS [Proba_0], -7.00735938654 AS [LogProba_0], 0.009296466377779557 AS [Proba_1], -4.6781209104 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.989798337914972 AS [Proba_3], -0.0102540556788 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.021478131889929548 AS [Proba_0], -3.84071998287 AS [LogProba_0], 0.23035290383526807 AS [Proba_1], -1.46814278149 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.7481689642748023 AS [Proba_3], -0.290126438449 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.658950090593083e-05 AS [Proba_0], -9.97413534466 AS [LogProba_0], 7.073275047344999e-05 AS [Proba_1], -9.55660186073 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.9998826777486206 AS [Proba_3], -0.000117329134173 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0] AS [Proba_0], [DT_node_data_4].[LogProba_0] AS [LogProba_0], [DT_node_data_4].[Proba_1] AS [Proba_1], [DT_node_data_4].[LogProba_1] AS [LogProba_1], [DT_node_data_4].[Proba_2] AS [Proba_2], [DT_node_data_4].[LogProba_2] AS [LogProba_2], [DT_node_data_4].[Proba_3] AS [Proba_3], [DT_node_data_4].[LogProba_3] AS [LogProba_3], [DT_node_data_4].[Decision] AS [Decision] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[AdaBoost_Estim_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, CAST(NULL AS FLOAT) AS [Score_4_0], [DT_Output_4].[Proba_0] AS [Proba_4_0], [DT_Output_4].[LogProba_0] AS [LogProba_4_0], CAST(NULL AS FLOAT) AS [Score_4_1], [DT_Output_4].[Proba_1] AS [Proba_4_1], [DT_Output_4].[LogProba_1] AS [LogProba_4_1], CAST(NULL AS FLOAT) AS [Score_4_2], [DT_Output_4].[Proba_2] AS [Proba_4_2], [DT_Output_4].[LogProba_2] AS [LogProba_4_2], CAST(NULL AS FLOAT) AS [Score_4_3], [DT_Output_4].[Proba_3] AS [Proba_4_3], [DT_Output_4].[LogProba_3] AS [LogProba_4_3], [DT_Output_4].[Decision] AS [Decision_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_6] <= 1.278236985206604) THEN CASE WHEN ([ADS].[Feature_9] <= 0.31825006008148193) THEN CASE WHEN ([ADS].[Feature_15] <= -0.6802249550819397) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_5] <= -0.09254589676856995) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_6' AS feature, 1.278236985206604 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2500064364447205 AS [Proba_0], -1.38626861567 AS [LogProba_0], 0.2500064364447204 AS [Proba_1], -1.38626861567 AS [LogProba_1], 0.24999718637082663 AS [Proba_2], -1.3863056157 AS [LogProba_2], 0.2499899407397326 AS [Proba_3], -1.38633459897 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_9' AS feature, 0.31825006008148193 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.33334701439295134 AS [Proba_0], -1.09857124633 AS [LogProba_0], 0.33333466205985174 AS [Proba_1], -1.0986083025 AS [LogProba_1], 0.3333086681342653 AS [Proba_2], -1.098686287 AS [LogProba_2], 9.655412931564278e-06 AS [Proba_3], -11.5479918743 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, -0.6802249550819397 AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0272718672969436 AS [Proba_0], -3.60189961007 AS [LogProba_0], 0.9605112171784754 AS [Proba_1], -0.0402896183633 AS [LogProba_1], 0.012202676491912591 AS [Proba_2], -4.40609996672 AS [LogProba_2], 1.4239032668492955e-05 AS [Proba_3], -11.1595235849 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8012595689859602 AS [Proba_0], -0.221570328246 AS [LogProba_0], 0.000177004020620595 AS [Proba_1], -8.63933811028 AS [LogProba_1], 0.19849937622126085 AS [Proba_2], -1.61696932132 AS [LogProba_2], 6.405077215833158e-05 AS [Proba_3], -9.65583447414 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0005752989869070551 AS [Proba_0], -7.46062067508 AS [LogProba_0], 0.9936352937834224 AS [Proba_1], -0.0063850473152 AS [LogProba_1], 0.005776886315394742 AS [Proba_2], -5.15389044121 AS [LogProba_2], 1.2520914275874715e-05 AS [Proba_3], -11.2881101697 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, -0.09254589676856995 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4960208789274182 AS [Proba_0], -0.701137258531 AS [LogProba_0], 7.24513599726385e-07 AS [Proba_1], -14.1377653042 AS [LogProba_1], 0.5039711772639229 AS [Proba_2], -0.685236200514 AS [LogProba_2], 7.219295059083905e-06 AS [Proba_3], -11.8387532471 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00013882841841709925 AS [Proba_0], -8.88227178721 AS [LogProba_0], 3.398580327660588e-08 AS [Proba_1], -17.1973229502 AS [LogProba_1], 0.9998487380244814 AS [Proba_2], -0.000151273416765 AS [LogProba_2], 1.2399571298238195e-05 AS [Proba_3], -11.2978486587 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9593622701114765 AS [Proba_0], -0.0414865172338 AS [LogProba_0], 1.3697277379068016e-06 AS [Proba_1], -13.5008985693 AS [LogProba_1], 0.0406339812030546 AS [Proba_2], -3.203150587 AS [LogProba_2], 2.3789577310767036e-06 AS [Proba_3], -12.9488480943 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7958624610509334e-05 AS [Proba_0], -10.9274400787 AS [LogProba_0], 5.5010694863744963e-05 AS [Proba_1], -9.80798293957 AS [LogProba_1], 9.598549462130698e-05 AS [Proba_2], -9.25131347561 AS [LogProba_2], 0.9998310451859044 AS [Proba_3], -0.000168969088568 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0] AS [Proba_0], [DT_node_data_5].[LogProba_0] AS [LogProba_0], [DT_node_data_5].[Proba_1] AS [Proba_1], [DT_node_data_5].[LogProba_1] AS [LogProba_1], [DT_node_data_5].[Proba_2] AS [Proba_2], [DT_node_data_5].[LogProba_2] AS [LogProba_2], [DT_node_data_5].[Proba_3] AS [Proba_3], [DT_node_data_5].[LogProba_3] AS [LogProba_3], [DT_node_data_5].[Decision] AS [Decision] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[AdaBoost_Estim_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, CAST(NULL AS FLOAT) AS [Score_5_0], [DT_Output_5].[Proba_0] AS [Proba_5_0], [DT_Output_5].[LogProba_0] AS [LogProba_5_0], CAST(NULL AS FLOAT) AS [Score_5_1], [DT_Output_5].[Proba_1] AS [Proba_5_1], [DT_Output_5].[LogProba_1] AS [LogProba_5_1], CAST(NULL AS FLOAT) AS [Score_5_2], [DT_Output_5].[Proba_2] AS [Proba_5_2], [DT_Output_5].[LogProba_2] AS [LogProba_5_2], CAST(NULL AS FLOAT) AS [Score_5_3], [DT_Output_5].[Proba_3] AS [Proba_5_3], [DT_Output_5].[LogProba_3] AS [LogProba_5_3], [DT_Output_5].[Decision] AS [Decision_5] 
FROM [DT_Output_5]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Score_0_0] AS [Score_0_0], [AdaBoost_Estim_0].[Proba_0_0] AS [Proba_0_0], [AdaBoost_Estim_0].[LogProba_0_0] AS [LogProba_0_0], [AdaBoost_Estim_0].[Score_0_1] AS [Score_0_1], [AdaBoost_Estim_0].[Proba_0_1] AS [Proba_0_1], [AdaBoost_Estim_0].[LogProba_0_1] AS [LogProba_0_1], [AdaBoost_Estim_0].[Score_0_2] AS [Score_0_2], [AdaBoost_Estim_0].[Proba_0_2] AS [Proba_0_2], [AdaBoost_Estim_0].[LogProba_0_2] AS [LogProba_0_2], [AdaBoost_Estim_0].[Score_0_3] AS [Score_0_3], [AdaBoost_Estim_0].[Proba_0_3] AS [Proba_0_3], [AdaBoost_Estim_0].[LogProba_0_3] AS [LogProba_0_3], [AdaBoost_Estim_0].[Decision_0] AS [Decision_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Score_1_0] AS [Score_1_0], [AdaBoost_Estim_1].[Proba_1_0] AS [Proba_1_0], [AdaBoost_Estim_1].[LogProba_1_0] AS [LogProba_1_0], [AdaBoost_Estim_1].[Score_1_1] AS [Score_1_1], [AdaBoost_Estim_1].[Proba_1_1] AS [Proba_1_1], [AdaBoost_Estim_1].[LogProba_1_1] AS [LogProba_1_1], [AdaBoost_Estim_1].[Score_1_2] AS [Score_1_2], [AdaBoost_Estim_1].[Proba_1_2] AS [Proba_1_2], [AdaBoost_Estim_1].[LogProba_1_2] AS [LogProba_1_2], [AdaBoost_Estim_1].[Score_1_3] AS [Score_1_3], [AdaBoost_Estim_1].[Proba_1_3] AS [Proba_1_3], [AdaBoost_Estim_1].[LogProba_1_3] AS [LogProba_1_3], [AdaBoost_Estim_1].[Decision_1] AS [Decision_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Score_2_0] AS [Score_2_0], [AdaBoost_Estim_2].[Proba_2_0] AS [Proba_2_0], [AdaBoost_Estim_2].[LogProba_2_0] AS [LogProba_2_0], [AdaBoost_Estim_2].[Score_2_1] AS [Score_2_1], [AdaBoost_Estim_2].[Proba_2_1] AS [Proba_2_1], [AdaBoost_Estim_2].[LogProba_2_1] AS [LogProba_2_1], [AdaBoost_Estim_2].[Score_2_2] AS [Score_2_2], [AdaBoost_Estim_2].[Proba_2_2] AS [Proba_2_2], [AdaBoost_Estim_2].[LogProba_2_2] AS [LogProba_2_2], [AdaBoost_Estim_2].[Score_2_3] AS [Score_2_3], [AdaBoost_Estim_2].[Proba_2_3] AS [Proba_2_3], [AdaBoost_Estim_2].[LogProba_2_3] AS [LogProba_2_3], [AdaBoost_Estim_2].[Decision_2] AS [Decision_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Score_3_0] AS [Score_3_0], [AdaBoost_Estim_3].[Proba_3_0] AS [Proba_3_0], [AdaBoost_Estim_3].[LogProba_3_0] AS [LogProba_3_0], [AdaBoost_Estim_3].[Score_3_1] AS [Score_3_1], [AdaBoost_Estim_3].[Proba_3_1] AS [Proba_3_1], [AdaBoost_Estim_3].[LogProba_3_1] AS [LogProba_3_1], [AdaBoost_Estim_3].[Score_3_2] AS [Score_3_2], [AdaBoost_Estim_3].[Proba_3_2] AS [Proba_3_2], [AdaBoost_Estim_3].[LogProba_3_2] AS [LogProba_3_2], [AdaBoost_Estim_3].[Score_3_3] AS [Score_3_3], [AdaBoost_Estim_3].[Proba_3_3] AS [Proba_3_3], [AdaBoost_Estim_3].[LogProba_3_3] AS [LogProba_3_3], [AdaBoost_Estim_3].[Decision_3] AS [Decision_3], [AdaBoost_Estim_4].join_key_4 AS join_key_4, [AdaBoost_Estim_4].[Score_4_0] AS [Score_4_0], [AdaBoost_Estim_4].[Proba_4_0] AS [Proba_4_0], [AdaBoost_Estim_4].[LogProba_4_0] AS [LogProba_4_0], [AdaBoost_Estim_4].[Score_4_1] AS [Score_4_1], [AdaBoost_Estim_4].[Proba_4_1] AS [Proba_4_1], [AdaBoost_Estim_4].[LogProba_4_1] AS [LogProba_4_1], [AdaBoost_Estim_4].[Score_4_2] AS [Score_4_2], [AdaBoost_Estim_4].[Proba_4_2] AS [Proba_4_2], [AdaBoost_Estim_4].[LogProba_4_2] AS [LogProba_4_2], [AdaBoost_Estim_4].[Score_4_3] AS [Score_4_3], [AdaBoost_Estim_4].[Proba_4_3] AS [Proba_4_3], [AdaBoost_Estim_4].[LogProba_4_3] AS [LogProba_4_3], [AdaBoost_Estim_4].[Decision_4] AS [Decision_4], [AdaBoost_Estim_5].join_key_5 AS join_key_5, [AdaBoost_Estim_5].[Score_5_0] AS [Score_5_0], [AdaBoost_Estim_5].[Proba_5_0] AS [Proba_5_0], [AdaBoost_Estim_5].[LogProba_5_0] AS [LogProba_5_0], [AdaBoost_Estim_5].[Score_5_1] AS [Score_5_1], [AdaBoost_Estim_5].[Proba_5_1] AS [Proba_5_1], [AdaBoost_Estim_5].[LogProba_5_1] AS [LogProba_5_1], [AdaBoost_Estim_5].[Score_5_2] AS [Score_5_2], [AdaBoost_Estim_5].[Proba_5_2] AS [Proba_5_2], [AdaBoost_Estim_5].[LogProba_5_2] AS [LogProba_5_2], [AdaBoost_Estim_5].[Score_5_3] AS [Score_5_3], [AdaBoost_Estim_5].[Proba_5_3] AS [Proba_5_3], [AdaBoost_Estim_5].[LogProba_5_3] AS [LogProba_5_3], [AdaBoost_Estim_5].[Decision_5] AS [Decision_5] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2 LEFT OUTER JOIN [AdaBoost_Estim_4] ON [AdaBoost_Estim_4].join_key_4 = [AdaBoost_Estim_3].join_key_3 LEFT OUTER JOIN [AdaBoost_Estim_5] ON [AdaBoost_Estim_5].join_key_5 = [AdaBoost_Estim_4].join_key_4), 
[AdaBoost_AVG_Scores_BN] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS [KEY], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_0], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_1], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_2], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS [Score_3], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_4_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_4_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_4_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_5_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_5_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_5_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [AdaBoost_Join_CTE]), 
[AdaBoost_AVG_Scores] AS 
(SELECT [AdaBoost_AVG_Scores_BN].[KEY] AS [KEY], [AdaBoost_AVG_Scores_BN].[Score_0] AS [Score_0], exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], [AdaBoost_AVG_Scores_BN].[Score_1] AS [Score_1], exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1], [AdaBoost_AVG_Scores_BN].[Score_2] AS [Score_2], exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_2], CAST(NULL AS FLOAT) AS [LogProba_2], [AdaBoost_AVG_Scores_BN].[Score_3] AS [Score_3], exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 6.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 6.0) / 3)) AS [Proba_3], CAST(NULL AS FLOAT) AS [LogProba_3] 
FROM [AdaBoost_AVG_Scores_BN]), 
orig_cte AS 
(SELECT [AdaBoost_AVG_Scores].[KEY] AS [KEY], [AdaBoost_AVG_Scores].[Score_0] AS [Score_0], [AdaBoost_AVG_Scores].[Score_1] AS [Score_1], [AdaBoost_AVG_Scores].[Score_2] AS [Score_2], [AdaBoost_AVG_Scores].[Score_3] AS [Score_3], [AdaBoost_AVG_Scores].[Proba_0] AS [Proba_0], [AdaBoost_AVG_Scores].[Proba_1] AS [Proba_1], [AdaBoost_AVG_Scores].[Proba_2] AS [Proba_2], [AdaBoost_AVG_Scores].[Proba_3] AS [Proba_3], [AdaBoost_AVG_Scores].[LogProba_0] AS [LogProba_0], [AdaBoost_AVG_Scores].[LogProba_1] AS [LogProba_1], [AdaBoost_AVG_Scores].[LogProba_2] AS [LogProba_2], [AdaBoost_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [AdaBoost_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte