-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0578822955928 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0792259829464 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.114700137236 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.87206459045 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0371269677561 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.22657572107 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0207932520318 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0544458681507 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0322937151156 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.0626514930767 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.123955460377 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.294212801128 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.212359143216 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.044947422721 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.193026197268 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.11451015988 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.0199289890606 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.00757447279889 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.376217420596 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0181311705728 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.0578822955928 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.0792259829464 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.114700137236 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.87206459045 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.0371269677561 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.22657572107 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.0207932520318 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.0544458681507 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.0322937151156 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.0626514930767 AS impute_11, "ADS_imp_1_OUT".impute_12 - 0.123955460377 AS impute_12, "ADS_imp_1_OUT".impute_13 - -0.294212801128 AS impute_13, "ADS_imp_1_OUT".impute_14 - -0.212359143216 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.044947422721 AS impute_15, "ADS_imp_1_OUT".impute_16 - 0.193026197268 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.11451015988 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.0199289890606 AS impute_18, "ADS_imp_1_OUT".impute_19 - 0.00757447279889 AS impute_19, "ADS_imp_1_OUT".impute_20 - 0.376217420596 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.0181311705728 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.0438696566918 + "CenteredDataForPCA".impute_3 * 0.0398106506428 + "CenteredDataForPCA".impute_4 * -0.0598742275864 + "CenteredDataForPCA".impute_5 * 0.187432022226 + "CenteredDataForPCA".impute_6 * 0.0481391670324 + "CenteredDataForPCA".impute_7 * 0.442152874006 + "CenteredDataForPCA".impute_8 * -0.0189071035522 + "CenteredDataForPCA".impute_9 * 0.0344859932546 + "CenteredDataForPCA".impute_10 * 0.0328057361565 + "CenteredDataForPCA".impute_11 * -0.0852809036296 + "CenteredDataForPCA".impute_12 * 0.00357541475747 + "CenteredDataForPCA".impute_13 * 0.618964534275 + "CenteredDataForPCA".impute_14 * 0.271329541534 + "CenteredDataForPCA".impute_15 * -0.0265776253744 + "CenteredDataForPCA".impute_16 * 0.0871665723911 + "CenteredDataForPCA".impute_17 * -0.0275872790104 + "CenteredDataForPCA".impute_18 * -0.0136305599177 + "CenteredDataForPCA".impute_19 * -0.0237997267656 + "CenteredDataForPCA".impute_20 * 0.53226743816 + "CenteredDataForPCA".impute_21 * 0.01366169624 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.13342021156 + "CenteredDataForPCA".impute_3 * 0.175451426243 + "CenteredDataForPCA".impute_4 * -0.0207983913584 + "CenteredDataForPCA".impute_5 * -0.116469891334 + "CenteredDataForPCA".impute_6 * 0.131694628678 + "CenteredDataForPCA".impute_7 * 0.43885956128 + "CenteredDataForPCA".impute_8 * -0.000912563524945 + "CenteredDataForPCA".impute_9 * 0.0205752286458 + "CenteredDataForPCA".impute_10 * 0.0657018312008 + "CenteredDataForPCA".impute_11 * 0.405684367367 + "CenteredDataForPCA".impute_12 * 0.0780686392679 + "CenteredDataForPCA".impute_13 * 0.0670180526621 + "CenteredDataForPCA".impute_14 * -0.648807604668 + "CenteredDataForPCA".impute_15 * -0.0550591177707 + "CenteredDataForPCA".impute_16 * -0.0104387569204 + "CenteredDataForPCA".impute_17 * -0.275853186653 + "CenteredDataForPCA".impute_18 * 0.0529109626101 + "CenteredDataForPCA".impute_19 * -0.00912306608959 + "CenteredDataForPCA".impute_20 * -0.0592455651834 + "CenteredDataForPCA".impute_21 * -0.202460872099 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.0151687192304 + "CenteredDataForPCA".impute_3 * -0.0149819175092 + "CenteredDataForPCA".impute_4 * 0.0850141889243 + "CenteredDataForPCA".impute_5 * -0.256983431397 + "CenteredDataForPCA".impute_6 * 0.132982984755 + "CenteredDataForPCA".impute_7 * -0.304398060292 + "CenteredDataForPCA".impute_8 * 0.221312020652 + "CenteredDataForPCA".impute_9 * -0.02551914453 + "CenteredDataForPCA".impute_10 * 0.0149500627136 + "CenteredDataForPCA".impute_11 * 0.667599117636 + "CenteredDataForPCA".impute_12 * 0.00934438988157 + "CenteredDataForPCA".impute_13 * 0.262045091104 + "CenteredDataForPCA".impute_14 * 0.402334856688 + "CenteredDataForPCA".impute_15 * -0.0996217474663 + "CenteredDataForPCA".impute_16 * -0.190594543849 + "CenteredDataForPCA".impute_17 * -0.0912614550373 + "CenteredDataForPCA".impute_18 * -0.0493612840542 + "CenteredDataForPCA".impute_19 * 0.0701865438427 + "CenteredDataForPCA".impute_20 * -0.023443698487 + "CenteredDataForPCA".impute_21 * -0.165144102154 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.0632407938266 + "CenteredDataForPCA".impute_3 * -0.0970821722065 + "CenteredDataForPCA".impute_4 * 0.170650523439 + "CenteredDataForPCA".impute_5 * 0.67750205944 + "CenteredDataForPCA".impute_6 * 0.069818322564 + "CenteredDataForPCA".impute_7 * -0.221018799264 + "CenteredDataForPCA".impute_8 * -0.0726751331411 + "CenteredDataForPCA".impute_9 * 0.209890352897 + "CenteredDataForPCA".impute_10 * -0.0530315948553 + "CenteredDataForPCA".impute_11 * 0.30443524002 + "CenteredDataForPCA".impute_12 * 0.0390277719272 + "CenteredDataForPCA".impute_13 * -0.162653236459 + "CenteredDataForPCA".impute_14 * -0.211315907046 + "CenteredDataForPCA".impute_15 * -0.110660501945 + "CenteredDataForPCA".impute_16 * -0.125366592497 + "CenteredDataForPCA".impute_17 * 0.23048277704 + "CenteredDataForPCA".impute_18 * -0.199301555882 + "CenteredDataForPCA".impute_19 * 0.0485428352445 + "CenteredDataForPCA".impute_20 * 0.317863249477 + "CenteredDataForPCA".impute_21 * -0.0553104575418 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.207761971891 + "CenteredDataForPCA".impute_3 * -0.272780571193 + "CenteredDataForPCA".impute_4 * 0.0058551105295 + "CenteredDataForPCA".impute_5 * -0.0315687862118 + "CenteredDataForPCA".impute_6 * -0.251595404456 + "CenteredDataForPCA".impute_7 * 0.0224615295139 + "CenteredDataForPCA".impute_8 * -0.218569668341 + "CenteredDataForPCA".impute_9 * -0.206870782896 + "CenteredDataForPCA".impute_10 * -0.0575008525878 + "CenteredDataForPCA".impute_11 * 0.229852357727 + "CenteredDataForPCA".impute_12 * 0.317811089411 + "CenteredDataForPCA".impute_13 * 0.0854989337158 + "CenteredDataForPCA".impute_14 * -0.0335144378283 + "CenteredDataForPCA".impute_15 * 0.295998794109 + "CenteredDataForPCA".impute_16 * 0.087244650758 + "CenteredDataForPCA".impute_17 * 0.344061564883 + "CenteredDataForPCA".impute_18 * 0.513666617041 + "CenteredDataForPCA".impute_19 * 0.285475671384 + "CenteredDataForPCA".impute_20 * 0.0238029088611 + "CenteredDataForPCA".impute_21 * 0.0438705957341 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.0449059512349 + "CenteredDataForPCA".impute_3 * -0.336617742857 + "CenteredDataForPCA".impute_4 * 0.593621659595 + "CenteredDataForPCA".impute_5 * -0.0019297878666 + "CenteredDataForPCA".impute_6 * 0.307740454906 + "CenteredDataForPCA".impute_7 * 0.0862875519582 + "CenteredDataForPCA".impute_8 * 0.0328612338135 + "CenteredDataForPCA".impute_9 * 0.0145843264099 + "CenteredDataForPCA".impute_10 * -0.213062838812 + "CenteredDataForPCA".impute_11 * -0.0365920368192 + "CenteredDataForPCA".impute_12 * -0.396004603531 + "CenteredDataForPCA".impute_13 * 0.0256526238624 + "CenteredDataForPCA".impute_14 * -0.053259571134 + "CenteredDataForPCA".impute_15 * 0.181853878359 + "CenteredDataForPCA".impute_16 * -0.0856279361517 + "CenteredDataForPCA".impute_17 * -0.232211907205 + "CenteredDataForPCA".impute_18 * 0.273216664646 + "CenteredDataForPCA".impute_19 * 0.00153744927162 + "CenteredDataForPCA".impute_20 * 0.0165424689801 + "CenteredDataForPCA".impute_21 * 0.229219359377 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.390210417283 + "CenteredDataForPCA".impute_3 * 0.108042111659 + "CenteredDataForPCA".impute_4 * -0.0874898553562 + "CenteredDataForPCA".impute_5 * 0.0381222140152 + "CenteredDataForPCA".impute_6 * 0.206956281504 + "CenteredDataForPCA".impute_7 * 0.0985654627439 + "CenteredDataForPCA".impute_8 * 0.393380800242 + "CenteredDataForPCA".impute_9 * -0.368638602056 + "CenteredDataForPCA".impute_10 * 0.257300780542 + "CenteredDataForPCA".impute_11 * 0.126620079171 + "CenteredDataForPCA".impute_12 * -0.095998514313 + "CenteredDataForPCA".impute_13 * 0.0162169357177 + "CenteredDataForPCA".impute_14 * -0.173593790732 + "CenteredDataForPCA".impute_15 * 0.100348618971 + "CenteredDataForPCA".impute_16 * 0.0252787881632 + "CenteredDataForPCA".impute_17 * 0.371690652676 + "CenteredDataForPCA".impute_18 * -0.0881435095094 + "CenteredDataForPCA".impute_19 * 0.165328684044 + "CenteredDataForPCA".impute_20 * 0.0272496225508 + "CenteredDataForPCA".impute_21 * 0.420960790063 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.241625350539 + "CenteredDataForPCA".impute_3 * -0.334590057611 + "CenteredDataForPCA".impute_4 * -0.0139943970359 + "CenteredDataForPCA".impute_5 * 0.192660271137 + "CenteredDataForPCA".impute_6 * 0.12741353645 + "CenteredDataForPCA".impute_7 * -0.0316375439956 + "CenteredDataForPCA".impute_8 * 0.20334051105 + "CenteredDataForPCA".impute_9 * -0.459449986774 + "CenteredDataForPCA".impute_10 * -0.0523481150106 + "CenteredDataForPCA".impute_11 * -0.169051633864 + "CenteredDataForPCA".impute_12 * 0.495199798711 + "CenteredDataForPCA".impute_13 * -0.0794035229113 + "CenteredDataForPCA".impute_14 * -0.00602318475315 + "CenteredDataForPCA".impute_15 * -0.212703558395 + "CenteredDataForPCA".impute_16 * -0.0606511267341 + "CenteredDataForPCA".impute_17 * -0.365027951591 + "CenteredDataForPCA".impute_18 * 0.0864063272876 + "CenteredDataForPCA".impute_19 * -0.0391707634115 + "CenteredDataForPCA".impute_20 * 0.0816050198765 + "CenteredDataForPCA".impute_21 * -0.204857741406 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.274008017693 + "CenteredDataForPCA".impute_3 * -0.27618506509 + "CenteredDataForPCA".impute_4 * -0.218046448894 + "CenteredDataForPCA".impute_5 * 0.0307224902035 + "CenteredDataForPCA".impute_6 * 0.0672634722185 + "CenteredDataForPCA".impute_7 * 0.00911567108313 + "CenteredDataForPCA".impute_8 * 0.681954448856 + "CenteredDataForPCA".impute_9 * 0.308729035973 + "CenteredDataForPCA".impute_10 * -0.0387922753409 + "CenteredDataForPCA".impute_11 * -0.048184535614 + "CenteredDataForPCA".impute_12 * 0.0265296617385 + "CenteredDataForPCA".impute_13 * -0.0360546706911 + "CenteredDataForPCA".impute_14 * -0.0374106804691 + "CenteredDataForPCA".impute_15 * 0.313718864413 + "CenteredDataForPCA".impute_16 * 0.162079377099 + "CenteredDataForPCA".impute_17 * 0.106525399526 + "CenteredDataForPCA".impute_18 * 0.0695489805487 + "CenteredDataForPCA".impute_19 * -0.246459245754 + "CenteredDataForPCA".impute_20 * -0.00164877206779 + "CenteredDataForPCA".impute_21 * -0.16223924076 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.102632506451 + "CenteredDataForPCA".impute_3 * 0.0626404673766 + "CenteredDataForPCA".impute_4 * 0.0934731095119 + "CenteredDataForPCA".impute_5 * 0.099374526391 + "CenteredDataForPCA".impute_6 * 0.0890812613459 + "CenteredDataForPCA".impute_7 * -0.135431435057 + "CenteredDataForPCA".impute_8 * -0.0271821348425 + "CenteredDataForPCA".impute_9 * 0.261692717203 + "CenteredDataForPCA".impute_10 * 0.703885826034 + "CenteredDataForPCA".impute_11 * -0.0474003139327 + "CenteredDataForPCA".impute_12 * 0.245731088994 + "CenteredDataForPCA".impute_13 * -0.066956078772 + "CenteredDataForPCA".impute_14 * 0.0887052280867 + "CenteredDataForPCA".impute_15 * 0.245992017568 + "CenteredDataForPCA".impute_16 * 0.0172464527793 + "CenteredDataForPCA".impute_17 * -0.377926224235 + "CenteredDataForPCA".impute_18 * 0.0793819139167 + "CenteredDataForPCA".impute_19 * 0.205623466985 + "CenteredDataForPCA".impute_20 * 0.0243810942817 + "CenteredDataForPCA".impute_21 * 0.219496930347 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.252527782746 + "CenteredDataForPCA".impute_3 * 0.215840080654 + "CenteredDataForPCA".impute_4 * -0.119352297746 + "CenteredDataForPCA".impute_5 * 0.0568078773528 + "CenteredDataForPCA".impute_6 * 0.153646945966 + "CenteredDataForPCA".impute_7 * 0.00777749994537 + "CenteredDataForPCA".impute_8 * -0.0614681997243 + "CenteredDataForPCA".impute_9 * -0.251577056268 + "CenteredDataForPCA".impute_10 * -0.0188952204068 + "CenteredDataForPCA".impute_11 * -0.115019953955 + "CenteredDataForPCA".impute_12 * 0.0279810716004 + "CenteredDataForPCA".impute_13 * -0.00937804253487 + "CenteredDataForPCA".impute_14 * 0.029853674844 + "CenteredDataForPCA".impute_15 * 0.391961395499 + "CenteredDataForPCA".impute_16 * -0.747764093498 + "CenteredDataForPCA".impute_17 * 0.0440811683845 + "CenteredDataForPCA".impute_18 * -0.00405757915319 + "CenteredDataForPCA".impute_19 * -0.221581044622 + "CenteredDataForPCA".impute_20 * 0.0366783645226 + "CenteredDataForPCA".impute_21 * -0.029945700451 AS anoova_12, "CenteredDataForPCA".impute_2 * -0.263601473843 + "CenteredDataForPCA".impute_3 * 0.262762121049 + "CenteredDataForPCA".impute_4 * 0.267152899388 + "CenteredDataForPCA".impute_5 * 0.0457066658474 + "CenteredDataForPCA".impute_6 * 0.0229107701278 + "CenteredDataForPCA".impute_7 * -0.0180836035869 + "CenteredDataForPCA".impute_8 * 0.160521217976 + "CenteredDataForPCA".impute_9 * -0.279352708916 + "CenteredDataForPCA".impute_10 * -0.161334392276 + "CenteredDataForPCA".impute_11 * -0.143610408401 + "CenteredDataForPCA".impute_12 * -0.0415559811373 + "CenteredDataForPCA".impute_13 * -0.0377225837533 + "CenteredDataForPCA".impute_14 * 0.0419563242731 + "CenteredDataForPCA".impute_15 * 0.283258635259 + "CenteredDataForPCA".impute_16 * 0.243140347231 + "CenteredDataForPCA".impute_17 * -0.0698192550174 + "CenteredDataForPCA".impute_18 * -0.338903227583 + "CenteredDataForPCA".impute_19 * 0.520420189083 + "CenteredDataForPCA".impute_20 * 0.0125057587462 + "CenteredDataForPCA".impute_21 * -0.318926801247 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.114512150071 + "CenteredDataForPCA".impute_3 * -0.379452405324 + "CenteredDataForPCA".impute_4 * -0.235981420127 + "CenteredDataForPCA".impute_5 * -0.0572398952867 + "CenteredDataForPCA".impute_6 * 0.189562385629 + "CenteredDataForPCA".impute_7 * 0.0927071632638 + "CenteredDataForPCA".impute_8 * -0.121268651845 + "CenteredDataForPCA".impute_9 * 0.0801061039846 + "CenteredDataForPCA".impute_10 * 0.3187443807 + "CenteredDataForPCA".impute_11 * -0.157077318359 + "CenteredDataForPCA".impute_12 * -0.348742367381 + "CenteredDataForPCA".impute_13 * -0.000701273855801 + "CenteredDataForPCA".impute_14 * -0.0223528900465 + "CenteredDataForPCA".impute_15 * -0.0918665767418 + "CenteredDataForPCA".impute_16 * -0.227638374022 + "CenteredDataForPCA".impute_17 * 0.164322848369 + "CenteredDataForPCA".impute_18 * 0.0384529939591 + "CenteredDataForPCA".impute_19 * 0.393795807468 + "CenteredDataForPCA".impute_20 * -0.0305029128452 + "CenteredDataForPCA".impute_21 * -0.474499813197 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.160185522919 + "CenteredDataForPCA".impute_3 * 0.23234093734 + "CenteredDataForPCA".impute_4 * 0.08860536443 + "CenteredDataForPCA".impute_5 * -0.0597813763966 + "CenteredDataForPCA".impute_6 * 0.729054982493 + "CenteredDataForPCA".impute_7 * -0.0714064806987 + "CenteredDataForPCA".impute_8 * -0.153689067595 + "CenteredDataForPCA".impute_9 * 0.0125862193776 + "CenteredDataForPCA".impute_10 * 0.0200915873937 + "CenteredDataForPCA".impute_11 * -0.106844366438 + "CenteredDataForPCA".impute_12 * 0.203540015226 + "CenteredDataForPCA".impute_13 * -0.0442232277224 + "CenteredDataForPCA".impute_14 * 0.0970360567093 + "CenteredDataForPCA".impute_15 * -0.179735234084 + "CenteredDataForPCA".impute_16 * 0.25284540509 + "CenteredDataForPCA".impute_17 * 0.317503282694 + "CenteredDataForPCA".impute_18 * 0.227399977383 + "CenteredDataForPCA".impute_19 * -0.13533385864 + "CenteredDataForPCA".impute_20 * -0.0614389453063 + "CenteredDataForPCA".impute_21 * -0.11432635236 AS anoova_15, "CenteredDataForPCA".impute_2 * 0.501691571093 + "CenteredDataForPCA".impute_3 * -0.124463536293 + "CenteredDataForPCA".impute_4 * 0.0628513913286 + "CenteredDataForPCA".impute_5 * -0.0811125527079 + "CenteredDataForPCA".impute_6 * 0.115810432906 + "CenteredDataForPCA".impute_7 * 0.030497777245 + "CenteredDataForPCA".impute_8 * -0.302503762143 + "CenteredDataForPCA".impute_9 * 0.112451522229 + "CenteredDataForPCA".impute_10 * -0.0258201428268 + "CenteredDataForPCA".impute_11 * 0.102642193587 + "CenteredDataForPCA".impute_12 * 0.18924807852 + "CenteredDataForPCA".impute_13 * 0.0562227106851 + "CenteredDataForPCA".impute_14 * -0.00576612648601 + "CenteredDataForPCA".impute_15 * 0.566145917851 + "CenteredDataForPCA".impute_16 * 0.160393455054 + "CenteredDataForPCA".impute_17 * 0.0506905827726 + "CenteredDataForPCA".impute_18 * -0.307721124922 + "CenteredDataForPCA".impute_19 * -0.236652098855 + "CenteredDataForPCA".impute_20 * -0.0211121894671 + "CenteredDataForPCA".impute_21 * -0.231556919352 AS anoova_16, "CenteredDataForPCA".impute_2 * 0.108055385106 + "CenteredDataForPCA".impute_3 * 0.214466455938 + "CenteredDataForPCA".impute_4 * 0.407768379486 + "CenteredDataForPCA".impute_5 * 0.0932428126734 + "CenteredDataForPCA".impute_6 * -0.330726063899 + "CenteredDataForPCA".impute_7 * -0.0242061349312 + "CenteredDataForPCA".impute_8 * 0.120138313033 + "CenteredDataForPCA".impute_9 * -0.197267784803 + "CenteredDataForPCA".impute_10 * 0.397354334293 + "CenteredDataForPCA".impute_11 * -0.0163508442503 + "CenteredDataForPCA".impute_12 * -0.190728121888 + "CenteredDataForPCA".impute_13 * -0.0116760707307 + "CenteredDataForPCA".impute_14 * 0.00797881703378 + "CenteredDataForPCA".impute_15 * -0.0219245471332 + "CenteredDataForPCA".impute_16 * 0.0653083234671 + "CenteredDataForPCA".impute_17 * 0.15273197767 + "CenteredDataForPCA".impute_18 * 0.277362670054 + "CenteredDataForPCA".impute_19 * -0.367207776993 + "CenteredDataForPCA".impute_20 * 0.0539343744355 + "CenteredDataForPCA".impute_21 * -0.408113924709 AS anoova_17, "CenteredDataForPCA".impute_2 * 0.298428501402 + "CenteredDataForPCA".impute_3 * 0.35460406536 + "CenteredDataForPCA".impute_4 * -0.390620761915 + "CenteredDataForPCA".impute_5 * 0.257330262062 + "CenteredDataForPCA".impute_6 * 0.070214827205 + "CenteredDataForPCA".impute_7 * -0.191820702457 + "CenteredDataForPCA".impute_8 * -0.00450351485244 + "CenteredDataForPCA".impute_9 * 0.0446881313444 + "CenteredDataForPCA".impute_10 * -0.231217076368 + "CenteredDataForPCA".impute_11 * 0.0923347112855 + "CenteredDataForPCA".impute_12 * -0.247024935735 + "CenteredDataForPCA".impute_13 * -0.0797181955698 + "CenteredDataForPCA".impute_14 * 0.0415636623295 + "CenteredDataForPCA".impute_15 * 0.19743358412 + "CenteredDataForPCA".impute_16 * 0.124478693802 + "CenteredDataForPCA".impute_17 * -0.271257747127 + "CenteredDataForPCA".impute_18 * 0.472088900681 + "CenteredDataForPCA".impute_19 * 0.124042124714 + "CenteredDataForPCA".impute_20 * 0.111628794073 + "CenteredDataForPCA".impute_21 * -0.11308557923 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.331879804204 + "CenteredDataForPCA".impute_3 * -0.256140094295 + "CenteredDataForPCA".impute_4 * -0.266677758774 + "CenteredDataForPCA".impute_5 * 0.0984069078424 + "CenteredDataForPCA".impute_6 * 0.09455908045 + "CenteredDataForPCA".impute_7 * -0.141212337252 + "CenteredDataForPCA".impute_8 * -0.246572601805 + "CenteredDataForPCA".impute_9 * -0.445451743532 + "CenteredDataForPCA".impute_10 * 0.191204113458 + "CenteredDataForPCA".impute_11 * 0.183899373992 + "CenteredDataForPCA".impute_12 * -0.346640088906 + "CenteredDataForPCA".impute_13 * -0.0364052221602 + "CenteredDataForPCA".impute_14 * 0.0130267746043 + "CenteredDataForPCA".impute_15 * 0.0675736542199 + "CenteredDataForPCA".impute_16 * 0.338993902556 + "CenteredDataForPCA".impute_17 * -0.172370127023 + "CenteredDataForPCA".impute_18 * -0.165622630493 + "CenteredDataForPCA".impute_19 * -0.28128282887 + "CenteredDataForPCA".impute_20 * 0.0317394962995 + "CenteredDataForPCA".impute_21 * 0.0809584203508 AS anoova_19, "CenteredDataForPCA".impute_2 * 1.03244405385e-17 + "CenteredDataForPCA".impute_3 * 1.63833679655e-16 + "CenteredDataForPCA".impute_4 * -1.32127360217e-16 + "CenteredDataForPCA".impute_5 * 0.418657169912 + "CenteredDataForPCA".impute_6 * -2.58135503022e-16 + "CenteredDataForPCA".impute_7 * -0.136000569175 + "CenteredDataForPCA".impute_8 * -2.61937511332e-17 + "CenteredDataForPCA".impute_9 * 2.08586576983e-16 + "CenteredDataForPCA".impute_10 * -1.3601107781e-16 + "CenteredDataForPCA".impute_11 * -0.0904469757097 + "CenteredDataForPCA".impute_12 * 1.72508844638e-16 + "CenteredDataForPCA".impute_13 * 0.580242316914 + "CenteredDataForPCA".impute_14 * -0.102450545846 + "CenteredDataForPCA".impute_15 * -6.40983488971e-17 + "CenteredDataForPCA".impute_16 * -2.20463424903e-17 + "CenteredDataForPCA".impute_17 * -1.84264317798e-16 + "CenteredDataForPCA".impute_18 * -3.58652872189e-17 + "CenteredDataForPCA".impute_19 * -9.23138759035e-17 + "CenteredDataForPCA".impute_20 * -0.671470105938 + "CenteredDataForPCA".impute_21 * 1.79401213511e-17 AS anoova_20, "CenteredDataForPCA".impute_2 * -1.32627559381e-16 + "CenteredDataForPCA".impute_3 * 1.37982356423e-16 + "CenteredDataForPCA".impute_4 * -1.50797422741e-16 + "CenteredDataForPCA".impute_5 * -0.311844806027 + "CenteredDataForPCA".impute_6 * 2.5291968117e-16 + "CenteredDataForPCA".impute_7 * -0.585213973689 + "CenteredDataForPCA".impute_8 * -1.08179757074e-17 + "CenteredDataForPCA".impute_9 * 1.19677796832e-16 + "CenteredDataForPCA".impute_10 * 9.44950310252e-18 + "CenteredDataForPCA".impute_11 * -0.234854415179 + "CenteredDataForPCA".impute_12 * -5.60098460573e-17 + "CenteredDataForPCA".impute_13 * 0.381867469288 + "CenteredDataForPCA".impute_14 * -0.480046541113 + "CenteredDataForPCA".impute_15 * -1.49391784356e-16 + "CenteredDataForPCA".impute_16 * -5.80090586954e-17 + "CenteredDataForPCA".impute_17 * -1.0972219973e-16 + "CenteredDataForPCA".impute_18 * 4.9645971921e-17 + "CenteredDataForPCA".impute_19 * -1.68037258733e-16 + "CenteredDataForPCA".impute_20 * 0.358961529818 + "CenteredDataForPCA".impute_21 * 2.43104377176e-16 AS anoova_21 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -0.7752015590667725) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_17 <= -0.11078311502933502) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.4180944859981537) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -0.22524267435073853) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.06619895249605179) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.7752015590667725 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_17' AS feature, -0.11078311502933502 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.38235294117647056 AS "Proba_0", -0.961411167155 AS "LogProba_0", 0.05882352941176471 AS "Proba_1", -2.83321334406 AS "LogProba_1", 0.5000000000000001 AS "Proba_2", -0.69314718056 AS "LogProba_2", 0.05882352941176471 AS "Proba_3", -2.83321334406 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.20000000000000004 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.8 AS "Proba_2", -0.223143551314 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_FLOAT_INFINITY AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5263157894736843 AS "Proba_0", -0.641853886172 AS "LogProba_0", 0.10526315789473686 AS "Proba_1", -2.25129179861 AS "LogProba_1", 0.26315789473684215 AS "Proba_2", -1.33500106673 AS "LogProba_2", 0.10526315789473686 AS "Proba_3", -2.25129179861 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.4180944859981537 AS threshold, 66 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18181818181818174 AS "Proba_0", -1.70474809224 AS "LogProba_0", 0.3484848484848485 AS "Proba_1", -1.0541605261 AS "LogProba_1", 0.12121212121212119 AS "Proba_2", -2.11021320035 AS "LogProba_2", 0.3484848484848485 AS "Proba_3", -1.0541605261 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_5' AS feature, -0.22524267435073853 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24999999999999997 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.5555555555555556 AS "Proba_1", -0.587786664902 AS "LogProba_1", 0.05555555555555555 AS "Proba_2", -2.8903717579 AS "LogProba_2", 0.13888888888888887 AS "Proba_3", -1.97408102602 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4705882352941177 AS "Proba_0", -0.753771802376 AS "LogProba_0", 0.23529411764705885 AS "Proba_1", -1.44691898294 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0.2941176470588236 AS "Proba_3", -1.22377543162 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05263157894736842 AS "Proba_0", -2.94443897917 AS "LogProba_0", 0.8421052631578947 AS "Proba_1", -0.171850256927 AS "LogProba_1", 0.10526315789473684 AS "Proba_2", -2.25129179861 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_FLOAT_INFINITY AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'anoova_11' AS feature, -0.06619895249605179 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09999999999999998 AS "Proba_0", -2.30258509299 AS "LogProba_0", 0.09999999999999998 AS "Proba_1", -2.30258509299 AS "LogProba_1", 0.19999999999999998 AS "Proba_2", -1.60943791243 AS "LogProba_2", 0.6 AS "Proba_3", -0.510825623766 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 0.13333333333333336 AS "Proba_1", -2.01490302054 AS "LogProba_1", 0.0 AS "Proba_2", -BINARY_FLOAT_INFINITY AS "LogProba_2", 0.8666666666666667 AS "Proba_3", -0.143100843641 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19999999999999996 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.06666666666666665 AS "Proba_1", -2.7080502011 AS "LogProba_1", 0.39999999999999997 AS "Proba_2", -0.916290731874 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.09861228867 AS "LogProba_3", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0" AS "Proba_0_0", "DT_Output"."LogProba_0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2" AS "Proba_0_2", "DT_Output"."LogProba_2" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3" AS "Proba_0_3", "DT_Output"."LogProba_3" AS "LogProba_0_3", "DT_Output"."Decision" AS "Decision_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_15 <= -0.060484450310468674) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.12033766508102417) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.42305874824523926) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_15' AS feature, -0.060484450310468674 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2500135905700433 AS "Proba_0", -1.38624000032 AS "LogProba_0", 0.2500135901664418 AS "Proba_1", -1.38624000193 AS "LogProba_1", 0.24998137820625413 AS "Proba_2", -1.38636885107 AS "LogProba_2", 0.2499914410572607 AS "Proba_3", -1.38632859748 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, -0.12033766508102417 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14434587622073217 AS "Proba_0", -1.9355429412 AS "LogProba_0", 5.1266977731876805e-05 AS "Proba_1", -9.87846372199 AS "LogProba_1", 0.3306829889721566 AS "Proba_2", -1.10659509977 AS "LogProba_2", 0.5249198678293794 AS "Proba_3", -0.644509660746 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08273368686418328 AS "Proba_0", -2.49212842175 AS "LogProba_0", 4.087953286941596e-05 AS "Proba_1", -10.104881039 AS "LogProba_1", 0.16533412694326324 AS "Proba_2", -1.79978684088 AS "LogProba_2", 0.7518913066596841 AS "Proba_3", -0.285163504495 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2868128762461691 AS "Proba_0", -1.24892527501 AS "LogProba_0", 7.528605777008903e-05 AS "Proba_1", -9.49421559608 AS "LogProba_1", 0.7130222075081789 AS "Proba_2", -0.338242712478 AS "LogProba_2", 8.963018788187196e-05 AS "Proba_3", -9.3198183764 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_8' AS feature, -0.42305874824523926 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3460874112925843 AS "Proba_0", -1.06106390204 AS "LogProba_0", 0.47728107270169284 AS "Proba_1", -0.739649710687 AS "LogProba_1", 0.17660691248143426 AS "Proba_2", -1.73382884955 AS "LogProba_2", 2.4603524288638347e-05 AS "Proba_3", -10.6126208615 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7686692439798797 AS "Proba_0", -0.263094513861 AS "LogProba_0", 2.0758803663407538e-05 AS "Proba_1", -10.7825401283 AS "LogProba_1", 0.23124558739967588 AS "Proba_2", -1.46427498429 AS "LogProba_2", 6.440981678103568e-05 AS "Proba_3", -9.65024450198 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0849335273181711 AS "Proba_0", -2.46588635999 AS "LogProba_0", 0.7722260395705092 AS "Proba_1", -0.258477974443 AS "LogProba_1", 0.1428404297167266 AS "Proba_2", -1.94602714788 AS "LogProba_2", 3.3945932766975787e-09 AS "Proba_3", -19.5010818838 AS "LogProba_3", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0" AS "Proba_1_0", "DT_Output_1"."LogProba_0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2" AS "Proba_1_2", "DT_Output_1"."LogProba_2" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3" AS "Proba_1_3", "DT_Output_1"."LogProba_3" AS "LogProba_1_3", "DT_Output_1"."Decision" AS "Decision_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -1.4651076793670654) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -2.2254600524902344) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= -0.7317941188812256) THEN 5 ELSE 6 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.4651076793670654 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24999999999999994 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.2500000000000001 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.24999999999999997 AS "Proba_3", -1.38629436112 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4526040177981585 AS "Proba_0", -0.792737668672 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.44081638973218445 AS "Proba_2", -0.819126840047 AS "LogProba_2", 0.10657959246965716 AS "Proba_3", -2.23886322582 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -2.2254600524902344 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04665004715314992 AS "Proba_0", -3.0650813409 AS "LogProba_0", 0.5009204346695568 AS "Proba_1", -0.691308003544 AS "LogProba_1", 0.058481074185299166 AS "Proba_2", -2.83905209529 AS "LogProba_2", 0.39394844399199425 AS "Proba_3", -0.931535231058 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.02979150314662957 AS "Proba_0", -3.51353205544 AS "LogProba_0", 0.9701701866163759 AS "Proba_1", -0.0302837727543 AS "LogProba_1", 3.8310236994546543e-05 AS "Proba_2", -10.169793413 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_FLOAT_INFINITY AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_10' AS feature, -0.7317941188812256 AS threshold, 53 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06051599848114181 AS "Proba_0", -2.8048475112 AS "LogProba_0", 0.11496811170202625 AS "Proba_1", -2.16310047862 AS "LogProba_1", 0.10654955032814331 AS "Proba_2", -2.23914514074 AS "LogProba_2", 0.7179663394886887 AS "Proba_3", -0.331332591968 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19778177239334963 AS "Proba_0", -1.62059101574 AS "LogProba_0", 0.34343306513767 AS "Proba_1", -1.06876304762 AS "LogProba_1", 0.21989821984300248 AS "Proba_2", -1.51459047676 AS "LogProba_2", 0.23888694262597776 AS "Proba_3", -1.43176488238 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.016324740939720802 AS "Proba_0", -4.11507347288 AS "LogProba_0", 0.04141624725167482 AS "Proba_1", -3.18408202944 AS "LogProba_1", 0.07005815044202009 AS "Proba_2", -2.65842966119 AS "LogProba_2", 0.8722008613665843 AS "Proba_3", -0.136735535995 AS "LogProba_3", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0" AS "Proba_2_0", "DT_Output_2"."LogProba_0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2" AS "Proba_2_2", "DT_Output_2"."LogProba_2" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3" AS "Proba_2_3", "DT_Output_2"."LogProba_3" AS "LogProba_2_3", "DT_Output_2"."Decision" AS "Decision_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= 0.2765170931816101) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= 0.3420570492744446) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.4710196852684021) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.4243094325065613) THEN 7 ELSE 8 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_13' AS feature, 0.2765170931816101 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2500460162774673 AS "Proba_0", -1.38611031295 AS "LogProba_0", 0.24986872309318925 AS "Proba_1", -1.38681960666 AS "LogProba_1", 0.2500460162774674 AS "Proba_2", -1.38611031295 AS "LogProba_2", 0.250039244351876 AS "Proba_3", -1.38613739603 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_18' AS feature, 0.3420570492744446 AS threshold, 63 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.009319911287812498 AS "Proba_0", -4.6756021688 AS "LogProba_0", 0.3778070489971962 AS "Proba_1", -0.973371666076 AS "LogProba_1", 0.2841001562004608 AS "Proba_2", -1.25842844031 AS "LogProba_2", 0.3287728835145306 AS "Proba_3", -1.11238809026 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.4710196852684021 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.016823345210411136 AS "Proba_0", -4.08498776131 AS "LogProba_0", 3.1373649662554865e-05 AS "Proba_1", -10.3695422001 AS "LogProba_1", 0.5188976562489612 AS "Proba_2", -0.656048609387 AS "LogProba_2", 0.46424762489096516 AS "Proba_3", -0.767337194775 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0004762938667539827 AS "Proba_0", -7.6494755271 AS "LogProba_0", 6.037360334594494e-05 AS "Proba_1", -9.71495857925 AS "LogProba_1", 0.998518339257086 AS "Proba_2", -0.00148275948764 AS "LogProba_2", 0.0009449932728141646 AS "Proba_3", -6.96433274921 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.034508420942350466 AS "Proba_0", -3.36655189944 AS "LogProba_0", 1.7419545833055193e-11 AS "Proba_1", -24.7734282164 AS "LogProba_1", 1.948530014861494e-05 AS "Proba_2", -10.8458502152 AS "LogProba_2", 0.9654720937400814 AS "Proba_3", -0.0351380809595 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0002575489055860025 AS "Proba_0", -8.26430093129 AS "LogProba_0", 0.8340701552636179 AS "Proba_1", -0.18143776114 AS "LogProba_1", 0.0005206572897229888 AS "Proba_2", -7.56041852589 AS "LogProba_2", 0.16515163854107298 AS "Proba_3", -1.80089120566 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_8' AS feature, -0.4243094325065613 AS threshold, 37 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.720032603370803 AS "Proba_0", -0.328458785538 AS "LogProba_0", 8.56879186568111e-05 AS "Proba_1", -9.3647987148 AS "LogProba_1", 0.18355971227028722 AS "Proba_2", -1.69521525695 AS "LogProba_2", 0.09632199644025291 AS "Proba_3", -2.34005857047 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9522980880327029 AS "Proba_0", -0.0488771755205 AS "LogProba_0", 3.1213293696967445e-06 AS "Proba_1", -12.6772515669 AS "LogProba_1", 1.322762837934695e-05 AS "Proba_2", -11.2332028567 AS "LogProba_2", 0.04768556300954794 AS "Proba_3", -3.04312658917 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00021026523710121437 AS "Proba_0", -8.46714079039 AS "LogProba_0", 0.0003415730125565374 AS "Proba_1", -7.98194910223 AS "LogProba_1", 0.7523952408185045 AS "Proba_2", -0.28449350691 AS "LogProba_2", 0.24705292093183776 AS "Proba_3", -1.39815271052 AS "LogProba_3", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0" AS "Proba_3_0", "DT_Output_3"."LogProba_0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2" AS "Proba_3_2", "DT_Output_3"."LogProba_2" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3" AS "Proba_3_3", "DT_Output_3"."LogProba_3" AS "LogProba_3_3", "DT_Output_3"."Decision" AS "Decision_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -1.4651076793670654) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -1.0383250713348389) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= 0.3762192726135254) THEN 5 ELSE 6 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.4651076793670654 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24999999999999994 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.25000000000000006 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.24999999999999997 AS "Proba_3", -1.38629436112 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5492427133452908 AS "Proba_0", -0.599214834359 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0.40152163566288523 AS "Proba_2", -0.912493859967 AS "LogProba_2", 0.04923565099182389 AS "Proba_3", -3.01113730423 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_6' AS feature, -1.0383250713348389 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.029055197491012638 AS "Proba_0", -3.53855789633 AS "LogProba_0", 0.43458661870075604 AS "Proba_1", -0.833360001554 AS "LogProba_1", 0.13812453445192055 AS "Proba_2", -1.9795995772 AS "LogProba_2", 0.39823364935631067 AS "Proba_3", -0.920716387265 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.005930495889439869 AS "Proba_0", -5.12764744562 AS "LogProba_0", 0.05860526643173625 AS "Proba_1", -2.83693071559 AS "LogProba_1", 0.24411425881083837 AS "Proba_2", -1.41011888948 AS "LogProba_2", 0.6913499788679854 AS "Proba_3", -0.369109101714 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_19' AS feature, 0.3762192726135254 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04920241494878988 AS "Proba_0", -3.01181257236 AS "LogProba_0", 0.7621574645757095 AS "Proba_1", -0.271602098219 AS "LogProba_1", 0.04578180667359754 AS "Proba_2", -3.08386850098 AS "LogProba_2", 0.14285831380190298 AS "Proba_3", -1.94590195248 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04009568834983982 AS "Proba_0", -3.2164864729 AS "LogProba_0", 0.8440894142190649 AS "Proba_1", -0.16949684898 AS "LogProba_1", 0.051128205332318176 AS "Proba_2", -2.9734189706 AS "LogProba_2", 0.06468669209877695 AS "Proba_3", -2.73819978489 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1271843196134871 AS "Proba_0", -2.06211790915 AS "LogProba_0", 0.06056513975313792 AS "Proba_1", -2.80403580303 AS "LogProba_1", 5.059844615274347e-09 AS "Proba_2", -19.1019300626 AS "LogProba_2", 0.8122505355735304 AS "Proba_3", -0.207946445063 AS "LogProba_3", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Proba_2" AS "Proba_2", "DT_node_data_4"."LogProba_2" AS "LogProba_2", "DT_node_data_4"."Proba_3" AS "Proba_3", "DT_node_data_4"."LogProba_3" AS "LogProba_3", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0" AS "Proba_4_0", "DT_Output_4"."LogProba_0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2" AS "Proba_4_2", "DT_Output_4"."LogProba_2" AS "LogProba_4_2", CAST(NULL AS FLOAT) AS "Score_4_3", "DT_Output_4"."Proba_3" AS "Proba_4_3", "DT_Output_4"."LogProba_3" AS "LogProba_4_3", "DT_Output_4"."Decision" AS "Decision_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_17 <= 0.7584027051925659) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 0.01594962179660797) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_16 <= -0.39321309328079224) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 <= 1.0899062156677246) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_17' AS feature, 0.7584027051925659 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25002017730968407 AS "Proba_0", -1.38621365514 AS "LogProba_0", 0.24993946807094775 AS "Proba_1", -1.38653651815 AS "LogProba_1", 0.25002017730968407 AS "Proba_2", -1.38621365514 AS "LogProba_2", 0.2500201773096841 AS "Proba_3", -1.38621365514 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_7' AS feature, 0.01594962179660797 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2999803153036733 AS "Proba_0", -1.20403842213 AS "LogProba_0", 0.10152084506581197 AS "Proba_1", -2.28749113148 AS "LogProba_1", 0.2989606631505705 AS "Proba_2", -1.20744327562 AS "LogProba_2", 0.2995381764799442 AS "Proba_3", -1.20551340217 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_16' AS feature, -0.39321309328079224 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5062630194326319 AS "Proba_0", -0.680698943494 AS "LogProba_0", 0.0885984612602967 AS "Proba_1", -2.42364078879 AS "LogProba_1", 0.3849397285747586 AS "Proba_2", -0.954668506106 AS "LogProba_2", 0.020198790732312875 AS "Proba_3", -3.9021325411 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9593573730817122 AS "Proba_0", -0.0414916217104 AS "LogProba_0", 0.03612749708003584 AS "Proba_1", -3.32070101162 AS "LogProba_1", 6.930113912704907e-09 AS "Proba_2", -18.7873895863 AS "LogProba_2", 0.004515122908138124 AS "Proba_3", -5.4003228703 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11744310992169343 AS "Proba_0", -2.14180123353 AS "LogProba_0", 0.13362607058760645 AS "Proba_1", -2.01270989779 AS "LogProba_1", 0.7152731934074655 AS "Proba_2", -0.335090720584 AS "LogProba_2", 0.03365762608323453 AS "Proba_3", -3.39151561905 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, 1.0899062156677246 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0012091428083914 AS "Proba_0", -6.71784359324 AS "LogProba_0", 0.12023708100672843 AS "Proba_1", -2.11828981022 AS "LogProba_1", 0.17443220937010115 AS "Proba_2", -1.7462190978 AS "LogProba_2", 0.704121566814779 AS "Proba_3", -0.350804257597 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0014197041164543428 AS "Proba_0", -6.55730679777 AS "LogProba_0", 0.1393367196563142 AS "Proba_1", -1.97086183167 AS "LogProba_1", 0.0013258457239346026 AS "Proba_2", -6.62570474094 AS "LogProba_2", 0.8579177305032968 AS "Proba_3", -0.153247069286 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0002832594756829281 AS "Proba_0", -8.16914720519 AS "LogProba_0", 0.03625186430623312 AS "Proba_1", -3.31726446987 AS "LogProba_1", 0.9356181003593704 AS "Proba_2", -0.0665478982008 AS "LogProba_2", 0.027846775858713573 AS "Proba_3", -3.5810380874 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.783390777908891e-06 AS "Proba_0", -12.0605204075 AS "LogProba_0", 0.9926674421484414 AS "Proba_1", -0.00735957319594 AS "LogProba_1", 0.00510840570732866 AS "Proba_2", -5.2768679181 AS "LogProba_2", 0.002218368753452037 AS "Proba_3", -6.11098314893 AS "LogProba_3", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Proba_2" AS "Proba_2", "DT_node_data_5"."LogProba_2" AS "LogProba_2", "DT_node_data_5"."Proba_3" AS "Proba_3", "DT_node_data_5"."LogProba_3" AS "LogProba_3", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0" AS "Proba_5_0", "DT_Output_5"."LogProba_0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2" AS "Proba_5_2", "DT_Output_5"."LogProba_2" AS "LogProba_5_2", CAST(NULL AS FLOAT) AS "Score_5_3", "DT_Output_5"."Proba_3" AS "Proba_5_3", "DT_Output_5"."LogProba_3" AS "LogProba_5_3", "DT_Output_5"."Decision" AS "Decision_5" 
FROM "DT_Output_5"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Score_0_0" AS "Score_0_0", "AdaBoost_Estim_0"."Proba_0_0" AS "Proba_0_0", "AdaBoost_Estim_0"."LogProba_0_0" AS "LogProba_0_0", "AdaBoost_Estim_0"."Score_0_1" AS "Score_0_1", "AdaBoost_Estim_0"."Proba_0_1" AS "Proba_0_1", "AdaBoost_Estim_0"."LogProba_0_1" AS "LogProba_0_1", "AdaBoost_Estim_0"."Score_0_2" AS "Score_0_2", "AdaBoost_Estim_0"."Proba_0_2" AS "Proba_0_2", "AdaBoost_Estim_0"."LogProba_0_2" AS "LogProba_0_2", "AdaBoost_Estim_0"."Score_0_3" AS "Score_0_3", "AdaBoost_Estim_0"."Proba_0_3" AS "Proba_0_3", "AdaBoost_Estim_0"."LogProba_0_3" AS "LogProba_0_3", "AdaBoost_Estim_0"."Decision_0" AS "Decision_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Score_1_0" AS "Score_1_0", "AdaBoost_Estim_1"."Proba_1_0" AS "Proba_1_0", "AdaBoost_Estim_1"."LogProba_1_0" AS "LogProba_1_0", "AdaBoost_Estim_1"."Score_1_1" AS "Score_1_1", "AdaBoost_Estim_1"."Proba_1_1" AS "Proba_1_1", "AdaBoost_Estim_1"."LogProba_1_1" AS "LogProba_1_1", "AdaBoost_Estim_1"."Score_1_2" AS "Score_1_2", "AdaBoost_Estim_1"."Proba_1_2" AS "Proba_1_2", "AdaBoost_Estim_1"."LogProba_1_2" AS "LogProba_1_2", "AdaBoost_Estim_1"."Score_1_3" AS "Score_1_3", "AdaBoost_Estim_1"."Proba_1_3" AS "Proba_1_3", "AdaBoost_Estim_1"."LogProba_1_3" AS "LogProba_1_3", "AdaBoost_Estim_1"."Decision_1" AS "Decision_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Score_2_0" AS "Score_2_0", "AdaBoost_Estim_2"."Proba_2_0" AS "Proba_2_0", "AdaBoost_Estim_2"."LogProba_2_0" AS "LogProba_2_0", "AdaBoost_Estim_2"."Score_2_1" AS "Score_2_1", "AdaBoost_Estim_2"."Proba_2_1" AS "Proba_2_1", "AdaBoost_Estim_2"."LogProba_2_1" AS "LogProba_2_1", "AdaBoost_Estim_2"."Score_2_2" AS "Score_2_2", "AdaBoost_Estim_2"."Proba_2_2" AS "Proba_2_2", "AdaBoost_Estim_2"."LogProba_2_2" AS "LogProba_2_2", "AdaBoost_Estim_2"."Score_2_3" AS "Score_2_3", "AdaBoost_Estim_2"."Proba_2_3" AS "Proba_2_3", "AdaBoost_Estim_2"."LogProba_2_3" AS "LogProba_2_3", "AdaBoost_Estim_2"."Decision_2" AS "Decision_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Score_3_0" AS "Score_3_0", "AdaBoost_Estim_3"."Proba_3_0" AS "Proba_3_0", "AdaBoost_Estim_3"."LogProba_3_0" AS "LogProba_3_0", "AdaBoost_Estim_3"."Score_3_1" AS "Score_3_1", "AdaBoost_Estim_3"."Proba_3_1" AS "Proba_3_1", "AdaBoost_Estim_3"."LogProba_3_1" AS "LogProba_3_1", "AdaBoost_Estim_3"."Score_3_2" AS "Score_3_2", "AdaBoost_Estim_3"."Proba_3_2" AS "Proba_3_2", "AdaBoost_Estim_3"."LogProba_3_2" AS "LogProba_3_2", "AdaBoost_Estim_3"."Score_3_3" AS "Score_3_3", "AdaBoost_Estim_3"."Proba_3_3" AS "Proba_3_3", "AdaBoost_Estim_3"."LogProba_3_3" AS "LogProba_3_3", "AdaBoost_Estim_3"."Decision_3" AS "Decision_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Score_4_0" AS "Score_4_0", "AdaBoost_Estim_4"."Proba_4_0" AS "Proba_4_0", "AdaBoost_Estim_4"."LogProba_4_0" AS "LogProba_4_0", "AdaBoost_Estim_4"."Score_4_1" AS "Score_4_1", "AdaBoost_Estim_4"."Proba_4_1" AS "Proba_4_1", "AdaBoost_Estim_4"."LogProba_4_1" AS "LogProba_4_1", "AdaBoost_Estim_4"."Score_4_2" AS "Score_4_2", "AdaBoost_Estim_4"."Proba_4_2" AS "Proba_4_2", "AdaBoost_Estim_4"."LogProba_4_2" AS "LogProba_4_2", "AdaBoost_Estim_4"."Score_4_3" AS "Score_4_3", "AdaBoost_Estim_4"."Proba_4_3" AS "Proba_4_3", "AdaBoost_Estim_4"."LogProba_4_3" AS "LogProba_4_3", "AdaBoost_Estim_4"."Decision_4" AS "Decision_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Score_5_0" AS "Score_5_0", "AdaBoost_Estim_5"."Proba_5_0" AS "Proba_5_0", "AdaBoost_Estim_5"."LogProba_5_0" AS "LogProba_5_0", "AdaBoost_Estim_5"."Score_5_1" AS "Score_5_1", "AdaBoost_Estim_5"."Proba_5_1" AS "Proba_5_1", "AdaBoost_Estim_5"."LogProba_5_1" AS "LogProba_5_1", "AdaBoost_Estim_5"."Score_5_2" AS "Score_5_2", "AdaBoost_Estim_5"."Proba_5_2" AS "Proba_5_2", "AdaBoost_Estim_5"."LogProba_5_2" AS "LogProba_5_2", "AdaBoost_Estim_5"."Score_5_3" AS "Score_5_3", "AdaBoost_Estim_5"."Proba_5_3" AS "Proba_5_3", "AdaBoost_Estim_5"."LogProba_5_3" AS "LogProba_5_3", "AdaBoost_Estim_5"."Decision_5" AS "Decision_5" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS "KEY", (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 AS "Score_0", 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) AS "Proba_0", (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 AS "Score_1", 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) AS "Proba_1", (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 AS "Score_2", 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) AS "Proba_2", (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4)) / 6.0 AS "Score_3", 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -BINARY_FLOAT_INFINITY END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -BINARY_FLOAT_INFINITY END END) / 4) AS "Proba_3" 
FROM "AdaBoost_Join_CTE"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "AdaBoost_AVG_Scores_BN"."Score_2" AS "Score_2", exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3)) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", "AdaBoost_AVG_Scores_BN"."Score_3" AS "Score_3", exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3)) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Score_2" AS "Score_2", "AdaBoost_AVG_Scores"."Score_3" AS "Score_3", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."Proba_2" AS "Proba_2", "AdaBoost_AVG_Scores"."Proba_3" AS "Proba_3", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", "AdaBoost_AVG_Scores"."LogProba_2" AS "LogProba_2", "AdaBoost_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte