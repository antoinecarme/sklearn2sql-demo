-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0816289198573 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.492936517866 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0986880734613 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0514830020249 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.00887007146469 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0550808632804 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.339364406976 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.183174997036 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0260511766932 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.209522894789 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.0981240086899 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.0224938204595 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.169981676385 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.0664645554527 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.105754676953 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.00811229906279 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.227672505374 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.108688113582 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.674905166346 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.035371674224 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.0816289198573 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.492936517866 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.0986880734613 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.0514830020249 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.00887007146469 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.0550808632804 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.339364406976 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.183174997036 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.0260511766932 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.209522894789 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.0981240086899 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.0224938204595 AS impute_13, "ADS_imp_1_OUT".impute_14 - -0.169981676385 AS impute_14, "ADS_imp_1_OUT".impute_15 - 0.0664645554527 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.105754676953 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.00811229906279 AS impute_17, "ADS_imp_1_OUT".impute_18 - 0.227672505374 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.108688113582 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.674905166346 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.035371674224 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.0708766765663 + "CenteredDataForPCA".impute_3 * -0.187490664109 + "CenteredDataForPCA".impute_4 * 0.0133973392692 + "CenteredDataForPCA".impute_5 * 0.0824167775217 + "CenteredDataForPCA".impute_6 * -0.0414381481796 + "CenteredDataForPCA".impute_7 * -0.0540417880285 + "CenteredDataForPCA".impute_8 * 0.29356029226 + "CenteredDataForPCA".impute_9 * 0.0856272233202 + "CenteredDataForPCA".impute_10 * 0.0358672549664 + "CenteredDataForPCA".impute_11 * 0.00456162613401 + "CenteredDataForPCA".impute_12 * -0.0297642751447 + "CenteredDataForPCA".impute_13 * 0.0812797126327 + "CenteredDataForPCA".impute_14 * -0.419936114514 + "CenteredDataForPCA".impute_15 * -0.0718276977569 + "CenteredDataForPCA".impute_16 * 0.732896866297 + "CenteredDataForPCA".impute_17 * 0.0696028693887 + "CenteredDataForPCA".impute_18 * 0.00261771221311 + "CenteredDataForPCA".impute_19 * -0.0655056996891 + "CenteredDataForPCA".impute_20 * -0.324842378355 + "CenteredDataForPCA".impute_21 * 0.112234155147 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.083414438989 + "CenteredDataForPCA".impute_3 * 0.609053284042 + "CenteredDataForPCA".impute_4 * -0.0352860076064 + "CenteredDataForPCA".impute_5 * 0.0254169026287 + "CenteredDataForPCA".impute_6 * 0.0765149343991 + "CenteredDataForPCA".impute_7 * 0.0293986013088 + "CenteredDataForPCA".impute_8 * 0.337591131717 + "CenteredDataForPCA".impute_9 * 0.0425364507837 + "CenteredDataForPCA".impute_10 * 0.0845504346483 + "CenteredDataForPCA".impute_11 * 0.0535224635671 + "CenteredDataForPCA".impute_12 * 0.145418516576 + "CenteredDataForPCA".impute_13 * 0.0375421737348 + "CenteredDataForPCA".impute_14 * -0.0264626332887 + "CenteredDataForPCA".impute_15 * 0.0727633518467 + "CenteredDataForPCA".impute_16 * -0.266534046862 + "CenteredDataForPCA".impute_17 * 0.0377173417715 + "CenteredDataForPCA".impute_18 * -0.0594284086733 + "CenteredDataForPCA".impute_19 * 0.0558634777482 + "CenteredDataForPCA".impute_20 * -0.615968952139 + "CenteredDataForPCA".impute_21 * -0.0247324962231 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.0627523796117 + "CenteredDataForPCA".impute_3 * -0.129508258778 + "CenteredDataForPCA".impute_4 * -0.0163784922453 + "CenteredDataForPCA".impute_5 * 0.0592222353529 + "CenteredDataForPCA".impute_6 * -0.296986933099 + "CenteredDataForPCA".impute_7 * -0.177195765143 + "CenteredDataForPCA".impute_8 * 0.235107082641 + "CenteredDataForPCA".impute_9 * -0.0214366208157 + "CenteredDataForPCA".impute_10 * -0.0559341160655 + "CenteredDataForPCA".impute_11 * -0.0518696427202 + "CenteredDataForPCA".impute_12 * -0.745190232557 + "CenteredDataForPCA".impute_13 * 0.102894442174 + "CenteredDataForPCA".impute_14 * 0.282071569317 + "CenteredDataForPCA".impute_15 * -0.199832385155 + "CenteredDataForPCA".impute_16 * -0.168435871256 + "CenteredDataForPCA".impute_17 * -0.0848151768029 + "CenteredDataForPCA".impute_18 * 0.0766251477948 + "CenteredDataForPCA".impute_19 * -0.149414541595 + "CenteredDataForPCA".impute_20 * -0.206927568379 + "CenteredDataForPCA".impute_21 * 0.048869156592 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.0957051472329 + "CenteredDataForPCA".impute_3 * -0.22787596834 + "CenteredDataForPCA".impute_4 * 0.065817825012 + "CenteredDataForPCA".impute_5 * 0.104719072901 + "CenteredDataForPCA".impute_6 * 0.0743568955133 + "CenteredDataForPCA".impute_7 * 0.00986027196134 + "CenteredDataForPCA".impute_8 * 0.490320313064 + "CenteredDataForPCA".impute_9 * 0.143202594479 + "CenteredDataForPCA".impute_10 * 0.0787688722297 + "CenteredDataForPCA".impute_11 * -0.126368450637 + "CenteredDataForPCA".impute_12 * 0.354090456897 + "CenteredDataForPCA".impute_13 * -0.111256123302 + "CenteredDataForPCA".impute_14 * 0.616555402045 + "CenteredDataForPCA".impute_15 * -0.077224099494 + "CenteredDataForPCA".impute_16 * 0.144007506192 + "CenteredDataForPCA".impute_17 * -0.221070317097 + "CenteredDataForPCA".impute_18 * -0.174376471151 + "CenteredDataForPCA".impute_19 * 0.0715361401278 + "CenteredDataForPCA".impute_20 * 0.0665521903373 + "CenteredDataForPCA".impute_21 * -0.0383170412435 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.25624106144 + "CenteredDataForPCA".impute_3 * -0.152819587029 + "CenteredDataForPCA".impute_4 * -0.01142522861 + "CenteredDataForPCA".impute_5 * 0.0896582739667 + "CenteredDataForPCA".impute_6 * 0.186095247186 + "CenteredDataForPCA".impute_7 * 0.211072164548 + "CenteredDataForPCA".impute_8 * 0.0644295321443 + "CenteredDataForPCA".impute_9 * -0.220674356335 + "CenteredDataForPCA".impute_10 * 0.383271172878 + "CenteredDataForPCA".impute_11 * 0.328065860264 + "CenteredDataForPCA".impute_12 * -0.292889701135 + "CenteredDataForPCA".impute_13 * -0.321454813261 + "CenteredDataForPCA".impute_14 * 0.0570908506503 + "CenteredDataForPCA".impute_15 * 0.269284121097 + "CenteredDataForPCA".impute_16 * 0.0552301554662 + "CenteredDataForPCA".impute_17 * 0.166312864285 + "CenteredDataForPCA".impute_18 * 0.144166271858 + "CenteredDataForPCA".impute_19 * 0.399776936529 + "CenteredDataForPCA".impute_20 * -0.0204245064046 + "CenteredDataForPCA".impute_21 * -0.199094009124 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.393829678412 + "CenteredDataForPCA".impute_3 * -0.0851650985527 + "CenteredDataForPCA".impute_4 * 0.191179897566 + "CenteredDataForPCA".impute_5 * -0.267538090343 + "CenteredDataForPCA".impute_6 * 0.147803059143 + "CenteredDataForPCA".impute_7 * 0.142804193905 + "CenteredDataForPCA".impute_8 * 0.0547401536423 + "CenteredDataForPCA".impute_9 * 0.163029000706 + "CenteredDataForPCA".impute_10 * 0.286138614378 + "CenteredDataForPCA".impute_11 * -0.304218818499 + "CenteredDataForPCA".impute_12 * -0.220391880791 + "CenteredDataForPCA".impute_13 * 0.315633750664 + "CenteredDataForPCA".impute_14 * 0.0585146044033 + "CenteredDataForPCA".impute_15 * 0.4690497238 + "CenteredDataForPCA".impute_16 * 0.00480069422883 + "CenteredDataForPCA".impute_17 * 0.0806119270351 + "CenteredDataForPCA".impute_18 * -0.240795210807 + "CenteredDataForPCA".impute_19 * 0.108899655844 + "CenteredDataForPCA".impute_20 * -0.0316221412018 + "CenteredDataForPCA".impute_21 * 0.185172848366 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.076527370296 + "CenteredDataForPCA".impute_3 * 0.0351866416177 + "CenteredDataForPCA".impute_4 * -0.0762592856606 + "CenteredDataForPCA".impute_5 * 0.139022344947 + "CenteredDataForPCA".impute_6 * -0.209164180439 + "CenteredDataForPCA".impute_7 * 0.275829999192 + "CenteredDataForPCA".impute_8 * -0.177520002924 + "CenteredDataForPCA".impute_9 * 0.450511744055 + "CenteredDataForPCA".impute_10 * 0.520097252967 + "CenteredDataForPCA".impute_11 * 0.0563426364403 + "CenteredDataForPCA".impute_12 * -0.0695682857308 + "CenteredDataForPCA".impute_13 * -0.039496520331 + "CenteredDataForPCA".impute_14 * -0.140421811858 + "CenteredDataForPCA".impute_15 * -0.261967790092 + "CenteredDataForPCA".impute_16 * -0.0607739530668 + "CenteredDataForPCA".impute_17 * -0.121913012999 + "CenteredDataForPCA".impute_18 * -0.358682390823 + "CenteredDataForPCA".impute_19 * -0.197550598803 + "CenteredDataForPCA".impute_20 * 0.0538179532649 + "CenteredDataForPCA".impute_21 * -0.236440362901 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.00182205913684 + "CenteredDataForPCA".impute_3 * 0.010868127005 + "CenteredDataForPCA".impute_4 * 0.141078937507 + "CenteredDataForPCA".impute_5 * -0.240840139959 + "CenteredDataForPCA".impute_6 * -0.547554120053 + "CenteredDataForPCA".impute_7 * -0.205257492431 + "CenteredDataForPCA".impute_8 * 0.0356622237437 + "CenteredDataForPCA".impute_9 * -0.111668577613 + "CenteredDataForPCA".impute_10 * 0.144393375991 + "CenteredDataForPCA".impute_11 * 0.0793218387202 + "CenteredDataForPCA".impute_12 * 0.17167035639 + "CenteredDataForPCA".impute_13 * -0.050671389835 + "CenteredDataForPCA".impute_14 * 0.0892666863231 + "CenteredDataForPCA".impute_15 * -0.170460765796 + "CenteredDataForPCA".impute_16 * -0.0102560733953 + "CenteredDataForPCA".impute_17 * 0.589966378336 + "CenteredDataForPCA".impute_18 * -0.228372990754 + "CenteredDataForPCA".impute_19 * 0.236889305393 + "CenteredDataForPCA".impute_20 * 0.0464591337181 + "CenteredDataForPCA".impute_21 * 0.107161833441 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.192579380556 + "CenteredDataForPCA".impute_3 * -0.0399633934444 + "CenteredDataForPCA".impute_4 * -0.249849269621 + "CenteredDataForPCA".impute_5 * 0.36605288851 + "CenteredDataForPCA".impute_6 * -0.344843274152 + "CenteredDataForPCA".impute_7 * 0.392399646947 + "CenteredDataForPCA".impute_8 * 0.0176807193868 + "CenteredDataForPCA".impute_9 * 0.199645948932 + "CenteredDataForPCA".impute_10 * -0.408725407315 + "CenteredDataForPCA".impute_11 * 0.00408608176251 + "CenteredDataForPCA".impute_12 * 0.0163610022453 + "CenteredDataForPCA".impute_13 * 0.118168882879 + "CenteredDataForPCA".impute_14 * 0.073255253165 + "CenteredDataForPCA".impute_15 * 0.441253752067 + "CenteredDataForPCA".impute_16 * -0.00722571308908 + "CenteredDataForPCA".impute_17 * 0.233554468594 + "CenteredDataForPCA".impute_18 * -0.0963789864492 + "CenteredDataForPCA".impute_19 * -0.00456556142294 + "CenteredDataForPCA".impute_20 * 0.0432105083253 + "CenteredDataForPCA".impute_21 * 0.0683997466713 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.0227083111241 + "CenteredDataForPCA".impute_3 * 0.0316078227022 + "CenteredDataForPCA".impute_4 * 0.215904466059 + "CenteredDataForPCA".impute_5 * 0.480172190457 + "CenteredDataForPCA".impute_6 * -0.097665977331 + "CenteredDataForPCA".impute_7 * -0.348969322942 + "CenteredDataForPCA".impute_8 * -0.093602967078 + "CenteredDataForPCA".impute_9 * -0.313169813317 + "CenteredDataForPCA".impute_10 * 0.168809172864 + "CenteredDataForPCA".impute_11 * 0.251289692366 + "CenteredDataForPCA".impute_12 * 0.0430025548763 + "CenteredDataForPCA".impute_13 * 0.0899921057676 + "CenteredDataForPCA".impute_14 * -0.0580703401667 + "CenteredDataForPCA".impute_15 * 0.259130559179 + "CenteredDataForPCA".impute_16 * -0.0345189362544 + "CenteredDataForPCA".impute_17 * -0.293844717992 + "CenteredDataForPCA".impute_18 * -0.361787321583 + "CenteredDataForPCA".impute_19 * -0.0555121383583 + "CenteredDataForPCA".impute_20 * 0.0487687139899 + "CenteredDataForPCA".impute_21 * 0.295215422615 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.197576494488 + "CenteredDataForPCA".impute_3 * -0.0509188718694 + "CenteredDataForPCA".impute_4 * -0.498080382365 + "CenteredDataForPCA".impute_5 * -0.0462291741191 + "CenteredDataForPCA".impute_6 * 0.290492116664 + "CenteredDataForPCA".impute_7 * -0.1426163628 + "CenteredDataForPCA".impute_8 * -0.0108465408824 + "CenteredDataForPCA".impute_9 * 0.159291753179 + "CenteredDataForPCA".impute_10 * 0.245150047629 + "CenteredDataForPCA".impute_11 * 0.261560554701 + "CenteredDataForPCA".impute_12 * 0.0527339543642 + "CenteredDataForPCA".impute_13 * 0.347562036134 + "CenteredDataForPCA".impute_14 * 0.135028567561 + "CenteredDataForPCA".impute_15 * -0.110334109167 + "CenteredDataForPCA".impute_16 * -0.0590217382398 + "CenteredDataForPCA".impute_17 * 0.198625810397 + "CenteredDataForPCA".impute_18 * 0.115998416092 + "CenteredDataForPCA".impute_19 * -0.0729602604473 + "CenteredDataForPCA".impute_20 * 0.109529445901 + "CenteredDataForPCA".impute_21 * 0.470874334169 AS anoova_12, "CenteredDataForPCA".impute_2 * -0.00647779980323 + "CenteredDataForPCA".impute_3 * -0.0616745998165 + "CenteredDataForPCA".impute_4 * -0.21871793978 + "CenteredDataForPCA".impute_5 * -0.34621151427 + "CenteredDataForPCA".impute_6 * -0.157903252239 + "CenteredDataForPCA".impute_7 * -0.0205070996508 + "CenteredDataForPCA".impute_8 * 0.0827414749687 + "CenteredDataForPCA".impute_9 * -0.25139505481 + "CenteredDataForPCA".impute_10 * -0.0267808830312 + "CenteredDataForPCA".impute_11 * 0.346999031936 + "CenteredDataForPCA".impute_12 * 0.0814246546655 + "CenteredDataForPCA".impute_13 * 0.495330356214 + "CenteredDataForPCA".impute_14 * 0.0497206944248 + "CenteredDataForPCA".impute_15 * 0.149305854549 + "CenteredDataForPCA".impute_16 * 0.0985552949015 + "CenteredDataForPCA".impute_17 * -0.205451481232 + "CenteredDataForPCA".impute_18 * -0.124777628321 + "CenteredDataForPCA".impute_19 * -0.0708666923149 + "CenteredDataForPCA".impute_20 * 0.00788287153171 + "CenteredDataForPCA".impute_21 * -0.512450506223 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.303424211666 + "CenteredDataForPCA".impute_3 * -0.0350469815565 + "CenteredDataForPCA".impute_4 * -0.387634032555 + "CenteredDataForPCA".impute_5 * 0.253649941101 + "CenteredDataForPCA".impute_6 * 0.249383299268 + "CenteredDataForPCA".impute_7 * -0.0631314133833 + "CenteredDataForPCA".impute_8 * 0.0624834742526 + "CenteredDataForPCA".impute_9 * -0.365186433324 + "CenteredDataForPCA".impute_10 * 0.034136054375 + "CenteredDataForPCA".impute_11 * -0.226599965177 + "CenteredDataForPCA".impute_12 * -0.0455461069076 + "CenteredDataForPCA".impute_13 * -0.149349943378 + "CenteredDataForPCA".impute_14 * 0.04763104992 + "CenteredDataForPCA".impute_15 * -0.0550429753686 + "CenteredDataForPCA".impute_16 * 0.0236883207222 + "CenteredDataForPCA".impute_17 * 0.383425919796 + "CenteredDataForPCA".impute_18 * -0.316028760335 + "CenteredDataForPCA".impute_19 * -0.319513459725 + "CenteredDataForPCA".impute_20 * -0.0252189063369 + "CenteredDataForPCA".impute_21 * -0.237270714842 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.205619270736 + "CenteredDataForPCA".impute_3 * -0.0342136739918 + "CenteredDataForPCA".impute_4 * 0.477985654615 + "CenteredDataForPCA".impute_5 * 0.178665168617 + "CenteredDataForPCA".impute_6 * 0.411430157301 + "CenteredDataForPCA".impute_7 * -0.0224918935495 + "CenteredDataForPCA".impute_8 * -0.0411829058917 + "CenteredDataForPCA".impute_9 * 0.150248742819 + "CenteredDataForPCA".impute_10 * -0.258687458408 + "CenteredDataForPCA".impute_11 * 0.156748522637 + "CenteredDataForPCA".impute_12 * -0.107375191591 + "CenteredDataForPCA".impute_13 * 0.357188749639 + "CenteredDataForPCA".impute_14 * 0.0254421159533 + "CenteredDataForPCA".impute_15 * -0.224002218609 + "CenteredDataForPCA".impute_16 * -0.0502447256311 + "CenteredDataForPCA".impute_17 * 0.327812141748 + "CenteredDataForPCA".impute_18 * -0.230136472745 + "CenteredDataForPCA".impute_19 * 0.0541550669386 + "CenteredDataForPCA".impute_20 * 0.037032934272 + "CenteredDataForPCA".impute_21 * -0.231145120661 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.101767670425 + "CenteredDataForPCA".impute_3 * -0.0319494529633 + "CenteredDataForPCA".impute_4 * 0.00292976195423 + "CenteredDataForPCA".impute_5 * -0.444859444428 + "CenteredDataForPCA".impute_6 * 0.153634774976 + "CenteredDataForPCA".impute_7 * 0.10587797255 + "CenteredDataForPCA".impute_8 * 0.0352298496302 + "CenteredDataForPCA".impute_9 * 0.0499241974704 + "CenteredDataForPCA".impute_10 * -0.286331373538 + "CenteredDataForPCA".impute_11 * 0.341741272848 + "CenteredDataForPCA".impute_12 * -0.138004716338 + "CenteredDataForPCA".impute_13 * -0.420860627748 + "CenteredDataForPCA".impute_14 * 0.0011917873147 + "CenteredDataForPCA".impute_15 * 0.0694686047863 + "CenteredDataForPCA".impute_16 * 0.0136802230192 + "CenteredDataForPCA".impute_17 * -0.0613976586481 + "CenteredDataForPCA".impute_18 * -0.463898308603 + "CenteredDataForPCA".impute_19 * -0.263555727457 + "CenteredDataForPCA".impute_20 * -0.0479054845968 + "CenteredDataForPCA".impute_21 * 0.247956970353 AS anoova_16, "CenteredDataForPCA".impute_2 * 0.654920099232 + "CenteredDataForPCA".impute_3 * -0.0169491381802 + "CenteredDataForPCA".impute_4 * 0.153770004357 + "CenteredDataForPCA".impute_5 * 0.176103798884 + "CenteredDataForPCA".impute_6 * -0.0561413124531 + "CenteredDataForPCA".impute_7 * 0.166502742548 + "CenteredDataForPCA".impute_8 * 0.120790816241 + "CenteredDataForPCA".impute_9 * 0.143183263229 + "CenteredDataForPCA".impute_10 * -0.0105798309379 + "CenteredDataForPCA".impute_11 * 0.560526617159 + "CenteredDataForPCA".impute_12 * 0.0533024224398 + "CenteredDataForPCA".impute_13 * -0.0403697470324 + "CenteredDataForPCA".impute_14 * 0.127522183178 + "CenteredDataForPCA".impute_15 * -0.0609625423319 + "CenteredDataForPCA".impute_16 * 0.00940083146795 + "CenteredDataForPCA".impute_17 * 0.0976264454521 + "CenteredDataForPCA".impute_18 * 0.268137191986 + "CenteredDataForPCA".impute_19 * -0.167696495281 + "CenteredDataForPCA".impute_20 * -0.0257413156149 + "CenteredDataForPCA".impute_21 * 0.0333907592094 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.113770642431 + "CenteredDataForPCA".impute_3 * 0.014541283518 + "CenteredDataForPCA".impute_4 * 0.184382688294 + "CenteredDataForPCA".impute_5 * -0.0294273771855 + "CenteredDataForPCA".impute_6 * -0.0316911534971 + "CenteredDataForPCA".impute_7 * 0.651959465925 + "CenteredDataForPCA".impute_8 * 0.0318420369548 + "CenteredDataForPCA".impute_9 * -0.522232973755 + "CenteredDataForPCA".impute_10 * 0.096601997076 + "CenteredDataForPCA".impute_11 * -0.079527947827 + "CenteredDataForPCA".impute_12 * 0.0593649944879 + "CenteredDataForPCA".impute_13 * 0.20382411473 + "CenteredDataForPCA".impute_14 * 0.0344962038673 + "CenteredDataForPCA".impute_15 * -0.283219125952 + "CenteredDataForPCA".impute_16 * -0.00285197222306 + "CenteredDataForPCA".impute_17 * -0.0334487997301 + "CenteredDataForPCA".impute_18 * 0.025898320464 + "CenteredDataForPCA".impute_19 * -0.166473384547 + "CenteredDataForPCA".impute_20 * -0.00537885494938 + "CenteredDataForPCA".impute_21 * 0.283755183722 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.291638349786 + "CenteredDataForPCA".impute_3 * -0.00102262673855 + "CenteredDataForPCA".impute_4 * 0.300389630908 + "CenteredDataForPCA".impute_5 * -0.0924342979481 + "CenteredDataForPCA".impute_6 * -0.0406761103061 + "CenteredDataForPCA".impute_7 * -0.128722051734 + "CenteredDataForPCA".impute_8 * 0.0264289948049 + "CenteredDataForPCA".impute_9 * 0.0319632238505 + "CenteredDataForPCA".impute_10 * 0.215002657709 + "CenteredDataForPCA".impute_11 * -0.0600613492386 + "CenteredDataForPCA".impute_12 * 0.110164064722 + "CenteredDataForPCA".impute_13 * -0.0594366765098 + "CenteredDataForPCA".impute_14 * 0.0805449076105 + "CenteredDataForPCA".impute_15 * 0.339356253082 + "CenteredDataForPCA".impute_16 * -0.0162810472567 + "CenteredDataForPCA".impute_17 * 0.221664602257 + "CenteredDataForPCA".impute_18 * 0.301327665385 + "CenteredDataForPCA".impute_19 * -0.674207801 + "CenteredDataForPCA".impute_20 * 0.0411735296393 + "CenteredDataForPCA".impute_21 * -0.112345003325 AS anoova_19, "CenteredDataForPCA".impute_2 * -1.09038752255e-16 + "CenteredDataForPCA".impute_3 * -0.572663432834 + "CenteredDataForPCA".impute_4 * 1.38777878078e-17 + "CenteredDataForPCA".impute_5 * 1.66533453694e-16 + "CenteredDataForPCA".impute_6 * 1.31838984174e-16 + "CenteredDataForPCA".impute_7 * -1.83880688454e-16 + "CenteredDataForPCA".impute_8 * 0.338441160758 + "CenteredDataForPCA".impute_9 * -8.32667268469e-17 + "CenteredDataForPCA".impute_10 * -1.4224732503e-16 + "CenteredDataForPCA".impute_11 * 1.38777878078e-16 + "CenteredDataForPCA".impute_12 * 0.184913033524 + "CenteredDataForPCA".impute_13 * -1.80411241502e-16 + "CenteredDataForPCA".impute_14 * -0.447359149384 + "CenteredDataForPCA".impute_15 * -1.38777878078e-17 + "CenteredDataForPCA".impute_16 * -0.563666127958 + "CenteredDataForPCA".impute_17 * -2.49800180541e-16 + "CenteredDataForPCA".impute_18 * 9.71445146547e-17 + "CenteredDataForPCA".impute_19 * -2.77555756156e-17 + "CenteredDataForPCA".impute_20 * -0.0739704744329 + "CenteredDataForPCA".impute_21 * -9.71445146547e-17 AS anoova_20, "CenteredDataForPCA".impute_2 * 1.4471704413e-16 + "CenteredDataForPCA".impute_3 * 0.390362577137 + "CenteredDataForPCA".impute_4 * 2.35922392733e-16 + "CenteredDataForPCA".impute_5 * -2.22044604925e-16 + "CenteredDataForPCA".impute_6 * 8.67361737988e-17 + "CenteredDataForPCA".impute_7 * 1.31838984174e-16 + "CenteredDataForPCA".impute_8 * 0.557232365833 + "CenteredDataForPCA".impute_9 * 3.12250225676e-17 + "CenteredDataForPCA".impute_10 * -2.39391839685e-16 + "CenteredDataForPCA".impute_11 * -8.32667268469e-17 + "CenteredDataForPCA".impute_12 * -0.178158252876 + "CenteredDataForPCA".impute_13 * 1.38777878078e-17 + "CenteredDataForPCA".impute_14 * -0.269161515697 + "CenteredDataForPCA".impute_15 * 1.38777878078e-17 + "CenteredDataForPCA".impute_16 * 0.00682060941639 + "CenteredDataForPCA".impute_17 * -1.90819582357e-17 + "CenteredDataForPCA".impute_18 * -1.11022302463e-16 + "CenteredDataForPCA".impute_19 * 2.08166817117e-17 + "CenteredDataForPCA".impute_20 * 0.657931868453 + "CenteredDataForPCA".impute_21 * 3.46944695195e-17 AS anoova_21 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -1.0906541347503662) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 0.1693131923675537) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= -0.21904753148555756) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.09078168869018555) THEN 7 ELSE 8 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -1.0906541347503662 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.24000000000000002 AS "Proba_1", -1.42711635564 AS "LogProba_1", 0.26 AS "Proba_2", -1.34707364797 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12 AS "Proba_0", -2.1202635362 AS "LogProba_0", 0.16 AS "Proba_1", -1.83258146375 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.7200000000000001 AS "Proba_3", -0.328504066972 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.1693131923675537 AS threshold, 75 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29333333333333333 AS "Proba_0", -1.22644566018 AS "LogProba_0", 0.26666666666666666 AS "Proba_1", -1.32175583998 AS "LogProba_1", 0.3466666666666666 AS "Proba_2", -1.05939157551 AS "LogProba_2", 0.09333333333333331 AS "Proba_3", -2.37157796448 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, 'anoova_13' AS feature, -0.21904753148555756 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25581395348837205 AS "Proba_0", -1.3633048429 AS "LogProba_0", 0.4418604651162791 AS "Proba_1", -0.816761136527 AS "LogProba_1", 0.23255813953488366 AS "Proba_2", -1.4586150227 AS "LogProba_2", 0.0697674418604651 AS "Proba_3", -2.66258782703 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06250000000000001 AS "Proba_0", -2.77258872224 AS "LogProba_0", 0.6875 AS "Proba_1", -0.374693449441 AS "LogProba_1", 0.06250000000000001 AS "Proba_2", -2.77258872224 AS "LogProba_2", 0.18750000000000003 AS "Proba_3", -1.67397643357 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3703703703703703 AS "Proba_0", -0.99325177301 AS "LogProba_0", 0.2962962962962963 AS "Proba_1", -1.21639532432 AS "LogProba_1", 0.3333333333333333 AS "Proba_2", -1.09861228867 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_6' AS feature, 0.09078168869018555 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34375 AS "Proba_0", -1.06784063 AS "LogProba_0", 0.03125000000000001 AS "Proba_1", -3.4657359028 AS "LogProba_1", 0.5000000000000001 AS "Proba_2", -0.69314718056 AS "LogProba_2", 0.12500000000000003 AS "Proba_3", -2.07944154168 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.47058823529411764 AS "Proba_0", -0.753771802376 AS "LogProba_0", 0.058823529411764705 AS "Proba_1", -2.83321334406 AS "LogProba_1", 0.29411764705882354 AS "Proba_2", -1.22377543162 AS "LogProba_2", 0.1764705882352941 AS "Proba_3", -1.73460105539 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.7333333333333333 AS "Proba_2", -0.310154928304 AS "LogProba_2", 0.06666666666666667 AS "Proba_3", -2.7080502011 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0" AS "Proba_0_0", "DT_Output"."LogProba_0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2" AS "Proba_0_2", "DT_Output"."LogProba_2" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3" AS "Proba_0_3", "DT_Output"."LogProba_3" AS "LogProba_0_3", "DT_Output"."Decision" AS "Decision_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.9076730012893677) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.6712071895599365) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_16 <= -0.06904664635658264) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.041948072612285614) THEN 7 ELSE 8 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.9076730012893677 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25003354026538127 AS "Proba_0", -1.38616020906 AS "LogProba_0", 0.25000832554089053 AS "Proba_1", -1.38626105951 AS "LogProba_1", 0.2499877153821049 AS "Proba_2", -1.3863435008 AS "LogProba_2", 0.2499704188116232 AS "Proba_3", -1.38641269287 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, 0.6712071895599365 AS threshold, 69 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3517551757389841 AS "Proba_0", -1.04481986884 AS "LogProba_0", 0.06721910744575862 AS "Proba_1", -2.69979773488 AS "LogProba_1", 0.22933864610288 AS "Proba_2", -1.47255556384 AS "LogProba_2", 0.35168707071237726 AS "Proba_3", -1.04501350244 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_16' AS feature, -0.06904664635658264 AS threshold, 50 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11422486280681829 AS "Proba_0", -2.16958629261 AS "LogProba_0", 0.08020644494585573 AS "Proba_1", -2.52315140642 AS "LogProba_1", 0.28109613383783477 AS "Proba_2", -1.26905855485 AS "LogProba_2", 0.5244725584094913 AS "Proba_3", -0.645362172039 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1915391544436763 AS "Proba_0", -1.65266302941 AS "LogProba_0", 0.10097940276820394 AS "Proba_1", -2.29283871593 AS "LogProba_1", 0.7074142235887168 AS "Proba_2", -0.346138895559 AS "LogProba_2", 6.721919940289804e-05 AS "Proba_3", -9.60755164584 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06324998063540926 AS "Proba_0", -2.76066045753 AS "LogProba_0", 0.06651041210474203 AS "Proba_1", -2.71039677057 AS "LogProba_1", 1.5961821729595137e-05 AS "Proba_2", -11.045310829 AS "LogProba_2", 0.870223645438119 AS "Proba_3", -0.139005036647 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8352236722769778 AS "Proba_0", -0.180055719012 AS "LogProba_0", 0.04078471910309431 AS "Proba_1", -3.19944779951 AS "LogProba_1", 0.12399160861992785 AS "Proba_2", -2.08754138809 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_12' AS feature, -0.041948072612285614 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00010368233548570955 AS "Proba_0", -9.17417879971 AS "LogProba_0", 0.6991210742391583 AS "Proba_1", -0.357931341105 AS "LogProba_1", 0.30072243791495784 AS "Proba_2", -1.20156757283 AS "LogProba_2", 5.280551039810987e-05 AS "Proba_3", -9.8488950091 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.737716800323788e-05 AS "Proba_0", -9.23691878955 AS "LogProba_0", 0.8690540553084783 AS "Proba_1", -0.140349951614 AS "LogProba_1", 0.1308141156516401 AS "Proba_2", -2.03397792796 AS "LogProba_2", 3.4451871878250965e-05 AS "Proba_3", -10.2759472259 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0001243645792850837 AS "Proba_0", -8.99229315064 AS "LogProba_0", 0.14170600892952812 AS "Proba_1", -1.95400072719 AS "LogProba_1", 0.8580566172784241 AS "Proba_2", -0.153085194167 AS "LogProba_2", 0.00011300921276265069 AS "Proba_3", -9.0880412137 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Proba_2" AS "Proba_2", "DT_node_data_1"."LogProba_2" AS "LogProba_2", "DT_node_data_1"."Proba_3" AS "Proba_3", "DT_node_data_1"."LogProba_3" AS "LogProba_3", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0" AS "Proba_1_0", "DT_Output_1"."LogProba_0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2" AS "Proba_1_2", "DT_Output_1"."LogProba_2" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3" AS "Proba_1_3", "DT_Output_1"."LogProba_3" AS "LogProba_1_3", "DT_Output_1"."Decision" AS "Decision_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.8335524797439575) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.10972203314304352) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.8602726459503174) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 0.223568394780159) THEN 7 ELSE 8 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.8335524797439575 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25003875981998286 AS "Proba_0", -1.38613933386 AS "LogProba_0", 0.2500387598199827 AS "Proba_1", -1.38613933386 AS "LogProba_1", 0.2500387598199828 AS "Proba_2", -1.38613933386 AS "LogProba_2", 0.2498837205400516 AS "Proba_3", -1.38675958716 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08136246760058255 AS "Proba_0", -2.50884119829 AS "LogProba_0", 0.0012282998757619362 AS "Proba_1", -6.70212428057 AS "LogProba_1", 1.1647048240631298e-05 AS "Proba_2", -11.36045778 AS "LogProba_2", 0.9173975854754148 AS "Proba_3", -0.0862143287438 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_12' AS feature, -0.10972203314304352 AS threshold, 71 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2879009368087926 AS "Proba_0", -1.24513882743 AS "LogProba_0", 0.30588837298803745 AS "Proba_1", -1.18453503774 AS "LogProba_1", 0.3061614707902444 AS "Proba_2", -1.18364263388 AS "LogProba_2", 0.10004921941292554 AS "Proba_3", -2.30209301995 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, 'anoova_12' AS feature, -0.8602726459503174 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.01736758676836038 AS "Proba_0", -4.05314963939 AS "LogProba_0", 0.22792841834196337 AS "Proba_1", -1.47872365396 AS "LogProba_1", 0.6669851734203204 AS "Proba_2", -0.404987462069 AS "LogProba_2", 0.08771882146935597 AS "Proba_3", -2.43361879066 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05828938267349811 AS "Proba_0", -2.84233531759 AS "LogProba_0", 0.7460423261353955 AS "Proba_1", -0.292972942941 AS "LogProba_1", 0.1956682911911065 AS "Proba_2", -1.63133444535 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.663779789679643e-05 AS "Proba_0", -9.77883398828 AS "LogProba_0", 0.008753203268533133 AS "Proba_1", -4.73833555777 AS "LogProba_1", 0.8663640695983241 AS "Proba_2", -0.143450055071 AS "LogProba_2", 0.124826089335246 AS "Proba_3", -2.08083379573 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_2' AS feature, 0.223568394780159 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5022201241723707 AS "Proba_0", -0.688716761034 AS "LogProba_0", 0.36764901774459285 AS "Proba_1", -1.00062655206 AS "LogProba_1", 0.020313375841367592 AS "Proba_2", -3.89647570148 AS "LogProba_2", 0.10981748224166882 AS "Proba_3", -2.20893554362 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0006049356712468788 AS "Proba_0", -7.4103884341 AS "LogProba_0", 0.9258505767751883 AS "Proba_1", -0.0770424215302 AS "LogProba_1", 4.2902983485503706e-05 AS "Proba_2", -10.0565691893 AS "LogProba_2", 0.07350158457007934 AS "Proba_3", -2.61044831422 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8325995872080497 AS "Proba_0", -0.183202440008 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.033664143704433186 AS "Proba_2", -3.39132199309 AS "LogProba_2", 0.1337362690875172 AS "Proba_3", -2.0118855595 AS "LogProba_3", 0 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Proba_2" AS "Proba_2", "DT_node_data_2"."LogProba_2" AS "LogProba_2", "DT_node_data_2"."Proba_3" AS "Proba_3", "DT_node_data_2"."LogProba_3" AS "LogProba_3", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0" AS "Proba_2_0", "DT_Output_2"."LogProba_0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2" AS "Proba_2_2", "DT_Output_2"."LogProba_2" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3" AS "Proba_2_3", "DT_Output_2"."LogProba_3" AS "LogProba_2_3", "DT_Output_2"."Decision" AS "Decision_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= 0.9692035913467407) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= -0.26783132553100586) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= 0.10027894377708435) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= 0.4031549096107483) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_13' AS feature, 0.9692035913467407 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.250125986564036 AS "Proba_0", -1.3857905418 AS "LogProba_0", 0.2497853571475069 AS "Proba_1", -1.38715330131 AS "LogProba_1", 0.250125986564036 AS "Proba_2", -1.3857905418 AS "LogProba_2", 0.24996266972442116 AS "Proba_3", -1.38644369337 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_19' AS feature, -0.26783132553100586 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05332325265271916 AS "Proba_0", -2.93138278304 AS "LogProba_0", 0.33600916823885635 AS "Proba_1", -1.09061683297 AS "LogProba_1", 0.29211041664356957 AS "Proba_2", -1.230623409 AS "LogProba_2", 0.318557162464855 AS "Proba_3", -1.14395334609 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_12' AS feature, 0.10027894377708435 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05679417004737568 AS "Proba_0", -2.86832159853 AS "LogProba_0", 0.07814752912363943 AS "Proba_1", -2.54915683971 AS "LogProba_1", 0.8275882872941307 AS "Proba_2", -0.189239485828 AS "LogProba_2", 0.03747001353485414 AS "Proba_3", -3.28421430496 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8899650111323017e-05 AS "Proba_0", -10.8763671487 AS "LogProba_0", 0.001700979662072915 AS "Proba_1", -6.37655092209 AS "LogProba_1", 0.9518280758797241 AS "Proba_2", -0.0493708530629 AS "LogProba_2", 0.04645204480809169 AS "Proba_3", -3.06933479299 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17525346647544304 AS "Proba_0", -1.74152197309 AS "LogProba_0", 0.2376501506031307 AS "Proba_1", -1.4369556422 AS "LogProba_1", 0.5683670129392602 AS "Proba_2", -0.564987919385 AS "LogProba_2", 0.018729369982166018 AS "Proba_3", -3.97766239992 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_19' AS feature, 0.4031549096107483 AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.051440621102046655 AS "Proba_0", -2.96732712482 AS "LogProba_0", 0.4758737637644628 AS "Proba_1", -0.742602662099 AS "LogProba_1", 0.001666300766412234 AS "Proba_2", -6.39714921947 AS "LogProba_2", 0.47101931436707833 AS "Proba_3", -0.752856178658 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04051948139155319 AS "Proba_0", -3.20597239851 AS "LogProba_0", 0.0717059048693973 AS "Proba_1", -2.63518217955 AS "LogProba_1", 0.001691295919805971 AS "Proba_2", -6.38226022745 AS "LogProba_2", 0.8860833178192435 AS "Proba_3", -0.120944294628 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.062227936426353804 AS "Proba_0", -2.77695124138 AS "LogProba_0", 0.8750890703557707 AS "Proba_1", -0.133429603113 AS "LogProba_1", 0.001641611896167437 AS "Proba_2", -6.41207665632 AS "LogProba_2", 0.06104138132170813 AS "Proba_3", -2.79620326248 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8074069814720878 AS "Proba_0", -0.213927423744 AS "LogProba_0", 0.005627716271421347 AS "Proba_1", -5.18005155475 AS "LogProba_1", 0.1312398080015309 AS "Proba_2", -2.03072903385 AS "LogProba_2", 0.05572549425496006 AS "Proba_3", -2.88731753021 AS "LogProba_3", 0 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Proba_2" AS "Proba_2", "DT_node_data_3"."LogProba_2" AS "LogProba_2", "DT_node_data_3"."Proba_3" AS "Proba_3", "DT_node_data_3"."LogProba_3" AS "LogProba_3", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0" AS "Proba_3_0", "DT_Output_3"."LogProba_0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2" AS "Proba_3_2", "DT_Output_3"."LogProba_2" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3" AS "Proba_3_3", "DT_Output_3"."LogProba_3" AS "LogProba_3_3", "DT_Output_3"."Decision" AS "Decision_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.14898106455802917) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -1.155423641204834) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_14 <= 0.3704970180988312) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= -0.007179562468081713) THEN 6 ELSE 7 END ELSE 8 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.14898106455802917 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.25000000000000006 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.25000000000000006 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.24999999999999994 AS "Proba_3", -1.38629436112 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, -1.155423641204834 AS threshold, 50 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1355537654546022 AS "Proba_0", -1.99838692434 AS "LogProba_0", 0.4027414498414583 AS "Proba_1", -0.909460486594 AS "LogProba_1", 0.019881401846521173 AS "Proba_2", -3.91797056482 AS "LogProba_2", 0.4418233828574182 AS "Proba_3", -0.816845063056 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.007203433600691148 AS "Proba_0", -4.93319747765 AS "LogProba_0", 0.06507572997479033 AS "Proba_1", -2.73220361073 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.9277208364245185 AS "Proba_3", -0.0750244142706 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19794272873268232 AS "Proba_0", -1.61977753895 AS "LogProba_0", 0.5668751446495571 AS "Proba_1", -0.567616202943 AS "LogProba_1", 0.02954542087789516 AS "Proba_2", -3.52182650897 AS "LogProba_2", 0.2056367057398653 AS "Proba_3", -1.58164423147 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, 'anoova_14' AS feature, 0.3704970180988312 AS threshold, 50 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3991015502951629 AS "Proba_0", -0.918539382457 AS "LogProba_0", 0.051007109966047 AS "Proba_1", -2.97579024488 AS "LogProba_1", 0.549800512203161 AS "Proba_2", -0.598199771634 AS "LogProba_2", 9.082753562907438e-05 AS "Proba_3", -9.3065480625 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_10' AS feature, -0.007179562468081713 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03139521293829243 AS "Proba_0", -3.46109985188 AS "LogProba_0", 0.059647686813625936 AS "Proba_1", -2.81929991051 AS "LogProba_1", 0.9087861784991859 AS "Proba_2", -0.0956454396485 AS "LogProba_2", 0.00017092174889583666 AS "Proba_3", -8.67430471499 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.014830426982436955 AS "Proba_0", -4.21107433144 AS "LogProba_0", 0.015746404037974993 AS "Proba_1", -4.15114325483 AS "LogProba_1", 0.969423168979588 AS "Proba_2", -0.0310540555268 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.27277842662913265 AS "Proba_0", -1.29909543741 AS "LogProba_0", 0.6993802345071275 AS "Proba_1", -0.357560715394 AS "LogProba_1", 0.025179733495503263 AS "Proba_2", -3.6817158344 AS "LogProba_2", 0.0026616053682366443 AS "Proba_3", -5.92882581634 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8160837403328189 AS "Proba_0", -0.203238306327 AS "LogProba_0", 0.041208620543779224 AS "Proba_1", -3.18910780801 AS "LogProba_1", 0.1427076391234018 AS "Proba_2", -1.94695722318 AS "LogProba_2", 0.0 AS "Proba_3", -1.79769313486231e+308 AS "LogProba_3", 0 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Proba_2" AS "Proba_2", "DT_node_data_4"."LogProba_2" AS "LogProba_2", "DT_node_data_4"."Proba_3" AS "Proba_3", "DT_node_data_4"."LogProba_3" AS "LogProba_3", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"AdaBoost_Estim_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0" AS "Proba_4_0", "DT_Output_4"."LogProba_0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2" AS "Proba_4_2", "DT_Output_4"."LogProba_2" AS "LogProba_4_2", CAST(NULL AS FLOAT) AS "Score_4_3", "DT_Output_4"."Proba_3" AS "Proba_4_3", "DT_Output_4"."LogProba_3" AS "LogProba_4_3", "DT_Output_4"."Decision" AS "Decision_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= 0.9214089512825012) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= 0.009055140428245068) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.08596746623516083) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.3054538667201996) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_10' AS feature, 0.9214089512825012 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.250013052049647 AS "Proba_0", -1.38624215428 AS "LogProba_0", 0.250013052049647 AS "Proba_1", -1.38624215428 AS "LogProba_1", 0.24999998519716957 AS "Proba_2", -1.38629442033 AS "LogProba_2", 0.24997391070353633 AS "Proba_3", -1.38639872375 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, 0.009055140428245068 AS threshold, 75 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36603053942597874 AS "Proba_0", -1.00503850801 AS "LogProba_0", 0.3665692395678903 AS "Proba_1", -1.00356785444 AS "LogProba_1", 0.0025610152562226523 AS "Proba_2", -5.96735151465 AS "LogProba_2", 0.26483920574990827 AS "Proba_3", -1.32863240791 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.08596746623516083 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.02043137693168307 AS "Proba_0", -3.89068347489 AS "LogProba_0", 0.6161724482041724 AS "Proba_1", -0.484228406243 AS "LogProba_1", 0.004030097240743528 AS "Proba_2", -5.5139647741 AS "LogProba_2", 0.35936607762340095 AS "Proba_3", -1.02341369522 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00634289928722735 AS "Proba_0", -5.06041931424 AS "LogProba_0", 0.9835478151120367 AS "Proba_1", -0.0165890250374 AS "LogProba_1", 0.00024457551955656376 AS "Proba_2", -8.3159864233 AS "LogProba_2", 0.009864710081179319 AS "Proba_3", -4.61879152857 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.044060973642861476 AS "Proba_0", -3.12218083974 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0.010379282289012786 AS "Proba_2", -4.56794354728 AS "LogProba_2", 0.9455597440681257 AS "Proba_3", -0.0559782050765 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 5 AS node_id, 'anoova_6' AS feature, -0.3054538667201996 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8693868008629663 AS "Proba_0", -0.139967142435 AS "LogProba_0", 0.003028607596859096 AS "Proba_1", -5.79965230407 AS "LogProba_1", 0.00042133525776471664 AS "Proba_2", -7.77208170446 AS "LogProba_2", 0.1271632562824098 AS "Proba_3", -2.06228353551 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9998498472357441 AS "Proba_0", -0.000150164038311 AS "LogProba_0", 0.0001353067246530607 AS "Proba_1", -8.90796632223 AS "LogProba_1", 7.644110768026435e-06 AS "Proba_2", -11.7815750408 AS "LogProba_2", 7.201928834802788e-06 AS "Proba_3", -11.8411616741 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.623186317720073e-07 AS "Proba_0", -13.9636409922 AS "LogProba_0", 0.022309125446232612 AS "Proba_1", -3.80275947139 AS "LogProba_1", 0.0031781102687631225 AS "Proba_2", -5.75146851394 AS "LogProba_2", 0.9745119019663725 AS "Proba_3", -0.0258185467008 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.005393365657292333 AS "Proba_0", -5.22258566272 AS "LogProba_0", 0.004257531200315575 AS "Proba_1", -5.45906581714 AS "LogProba_1", 0.771718258855886 AS "Proba_2", -0.259135745236 AS "LogProba_2", 0.2186308442865062 AS "Proba_3", -1.52037061399 AS "LogProba_3", 2 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Proba_2" AS "Proba_2", "DT_node_data_5"."LogProba_2" AS "LogProba_2", "DT_node_data_5"."Proba_3" AS "Proba_3", "DT_node_data_5"."LogProba_3" AS "LogProba_3", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"AdaBoost_Estim_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0" AS "Proba_5_0", "DT_Output_5"."LogProba_0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2" AS "Proba_5_2", "DT_Output_5"."LogProba_2" AS "LogProba_5_2", CAST(NULL AS FLOAT) AS "Score_5_3", "DT_Output_5"."Proba_3" AS "Proba_5_3", "DT_Output_5"."LogProba_3" AS "LogProba_5_3", "DT_Output_5"."Decision" AS "Decision_5" 
FROM "DT_Output_5"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Score_0_0" AS "Score_0_0", "AdaBoost_Estim_0"."Proba_0_0" AS "Proba_0_0", "AdaBoost_Estim_0"."LogProba_0_0" AS "LogProba_0_0", "AdaBoost_Estim_0"."Score_0_1" AS "Score_0_1", "AdaBoost_Estim_0"."Proba_0_1" AS "Proba_0_1", "AdaBoost_Estim_0"."LogProba_0_1" AS "LogProba_0_1", "AdaBoost_Estim_0"."Score_0_2" AS "Score_0_2", "AdaBoost_Estim_0"."Proba_0_2" AS "Proba_0_2", "AdaBoost_Estim_0"."LogProba_0_2" AS "LogProba_0_2", "AdaBoost_Estim_0"."Score_0_3" AS "Score_0_3", "AdaBoost_Estim_0"."Proba_0_3" AS "Proba_0_3", "AdaBoost_Estim_0"."LogProba_0_3" AS "LogProba_0_3", "AdaBoost_Estim_0"."Decision_0" AS "Decision_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Score_1_0" AS "Score_1_0", "AdaBoost_Estim_1"."Proba_1_0" AS "Proba_1_0", "AdaBoost_Estim_1"."LogProba_1_0" AS "LogProba_1_0", "AdaBoost_Estim_1"."Score_1_1" AS "Score_1_1", "AdaBoost_Estim_1"."Proba_1_1" AS "Proba_1_1", "AdaBoost_Estim_1"."LogProba_1_1" AS "LogProba_1_1", "AdaBoost_Estim_1"."Score_1_2" AS "Score_1_2", "AdaBoost_Estim_1"."Proba_1_2" AS "Proba_1_2", "AdaBoost_Estim_1"."LogProba_1_2" AS "LogProba_1_2", "AdaBoost_Estim_1"."Score_1_3" AS "Score_1_3", "AdaBoost_Estim_1"."Proba_1_3" AS "Proba_1_3", "AdaBoost_Estim_1"."LogProba_1_3" AS "LogProba_1_3", "AdaBoost_Estim_1"."Decision_1" AS "Decision_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Score_2_0" AS "Score_2_0", "AdaBoost_Estim_2"."Proba_2_0" AS "Proba_2_0", "AdaBoost_Estim_2"."LogProba_2_0" AS "LogProba_2_0", "AdaBoost_Estim_2"."Score_2_1" AS "Score_2_1", "AdaBoost_Estim_2"."Proba_2_1" AS "Proba_2_1", "AdaBoost_Estim_2"."LogProba_2_1" AS "LogProba_2_1", "AdaBoost_Estim_2"."Score_2_2" AS "Score_2_2", "AdaBoost_Estim_2"."Proba_2_2" AS "Proba_2_2", "AdaBoost_Estim_2"."LogProba_2_2" AS "LogProba_2_2", "AdaBoost_Estim_2"."Score_2_3" AS "Score_2_3", "AdaBoost_Estim_2"."Proba_2_3" AS "Proba_2_3", "AdaBoost_Estim_2"."LogProba_2_3" AS "LogProba_2_3", "AdaBoost_Estim_2"."Decision_2" AS "Decision_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Score_3_0" AS "Score_3_0", "AdaBoost_Estim_3"."Proba_3_0" AS "Proba_3_0", "AdaBoost_Estim_3"."LogProba_3_0" AS "LogProba_3_0", "AdaBoost_Estim_3"."Score_3_1" AS "Score_3_1", "AdaBoost_Estim_3"."Proba_3_1" AS "Proba_3_1", "AdaBoost_Estim_3"."LogProba_3_1" AS "LogProba_3_1", "AdaBoost_Estim_3"."Score_3_2" AS "Score_3_2", "AdaBoost_Estim_3"."Proba_3_2" AS "Proba_3_2", "AdaBoost_Estim_3"."LogProba_3_2" AS "LogProba_3_2", "AdaBoost_Estim_3"."Score_3_3" AS "Score_3_3", "AdaBoost_Estim_3"."Proba_3_3" AS "Proba_3_3", "AdaBoost_Estim_3"."LogProba_3_3" AS "LogProba_3_3", "AdaBoost_Estim_3"."Decision_3" AS "Decision_3", "AdaBoost_Estim_4".join_key_4 AS join_key_4, "AdaBoost_Estim_4"."Score_4_0" AS "Score_4_0", "AdaBoost_Estim_4"."Proba_4_0" AS "Proba_4_0", "AdaBoost_Estim_4"."LogProba_4_0" AS "LogProba_4_0", "AdaBoost_Estim_4"."Score_4_1" AS "Score_4_1", "AdaBoost_Estim_4"."Proba_4_1" AS "Proba_4_1", "AdaBoost_Estim_4"."LogProba_4_1" AS "LogProba_4_1", "AdaBoost_Estim_4"."Score_4_2" AS "Score_4_2", "AdaBoost_Estim_4"."Proba_4_2" AS "Proba_4_2", "AdaBoost_Estim_4"."LogProba_4_2" AS "LogProba_4_2", "AdaBoost_Estim_4"."Score_4_3" AS "Score_4_3", "AdaBoost_Estim_4"."Proba_4_3" AS "Proba_4_3", "AdaBoost_Estim_4"."LogProba_4_3" AS "LogProba_4_3", "AdaBoost_Estim_4"."Decision_4" AS "Decision_4", "AdaBoost_Estim_5".join_key_5 AS join_key_5, "AdaBoost_Estim_5"."Score_5_0" AS "Score_5_0", "AdaBoost_Estim_5"."Proba_5_0" AS "Proba_5_0", "AdaBoost_Estim_5"."LogProba_5_0" AS "LogProba_5_0", "AdaBoost_Estim_5"."Score_5_1" AS "Score_5_1", "AdaBoost_Estim_5"."Proba_5_1" AS "Proba_5_1", "AdaBoost_Estim_5"."LogProba_5_1" AS "LogProba_5_1", "AdaBoost_Estim_5"."Score_5_2" AS "Score_5_2", "AdaBoost_Estim_5"."Proba_5_2" AS "Proba_5_2", "AdaBoost_Estim_5"."LogProba_5_2" AS "LogProba_5_2", "AdaBoost_Estim_5"."Score_5_3" AS "Score_5_3", "AdaBoost_Estim_5"."Proba_5_3" AS "Proba_5_3", "AdaBoost_Estim_5"."LogProba_5_3" AS "LogProba_5_3", "AdaBoost_Estim_5"."Decision_5" AS "Decision_5" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2 LEFT OUTER JOIN "AdaBoost_Estim_4" ON "AdaBoost_Estim_4".join_key_4 = "AdaBoost_Estim_3".join_key_3 LEFT OUTER JOIN "AdaBoost_Estim_5" ON "AdaBoost_Estim_5".join_key_5 = "AdaBoost_Estim_4".join_key_4), 
"AdaBoost_AVG_Scores_BN" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS "KEY", (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS "Score_0", 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END) / 4) AS "Proba_0", (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS "Score_1", 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END) / 4) AS "Proba_1", (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS "Score_2", 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END) / 4) AS "Proba_2", (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 + (3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END) / 4)) / 6.0 AS "Score_3", 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_0_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_0_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_0_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_1_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_1_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_1_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_2_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_2_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_2_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_3_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_3_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_3_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_4_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_4_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_4_3") ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END - (CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_0" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_0" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_0") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_1" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_1" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_1") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_2" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_2" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_2") ELSE -1.79769313486231e+308 END END + CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ("AdaBoost_Join_CTE"."Proba_5_3" IS NULL OR "AdaBoost_Join_CTE"."Proba_5_3" > 0.0) THEN ln("AdaBoost_Join_CTE"."Proba_5_3") ELSE -1.79769313486231e+308 END END) / 4) AS "Proba_3" 
FROM "AdaBoost_Join_CTE"), 
"AdaBoost_AVG_Scores" AS 
(SELECT "AdaBoost_AVG_Scores_BN"."KEY" AS "KEY", "AdaBoost_AVG_Scores_BN"."Score_0" AS "Score_0", exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3)) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "AdaBoost_AVG_Scores_BN"."Score_1" AS "Score_1", exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3)) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "AdaBoost_AVG_Scores_BN"."Score_2" AS "Score_2", exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3)) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", "AdaBoost_AVG_Scores_BN"."Score_3" AS "Score_3", exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3) / (exp(("AdaBoost_AVG_Scores_BN"."Proba_0" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_1" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_2" / 6.0) / 3) + exp(("AdaBoost_AVG_Scores_BN"."Proba_3" / 6.0) / 3)) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "AdaBoost_AVG_Scores_BN"), 
orig_cte AS 
(SELECT "AdaBoost_AVG_Scores"."KEY" AS "KEY", "AdaBoost_AVG_Scores"."Score_0" AS "Score_0", "AdaBoost_AVG_Scores"."Score_1" AS "Score_1", "AdaBoost_AVG_Scores"."Score_2" AS "Score_2", "AdaBoost_AVG_Scores"."Score_3" AS "Score_3", "AdaBoost_AVG_Scores"."Proba_0" AS "Proba_0", "AdaBoost_AVG_Scores"."Proba_1" AS "Proba_1", "AdaBoost_AVG_Scores"."Proba_2" AS "Proba_2", "AdaBoost_AVG_Scores"."Proba_3" AS "Proba_3", "AdaBoost_AVG_Scores"."LogProba_0" AS "LogProba_0", "AdaBoost_AVG_Scores"."LogProba_1" AS "LogProba_1", "AdaBoost_AVG_Scores"."LogProba_2" AS "LogProba_2", "AdaBoost_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "AdaBoost_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte