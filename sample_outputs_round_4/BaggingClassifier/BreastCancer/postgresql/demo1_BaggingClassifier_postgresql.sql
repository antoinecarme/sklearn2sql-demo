-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.1423499882221222) THEN CASE WHEN ("ADS"."Feature_13" <= 42.19000244140625) THEN CASE WHEN ("ADS"."Feature_20" <= 16.375) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_13" <= 25.020000457763672) THEN 7 ELSE CASE WHEN ("ADS"."Feature_21" <= 23.810001373291016) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_27' AS feature, 0.1423499882221222 AS threshold, 359 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36203866432337434 AS "Proba_0", -1.01600426534 AS "LogProba_0", 0.6379613356766256 AS "Proba_1", -0.449477599861 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 42.19000244140625 AS threshold, 242 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07552083333333333 AS "Proba_0", -2.5833467226 AS "LogProba_0", 0.9244791666666666 AS "Proba_1", -0.0785247631123 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_20' AS feature, 16.375 AS threshold, 221 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.025495750708215296 AS "Proba_0", -3.6692434796 AS "LogProba_0", 0.9745042492917847 AS "Proba_1", -0.0258263995599 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 203 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.009404388714733543 AS "Proba_0", -4.66657881412 AS "LogProba_0", 0.9905956112852664 AS "Proba_1", -0.00944888919793 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17647058823529413 AS "Proba_0", -1.73460105539 AS "LogProba_0", 0.8235294117647058 AS "Proba_1", -0.194156014441 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6451612903225806 AS "Proba_0", -0.438254930931 AS "LogProba_0", 0.3548387096774194 AS "Proba_1", -1.03609193169 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_13' AS feature, 25.020000457763672 AS threshold, 117 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9567567567567568 AS "Proba_0", -0.0442060925045 AS "LogProba_0", 0.043243243243243246 AS "Proba_1", -3.1409142834 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0", -0.405465108108 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_21' AS feature, 23.810001373291016 AS threshold, 102 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9939024390243902 AS "Proba_0", -0.00611622701744 AS "LogProba_0", 0.006097560975609756 AS "Proba_1", -5.09986642782 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9545454545454546 AS "Proba_0", -0.0465200156349 AS "LogProba_0", 0.045454545454545456 AS "Proba_1", -3.09104245336 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 87 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0" AS "Proba_0_0", "DT_Output"."LogProba_0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1" AS "Proba_0_1", "DT_Output"."LogProba_1" AS "LogProba_0_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 105.94999694824219) THEN CASE WHEN ("ADS"."Feature_7" <= 0.05177000164985657) THEN CASE WHEN ("ADS"."Feature_1" <= 21.55500030517578) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_21" <= 20.645000457763672) THEN 7 ELSE CASE WHEN ("ADS"."Feature_7" <= 0.048864997923374176) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 105.94999694824219 AS threshold, 362 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.39191564147627417 AS "Proba_0", -0.936708662666 AS "LogProba_0", 0.6080843585237259 AS "Proba_1", -0.497441659069 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 0.05177000164985657 AS threshold, 210 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.041791044776119404 AS "Proba_0", -3.17507320221 AS "LogProba_0", 0.9582089552238806 AS "Proba_1", -0.0426894086951 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 21.55500030517578 AS threshold, 194 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.01282051282051282 AS "Proba_0", -4.35670882669 AS "LogProba_0", 0.9871794871794872 AS "Proba_1", -0.0129034048359 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 160 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0784313725490196 AS "Proba_0", -2.5455312716 AS "LogProba_0", 0.9215686274509803 AS "Proba_1", -0.0816780310143 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.43478260869565216 AS "Proba_0", -0.832909122935 AS "LogProba_0", 0.5652173913043478 AS "Proba_1", -0.570544858468 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_21' AS feature, 20.645000457763672 AS threshold, 152 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8931623931623932 AS "Proba_0", -0.112986863393 AS "LogProba_0", 0.10683760683760683 AS "Proba_1", -2.23644529049 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36 AS "Proba_0", -1.02165124753 AS "LogProba_0", 0.64 AS "Proba_1", -0.446287102628 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, 0.048864997923374176 AS threshold, 136 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9569377990430622 AS "Proba_0", -0.0440168854168 AS "LogProba_0", 0.0430622009569378 AS "Proba_1", -3.14510967463 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.64 AS "Proba_0", -0.446287102628 AS "LogProba_0", 0.36 AS "Proba_1", -1.02165124753 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 119 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0" AS "Proba_1_0", "DT_Output_1"."LogProba_0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1" AS "Proba_1_1", "DT_Output_1"."LogProba_1" AS "LogProba_1_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 105.94999694824219) THEN CASE WHEN ("ADS"."Feature_27" <= 0.14149999618530273) THEN CASE WHEN ("ADS"."Feature_1" <= 21.575000762939453) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_22" <= 117.44999694824219) THEN CASE WHEN ("ADS"."Feature_21" <= 27.459999084472656) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 105.94999694824219 AS threshold, 372 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3866432337434095 AS "Proba_0", -0.950252887774 AS "LogProba_0", 0.6133567662565905 AS "Proba_1", -0.488808511924 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.14149999618530273 AS threshold, 222 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06303724928366762 AS "Proba_0", -2.76402946884 AS "LogProba_0", 0.9369627507163324 AS "Proba_1", -0.0651117513052 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 21.575000762939453 AS threshold, 207 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.015384615384615385 AS "Proba_0", -4.1743872699 AS "LogProba_0", 0.9846153846153847 AS "Proba_1", -0.015504186536 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09615384615384616 AS "Proba_0", -2.34180580615 AS "LogProba_0", 0.9038461538461539 AS "Proba_1", -0.101096116871 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7083333333333334 AS "Proba_0", -0.344840486292 AS "LogProba_0", 0.2916666666666667 AS "Proba_1", -1.23214368129 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_22' AS feature, 117.44999694824219 AS threshold, 150 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9 AS "Proba_0", -0.105360515658 AS "LogProba_0", 0.1 AS "Proba_1", -2.30258509299 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, 'Feature_21' AS feature, 27.459999084472656 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5769230769230769 AS "Proba_0", -0.550046336919 AS "LogProba_0", 0.4230769230769231 AS "Proba_1", -0.860201265223 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16 AS "Proba_0", -1.83258146375 AS "LogProba_0", 0.84 AS "Proba_1", -0.174353387145 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9629629629629629 AS "Proba_0", -0.0377403279828 AS "LogProba_0", 0.037037037037037035 AS "Proba_1", -3.295836866 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 114 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0" AS "Proba_2_0", "DT_Output_2"."LogProba_0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1" AS "Proba_2_1", "DT_Output_2"."LogProba_1" AS "LogProba_2_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 105.1500015258789) THEN CASE WHEN ("ADS"."Feature_27" <= 0.12860000133514404) THEN CASE WHEN ("ADS"."Feature_1" <= 21.575000762939453) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.04636000096797943) THEN 7 ELSE CASE WHEN ("ADS"."Feature_21" <= 23.93000030517578) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 105.1500015258789 AS threshold, 372 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.351493848857645 AS "Proba_0", -1.04556306758 AS "LogProba_0", 0.648506151142355 AS "Proba_1", -0.433083790086 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.12860000133514404 AS threshold, 231 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.028328611898016998 AS "Proba_0", -3.56388296394 AS "LogProba_0", 0.9716713881019831 AS "Proba_1", -0.0287376097674 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 21.575000762939453 AS threshold, 216 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.012048192771084338 AS "Proba_0", -4.4188406078 AS "LogProba_0", 0.9879518072289156 AS "Proba_1", -0.0121213605323 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 184 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0035087719298245615 AS "Proba_0", -5.65248918027 AS "LogProba_0", 0.9964912280701754 AS "Proba_1", -0.00351494210744 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06382978723404255 AS "Proba_0", -2.75153531304 AS "LogProba_0", 0.9361702127659575 AS "Proba_1", -0.0659579677918 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0", -1.2527629685 AS "LogProba_0", 0.7142857142857143 AS "Proba_1", -0.336472236621 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_7' AS feature, 0.04636000096797943 AS threshold, 141 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8796296296296297 AS "Proba_0", -0.128254335524 AS "LogProba_0", 0.12037037037037036 AS "Proba_1", -2.11718186966 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.375 AS "Proba_0", -0.980829253012 AS "LogProba_0", 0.625 AS "Proba_1", -0.470003629246 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_21' AS feature, 23.93000030517578 AS threshold, 120 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.967391304347826 AS "Proba_0", -0.0331522073169 AS "LogProba_0", 0.03260869565217391 AS "Proba_1", -3.42317628838 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.76 AS "Proba_0", -0.274436845702 AS "LogProba_0", 0.24 AS "Proba_1", -1.42711635564 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0" AS "Proba_3_0", "DT_Output_3"."LogProba_0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1" AS "Proba_3_1", "DT_Output_3"."LogProba_1" AS "LogProba_3_1" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.051315002143383026) THEN CASE WHEN ("ADS"."Feature_20" <= 16.71500015258789) THEN CASE WHEN ("ADS"."Feature_13" <= 31.200000762939453) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.2631000280380249) THEN 7 ELSE CASE WHEN ("ADS"."Feature_27" <= 0.1516999900341034) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.051315002143383026 AS threshold, 375 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3954305799648506 AS "Proba_0", -0.927780031922 AS "LogProba_0", 0.6045694200351494 AS "Proba_1", -0.503238776753 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_20' AS feature, 16.71500015258789 AS threshold, 235 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.054441260744985676 AS "Proba_0", -2.91063294304 AS "LogProba_0", 0.9455587392550143 AS "Proba_1", -0.0559792677419 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 31.200000762939453 AS threshold, 220 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.018292682926829267 AS "Proba_0", -4.00125413916 AS "LogProba_0", 0.9817073170731707 AS "Proba_1", -0.0184620628397 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 205 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.006535947712418301 AS "Proba_0", -5.03043792139 AS "LogProba_0", 0.9934640522875817 AS "Proba_1", -0.00655740054616 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18181818181818182 AS "Proba_0", -1.70474809224 AS "LogProba_0", 0.8181818181818182 AS "Proba_1", -0.200670695462 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6190476190476191 AS "Proba_0", -0.479573080262 AS "LogProba_0", 0.38095238095238093 AS "Proba_1", -0.965080896044 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_26' AS feature, 0.2631000280380249 AS threshold, 140 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9363636363636364 AS "Proba_0", -0.0657513775628 AS "LogProba_0", 0.06363636363636363 AS "Proba_1", -2.75457021674 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4090909090909091 AS "Proba_0", -0.893817876022 AS "LogProba_0", 0.5909090909090909 AS "Proba_1", -0.526093095897 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_27' AS feature, 0.1516999900341034 AS threshold, 125 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9949494949494949 AS "Proba_0", -0.00506330195655 AS "LogProba_0", 0.005050505050505051 AS "Proba_1", -5.28826703069 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9473684210526315 AS "Proba_0", -0.0540672212703 AS "LogProba_0", 0.05263157894736842 AS "Proba_1", -2.94443897917 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0" AS "Proba_4_0", "DT_Output_4"."LogProba_0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1" AS "Proba_4_1", "DT_Output_4"."LogProba_1" AS "LogProba_4_1" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= 0.051419999450445175) THEN CASE WHEN ("ADS"."Feature_3" <= 671.75) THEN CASE WHEN ("ADS"."Feature_12" <= 3.1675000190734863) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_21" <= 20.625) THEN 7 ELSE CASE WHEN ("ADS"."Feature_23" <= 793.7999877929688) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.051419999450445175 AS threshold, 352 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.37785588752196836 AS "Proba_0", -0.973242405999 AS "LogProba_0", 0.6221441124780316 AS "Proba_1", -0.474583520993 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 671.75 AS threshold, 216 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.045845272206303724 AS "Proba_0", -3.08248319996 AS "LogProba_0", 0.9541547277936963 AS "Proba_1", -0.046929432222 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 3.1675000190734863 AS threshold, 201 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.012461059190031152 AS "Proba_0", -4.38514676201 AS "LogProba_0", 0.9875389408099688 AS "Proba_1", -0.0125393492527 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 186 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.003389830508474576 AS "Proba_0", -5.68697535634 AS "LogProba_0", 0.9966101694915255 AS "Proba_1", -0.00339558900114 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11538461538461539 AS "Proba_0", -2.15948424935 AS "LogProba_0", 0.8846153846153846 AS "Proba_1", -0.122602322092 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.42857142857142855 AS "Proba_0", -0.847297860387 AS "LogProba_0", 0.5714285714285714 AS "Proba_1", -0.559615787935 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_21' AS feature, 20.625 AS threshold, 136 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9045454545454545 AS "Proba_0", -0.100322721628 AS "LogProba_0", 0.09545454545454546 AS "Proba_1", -2.34910510863 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23809523809523808 AS "Proba_0", -1.43508452529 AS "LogProba_0", 0.7619047619047619 AS "Proba_1", -0.271933715484 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_23' AS feature, 793.7999877929688 AS threshold, 120 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9748743718592965 AS "Proba_0", -0.0254466656612 AS "LogProba_0", 0.02512562814070352 AS "Proba_1", -3.68386691229 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7916666666666666 AS "Proba_0", -0.233614851182 AS "LogProba_0", 0.20833333333333334 AS "Proba_1", -1.56861591791 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 105 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0" AS "Proba_5_0", "DT_Output_5"."LogProba_0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1" AS "Proba_5_1", "DT_Output_5"."LogProba_1" AS "LogProba_5_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 113.75) THEN CASE WHEN ("ADS"."Feature_27" <= 0.15129999816417694) THEN CASE WHEN ("ADS"."Feature_13" <= 34.404998779296875) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_27" <= 0.12219999730587006) THEN 7 ELSE 8 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 113.75 AS threshold, 359 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.35676625659050965 AS "Proba_0", -1.03067445508 AS "LogProba_0", 0.6432337434094904 AS "Proba_1", -0.441247100725 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.15129999816417694 AS threshold, 240 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07908163265306123 AS "Proba_0", -2.53727463531 AS "LogProba_0", 0.9209183673469388 AS "Proba_1", -0.0823838814576 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 34.404998779296875 AS threshold, 224 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.032520325203252036 AS "Proba_0", -3.42588999425 AS "LogProba_0", 0.967479674796748 AS "Proba_1", -0.0330608622609 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 204 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.011730205278592375 AS "Proba_0", -4.44558811616 AS "LogProba_0", 0.9882697947214076 AS "Proba_1", -0.0117995469312 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0", -1.2527629685 AS "LogProba_0", 0.7142857142857143 AS "Proba_1", -0.336472236621 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8260869565217391 AS "Proba_0", -0.191055236763 AS "LogProba_0", 0.17391304347826086 AS "Proba_1", -1.74919985481 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_27' AS feature, 0.12219999730587006 AS threshold, 119 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9717514124293786 AS "Proba_0", -0.0286552557604 AS "LogProba_0", 0.02824858757062147 AS "Proba_1", -3.56671182014 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8076923076923077 AS "Proba_0", -0.213574100298 AS "LogProba_0", 0.19230769230769232 AS "Proba_1", -1.64865862559 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0" AS "Proba_0", "DT_node_data_6"."LogProba_0" AS "LogProba_0", "DT_node_data_6"."Proba_1" AS "Proba_1", "DT_node_data_6"."LogProba_1" AS "LogProba_1", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0" AS "Proba_6_0", "DT_Output_6"."LogProba_0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1" AS "Proba_6_1", "DT_Output_6"."LogProba_1" AS "LogProba_6_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_23" <= 874.8499755859375) THEN CASE WHEN ("ADS"."Feature_27" <= 0.1359499990940094) THEN CASE WHEN ("ADS"."Feature_19" <= 0.0014895000495016575) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 25.670000076293945) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.07784999907016754) THEN 9 ELSE 10 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_23' AS feature, 874.8499755859375 AS threshold, 367 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.37082601054481545 AS "Proba_0", -0.99202230065 AS "LogProba_0", 0.6291739894551845 AS "Proba_1", -0.463347447726 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.1359499990940094 AS threshold, 245 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0859375 AS "Proba_0", -2.45413499112 AS "LogProba_0", 0.9140625 AS "Proba_1", -0.0898563291219 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_19' AS feature, 0.0014895000495016575 AS threshold, 213 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.017804154302670624 AS "Proba_0", -4.02832346112 AS "LogProba_0", 0.9821958456973294 AS "Proba_1", -0.0179645549753 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17391304347826086 AS "Proba_0", -1.74919985481 AS "LogProba_0", 0.8260869565217391 AS "Proba_1", -0.191055236763 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.006369426751592357 AS "Proba_0", -5.05624580535 AS "LogProba_0", 0.9936305732484076 AS "Proba_1", -0.00638979809877 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_21' AS feature, 25.670000076293945 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.574468085106383 AS "Proba_0", -0.554310735706 AS "LogProba_0", 0.425531914893617 AS "Proba_1", -0.854415328156 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2727272727272727 AS "Proba_0", -1.29928298413 AS "LogProba_0", 0.7272727272727273 AS "Proba_1", -0.318453731119 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.84 AS "Proba_0", -0.174353387145 AS "LogProba_0", 0.16 AS "Proba_1", -1.83258146375 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, 0.07784999907016754 AS threshold, 122 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9621621621621622 AS "Proba_0", -0.0385722747862 AS "LogProba_0", 0.03783783783783784 AS "Proba_1", -3.27444567602 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.631578947368421 AS "Proba_0", -0.459532329378 AS "LogProba_0", 0.3684210526315789 AS "Proba_1", -0.998528830111 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 107 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0" AS "Proba_0", "DT_node_data_7"."LogProba_0" AS "LogProba_0", "DT_node_data_7"."Proba_1" AS "Proba_1", "DT_node_data_7"."LogProba_1" AS "LogProba_1", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0" AS "Proba_7_0", "DT_Output_7"."LogProba_0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1" AS "Proba_7_1", "DT_Output_7"."LogProba_1" AS "LogProba_7_1" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_22" <= 110.5) THEN CASE WHEN ("ADS"."Feature_27" <= 0.14559999108314514) THEN CASE WHEN ("ADS"."Feature_20" <= 15.780000686645508) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_1" <= 17.260000228881836) THEN 7 ELSE CASE WHEN ("ADS"."Feature_22" <= 117.25) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 110.5 AS threshold, 362 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3884007029876977 AS "Proba_0", -0.945717732609 AS "LogProba_0", 0.6115992970123023 AS "Proba_1", -0.491677954352 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.14559999108314514 AS threshold, 235 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07608695652173914 AS "Proba_0", -2.57587842799 AS "LogProba_0", 0.9239130434782609 AS "Proba_1", -0.0791373205587 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_20' AS feature, 15.780000686645508 AS threshold, 219 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.023323615160349854 AS "Proba_0", -3.75828890549 AS "LogProba_0", 0.9766763848396501 AS "Proba_1", -0.0235999153409 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 198 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.006349206349206349 AS "Proba_0", -5.05942545827 AS "LogProba_0", 0.9936507936507937 AS "Proba_1", -0.00636944828548 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21428571428571427 AS "Proba_0", -1.54044504095 AS "LogProba_0", 0.7857142857142857 AS "Proba_1", -0.241162056817 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8 AS "Proba_0", -0.223143551314 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_1' AS feature, 17.260000228881836 AS threshold, 127 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9601990049751243 AS "Proba_0", -0.0406147191542 AS "LogProba_0", 0.03980099502487562 AS "Proba_1", -3.22386336638 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.65 AS "Proba_0", -0.430782916092 AS "LogProba_0", 0.35 AS "Proba_1", -1.0498221245 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_22' AS feature, 117.25 AS threshold, 112 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.994475138121547 AS "Proba_0", -0.00554018037562 AS "LogProba_0", 0.0055248618784530384 AS "Proba_1", -5.19849703127 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9444444444444444 AS "Proba_0", -0.0571584138399 AS "LogProba_0", 0.05555555555555555 AS "Proba_1", -2.8903717579 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 97 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0" AS "Proba_0", "DT_node_data_8"."LogProba_0" AS "LogProba_0", "DT_node_data_8"."Proba_1" AS "Proba_1", "DT_node_data_8"."LogProba_1" AS "LogProba_1", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0" AS "Proba_8_0", "DT_Output_8"."LogProba_0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1" AS "Proba_8_1", "DT_Output_8"."LogProba_1" AS "LogProba_8_1" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14169999957084656) THEN CASE WHEN ("ADS"."Feature_23" <= 929.800048828125) THEN CASE WHEN ("ADS"."Feature_23" <= 754.0999755859375) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_20" <= 16.170000076293945) THEN 7 ELSE CASE WHEN ("ADS"."Feature_27" <= 0.15289999544620514) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_27' AS feature, 0.14169999957084656 AS threshold, 373 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3655536028119508 AS "Proba_0", -1.00634235443 AS "LogProba_0", 0.6344463971880492 AS "Proba_1", -0.455002475793 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_23' AS feature, 929.800048828125 AS threshold, 245 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08115183246073299 AS "Proba_0", -2.51143340412 AS "LogProba_0", 0.918848167539267 AS "Proba_1", -0.0846343851407 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_23' AS feature, 754.0999755859375 AS threshold, 227 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.022598870056497175 AS "Proba_0", -3.78985537145 AS "LogProba_0", 0.9774011299435028 AS "Proba_1", -0.0228581380761 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 199 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.003215434083601286 AS "Proba_0", -5.73979291218 AS "LogProba_0", 0.9967845659163987 AS "Proba_1", -0.00322061470004 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16279069767441862 AS "Proba_0", -1.81528996664 AS "LogProba_0", 0.8372093023255814 AS "Proba_1", -0.177681177237 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8214285714285714 AS "Proba_0", -0.196710294246 AS "LogProba_0", 0.17857142857142858 AS "Proba_1", -1.72276659774 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_20' AS feature, 16.170000076293945 AS threshold, 128 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.946524064171123 AS "Proba_0", -0.0549588842808 AS "LogProba_0", 0.053475935828877004 AS "Proba_1", -2.92852352386 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6538461538461539 AS "Proba_0", -0.424883193965 AS "LogProba_0", 0.34615384615384615 AS "Proba_1", -1.06087196069 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_27' AS feature, 0.15289999544620514 AS threshold, 109 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9937888198757764 AS "Proba_0", -0.00623054975064 AS "LogProba_0", 0.006211180124223602 AS "Proba_1", -5.08140436498 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9523809523809523 AS "Proba_0", -0.0487901641694 AS "LogProba_0", 0.047619047619047616 AS "Proba_1", -3.04452243772 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0" AS "Proba_0", "DT_node_data_9"."LogProba_0" AS "LogProba_0", "DT_node_data_9"."Proba_1" AS "Proba_1", "DT_node_data_9"."LogProba_1" AS "LogProba_1", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0" AS "Proba_9_0", "DT_Output_9"."LogProba_0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1" AS "Proba_9_1", "DT_Output_9"."LogProba_1" AS "LogProba_9_1" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte