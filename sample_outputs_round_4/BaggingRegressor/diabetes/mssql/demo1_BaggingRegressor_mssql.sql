-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_8] <= -0.005612778477370739) THEN CASE WHEN ([ADS].[Feature_2] <= 0.0061888848431408405) THEN CASE WHEN ([ADS].[Feature_0] <= 0.03444336727261543) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.014811381697654724) THEN CASE WHEN ([ADS].[Feature_2] <= -0.02884000726044178) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.06870198249816895) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.005612778477370739 AS threshold, 277 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.66515837104072 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 127 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 103.57788944723617 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.03444336727261543 AS threshold, 102 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 90.23926380368098 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 85.33576642335767 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.07692307692308 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 163.97222222222223 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 0.014811381697654724 AS threshold, 150 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 196.50205761316872 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'Feature_2' AS feature, -0.02884000726044178 AS threshold, 73 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 163.1150442477876 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 129.94444444444446 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 178.62337662337663 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_2' AS feature, 0.06870198249816895 AS threshold, 77 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 225.52307692307693 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 208.77173913043478 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 266.07894736842104 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_8] <= -0.00016888421669136733) THEN CASE WHEN ([ADS].[Feature_2] <= 0.0061888848431408405) THEN CASE WHEN ([ADS].[Feature_6] <= 0.057844195514917374) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.04229559004306793) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.015350287780165672) THEN CASE WHEN ([ADS].[Feature_9] <= 0.029988106340169907) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_9] <= 0.005135462619364262) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00016888421669136733 AS threshold, 279 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.28054298642533 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 147 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 110.57575757575758 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.057844195514917374 AS threshold, 115 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 99.42696629213484 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 86 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 108.06349206349206 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 78.5 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.04229559004306793 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.0188679245283 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 166.25 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 132.93103448275863 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.015350287780165672 AS threshold, 132 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 189.55924170616115 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.029988106340169907 AS threshold, 72 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 161.43697478991598 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 146.49425287356323 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 202.0625 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, 0.005135462619364262 AS threshold, 60 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 225.93478260869566 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 168.63636363636363 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 243.94285714285715 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= -0.0013557998463511467) THEN CASE WHEN ([ADS].[Feature_3] <= 0.04482482746243477) THEN CASE WHEN ([ADS].[Feature_8] <= -0.02307836338877678) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_9] <= 0.025845997035503387) THEN CASE WHEN ([ADS].[Feature_3] <= -0.0005063045537099242) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.05576823651790619) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.0013557998463511467 AS threshold, 274 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 157.70814479638008 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.04482482746243477 AS threshold, 152 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 119.52868852459017 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.02307836338877678 AS threshold, 136 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 111.11415525114155 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 71 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 89.1588785046729 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 132.08928571428572 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 193.24 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'Feature_9' AS feature, 0.025845997035503387 AS threshold, 122 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 204.75757575757575 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, -0.0005063045537099242 AS threshold, 79 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 179.352 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.07692307692307 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 201.63013698630138 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_2' AS feature, 0.05576823651790619 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 248.26027397260273 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 226.7941176470588 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 266.97435897435895 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 0.0061888848431408405) THEN CASE WHEN ([ADS].[Feature_8] <= 0.00661808904260397) THEN CASE WHEN ([ADS].[Feature_0] <= 0.03262709826231003) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_2] <= -0.02237313613295555) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.00293656624853611) THEN CASE WHEN ([ADS].[Feature_0] <= -0.0036982859019190073) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.05361261963844299) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 286 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 156.83031674208144 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.00661808904260397 AS threshold, 172 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.91698113207548 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.03262709826231003 AS threshold, 118 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 97.8076923076923 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 89.82638888888889 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 128.05263157894737 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, -0.02237313613295555 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 171.59036144578315 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 134.03703703703704 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 189.69642857142858 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.00293656624853611 AS threshold, 114 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 210.59887005649716 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, -0.0036982859019190073 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 167.43939393939394 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 197.86206896551724 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 143.59459459459458 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.05361261963844299 AS threshold, 74 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 236.26126126126127 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 218.078125 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 261.02127659574467 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 0.007805602625012398) THEN CASE WHEN ([ADS].[Feature_8] <= -0.00422451039776206) THEN CASE WHEN ([ADS].[Feature_2] <= -0.05309078097343445) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_6] <= -0.034196749329566956) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.061465367674827576) THEN CASE WHEN ([ADS].[Feature_2] <= 0.06115730106830597) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.007805602625012398 AS threshold, 280 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.69230769230768 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, -0.00422451039776206 AS threshold, 173 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.02264150943397 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.05309078097343445 AS threshold, 110 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 97.36094674556213 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 80.4047619047619 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 102.96850393700787 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_6' AS feature, -0.034196749329566956 AS threshold, 63 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.875 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 181.5 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 129.3 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.061465367674827576 AS threshold, 107 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 197.6045197740113 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 0.06115730106830597 AS threshold, 79 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 179.13138686131387 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 170.7478260869565 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 222.95454545454547 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 260.875 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_8] <= -0.009431487880647182) THEN CASE WHEN ([ADS].[Feature_2] <= 0.00726669654250145) THEN CASE WHEN ([ADS].[Feature_0] <= 0.0217294842004776) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_2] <= -0.0013557998463511467) THEN CASE WHEN ([ADS].[Feature_8] <= 0.00661808904260397) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.02359379082918167) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.009431487880647182 AS threshold, 281 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.80769230769232 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.00726669654250145 AS threshold, 129 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 104.96713615023474 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.0217294842004776 AS threshold, 103 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 91.46470588235294 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 72 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 82.41176470588235 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 112.58823529411765 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 158.34883720930233 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, -0.0013557998463511467 AS threshold, 152 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 197.3056768558952 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'Feature_8' AS feature, 0.00661808904260397 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 155.04 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 119.21739130434783 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 170.8846153846154 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_3' AS feature, 0.02359379082918167 AS threshold, 95 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 217.8896103896104 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 192.77215189873417 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 244.34666666666666 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 0.009422320872545242) THEN CASE WHEN ([ADS].[Feature_8] <= 0.014069339260458946) THEN CASE WHEN ([ADS].[Feature_0] <= 0.02899456024169922) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_4] <= 0.04177355766296387) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= -0.003761786036193371) THEN 9 ELSE CASE WHEN ([ADS].[Feature_3] <= 0.05113675445318222) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.009422320872545242 AS threshold, 283 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.42760180995475 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.014069339260458946 AS threshold, 174 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 115.42592592592592 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.02899456024169922 AS threshold, 128 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 98.46376811594203 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 89.46710526315789 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 123.32727272727273 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.04177355766296387 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 171.15873015873015 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 199.68571428571428 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 135.5 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, -0.003761786036193371 AS threshold, 109 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 215.65116279069767 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.725 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_3' AS feature, 0.05113675445318222 AS threshold, 82 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 234.11363636363637 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 213.07894736842104 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 262.6607142857143 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, [DT_Output_6].[Estimator] AS [Estimator_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 0.0061888848431408405) THEN CASE WHEN ([ADS].[Feature_8] <= 0.017034215852618217) THEN CASE WHEN ([ADS].[Feature_8] <= -0.04327875375747681) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_3] <= -0.01944209262728691) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_8] <= -0.030139416456222534) THEN 9 ELSE CASE WHEN ([ADS].[Feature_3] <= 0.02359379082918167) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 290 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 155.90271493212668 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.017034215852618217 AS threshold, 174 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.74531835205993 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.04327875375747681 AS threshold, 133 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 105.03980099502488 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 80.7 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 94 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 115.39716312056737 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, -0.01944209262728691 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 168.57575757575756 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 137.76923076923077 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 188.6 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, -0.030139416456222534 AS threshold, 116 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 209.54285714285714 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 127.78260869565217 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_3' AS feature, 0.02359379082918167 AS threshold, 101 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 221.91447368421052 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 189.75 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 254.07894736842104 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, [DT_Output_7].[Estimator] AS [Estimator_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 0.018044818192720413) THEN CASE WHEN ([ADS].[Feature_8] <= -0.010411696508526802) THEN CASE WHEN ([ADS].[Feature_6] <= -0.01578856259584427) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_8] <= 0.016671042889356613) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.02359379082918167) THEN CASE WHEN ([ADS].[Feature_9] <= -0.007290857844054699) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.047684650868177414) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.018044818192720413 AS threshold, 282 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 149.65384615384616 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, -0.010411696508526802 AS threshold, 194 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 123.1092715231788 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, -0.01578856259584427 AS threshold, 105 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 98.16071428571429 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 126.29629629629629 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 88 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 92.77304964539007 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, 0.016671042889356613 AS threshold, 89 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.38805970149255 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 136.640625 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 170.61428571428573 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.02359379082918167 AS threshold, 88 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 206.9142857142857 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, -0.007290857844054699 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 169.5211267605634 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 113.78260869565217 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 196.22916666666666 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.047684650868177414 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 245.3913043478261 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 215.55172413793105 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 267.025 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, [DT_Output_8].[Estimator] AS [Estimator_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= 0.00996122695505619) THEN CASE WHEN ([ADS].[Feature_8] <= 0.02200143411755562) THEN CASE WHEN ([ADS].[Feature_6] <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_9] <= 0.013419676572084427) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_3] <= 6.750726606696844e-05) THEN CASE WHEN ([ADS].[Feature_9] <= 0.021703891456127167) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.06654636561870575) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.00996122695505619 AS threshold, 276 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 154.19683257918552 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.02200143411755562 AS threshold, 173 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.7572463768116 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.021027816459536552 AS threshold, 139 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 104.42727272727272 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 119.8740157480315 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 83.33333333333333 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 0.013419676572084427 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 184.91071428571428 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 161.6451612903226 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 213.76 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 6.750726606696844e-05 AS threshold, 103 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 209.79518072289156 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.021703891456127167 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 173.828125 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 146.8421052631579 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 213.26923076923077 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.06654636561870575 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 232.36274509803923 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 219.68493150684932 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 264.2758620689655 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, [DT_Output_9].[Estimator] AS [Estimator_9] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Estimator_0] AS [Estimator_0], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Estimator_1] AS [Estimator_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Estimator_2] AS [Estimator_2], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Estimator_3] AS [Estimator_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Estimator_4] AS [Estimator_4], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Estimator_5] AS [Estimator_5], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Estimator_6] AS [Estimator_6], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Estimator_7] AS [Estimator_7], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Estimator_8] AS [Estimator_8], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Estimator_9] AS [Estimator_9] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Estimator_0] / 10 + [RF_Join_CTE].[Estimator_1] / 10 + [RF_Join_CTE].[Estimator_2] / 10 + [RF_Join_CTE].[Estimator_3] / 10 + [RF_Join_CTE].[Estimator_4] / 10 + [RF_Join_CTE].[Estimator_5] / 10 + [RF_Join_CTE].[Estimator_6] / 10 + [RF_Join_CTE].[Estimator_7] / 10 + [RF_Join_CTE].[Estimator_8] / 10 + [RF_Join_CTE].[Estimator_9] / 10 AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]