-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.101371325662 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.0575360479519 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.176484526733 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN -0.0817003314794 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.176144258179 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.105794500258 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.00946763907472 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.552018263371 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -0.092521235581 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.108273418307 ELSE [ADS].[Feature_9] END AS impute_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN 0.0989195373604 ELSE [ADS].[Feature_10] END AS impute_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN -0.047408545774 ELSE [ADS].[Feature_11] END AS impute_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN -0.0420729800558 ELSE [ADS].[Feature_12] END AS impute_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.080903894668 ELSE [ADS].[Feature_13] END AS impute_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.0192728836896 ELSE [ADS].[Feature_14] END AS impute_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN 0.0808755622644 ELSE [ADS].[Feature_15] END AS impute_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN -0.0856827263027 ELSE [ADS].[Feature_16] END AS impute_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN 0.00448544175817 ELSE [ADS].[Feature_17] END AS impute_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN 0.181367262107 ELSE [ADS].[Feature_18] END AS impute_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN -0.0531617705952 ELSE [ADS].[Feature_19] END AS impute_21 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - -0.101371325662 AS impute_2, [ADS_imp_1_OUT].impute_3 - 0.0575360479519 AS impute_3, [ADS_imp_1_OUT].impute_4 - 0.176484526733 AS impute_4, [ADS_imp_1_OUT].impute_5 - -0.0817003314794 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.176144258179 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.105794500258 AS impute_7, [ADS_imp_1_OUT].impute_8 - -0.00946763907472 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.552018263371 AS impute_9, [ADS_imp_1_OUT].impute_10 - -0.092521235581 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.108273418307 AS impute_11, [ADS_imp_1_OUT].impute_12 - 0.0989195373604 AS impute_12, [ADS_imp_1_OUT].impute_13 - -0.047408545774 AS impute_13, [ADS_imp_1_OUT].impute_14 - -0.0420729800558 AS impute_14, [ADS_imp_1_OUT].impute_15 - -0.080903894668 AS impute_15, [ADS_imp_1_OUT].impute_16 - 0.0192728836896 AS impute_16, [ADS_imp_1_OUT].impute_17 - 0.0808755622644 AS impute_17, [ADS_imp_1_OUT].impute_18 - -0.0856827263027 AS impute_18, [ADS_imp_1_OUT].impute_19 - 0.00448544175817 AS impute_19, [ADS_imp_1_OUT].impute_20 - 0.181367262107 AS impute_20, [ADS_imp_1_OUT].impute_21 - -0.0531617705952 AS impute_21 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.0456006180585 + [CenteredDataForPCA].impute_3 * 0.0248907847902 + [CenteredDataForPCA].impute_4 * -0.199134100133 + [CenteredDataForPCA].impute_5 * 0.208537491978 + [CenteredDataForPCA].impute_6 * -0.0700422787607 + [CenteredDataForPCA].impute_7 * -0.0504436571589 + [CenteredDataForPCA].impute_8 * -0.0439351614839 + [CenteredDataForPCA].impute_9 * 0.348315171385 + [CenteredDataForPCA].impute_10 * -0.0049867823144 + [CenteredDataForPCA].impute_11 * 0.779168921718 + [CenteredDataForPCA].impute_12 * -0.0617538314951 + [CenteredDataForPCA].impute_13 * -0.00063703810872 + [CenteredDataForPCA].impute_14 * -0.0112357268338 + [CenteredDataForPCA].impute_15 * 0.0646012946628 + [CenteredDataForPCA].impute_16 * 0.028887208926 + [CenteredDataForPCA].impute_17 * 0.0643658853596 + [CenteredDataForPCA].impute_18 * 0.0102980165832 + [CenteredDataForPCA].impute_19 * -0.0517133281665 + [CenteredDataForPCA].impute_20 * -0.399340755657 + [CenteredDataForPCA].impute_21 * -0.031323076688 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.0301931375718 + [CenteredDataForPCA].impute_3 * -0.0446805016004 + [CenteredDataForPCA].impute_4 * -0.506211811634 + [CenteredDataForPCA].impute_5 * -0.614635289163 + [CenteredDataForPCA].impute_6 * -0.0736555241985 + [CenteredDataForPCA].impute_7 * -0.0731228468786 + [CenteredDataForPCA].impute_8 * -0.0131384367378 + [CenteredDataForPCA].impute_9 * 0.0567639910842 + [CenteredDataForPCA].impute_10 * -0.0288254608638 + [CenteredDataForPCA].impute_11 * 0.227480001883 + [CenteredDataForPCA].impute_12 * 0.0974389822753 + [CenteredDataForPCA].impute_13 * -0.0796847509846 + [CenteredDataForPCA].impute_14 * 0.058467863769 + [CenteredDataForPCA].impute_15 * -0.138553400379 + [CenteredDataForPCA].impute_16 * 0.0635599412819 + [CenteredDataForPCA].impute_17 * -0.3335023186 + [CenteredDataForPCA].impute_18 * 0.0717194238876 + [CenteredDataForPCA].impute_19 * -0.0385395420985 + [CenteredDataForPCA].impute_20 * 0.36867231006 + [CenteredDataForPCA].impute_21 * -0.00697983423729 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.0729447374162 + [CenteredDataForPCA].impute_3 * 0.168716926395 + [CenteredDataForPCA].impute_4 * 0.566427483994 + [CenteredDataForPCA].impute_5 * -0.0214385132473 + [CenteredDataForPCA].impute_6 * 0.0943735896809 + [CenteredDataForPCA].impute_7 * 0.0428743620089 + [CenteredDataForPCA].impute_8 * 0.0048651362241 + [CenteredDataForPCA].impute_9 * 0.358529813274 + [CenteredDataForPCA].impute_10 * 0.0484721145941 + [CenteredDataForPCA].impute_11 * 0.123084131072 + [CenteredDataForPCA].impute_12 * -0.112041428956 + [CenteredDataForPCA].impute_13 * 0.188156247157 + [CenteredDataForPCA].impute_14 * 0.0778669100444 + [CenteredDataForPCA].impute_15 * -0.0387433350805 + [CenteredDataForPCA].impute_16 * 0.192512961009 + [CenteredDataForPCA].impute_17 * -0.596091078132 + [CenteredDataForPCA].impute_18 * -0.0397749868718 + [CenteredDataForPCA].impute_19 * 0.0981706321828 + [CenteredDataForPCA].impute_20 * 0.156273147688 + [CenteredDataForPCA].impute_21 * -0.0674969534199 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.0174188402941 + [CenteredDataForPCA].impute_3 * 0.364044867398 + [CenteredDataForPCA].impute_4 * 0.07065791271 + [CenteredDataForPCA].impute_5 * 0.0334723253995 + [CenteredDataForPCA].impute_6 * 0.00692885380498 + [CenteredDataForPCA].impute_7 * -0.226524192045 + [CenteredDataForPCA].impute_8 * -0.150861664623 + [CenteredDataForPCA].impute_9 * -0.150663884463 + [CenteredDataForPCA].impute_10 * 0.178461077166 + [CenteredDataForPCA].impute_11 * 0.0450191649134 + [CenteredDataForPCA].impute_12 * 0.115692056272 + [CenteredDataForPCA].impute_13 * -0.139519561987 + [CenteredDataForPCA].impute_14 * -0.259398821037 + [CenteredDataForPCA].impute_15 * 0.00574602307499 + [CenteredDataForPCA].impute_16 * -0.310860669788 + [CenteredDataForPCA].impute_17 * -0.255549570905 + [CenteredDataForPCA].impute_18 * -0.0374106580074 + [CenteredDataForPCA].impute_19 * -0.413083477467 + [CenteredDataForPCA].impute_20 * -0.0618605354369 + [CenteredDataForPCA].impute_21 * 0.540725925568 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.307690539873 + [CenteredDataForPCA].impute_3 * -0.020509665925 + [CenteredDataForPCA].impute_4 * -0.0497600125909 + [CenteredDataForPCA].impute_5 * -0.14426080764 + [CenteredDataForPCA].impute_6 * 0.151159903136 + [CenteredDataForPCA].impute_7 * -0.00202527122615 + [CenteredDataForPCA].impute_8 * -0.0805560089976 + [CenteredDataForPCA].impute_9 * 0.462680010958 + [CenteredDataForPCA].impute_10 * 0.247701224582 + [CenteredDataForPCA].impute_11 * -0.0483514746858 + [CenteredDataForPCA].impute_12 * 0.00987405580259 + [CenteredDataForPCA].impute_13 * 0.420013062863 + [CenteredDataForPCA].impute_14 * 0.139991831789 + [CenteredDataForPCA].impute_15 * -0.00426422366241 + [CenteredDataForPCA].impute_16 * -0.299113227596 + [CenteredDataForPCA].impute_17 * 0.393547679311 + [CenteredDataForPCA].impute_18 * -0.205020543092 + [CenteredDataForPCA].impute_19 * -0.0743130547158 + [CenteredDataForPCA].impute_20 * 0.22638295762 + [CenteredDataForPCA].impute_21 * 0.187700401818 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.132328132234 + [CenteredDataForPCA].impute_3 * -0.113286149104 + [CenteredDataForPCA].impute_4 * 0.0529220795647 + [CenteredDataForPCA].impute_5 * -0.00411272891848 + [CenteredDataForPCA].impute_6 * 0.0916772929488 + [CenteredDataForPCA].impute_7 * 0.0833977621208 + [CenteredDataForPCA].impute_8 * 0.0763702601095 + [CenteredDataForPCA].impute_9 * 0.133664537596 + [CenteredDataForPCA].impute_10 * 0.735545475457 + [CenteredDataForPCA].impute_11 * -0.012546554101 + [CenteredDataForPCA].impute_12 * 0.179718168073 + [CenteredDataForPCA].impute_13 * -0.388487005826 + [CenteredDataForPCA].impute_14 * -0.178086684166 + [CenteredDataForPCA].impute_15 * 0.097379107099 + [CenteredDataForPCA].impute_16 * 0.177782770937 + [CenteredDataForPCA].impute_17 * 0.0696748974098 + [CenteredDataForPCA].impute_18 * 0.287017813702 + [CenteredDataForPCA].impute_19 * -0.0593097283068 + [CenteredDataForPCA].impute_20 * 0.04520370623 + [CenteredDataForPCA].impute_21 * -0.194357587482 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.225295362099 + [CenteredDataForPCA].impute_3 * 0.169521905084 + [CenteredDataForPCA].impute_4 * -0.141162877599 + [CenteredDataForPCA].impute_5 * 0.00544038816597 + [CenteredDataForPCA].impute_6 * 0.561432106163 + [CenteredDataForPCA].impute_7 * 0.158741142609 + [CenteredDataForPCA].impute_8 * 0.279852210565 + [CenteredDataForPCA].impute_9 * -0.231532501935 + [CenteredDataForPCA].impute_10 * 0.130938561555 + [CenteredDataForPCA].impute_11 * 0.0412997526468 + [CenteredDataForPCA].impute_12 * -0.0889954962934 + [CenteredDataForPCA].impute_13 * 0.254233998205 + [CenteredDataForPCA].impute_14 * 0.295966715811 + [CenteredDataForPCA].impute_15 * 0.026281994676 + [CenteredDataForPCA].impute_16 * -0.0099031676081 + [CenteredDataForPCA].impute_17 * -0.0750861900581 + [CenteredDataForPCA].impute_18 * 0.0505801232637 + [CenteredDataForPCA].impute_19 * -0.431217064543 + [CenteredDataForPCA].impute_20 * -0.0924058681351 + [CenteredDataForPCA].impute_21 * -0.213879285437 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.384434738568 + [CenteredDataForPCA].impute_3 * -0.299488996972 + [CenteredDataForPCA].impute_4 * 0.116510229276 + [CenteredDataForPCA].impute_5 * -0.00552371827794 + [CenteredDataForPCA].impute_6 * 0.128538062396 + [CenteredDataForPCA].impute_7 * -0.459268835988 + [CenteredDataForPCA].impute_8 * 0.136610870694 + [CenteredDataForPCA].impute_9 * 0.16072705382 + [CenteredDataForPCA].impute_10 * -0.12879608123 + [CenteredDataForPCA].impute_11 * -0.0313624982268 + [CenteredDataForPCA].impute_12 * 0.369211660573 + [CenteredDataForPCA].impute_13 * 0.322047031329 + [CenteredDataForPCA].impute_14 * -0.39215538492 + [CenteredDataForPCA].impute_15 * 0.132914133026 + [CenteredDataForPCA].impute_16 * 0.0176673757578 + [CenteredDataForPCA].impute_17 * 0.0266725055956 + [CenteredDataForPCA].impute_18 * 0.154073992751 + [CenteredDataForPCA].impute_19 * -0.101888753666 + [CenteredDataForPCA].impute_20 * 0.0699256862232 + [CenteredDataForPCA].impute_21 * -0.08875049624 AS anoova_9, [CenteredDataForPCA].impute_2 * 0.621259118958 + [CenteredDataForPCA].impute_3 * 0.105741649502 + [CenteredDataForPCA].impute_4 * 0.00679717930648 + [CenteredDataForPCA].impute_5 * -0.00874374944899 + [CenteredDataForPCA].impute_6 * 0.000580839595107 + [CenteredDataForPCA].impute_7 * 0.36278174069 + [CenteredDataForPCA].impute_8 * -0.302292619185 + [CenteredDataForPCA].impute_9 * 0.123331640459 + [CenteredDataForPCA].impute_10 * 0.174996956887 + [CenteredDataForPCA].impute_11 * -0.031465847679 + [CenteredDataForPCA].impute_12 * -0.00614759183306 + [CenteredDataForPCA].impute_13 * 0.038791608084 + [CenteredDataForPCA].impute_14 * -0.208913192361 + [CenteredDataForPCA].impute_15 * -0.472115534722 + [CenteredDataForPCA].impute_16 * 0.0977210589654 + [CenteredDataForPCA].impute_17 * 0.138351760943 + [CenteredDataForPCA].impute_18 * -0.165487878179 + [CenteredDataForPCA].impute_19 * 0.0502116911864 + [CenteredDataForPCA].impute_20 * 0.0447893978859 + [CenteredDataForPCA].impute_21 * 0.0650548432076 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.213111190797 + [CenteredDataForPCA].impute_3 * -0.480275718381 + [CenteredDataForPCA].impute_4 * 0.0626071947307 + [CenteredDataForPCA].impute_5 * -0.00451781409654 + [CenteredDataForPCA].impute_6 * 0.0109169326354 + [CenteredDataForPCA].impute_7 * 0.247466456179 + [CenteredDataForPCA].impute_8 * 0.20020478626 + [CenteredDataForPCA].impute_9 * -0.0335121946544 + [CenteredDataForPCA].impute_10 * 0.131691205074 + [CenteredDataForPCA].impute_11 * 0.0935508553608 + [CenteredDataForPCA].impute_12 * -0.220265422837 + [CenteredDataForPCA].impute_13 * -0.0183661287785 + [CenteredDataForPCA].impute_14 * 0.025782299557 + [CenteredDataForPCA].impute_15 * 0.0581828510661 + [CenteredDataForPCA].impute_16 * -0.593056559801 + [CenteredDataForPCA].impute_17 * -0.231245847865 + [CenteredDataForPCA].impute_18 * 0.179945471786 + [CenteredDataForPCA].impute_19 * 0.233919805355 + [CenteredDataForPCA].impute_20 * -0.0225227479538 + [CenteredDataForPCA].impute_21 * 0.213587469856 AS anoova_11, [CenteredDataForPCA].impute_2 * 0.16469288714 + [CenteredDataForPCA].impute_3 * 0.267876028629 + [CenteredDataForPCA].impute_4 * -0.119641304016 + [CenteredDataForPCA].impute_5 * -0.0971985153437 + [CenteredDataForPCA].impute_6 * 0.371911580305 + [CenteredDataForPCA].impute_7 * -0.219549223521 + [CenteredDataForPCA].impute_8 * -0.156608519953 + [CenteredDataForPCA].impute_9 * -0.0286166764182 + [CenteredDataForPCA].impute_10 * 0.093656568985 + [CenteredDataForPCA].impute_11 * 0.0100991859996 + [CenteredDataForPCA].impute_12 * -0.186217048228 + [CenteredDataForPCA].impute_13 * -0.167954571406 + [CenteredDataForPCA].impute_14 * -0.178083961242 + [CenteredDataForPCA].impute_15 * 0.41392631671 + [CenteredDataForPCA].impute_16 * -0.160445115209 + [CenteredDataForPCA].impute_17 * -0.00687227120013 + [CenteredDataForPCA].impute_18 * -0.335228495926 + [CenteredDataForPCA].impute_19 * 0.46439613685 + [CenteredDataForPCA].impute_20 * 0.0517514122513 + [CenteredDataForPCA].impute_21 * -0.184861869302 AS anoova_12, [CenteredDataForPCA].impute_2 * -0.0477777716828 + [CenteredDataForPCA].impute_3 * 0.193071897055 + [CenteredDataForPCA].impute_4 * -0.122167308284 + [CenteredDataForPCA].impute_5 * -0.0137538833457 + [CenteredDataForPCA].impute_6 * -0.469153074499 + [CenteredDataForPCA].impute_7 * 0.202940957181 + [CenteredDataForPCA].impute_8 * -0.0770111581774 + [CenteredDataForPCA].impute_9 * -0.271717125884 + [CenteredDataForPCA].impute_10 * 0.283516625105 + [CenteredDataForPCA].impute_11 * 0.0199009618981 + [CenteredDataForPCA].impute_12 * 0.124211435425 + [CenteredDataForPCA].impute_13 * 0.555764069558 + [CenteredDataForPCA].impute_14 * -0.187012551719 + [CenteredDataForPCA].impute_15 * 0.244758849957 + [CenteredDataForPCA].impute_16 * -0.0883330735634 + [CenteredDataForPCA].impute_17 * -0.145619740381 + [CenteredDataForPCA].impute_18 * 0.0187111360593 + [CenteredDataForPCA].impute_19 * 0.0945974382532 + [CenteredDataForPCA].impute_20 * -0.073833602344 + [CenteredDataForPCA].impute_21 * -0.246084198818 AS anoova_13, [CenteredDataForPCA].impute_2 * -0.0845926895914 + [CenteredDataForPCA].impute_3 * -0.285748457684 + [CenteredDataForPCA].impute_4 * 0.0633045805072 + [CenteredDataForPCA].impute_5 * -0.0592093890363 + [CenteredDataForPCA].impute_6 * 0.0495134800394 + [CenteredDataForPCA].impute_7 * 0.395164376481 + [CenteredDataForPCA].impute_8 * -0.380536869401 + [CenteredDataForPCA].impute_9 * 0.0847536863343 + [CenteredDataForPCA].impute_10 * -0.258815095729 + [CenteredDataForPCA].impute_11 * -0.00626935254644 + [CenteredDataForPCA].impute_12 * -0.033599693921 + [CenteredDataForPCA].impute_13 * -0.140371923955 + [CenteredDataForPCA].impute_14 * -0.232140742556 + [CenteredDataForPCA].impute_15 * 0.350528334953 + [CenteredDataForPCA].impute_16 * -0.0769509271484 + [CenteredDataForPCA].impute_17 * -0.0778462419032 + [CenteredDataForPCA].impute_18 * -0.201045023117 + [CenteredDataForPCA].impute_19 * -0.464613277231 + [CenteredDataForPCA].impute_20 * 0.0818975891167 + [CenteredDataForPCA].impute_21 * -0.231279483128 AS anoova_14, [CenteredDataForPCA].impute_2 * -0.257996936797 + [CenteredDataForPCA].impute_3 * 0.180395171356 + [CenteredDataForPCA].impute_4 * -0.0468140340717 + [CenteredDataForPCA].impute_5 * -0.0347273823874 + [CenteredDataForPCA].impute_6 * 0.113689491237 + [CenteredDataForPCA].impute_7 * -0.0345643617374 + [CenteredDataForPCA].impute_8 * 0.0477206024467 + [CenteredDataForPCA].impute_9 * 0.0384180329676 + [CenteredDataForPCA].impute_10 * -0.151125624041 + [CenteredDataForPCA].impute_11 * -0.0151003345776 + [CenteredDataForPCA].impute_12 * -0.458964527344 + [CenteredDataForPCA].impute_13 * 0.0697224450692 + [CenteredDataForPCA].impute_14 * -0.516559588702 + [CenteredDataForPCA].impute_15 * -0.347114902784 + [CenteredDataForPCA].impute_16 * -0.186971935017 + [CenteredDataForPCA].impute_17 * 0.0732996858982 + [CenteredDataForPCA].impute_18 * 0.37984428658 + [CenteredDataForPCA].impute_19 * -0.0335495826376 + [CenteredDataForPCA].impute_20 * 0.0340513893627 + [CenteredDataForPCA].impute_21 * -0.258509426602 AS anoova_15, [CenteredDataForPCA].impute_2 * -0.0203538216593 + [CenteredDataForPCA].impute_3 * -0.373086402922 + [CenteredDataForPCA].impute_4 * -0.0837958639135 + [CenteredDataForPCA].impute_5 * 0.00305820335912 + [CenteredDataForPCA].impute_6 * 0.0603686791879 + [CenteredDataForPCA].impute_7 * -0.252351132806 + [CenteredDataForPCA].impute_8 * -0.33574499327 + [CenteredDataForPCA].impute_9 * -0.202163730909 + [CenteredDataForPCA].impute_10 * 0.235581700978 + [CenteredDataForPCA].impute_11 * -0.025059308615 + [CenteredDataForPCA].impute_12 * -0.517211033686 + [CenteredDataForPCA].impute_13 * 0.235194982229 + [CenteredDataForPCA].impute_14 * -0.0185828558805 + [CenteredDataForPCA].impute_15 * 0.065686870726 + [CenteredDataForPCA].impute_16 * 0.417408067966 + [CenteredDataForPCA].impute_17 * -0.0559962447265 + [CenteredDataForPCA].impute_18 * 0.02297795883 + [CenteredDataForPCA].impute_19 * -0.059853419849 + [CenteredDataForPCA].impute_20 * -0.051817750984 + [CenteredDataForPCA].impute_21 * 0.254302010389 AS anoova_16, [CenteredDataForPCA].impute_2 * 0.338823422683 + [CenteredDataForPCA].impute_3 * 0.17129506831 + [CenteredDataForPCA].impute_4 * 0.0685593341945 + [CenteredDataForPCA].impute_5 * -0.082309262903 + [CenteredDataForPCA].impute_6 * -0.468948267664 + [CenteredDataForPCA].impute_7 * -0.14332107562 + [CenteredDataForPCA].impute_8 * 0.310453908451 + [CenteredDataForPCA].impute_9 * 0.222957432406 + [CenteredDataForPCA].impute_10 * 0.0641044223202 + [CenteredDataForPCA].impute_11 * -0.121558055947 + [CenteredDataForPCA].impute_12 * -0.452096040637 + [CenteredDataForPCA].impute_13 * -0.131440026602 + [CenteredDataForPCA].impute_14 * 0.0926604099741 + [CenteredDataForPCA].impute_15 * 0.255085421852 + [CenteredDataForPCA].impute_16 * -0.00473678592995 + [CenteredDataForPCA].impute_17 * 0.150215249686 + [CenteredDataForPCA].impute_18 * -0.0406519170399 + [CenteredDataForPCA].impute_19 * -0.294980273346 + [CenteredDataForPCA].impute_20 * 0.169437381037 + [CenteredDataForPCA].impute_21 * -0.060554433025 AS anoova_17, [CenteredDataForPCA].impute_2 * 0.175643838397 + [CenteredDataForPCA].impute_3 * 0.177665520357 + [CenteredDataForPCA].impute_4 * 0.0630534709953 + [CenteredDataForPCA].impute_5 * 0.00270297811413 + [CenteredDataForPCA].impute_6 * 0.00661033583721 + [CenteredDataForPCA].impute_7 * -0.0747271598885 + [CenteredDataForPCA].impute_8 * -0.550467893308 + [CenteredDataForPCA].impute_9 * 0.0861883799808 + [CenteredDataForPCA].impute_10 * -0.0765134209402 + [CenteredDataForPCA].impute_11 * -0.0642635539617 + [CenteredDataForPCA].impute_12 * 0.0422433301855 + [CenteredDataForPCA].impute_13 * -0.00467082058153 + [CenteredDataForPCA].impute_14 * 0.373122054372 + [CenteredDataForPCA].impute_15 * 0.165113136643 + [CenteredDataForPCA].impute_16 * -0.155919705563 + [CenteredDataForPCA].impute_17 * 0.0735933158233 + [CenteredDataForPCA].impute_18 * 0.633797084659 + [CenteredDataForPCA].impute_19 * 0.0317890161297 + [CenteredDataForPCA].impute_20 * 0.0484310958783 + [CenteredDataForPCA].impute_21 * -0.0668980462827 AS anoova_18, [CenteredDataForPCA].impute_2 * 0.00905045138168 + [CenteredDataForPCA].impute_3 * 0.198818546736 + [CenteredDataForPCA].impute_4 * -0.0897318019881 + [CenteredDataForPCA].impute_5 * -0.0788129438719 + [CenteredDataForPCA].impute_6 * 0.142171337887 + [CenteredDataForPCA].impute_7 * 0.408017498186 + [CenteredDataForPCA].impute_8 * 0.211391029669 + [CenteredDataForPCA].impute_9 * 0.098540474697 + [CenteredDataForPCA].impute_10 * -0.190849621026 + [CenteredDataForPCA].impute_11 * 0.00171144657826 + [CenteredDataForPCA].impute_12 * -0.000855323874583 + [CenteredDataForPCA].impute_13 * 0.0836307025142 + [CenteredDataForPCA].impute_14 * -0.224806639608 + [CenteredDataForPCA].impute_15 * 0.386927659687 + [CenteredDataForPCA].impute_16 * 0.325101106458 + [CenteredDataForPCA].impute_17 * 0.11508169089 + [CenteredDataForPCA].impute_18 * 0.282814287157 + [CenteredDataForPCA].impute_19 * 0.14052014336 + [CenteredDataForPCA].impute_20 * 0.0707922769637 + [CenteredDataForPCA].impute_21 * 0.487534985993 AS anoova_19, [CenteredDataForPCA].impute_2 * 3.12108737013e-16 + [CenteredDataForPCA].impute_3 * -2.40576475829e-17 + [CenteredDataForPCA].impute_4 * -0.27559932227 + [CenteredDataForPCA].impute_5 * -0.14894868098 + [CenteredDataForPCA].impute_6 * 6.6509756488e-17 + [CenteredDataForPCA].impute_7 * 6.21088174117e-17 + [CenteredDataForPCA].impute_8 * 2.54038888809e-16 + [CenteredDataForPCA].impute_9 * 0.412866478354 + [CenteredDataForPCA].impute_10 * 9.46306531586e-17 + [CenteredDataForPCA].impute_11 * -0.512729086811 + [CenteredDataForPCA].impute_12 * -1.15946895847e-16 + [CenteredDataForPCA].impute_13 * 1.3121530364e-17 + [CenteredDataForPCA].impute_14 * -1.15837830798e-16 + [CenteredDataForPCA].impute_15 * -7.58797906447e-17 + [CenteredDataForPCA].impute_16 * -8.06502411715e-17 + [CenteredDataForPCA].impute_17 * -0.278045228987 + [CenteredDataForPCA].impute_18 * -1.83247646117e-16 + [CenteredDataForPCA].impute_19 * -2.29024735166e-17 + [CenteredDataForPCA].impute_20 * -0.625460078043 + [CenteredDataForPCA].impute_21 * -5.13105228116e-17 AS anoova_20, [CenteredDataForPCA].impute_2 * -7.18931597045e-17 + [CenteredDataForPCA].impute_3 * -2.33293454521e-16 + [CenteredDataForPCA].impute_4 * 0.447633498207 + [CenteredDataForPCA].impute_5 * -0.71178183063 + [CenteredDataForPCA].impute_6 * 9.8645788358e-17 + [CenteredDataForPCA].impute_7 * -1.93883881142e-16 + [CenteredDataForPCA].impute_8 * -1.64780982439e-16 + [CenteredDataForPCA].impute_9 * -0.187115166334 + [CenteredDataForPCA].impute_10 * 1.28368483234e-16 + [CenteredDataForPCA].impute_11 * 0.160786336555 + [CenteredDataForPCA].impute_12 * -1.59198465556e-17 + [CenteredDataForPCA].impute_13 * -5.3575978896e-17 + [CenteredDataForPCA].impute_14 * -2.30592804791e-16 + [CenteredDataForPCA].impute_15 * -1.30664659374e-17 + [CenteredDataForPCA].impute_16 * -3.63255371242e-16 + [CenteredDataForPCA].impute_17 * 0.266362839151 + [CenteredDataForPCA].impute_18 * -2.09501268597e-17 + [CenteredDataForPCA].impute_19 * -9.87091886279e-17 + [CenteredDataForPCA].impute_20 * -0.401469031547 + [CenteredDataForPCA].impute_21 * -6.20061708681e-17 AS anoova_21 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.29459187388420105) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.9278442859649658) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.29459187388420105 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.25 AS [Proba_1], -1.38629436112 AS [LogProba_1], 0.25 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.25 AS [Proba_3], -1.38629436112 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34615384615384615 AS [Proba_0], -1.06087196069 AS [LogProba_0], 0.07692307692307693 AS [Proba_1], -2.56494935746 AS [LogProba_1], 0.5 AS [Proba_2], -0.69314718056 AS [LogProba_2], 0.07692307692307693 AS [Proba_3], -2.56494935746 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.9278442859649658 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18421052631578946 AS [Proba_0], -1.69167601067 AS [LogProba_0], 0.3684210526315789 AS [Proba_1], -0.998528830111 AS [LogProba_1], 0.07894736842105263 AS [Proba_2], -2.53897387106 AS [LogProba_2], 0.3684210526315789 AS [Proba_3], -0.998528830111 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06666666666666667 AS [Proba_0], -2.7080502011 AS [LogProba_0], 0.7333333333333333 AS [Proba_1], -0.310154928304 AS [LogProba_1], 0.13333333333333333 AS [Proba_2], -2.01490302054 AS [LogProba_2], 0.06666666666666667 AS [Proba_3], -2.7080502011 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2608695652173913 AS [Proba_0], -1.3437347467 AS [LogProba_0], 0.13043478260869565 AS [Proba_1], -2.03688192726 AS [LogProba_1], 0.043478260869565216 AS [Proba_2], -3.13549421593 AS [LogProba_2], 0.5652173913043478 AS [Proba_3], -0.570544858468 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
calibration_base_estimator AS 
(SELECT [DT_Output].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], CAST(NULL AS FLOAT) AS [Score_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output].[Proba_0] AS [Proba_0], [DT_Output].[Proba_1] AS [Proba_1], [DT_Output].[Proba_2] AS [Proba_2], [DT_Output].[Proba_3] AS [Proba_3], [DT_Output].[LogProba_0] AS [LogProba_0], [DT_Output].[LogProba_1] AS [LogProba_1], [DT_Output].[LogProba_2] AS [LogProba_2], [DT_Output].[LogProba_3] AS [LogProba_3], [DT_Output].[Decision] AS [Decision] 
FROM [DT_Output]), 
sigmoid_calibration_0 AS 
(SELECT calibration_base_estimator.[KEY] AS [KEY], 1.0 / (1.0 + exp(-8.82774318026 * calibration_base_estimator.[Proba_0] + 3.77150601996)) AS [Proba_0_0], 1.0 / (1.0 + exp(-8.82774318026 * calibration_base_estimator.[Proba_1] + 3.77150601996)) AS [Proba_1_0], 1.0 / (1.0 + exp(-8.82774318026 * calibration_base_estimator.[Proba_2] + 3.77150601996)) AS [Proba_2_0], 1.0 / (1.0 + exp(-8.82774318026 * calibration_base_estimator.[Proba_3] + 3.77150601996)) AS [Proba_3_0] 
FROM calibration_base_estimator), 
sigmoid_cte_0 AS 
(SELECT sigmoid_calibration_0.[KEY] AS join_key_0, sigmoid_calibration_0.[Proba_0_0] AS [Proba_0_0], sigmoid_calibration_0.[Proba_1_0] AS [Proba_1_0], sigmoid_calibration_0.[Proba_2_0] AS [Proba_2_0], sigmoid_calibration_0.[Proba_3_0] AS [Proba_3_0] 
FROM sigmoid_calibration_0), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.7479240298271179) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.5766680240631104) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.12841664254665375) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.7479240298271179 AS threshold, 68 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.25 AS [Proba_1], -1.38629436112 AS [LogProba_1], 0.25 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.25 AS [Proba_3], -1.38629436112 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34782608695652173 AS [Proba_0], -1.05605267425 AS [LogProba_0], 0.13043478260869565 AS [Proba_1], -2.03688192726 AS [LogProba_1], 0.5217391304347826 AS [Proba_2], -0.650587566141 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.5766680240631104 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS [Proba_0], -1.60943791243 AS [LogProba_0], 0.3111111111111111 AS [Proba_1], -1.16760516016 AS [LogProba_1], 0.1111111111111111 AS [Proba_2], -2.19722457734 AS [LogProba_2], 0.37777777777777777 AS [Proba_3], -0.973449145714 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06666666666666667 AS [Proba_0], -2.7080502011 AS [LogProba_0], 0.6 AS [Proba_1], -0.510825623766 AS [LogProba_1], 0.2 AS [Proba_2], -1.60943791243 AS [LogProba_2], 0.13333333333333333 AS [Proba_3], -2.01490302054 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, 'anoova_9' AS feature, -0.12841664254665375 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26666666666666666 AS [Proba_0], -1.32175583998 AS [LogProba_0], 0.16666666666666666 AS [Proba_1], -1.79175946923 AS [LogProba_1], 0.06666666666666667 AS [Proba_2], -2.7080502011 AS [LogProba_2], 0.5 AS [Proba_3], -0.69314718056 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13333333333333333 AS [Proba_0], -2.01490302054 AS [LogProba_0], 0.13333333333333333 AS [Proba_1], -2.01490302054 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.7333333333333333 AS [Proba_3], -0.310154928304 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS [Proba_0], -0.916290731874 AS [LogProba_0], 0.2 AS [Proba_1], -1.60943791243 AS [LogProba_1], 0.13333333333333333 AS [Proba_2], -2.01490302054 AS [LogProba_2], 0.26666666666666666 AS [Proba_3], -1.32175583998 AS [LogProba_3], 0 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Proba_3] AS [Proba_3], [DT_node_data_1].[LogProba_3] AS [LogProba_3], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
calibration_base_estimator_1 AS 
(SELECT [DT_Output_1].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], CAST(NULL AS FLOAT) AS [Score_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_1].[Proba_0] AS [Proba_0], [DT_Output_1].[Proba_1] AS [Proba_1], [DT_Output_1].[Proba_2] AS [Proba_2], [DT_Output_1].[Proba_3] AS [Proba_3], [DT_Output_1].[LogProba_0] AS [LogProba_0], [DT_Output_1].[LogProba_1] AS [LogProba_1], [DT_Output_1].[LogProba_2] AS [LogProba_2], [DT_Output_1].[LogProba_3] AS [LogProba_3], [DT_Output_1].[Decision] AS [Decision] 
FROM [DT_Output_1]), 
sigmoid_calibration_1 AS 
(SELECT calibration_base_estimator_1.[KEY] AS [KEY], 1.0 / (1.0 + exp(-6.01177623588 * calibration_base_estimator_1.[Proba_0] + 3.09264226998)) AS [Proba_0_1], 1.0 / (1.0 + exp(-6.01177623588 * calibration_base_estimator_1.[Proba_1] + 3.09264226998)) AS [Proba_1_1], 1.0 / (1.0 + exp(-6.01177623588 * calibration_base_estimator_1.[Proba_2] + 3.09264226998)) AS [Proba_2_1], 1.0 / (1.0 + exp(-6.01177623588 * calibration_base_estimator_1.[Proba_3] + 3.09264226998)) AS [Proba_3_1] 
FROM calibration_base_estimator_1), 
sigmoid_cte_1 AS 
(SELECT sigmoid_calibration_1.[KEY] AS join_key_1, sigmoid_calibration_1.[Proba_0_1] AS [Proba_0_1], sigmoid_calibration_1.[Proba_1_1] AS [Proba_1_1], sigmoid_calibration_1.[Proba_2_1] AS [Proba_2_1], sigmoid_calibration_1.[Proba_3_1] AS [Proba_3_1] 
FROM sigmoid_calibration_1), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.9663597345352173) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.7792139053344727) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.10349969565868378) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.9663597345352173 AS threshold, 68 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0], -1.38629436112 AS [LogProba_0], 0.25 AS [Proba_1], -1.38629436112 AS [LogProba_1], 0.25 AS [Proba_2], -1.38629436112 AS [LogProba_2], 0.25 AS [Proba_3], -1.38629436112 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4782608695652174 AS [Proba_0], -0.737598943131 AS [LogProba_0], 0.043478260869565216 AS [Proba_1], -3.13549421593 AS [LogProba_1], 0.4782608695652174 AS [Proba_2], -0.737598943131 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, 0.7792139053344727 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13333333333333333 AS [Proba_0], -2.01490302054 AS [LogProba_0], 0.35555555555555557 AS [Proba_1], -1.03407376753 AS [LogProba_1], 0.13333333333333333 AS [Proba_2], -2.01490302054 AS [LogProba_2], 0.37777777777777777 AS [Proba_3], -0.973449145714 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anoova_4' AS feature, -0.10349969565868378 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13333333333333333 AS [Proba_0], -2.01490302054 AS [LogProba_0], 0.4666666666666667 AS [Proba_1], -0.762140052047 AS [LogProba_1], 0.2 AS [Proba_2], -1.60943791243 AS [LogProba_2], 0.2 AS [Proba_3], -1.60943791243 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06666666666666667 AS [Proba_0], -2.7080502011 AS [LogProba_0], 0.6666666666666666 AS [Proba_1], -0.405465108108 AS [LogProba_1], 0.26666666666666666 AS [Proba_2], -1.32175583998 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS [Proba_0], -1.60943791243 AS [LogProba_0], 0.26666666666666666 AS [Proba_1], -1.32175583998 AS [LogProba_1], 0.13333333333333333 AS [Proba_2], -2.01490302054 AS [LogProba_2], 0.4 AS [Proba_3], -0.916290731874 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13333333333333333 AS [Proba_0], -2.01490302054 AS [LogProba_0], 0.13333333333333333 AS [Proba_1], -2.01490302054 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.7333333333333333 AS [Proba_3], -0.310154928304 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Proba_3] AS [Proba_3], [DT_node_data_2].[LogProba_3] AS [LogProba_3], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
calibration_base_estimator_2 AS 
(SELECT [DT_Output_2].[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], CAST(NULL AS FLOAT) AS [Score_2], CAST(NULL AS FLOAT) AS [Score_3], [DT_Output_2].[Proba_0] AS [Proba_0], [DT_Output_2].[Proba_1] AS [Proba_1], [DT_Output_2].[Proba_2] AS [Proba_2], [DT_Output_2].[Proba_3] AS [Proba_3], [DT_Output_2].[LogProba_0] AS [LogProba_0], [DT_Output_2].[LogProba_1] AS [LogProba_1], [DT_Output_2].[LogProba_2] AS [LogProba_2], [DT_Output_2].[LogProba_3] AS [LogProba_3], [DT_Output_2].[Decision] AS [Decision] 
FROM [DT_Output_2]), 
sigmoid_calibration_2 AS 
(SELECT calibration_base_estimator_2.[KEY] AS [KEY], 1.0 / (1.0 + exp(-4.42490983719 * calibration_base_estimator_2.[Proba_0] + 2.17799790047)) AS [Proba_0_2], 1.0 / (1.0 + exp(-4.42490983719 * calibration_base_estimator_2.[Proba_1] + 2.17799790047)) AS [Proba_1_2], 1.0 / (1.0 + exp(-4.42490983719 * calibration_base_estimator_2.[Proba_2] + 2.17799790047)) AS [Proba_2_2], 1.0 / (1.0 + exp(-4.42490983719 * calibration_base_estimator_2.[Proba_3] + 2.17799790047)) AS [Proba_3_2] 
FROM calibration_base_estimator_2), 
sigmoid_cte_2 AS 
(SELECT sigmoid_calibration_2.[KEY] AS join_key_2, sigmoid_calibration_2.[Proba_0_2] AS [Proba_0_2], sigmoid_calibration_2.[Proba_1_2] AS [Proba_1_2], sigmoid_calibration_2.[Proba_2_2] AS [Proba_2_2], sigmoid_calibration_2.[Proba_3_2] AS [Proba_3_2] 
FROM sigmoid_calibration_2), 
[Calibration_Join_CTE] AS 
(SELECT sigmoid_cte_0.join_key_0 AS join_key_0, sigmoid_cte_0.[Proba_0_0] AS [Proba_0_0], sigmoid_cte_0.[Proba_1_0] AS [Proba_1_0], sigmoid_cte_0.[Proba_2_0] AS [Proba_2_0], sigmoid_cte_0.[Proba_3_0] AS [Proba_3_0], sigmoid_cte_1.join_key_1 AS join_key_1, sigmoid_cte_1.[Proba_0_1] AS [Proba_0_1], sigmoid_cte_1.[Proba_1_1] AS [Proba_1_1], sigmoid_cte_1.[Proba_2_1] AS [Proba_2_1], sigmoid_cte_1.[Proba_3_1] AS [Proba_3_1], sigmoid_cte_2.join_key_2 AS join_key_2, sigmoid_cte_2.[Proba_0_2] AS [Proba_0_2], sigmoid_cte_2.[Proba_1_2] AS [Proba_1_2], sigmoid_cte_2.[Proba_2_2] AS [Proba_2_2], sigmoid_cte_2.[Proba_3_2] AS [Proba_3_2] 
FROM sigmoid_cte_0 LEFT OUTER JOIN sigmoid_cte_1 ON sigmoid_cte_0.join_key_0 = sigmoid_cte_1.join_key_1 LEFT OUTER JOIN sigmoid_cte_2 ON sigmoid_cte_2.join_key_2 = sigmoid_cte_1.join_key_1), 
[Avg_Proba_CTE] AS 
(SELECT [Calibration_Join_CTE].join_key_0 AS [KEY], ([Calibration_Join_CTE].[Proba_0_0] + [Calibration_Join_CTE].[Proba_0_1] + [Calibration_Join_CTE].[Proba_0_2]) / 3 AS [AvgProba_0], ([Calibration_Join_CTE].[Proba_1_0] + [Calibration_Join_CTE].[Proba_1_1] + [Calibration_Join_CTE].[Proba_1_2]) / 3 AS [AvgProba_1], ([Calibration_Join_CTE].[Proba_2_0] + [Calibration_Join_CTE].[Proba_2_1] + [Calibration_Join_CTE].[Proba_2_2]) / 3 AS [AvgProba_2], ([Calibration_Join_CTE].[Proba_3_0] + [Calibration_Join_CTE].[Proba_3_1] + [Calibration_Join_CTE].[Proba_3_2]) / 3 AS [AvgProba_3] 
FROM [Calibration_Join_CTE]), 
orig_cte AS 
(SELECT [Avg_Proba_CTE].[KEY] AS [KEY], CAST(NULL AS FLOAT(53)) AS [Score_0], CAST(NULL AS FLOAT(53)) AS [Score_1], CAST(NULL AS FLOAT(53)) AS [Score_2], CAST(NULL AS FLOAT(53)) AS [Score_3], [Avg_Proba_CTE].[AvgProba_0] / ([Avg_Proba_CTE].[AvgProba_0] + [Avg_Proba_CTE].[AvgProba_1] + [Avg_Proba_CTE].[AvgProba_2] + [Avg_Proba_CTE].[AvgProba_3]) AS [Proba_0], [Avg_Proba_CTE].[AvgProba_1] / ([Avg_Proba_CTE].[AvgProba_0] + [Avg_Proba_CTE].[AvgProba_1] + [Avg_Proba_CTE].[AvgProba_2] + [Avg_Proba_CTE].[AvgProba_3]) AS [Proba_1], [Avg_Proba_CTE].[AvgProba_2] / ([Avg_Proba_CTE].[AvgProba_0] + [Avg_Proba_CTE].[AvgProba_1] + [Avg_Proba_CTE].[AvgProba_2] + [Avg_Proba_CTE].[AvgProba_3]) AS [Proba_2], [Avg_Proba_CTE].[AvgProba_3] / ([Avg_Proba_CTE].[AvgProba_0] + [Avg_Proba_CTE].[AvgProba_1] + [Avg_Proba_CTE].[AvgProba_2] + [Avg_Proba_CTE].[AvgProba_3]) AS [Proba_3], CAST(NULL AS FLOAT(53)) AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [Avg_Proba_CTE]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Proba] AS [Decision] 
FROM arg_max_cte