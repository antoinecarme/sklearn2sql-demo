-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.522358384991 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.484355427416 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.514752601374 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.491826672743 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.489739108174 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.462475763003 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.483205398336 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.471679098229 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.484152158699 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.487391133595 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.522358384991 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.484355427416 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.514752601374 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.491826672743 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.489739108174 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.462475763003 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.483205398336 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.471679098229 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.484152158699 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.487391133595 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.222159576833 + "CenteredDataForPCA".impute_3 * -0.650831730913 + "CenteredDataForPCA".impute_4 * 0.345379231235 + "CenteredDataForPCA".impute_5 * 0.301923397591 + "CenteredDataForPCA".impute_6 * 0.340362130326 + "CenteredDataForPCA".impute_7 * 0.118065010022 + "CenteredDataForPCA".impute_8 * -0.222882766445 + "CenteredDataForPCA".impute_9 * 0.157693586991 + "CenteredDataForPCA".impute_10 * 0.199584550851 + "CenteredDataForPCA".impute_11 * 0.269174506277 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.400389511748 + "CenteredDataForPCA".impute_3 * -0.258221469737 + "CenteredDataForPCA".impute_4 * -0.173224349415 + "CenteredDataForPCA".impute_5 * 0.226709378689 + "CenteredDataForPCA".impute_6 * 0.0283978263984 + "CenteredDataForPCA".impute_7 * -0.69906397477 + "CenteredDataForPCA".impute_8 * -0.308748738402 + "CenteredDataForPCA".impute_9 * 0.114219552008 + "CenteredDataForPCA".impute_10 * -0.148082198177 + "CenteredDataForPCA".impute_11 * -0.26797199392 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.384862680986 + "CenteredDataForPCA".impute_3 * 0.131330400399 + "CenteredDataForPCA".impute_4 * 0.150493774682 + "CenteredDataForPCA".impute_5 * 0.361771738208 + "CenteredDataForPCA".impute_6 * -0.0406943029546 + "CenteredDataForPCA".impute_7 * 0.461177480062 + "CenteredDataForPCA".impute_8 * -0.208776270073 + "CenteredDataForPCA".impute_9 * 0.13911696795 + "CenteredDataForPCA".impute_10 * -0.62805787226 + "CenteredDataForPCA".impute_11 * 0.0967854787467 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.399014101952 + "CenteredDataForPCA".impute_3 * -0.162689466498 + "CenteredDataForPCA".impute_4 * 0.266755328684 + "CenteredDataForPCA".impute_5 * -0.172014827398 + "CenteredDataForPCA".impute_6 * -0.690194839942 + "CenteredDataForPCA".impute_7 * 0.0238405033132 + "CenteredDataForPCA".impute_8 * -0.184815805957 + "CenteredDataForPCA".impute_9 * -0.0776923260124 + "CenteredDataForPCA".impute_10 * 0.327756134562 + "CenteredDataForPCA".impute_11 * 0.298358890653 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.241472740256 + "CenteredDataForPCA".impute_3 * 0.021339367301 + "CenteredDataForPCA".impute_4 * 0.146528534007 + "CenteredDataForPCA".impute_5 * 0.104942073934 + "CenteredDataForPCA".impute_6 * -0.000701624655952 + "CenteredDataForPCA".impute_7 * -0.125287037898 + "CenteredDataForPCA".impute_8 * 0.673097913616 + "CenteredDataForPCA".impute_9 * 0.647483978116 + "CenteredDataForPCA".impute_10 * 0.0927074146099 + "CenteredDataForPCA".impute_11 * 0.110289595427 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.418423685981 + "CenteredDataForPCA".impute_3 * -0.056701213176 + "CenteredDataForPCA".impute_4 * -0.227071580331 + "CenteredDataForPCA".impute_5 * -0.330454192967 + "CenteredDataForPCA".impute_6 * -0.241399391557 + "CenteredDataForPCA".impute_7 * -0.179453265044 + "CenteredDataForPCA".impute_8 * -0.224557927052 + "CenteredDataForPCA".impute_9 * 0.448371448245 + "CenteredDataForPCA".impute_10 * -0.392613857437 + "CenteredDataForPCA".impute_11 * 0.406028466191 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.0326895875622 + "CenteredDataForPCA".impute_3 * -0.161852561044 + "CenteredDataForPCA".impute_4 * 0.416860316641 + "CenteredDataForPCA".impute_5 * -0.479808521202 + "CenteredDataForPCA".impute_6 * -0.0254153855303 + "CenteredDataForPCA".impute_7 * 0.159551548828 + "CenteredDataForPCA".impute_8 * -0.129883103969 + "CenteredDataForPCA".impute_9 * 0.293307687038 + "CenteredDataForPCA".impute_10 * -0.104336268767 + "CenteredDataForPCA".impute_11 * -0.654873028329 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.00737671654785 + "CenteredDataForPCA".impute_3 * 0.631965078032 + "CenteredDataForPCA".impute_4 * 0.201199476381 + "CenteredDataForPCA".impute_5 * 0.0793263247489 + "CenteredDataForPCA".impute_6 * 0.206089102974 + "CenteredDataForPCA".impute_7 * -0.0933212321521 + "CenteredDataForPCA".impute_8 * -0.482570369085 + "CenteredDataForPCA".impute_9 * 0.340154245371 + "CenteredDataForPCA".impute_10 * 0.386188279116 + "CenteredDataForPCA".impute_11 * 0.0699271026291 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.255643008177 + "CenteredDataForPCA".impute_3 * 0.0750562897642 + "CenteredDataForPCA".impute_4 * 0.404082014849 + "CenteredDataForPCA".impute_5 * -0.453249035614 + "CenteredDataForPCA".impute_6 * 0.438292379325 + "CenteredDataForPCA".impute_7 * -0.280143687513 + "CenteredDataForPCA".impute_8 * 0.0804967547689 + "CenteredDataForPCA".impute_9 * -0.2798038676 + "CenteredDataForPCA".impute_10 * -0.257352399198 + "CenteredDataForPCA".impute_11 * 0.372445107464 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.427946242585 + "CenteredDataForPCA".impute_3 * -0.176477306899 + "CenteredDataForPCA".impute_4 * -0.553472301311 + "CenteredDataForPCA".impute_5 * -0.367179580803 + "CenteredDataForPCA".impute_6 * 0.334408749643 + "CenteredDataForPCA".impute_7 * 0.35152641994 + "CenteredDataForPCA".impute_8 * -0.132448112935 + "CenteredDataForPCA".impute_9 * 0.19078790975 + "CenteredDataForPCA".impute_10 * 0.217620973111 + "CenteredDataForPCA".impute_11 * 0.0886785651187 AS anoova_11 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.06797902286052704) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.027353934943675995) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -0.1171562671661377) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= -0.0342710018157959) THEN 7 ELSE 8 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.06797902286052704 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.784602991906524 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.027353934943675995 AS threshold, 59 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.861321890613448 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.1171562671661377 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.264737056371935 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.467415654091905 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.98187988547065 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.30754081423797 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_9' AS feature, -0.0342710018157959 AS threshold, 41 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.796153844986803 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.040734254789605 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.1699604807933 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"