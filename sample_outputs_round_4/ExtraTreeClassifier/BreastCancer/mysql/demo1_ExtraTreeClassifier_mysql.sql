-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

SELECT `DT_Output`.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, `DT_Output`.`Proba_0` AS `Proba_0`, `DT_Output`.`Proba_1` AS `Proba_1`, `DT_Output`.`LogProba_0` AS `LogProba_0`, `DT_Output`.`LogProba_1` AS `LogProba_1`, `DT_Output`.`Decision` AS `Decision` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_22` <= 91.56745080902397) THEN CASE WHEN (`ADS`.`Feature_4` <= 0.11026188321941072) THEN CASE WHEN (`ADS`.`Feature_24` <= 0.1219640559419857) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_8` <= 0.1656215791547041) THEN CASE WHEN (`ADS`.`Feature_6` <= 0.05108500389268913) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_10` <= 0.9380169193486266) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_22' AS feature, 91.56745080902397 AS threshold, 569 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.37258347978910367 AS `Proba_0`, -0.987294159454 AS `LogProba_0`, 0.6274165202108963 AS `Proba_1`, -0.466144652347 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.11026188321941072 AS threshold, 231 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.008658008658008658 AS `Proba_0`, -4.74927052996 AS `LogProba_0`, 0.9913419913419913 AS `Proba_1`, -0.00869570696755 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_24' AS feature, 0.1219640559419857 AS threshold, 208 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.004807692307692308 AS `Proba_0`, -5.3375380797 AS `LogProba_0`, 0.9951923076923077 AS `Proba_1`, -0.00481928643595 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 89 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.011235955056179775 AS `Proba_0`, -4.48863636973 AS `LogProba_0`, 0.9887640449438202 AS `Proba_1`, -0.0112995552539 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 119 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.043478260869565216 AS `Proba_0`, -3.13549421593 AS `LogProba_0`, 0.9565217391304348 AS `Proba_1`, -0.0444517625708 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_8' AS feature, 0.1656215791547041 AS threshold, 338 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.621301775147929 AS `Proba_0`, -0.475938364766 AS `LogProba_0`, 0.378698224852071 AS `Proba_1`, -0.971015631563 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, 'Feature_6' AS feature, 0.05108500389268913 AS threshold, 92 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.358695652173913 AS `Proba_0`, -1.02528101558 AS `LogProba_0`, 0.6413043478260869 AS `Proba_1`, -0.444251133143 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.10416666666666667 AS `Proba_0`, -2.26176309847 AS `LogProba_0`, 0.8958333333333334 AS `Proba_1`, -0.110000895214 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6363636363636364 AS `Proba_0`, -0.451985123743 AS `LogProba_0`, 0.36363636363636365 AS `Proba_1`, -1.01160091168 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 10 AS node_id, 'Feature_10' AS feature, 0.9380169193486266 AS threshold, 246 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7195121951219512 AS `Proba_0`, -0.329181803359 AS `LogProba_0`, 0.2804878048780488 AS `Proba_1`, -1.27122503134 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 219 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.684931506849315 AS `Proba_0`, -0.37843643572 AS `LogProba_0`, 0.3150684931506849 AS `Proba_1`, -1.15496522522 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`