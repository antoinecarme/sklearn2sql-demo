-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_15" <= 0.4738544859716338) THEN CASE WHEN ("ADS"."Feature_12" <= 0.9119190375123245) THEN CASE WHEN ("ADS"."Feature_8" <= 0.3464060340059003) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 0.4738544859716338 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 0.9119190375123245 AS threshold, 67 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26865671641791045 AS "Proba_0", -1.31432086149 AS "LogProba_0", 0.208955223880597 AS "Proba_1", -1.56563528978 AS "LogProba_1", 0.2835820895522388 AS "Proba_2", -1.26025364022 AS "LogProba_2", 0.23880597014925373 AS "Proba_3", -1.43210389715 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.3464060340059003 AS threshold, 48 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1875 AS "Proba_0", -1.67397643357 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.3125 AS "Proba_3", -1.16315080981 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0", -1.79175946923 AS "LogProba_0", 0.36666666666666664 AS "Proba_1", -1.00330210886 AS "LogProba_1", 0.26666666666666666 AS "Proba_2", -1.32175583998 AS "LogProba_2", 0.2 AS "Proba_3", -1.60943791243 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS "Proba_0", -1.50407739678 AS "LogProba_0", 0.05555555555555555 AS "Proba_1", -2.8903717579 AS "LogProba_1", 0.2222222222222222 AS "Proba_2", -1.50407739678 AS "LogProba_2", 0.5 AS "Proba_3", -0.69314718056 AS "LogProba_3", 3 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.47368421052631576 AS "Proba_0", -0.74721440183 AS "LogProba_0", 0.10526315789473684 AS "Proba_1", -2.25129179861 AS "LogProba_1", 0.3684210526315789 AS "Proba_2", -0.998528830111 AS "LogProba_2", 0.05263157894736842 AS "Proba_3", -2.94443897917 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21212121212121213 AS "Proba_0", -1.55059741241 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0.18181818181818182 AS "Proba_2", -1.70474809224 AS "LogProba_2", 0.2727272727272727 AS "Proba_3", -1.29928298413 AS "LogProba_3", 1 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", "DT_Output"."Decision" AS "Decision" 
FROM "DT_Output"