-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_15" <= 0.37837789310161263) THEN CASE WHEN ("ADS"."Feature_12" <= 0.0007228571505035752) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS"."Feature_10" <= 0.16161436818413089) THEN 5 ELSE 6 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 0.37837789310161263 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.25 AS "Proba_2", -1.38629436112 AS "LogProba_2", 0.25 AS "Proba_3", -1.38629436112 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 0.0007228571505035752 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25806451612903225 AS "Proba_0", -1.35454566281 AS "LogProba_0", 0.20967741935483872 AS "Proba_1", -1.56218502758 AS "LogProba_1", 0.27419354838709675 AS "Proba_2", -1.29392104099 AS "LogProba_2", 0.25806451612903225 AS "Proba_3", -1.35454566281 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2903225806451613 AS "Proba_0", -1.23676262715 AS "LogProba_0", 0.1935483870967742 AS "Proba_1", -1.64222773526 AS "LogProba_1", 0.25806451612903225 AS "Proba_2", -1.35454566281 AS "LogProba_2", 0.25806451612903225 AS "Proba_3", -1.35454566281 AS "LogProba_3", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.22580645161290322 AS "Proba_0", -1.48807705543 AS "LogProba_0", 0.22580645161290322 AS "Proba_1", -1.48807705543 AS "LogProba_1", 0.2903225806451613 AS "Proba_2", -1.23676262715 AS "LogProba_2", 0.25806451612903225 AS "Proba_3", -1.35454566281 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, 'Feature_10' AS feature, 0.16161436818413089 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23684210526315788 AS "Proba_0", -1.44036158239 AS "LogProba_0", 0.3157894736842105 AS "Proba_1", -1.15267950994 AS "LogProba_1", 0.21052631578947367 AS "Proba_2", -1.55814461805 AS "LogProba_2", 0.23684210526315788 AS "Proba_3", -1.44036158239 AS "LogProba_3", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21052631578947367 AS "Proba_0", -1.55814461805 AS "LogProba_0", 0.10526315789473684 AS "Proba_1", -2.25129179861 AS "LogProba_1", 0.42105263157894735 AS "Proba_2", -0.864997437487 AS "LogProba_2", 0.2631578947368421 AS "Proba_3", -1.33500106673 AS "LogProba_3", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2631578947368421 AS "Proba_0", -1.33500106673 AS "LogProba_0", 0.5263157894736842 AS "Proba_1", -0.641853886172 AS "LogProba_1", 0.0 AS "Proba_2", -1.79769313486231e+308 AS "LogProba_2", 0.21052631578947367 AS "Proba_3", -1.55814461805 AS "LogProba_3", 1 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", "DT_Output"."Decision" AS "Decision" 
FROM "DT_Output"