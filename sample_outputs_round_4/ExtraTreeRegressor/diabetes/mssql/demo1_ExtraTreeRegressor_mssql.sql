-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_2] <= -0.03681088325683897) THEN CASE WHEN ([ADS].[Feature_6] <= 0.04705234680884249) THEN CASE WHEN ([ADS].[Feature_1] <= -0.03747932138041414) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_3] <= 0.0219711569782107) THEN CASE WHEN ([ADS].[Feature_7] <= 0.007153914763850855) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_2] <= 0.047505329118455966) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [INPUT_DATA] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.03681088325683897 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.04705234680884249 AS threshold, 101 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 100.87128712871286 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, -0.03747932138041414 AS threshold, 73 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 107.75342465753425 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 112.95918367346938 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 97.125 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 82.92857142857143 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 0.0219711569782107 AS threshold, 341 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 167.316715542522 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'Feature_7' AS feature, 0.007153914763850855 AS threshold, 216 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 144.73611111111111 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 127.19852941176471 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 174.55 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_2' AS feature, 0.047505329118455966 AS threshold, 125 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 206.336 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 180.8095238095238 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 258.6341463414634 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id)
 SELECT [DT_Output].[KEY] AS [KEY], [DT_Output].[Estimator] AS [Estimator] 
FROM [DT_Output]