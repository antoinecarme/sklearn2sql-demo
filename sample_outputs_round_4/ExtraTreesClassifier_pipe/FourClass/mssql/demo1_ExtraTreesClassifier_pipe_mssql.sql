-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.0774860802275 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.258606507955 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -0.15913667321 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.0742160270368 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -0.131659725456 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.0474094776488 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.0270656537663 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN -0.0852820167737 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.268019707863 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -0.00922301467692 ELSE [ADS].[Feature_9] END AS impute_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN -0.0483510592738 ELSE [ADS].[Feature_10] END AS impute_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN 0.0898633034249 ELSE [ADS].[Feature_11] END AS impute_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN -0.0766693399197 ELSE [ADS].[Feature_12] END AS impute_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.243951984952 ELSE [ADS].[Feature_13] END AS impute_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN -0.051723736321 ELSE [ADS].[Feature_14] END AS impute_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN -0.505564150016 ELSE [ADS].[Feature_15] END AS impute_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN -0.013829420189 ELSE [ADS].[Feature_16] END AS impute_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN -0.0445813113799 ELSE [ADS].[Feature_17] END AS impute_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN 0.179370904486 ELSE [ADS].[Feature_18] END AS impute_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN 0.188579455098 ELSE [ADS].[Feature_19] END AS impute_21 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - -0.0774860802275 AS impute_2, [ADS_imp_1_OUT].impute_3 - 0.258606507955 AS impute_3, [ADS_imp_1_OUT].impute_4 - -0.15913667321 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.0742160270368 AS impute_5, [ADS_imp_1_OUT].impute_6 - -0.131659725456 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.0474094776488 AS impute_7, [ADS_imp_1_OUT].impute_8 - 0.0270656537663 AS impute_8, [ADS_imp_1_OUT].impute_9 - -0.0852820167737 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.268019707863 AS impute_10, [ADS_imp_1_OUT].impute_11 - -0.00922301467692 AS impute_11, [ADS_imp_1_OUT].impute_12 - -0.0483510592738 AS impute_12, [ADS_imp_1_OUT].impute_13 - 0.0898633034249 AS impute_13, [ADS_imp_1_OUT].impute_14 - -0.0766693399197 AS impute_14, [ADS_imp_1_OUT].impute_15 - -0.243951984952 AS impute_15, [ADS_imp_1_OUT].impute_16 - -0.051723736321 AS impute_16, [ADS_imp_1_OUT].impute_17 - -0.505564150016 AS impute_17, [ADS_imp_1_OUT].impute_18 - -0.013829420189 AS impute_18, [ADS_imp_1_OUT].impute_19 - -0.0445813113799 AS impute_19, [ADS_imp_1_OUT].impute_20 - 0.179370904486 AS impute_20, [ADS_imp_1_OUT].impute_21 - 0.188579455098 AS impute_21 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * -0.017796096058 + [CenteredDataForPCA].impute_3 * 0.232104231443 + [CenteredDataForPCA].impute_4 * 0.0144777226727 + [CenteredDataForPCA].impute_5 * 0.41023988058 + [CenteredDataForPCA].impute_6 * -0.00136547130702 + [CenteredDataForPCA].impute_7 * -0.0187661201652 + [CenteredDataForPCA].impute_8 * 0.0474835722375 + [CenteredDataForPCA].impute_9 * 0.0486217536491 + [CenteredDataForPCA].impute_10 * -0.542657152631 + [CenteredDataForPCA].impute_11 * 0.0569952654905 + [CenteredDataForPCA].impute_12 * 0.0298051191128 + [CenteredDataForPCA].impute_13 * 0.0122150606032 + [CenteredDataForPCA].impute_14 * 0.00219428541713 + [CenteredDataForPCA].impute_15 * -0.0224727788122 + [CenteredDataForPCA].impute_16 * 0.0247262370229 + [CenteredDataForPCA].impute_17 * 0.252153648507 + [CenteredDataForPCA].impute_18 * -0.00539218011326 + [CenteredDataForPCA].impute_19 * -0.0365025408774 + [CenteredDataForPCA].impute_20 * -0.00343711157245 + [CenteredDataForPCA].impute_21 * 0.638351745606 AS anoova_2, [CenteredDataForPCA].impute_2 * -0.0251462648249 + [CenteredDataForPCA].impute_3 * 0.192393368743 + [CenteredDataForPCA].impute_4 * -0.00606412816214 + [CenteredDataForPCA].impute_5 * -0.296336629461 + [CenteredDataForPCA].impute_6 * 0.00270155339743 + [CenteredDataForPCA].impute_7 * 0.0147136100841 + [CenteredDataForPCA].impute_8 * 0.0529185887814 + [CenteredDataForPCA].impute_9 * -0.00763702665886 + [CenteredDataForPCA].impute_10 * -0.301010425915 + [CenteredDataForPCA].impute_11 * 0.720156248258 + [CenteredDataForPCA].impute_12 * -0.0705037548478 + [CenteredDataForPCA].impute_13 * 0.0879424686266 + [CenteredDataForPCA].impute_14 * -0.0132817381591 + [CenteredDataForPCA].impute_15 * -0.20459172117 + [CenteredDataForPCA].impute_16 * -0.110060935438 + [CenteredDataForPCA].impute_17 * 0.259290416584 + [CenteredDataForPCA].impute_18 * 0.0604620886959 + [CenteredDataForPCA].impute_19 * 0.18779117791 + [CenteredDataForPCA].impute_20 * -0.0406379097256 + [CenteredDataForPCA].impute_21 * -0.295853177915 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.131320430553 + [CenteredDataForPCA].impute_3 * 0.701475956319 + [CenteredDataForPCA].impute_4 * 0.0833215577699 + [CenteredDataForPCA].impute_5 * -0.379296753465 + [CenteredDataForPCA].impute_6 * -0.169774961476 + [CenteredDataForPCA].impute_7 * -0.11141419888 + [CenteredDataForPCA].impute_8 * -0.0539999174052 + [CenteredDataForPCA].impute_9 * -0.0669161931183 + [CenteredDataForPCA].impute_10 * 0.327633504495 + [CenteredDataForPCA].impute_11 * -0.0515311521906 + [CenteredDataForPCA].impute_12 * -0.0812994750812 + [CenteredDataForPCA].impute_13 * 0.0345756752413 + [CenteredDataForPCA].impute_14 * -0.23146086977 + [CenteredDataForPCA].impute_15 * 0.0588486212724 + [CenteredDataForPCA].impute_16 * -0.0187374963245 + [CenteredDataForPCA].impute_17 * -0.0699565885361 + [CenteredDataForPCA].impute_18 * 0.117067444162 + [CenteredDataForPCA].impute_19 * -0.0665335091799 + [CenteredDataForPCA].impute_20 * -0.0339973521536 + [CenteredDataForPCA].impute_21 * 0.303106593696 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.0615067583331 + [CenteredDataForPCA].impute_3 * 0.0345990145914 + [CenteredDataForPCA].impute_4 * -0.0835646013028 + [CenteredDataForPCA].impute_5 * 0.183926864349 + [CenteredDataForPCA].impute_6 * 0.170037802248 + [CenteredDataForPCA].impute_7 * -0.188830852859 + [CenteredDataForPCA].impute_8 * -0.14903539599 + [CenteredDataForPCA].impute_9 * -0.118194309803 + [CenteredDataForPCA].impute_10 * -0.0268537180712 + [CenteredDataForPCA].impute_11 * 0.305156545691 + [CenteredDataForPCA].impute_12 * -0.112937813443 + [CenteredDataForPCA].impute_13 * 0.332715567021 + [CenteredDataForPCA].impute_14 * 0.0344507890715 + [CenteredDataForPCA].impute_15 * 0.244083773708 + [CenteredDataForPCA].impute_16 * -0.357525499003 + [CenteredDataForPCA].impute_17 * -0.402458540688 + [CenteredDataForPCA].impute_18 * -0.125384920771 + [CenteredDataForPCA].impute_19 * -0.405791138831 + [CenteredDataForPCA].impute_20 * 0.324261808711 + [CenteredDataForPCA].impute_21 * -0.00808786597342 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.45048212671 + [CenteredDataForPCA].impute_3 * -0.0202108234367 + [CenteredDataForPCA].impute_4 * -0.32542713133 + [CenteredDataForPCA].impute_5 * -0.13882029513 + [CenteredDataForPCA].impute_6 * 0.226163479862 + [CenteredDataForPCA].impute_7 * 0.318070565683 + [CenteredDataForPCA].impute_8 * 0.129224604887 + [CenteredDataForPCA].impute_9 * 0.0171245576018 + [CenteredDataForPCA].impute_10 * 0.00506646816769 + [CenteredDataForPCA].impute_11 * -0.201086735237 + [CenteredDataForPCA].impute_12 * -0.0955616439303 + [CenteredDataForPCA].impute_13 * 0.149164622345 + [CenteredDataForPCA].impute_14 * 0.271006018068 + [CenteredDataForPCA].impute_15 * 0.161481938386 + [CenteredDataForPCA].impute_16 * -0.277973817324 + [CenteredDataForPCA].impute_17 * 0.304606919254 + [CenteredDataForPCA].impute_18 * 0.332986713436 + [CenteredDataForPCA].impute_19 * -0.181562064997 + [CenteredDataForPCA].impute_20 * -0.130027435805 + [CenteredDataForPCA].impute_21 * 0.00109937624533 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.00187603476858 + [CenteredDataForPCA].impute_3 * 0.0130382838684 + [CenteredDataForPCA].impute_4 * 0.309091916297 + [CenteredDataForPCA].impute_5 * -0.0290584105651 + [CenteredDataForPCA].impute_6 * 0.571820556686 + [CenteredDataForPCA].impute_7 * -0.25731451961 + [CenteredDataForPCA].impute_8 * 0.325996529159 + [CenteredDataForPCA].impute_9 * 0.100983178935 + [CenteredDataForPCA].impute_10 * 0.0642735576655 + [CenteredDataForPCA].impute_11 * -0.059842587368 + [CenteredDataForPCA].impute_12 * -0.149966540453 + [CenteredDataForPCA].impute_13 * 0.182789736705 + [CenteredDataForPCA].impute_14 * -0.026230273626 + [CenteredDataForPCA].impute_15 * -0.383043054682 + [CenteredDataForPCA].impute_16 * 0.151575300623 + [CenteredDataForPCA].impute_17 * -0.018945078787 + [CenteredDataForPCA].impute_18 * -0.0581898053464 + [CenteredDataForPCA].impute_19 * -0.277195603228 + [CenteredDataForPCA].impute_20 * -0.281417430614 + [CenteredDataForPCA].impute_21 * 0.00243509952462 AS anoova_7, [CenteredDataForPCA].impute_2 * -0.00611061124357 + [CenteredDataForPCA].impute_3 * -0.0713375519436 + [CenteredDataForPCA].impute_4 * -0.0123326172494 + [CenteredDataForPCA].impute_5 * -0.0141029247716 + [CenteredDataForPCA].impute_6 * -0.24286559086 + [CenteredDataForPCA].impute_7 * 0.0917552674553 + [CenteredDataForPCA].impute_8 * 0.0372236403412 + [CenteredDataForPCA].impute_9 * -0.340544897428 + [CenteredDataForPCA].impute_10 * 0.0208229866818 + [CenteredDataForPCA].impute_11 * -0.198436626584 + [CenteredDataForPCA].impute_12 * 0.222544261831 + [CenteredDataForPCA].impute_13 * 0.410588919072 + [CenteredDataForPCA].impute_14 * -0.166380514183 + [CenteredDataForPCA].impute_15 * -0.32527191155 + [CenteredDataForPCA].impute_16 * -0.415931699188 + [CenteredDataForPCA].impute_17 * 0.136358398836 + [CenteredDataForPCA].impute_18 * -0.426037842073 + [CenteredDataForPCA].impute_19 * 0.0437198272722 + [CenteredDataForPCA].impute_20 * -0.206468389564 + [CenteredDataForPCA].impute_21 * 0.0267886444574 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.0712603731247 + [CenteredDataForPCA].impute_3 * -0.00626030173873 + [CenteredDataForPCA].impute_4 * 0.170688632516 + [CenteredDataForPCA].impute_5 * -0.259137828526 + [CenteredDataForPCA].impute_6 * 0.0245856153327 + [CenteredDataForPCA].impute_7 * -0.0890497825028 + [CenteredDataForPCA].impute_8 * -0.361581004997 + [CenteredDataForPCA].impute_9 * -0.010868694667 + [CenteredDataForPCA].impute_10 * -0.0791558798169 + [CenteredDataForPCA].impute_11 * -0.110143887172 + [CenteredDataForPCA].impute_12 * -0.0993396086021 + [CenteredDataForPCA].impute_13 * 0.161690212625 + [CenteredDataForPCA].impute_14 * 0.161212526857 + [CenteredDataForPCA].impute_15 * 0.313888453831 + [CenteredDataForPCA].impute_16 * 0.291917769102 + [CenteredDataForPCA].impute_17 * 0.50545800832 + [CenteredDataForPCA].impute_18 * -0.402956293638 + [CenteredDataForPCA].impute_19 * -0.248555473775 + [CenteredDataForPCA].impute_20 * 0.093771327404 + [CenteredDataForPCA].impute_21 * -0.0814075072992 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.235799614679 + [CenteredDataForPCA].impute_3 * -0.147594514627 + [CenteredDataForPCA].impute_4 * 0.117323066147 + [CenteredDataForPCA].impute_5 * 0.112136060046 + [CenteredDataForPCA].impute_6 * -0.452309490933 + [CenteredDataForPCA].impute_7 * 0.0252421668763 + [CenteredDataForPCA].impute_8 * 0.177729390864 + [CenteredDataForPCA].impute_9 * -0.330506233509 + [CenteredDataForPCA].impute_10 * -0.0933376529156 + [CenteredDataForPCA].impute_11 * 0.100673163081 + [CenteredDataForPCA].impute_12 * -0.479131378721 + [CenteredDataForPCA].impute_13 * -0.23483464077 + [CenteredDataForPCA].impute_14 * -0.0618586677775 + [CenteredDataForPCA].impute_15 * 0.0329915850212 + [CenteredDataForPCA].impute_16 * 0.134857852848 + [CenteredDataForPCA].impute_17 * -0.0523203804351 + [CenteredDataForPCA].impute_18 * -0.0201865916613 + [CenteredDataForPCA].impute_19 * -0.366776162155 + [CenteredDataForPCA].impute_20 * -0.281024710053 + [CenteredDataForPCA].impute_21 * -0.0832149181637 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.165994883332 + [CenteredDataForPCA].impute_3 * 0.101875026416 + [CenteredDataForPCA].impute_4 * -0.0574201958854 + [CenteredDataForPCA].impute_5 * 0.0313862938014 + [CenteredDataForPCA].impute_6 * -0.0187830943604 + [CenteredDataForPCA].impute_7 * -0.0859823269898 + [CenteredDataForPCA].impute_8 * -0.472586329411 + [CenteredDataForPCA].impute_9 * 0.112280976799 + [CenteredDataForPCA].impute_10 * 0.0331428621887 + [CenteredDataForPCA].impute_11 * 0.0875413081543 + [CenteredDataForPCA].impute_12 * 0.0435019315473 + [CenteredDataForPCA].impute_13 * -0.18005111057 + [CenteredDataForPCA].impute_14 * 0.467662495784 + [CenteredDataForPCA].impute_15 * -0.0953616922967 + [CenteredDataForPCA].impute_16 * -0.197099787182 + [CenteredDataForPCA].impute_17 * -0.160066412504 + [CenteredDataForPCA].impute_18 * -0.0263686835926 + [CenteredDataForPCA].impute_19 * -0.0772844422502 + [CenteredDataForPCA].impute_20 * -0.607721048319 + [CenteredDataForPCA].impute_21 * 0.0525063555169 AS anoova_11, [CenteredDataForPCA].impute_2 * 0.5761207428 + [CenteredDataForPCA].impute_3 * 0.0854250511447 + [CenteredDataForPCA].impute_4 * 0.228674119342 + [CenteredDataForPCA].impute_5 * -0.0805092332968 + [CenteredDataForPCA].impute_6 * -0.0302795915826 + [CenteredDataForPCA].impute_7 * 0.428716868402 + [CenteredDataForPCA].impute_8 * 0.341992672866 + [CenteredDataForPCA].impute_9 * 0.100709145783 + [CenteredDataForPCA].impute_10 * 0.00262149922066 + [CenteredDataForPCA].impute_11 * 0.0701574535694 + [CenteredDataForPCA].impute_12 * 0.15933487611 + [CenteredDataForPCA].impute_13 * -0.0788798919498 + [CenteredDataForPCA].impute_14 * -0.0362912693441 + [CenteredDataForPCA].impute_15 * 0.283099600216 + [CenteredDataForPCA].impute_16 * -0.217285780715 + [CenteredDataForPCA].impute_17 * 0.0324103187018 + [CenteredDataForPCA].impute_18 * 0.0336464255508 + [CenteredDataForPCA].impute_19 * -0.339486825097 + [CenteredDataForPCA].impute_20 * -0.0859301179444 + [CenteredDataForPCA].impute_21 * -0.0128686547276 AS anoova_12, [CenteredDataForPCA].impute_2 * 0.142534497626 + [CenteredDataForPCA].impute_3 * -0.194537002384 + [CenteredDataForPCA].impute_4 * -0.0626189736349 + [CenteredDataForPCA].impute_5 * -0.00152630937555 + [CenteredDataForPCA].impute_6 * 0.0577676379392 + [CenteredDataForPCA].impute_7 * -0.453100142005 + [CenteredDataForPCA].impute_8 * -0.197019540766 + [CenteredDataForPCA].impute_9 * -0.105653046987 + [CenteredDataForPCA].impute_10 * -0.114107115712 + [CenteredDataForPCA].impute_11 * -0.0713939333184 + [CenteredDataForPCA].impute_12 * 0.161932251395 + [CenteredDataForPCA].impute_13 * -0.065401766428 + [CenteredDataForPCA].impute_14 * -0.506553247499 + [CenteredDataForPCA].impute_15 * 0.173391953574 + [CenteredDataForPCA].impute_16 * -0.185986191204 + [CenteredDataForPCA].impute_17 * 0.242511091118 + [CenteredDataForPCA].impute_18 * 0.422488407277 + [CenteredDataForPCA].impute_19 * -0.141711748726 + [CenteredDataForPCA].impute_20 * -0.206608617843 + [CenteredDataForPCA].impute_21 * -0.0967133876958 AS anoova_13, [CenteredDataForPCA].impute_2 * -0.129130385745 + [CenteredDataForPCA].impute_3 * -0.0406801369338 + [CenteredDataForPCA].impute_4 * -0.0205039257439 + [CenteredDataForPCA].impute_5 * 0.0572081360691 + [CenteredDataForPCA].impute_6 * -0.278060839177 + [CenteredDataForPCA].impute_7 * -0.22627433094 + [CenteredDataForPCA].impute_8 * 0.287164185396 + [CenteredDataForPCA].impute_9 * 0.376032900531 + [CenteredDataForPCA].impute_10 * -0.00321522145052 + [CenteredDataForPCA].impute_11 * 0.0843262577587 + [CenteredDataForPCA].impute_12 * 0.14485774048 + [CenteredDataForPCA].impute_13 * 0.463075549567 + [CenteredDataForPCA].impute_14 * 0.0354996869269 + [CenteredDataForPCA].impute_15 * 0.422037930623 + [CenteredDataForPCA].impute_16 * 0.175444485142 + [CenteredDataForPCA].impute_17 * -0.119872955549 + [CenteredDataForPCA].impute_18 * -0.0351139638117 + [CenteredDataForPCA].impute_19 * 0.17315574345 + [CenteredDataForPCA].impute_20 * -0.353922242099 + [CenteredDataForPCA].impute_21 * -0.0452548061405 AS anoova_14, [CenteredDataForPCA].impute_2 * -0.25430199153 + [CenteredDataForPCA].impute_3 * -0.0185736089297 + [CenteredDataForPCA].impute_4 * -0.0489289325289 + [CenteredDataForPCA].impute_5 * -0.0325140270733 + [CenteredDataForPCA].impute_6 * -0.264738007883 + [CenteredDataForPCA].impute_7 * 0.0525292848534 + [CenteredDataForPCA].impute_8 * -0.0915583055118 + [CenteredDataForPCA].impute_9 * 0.314352624815 + [CenteredDataForPCA].impute_10 * -0.00948173581309 + [CenteredDataForPCA].impute_11 * 0.0842766887755 + [CenteredDataForPCA].impute_12 * 0.516245747601 + [CenteredDataForPCA].impute_13 * -0.0264671681297 + [CenteredDataForPCA].impute_14 * -0.0300663320635 + [CenteredDataForPCA].impute_15 * -0.34427078296 + [CenteredDataForPCA].impute_16 * 0.189569859857 + [CenteredDataForPCA].impute_17 * -0.00618219589335 + [CenteredDataForPCA].impute_18 * 0.0732344406562 + [CenteredDataForPCA].impute_19 * -0.537211896686 + [CenteredDataForPCA].impute_20 * 0.14608364506 + [CenteredDataForPCA].impute_21 * -0.079899877471 AS anoova_15, [CenteredDataForPCA].impute_2 * 0.0888305196374 + [CenteredDataForPCA].impute_3 * -0.0736158188035 + [CenteredDataForPCA].impute_4 * 0.299342135305 + [CenteredDataForPCA].impute_5 * 0.11953092163 + [CenteredDataForPCA].impute_6 * -0.0334761725754 + [CenteredDataForPCA].impute_7 * 0.413729624981 + [CenteredDataForPCA].impute_8 * -0.401205964455 + [CenteredDataForPCA].impute_9 * -0.0566453173046 + [CenteredDataForPCA].impute_10 * -0.0181202344456 + [CenteredDataForPCA].impute_11 * 0.00776290176087 + [CenteredDataForPCA].impute_12 * -0.151276438409 + [CenteredDataForPCA].impute_13 * 0.500391858067 + [CenteredDataForPCA].impute_14 * -0.113619660822 + [CenteredDataForPCA].impute_15 * -0.109189792978 + [CenteredDataForPCA].impute_16 * 0.227137980779 + [CenteredDataForPCA].impute_17 * -0.113226946232 + [CenteredDataForPCA].impute_18 * 0.421021383746 + [CenteredDataForPCA].impute_19 * 0.0461818604786 + [CenteredDataForPCA].impute_20 * -0.0623945594097 + [CenteredDataForPCA].impute_21 * 0.0116124714555 AS anoova_16, [CenteredDataForPCA].impute_2 * -0.358223939219 + [CenteredDataForPCA].impute_3 * -0.0738521282174 + [CenteredDataForPCA].impute_4 * 0.76760491808 + [CenteredDataForPCA].impute_5 * 0.0222886859703 + [CenteredDataForPCA].impute_6 * -0.0426912626303 + [CenteredDataForPCA].impute_7 * -0.0938598320456 + [CenteredDataForPCA].impute_8 * -0.0250340686893 + [CenteredDataForPCA].impute_9 * 0.0281400436851 + [CenteredDataForPCA].impute_10 * -0.0228660830908 + [CenteredDataForPCA].impute_11 * -0.0299868971428 + [CenteredDataForPCA].impute_12 * 0.176434008879 + [CenteredDataForPCA].impute_13 * -0.146892110755 + [CenteredDataForPCA].impute_14 * 0.181394276163 + [CenteredDataForPCA].impute_15 * 0.11211368278 + [CenteredDataForPCA].impute_16 * -0.347490490674 + [CenteredDataForPCA].impute_17 * 0.0366378304292 + [CenteredDataForPCA].impute_18 * 0.0929054967857 + [CenteredDataForPCA].impute_19 * 0.147145444953 + [CenteredDataForPCA].impute_20 * 0.108122220432 + [CenteredDataForPCA].impute_21 * -0.0280947289694 AS anoova_17, [CenteredDataForPCA].impute_2 * -0.320396264193 + [CenteredDataForPCA].impute_3 * 0.0526654656084 + [CenteredDataForPCA].impute_4 * 0.0124015511561 + [CenteredDataForPCA].impute_5 * 0.0469434366183 + [CenteredDataForPCA].impute_6 * 0.380788055197 + [CenteredDataForPCA].impute_7 * 0.322163103207 + [CenteredDataForPCA].impute_8 * -0.124320060302 + [CenteredDataForPCA].impute_9 * -0.226058594092 + [CenteredDataForPCA].impute_10 * -0.0277029751232 + [CenteredDataForPCA].impute_11 * 0.1834430974 + [CenteredDataForPCA].impute_12 * 0.336940384496 + [CenteredDataForPCA].impute_13 * -0.182420614265 + [CenteredDataForPCA].impute_14 * -0.31817797185 + [CenteredDataForPCA].impute_15 * 0.272634014027 + [CenteredDataForPCA].impute_16 * 0.207500723407 + [CenteredDataForPCA].impute_17 * -0.152452586019 + [CenteredDataForPCA].impute_18 * -0.262668070965 + [CenteredDataForPCA].impute_19 * 0.0466623854381 + [CenteredDataForPCA].impute_20 * -0.287156176154 + [CenteredDataForPCA].impute_21 * -0.012172291561 AS anoova_18, [CenteredDataForPCA].impute_2 * 0.11987347889 + [CenteredDataForPCA].impute_3 * 0.0661163077709 + [CenteredDataForPCA].impute_4 * -0.00589241045249 + [CenteredDataForPCA].impute_5 * -0.0291992205931 + [CenteredDataForPCA].impute_6 * 0.000459329508735 + [CenteredDataForPCA].impute_7 * -0.181036555055 + [CenteredDataForPCA].impute_8 * 0.190058863091 + [CenteredDataForPCA].impute_9 * -0.643492406335 + [CenteredDataForPCA].impute_10 * 0.0106542280166 + [CenteredDataForPCA].impute_11 * 0.0474801797412 + [CenteredDataForPCA].impute_12 * 0.381648124458 + [CenteredDataForPCA].impute_13 * 0.106683792901 + [CenteredDataForPCA].impute_14 * 0.433117591309 + [CenteredDataForPCA].impute_15 * 0.0402361215652 + [CenteredDataForPCA].impute_16 * 0.282286480609 + [CenteredDataForPCA].impute_17 * -0.0221401538919 + [CenteredDataForPCA].impute_18 * 0.257930813975 + [CenteredDataForPCA].impute_19 * -0.0210435011858 + [CenteredDataForPCA].impute_20 * 0.038673346056 + [CenteredDataForPCA].impute_21 * 0.0116350008255 AS anoova_19, [CenteredDataForPCA].impute_2 * 2.54373556985e-16 + [CenteredDataForPCA].impute_3 * -0.222086338594 + [CenteredDataForPCA].impute_4 * 2.08166817117e-17 + [CenteredDataForPCA].impute_5 * 0.273447025116 + [CenteredDataForPCA].impute_6 * -3.01408203951e-16 + [CenteredDataForPCA].impute_7 * 8.67361737988e-17 + [CenteredDataForPCA].impute_8 * -3.43475248243e-16 + [CenteredDataForPCA].impute_9 * -2.08166817117e-17 + [CenteredDataForPCA].impute_10 * 0.675443732736 + [CenteredDataForPCA].impute_11 * 0.43435448859 + [CenteredDataForPCA].impute_12 * -1.5959455979e-16 + [CenteredDataForPCA].impute_13 * -1.38777878078e-17 + [CenteredDataForPCA].impute_14 * 1.31838984174e-16 + [CenteredDataForPCA].impute_15 * 5.20417042793e-18 + [CenteredDataForPCA].impute_16 * -1.45716771982e-16 + [CenteredDataForPCA].impute_17 * 0.384347719492 + [CenteredDataForPCA].impute_18 * 1.17961196366e-16 + [CenteredDataForPCA].impute_19 * -6.93889390391e-18 + [CenteredDataForPCA].impute_20 * 1.11022302463e-16 + [CenteredDataForPCA].impute_21 * 0.288605535871 AS anoova_20, [CenteredDataForPCA].impute_2 * 3.0751562757e-17 + [CenteredDataForPCA].impute_3 * -0.513317360553 + [CenteredDataForPCA].impute_4 * -1.38777878078e-17 + [CenteredDataForPCA].impute_5 * -0.601446900486 + [CenteredDataForPCA].impute_6 * -1.09287578987e-16 + [CenteredDataForPCA].impute_7 * 5.89805981832e-17 + [CenteredDataForPCA].impute_8 * -1.11022302463e-16 + [CenteredDataForPCA].impute_9 * 1.2490009027e-16 + [CenteredDataForPCA].impute_10 * -0.122885212107 + [CenteredDataForPCA].impute_11 * 0.138796676847 + [CenteredDataForPCA].impute_12 * -6.93889390391e-17 + [CenteredDataForPCA].impute_13 * -1.38777878078e-17 + [CenteredDataForPCA].impute_14 * -6.93889390391e-17 + [CenteredDataForPCA].impute_15 * 4.68375338514e-17 + [CenteredDataForPCA].impute_16 * 2.77555756156e-17 + [CenteredDataForPCA].impute_17 * -0.216444480695 + [CenteredDataForPCA].impute_18 * -1.11022302463e-16 + [CenteredDataForPCA].impute_19 * 9.71445146547e-17 + [CenteredDataForPCA].impute_20 * 1.17961196366e-16 + [CenteredDataForPCA].impute_21 * 0.54180569134 AS anoova_21 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.5126055425481262) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.4668369361257279) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 1.8903848405833727) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_19' AS feature, -0.5126055425481262 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09090909090909091 AS [Proba_0.0], -2.3978952728 AS [LogProba_0.0], 0.3181818181818182 AS [Proba_1.0], -1.1451323043 AS [LogProba_1.0], 0.22727272727272727 AS [Proba_2.0], -1.48160454092 AS [LogProba_2.0], 0.36363636363636365 AS [Proba_3.0], -1.01160091168 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -1.4668369361257279 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2948717948717949 AS [Proba_0.0], -1.22121461076 AS [LogProba_0.0], 0.23076923076923078 AS [Proba_1.0], -1.46633706879 AS [LogProba_1.0], 0.24358974358974358 AS [Proba_2.0], -1.41226984752 AS [LogProba_2.0], 0.23076923076923078 AS [Proba_3.0], -1.46633706879 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.42105263157894735 AS [Proba_0.0], -0.864997437487 AS [LogProba_0.0], 0.05263157894736842 AS [Proba_1.0], -2.94443897917 AS [LogProba_1.0], 0.3157894736842105 AS [Proba_2.0], -1.15267950994 AS [LogProba_2.0], 0.21052631578947367 AS [Proba_3.0], -1.55814461805 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, 1.8903848405833727 AS threshold, 59 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2542372881355932 AS [Proba_0.0], -1.3694872428 AS [LogProba_0.0], 0.288135593220339 AS [Proba_1.0], -1.24432409985 AS [LogProba_1.0], 0.22033898305084745 AS [Proba_2.0], -1.51258808644 AS [LogProba_2.0], 0.23728813559322035 AS [Proba_3.0], -1.43848011429 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.375 AS [Proba_0.0], -0.980829253012 AS [LogProba_0.0], 0.225 AS [Proba_1.0], -1.49165487678 AS [LogProba_1.0], 0.3 AS [Proba_2.0], -1.20397280433 AS [LogProba_2.0], 0.1 AS [Proba_3.0], -2.30258509299 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 0.42105263157894735 AS [Proba_1.0], -0.864997437487 AS [LogProba_1.0], 0.05263157894736842 AS [Proba_2.0], -2.94443897917 AS [LogProba_2.0], 0.5263157894736842 AS [Proba_3.0], -0.641853886172 AS [LogProba_3.0], 3 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0.0] AS [Proba_0.0], [DT_node_data].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data].[Proba_1.0] AS [Proba_1.0], [DT_node_data].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data].[Proba_2.0] AS [Proba_2.0], [DT_node_data].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data].[Proba_3.0] AS [Proba_3.0], [DT_node_data].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0.0] AS [Proba_0_0], [DT_Output].[LogProba_0.0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1.0] AS [Proba_0_1], [DT_Output].[LogProba_1.0] AS [LogProba_0_1], CAST(NULL AS FLOAT) AS [Score_0_2], [DT_Output].[Proba_2.0] AS [Proba_0_2], [DT_Output].[LogProba_2.0] AS [LogProba_0_2], CAST(NULL AS FLOAT) AS [Score_0_3], [DT_Output].[Proba_3.0] AS [Proba_0_3], [DT_Output].[LogProba_3.0] AS [LogProba_0_3] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.5462353800780568) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.07709753362510874) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, 0.5462353800780568 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, 0.07709753362510874 AS threshold, 65 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16923076923076924 AS [Proba_0.0], -1.7764919971 AS [LogProba_0.0], 0.2923076923076923 AS [Proba_1.0], -1.22994829073 AS [LogProba_1.0], 0.3076923076923077 AS [Proba_2.0], -1.17865499634 AS [LogProba_2.0], 0.23076923076923078 AS [Proba_3.0], -1.46633706879 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS [Proba_0.0], -1.50407739678 AS [LogProba_0.0], 0.19444444444444445 AS [Proba_1.0], -1.6376087894 AS [LogProba_1.0], 0.3611111111111111 AS [Proba_2.0], -1.01856958099 AS [LogProba_2.0], 0.2222222222222222 AS [Proba_3.0], -1.50407739678 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10344827586206896 AS [Proba_0.0], -2.26868354132 AS [LogProba_0.0], 0.41379310344827586 AS [Proba_1.0], -0.882389180198 AS [LogProba_1.0], 0.2413793103448276 AS [Proba_2.0], -1.42138568093 AS [LogProba_2.0], 0.2413793103448276 AS [Proba_3.0], -1.42138568093 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS [Proba_0.0], -0.916290731874 AS [LogProba_0.0], 0.17142857142857143 AS [Proba_1.0], -1.76358859226 AS [LogProba_1.0], 0.11428571428571428 AS [Proba_2.0], -2.16905370037 AS [LogProba_2.0], 0.3142857142857143 AS [Proba_3.0], -1.15745278869 AS [LogProba_3.0], 0 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0.0] AS [Proba_0.0], [DT_node_data_1].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_1].[Proba_1.0] AS [Proba_1.0], [DT_node_data_1].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_1].[Proba_2.0] AS [Proba_2.0], [DT_node_data_1].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_1].[Proba_3.0] AS [Proba_3.0], [DT_node_data_1].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0.0] AS [Proba_1_0], [DT_Output_1].[LogProba_0.0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1.0] AS [Proba_1_1], [DT_Output_1].[LogProba_1.0] AS [LogProba_1_1], CAST(NULL AS FLOAT) AS [Score_1_2], [DT_Output_1].[Proba_2.0] AS [Proba_1_2], [DT_Output_1].[LogProba_2.0] AS [LogProba_1_2], CAST(NULL AS FLOAT) AS [Score_1_3], [DT_Output_1].[Proba_3.0] AS [Proba_1_3], [DT_Output_1].[LogProba_3.0] AS [LogProba_1_3] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_14 <= 0.5552547938235048) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.8555496706165879) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.3007270930877559) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_14' AS feature, 0.5552547938235048 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, 0.8555496706165879 AS threshold, 76 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.27631578947368424 AS [Proba_0.0], -1.28621090256 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.21052631578947367 AS [Proba_2.0], -1.55814461805 AS [LogProba_2.0], 0.2631578947368421 AS [Proba_3.0], -1.33500106673 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -0.3007270930877559 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2413793103448276 AS [Proba_0.0], -1.42138568093 AS [LogProba_0.0], 0.29310344827586204 AS [Proba_1.0], -1.22722966649 AS [LogProba_1.0], 0.22413793103448276 AS [Proba_2.0], -1.49549365308 AS [LogProba_2.0], 0.2413793103448276 AS [Proba_3.0], -1.42138568093 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12 AS [Proba_0.0], -2.1202635362 AS [LogProba_0.0], 0.44 AS [Proba_1.0], -0.82098055207 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.2 AS [Proba_3.0], -1.60943791243 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.18181818181818182 AS [Proba_1.0], -1.70474809224 AS [LogProba_1.0], 0.21212121212121213 AS [Proba_2.0], -1.55059741241 AS [LogProba_2.0], 0.2727272727272727 AS [Proba_3.0], -1.29928298413 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3888888888888889 AS [Proba_0.0], -0.944461608841 AS [LogProba_0.0], 0.1111111111111111 AS [Proba_1.0], -2.19722457734 AS [LogProba_1.0], 0.16666666666666666 AS [Proba_2.0], -1.79175946923 AS [LogProba_2.0], 0.3333333333333333 AS [Proba_3.0], -1.09861228867 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS [Proba_0.0], -1.79175946923 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.3333333333333333 AS [Proba_2.0], -1.09861228867 AS [LogProba_2.0], 0.25 AS [Proba_3.0], -1.38629436112 AS [LogProba_3.0], 2 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0.0] AS [Proba_0.0], [DT_node_data_2].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_2].[Proba_1.0] AS [Proba_1.0], [DT_node_data_2].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_2].[Proba_2.0] AS [Proba_2.0], [DT_node_data_2].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_2].[Proba_3.0] AS [Proba_3.0], [DT_node_data_2].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0.0] AS [Proba_2_0], [DT_Output_2].[LogProba_0.0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1.0] AS [Proba_2_1], [DT_Output_2].[LogProba_1.0] AS [LogProba_2_1], CAST(NULL AS FLOAT) AS [Score_2_2], [DT_Output_2].[Proba_2.0] AS [Proba_2_2], [DT_Output_2].[LogProba_2.0] AS [LogProba_2_2], CAST(NULL AS FLOAT) AS [Score_2_3], [DT_Output_2].[Proba_3.0] AS [Proba_2_3], [DT_Output_2].[LogProba_3.0] AS [LogProba_2_3] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -2.9442388561344712) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.15925076516481473) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 0.3559086322953253) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -2.9442388561344712 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS [Proba_0.0], -0.69314718056 AS [LogProba_0.0], 0.1 AS [Proba_1.0], -2.30258509299 AS [LogProba_1.0], 0.4 AS [Proba_2.0], -0.916290731874 AS [LogProba_2.0], 0.0 AS [Proba_3.0], -1.79769313486231e+308 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_17' AS feature, -0.15925076516481473 AS threshold, 80 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1875 AS [Proba_0.0], -1.67397643357 AS [LogProba_0.0], 0.2875 AS [Proba_1.0], -1.24653241874 AS [LogProba_1.0], 0.2 AS [Proba_2.0], -1.60943791243 AS [LogProba_2.0], 0.325 AS [Proba_3.0], -1.12393009665 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18421052631578946 AS [Proba_0.0], -1.69167601067 AS [LogProba_0.0], 0.3157894736842105 AS [Proba_1.0], -1.15267950994 AS [LogProba_1.0], 0.21052631578947367 AS [Proba_2.0], -1.55814461805 AS [LogProba_2.0], 0.2894736842105263 AS [Proba_3.0], -1.23969088693 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, 'anoova_7' AS feature, 0.3559086322953253 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19047619047619047 AS [Proba_0.0], -1.6582280766 AS [LogProba_0.0], 0.2619047619047619 AS [Proba_1.0], -1.33977434548 AS [LogProba_1.0], 0.19047619047619047 AS [Proba_2.0], -1.6582280766 AS [LogProba_2.0], 0.35714285714285715 AS [Proba_3.0], -1.02961941718 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16 AS [Proba_0.0], -1.83258146375 AS [LogProba_0.0], 0.28 AS [Proba_1.0], -1.27296567581 AS [LogProba_1.0], 0.28 AS [Proba_2.0], -1.27296567581 AS [LogProba_2.0], 0.28 AS [Proba_3.0], -1.27296567581 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23529411764705882 AS [Proba_0.0], -1.44691898294 AS [LogProba_0.0], 0.23529411764705882 AS [Proba_1.0], -1.44691898294 AS [LogProba_1.0], 0.058823529411764705 AS [Proba_2.0], -2.83321334406 AS [LogProba_2.0], 0.47058823529411764 AS [Proba_3.0], -0.753771802376 AS [LogProba_3.0], 3 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0.0] AS [Proba_0.0], [DT_node_data_3].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_3].[Proba_1.0] AS [Proba_1.0], [DT_node_data_3].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_3].[Proba_2.0] AS [Proba_2.0], [DT_node_data_3].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_3].[Proba_3.0] AS [Proba_3.0], [DT_node_data_3].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0.0] AS [Proba_3_0], [DT_Output_3].[LogProba_0.0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1.0] AS [Proba_3_1], [DT_Output_3].[LogProba_1.0] AS [LogProba_3_1], CAST(NULL AS FLOAT) AS [Score_3_2], [DT_Output_3].[Proba_2.0] AS [Proba_3_2], [DT_Output_3].[LogProba_2.0] AS [LogProba_3_2], CAST(NULL AS FLOAT) AS [Score_3_3], [DT_Output_3].[Proba_3.0] AS [Proba_3_3], [DT_Output_3].[LogProba_3.0] AS [LogProba_3_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.8910160112257284) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 1.6873225785557526) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.5965317292047394) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_11' AS feature, 0.8910160112257284 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 1.6873225785557526 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.27058823529411763 AS [Proba_0.0], -1.30715704056 AS [LogProba_0.0], 0.2235294117647059 AS [Proba_1.0], -1.49821227732 AS [LogProba_1.0], 0.25882352941176473 AS [Proba_2.0], -1.35160880313 AS [LogProba_2.0], 0.24705882352941178 AS [Proba_3.0], -1.39812881877 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -1.5965317292047394 AS threshold, 69 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2898550724637681 AS [Proba_0.0], -1.23837423104 AS [LogProba_0.0], 0.2463768115942029 AS [Proba_1.0], -1.40089316054 AS [LogProba_1.0], 0.21739130434782608 AS [Proba_2.0], -1.5260563035 AS [LogProba_2.0], 0.2463768115942029 AS [Proba_3.0], -1.40089316054 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.35 AS [Proba_0.0], -1.0498221245 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0.45 AS [Proba_2.0], -0.798507696218 AS [LogProba_2.0], 0.2 AS [Proba_3.0], -1.60943791243 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2653061224489796 AS [Proba_0.0], -1.32687094065 AS [LogProba_0.0], 0.3469387755102041 AS [Proba_1.0], -1.05860695405 AS [LogProba_1.0], 0.12244897959183673 AS [Proba_2.0], -2.10006082888 AS [LogProba_2.0], 0.2653061224489796 AS [Proba_3.0], -1.32687094065 AS [LogProba_3.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1875 AS [Proba_0.0], -1.67397643357 AS [LogProba_0.0], 0.125 AS [Proba_1.0], -2.07944154168 AS [LogProba_1.0], 0.4375 AS [Proba_2.0], -0.826678573184 AS [LogProba_2.0], 0.25 AS [Proba_3.0], -1.38629436112 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13333333333333333 AS [Proba_0.0], -2.01490302054 AS [LogProba_0.0], 0.4 AS [Proba_1.0], -0.916290731874 AS [LogProba_1.0], 0.13333333333333333 AS [Proba_2.0], -2.01490302054 AS [LogProba_2.0], 0.3333333333333333 AS [Proba_3.0], -1.09861228867 AS [LogProba_3.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Proba_0.0] AS [Proba_0.0], [DT_node_data_4].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_4].[Proba_1.0] AS [Proba_1.0], [DT_node_data_4].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_4].[Proba_2.0] AS [Proba_2.0], [DT_node_data_4].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_4].[Proba_3.0] AS [Proba_3.0], [DT_node_data_4].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_4].[Decision] AS [Decision] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, CAST(NULL AS FLOAT) AS [Score_4_0], [DT_Output_4].[Proba_0.0] AS [Proba_4_0], [DT_Output_4].[LogProba_0.0] AS [LogProba_4_0], CAST(NULL AS FLOAT) AS [Score_4_1], [DT_Output_4].[Proba_1.0] AS [Proba_4_1], [DT_Output_4].[LogProba_1.0] AS [LogProba_4_1], CAST(NULL AS FLOAT) AS [Score_4_2], [DT_Output_4].[Proba_2.0] AS [Proba_4_2], [DT_Output_4].[LogProba_2.0] AS [LogProba_4_2], CAST(NULL AS FLOAT) AS [Score_4_3], [DT_Output_4].[Proba_3.0] AS [Proba_4_3], [DT_Output_4].[LogProba_3.0] AS [LogProba_4_3] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= 0.40166840185113273) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_12 <= 0.5749601358706866) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_18' AS feature, 0.40166840185113273 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, 0.5749601358706866 AS threshold, 71 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.22535211267605634 AS [Proba_0.0], -1.4900911548 AS [LogProba_0.0], 0.23943661971830985 AS [Proba_1.0], -1.42946653299 AS [LogProba_1.0], 0.2535211267605634 AS [Proba_2.0], -1.37230811915 AS [LogProba_2.0], 0.28169014084507044 AS [Proba_3.0], -1.26694760349 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2641509433962264 AS [Proba_0.0], -1.33123458394 AS [LogProba_0.0], 0.20754716981132076 AS [Proba_1.0], -1.57239664075 AS [LogProba_1.0], 0.3018867924528302 AS [Proba_2.0], -1.19770319131 AS [LogProba_2.0], 0.22641509433962265 AS [Proba_3.0], -1.48538526376 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS [Proba_0.0], -2.19722457734 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0.1111111111111111 AS [Proba_2.0], -2.19722457734 AS [LogProba_2.0], 0.4444444444444444 AS [Proba_3.0], -0.810930216216 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3103448275862069 AS [Proba_0.0], -1.17007125265 AS [LogProba_0.0], 0.27586206896551724 AS [Proba_1.0], -1.28785428831 AS [LogProba_1.0], 0.20689655172413793 AS [Proba_2.0], -1.57553636076 AS [LogProba_2.0], 0.20689655172413793 AS [Proba_3.0], -1.57553636076 AS [LogProba_3.0], 0 AS [Decision]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Proba_0.0] AS [Proba_0.0], [DT_node_data_5].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_5].[Proba_1.0] AS [Proba_1.0], [DT_node_data_5].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_5].[Proba_2.0] AS [Proba_2.0], [DT_node_data_5].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_5].[Proba_3.0] AS [Proba_3.0], [DT_node_data_5].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_5].[Decision] AS [Decision] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, CAST(NULL AS FLOAT) AS [Score_5_0], [DT_Output_5].[Proba_0.0] AS [Proba_5_0], [DT_Output_5].[LogProba_0.0] AS [LogProba_5_0], CAST(NULL AS FLOAT) AS [Score_5_1], [DT_Output_5].[Proba_1.0] AS [Proba_5_1], [DT_Output_5].[LogProba_1.0] AS [LogProba_5_1], CAST(NULL AS FLOAT) AS [Score_5_2], [DT_Output_5].[Proba_2.0] AS [Proba_5_2], [DT_Output_5].[LogProba_2.0] AS [LogProba_5_2], CAST(NULL AS FLOAT) AS [Score_5_3], [DT_Output_5].[Proba_3.0] AS [Proba_5_3], [DT_Output_5].[LogProba_3.0] AS [LogProba_5_3] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 1.0605852301643868) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, 1.0605852301643868 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25609756097560976 AS [Proba_0.0], -1.36219680954 AS [LogProba_0.0], 0.25609756097560976 AS [Proba_1.0], -1.36219680954 AS [LogProba_1.0], 0.2804878048780488 AS [Proba_2.0], -1.27122503134 AS [LogProba_2.0], 0.2073170731707317 AS [Proba_3.0], -1.57350590321 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS [Proba_0.0], -1.50407739678 AS [LogProba_0.0], 0.2222222222222222 AS [Proba_1.0], -1.50407739678 AS [LogProba_1.0], 0.05555555555555555 AS [Proba_2.0], -2.8903717579 AS [LogProba_2.0], 0.5 AS [Proba_3.0], -0.69314718056 AS [LogProba_3.0], 3 AS [Decision]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Proba_0.0] AS [Proba_0.0], [DT_node_data_6].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_6].[Proba_1.0] AS [Proba_1.0], [DT_node_data_6].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_6].[Proba_2.0] AS [Proba_2.0], [DT_node_data_6].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_6].[Proba_3.0] AS [Proba_3.0], [DT_node_data_6].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_6].[Decision] AS [Decision] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, CAST(NULL AS FLOAT) AS [Score_6_0], [DT_Output_6].[Proba_0.0] AS [Proba_6_0], [DT_Output_6].[LogProba_0.0] AS [LogProba_6_0], CAST(NULL AS FLOAT) AS [Score_6_1], [DT_Output_6].[Proba_1.0] AS [Proba_6_1], [DT_Output_6].[LogProba_1.0] AS [LogProba_6_1], CAST(NULL AS FLOAT) AS [Score_6_2], [DT_Output_6].[Proba_2.0] AS [Proba_6_2], [DT_Output_6].[LogProba_2.0] AS [LogProba_6_2], CAST(NULL AS FLOAT) AS [Score_6_3], [DT_Output_6].[Proba_3.0] AS [Proba_6_3], [DT_Output_6].[LogProba_3.0] AS [LogProba_6_3] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], 0 AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Proba_0.0] AS [Proba_0.0], [DT_node_data_7].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_7].[Proba_1.0] AS [Proba_1.0], [DT_node_data_7].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_7].[Proba_2.0] AS [Proba_2.0], [DT_node_data_7].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_7].[Proba_3.0] AS [Proba_3.0], [DT_node_data_7].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_7].[Decision] AS [Decision] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, CAST(NULL AS FLOAT) AS [Score_7_0], [DT_Output_7].[Proba_0.0] AS [Proba_7_0], [DT_Output_7].[LogProba_0.0] AS [LogProba_7_0], CAST(NULL AS FLOAT) AS [Score_7_1], [DT_Output_7].[Proba_1.0] AS [Proba_7_1], [DT_Output_7].[LogProba_1.0] AS [LogProba_7_1], CAST(NULL AS FLOAT) AS [Score_7_2], [DT_Output_7].[Proba_2.0] AS [Proba_7_2], [DT_Output_7].[LogProba_2.0] AS [LogProba_7_2], CAST(NULL AS FLOAT) AS [Score_7_3], [DT_Output_7].[Proba_3.0] AS [Proba_7_3], [DT_Output_7].[LogProba_3.0] AS [LogProba_7_3] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], 0 AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Proba_0.0] AS [Proba_0.0], [DT_node_data_8].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_8].[Proba_1.0] AS [Proba_1.0], [DT_node_data_8].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_8].[Proba_2.0] AS [Proba_2.0], [DT_node_data_8].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_8].[Proba_3.0] AS [Proba_3.0], [DT_node_data_8].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_8].[Decision] AS [Decision] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, CAST(NULL AS FLOAT) AS [Score_8_0], [DT_Output_8].[Proba_0.0] AS [Proba_8_0], [DT_Output_8].[LogProba_0.0] AS [LogProba_8_0], CAST(NULL AS FLOAT) AS [Score_8_1], [DT_Output_8].[Proba_1.0] AS [Proba_8_1], [DT_Output_8].[LogProba_1.0] AS [LogProba_8_1], CAST(NULL AS FLOAT) AS [Score_8_2], [DT_Output_8].[Proba_2.0] AS [Proba_8_2], [DT_Output_8].[LogProba_2.0] AS [LogProba_8_2], CAST(NULL AS FLOAT) AS [Score_8_3], [DT_Output_8].[Proba_3.0] AS [Proba_8_3], [DT_Output_8].[LogProba_3.0] AS [LogProba_8_3] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= -0.5321097749844708) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= 0.43346056212794526) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.3612183273079419) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Proba_2.0] AS [Proba_2.0], [Values].[LogProba_2.0] AS [LogProba_2.0], [Values].[Proba_3.0] AS [Proba_3.0], [Values].[LogProba_3.0] AS [LogProba_3.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'anoova_18' AS feature, -0.5321097749844708 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS [Proba_0.0], -1.38629436112 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0.24 AS [Proba_2.0], -1.42711635564 AS [LogProba_2.0], 0.26 AS [Proba_3.0], -1.34707364797 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3181818181818182 AS [Proba_0.0], -1.1451323043 AS [LogProba_0.0], 0.3181818181818182 AS [Proba_1.0], -1.1451323043 AS [LogProba_1.0], 0.18181818181818182 AS [Proba_2.0], -1.70474809224 AS [LogProba_2.0], 0.18181818181818182 AS [Proba_3.0], -1.70474809224 AS [LogProba_3.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, 0.43346056212794526 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23076923076923078 AS [Proba_0.0], -1.46633706879 AS [LogProba_0.0], 0.23076923076923078 AS [Proba_1.0], -1.46633706879 AS [LogProba_1.0], 0.2564102564102564 AS [Proba_2.0], -1.36097655314 AS [LogProba_2.0], 0.28205128205128205 AS [Proba_3.0], -1.26566637333 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 3 AS node_id, 'anoova_17' AS feature, -0.3612183273079419 AS threshold, 53 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.20754716981132076 AS [Proba_0.0], -1.57239664075 AS [LogProba_0.0], 0.20754716981132076 AS [Proba_1.0], -1.57239664075 AS [LogProba_1.0], 0.3018867924528302 AS [Proba_2.0], -1.19770319131 AS [LogProba_2.0], 0.2830188679245283 AS [Proba_3.0], -1.26224171245 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17391304347826086 AS [Proba_0.0], -1.74919985481 AS [LogProba_0.0], 0.21739130434782608 AS [Proba_1.0], -1.5260563035 AS [LogProba_1.0], 0.34782608695652173 AS [Proba_2.0], -1.05605267425 AS [LogProba_2.0], 0.2608695652173913 AS [Proba_3.0], -1.3437347467 AS [LogProba_3.0], 2 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23333333333333334 AS [Proba_0.0], -1.45528723261 AS [LogProba_0.0], 0.2 AS [Proba_1.0], -1.60943791243 AS [LogProba_1.0], 0.26666666666666666 AS [Proba_2.0], -1.32175583998 AS [LogProba_2.0], 0.3 AS [Proba_3.0], -1.20397280433 AS [LogProba_3.0], 3 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.28 AS [Proba_0.0], -1.27296567581 AS [LogProba_0.0], 0.28 AS [Proba_1.0], -1.27296567581 AS [LogProba_1.0], 0.16 AS [Proba_2.0], -1.83258146375 AS [LogProba_2.0], 0.28 AS [Proba_3.0], -1.27296567581 AS [LogProba_3.0], 0 AS [Decision]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Proba_0.0] AS [Proba_0.0], [DT_node_data_9].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_9].[Proba_1.0] AS [Proba_1.0], [DT_node_data_9].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_9].[Proba_2.0] AS [Proba_2.0], [DT_node_data_9].[LogProba_2.0] AS [LogProba_2.0], [DT_node_data_9].[Proba_3.0] AS [Proba_3.0], [DT_node_data_9].[LogProba_3.0] AS [LogProba_3.0], [DT_node_data_9].[Decision] AS [Decision] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, CAST(NULL AS FLOAT) AS [Score_9_0], [DT_Output_9].[Proba_0.0] AS [Proba_9_0], [DT_Output_9].[LogProba_0.0] AS [LogProba_9_0], CAST(NULL AS FLOAT) AS [Score_9_1], [DT_Output_9].[Proba_1.0] AS [Proba_9_1], [DT_Output_9].[LogProba_1.0] AS [LogProba_9_1], CAST(NULL AS FLOAT) AS [Score_9_2], [DT_Output_9].[Proba_2.0] AS [Proba_9_2], [DT_Output_9].[LogProba_2.0] AS [LogProba_9_2], CAST(NULL AS FLOAT) AS [Score_9_3], [DT_Output_9].[Proba_3.0] AS [Proba_9_3], [DT_Output_9].[LogProba_3.0] AS [LogProba_9_3] 
FROM [DT_Output_9]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Score_0_0] AS [Score_0_0], [RF_Tree_0].[Proba_0_0] AS [Proba_0_0], [RF_Tree_0].[LogProba_0_0] AS [LogProba_0_0], [RF_Tree_0].[Score_0_1] AS [Score_0_1], [RF_Tree_0].[Proba_0_1] AS [Proba_0_1], [RF_Tree_0].[LogProba_0_1] AS [LogProba_0_1], [RF_Tree_0].[Score_0_2] AS [Score_0_2], [RF_Tree_0].[Proba_0_2] AS [Proba_0_2], [RF_Tree_0].[LogProba_0_2] AS [LogProba_0_2], [RF_Tree_0].[Score_0_3] AS [Score_0_3], [RF_Tree_0].[Proba_0_3] AS [Proba_0_3], [RF_Tree_0].[LogProba_0_3] AS [LogProba_0_3], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Score_1_0] AS [Score_1_0], [RF_Tree_1].[Proba_1_0] AS [Proba_1_0], [RF_Tree_1].[LogProba_1_0] AS [LogProba_1_0], [RF_Tree_1].[Score_1_1] AS [Score_1_1], [RF_Tree_1].[Proba_1_1] AS [Proba_1_1], [RF_Tree_1].[LogProba_1_1] AS [LogProba_1_1], [RF_Tree_1].[Score_1_2] AS [Score_1_2], [RF_Tree_1].[Proba_1_2] AS [Proba_1_2], [RF_Tree_1].[LogProba_1_2] AS [LogProba_1_2], [RF_Tree_1].[Score_1_3] AS [Score_1_3], [RF_Tree_1].[Proba_1_3] AS [Proba_1_3], [RF_Tree_1].[LogProba_1_3] AS [LogProba_1_3], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Score_2_0] AS [Score_2_0], [RF_Tree_2].[Proba_2_0] AS [Proba_2_0], [RF_Tree_2].[LogProba_2_0] AS [LogProba_2_0], [RF_Tree_2].[Score_2_1] AS [Score_2_1], [RF_Tree_2].[Proba_2_1] AS [Proba_2_1], [RF_Tree_2].[LogProba_2_1] AS [LogProba_2_1], [RF_Tree_2].[Score_2_2] AS [Score_2_2], [RF_Tree_2].[Proba_2_2] AS [Proba_2_2], [RF_Tree_2].[LogProba_2_2] AS [LogProba_2_2], [RF_Tree_2].[Score_2_3] AS [Score_2_3], [RF_Tree_2].[Proba_2_3] AS [Proba_2_3], [RF_Tree_2].[LogProba_2_3] AS [LogProba_2_3], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Score_3_0] AS [Score_3_0], [RF_Tree_3].[Proba_3_0] AS [Proba_3_0], [RF_Tree_3].[LogProba_3_0] AS [LogProba_3_0], [RF_Tree_3].[Score_3_1] AS [Score_3_1], [RF_Tree_3].[Proba_3_1] AS [Proba_3_1], [RF_Tree_3].[LogProba_3_1] AS [LogProba_3_1], [RF_Tree_3].[Score_3_2] AS [Score_3_2], [RF_Tree_3].[Proba_3_2] AS [Proba_3_2], [RF_Tree_3].[LogProba_3_2] AS [LogProba_3_2], [RF_Tree_3].[Score_3_3] AS [Score_3_3], [RF_Tree_3].[Proba_3_3] AS [Proba_3_3], [RF_Tree_3].[LogProba_3_3] AS [LogProba_3_3], [RF_Tree_4].join_key_4 AS join_key_4, [RF_Tree_4].[Score_4_0] AS [Score_4_0], [RF_Tree_4].[Proba_4_0] AS [Proba_4_0], [RF_Tree_4].[LogProba_4_0] AS [LogProba_4_0], [RF_Tree_4].[Score_4_1] AS [Score_4_1], [RF_Tree_4].[Proba_4_1] AS [Proba_4_1], [RF_Tree_4].[LogProba_4_1] AS [LogProba_4_1], [RF_Tree_4].[Score_4_2] AS [Score_4_2], [RF_Tree_4].[Proba_4_2] AS [Proba_4_2], [RF_Tree_4].[LogProba_4_2] AS [LogProba_4_2], [RF_Tree_4].[Score_4_3] AS [Score_4_3], [RF_Tree_4].[Proba_4_3] AS [Proba_4_3], [RF_Tree_4].[LogProba_4_3] AS [LogProba_4_3], [RF_Tree_5].join_key_5 AS join_key_5, [RF_Tree_5].[Score_5_0] AS [Score_5_0], [RF_Tree_5].[Proba_5_0] AS [Proba_5_0], [RF_Tree_5].[LogProba_5_0] AS [LogProba_5_0], [RF_Tree_5].[Score_5_1] AS [Score_5_1], [RF_Tree_5].[Proba_5_1] AS [Proba_5_1], [RF_Tree_5].[LogProba_5_1] AS [LogProba_5_1], [RF_Tree_5].[Score_5_2] AS [Score_5_2], [RF_Tree_5].[Proba_5_2] AS [Proba_5_2], [RF_Tree_5].[LogProba_5_2] AS [LogProba_5_2], [RF_Tree_5].[Score_5_3] AS [Score_5_3], [RF_Tree_5].[Proba_5_3] AS [Proba_5_3], [RF_Tree_5].[LogProba_5_3] AS [LogProba_5_3], [RF_Tree_6].join_key_6 AS join_key_6, [RF_Tree_6].[Score_6_0] AS [Score_6_0], [RF_Tree_6].[Proba_6_0] AS [Proba_6_0], [RF_Tree_6].[LogProba_6_0] AS [LogProba_6_0], [RF_Tree_6].[Score_6_1] AS [Score_6_1], [RF_Tree_6].[Proba_6_1] AS [Proba_6_1], [RF_Tree_6].[LogProba_6_1] AS [LogProba_6_1], [RF_Tree_6].[Score_6_2] AS [Score_6_2], [RF_Tree_6].[Proba_6_2] AS [Proba_6_2], [RF_Tree_6].[LogProba_6_2] AS [LogProba_6_2], [RF_Tree_6].[Score_6_3] AS [Score_6_3], [RF_Tree_6].[Proba_6_3] AS [Proba_6_3], [RF_Tree_6].[LogProba_6_3] AS [LogProba_6_3], [RF_Tree_7].join_key_7 AS join_key_7, [RF_Tree_7].[Score_7_0] AS [Score_7_0], [RF_Tree_7].[Proba_7_0] AS [Proba_7_0], [RF_Tree_7].[LogProba_7_0] AS [LogProba_7_0], [RF_Tree_7].[Score_7_1] AS [Score_7_1], [RF_Tree_7].[Proba_7_1] AS [Proba_7_1], [RF_Tree_7].[LogProba_7_1] AS [LogProba_7_1], [RF_Tree_7].[Score_7_2] AS [Score_7_2], [RF_Tree_7].[Proba_7_2] AS [Proba_7_2], [RF_Tree_7].[LogProba_7_2] AS [LogProba_7_2], [RF_Tree_7].[Score_7_3] AS [Score_7_3], [RF_Tree_7].[Proba_7_3] AS [Proba_7_3], [RF_Tree_7].[LogProba_7_3] AS [LogProba_7_3], [RF_Tree_8].join_key_8 AS join_key_8, [RF_Tree_8].[Score_8_0] AS [Score_8_0], [RF_Tree_8].[Proba_8_0] AS [Proba_8_0], [RF_Tree_8].[LogProba_8_0] AS [LogProba_8_0], [RF_Tree_8].[Score_8_1] AS [Score_8_1], [RF_Tree_8].[Proba_8_1] AS [Proba_8_1], [RF_Tree_8].[LogProba_8_1] AS [LogProba_8_1], [RF_Tree_8].[Score_8_2] AS [Score_8_2], [RF_Tree_8].[Proba_8_2] AS [Proba_8_2], [RF_Tree_8].[LogProba_8_2] AS [LogProba_8_2], [RF_Tree_8].[Score_8_3] AS [Score_8_3], [RF_Tree_8].[Proba_8_3] AS [Proba_8_3], [RF_Tree_8].[LogProba_8_3] AS [LogProba_8_3], [RF_Tree_9].join_key_9 AS join_key_9, [RF_Tree_9].[Score_9_0] AS [Score_9_0], [RF_Tree_9].[Proba_9_0] AS [Proba_9_0], [RF_Tree_9].[LogProba_9_0] AS [LogProba_9_0], [RF_Tree_9].[Score_9_1] AS [Score_9_1], [RF_Tree_9].[Proba_9_1] AS [Proba_9_1], [RF_Tree_9].[LogProba_9_1] AS [LogProba_9_1], [RF_Tree_9].[Score_9_2] AS [Score_9_2], [RF_Tree_9].[Proba_9_2] AS [Proba_9_2], [RF_Tree_9].[LogProba_9_2] AS [LogProba_9_2], [RF_Tree_9].[Score_9_3] AS [Score_9_3], [RF_Tree_9].[Proba_9_3] AS [Proba_9_3], [RF_Tree_9].[LogProba_9_3] AS [LogProba_9_3] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2 LEFT OUTER JOIN [RF_Tree_4] ON [RF_Tree_4].join_key_4 = [RF_Tree_3].join_key_3 LEFT OUTER JOIN [RF_Tree_5] ON [RF_Tree_5].join_key_5 = [RF_Tree_4].join_key_4 LEFT OUTER JOIN [RF_Tree_6] ON [RF_Tree_6].join_key_6 = [RF_Tree_5].join_key_5 LEFT OUTER JOIN [RF_Tree_7] ON [RF_Tree_7].join_key_7 = [RF_Tree_6].join_key_6 LEFT OUTER JOIN [RF_Tree_8] ON [RF_Tree_8].join_key_8 = [RF_Tree_7].join_key_7 LEFT OUTER JOIN [RF_Tree_9] ON [RF_Tree_9].join_key_9 = [RF_Tree_8].join_key_8), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Score_0_0] / 10 + [RF_Join_CTE].[Score_1_0] / 10 + [RF_Join_CTE].[Score_2_0] / 10 + [RF_Join_CTE].[Score_3_0] / 10 + [RF_Join_CTE].[Score_4_0] / 10 + [RF_Join_CTE].[Score_5_0] / 10 + [RF_Join_CTE].[Score_6_0] / 10 + [RF_Join_CTE].[Score_7_0] / 10 + [RF_Join_CTE].[Score_8_0] / 10 + [RF_Join_CTE].[Score_9_0] / 10 AS [Score_0], [RF_Join_CTE].[Proba_0_0] / 10 + [RF_Join_CTE].[Proba_1_0] / 10 + [RF_Join_CTE].[Proba_2_0] / 10 + [RF_Join_CTE].[Proba_3_0] / 10 + [RF_Join_CTE].[Proba_4_0] / 10 + [RF_Join_CTE].[Proba_5_0] / 10 + [RF_Join_CTE].[Proba_6_0] / 10 + [RF_Join_CTE].[Proba_7_0] / 10 + [RF_Join_CTE].[Proba_8_0] / 10 + [RF_Join_CTE].[Proba_9_0] / 10 AS [Proba_0], [RF_Join_CTE].[LogProba_0_0] / 10 + [RF_Join_CTE].[LogProba_1_0] / 10 + [RF_Join_CTE].[LogProba_2_0] / 10 + [RF_Join_CTE].[LogProba_3_0] / 10 + [RF_Join_CTE].[LogProba_4_0] / 10 + [RF_Join_CTE].[LogProba_5_0] / 10 + [RF_Join_CTE].[LogProba_6_0] / 10 + [RF_Join_CTE].[LogProba_7_0] / 10 + [RF_Join_CTE].[LogProba_8_0] / 10 + [RF_Join_CTE].[LogProba_9_0] / 10 AS [LogProba_0], [RF_Join_CTE].[Score_0_1] / 10 + [RF_Join_CTE].[Score_1_1] / 10 + [RF_Join_CTE].[Score_2_1] / 10 + [RF_Join_CTE].[Score_3_1] / 10 + [RF_Join_CTE].[Score_4_1] / 10 + [RF_Join_CTE].[Score_5_1] / 10 + [RF_Join_CTE].[Score_6_1] / 10 + [RF_Join_CTE].[Score_7_1] / 10 + [RF_Join_CTE].[Score_8_1] / 10 + [RF_Join_CTE].[Score_9_1] / 10 AS [Score_1], [RF_Join_CTE].[Proba_0_1] / 10 + [RF_Join_CTE].[Proba_1_1] / 10 + [RF_Join_CTE].[Proba_2_1] / 10 + [RF_Join_CTE].[Proba_3_1] / 10 + [RF_Join_CTE].[Proba_4_1] / 10 + [RF_Join_CTE].[Proba_5_1] / 10 + [RF_Join_CTE].[Proba_6_1] / 10 + [RF_Join_CTE].[Proba_7_1] / 10 + [RF_Join_CTE].[Proba_8_1] / 10 + [RF_Join_CTE].[Proba_9_1] / 10 AS [Proba_1], [RF_Join_CTE].[LogProba_0_1] / 10 + [RF_Join_CTE].[LogProba_1_1] / 10 + [RF_Join_CTE].[LogProba_2_1] / 10 + [RF_Join_CTE].[LogProba_3_1] / 10 + [RF_Join_CTE].[LogProba_4_1] / 10 + [RF_Join_CTE].[LogProba_5_1] / 10 + [RF_Join_CTE].[LogProba_6_1] / 10 + [RF_Join_CTE].[LogProba_7_1] / 10 + [RF_Join_CTE].[LogProba_8_1] / 10 + [RF_Join_CTE].[LogProba_9_1] / 10 AS [LogProba_1], [RF_Join_CTE].[Score_0_2] / 10 + [RF_Join_CTE].[Score_1_2] / 10 + [RF_Join_CTE].[Score_2_2] / 10 + [RF_Join_CTE].[Score_3_2] / 10 + [RF_Join_CTE].[Score_4_2] / 10 + [RF_Join_CTE].[Score_5_2] / 10 + [RF_Join_CTE].[Score_6_2] / 10 + [RF_Join_CTE].[Score_7_2] / 10 + [RF_Join_CTE].[Score_8_2] / 10 + [RF_Join_CTE].[Score_9_2] / 10 AS [Score_2], [RF_Join_CTE].[Proba_0_2] / 10 + [RF_Join_CTE].[Proba_1_2] / 10 + [RF_Join_CTE].[Proba_2_2] / 10 + [RF_Join_CTE].[Proba_3_2] / 10 + [RF_Join_CTE].[Proba_4_2] / 10 + [RF_Join_CTE].[Proba_5_2] / 10 + [RF_Join_CTE].[Proba_6_2] / 10 + [RF_Join_CTE].[Proba_7_2] / 10 + [RF_Join_CTE].[Proba_8_2] / 10 + [RF_Join_CTE].[Proba_9_2] / 10 AS [Proba_2], [RF_Join_CTE].[LogProba_0_2] / 10 + [RF_Join_CTE].[LogProba_1_2] / 10 + [RF_Join_CTE].[LogProba_2_2] / 10 + [RF_Join_CTE].[LogProba_3_2] / 10 + [RF_Join_CTE].[LogProba_4_2] / 10 + [RF_Join_CTE].[LogProba_5_2] / 10 + [RF_Join_CTE].[LogProba_6_2] / 10 + [RF_Join_CTE].[LogProba_7_2] / 10 + [RF_Join_CTE].[LogProba_8_2] / 10 + [RF_Join_CTE].[LogProba_9_2] / 10 AS [LogProba_2], [RF_Join_CTE].[Score_0_3] / 10 + [RF_Join_CTE].[Score_1_3] / 10 + [RF_Join_CTE].[Score_2_3] / 10 + [RF_Join_CTE].[Score_3_3] / 10 + [RF_Join_CTE].[Score_4_3] / 10 + [RF_Join_CTE].[Score_5_3] / 10 + [RF_Join_CTE].[Score_6_3] / 10 + [RF_Join_CTE].[Score_7_3] / 10 + [RF_Join_CTE].[Score_8_3] / 10 + [RF_Join_CTE].[Score_9_3] / 10 AS [Score_3], [RF_Join_CTE].[Proba_0_3] / 10 + [RF_Join_CTE].[Proba_1_3] / 10 + [RF_Join_CTE].[Proba_2_3] / 10 + [RF_Join_CTE].[Proba_3_3] / 10 + [RF_Join_CTE].[Proba_4_3] / 10 + [RF_Join_CTE].[Proba_5_3] / 10 + [RF_Join_CTE].[Proba_6_3] / 10 + [RF_Join_CTE].[Proba_7_3] / 10 + [RF_Join_CTE].[Proba_8_3] / 10 + [RF_Join_CTE].[Proba_9_3] / 10 AS [Proba_3], [RF_Join_CTE].[LogProba_0_3] / 10 + [RF_Join_CTE].[LogProba_1_3] / 10 + [RF_Join_CTE].[LogProba_2_3] / 10 + [RF_Join_CTE].[LogProba_3_3] / 10 + [RF_Join_CTE].[LogProba_4_3] / 10 + [RF_Join_CTE].[LogProba_5_3] / 10 + [RF_Join_CTE].[LogProba_6_3] / 10 + [RF_Join_CTE].[LogProba_7_3] / 10 + [RF_Join_CTE].[LogProba_8_3] / 10 + [RF_Join_CTE].[LogProba_9_3] / 10 AS [LogProba_3] 
FROM [RF_Join_CTE]), 
orig_cte AS 
(SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Score_0] AS [Score_0], [RF_AVG_Scores].[Score_1] AS [Score_1], [RF_AVG_Scores].[Score_2] AS [Score_2], [RF_AVG_Scores].[Score_3] AS [Score_3], [RF_AVG_Scores].[Proba_0] AS [Proba_0], [RF_AVG_Scores].[Proba_1] AS [Proba_1], [RF_AVG_Scores].[Proba_2] AS [Proba_2], [RF_AVG_Scores].[Proba_3] AS [Proba_3], [RF_AVG_Scores].[LogProba_0] AS [LogProba_0], [RF_AVG_Scores].[LogProba_1] AS [LogProba_1], [RF_AVG_Scores].[LogProba_2] AS [LogProba_2], [RF_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [RF_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Proba] AS [Decision] 
FROM arg_max_cte