-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= -0.006147915469386506) THEN CASE WHEN ("ADS"."Feature_8" <= -0.0019673261292432603) THEN CASE WHEN ("ADS"."Feature_1" <= 0.0028721373656503124) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.05663360709723797) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.03119844146021667) THEN CASE WHEN ("ADS"."Feature_1" <= 0.022639431343715738) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.008082046228983342) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_6' AS feature, -0.006147915469386506 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, -0.0019673261292432603 AS threshold, 228 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 177.17105263157896 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.0028721373656503124 AS threshold, 68 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 125.80882352941177 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 149.76 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 111.88372093023256 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 0.05663360709723797 AS threshold, 160 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 199.0 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 122 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 188.172131147541 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 233.76315789473685 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, -0.03119844146021667 AS threshold, 214 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 125.45794392523365 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.022639431343715738 AS threshold, 83 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 92.56626506024097 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 68 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 94.92647058823529 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 81.86666666666666 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.008082046228983342 AS threshold, 131 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 146.29770992366412 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.9746835443038 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 190.84615384615384 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.007892572736656348) THEN CASE WHEN ("ADS"."Feature_7" <= 0.03850143314895699) THEN CASE WHEN ("ADS"."Feature_8" <= 0.007718665763431276) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.026397508949487752) THEN CASE WHEN ("ADS"."Feature_3" <= 0.04186041370566669) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.04275169698676784) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.007892572736656348 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 0.03850143314895699 AS threshold, 275 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.56 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.007718665763431276 AS threshold, 249 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 114.32530120481928 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 191 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 101.13612565445027 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 58 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 157.75862068965517 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 180.26923076923077 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'Feature_5' AS feature, 0.026397508949487752 AS threshold, 167 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 204.125748502994 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, 0.04186041370566669 AS threshold, 109 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 208.03669724770643 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 188.921875 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 235.22222222222223 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'Feature_8' AS feature, 0.04275169698676784 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 196.77586206896552 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 176.42424242424244 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 223.64 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.021314200524514007) THEN CASE WHEN ("ADS"."Feature_8" <= 0.066873983862488) THEN CASE WHEN ("ADS"."Feature_6" <= 0.019883789185119072) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.021174433865148418) THEN CASE WHEN ("ADS"."Feature_3" <= 0.020692370496640897) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.051074281165868624) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.021314200524514007 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.066873983862488 AS threshold, 312 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 128.91346153846155 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.019883789185119072 AS threshold, 297 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 125.91919191919192 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 187 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 141.7058823529412 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 110 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 99.08181818181818 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 188.2 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'Feature_8' AS feature, 0.021174433865148418 AS threshold, 130 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 207.86153846153846 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, 0.020692370496640897 AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 171.27272727272728 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 146.55882352941177 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 211.28571428571428 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'Feature_9' AS feature, 0.051074281165868624 AS threshold, 75 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 234.69333333333333 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 223.1764705882353 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 259.1666666666667 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.03234527101129049) THEN CASE WHEN ("ADS"."Feature_1" <= -0.03983733143255044) THEN CASE WHEN ("ADS"."Feature_8" <= -0.01491564403921529) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.04582250358097868) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.01209414055975662) THEN CASE WHEN ("ADS"."Feature_8" <= 0.006943002470298859) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.009450815985963298) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.03234527101129049 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.03983733143255044 AS threshold, 119 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 103.90756302521008 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.01491564403921529 AS threshold, 84 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 106.91666666666667 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 95.19047619047619 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 142.0952380952381 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, -0.04582250358097868 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 96.68571428571428 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 82.58823529411765 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 110.0 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, 0.01209414055975662 AS threshold, 323 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 169.90092879256966 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.006943002470298859 AS threshold, 190 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.7 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 128.5609756097561 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 197.01492537313433 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_8' AS feature, 0.009450815985963298 AS threshold, 133 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 194.47368421052633 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 151.82758620689654 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 206.3653846153846 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= -0.0044214102532682265) THEN CASE WHEN ("ADS"."Feature_7" <= 0.00212463890485709) THEN CASE WHEN ("ADS"."Feature_9" <= 0.031197497328842444) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.01044037583096824) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.01806425154089719) THEN CASE WHEN ("ADS"."Feature_1" <= 0.03559167789237837) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.040421425448682075) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.0044214102532682265 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 0.00212463890485709 AS threshold, 232 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.12068965517241 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_9' AS feature, 0.031197497328842444 AS threshold, 178 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 104.29775280898876 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 162 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 102.40123456790124 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 123.5 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, 0.01044037583096824 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 155.09259259259258 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 124.45 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 173.11764705882354 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, -0.01806425154089719 AS threshold, 210 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 191.91904761904763 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 0.03559167789237837 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 162.5 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 177.25581395348837 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.2 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, 0.040421425448682075 AS threshold, 152 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 203.14473684210526 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 112 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 191.24107142857142 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 236.475 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.020239010353484577) THEN CASE WHEN ("ADS"."Feature_8" <= 0.04131180444351451) THEN CASE WHEN ("ADS"."Feature_8" <= 0.011942704789468517) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.007342296087819493) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.03174263723575145) THEN CASE WHEN ("ADS"."Feature_8" <= -0.006642759865503264) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.017115537269417377) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.020239010353484577 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_8' AS feature, 0.04131180444351451 AS threshold, 292 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 130.3458904109589 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.011942704789468517 AS threshold, 254 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.25984251968504 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 207 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 109.57004830917874 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 167.3404255319149 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.007342296087819493 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 197.76315789473685 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 207.77272727272728 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 184.0 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.03174263723575145 AS threshold, 150 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 194.54666666666665 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, -0.006642759865503264 AS threshold, 93 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 165.31182795698925 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.65384615384616 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 184.19402985074626 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_6' AS feature, -0.017115537269417377 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 242.24561403508773 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 260.25714285714287 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 213.5909090909091 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" <= 0.013415655130301102) THEN CASE WHEN ("ADS"."Feature_2" <= 0.014044987220913588) THEN CASE WHEN ("ADS"."Feature_8" <= 0.018395785911393486) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.03170996546691601) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.008044710880073608) THEN CASE WHEN ("ADS"."Feature_9" <= 0.003479311000384455) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.034858876857836674) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, 0.013415655130301102 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.014044987220913588 AS threshold, 282 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 139.04609929078015 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.018395785911393486 AS threshold, 201 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.1094527363184 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 176 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 107.23863636363636 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 178.56 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 0.03170996546691601 AS threshold, 81 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 195.96296296296296 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 64 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 185.296875 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 236.11764705882354 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, 0.008044710880073608 AS threshold, 160 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 175.2 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.003479311000384455 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 130.62745098039215 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 122.06451612903226 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 143.9 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.034858876857836674 AS threshold, 109 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 196.05504587155963 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 178.82608695652175 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 225.775 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, "DT_Output_6"."Estimator" AS "Estimator_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= 0.01877597142234322) THEN CASE WHEN ("ADS"."Feature_2" <= 0.050883845492190966) THEN CASE WHEN ("ADS"."Feature_7" <= -0.042146836953470115) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_8" <= -0.020332378367123524) THEN 7 ELSE CASE WHEN ("ADS"."Feature_3" <= 0.007588417139521256) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.01877597142234322 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.050883845492190966 AS threshold, 293 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 133.2627986348123 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, -0.042146836953470115 AS threshold, 267 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 127.13483146067416 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 91.06896551724138 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 238 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 131.52941176470588 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 196.19230769230768 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'Feature_8' AS feature, -0.020332378367123524 AS threshold, 149 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 189.24161073825502 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 112.0 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.007588417139521256 AS threshold, 124 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 204.81451612903226 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 176.5625 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 222.6578947368421 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, "DT_Output_7"."Estimator" AS "Estimator_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= 0.05264756514427146) THEN CASE WHEN ("ADS"."Feature_2" <= 0.01695901923324268) THEN CASE WHEN ("ADS"."Feature_7" <= 0.022481698807616968) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_8" <= -0.012861412523717891) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.0017831506236936773) THEN 9 ELSE CASE WHEN ("ADS"."Feature_1" <= 0.04794217756103304) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.05264756514427146 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.01695901923324268 AS threshold, 380 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 140.99473684210525 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 0.022481698807616968 AS threshold, 276 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.6231884057971 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 217 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 108.36866359447005 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 59 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 165.6949152542373 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, -0.012861412523717891 AS threshold, 104 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 195.05769230769232 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 156.5142857142857 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 214.6086956521739 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, -0.0017831506236936773 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 220.40322580645162 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 188.13333333333333 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'Feature_1' AS feature, 0.04794217756103304 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 230.70212765957447 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 242.04166666666666 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 218.8695652173913 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, "DT_Output_8"."Estimator" AS "Estimator_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.014240903397174764) THEN CASE WHEN ("ADS"."Feature_7" <= -0.024986232838404586) THEN CASE WHEN ("ADS"."Feature_8" <= -0.0317423243739913) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.016002619569521717) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 0.03547579034398403) THEN CASE WHEN ("ADS"."Feature_8" <= 0.010508272706227118) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.06983097107008435) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.014240903397174764 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 152.13348416289594 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, -0.024986232838404586 AS threshold, 282 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 129.36524822695034 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.0317423243739913 AS threshold, 135 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 102.55555555555556 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 81 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 88.8641975308642 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 54 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 123.0925925925926 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, -0.016002619569521717 AS threshold, 147 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 153.98639455782313 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 115.23076923076923 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 95 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 175.2 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, 0.03547579034398403 AS threshold, 160 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 192.2625 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.010508272706227118 AS threshold, 104 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 175.01923076923077 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 153.75806451612902 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 206.4047619047619 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.06983097107008435 AS threshold, 56 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 224.28571428571428 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 214.15 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 249.625 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, "DT_Output_9"."Estimator" AS "Estimator_9" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Estimator_0" AS "Estimator_0", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Estimator_1" AS "Estimator_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Estimator_2" AS "Estimator_2", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Estimator_3" AS "Estimator_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Estimator_4" AS "Estimator_4", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Estimator_5" AS "Estimator_5", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Estimator_6" AS "Estimator_6", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Estimator_7" AS "Estimator_7", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Estimator_8" AS "Estimator_8", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Estimator_9" AS "Estimator_9" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Estimator_0" / 10 + "RF_Join_CTE"."Estimator_1" / 10 + "RF_Join_CTE"."Estimator_2" / 10 + "RF_Join_CTE"."Estimator_3" / 10 + "RF_Join_CTE"."Estimator_4" / 10 + "RF_Join_CTE"."Estimator_5" / 10 + "RF_Join_CTE"."Estimator_6" / 10 + "RF_Join_CTE"."Estimator_7" / 10 + "RF_Join_CTE"."Estimator_8" / 10 + "RF_Join_CTE"."Estimator_9" / 10 AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"