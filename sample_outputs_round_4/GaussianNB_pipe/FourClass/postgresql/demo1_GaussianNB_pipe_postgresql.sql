-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.460331902615 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.113925620956 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0418464137472 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -1.08626410425 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.923890901429 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.839913192618 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.177035309382 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0119778141225 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0140746715827 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.115790822524 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.114553480687 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.00499462370973 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.0145730978062 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0535822495861 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0741412313874 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.0293566574099 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.180717052667 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0210967054747 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.00289561974978 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.2481014791 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.460331902615 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.113925620956 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.0418464137472 AS impute_4, "ADS_imp_1_OUT".impute_5 - -1.08626410425 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.923890901429 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.839913192618 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.177035309382 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.0119778141225 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.0140746715827 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.115790822524 AS impute_11, "ADS_imp_1_OUT".impute_12 - 0.114553480687 AS impute_12, "ADS_imp_1_OUT".impute_13 - -0.00499462370973 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.0145730978062 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.0535822495861 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.0741412313874 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.0293566574099 AS impute_17, "ADS_imp_1_OUT".impute_18 - 0.180717052667 AS impute_18, "ADS_imp_1_OUT".impute_19 - 0.0210967054747 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.00289561974978 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.2481014791 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.145243500795 + "CenteredDataForPCA".impute_3 * -0.0134859616323 + "CenteredDataForPCA".impute_4 * 0.0179236639007 + "CenteredDataForPCA".impute_5 * -0.56010228091 + "CenteredDataForPCA".impute_6 * 0.635164133762 + "CenteredDataForPCA".impute_7 * -0.270367761593 + "CenteredDataForPCA".impute_8 * -0.0669760218329 + "CenteredDataForPCA".impute_9 * 0.0402644896008 + "CenteredDataForPCA".impute_10 * 0.0760936487944 + "CenteredDataForPCA".impute_11 * 0.368603056938 + "CenteredDataForPCA".impute_12 * -0.0554030095566 + "CenteredDataForPCA".impute_13 * -0.0202396404316 + "CenteredDataForPCA".impute_14 * -0.00190177690278 + "CenteredDataForPCA".impute_15 * 0.0313814246933 + "CenteredDataForPCA".impute_16 * 0.0654915174964 + "CenteredDataForPCA".impute_17 * -0.0120029605436 + "CenteredDataForPCA".impute_18 * -0.0456089277607 + "CenteredDataForPCA".impute_19 * 0.00197490085241 + "CenteredDataForPCA".impute_20 * -0.04641552654 + "CenteredDataForPCA".impute_21 * 0.165074897998 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.478700196099 + "CenteredDataForPCA".impute_3 * 0.0898054727453 + "CenteredDataForPCA".impute_4 * 0.000881202577571 + "CenteredDataForPCA".impute_5 * 0.0362980680826 + "CenteredDataForPCA".impute_6 * 0.106576250856 + "CenteredDataForPCA".impute_7 * -0.607903866528 + "CenteredDataForPCA".impute_8 * 0.0401970580807 + "CenteredDataForPCA".impute_9 * -0.00283171909634 + "CenteredDataForPCA".impute_10 * 0.102642875769 + "CenteredDataForPCA".impute_11 * -0.53183171584 + "CenteredDataForPCA".impute_12 * -0.106316386045 + "CenteredDataForPCA".impute_13 * -0.0516863944636 + "CenteredDataForPCA".impute_14 * -0.0331212428824 + "CenteredDataForPCA".impute_15 * -0.0396130214531 + "CenteredDataForPCA".impute_16 * 0.0811108183106 + "CenteredDataForPCA".impute_17 * -0.073883201337 + "CenteredDataForPCA".impute_18 * -0.0703066269168 + "CenteredDataForPCA".impute_19 * 0.10231274276 + "CenteredDataForPCA".impute_20 * -0.078008558767 + "CenteredDataForPCA".impute_21 * 0.188090394965 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.196889877717 + "CenteredDataForPCA".impute_3 * 0.170661196648 + "CenteredDataForPCA".impute_4 * 0.0212662485877 + "CenteredDataForPCA".impute_5 * 0.157796031218 + "CenteredDataForPCA".impute_6 * 0.147193078771 + "CenteredDataForPCA".impute_7 * 0.318422862848 + "CenteredDataForPCA".impute_8 * 0.0234689728046 + "CenteredDataForPCA".impute_9 * 0.136293969363 + "CenteredDataForPCA".impute_10 * -0.10786477868 + "CenteredDataForPCA".impute_11 * -0.201778279144 + "CenteredDataForPCA".impute_12 * -0.085316179107 + "CenteredDataForPCA".impute_13 * -0.300520457971 + "CenteredDataForPCA".impute_14 * -0.132492629155 + "CenteredDataForPCA".impute_15 * 0.0738140133198 + "CenteredDataForPCA".impute_16 * -0.015985459788 + "CenteredDataForPCA".impute_17 * 0.194765190963 + "CenteredDataForPCA".impute_18 * 0.0628739847171 + "CenteredDataForPCA".impute_19 * 0.0241965683071 + "CenteredDataForPCA".impute_20 * -0.0990413817666 + "CenteredDataForPCA".impute_21 * 0.73422831795 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.451685177922 + "CenteredDataForPCA".impute_3 * -0.0132497337217 + "CenteredDataForPCA".impute_4 * 0.0494670055558 + "CenteredDataForPCA".impute_5 * -0.129419525165 + "CenteredDataForPCA".impute_6 * 0.0105575300869 + "CenteredDataForPCA".impute_7 * -0.0817662734021 + "CenteredDataForPCA".impute_8 * -0.153654618178 + "CenteredDataForPCA".impute_9 * -0.277203205583 + "CenteredDataForPCA".impute_10 * -0.25580539075 + "CenteredDataForPCA".impute_11 * -0.434569579782 + "CenteredDataForPCA".impute_12 * -0.209235321825 + "CenteredDataForPCA".impute_13 * -0.0298363953254 + "CenteredDataForPCA".impute_14 * 0.438338108088 + "CenteredDataForPCA".impute_15 * 0.13272345854 + "CenteredDataForPCA".impute_16 * 0.133905751709 + "CenteredDataForPCA".impute_17 * -0.073558938838 + "CenteredDataForPCA".impute_18 * -0.0632676447541 + "CenteredDataForPCA".impute_19 * -0.353661825294 + "CenteredDataForPCA".impute_20 * -0.0031139049741 + "CenteredDataForPCA".impute_21 * -0.0906454382453 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.233099295238 + "CenteredDataForPCA".impute_3 * 0.0723821489845 + "CenteredDataForPCA".impute_4 * 0.291341135751 + "CenteredDataForPCA".impute_5 * 0.113895991127 + "CenteredDataForPCA".impute_6 * -0.0241799589566 + "CenteredDataForPCA".impute_7 * 0.0774716436199 + "CenteredDataForPCA".impute_8 * -0.333403874196 + "CenteredDataForPCA".impute_9 * -0.406971744123 + "CenteredDataForPCA".impute_10 * 0.24995234369 + "CenteredDataForPCA".impute_11 * 0.178145519398 + "CenteredDataForPCA".impute_12 * 0.0573340946173 + "CenteredDataForPCA".impute_13 * 0.0835952270446 + "CenteredDataForPCA".impute_14 * 0.262044303329 + "CenteredDataForPCA".impute_15 * 0.476712983844 + "CenteredDataForPCA".impute_16 * 0.134985961266 + "CenteredDataForPCA".impute_17 * 0.137365792188 + "CenteredDataForPCA".impute_18 * 0.159465319967 + "CenteredDataForPCA".impute_19 * 0.174201797006 + "CenteredDataForPCA".impute_20 * -0.23100970354 + "CenteredDataForPCA".impute_21 * 0.112078385625 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.172512487938 + "CenteredDataForPCA".impute_3 * 0.200273055091 + "CenteredDataForPCA".impute_4 * 0.0153530426931 + "CenteredDataForPCA".impute_5 * 0.0206436253238 + "CenteredDataForPCA".impute_6 * 0.0787266342949 + "CenteredDataForPCA".impute_7 * -0.0214299997173 + "CenteredDataForPCA".impute_8 * 0.354923751613 + "CenteredDataForPCA".impute_9 * -0.0192594104746 + "CenteredDataForPCA".impute_10 * -0.17322162007 + "CenteredDataForPCA".impute_11 * 0.100829030054 + "CenteredDataForPCA".impute_12 * 0.369888161921 + "CenteredDataForPCA".impute_13 * -0.0826302493815 + "CenteredDataForPCA".impute_14 * 0.321306909847 + "CenteredDataForPCA".impute_15 * 0.308533018822 + "CenteredDataForPCA".impute_16 * -0.380086119537 + "CenteredDataForPCA".impute_17 * -0.409608844757 + "CenteredDataForPCA".impute_18 * 0.021815525968 + "CenteredDataForPCA".impute_19 * -0.165369081098 + "CenteredDataForPCA".impute_20 * 0.225077375012 + "CenteredDataForPCA".impute_21 * 0.153276942979 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.0229378865616 + "CenteredDataForPCA".impute_3 * 0.366679606382 + "CenteredDataForPCA".impute_4 * 0.263080843601 + "CenteredDataForPCA".impute_5 * -0.00541631465743 + "CenteredDataForPCA".impute_6 * -0.0869541893291 + "CenteredDataForPCA".impute_7 * 0.0424144774634 + "CenteredDataForPCA".impute_8 * -0.132763417405 + "CenteredDataForPCA".impute_9 * 0.12926927106 + "CenteredDataForPCA".impute_10 * 0.173311959765 + "CenteredDataForPCA".impute_11 * 0.103791699079 + "CenteredDataForPCA".impute_12 * -0.535580033001 + "CenteredDataForPCA".impute_13 * -0.42212665811 + "CenteredDataForPCA".impute_14 * -0.037392314907 + "CenteredDataForPCA".impute_15 * 0.0505927430482 + "CenteredDataForPCA".impute_16 * -0.0705817145209 + "CenteredDataForPCA".impute_17 * -0.33555352632 + "CenteredDataForPCA".impute_18 * 0.0137275043834 + "CenteredDataForPCA".impute_19 * 0.159537865485 + "CenteredDataForPCA".impute_20 * 0.245225288437 + "CenteredDataForPCA".impute_21 * -0.197291028111 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.288770894527 + "CenteredDataForPCA".impute_3 * 0.344881979193 + "CenteredDataForPCA".impute_4 * -0.12493571399 + "CenteredDataForPCA".impute_5 * 0.0534244484322 + "CenteredDataForPCA".impute_6 * -0.0410664728588 + "CenteredDataForPCA".impute_7 * -0.0086143957668 + "CenteredDataForPCA".impute_8 * 0.271365476032 + "CenteredDataForPCA".impute_9 * 0.0336090774706 + "CenteredDataForPCA".impute_10 * -0.0533207373471 + "CenteredDataForPCA".impute_11 * 0.266948984181 + "CenteredDataForPCA".impute_12 * -0.218674094785 + "CenteredDataForPCA".impute_13 * -0.0874410965269 + "CenteredDataForPCA".impute_14 * 0.0188874892792 + "CenteredDataForPCA".impute_15 * 0.0427243076671 + "CenteredDataForPCA".impute_16 * 0.336251431435 + "CenteredDataForPCA".impute_17 * 0.3010788097 + "CenteredDataForPCA".impute_18 * -0.00239131664788 + "CenteredDataForPCA".impute_19 * -0.589098025049 + "CenteredDataForPCA".impute_20 * -0.118052803584 + "CenteredDataForPCA".impute_21 * -0.0789418847634 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.053270243019 + "CenteredDataForPCA".impute_3 * -0.190868512161 + "CenteredDataForPCA".impute_4 * 0.0836483564825 + "CenteredDataForPCA".impute_5 * 0.00142690528489 + "CenteredDataForPCA".impute_6 * 0.0115938938528 + "CenteredDataForPCA".impute_7 * 0.0405644059979 + "CenteredDataForPCA".impute_8 * 0.324276489553 + "CenteredDataForPCA".impute_9 * -0.451404993573 + "CenteredDataForPCA".impute_10 * 0.455394315894 + "CenteredDataForPCA".impute_11 * -0.0135275305116 + "CenteredDataForPCA".impute_12 * -0.137286239662 + "CenteredDataForPCA".impute_13 * -0.161121934496 + "CenteredDataForPCA".impute_14 * -0.021515845958 + "CenteredDataForPCA".impute_15 * -0.0934944095114 + "CenteredDataForPCA".impute_16 * -0.363235734698 + "CenteredDataForPCA".impute_17 * 0.245428678917 + "CenteredDataForPCA".impute_18 * -0.406120385031 + "CenteredDataForPCA".impute_19 * -0.117878586793 + "CenteredDataForPCA".impute_20 * 0.0914520132926 + "CenteredDataForPCA".impute_21 * 0.0456494493708 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.182100115501 + "CenteredDataForPCA".impute_3 * 0.0274843785603 + "CenteredDataForPCA".impute_4 * 0.613041182229 + "CenteredDataForPCA".impute_5 * -8.85667515032e-05 + "CenteredDataForPCA".impute_6 * 0.0326695608319 + "CenteredDataForPCA".impute_7 * -0.0968251035468 + "CenteredDataForPCA".impute_8 * -0.230051662422 + "CenteredDataForPCA".impute_9 * 0.0571370225488 + "CenteredDataForPCA".impute_10 * -0.394084918943 + "CenteredDataForPCA".impute_11 * 0.0638563856396 + "CenteredDataForPCA".impute_12 * 0.00921509506406 + "CenteredDataForPCA".impute_13 * 0.0710691462507 + "CenteredDataForPCA".impute_14 * 0.0380344109889 + "CenteredDataForPCA".impute_15 * -0.307912833363 + "CenteredDataForPCA".impute_16 * -0.337456670728 + "CenteredDataForPCA".impute_17 * 0.337240249804 + "CenteredDataForPCA".impute_18 * 0.00249512781856 + "CenteredDataForPCA".impute_19 * -0.144158958663 + "CenteredDataForPCA".impute_20 * 0.119972126095 + "CenteredDataForPCA".impute_21 * 0.0084430630846 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.230981963684 + "CenteredDataForPCA".impute_3 * 0.44145447704 + "CenteredDataForPCA".impute_4 * 0.158209285191 + "CenteredDataForPCA".impute_5 * -0.0697320842199 + "CenteredDataForPCA".impute_6 * 0.0134354230522 + "CenteredDataForPCA".impute_7 * 0.00954214990357 + "CenteredDataForPCA".impute_8 * 0.261144446367 + "CenteredDataForPCA".impute_9 * -0.0100330539327 + "CenteredDataForPCA".impute_10 * 0.171093316046 + "CenteredDataForPCA".impute_11 * -0.131200718754 + "CenteredDataForPCA".impute_12 * -0.137344896967 + "CenteredDataForPCA".impute_13 * 0.549331692665 + "CenteredDataForPCA".impute_14 * -0.134977099808 + "CenteredDataForPCA".impute_15 * -0.0473210693682 + "CenteredDataForPCA".impute_16 * -0.271356510438 + "CenteredDataForPCA".impute_17 * -0.0791810901296 + "CenteredDataForPCA".impute_18 * 0.229538158828 + "CenteredDataForPCA".impute_19 * -0.00727156688241 + "CenteredDataForPCA".impute_20 * -0.362348622453 + "CenteredDataForPCA".impute_21 * -0.042298222352 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.171229120172 + "CenteredDataForPCA".impute_3 * -0.0519432476094 + "CenteredDataForPCA".impute_4 * -0.0478546125747 + "CenteredDataForPCA".impute_5 * 0.106052369575 + "CenteredDataForPCA".impute_6 * 0.0192049318812 + "CenteredDataForPCA".impute_7 * 0.143909971873 + "CenteredDataForPCA".impute_8 * 0.0350529523854 + "CenteredDataForPCA".impute_9 * -0.262073260633 + "CenteredDataForPCA".impute_10 * -0.41486069058 + "CenteredDataForPCA".impute_11 * 0.201513936112 + "CenteredDataForPCA".impute_12 * -0.371565910276 + "CenteredDataForPCA".impute_13 * 0.329390675909 + "CenteredDataForPCA".impute_14 * -0.0752456307832 + "CenteredDataForPCA".impute_15 * -0.0497678442141 + "CenteredDataForPCA".impute_16 * 0.0909489247868 + "CenteredDataForPCA".impute_17 * -0.325741931526 + "CenteredDataForPCA".impute_18 * -0.454823145932 + "CenteredDataForPCA".impute_19 * 0.159227378681 + "CenteredDataForPCA".impute_20 * -0.0831518623492 + "CenteredDataForPCA".impute_21 * 0.206224787379 AS anoova_13, "CenteredDataForPCA".impute_2 * -0.0843613820835 + "CenteredDataForPCA".impute_3 * 0.102774800855 + "CenteredDataForPCA".impute_4 * 0.108896026257 + "CenteredDataForPCA".impute_5 * -0.0106254423242 + "CenteredDataForPCA".impute_6 * -0.0215608832278 + "CenteredDataForPCA".impute_7 * 0.0111294133956 + "CenteredDataForPCA".impute_8 * 0.234818663642 + "CenteredDataForPCA".impute_9 * 0.444509451833 + "CenteredDataForPCA".impute_10 * 0.0560790501446 + "CenteredDataForPCA".impute_11 * -0.0565715914406 + "CenteredDataForPCA".impute_12 * -0.0453111160205 + "CenteredDataForPCA".impute_13 * 0.243642621746 + "CenteredDataForPCA".impute_14 * 0.38809298709 + "CenteredDataForPCA".impute_15 * 0.220937939568 + "CenteredDataForPCA".impute_16 * 0.152104786178 + "CenteredDataForPCA".impute_17 * 0.339747026482 + "CenteredDataForPCA".impute_18 * -0.395068381608 + "CenteredDataForPCA".impute_19 * 0.33437963582 + "CenteredDataForPCA".impute_20 * 0.204552621673 + "CenteredDataForPCA".impute_21 * -0.0393426092214 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.0920444865154 + "CenteredDataForPCA".impute_3 * 0.408115641327 + "CenteredDataForPCA".impute_4 * 0.0125269047448 + "CenteredDataForPCA".impute_5 * -0.0342485633199 + "CenteredDataForPCA".impute_6 * 0.0511730034907 + "CenteredDataForPCA".impute_7 * 0.00988176557117 + "CenteredDataForPCA".impute_8 * 0.0276233506007 + "CenteredDataForPCA".impute_9 * -0.411891750779 + "CenteredDataForPCA".impute_10 * 0.00256616843358 + "CenteredDataForPCA".impute_11 * -0.0521996825364 + "CenteredDataForPCA".impute_12 * 0.240636677943 + "CenteredDataForPCA".impute_13 * 0.139451596446 + "CenteredDataForPCA".impute_14 * -0.168622728889 + "CenteredDataForPCA".impute_15 * -0.210447369857 + "CenteredDataForPCA".impute_16 * 0.347194727494 + "CenteredDataForPCA".impute_17 * 0.0747141655082 + "CenteredDataForPCA".impute_18 * 0.0678265267061 + "CenteredDataForPCA".impute_19 * 0.128162580781 + "CenteredDataForPCA".impute_20 * 0.588228038367 + "CenteredDataForPCA".impute_21 * 0.0673408707646 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.0637391391855 + "CenteredDataForPCA".impute_3 * -0.22960693012 + "CenteredDataForPCA".impute_4 * 0.602939465426 + "CenteredDataForPCA".impute_5 * 0.0429754238379 + "CenteredDataForPCA".impute_6 * -0.01739661575 + "CenteredDataForPCA".impute_7 * 0.0810347475133 + "CenteredDataForPCA".impute_8 * 0.186000289006 + "CenteredDataForPCA".impute_9 * 0.151381545431 + "CenteredDataForPCA".impute_10 * 0.201403514557 + "CenteredDataForPCA".impute_11 * -0.0454041891237 + "CenteredDataForPCA".impute_12 * 0.211847768463 + "CenteredDataForPCA".impute_13 * 0.0184610265197 + "CenteredDataForPCA".impute_14 * -0.161100814388 + "CenteredDataForPCA".impute_15 * -0.0344276183416 + "CenteredDataForPCA".impute_16 * 0.432872830285 + "CenteredDataForPCA".impute_17 * -0.345495436384 + "CenteredDataForPCA".impute_18 * -0.136922046845 + "CenteredDataForPCA".impute_19 * -0.248938051896 + "CenteredDataForPCA".impute_20 * -0.0687025343896 + "CenteredDataForPCA".impute_21 * 0.0792816684116 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.0995342910362 + "CenteredDataForPCA".impute_3 * 0.0389404841287 + "CenteredDataForPCA".impute_4 * 0.10351887672 + "CenteredDataForPCA".impute_5 * -0.0984587167312 + "CenteredDataForPCA".impute_6 * -0.0318076545059 + "CenteredDataForPCA".impute_7 * -0.131133136885 + "CenteredDataForPCA".impute_8 * 0.071889085661 + "CenteredDataForPCA".impute_9 * -0.0787260208111 + "CenteredDataForPCA".impute_10 * -0.301781760879 + "CenteredDataForPCA".impute_11 * -0.094620159852 + "CenteredDataForPCA".impute_12 * 0.10471483108 + "CenteredDataForPCA".impute_13 * -0.114174129359 + "CenteredDataForPCA".impute_14 * -0.587797226987 + "CenteredDataForPCA".impute_15 * 0.585438336927 + "CenteredDataForPCA".impute_16 * -0.0589133435062 + "CenteredDataForPCA".impute_17 * 0.159170148997 + "CenteredDataForPCA".impute_18 * -0.183062933676 + "CenteredDataForPCA".impute_19 * 0.0500364781139 + "CenteredDataForPCA".impute_20 * -0.0330616028772 + "CenteredDataForPCA".impute_21 * -0.245781200876 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.061962550569 + "CenteredDataForPCA".impute_3 * 0.443941600028 + "CenteredDataForPCA".impute_4 * -0.0874711283925 + "CenteredDataForPCA".impute_5 * -0.00304798988896 + "CenteredDataForPCA".impute_6 * -0.0421427635109 + "CenteredDataForPCA".impute_7 * 0.0325611260269 + "CenteredDataForPCA".impute_8 * -0.344925701972 + "CenteredDataForPCA".impute_9 * 0.0366800208521 + "CenteredDataForPCA".impute_10 * 0.0817003157403 + "CenteredDataForPCA".impute_11 * 0.00295309516044 + "CenteredDataForPCA".impute_12 * 0.401343371665 + "CenteredDataForPCA".impute_13 * -0.162468939756 + "CenteredDataForPCA".impute_14 * 0.036616205829 + "CenteredDataForPCA".impute_15 * -0.201590307857 + "CenteredDataForPCA".impute_16 * -0.0459726811275 + "CenteredDataForPCA".impute_17 * -0.0745609007698 + "CenteredDataForPCA".impute_18 * -0.547790208929 + "CenteredDataForPCA".impute_19 * -0.0340179958038 + "CenteredDataForPCA".impute_20 * -0.342339196956 + "CenteredDataForPCA".impute_21 * -0.0776183526624 AS anoova_18, "CenteredDataForPCA".impute_2 * 0.0564582648397 + "CenteredDataForPCA".impute_3 * -0.0223405565761 + "CenteredDataForPCA".impute_4 * -0.150955251931 + "CenteredDataForPCA".impute_5 * 0.0709089357507 + "CenteredDataForPCA".impute_6 * 0.0129271655481 + "CenteredDataForPCA".impute_7 * 0.0281655935683 + "CenteredDataForPCA".impute_8 * -0.446316740172 + "CenteredDataForPCA".impute_9 * 0.213538838745 + "CenteredDataForPCA".impute_10 * 0.275154016546 + "CenteredDataForPCA".impute_11 * -0.0587965524799 + "CenteredDataForPCA".impute_12 * -0.0840399978799 + "CenteredDataForPCA".impute_13 * 0.382370941158 + "CenteredDataForPCA".impute_14 * -0.194691145835 + "CenteredDataForPCA".impute_15 * 0.248229404683 + "CenteredDataForPCA".impute_16 * -0.160765891179 + "CenteredDataForPCA".impute_17 * -0.059530969272 + "CenteredDataForPCA".impute_18 * -0.146343732948 + "CenteredDataForPCA".impute_19 * -0.423950721104 + "CenteredDataForPCA".impute_20 * 0.36333646339 + "CenteredDataForPCA".impute_21 * 0.168008087383 AS anoova_19, "CenteredDataForPCA".impute_2 * 0.211177641293 + "CenteredDataForPCA".impute_3 * -4.4408920985e-16 + "CenteredDataForPCA".impute_4 * -6.2970462178e-16 + "CenteredDataForPCA".impute_5 * 0.24293652176 + "CenteredDataForPCA".impute_6 * 0.701185595298 + "CenteredDataForPCA".impute_7 * 0.419969816065 + "CenteredDataForPCA".impute_8 * -6.24500451352e-17 + "CenteredDataForPCA".impute_9 * 1.34441069388e-16 + "CenteredDataForPCA".impute_10 * -7.2858385991e-17 + "CenteredDataForPCA".impute_11 * -0.271855080255 + "CenteredDataForPCA".impute_12 * 3.98986399475e-17 + "CenteredDataForPCA".impute_13 * 1.87350135405e-16 + "CenteredDataForPCA".impute_14 * 2.42861286637e-17 + "CenteredDataForPCA".impute_15 * 1.31838984174e-16 + "CenteredDataForPCA".impute_16 * -1.04083408559e-16 + "CenteredDataForPCA".impute_17 * 3.29597460436e-17 + "CenteredDataForPCA".impute_18 * 3.46944695195e-17 + "CenteredDataForPCA".impute_19 * 9.02056207508e-17 + "CenteredDataForPCA".impute_20 * 6.24500451352e-17 + "CenteredDataForPCA".impute_21 * -0.392994631125 AS anoova_20, "CenteredDataForPCA".impute_2 * -0.372964857547 + "CenteredDataForPCA".impute_3 * 4.4408920985e-16 + "CenteredDataForPCA".impute_4 * 3.46944695195e-18 + "CenteredDataForPCA".impute_5 * 0.730782331713 + "CenteredDataForPCA".impute_6 * 0.218282806475 + "CenteredDataForPCA".impute_7 * -0.454870423279 + "CenteredDataForPCA".impute_8 * -2.77555756156e-17 + "CenteredDataForPCA".impute_9 * 1.28369537222e-16 + "CenteredDataForPCA".impute_10 * 1.80411241502e-16 + "CenteredDataForPCA".impute_11 * 0.267192979908 + "CenteredDataForPCA".impute_12 * 1.38777878078e-16 + "CenteredDataForPCA".impute_13 * 1.86482773668e-16 + "CenteredDataForPCA".impute_14 * -6.93889390391e-18 + "CenteredDataForPCA".impute_15 * -2.77555756156e-17 + "CenteredDataForPCA".impute_16 * 1.45716771982e-16 + "CenteredDataForPCA".impute_17 * -4.51028103754e-17 + "CenteredDataForPCA".impute_18 * -3.64291929955e-17 + "CenteredDataForPCA".impute_19 * 1.94289029309e-16 + "CenteredDataForPCA".impute_20 * -5.89805981832e-17 + "CenteredDataForPCA".impute_21 * -0.0301301278094 AS anoova_21 
FROM "CenteredDataForPCA"), 
"RawScores" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "Proba_0", -1.38629436112 + (-0.5 * 3.56968683383 - (0.5 * ("ADS_ano_2_OUT".anoova_2 - 0.622611480308) * ("ADS_ano_2_OUT".anoova_2 - 0.622611480308)) / 5.65087142296) + (-0.5 * 1.85821870529 - (0.5 * ("ADS_ano_2_OUT".anoova_3 - -0.0705512150487) * ("ADS_ano_2_OUT".anoova_3 - -0.0705512150487)) / 1.02054994001) + (-0.5 * 2.06796260014 - (0.5 * ("ADS_ano_2_OUT".anoova_4 - -0.914130292155) * ("ADS_ano_2_OUT".anoova_4 - -0.914130292155)) / 1.25870766729) + (-0.5 * 2.32495422479 - (0.5 * ("ADS_ano_2_OUT".anoova_5 - 0.784289137956) * ("ADS_ano_2_OUT".anoova_5 - 0.784289137956)) / 1.62755218382) + (-0.5 * 2.23493698993 - (0.5 * ("ADS_ano_2_OUT".anoova_6 - -0.446361751468) * ("ADS_ano_2_OUT".anoova_6 - -0.446361751468)) / 1.48744506032) + (-0.5 * 2.45917008992 - (0.5 * ("ADS_ano_2_OUT".anoova_7 - -0.260519285905) * ("ADS_ano_2_OUT".anoova_7 - -0.260519285905)) / 1.86133323415) + (-0.5 * 1.80854509286 - (0.5 * ("ADS_ano_2_OUT".anoova_8 - -0.152895898242) * ("ADS_ano_2_OUT".anoova_8 - -0.152895898242)) / 0.971094033414) + (-0.5 * 1.6646921672 - (0.5 * ("ADS_ano_2_OUT".anoova_9 - -0.417711514614) * ("ADS_ano_2_OUT".anoova_9 - -0.417711514614)) / 0.840982103542) + (-0.5 * 2.12169077496 - (0.5 * ("ADS_ano_2_OUT".anoova_10 - 0.0021581600695) * ("ADS_ano_2_OUT".anoova_10 - 0.0021581600695)) / 1.32818547811) + (-0.5 * 1.42904464289 - (0.5 * ("ADS_ano_2_OUT".anoova_11 - 0.0290475268493) * ("ADS_ano_2_OUT".anoova_11 - 0.0290475268493)) / 0.664425565094) + (-0.5 * 2.09991189168 - (0.5 * ("ADS_ano_2_OUT".anoova_12 - 0.196937190455) * ("ADS_ano_2_OUT".anoova_12 - 0.196937190455)) / 1.29957179958) + (-0.5 * 1.07648556353 - (0.5 * ("ADS_ano_2_OUT".anoova_13 - -0.316590154862) * ("ADS_ano_2_OUT".anoova_13 - -0.316590154862)) / 0.467016120385) + (-0.5 * 1.6286721494 - (0.5 * ("ADS_ano_2_OUT".anoova_14 - -0.0671774836322) * ("ADS_ano_2_OUT".anoova_14 - -0.0671774836322)) / 0.811228983992) + (-0.5 * 1.81153382429 - (0.5 * ("ADS_ano_2_OUT".anoova_15 - 0.24580899447) * ("ADS_ano_2_OUT".anoova_15 - 0.24580899447)) / 0.974000714152) + (-0.5 * 1.22480136626 - (0.5 * ("ADS_ano_2_OUT".anoova_16 - 0.0204841147282) * ("ADS_ano_2_OUT".anoova_16 - 0.0204841147282)) / 0.541682252121) + (-0.5 * 1.21907800375 - (0.5 * ("ADS_ano_2_OUT".anoova_17 - 0.132736783424) * ("ADS_ano_2_OUT".anoova_17 - 0.132736783424)) / 0.538590863238) + (-0.5 * 1.15824643021 - (0.5 * ("ADS_ano_2_OUT".anoova_18 - -0.0736209247859) * ("ADS_ano_2_OUT".anoova_18 - -0.0736209247859)) / 0.506804152908) + (-0.5 * 0.911465338203 - (0.5 * ("ADS_ano_2_OUT".anoova_19 - -0.0287680632419) * ("ADS_ano_2_OUT".anoova_19 - -0.0287680632419)) / 0.395972019439) + (-0.5 * -16.8759111947 - (0.5 * ("ADS_ano_2_OUT".anoova_20 - -9.71545119207e-17) * ("ADS_ano_2_OUT".anoova_20 - -9.71545119207e-17)) / 7.45941934864e-09) + (-0.5 * -16.8759111947 - (0.5 * ("ADS_ano_2_OUT".anoova_21 - -1.19070829344e-16) * ("ADS_ano_2_OUT".anoova_21 - -1.19070829344e-16)) / 7.45941934864e-09) AS "Score_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "Proba_1", -1.38629436112 + (-0.5 * 3.17803357569 - (0.5 * ("ADS_ano_2_OUT".anoova_2 - 2.24858119038) * ("ADS_ano_2_OUT".anoova_2 - 2.24858119038)) / 3.81964126791) + (-0.5 * 2.71190417596 - (0.5 * ("ADS_ano_2_OUT".anoova_3 - 0.214584909467) * ("ADS_ano_2_OUT".anoova_3 - 0.214584909467)) / 2.39654258602) + (-0.5 * 1.97496891937 - (0.5 * ("ADS_ano_2_OUT".anoova_4 - 1.18279462774) * ("ADS_ano_2_OUT".anoova_4 - 1.18279462774)) / 1.14693349292) + (-0.5 * 2.34721636436 - (0.5 * ("ADS_ano_2_OUT".anoova_5 - -0.124531176261) * ("ADS_ano_2_OUT".anoova_5 - -0.124531176261)) / 1.66419129704) + (-0.5 * 2.64207669352 - (0.5 * ("ADS_ano_2_OUT".anoova_6 - -0.191867828024) * ("ADS_ano_2_OUT".anoova_6 - -0.191867828024)) / 2.23490702381) + (-0.5 * 2.58914567838 - (0.5 * ("ADS_ano_2_OUT".anoova_7 - 0.115045361475) * ("ADS_ano_2_OUT".anoova_7 - 0.115045361475)) / 2.11968737242) + (-0.5 * 2.16689140591 - (0.5 * ("ADS_ano_2_OUT".anoova_8 - -0.00645355334079) * ("ADS_ano_2_OUT".anoova_8 - -0.00645355334079)) / 1.38959778158) + (-0.5 * 2.45502089791 - (0.5 * ("ADS_ano_2_OUT".anoova_9 - 0.00365969410774) * ("ADS_ano_2_OUT".anoova_9 - 0.00365969410774)) / 1.85362620521) + (-0.5 * 1.72799713738 - (0.5 * ("ADS_ano_2_OUT".anoova_10 - 0.0881368522492) * ("ADS_ano_2_OUT".anoova_10 - 0.0881368522492)) / 0.895941705428) + (-0.5 * 1.93465866987 - (0.5 * ("ADS_ano_2_OUT".anoova_11 - 0.0511618673414) * ("ADS_ano_2_OUT".anoova_11 - 0.0511618673414)) / 1.1016197574) + (-0.5 * 1.49400114604 - (0.5 * ("ADS_ano_2_OUT".anoova_12 - 0.007153473314) * ("ADS_ano_2_OUT".anoova_12 - 0.007153473314)) / 0.709016897149) + (-0.5 * 1.89963213359 - (0.5 * ("ADS_ano_2_OUT".anoova_13 - 0.209847207312) * ("ADS_ano_2_OUT".anoova_13 - 0.209847207312)) / 1.06370177735) + (-0.5 * 1.30999698178 - (0.5 * ("ADS_ano_2_OUT".anoova_14 - -0.031200248076) * ("ADS_ano_2_OUT".anoova_14 - -0.031200248076)) / 0.589854085945) + (-0.5 * 1.43750306589 - (0.5 * ("ADS_ano_2_OUT".anoova_15 - -0.0986568521595) * ("ADS_ano_2_OUT".anoova_15 - -0.0986568521595)) / 0.670069392866) + (-0.5 * 1.11877901472 - (0.5 * ("ADS_ano_2_OUT".anoova_16 - -0.0579677860565) * ("ADS_ano_2_OUT".anoova_16 - -0.0579677860565)) / 0.487191479383) + (-0.5 * 1.38653328235 - (0.5 * ("ADS_ano_2_OUT".anoova_17 - -0.0766935081552) * ("ADS_ano_2_OUT".anoova_17 - -0.0766935081552)) / 0.636771892516) + (-0.5 * 1.45385270782 - (0.5 * ("ADS_ano_2_OUT".anoova_18 - 0.0823964262161) * ("ADS_ano_2_OUT".anoova_18 - 0.0823964262161)) / 0.681114835979) + (-0.5 * 1.21369550308 - (0.5 * ("ADS_ano_2_OUT".anoova_19 - -0.0543794946439) * ("ADS_ano_2_OUT".anoova_19 - -0.0543794946439)) / 0.535699685417) + (-0.5 * -16.8759111947 - (0.5 * ("ADS_ano_2_OUT".anoova_20 - -3.09914423879e-18) * ("ADS_ano_2_OUT".anoova_20 - -3.09914423879e-18)) / 7.45941934864e-09) + (-0.5 * -16.8759111947 - (0.5 * ("ADS_ano_2_OUT".anoova_21 - -1.12354622645e-16) * ("ADS_ano_2_OUT".anoova_21 - -1.12354622645e-16)) / 7.45941934864e-09) AS "Score_1", CAST(NULL AS FLOAT(53)) AS "LogProba_2", CAST(NULL AS FLOAT(53)) AS "Proba_2", -1.38629436112 + (-0.5 * 3.34019100498 - (0.5 * ("ADS_ano_2_OUT".anoova_2 - -1.32798275321) * ("ADS_ano_2_OUT".anoova_2 - -1.32798275321)) / 4.492071431) + (-0.5 * 3.09572113997 - (0.5 * ("ADS_ano_2_OUT".anoova_3 - 0.902305895214) * ("ADS_ano_2_OUT".anoova_3 - 0.902305895214)) / 3.5178291252) + (-0.5 * 1.8352469212 - (0.5 * ("ADS_ano_2_OUT".anoova_4 - -0.953358442645) * ("ADS_ano_2_OUT".anoova_4 - -0.953358442645)) / 0.997373310592) + (-0.5 * 2.25662461569 - (0.5 * ("ADS_ano_2_OUT".anoova_5 - -0.642468164253) * ("ADS_ano_2_OUT".anoova_5 - -0.642468164253)) / 1.52005656698) + (-0.5 * 1.76954863627 - (0.5 * ("ADS_ano_2_OUT".anoova_6 - 0.627278533229) * ("ADS_ano_2_OUT".anoova_6 - 0.627278533229)) / 0.933953684662) + (-0.5 * 1.97725399382 - (0.5 * ("ADS_ano_2_OUT".anoova_7 - 0.0501603809812) * ("ADS_ano_2_OUT".anoova_7 - 0.0501603809812)) / 1.14955731802) + (-0.5 * 2.20766351393 - (0.5 * ("ADS_ano_2_OUT".anoova_8 - 0.128958633576) * ("ADS_ano_2_OUT".anoova_8 - 0.128958633576)) / 1.44742548036) + (-0.5 * 2.03558736253 - (0.5 * ("ADS_ano_2_OUT".anoova_9 - 0.296931264529) * ("ADS_ano_2_OUT".anoova_9 - 0.296931264529)) / 1.21860930683) + (-0.5 * 1.71759614841 - (0.5 * ("ADS_ano_2_OUT".anoova_10 - -0.0476609060801) * ("ADS_ano_2_OUT".anoova_10 - -0.0476609060801)) / 0.886671319797) + (-0.5 * 1.97104990527 - (0.5 * ("ADS_ano_2_OUT".anoova_11 - 0.265740253091) * ("ADS_ano_2_OUT".anoova_11 - 0.265740253091)) / 1.14244744058) + (-0.5 * 1.74236591401 - (0.5 * ("ADS_ano_2_OUT".anoova_12 - -0.32737846552) * ("ADS_ano_2_OUT".anoova_12 - -0.32737846552)) / 0.908908225092) + (-0.5 * 1.29486315349 - (0.5 * ("ADS_ano_2_OUT".anoova_13 - 0.248708010707) * ("ADS_ano_2_OUT".anoova_13 - 0.248708010707)) / 0.580994543977) + (-0.5 * 1.81124539686 - (0.5 * ("ADS_ano_2_OUT".anoova_14 - 0.191495272652) * ("ADS_ano_2_OUT".anoova_14 - 0.191495272652)) / 0.973719826142) + (-0.5 * 1.20832154985 - (0.5 * ("ADS_ano_2_OUT".anoova_15 - 0.0208526062253) * ("ADS_ano_2_OUT".anoova_15 - 0.0208526062253)) / 0.532828581863) + (-0.5 * 1.0273961936 - (0.5 * ("ADS_ano_2_OUT".anoova_16 - -0.147690061004) * ("ADS_ano_2_OUT".anoova_16 - -0.147690061004)) / 0.444644197499) + (-0.5 * 1.32388405226 - (0.5 * ("ADS_ano_2_OUT".anoova_17 - 0.0866735538501) * ("ADS_ano_2_OUT".anoova_17 - 0.0866735538501)) / 0.598102572301) + (-0.5 * 1.20931809993 - (0.5 * ("ADS_ano_2_OUT".anoova_18 - 0.0438313705046) * ("ADS_ano_2_OUT".anoova_18 - 0.0438313705046)) / 0.533359836896) + (-0.5 * 0.972733792982 - (0.5 * ("ADS_ano_2_OUT".anoova_19 - -0.141967950837) * ("ADS_ano_2_OUT".anoova_19 - -0.141967950837)) / 0.420991231449) + (-0.5 * -16.8759111947 - (0.5 * ("ADS_ano_2_OUT".anoova_20 - -2.44224030228e-17) * ("ADS_ano_2_OUT".anoova_20 - -2.44224030228e-17)) / 7.45941934864e-09) + (-0.5 * -16.8759111947 - (0.5 * ("ADS_ano_2_OUT".anoova_21 - -1.43704456591e-16) * ("ADS_ano_2_OUT".anoova_21 - -1.43704456591e-16)) / 7.45941934864e-09) AS "Score_2", CAST(NULL AS FLOAT(53)) AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Proba_3", -1.38629436112 + (-0.5 * 3.67624906623 - (0.5 * ("ADS_ano_2_OUT".anoova_2 - -1.54320991748) * ("ADS_ano_2_OUT".anoova_2 - -1.54320991748)) / 6.28629583521) + (-0.5 * 3.77800355187 - (0.5 * ("ADS_ano_2_OUT".anoova_3 - -1.04633958963) * ("ADS_ano_2_OUT".anoova_3 - -1.04633958963)) / 6.95963120716) + (-0.5 * 2.89681548467 - (0.5 * ("ADS_ano_2_OUT".anoova_4 - 0.684694107062) * ("ADS_ano_2_OUT".anoova_4 - 0.684694107062)) / 2.88330849638) + (-0.5 * 2.37649244065 - (0.5 * ("ADS_ano_2_OUT".anoova_5 - -0.0172897974426) * ("ADS_ano_2_OUT".anoova_5 - -0.0172897974426)) / 1.71363247908) + (-0.5 * 2.25218658837 - (0.5 * ("ADS_ano_2_OUT".anoova_6 - 0.0109510462631) * ("ADS_ano_2_OUT".anoova_6 - 0.0109510462631)) / 1.51332546187) + (-0.5 * 2.1632925251 - (0.5 * ("ADS_ano_2_OUT".anoova_7 - 0.0953135434491) * ("ADS_ano_2_OUT".anoova_7 - 0.0953135434491)) / 1.384605773) + (-0.5 * 2.38121290915 - (0.5 * ("ADS_ano_2_OUT".anoova_8 - 0.0303908180069) * ("ADS_ano_2_OUT".anoova_8 - 0.0303908180069)) / 1.72174074957) + (-0.5 * 1.93685931158 - (0.5 * ("ADS_ano_2_OUT".anoova_9 - 0.117120555977) * ("ADS_ano_2_OUT".anoova_9 - 0.117120555977)) / 1.10404669723) + (-0.5 * 2.18971834217 - (0.5 * ("ADS_ano_2_OUT".anoova_10 - -0.0426341062386) * ("ADS_ano_2_OUT".anoova_10 - -0.0426341062386)) / 1.42168285027) + (-0.5 * 2.01949467206 - (0.5 * ("ADS_ano_2_OUT".anoova_11 - -0.345949647281) * ("ADS_ano_2_OUT".anoova_11 - -0.345949647281)) / 1.19915555588) + (-0.5 * 1.69021050706 - (0.5 * ("ADS_ano_2_OUT".anoova_12 - 0.123287801751) * ("ADS_ano_2_OUT".anoova_12 - 0.123287801751)) / 0.862718732483) + (-0.5 * 1.98202593349 - (0.5 * ("ADS_ano_2_OUT".anoova_13 - -0.141965063157) * ("ADS_ano_2_OUT".anoova_13 - -0.141965063157)) / 1.15505604554) + (-0.5 * 1.58195563262 - (0.5 * ("ADS_ano_2_OUT".anoova_14 - -0.0931175409436) * ("ADS_ano_2_OUT".anoova_14 - -0.0931175409436)) / 0.774202792579) + (-0.5 * 0.75939965379 - (0.5 * ("ADS_ano_2_OUT".anoova_15 - -0.168004748536) * ("ADS_ano_2_OUT".anoova_15 - -0.168004748536)) / 0.340112983344) + (-0.5 * 1.71163166001 - (0.5 * ("ADS_ano_2_OUT".anoova_16 - 0.185173732333) * ("ADS_ano_2_OUT".anoova_16 - 0.185173732333)) / 0.881398519401) + (-0.5 * 1.06055017936 - (0.5 * ("ADS_ano_2_OUT".anoova_17 - -0.142716829118) * ("ADS_ano_2_OUT".anoova_17 - -0.142716829118)) / 0.459633021589) + (-0.5 * 0.852201986911 - (0.5 * ("ADS_ano_2_OUT".anoova_18 - -0.0526068719348) * ("ADS_ano_2_OUT".anoova_18 - -0.0526068719348)) / 0.373187210846) + (-0.5 * 0.963904196968 - (0.5 * ("ADS_ano_2_OUT".anoova_19 - 0.225115508723) * ("ADS_ano_2_OUT".anoova_19 - 0.225115508723)) / 0.417290411367) + (-0.5 * -16.8759111947 - (0.5 * ("ADS_ano_2_OUT".anoova_20 - -3.3980347086e-18) * ("ADS_ano_2_OUT".anoova_20 - -3.3980347086e-18)) / 7.45941934864e-09) + (-0.5 * -16.8759111947 - (0.5 * ("ADS_ano_2_OUT".anoova_21 - -1.24217422546e-16) * ("ADS_ano_2_OUT".anoova_21 - -1.24217422546e-16)) / 7.45941934864e-09) AS "Score_3" 
FROM "ADS_ano_2_OUT"), 
orig_cte AS 
(SELECT "RawScores"."KEY" AS "KEY", "RawScores"."Score_0" AS "Score_0", "RawScores"."Score_1" AS "Score_1", "RawScores"."Score_2" AS "Score_2", "RawScores"."Score_3" AS "Score_3", "RawScores"."Proba_0" AS "Proba_0", "RawScores"."Proba_1" AS "Proba_1", "RawScores"."Proba_2" AS "Proba_2", "RawScores"."Proba_3" AS "Proba_3", "RawScores"."LogProba_0" AS "LogProba_0", "RawScores"."LogProba_1" AS "LogProba_1", "RawScores"."LogProba_2" AS "LogProba_2", "RawScores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "RawScores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT(53)) AS "Score_0", CAST(NULL AS FLOAT(53)) AS "Score_1", CAST(NULL AS FLOAT(53)) AS "Score_2", CAST(NULL AS FLOAT(53)) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte