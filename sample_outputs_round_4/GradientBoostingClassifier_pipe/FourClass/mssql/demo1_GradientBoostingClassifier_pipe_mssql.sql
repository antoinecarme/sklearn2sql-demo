-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.0596624247103 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.0333665658921 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -0.0250473829144 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN -0.214527025481 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -0.154376202727 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN -0.140824796242 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.269955532683 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN -0.401556801253 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -0.115878163066 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -0.0915509319093 ELSE [ADS].[Feature_9] END AS impute_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN -0.0077044291309 ELSE [ADS].[Feature_10] END AS impute_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN -0.151926800118 ELSE [ADS].[Feature_11] END AS impute_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 0.0151135681735 ELSE [ADS].[Feature_12] END AS impute_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN 0.0709313317025 ELSE [ADS].[Feature_13] END AS impute_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN -0.0814085093604 ELSE [ADS].[Feature_14] END AS impute_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN 0.0269719346791 ELSE [ADS].[Feature_15] END AS impute_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 0.117960096617 ELSE [ADS].[Feature_16] END AS impute_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN 0.0779448017851 ELSE [ADS].[Feature_17] END AS impute_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN -0.220846950306 ELSE [ADS].[Feature_18] END AS impute_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN 0.0587968039038 ELSE [ADS].[Feature_19] END AS impute_21 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - -0.0596624247103 AS impute_2, [ADS_imp_1_OUT].impute_3 - 0.0333665658921 AS impute_3, [ADS_imp_1_OUT].impute_4 - -0.0250473829144 AS impute_4, [ADS_imp_1_OUT].impute_5 - -0.214527025481 AS impute_5, [ADS_imp_1_OUT].impute_6 - -0.154376202727 AS impute_6, [ADS_imp_1_OUT].impute_7 - -0.140824796242 AS impute_7, [ADS_imp_1_OUT].impute_8 - -0.269955532683 AS impute_8, [ADS_imp_1_OUT].impute_9 - -0.401556801253 AS impute_9, [ADS_imp_1_OUT].impute_10 - -0.115878163066 AS impute_10, [ADS_imp_1_OUT].impute_11 - -0.0915509319093 AS impute_11, [ADS_imp_1_OUT].impute_12 - -0.0077044291309 AS impute_12, [ADS_imp_1_OUT].impute_13 - -0.151926800118 AS impute_13, [ADS_imp_1_OUT].impute_14 - 0.0151135681735 AS impute_14, [ADS_imp_1_OUT].impute_15 - 0.0709313317025 AS impute_15, [ADS_imp_1_OUT].impute_16 - -0.0814085093604 AS impute_16, [ADS_imp_1_OUT].impute_17 - 0.0269719346791 AS impute_17, [ADS_imp_1_OUT].impute_18 - 0.117960096617 AS impute_18, [ADS_imp_1_OUT].impute_19 - 0.0779448017851 AS impute_19, [ADS_imp_1_OUT].impute_20 - -0.220846950306 AS impute_20, [ADS_imp_1_OUT].impute_21 - 0.0587968039038 AS impute_21 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * -0.00845481195311 + [CenteredDataForPCA].impute_3 * 0.0375477630481 + [CenteredDataForPCA].impute_4 * -0.079468679968 + [CenteredDataForPCA].impute_5 * -0.502423569303 + [CenteredDataForPCA].impute_6 * -0.0751427486878 + [CenteredDataForPCA].impute_7 * 0.00204218826863 + [CenteredDataForPCA].impute_8 * 0.376291392357 + [CenteredDataForPCA].impute_9 * -0.345622370019 + [CenteredDataForPCA].impute_10 * 0.358673008647 + [CenteredDataForPCA].impute_11 * 0.576292882468 + [CenteredDataForPCA].impute_12 * -0.0289427474242 + [CenteredDataForPCA].impute_13 * 0.0532350702938 + [CenteredDataForPCA].impute_14 * 0.00509336569471 + [CenteredDataForPCA].impute_15 * 0.00350221349044 + [CenteredDataForPCA].impute_16 * 0.00174764928215 + [CenteredDataForPCA].impute_17 * -0.068223785935 + [CenteredDataForPCA].impute_18 * 0.0505163487073 + [CenteredDataForPCA].impute_19 * 0.0061370889237 + [CenteredDataForPCA].impute_20 * -0.0175370990391 + [CenteredDataForPCA].impute_21 * 0.0323882472908 AS anoova_2, [CenteredDataForPCA].impute_2 * -0.106520281633 + [CenteredDataForPCA].impute_3 * 0.122910907354 + [CenteredDataForPCA].impute_4 * 0.0848323074975 + [CenteredDataForPCA].impute_5 * -0.0771440067757 + [CenteredDataForPCA].impute_6 * -0.107383494126 + [CenteredDataForPCA].impute_7 * -0.644219880432 + [CenteredDataForPCA].impute_8 * -0.099047446798 + [CenteredDataForPCA].impute_9 * -0.534941962377 + [CenteredDataForPCA].impute_10 * -0.428536552479 + [CenteredDataForPCA].impute_11 * -0.0662942091802 + [CenteredDataForPCA].impute_12 * -0.0237675051035 + [CenteredDataForPCA].impute_13 * 0.0720972582022 + [CenteredDataForPCA].impute_14 * 0.0680946133009 + [CenteredDataForPCA].impute_15 * 0.0684911703331 + [CenteredDataForPCA].impute_16 * -0.025052113941 + [CenteredDataForPCA].impute_17 * 0.143130558208 + [CenteredDataForPCA].impute_18 * 0.108260449314 + [CenteredDataForPCA].impute_19 * -0.0271329207376 + [CenteredDataForPCA].impute_20 * 0.0342788726532 + [CenteredDataForPCA].impute_21 * 1.0428949403e-05 AS anoova_3, [CenteredDataForPCA].impute_2 * 0.0420250332586 + [CenteredDataForPCA].impute_3 * 0.0982018863898 + [CenteredDataForPCA].impute_4 * 0.0857741885302 + [CenteredDataForPCA].impute_5 * -0.379617126906 + [CenteredDataForPCA].impute_6 * -0.0413377727749 + [CenteredDataForPCA].impute_7 * 0.27322896439 + [CenteredDataForPCA].impute_8 * -0.638481482522 + [CenteredDataForPCA].impute_9 * -0.254377379379 + [CenteredDataForPCA].impute_10 * 0.223749672113 + [CenteredDataForPCA].impute_11 * -0.200234070259 + [CenteredDataForPCA].impute_12 * 0.0243137915724 + [CenteredDataForPCA].impute_13 * 0.132100315042 + [CenteredDataForPCA].impute_14 * -0.143182199586 + [CenteredDataForPCA].impute_15 * 0.110864117498 + [CenteredDataForPCA].impute_16 * -0.226303620712 + [CenteredDataForPCA].impute_17 * 0.114887793298 + [CenteredDataForPCA].impute_18 * -0.167022544506 + [CenteredDataForPCA].impute_19 * -0.095589694648 + [CenteredDataForPCA].impute_20 * -0.0787002786661 + [CenteredDataForPCA].impute_21 * 0.199406979789 AS anoova_4, [CenteredDataForPCA].impute_2 * 0.139521529911 + [CenteredDataForPCA].impute_3 * 0.0306032049791 + [CenteredDataForPCA].impute_4 * 0.0407865090079 + [CenteredDataForPCA].impute_5 * 0.0285958186697 + [CenteredDataForPCA].impute_6 * -0.00159740688676 + [CenteredDataForPCA].impute_7 * 0.262335342581 + [CenteredDataForPCA].impute_8 * 0.0837022444213 + [CenteredDataForPCA].impute_9 * -0.314991336571 + [CenteredDataForPCA].impute_10 * -0.295607807372 + [CenteredDataForPCA].impute_11 * -0.117755423719 + [CenteredDataForPCA].impute_12 * 0.221119918636 + [CenteredDataForPCA].impute_13 * 0.00571419912307 + [CenteredDataForPCA].impute_14 * -0.0982907119568 + [CenteredDataForPCA].impute_15 * 0.125647599735 + [CenteredDataForPCA].impute_16 * 0.131714614887 + [CenteredDataForPCA].impute_17 * -0.729548374206 + [CenteredDataForPCA].impute_18 * -0.0111472306302 + [CenteredDataForPCA].impute_19 * 0.187522672718 + [CenteredDataForPCA].impute_20 * 0.0269434004551 + [CenteredDataForPCA].impute_21 * 0.202084227384 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.266865813665 + [CenteredDataForPCA].impute_3 * -0.141892808623 + [CenteredDataForPCA].impute_4 * 0.383744299105 + [CenteredDataForPCA].impute_5 * -0.0762789131507 + [CenteredDataForPCA].impute_6 * -0.0776700926898 + [CenteredDataForPCA].impute_7 * -0.41150774265 + [CenteredDataForPCA].impute_8 * -0.195746017487 + [CenteredDataForPCA].impute_9 * 0.215975104274 + [CenteredDataForPCA].impute_10 * 0.249783050004 + [CenteredDataForPCA].impute_11 * 0.0798302881364 + [CenteredDataForPCA].impute_12 * -0.0202292445877 + [CenteredDataForPCA].impute_13 * -0.162808284293 + [CenteredDataForPCA].impute_14 * -0.0586251126267 + [CenteredDataForPCA].impute_15 * 0.0544820220095 + [CenteredDataForPCA].impute_16 * -0.0731899151118 + [CenteredDataForPCA].impute_17 * -0.420821953995 + [CenteredDataForPCA].impute_18 * -0.30088183686 + [CenteredDataForPCA].impute_19 * 0.221448846163 + [CenteredDataForPCA].impute_20 * -0.171720019292 + [CenteredDataForPCA].impute_21 * -0.204076887234 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.210024885634 + [CenteredDataForPCA].impute_3 * -0.0976049838815 + [CenteredDataForPCA].impute_4 * 0.160017604048 + [CenteredDataForPCA].impute_5 * 0.0432152385973 + [CenteredDataForPCA].impute_6 * -0.0227932608178 + [CenteredDataForPCA].impute_7 * 0.0218324565529 + [CenteredDataForPCA].impute_8 * 0.111469117983 + [CenteredDataForPCA].impute_9 * -0.00385074453427 + [CenteredDataForPCA].impute_10 * -0.0485808598629 + [CenteredDataForPCA].impute_11 * 0.0283787859017 + [CenteredDataForPCA].impute_12 * 0.391851495804 + [CenteredDataForPCA].impute_13 * -0.364423639053 + [CenteredDataForPCA].impute_14 * -0.314690220011 + [CenteredDataForPCA].impute_15 * -0.219409049246 + [CenteredDataForPCA].impute_16 * -0.322150466029 + [CenteredDataForPCA].impute_17 * 0.115127817226 + [CenteredDataForPCA].impute_18 * 0.362351097332 + [CenteredDataForPCA].impute_19 * -0.0580994766683 + [CenteredDataForPCA].impute_20 * -0.357899639567 + [CenteredDataForPCA].impute_21 * 0.298268305956 AS anoova_7, [CenteredDataForPCA].impute_2 * -0.169500983434 + [CenteredDataForPCA].impute_3 * 0.251037673027 + [CenteredDataForPCA].impute_4 * 0.433766399195 + [CenteredDataForPCA].impute_5 * -0.0372717596743 + [CenteredDataForPCA].impute_6 * 0.371447096976 + [CenteredDataForPCA].impute_7 * 0.135369859911 + [CenteredDataForPCA].impute_8 * 0.0396425611847 + [CenteredDataForPCA].impute_9 * -0.0906562323216 + [CenteredDataForPCA].impute_10 * -0.0222543190618 + [CenteredDataForPCA].impute_11 * 0.00698832786689 + [CenteredDataForPCA].impute_12 * 0.16101422108 + [CenteredDataForPCA].impute_13 * 0.0943209560316 + [CenteredDataForPCA].impute_14 * 0.173052722688 + [CenteredDataForPCA].impute_15 * -0.449041642559 + [CenteredDataForPCA].impute_16 * -0.0927419471284 + [CenteredDataForPCA].impute_17 * -0.114286129659 + [CenteredDataForPCA].impute_18 * -0.0393761681071 + [CenteredDataForPCA].impute_19 * -0.348471644805 + [CenteredDataForPCA].impute_20 * 0.283324949343 + [CenteredDataForPCA].impute_21 * -0.246472838537 AS anoova_8, [CenteredDataForPCA].impute_2 * -0.524198091148 + [CenteredDataForPCA].impute_3 * -0.0534811243436 + [CenteredDataForPCA].impute_4 * -0.213202184653 + [CenteredDataForPCA].impute_5 * 0.0833681932062 + [CenteredDataForPCA].impute_6 * -0.0804055145412 + [CenteredDataForPCA].impute_7 * -0.121409886972 + [CenteredDataForPCA].impute_8 * 0.0416337367022 + [CenteredDataForPCA].impute_9 * 0.185541127581 + [CenteredDataForPCA].impute_10 * 0.0556068887101 + [CenteredDataForPCA].impute_11 * 0.033129249176 + [CenteredDataForPCA].impute_12 * 0.208680911804 + [CenteredDataForPCA].impute_13 * 0.490598031765 + [CenteredDataForPCA].impute_14 * -0.0988276481981 + [CenteredDataForPCA].impute_15 * 0.018533935776 + [CenteredDataForPCA].impute_16 * -0.0735733835658 + [CenteredDataForPCA].impute_17 * -0.069911466929 + [CenteredDataForPCA].impute_18 * -0.109502246849 + [CenteredDataForPCA].impute_19 * -0.049767826577 + [CenteredDataForPCA].impute_20 * 0.336081802061 + [CenteredDataForPCA].impute_21 * 0.41992019464 AS anoova_9, [CenteredDataForPCA].impute_2 * 0.198847104465 + [CenteredDataForPCA].impute_3 * 0.069912836692 + [CenteredDataForPCA].impute_4 * -0.0784392829066 + [CenteredDataForPCA].impute_5 * 0.00244872125831 + [CenteredDataForPCA].impute_6 * 0.238030992028 + [CenteredDataForPCA].impute_7 * -0.241444943452 + [CenteredDataForPCA].impute_8 * -0.144511464556 + [CenteredDataForPCA].impute_9 * 0.204545754444 + [CenteredDataForPCA].impute_10 * 0.153905418729 + [CenteredDataForPCA].impute_11 * 0.011237452237 + [CenteredDataForPCA].impute_12 * -0.175345460214 + [CenteredDataForPCA].impute_13 * 0.225877395832 + [CenteredDataForPCA].impute_14 * 0.185877968914 + [CenteredDataForPCA].impute_15 * 0.130461977048 + [CenteredDataForPCA].impute_16 * -0.132483941065 + [CenteredDataForPCA].impute_17 * -0.363405779764 + [CenteredDataForPCA].impute_18 * 0.518365363995 + [CenteredDataForPCA].impute_19 * -0.351377731801 + [CenteredDataForPCA].impute_20 * -0.22608496159 + [CenteredDataForPCA].impute_21 * 0.147263384402 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.230882026553 + [CenteredDataForPCA].impute_3 * 0.660661760097 + [CenteredDataForPCA].impute_4 * 0.125003043328 + [CenteredDataForPCA].impute_5 * 0.13376761662 + [CenteredDataForPCA].impute_6 * -0.0202435480056 + [CenteredDataForPCA].impute_7 * -0.0852948060829 + [CenteredDataForPCA].impute_8 * 0.194398681242 + [CenteredDataForPCA].impute_9 * 0.151895419872 + [CenteredDataForPCA].impute_10 * -0.0247507853092 + [CenteredDataForPCA].impute_11 * 0.0695618360973 + [CenteredDataForPCA].impute_12 * -0.217369094627 + [CenteredDataForPCA].impute_13 * -0.0244676342374 + [CenteredDataForPCA].impute_14 * -0.0775642945496 + [CenteredDataForPCA].impute_15 * -0.00453253891973 + [CenteredDataForPCA].impute_16 * -0.394006095793 + [CenteredDataForPCA].impute_17 * 0.0251482376339 + [CenteredDataForPCA].impute_18 * -0.233991557728 + [CenteredDataForPCA].impute_19 * 0.221634462532 + [CenteredDataForPCA].impute_20 * 0.0163600793187 + [CenteredDataForPCA].impute_21 * 0.297994874545 AS anoova_11, [CenteredDataForPCA].impute_2 * -0.075794178047 + [CenteredDataForPCA].impute_3 * -0.0441713812419 + [CenteredDataForPCA].impute_4 * -0.123469647006 + [CenteredDataForPCA].impute_5 * -0.0338390468587 + [CenteredDataForPCA].impute_6 * 0.750723916012 + [CenteredDataForPCA].impute_7 * -0.109059326272 + [CenteredDataForPCA].impute_8 * 0.0201007348089 + [CenteredDataForPCA].impute_9 * -0.0678732158009 + [CenteredDataForPCA].impute_10 * -0.0229884040355 + [CenteredDataForPCA].impute_11 * 0.0384932794711 + [CenteredDataForPCA].impute_12 * -0.15159205287 + [CenteredDataForPCA].impute_13 * -0.128618516446 + [CenteredDataForPCA].impute_14 * -0.523306633223 + [CenteredDataForPCA].impute_15 * 0.230969816763 + [CenteredDataForPCA].impute_16 * 0.0736521069755 + [CenteredDataForPCA].impute_17 * 0.0570462777565 + [CenteredDataForPCA].impute_18 * -0.0885143186361 + [CenteredDataForPCA].impute_19 * 0.0240193880012 + [CenteredDataForPCA].impute_20 * 0.0979926612132 + [CenteredDataForPCA].impute_21 * -6.44270044282e-06 AS anoova_12, [CenteredDataForPCA].impute_2 * -0.287774583866 + [CenteredDataForPCA].impute_3 * -0.270014594294 + [CenteredDataForPCA].impute_4 * -0.0805922490903 + [CenteredDataForPCA].impute_5 * -0.0406975325286 + [CenteredDataForPCA].impute_6 * 0.150971285829 + [CenteredDataForPCA].impute_7 * 0.141575001715 + [CenteredDataForPCA].impute_8 * -0.0453514399051 + [CenteredDataForPCA].impute_9 * -0.142981970917 + [CenteredDataForPCA].impute_10 * -0.0708249124751 + [CenteredDataForPCA].impute_11 * -0.0628587675396 + [CenteredDataForPCA].impute_12 * -0.547655837676 + [CenteredDataForPCA].impute_13 * -0.238600481448 + [CenteredDataForPCA].impute_14 * 0.373014512703 + [CenteredDataForPCA].impute_15 * -0.255999476747 + [CenteredDataForPCA].impute_16 * -0.208148153038 + [CenteredDataForPCA].impute_17 * -0.0821597729154 + [CenteredDataForPCA].impute_18 * 0.0414848875621 + [CenteredDataForPCA].impute_19 * 0.229273137038 + [CenteredDataForPCA].impute_20 * 0.0799972406128 + [CenteredDataForPCA].impute_21 * 0.299211355059 AS anoova_13, [CenteredDataForPCA].impute_2 * 0.041448419094 + [CenteredDataForPCA].impute_3 * 0.0593962476201 + [CenteredDataForPCA].impute_4 * -0.0409735385819 + [CenteredDataForPCA].impute_5 * -0.0575711748862 + [CenteredDataForPCA].impute_6 * -0.0179826504332 + [CenteredDataForPCA].impute_7 * -0.0609513862096 + [CenteredDataForPCA].impute_8 * -0.0938648690919 + [CenteredDataForPCA].impute_9 * 0.0720036318069 + [CenteredDataForPCA].impute_10 * 0.126756675592 + [CenteredDataForPCA].impute_11 * 0.0245053551123 + [CenteredDataForPCA].impute_12 * 0.278153754433 + [CenteredDataForPCA].impute_13 * -0.523450764937 + [CenteredDataForPCA].impute_14 * 0.258870307538 + [CenteredDataForPCA].impute_15 * 0.405133245983 + [CenteredDataForPCA].impute_16 * -0.146203908678 + [CenteredDataForPCA].impute_17 * -0.00577814626654 + [CenteredDataForPCA].impute_18 * 0.140255969816 + [CenteredDataForPCA].impute_19 * -0.0554559618413 + [CenteredDataForPCA].impute_20 * 0.570813271911 + [CenteredDataForPCA].impute_21 * 0.0505829280788 AS anoova_14, [CenteredDataForPCA].impute_2 * -0.0998145728579 + [CenteredDataForPCA].impute_3 * 0.0791014207159 + [CenteredDataForPCA].impute_4 * -0.226271274557 + [CenteredDataForPCA].impute_5 * 0.036486161171 + [CenteredDataForPCA].impute_6 * -0.344580480551 + [CenteredDataForPCA].impute_7 * -0.000678537601214 + [CenteredDataForPCA].impute_8 * 0.0260417977504 + [CenteredDataForPCA].impute_9 * -0.024507579693 + [CenteredDataForPCA].impute_10 * -0.0664246847606 + [CenteredDataForPCA].impute_11 * -0.0237311044812 + [CenteredDataForPCA].impute_12 * -0.324389901216 + [CenteredDataForPCA].impute_13 * -0.316990988213 + [CenteredDataForPCA].impute_14 * -0.305715123788 + [CenteredDataForPCA].impute_15 * -0.094711589037 + [CenteredDataForPCA].impute_16 * 0.0189278327834 + [CenteredDataForPCA].impute_17 * -0.221582712405 + [CenteredDataForPCA].impute_18 * -0.195518706032 + [CenteredDataForPCA].impute_19 * -0.636748206861 + [CenteredDataForPCA].impute_20 * 0.063446838355 + [CenteredDataForPCA].impute_21 * -0.0309369572505 AS anoova_15, [CenteredDataForPCA].impute_2 * 0.273165944499 + [CenteredDataForPCA].impute_3 * -0.0212482878085 + [CenteredDataForPCA].impute_4 * -0.174462970418 + [CenteredDataForPCA].impute_5 * -0.0828560780368 + [CenteredDataForPCA].impute_6 * -0.123859263107 + [CenteredDataForPCA].impute_7 * -0.174462636192 + [CenteredDataForPCA].impute_8 * -0.224357692117 + [CenteredDataForPCA].impute_9 * 0.0448557997318 + [CenteredDataForPCA].impute_10 * 0.117593877518 + [CenteredDataForPCA].impute_11 * -0.0274259917878 + [CenteredDataForPCA].impute_12 * -0.0274684318051 + [CenteredDataForPCA].impute_13 * 0.0207172806341 + [CenteredDataForPCA].impute_14 * -0.360763710583 + [CenteredDataForPCA].impute_15 * -0.524404085439 + [CenteredDataForPCA].impute_16 * -0.0198035079284 + [CenteredDataForPCA].impute_17 * -0.110686997875 + [CenteredDataForPCA].impute_18 * 0.304692056965 + [CenteredDataForPCA].impute_19 * 0.301469137168 + [CenteredDataForPCA].impute_20 * 0.398238850354 + [CenteredDataForPCA].impute_21 * -0.116732541456 AS anoova_16, [CenteredDataForPCA].impute_2 * -0.0143312115098 + [CenteredDataForPCA].impute_3 * -0.211643625062 + [CenteredDataForPCA].impute_4 * -0.145264723155 + [CenteredDataForPCA].impute_5 * 0.0619911276965 + [CenteredDataForPCA].impute_6 * -0.0539485764933 + [CenteredDataForPCA].impute_7 * 0.135735553814 + [CenteredDataForPCA].impute_8 * 0.13571499186 + [CenteredDataForPCA].impute_9 * -0.0815873539016 + [CenteredDataForPCA].impute_10 * -0.133099667501 + [CenteredDataForPCA].impute_11 * -0.0167994099626 + [CenteredDataForPCA].impute_12 * -0.0274960730185 + [CenteredDataForPCA].impute_13 * 0.207431078759 + [CenteredDataForPCA].impute_14 * -0.092400452278 + [CenteredDataForPCA].impute_15 * 0.207107206797 + [CenteredDataForPCA].impute_16 * -0.725691941821 + [CenteredDataForPCA].impute_17 * -0.0754649453656 + [CenteredDataForPCA].impute_18 * 0.0306290357982 + [CenteredDataForPCA].impute_19 * 0.0309433012901 + [CenteredDataForPCA].impute_20 * 0.0448266229729 + [CenteredDataForPCA].impute_21 * -0.483948072375 AS anoova_17, [CenteredDataForPCA].impute_2 * 0.171043922171 + [CenteredDataForPCA].impute_3 * -0.33467891418 + [CenteredDataForPCA].impute_4 * 0.64669568344 + [CenteredDataForPCA].impute_5 * 0.0478627240834 + [CenteredDataForPCA].impute_6 * -0.170460342453 + [CenteredDataForPCA].impute_7 * 0.0767681167902 + [CenteredDataForPCA].impute_8 * 0.136187663024 + [CenteredDataForPCA].impute_9 * 0.027891649064 + [CenteredDataForPCA].impute_10 * -0.0207621186362 + [CenteredDataForPCA].impute_11 * 0.0416639365776 + [CenteredDataForPCA].impute_12 * -0.304040000651 + [CenteredDataForPCA].impute_13 * 0.150178310323 + [CenteredDataForPCA].impute_14 * -0.229343677847 + [CenteredDataForPCA].impute_15 * 0.201302423307 + [CenteredDataForPCA].impute_16 * 0.0432501936018 + [CenteredDataForPCA].impute_17 * 0.106253854346 + [CenteredDataForPCA].impute_18 * 0.170848598373 + [CenteredDataForPCA].impute_19 * -0.106686787378 + [CenteredDataForPCA].impute_20 * 0.287946103251 + [CenteredDataForPCA].impute_21 * 0.192421517461 AS anoova_18, [CenteredDataForPCA].impute_2 * -0.501338146898 + [CenteredDataForPCA].impute_3 * 0.440570386371 + [CenteredDataForPCA].impute_4 * 0.0695940715727 + [CenteredDataForPCA].impute_5 * -0.0026282196236 + [CenteredDataForPCA].impute_6 * -0.142499689329 + [CenteredDataForPCA].impute_7 * 0.246358492413 + [CenteredDataForPCA].impute_8 * -0.0523692853823 + [CenteredDataForPCA].impute_9 * 0.0243395412859 + [CenteredDataForPCA].impute_10 * 0.0365392653127 + [CenteredDataForPCA].impute_11 * -0.0633179068019 + [CenteredDataForPCA].impute_12 * -0.219614466995 + [CenteredDataForPCA].impute_13 * 0.00207873393041 + [CenteredDataForPCA].impute_14 * -0.132947716834 + [CenteredDataForPCA].impute_15 * 0.216068044152 + [CenteredDataForPCA].impute_16 * 0.188379902915 + [CenteredDataForPCA].impute_17 * -0.00743114485897 + [CenteredDataForPCA].impute_18 * 0.456577646958 + [CenteredDataForPCA].impute_19 * 0.202784230733 + [CenteredDataForPCA].impute_20 * -0.0063059812041 + [CenteredDataForPCA].impute_21 * -0.24953508481 AS anoova_19, [CenteredDataForPCA].impute_2 * 8.11417233049e-17 + [CenteredDataForPCA].impute_3 * 2.89597123006e-16 + [CenteredDataForPCA].impute_4 * 3.44892697344e-16 + [CenteredDataForPCA].impute_5 * -0.108834418808 + [CenteredDataForPCA].impute_6 * -8.65736441983e-17 + [CenteredDataForPCA].impute_7 * -0.148151766419 + [CenteredDataForPCA].impute_8 * 0.446175569624 + [CenteredDataForPCA].impute_9 * -0.146008109758 + [CenteredDataForPCA].impute_10 * 0.436705405193 + [CenteredDataForPCA].impute_11 * -0.745052686338 + [CenteredDataForPCA].impute_12 * 1.46369498182e-16 + [CenteredDataForPCA].impute_13 * 9.54290791932e-17 + [CenteredDataForPCA].impute_14 * 1.84231151067e-16 + [CenteredDataForPCA].impute_15 * -2.46948041646e-16 + [CenteredDataForPCA].impute_16 * -1.43242034734e-16 + [CenteredDataForPCA].impute_17 * 1.49688759132e-17 + [CenteredDataForPCA].impute_18 * -1.10550345055e-17 + [CenteredDataForPCA].impute_19 * 1.15397905898e-16 + [CenteredDataForPCA].impute_20 * 1.374988485e-16 + [CenteredDataForPCA].impute_21 * -1.33673422942e-16 AS anoova_20, [CenteredDataForPCA].impute_2 * 2.4485202996e-17 + [CenteredDataForPCA].impute_3 * -1.25908320304e-16 + [CenteredDataForPCA].impute_4 * -2.97395056493e-16 + [CenteredDataForPCA].impute_5 * -0.728333355085 + [CenteredDataForPCA].impute_6 * 2.57309113729e-16 + [CenteredDataForPCA].impute_7 * 0.00144061937571 + [CenteredDataForPCA].impute_8 * 0.141921696774 + [CenteredDataForPCA].impute_9 * 0.462651633423 + [CenteredDataForPCA].impute_10 * -0.455607186064 + [CenteredDataForPCA].impute_11 * -0.16662004252 + [CenteredDataForPCA].impute_12 * -4.63189143199e-17 + [CenteredDataForPCA].impute_13 * 6.5906947836e-17 + [CenteredDataForPCA].impute_14 * -8.39550241344e-17 + [CenteredDataForPCA].impute_15 * -1.93163227749e-16 + [CenteredDataForPCA].impute_16 * -2.56527111696e-18 + [CenteredDataForPCA].impute_17 * 2.72935329878e-17 + [CenteredDataForPCA].impute_18 * -2.57414150897e-16 + [CenteredDataForPCA].impute_19 * -1.52197472034e-16 + [CenteredDataForPCA].impute_20 * 5.52616259261e-18 + [CenteredDataForPCA].impute_21 * 1.64009161976e-16 AS anoova_21 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.19662505388259888) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_15 <= -0.42765548825263977) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_7 <= -0.17957845330238342) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.8771288394927979) THEN 7 ELSE 8 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.19662505388259888 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_15' AS feature, -0.42765548825263977 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.17982456140350878 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_7' AS feature, -0.17957845330238342 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2261904761904762 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7333333333333333 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, -0.8771288394927979 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23837209302325582 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17647058823529413 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4615384615384615 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0_0, [DT_Output].[Estimator] AS [Estimator_0_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -1.4293913841247559) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 1.2295660972595215) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.5904829502105713) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -1.4293913841247559 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00014246034618110414 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6324211387890617 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 1.2295660972595215 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.09038482078050258 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_9' AS feature, 0.5904829502105713 AS threshold, 61 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.16712356921493604 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9065544169690939 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0633573606162918 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5324676669795592 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_0_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_0_1, [DT_Output_1].[Estimator] AS [Estimator_0_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.05051703006029129) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.1847020387649536) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_16 <= 0.00754155358299613) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.33450907468795776) THEN 7 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.2748819589614868) THEN 9 ELSE 10 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_17' AS feature, -0.05051703006029129 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00034304253678906047 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_19' AS feature, -0.1847020387649536 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1466183545130136 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7458157241702333 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_16' AS feature, 0.00754155358299613 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3125880530987968 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6413508907906009 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9462932382770202 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_10' AS feature, -0.33450907468795776 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13468032236434138 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.007104252747246038 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_3' AS feature, 0.2748819589614868 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.21774051488901094 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0035456720417202 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7232662078114109 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_0_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_0_2, [DT_Output_2].[Estimator] AS [Estimator_0_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.4609583616256714) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_14 <= 0.4189974069595337) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= -0.4528167247772217) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.4609583616256714 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0005048874510280349 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8642751887987954 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_14' AS feature, 0.4189974069595337 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13253213586598023 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_18' AS feature, -0.4528167247772217 AS threshold, 52 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.20896241413392147 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.46253832685638563 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9964792882138526 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.081585882857395 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_0_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_0_3, [DT_Output_3].[Estimator] AS [Estimator_0_3] 
FROM [DT_Output_3]), 
[RF_Join_CTE_0] AS 
(SELECT [RF_Tree_0_0].join_key_0_0 AS join_key_0_0, [RF_Tree_0_0].[Estimator_0_0] AS [Estimator_0_0], [RF_Tree_0_1].join_key_0_1 AS join_key_0_1, [RF_Tree_0_1].[Estimator_0_1] AS [Estimator_0_1], [RF_Tree_0_2].join_key_0_2 AS join_key_0_2, [RF_Tree_0_2].[Estimator_0_2] AS [Estimator_0_2], [RF_Tree_0_3].join_key_0_3 AS join_key_0_3, [RF_Tree_0_3].[Estimator_0_3] AS [Estimator_0_3] 
FROM [RF_Tree_0_0] LEFT OUTER JOIN [RF_Tree_0_1] ON [RF_Tree_0_0].join_key_0_0 = [RF_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [RF_Tree_0_2] ON [RF_Tree_0_2].join_key_0_2 = [RF_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [RF_Tree_0_3] ON [RF_Tree_0_3].join_key_0_3 = [RF_Tree_0_2].join_key_0_2), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.19662505388259888) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.5640106201171875) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= 0.08283760398626328) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_15 <= 0.4287516474723816) THEN 7 ELSE 8 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.19662505388259888 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00010360001063000723 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, 0.5640106201171875 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.16339207716007514 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_18' AS feature, 0.08283760398626328 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2090849000615708 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.980006710143278 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6933948387321147 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1478171069848488 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_15' AS feature, 0.4287516474723816 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2163485673735182 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.37346266103948295 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5747951631313415 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_1_0] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_1_0, [DT_Output_4].[Estimator] AS [Estimator_1_0] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -1.4293913841247559) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 1.2295660972595215) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.5904829502105713) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -1.4293913841247559 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.826115600149177e-05 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3596912976163755 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 1.2295660972595215 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08211273251107001 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_9' AS feature, 0.5904829502105713 AS threshold, 61 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.15171112473818124 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8776766344171226 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03697767215905293 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.46739826618687974 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_1_1] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_1_1, [DT_Output_5].[Estimator] AS [Estimator_1_1] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.05051703006029129) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.1847020387649536) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.18368540704250336) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= 0.46859562397003174) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_12 <= -0.18631044030189514) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_17' AS feature, -0.05051703006029129 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0005246265077058027 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_19' AS feature, -0.1847020387649536 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13616577195684215 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7124999935020898 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_2' AS feature, 0.18368540704250336 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.28865854046583955 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5272054490533368 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7254343617632393 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_18' AS feature, 0.46859562397003174 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.12468258467611236 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_12' AS feature, -0.18631044030189514 AS threshold, 37 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.18799870978469876 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.4353889282665866 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9939527199048965 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1315283823248428 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].count AS count, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[RF_Tree_1_2] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_1_2, [DT_Output_6].[Estimator] AS [Estimator_1_2] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.4609583616256714) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.5028632879257202) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_14 <= 0.40950390696525574) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_16 <= 0.10083196312189102) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.4609583616256714 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0003161693237685481 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5656762223010603 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.5028632879257202 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.121695637959476 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_14' AS feature, 0.40950390696525574 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.027178773055918 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6272436127828033 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5336778322837779 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_16' AS feature, 0.10083196312189102 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.23196531368029363 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9862851789552962 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9666506882821889 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].count AS count, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[RF_Tree_1_3] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_1_3, [DT_Output_7].[Estimator] AS [Estimator_1_3] 
FROM [DT_Output_7]), 
[RF_Join_CTE_1] AS 
(SELECT [RF_Tree_1_0].join_key_1_0 AS join_key_1_0, [RF_Tree_1_0].[Estimator_1_0] AS [Estimator_1_0], [RF_Tree_1_1].join_key_1_1 AS join_key_1_1, [RF_Tree_1_1].[Estimator_1_1] AS [Estimator_1_1], [RF_Tree_1_2].join_key_1_2 AS join_key_1_2, [RF_Tree_1_2].[Estimator_1_2] AS [Estimator_1_2], [RF_Tree_1_3].join_key_1_3 AS join_key_1_3, [RF_Tree_1_3].[Estimator_1_3] AS [Estimator_1_3] 
FROM [RF_Tree_1_0] LEFT OUTER JOIN [RF_Tree_1_1] ON [RF_Tree_1_0].join_key_1_0 = [RF_Tree_1_1].join_key_1_1 LEFT OUTER JOIN [RF_Tree_1_2] ON [RF_Tree_1_2].join_key_1_2 = [RF_Tree_1_1].join_key_1_1 LEFT OUTER JOIN [RF_Tree_1_3] ON [RF_Tree_1_3].join_key_1_3 = [RF_Tree_1_2].join_key_1_2), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.19662505388259888) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= -0.8864881992340088) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_16 <= 0.24101947247982025) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_15 <= 0.4287516474723816) THEN 7 ELSE 8 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.19662505388259888 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00015001690816857872 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, -0.8864881992340088 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.14929137978328477 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.10947668942118981 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_16' AS feature, 0.24101947247982025 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.19351859925078937 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9602628189797844 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6840531943067792 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_15' AS feature, 0.4287516474723816 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1975489989960553 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333931669154541 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3413466708498383 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].count AS count, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[RF_Tree_2_0] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_2_0, [DT_Output_8].[Estimator] AS [Estimator_2_0] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -1.4293913841247559) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -1.5402551889419556) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.8427749276161194) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -1.4293913841247559 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0001289524130304076 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1687742237863472 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -1.5402551889419556 AS threshold, 82 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0750796656414509 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.980428849618768 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_3' AS feature, 0.8427749276161194 AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0013781080561961938 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.42055258692794073 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9984681511454211 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].count AS count, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[RF_Tree_2_1] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_2_1, [DT_Output_9].[Estimator] AS [Estimator_2_1] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.05051703006029129) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.1847020387649536) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.21917906403541565) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= -0.08991403877735138) THEN 7 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.29217857122421265) THEN 9 ELSE 10 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_17' AS feature, -0.05051703006029129 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0009399859650222109 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_19' AS feature, -0.1847020387649536 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12646157180457593 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6796202399450721 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_8' AS feature, -0.21917906403541565 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26617898013812835 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.39003445260671066 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4591564796010468 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_11' AS feature, -0.08991403877735138 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.11492609327148891 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0017220020275654961 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_2' AS feature, 0.29217857122421265 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1989099404569243 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9876886548500797 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6814223391680605 AS [Estimator]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].count AS count, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[RF_Tree_2_2] AS 
(SELECT [DT_Output_10].[KEY] AS join_key_2_2, [DT_Output_10].[Estimator] AS [Estimator_2_2] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.4609583616256714) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.5028632879257202) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= -0.255899578332901) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_16 <= 0.10083196312189102) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.4609583616256714 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00011921470734142458 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3417296408415849 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.5028632879257202 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.11130101583766003 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_18' AS feature, -0.255899578332901 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.024384938849544697 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6137468585991213 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5148802722518203 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_16' AS feature, 0.10083196312189102 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2127031056571279 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9628109081422864 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9432192124453489 AS [Estimator]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].count AS count, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[RF_Tree_2_3] AS 
(SELECT [DT_Output_11].[KEY] AS join_key_2_3, [DT_Output_11].[Estimator] AS [Estimator_2_3] 
FROM [DT_Output_11]), 
[RF_Join_CTE_2] AS 
(SELECT [RF_Tree_2_0].join_key_2_0 AS join_key_2_0, [RF_Tree_2_0].[Estimator_2_0] AS [Estimator_2_0], [RF_Tree_2_1].join_key_2_1 AS join_key_2_1, [RF_Tree_2_1].[Estimator_2_1] AS [Estimator_2_1], [RF_Tree_2_2].join_key_2_2 AS join_key_2_2, [RF_Tree_2_2].[Estimator_2_2] AS [Estimator_2_2], [RF_Tree_2_3].join_key_2_3 AS join_key_2_3, [RF_Tree_2_3].[Estimator_2_3] AS [Estimator_2_3] 
FROM [RF_Tree_2_0] LEFT OUTER JOIN [RF_Tree_2_1] ON [RF_Tree_2_0].join_key_2_0 = [RF_Tree_2_1].join_key_2_1 LEFT OUTER JOIN [RF_Tree_2_2] ON [RF_Tree_2_2].join_key_2_2 = [RF_Tree_2_1].join_key_2_1 LEFT OUTER JOIN [RF_Tree_2_3] ON [RF_Tree_2_3].join_key_2_3 = [RF_Tree_2_2].join_key_2_2), 
[DT_node_lookup_12] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.19662505388259888) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.5640106201171875) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.6697448492050171) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.8771288394927979) THEN 7 ELSE 8 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.19662505388259888 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00023814182652380112 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, 0.5640106201171875 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13603286428553518 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.6697448492050171 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.17794830724110897 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9511386677829681 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.643220877935222 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08218993731354353 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, -0.8771288394927979 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17976881585170057 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04905306231969011 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.989425757922625 AS [Estimator]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].count AS count, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[RF_Tree_3_0] AS 
(SELECT [DT_Output_12].[KEY] AS join_key_3_0, [DT_Output_12].[Estimator] AS [Estimator_3_0] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.7552872896194458) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.2526392340660095) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.7865777015686035) THEN 5 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= 0.0277351476252079) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.7552872896194458 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00045865886546429287 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, -0.2526392340660095 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1959598889887936 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.28991557385994005 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3543366313455083 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.7865777015686035 AS threshold, 64 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.11094409203348436 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9601895291275033 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_17' AS feature, 0.0277351476252079 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03155758037400613 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7332938371135945 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6010105659867566 AS [Estimator]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].count AS count, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[RF_Tree_3_1] AS 
(SELECT [DT_Output_13].[KEY] AS join_key_3_1, [DT_Output_13].[Estimator] AS [Estimator_3_1] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_16 <= -0.5658828020095825) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.34336528182029724) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= 0.4905257821083069) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_16' AS feature, -0.5658828020095825 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0013504410375238932 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7833785559196027 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, -0.34336528182029724 AS threshold, 76 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06084055162801138 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4277846523799119 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_8' AS feature, 0.4905257821083069 AS threshold, 50 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1501558832761338 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9745827530000164 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08345867277710084 AS [Estimator]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].count AS count, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[RF_Tree_3_2] AS 
(SELECT [DT_Output_14].[KEY] AS join_key_3_2, [DT_Output_14].[Estimator] AS [Estimator_3_2] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.4609583616256714) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_14 <= 0.4189974069595337) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= 0.3440084457397461) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.4609583616256714 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0002663374892942727 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1692368635100763 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_14' AS feature, 0.4189974069595337 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1011908571634941 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_10' AS feature, 0.3440084457397461 AS threshold, 52 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.16577501449602303 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9411949101123074 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3579582844412822 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11559734119805071 AS [Estimator]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].count AS count, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[RF_Tree_3_3] AS 
(SELECT [DT_Output_15].[KEY] AS join_key_3_3, [DT_Output_15].[Estimator] AS [Estimator_3_3] 
FROM [DT_Output_15]), 
[RF_Join_CTE_3] AS 
(SELECT [RF_Tree_3_0].join_key_3_0 AS join_key_3_0, [RF_Tree_3_0].[Estimator_3_0] AS [Estimator_3_0], [RF_Tree_3_1].join_key_3_1 AS join_key_3_1, [RF_Tree_3_1].[Estimator_3_1] AS [Estimator_3_1], [RF_Tree_3_2].join_key_3_2 AS join_key_3_2, [RF_Tree_3_2].[Estimator_3_2] AS [Estimator_3_2], [RF_Tree_3_3].join_key_3_3 AS join_key_3_3, [RF_Tree_3_3].[Estimator_3_3] AS [Estimator_3_3] 
FROM [RF_Tree_3_0] LEFT OUTER JOIN [RF_Tree_3_1] ON [RF_Tree_3_0].join_key_3_0 = [RF_Tree_3_1].join_key_3_1 LEFT OUTER JOIN [RF_Tree_3_2] ON [RF_Tree_3_2].join_key_3_2 = [RF_Tree_3_1].join_key_3_1 LEFT OUTER JOIN [RF_Tree_3_3] ON [RF_Tree_3_3].join_key_3_3 = [RF_Tree_3_2].join_key_3_2), 
[DT_node_lookup_16] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 1.235898494720459) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.48987141251564026) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.5580271482467651) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.14420264959335327) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 1.235898494720459 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0004048403040966675 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.48987141251564026 AS threshold, 81 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.07024088788957165 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.5580271482467651 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.20859844380221745 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9065840756175085 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0131139397080404 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, 0.14420264959335327 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.01114590970610226 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.42654026256523037 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8745334686457337 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0109973308327627 AS [Estimator]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].count AS count, [DT_node_data_16].depth AS depth, [DT_node_data_16].parent_id AS parent_id, [DT_node_data_16].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[RF_Tree_4_0] AS 
(SELECT [DT_Output_16].[KEY] AS join_key_4_0, [DT_Output_16].[Estimator] AS [Estimator_4_0] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 1.2874071598052979) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.7892568111419678) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.0513712577521801) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 <= 0.5644228458404541) THEN 6 ELSE 7 END END ELSE 8 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 1.2874071598052979 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0007461025513563069 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.7892568111419678 AS threshold, 83 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06249609764008232 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 0.0513712577521801 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2113106547306551 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0022419119178747 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9273373050906777 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_6' AS feature, 0.5644228458404541 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03087774210302216 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5916933561340062 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7850119074797656 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1564801461445546 AS [Estimator]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].count AS count, [DT_node_data_17].depth AS depth, [DT_node_data_17].parent_id AS parent_id, [DT_node_data_17].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[RF_Tree_4_1] AS 
(SELECT [DT_Output_17].[KEY] AS join_key_4_1, [DT_Output_17].[Estimator] AS [Estimator_4_1] 
FROM [DT_Output_17]), 
[DT_node_lookup_18] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.05051703006029129) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.1847020387649536) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.18368540704250336) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= 0.33756452798843384) THEN 7 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 <= 0.011223237961530685) THEN 9 ELSE 10 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_18] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_17' AS feature, -0.05051703006029129 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0017110964067788797 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_19' AS feature, -0.1847020387649536 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11623357350236041 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.633725735610752 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_2' AS feature, 0.18368540704250336 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24017713977527277 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3707136333108487 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3334062549243033 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_17' AS feature, 0.33756452798843384 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.10400195937375793 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9679832037576586 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'anoova_11' AS feature, 0.011223237961530685 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0307065799940777 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.47092186550731335 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6904248307667866 AS [Estimator]) AS [Values]), 
[DT_Output_18] AS 
(SELECT [DT_node_lookup_18].[KEY] AS [KEY], [DT_node_lookup_18].node_id_2 AS node_id_2, [DT_node_data_18].node_id AS node_id, [DT_node_data_18].feature AS feature, [DT_node_data_18].threshold AS threshold, [DT_node_data_18].count AS count, [DT_node_data_18].depth AS depth, [DT_node_data_18].parent_id AS parent_id, [DT_node_data_18].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_18] LEFT OUTER JOIN [DT_node_data_18] ON [DT_node_lookup_18].node_id_2 = [DT_node_data_18].node_id), 
[RF_Tree_4_2] AS 
(SELECT [DT_Output_18].[KEY] AS join_key_4_2, [DT_Output_18].[Estimator] AS [Estimator_4_2] 
FROM [DT_Output_18]), 
[DT_node_lookup_19] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.5518033504486084) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= -0.4528167247772217) THEN 3 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.2039869725704193) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_19] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.5518033504486084 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.141484330832087e-05 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0974376238973982 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_18' AS feature, -0.4528167247772217 AS threshold, 80 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08692238312518834 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2904765826533049 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_19' AS feature, -0.2039869725704193 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1495757007432382 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.27729337443070495 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9459399135286791 AS [Estimator]) AS [Values]), 
[DT_Output_19] AS 
(SELECT [DT_node_lookup_19].[KEY] AS [KEY], [DT_node_lookup_19].node_id_2 AS node_id_2, [DT_node_data_19].node_id AS node_id, [DT_node_data_19].feature AS feature, [DT_node_data_19].threshold AS threshold, [DT_node_data_19].count AS count, [DT_node_data_19].depth AS depth, [DT_node_data_19].parent_id AS parent_id, [DT_node_data_19].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_19] LEFT OUTER JOIN [DT_node_data_19] ON [DT_node_lookup_19].node_id_2 = [DT_node_data_19].node_id), 
[RF_Tree_4_3] AS 
(SELECT [DT_Output_19].[KEY] AS join_key_4_3, [DT_Output_19].[Estimator] AS [Estimator_4_3] 
FROM [DT_Output_19]), 
[RF_Join_CTE_4] AS 
(SELECT [RF_Tree_4_0].join_key_4_0 AS join_key_4_0, [RF_Tree_4_0].[Estimator_4_0] AS [Estimator_4_0], [RF_Tree_4_1].join_key_4_1 AS join_key_4_1, [RF_Tree_4_1].[Estimator_4_1] AS [Estimator_4_1], [RF_Tree_4_2].join_key_4_2 AS join_key_4_2, [RF_Tree_4_2].[Estimator_4_2] AS [Estimator_4_2], [RF_Tree_4_3].join_key_4_3 AS join_key_4_3, [RF_Tree_4_3].[Estimator_4_3] AS [Estimator_4_3] 
FROM [RF_Tree_4_0] LEFT OUTER JOIN [RF_Tree_4_1] ON [RF_Tree_4_0].join_key_4_0 = [RF_Tree_4_1].join_key_4_1 LEFT OUTER JOIN [RF_Tree_4_2] ON [RF_Tree_4_2].join_key_4_2 = [RF_Tree_4_1].join_key_4_1 LEFT OUTER JOIN [RF_Tree_4_3] ON [RF_Tree_4_3].join_key_4_3 = [RF_Tree_4_2].join_key_4_2), 
[DT_node_lookup_20] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 1.235898494720459) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_14 <= -0.6002042889595032) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_14 <= 0.3472762107849121) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_20] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 1.235898494720459 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0005686138646985683 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_14' AS feature, -0.6002042889595032 AS threshold, 81 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06517297599221654 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4854378398544291 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_14' AS feature, 0.3472762107849121 AS threshold, 62 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1203393268014748 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.965006695855953 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.09512675459673353 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9098833126009694 AS [Estimator]) AS [Values]), 
[DT_Output_20] AS 
(SELECT [DT_node_lookup_20].[KEY] AS [KEY], [DT_node_lookup_20].node_id_2 AS node_id_2, [DT_node_data_20].node_id AS node_id, [DT_node_data_20].feature AS feature, [DT_node_data_20].threshold AS threshold, [DT_node_data_20].count AS count, [DT_node_data_20].depth AS depth, [DT_node_data_20].parent_id AS parent_id, [DT_node_data_20].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_20] LEFT OUTER JOIN [DT_node_data_20] ON [DT_node_lookup_20].node_id_2 = [DT_node_data_20].node_id), 
[RF_Tree_5_0] AS 
(SELECT [DT_Output_20].[KEY] AS join_key_5_0, [DT_Output_20].[Estimator] AS [Estimator_5_0] 
FROM [DT_Output_20]), 
[DT_node_lookup_21] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= -0.7552872896194458) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 <= -0.2526392340660095) THEN 2 ELSE 3 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.16399763524532318) THEN 5 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_16 <= 0.020898811519145966) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_21] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -0.7552872896194458 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0008941730876597359 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, -0.2526392340660095 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16976072975884082 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.26132032976517605 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1086381865431152 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_19' AS feature, -0.16399763524532318 AS threshold, 64 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.09688755593881632 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.011319481877576667 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_16' AS feature, 0.020898811519145966 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.16494281563717927 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6384237275156638 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9547422683951712 AS [Estimator]) AS [Values]), 
[DT_Output_21] AS 
(SELECT [DT_node_lookup_21].[KEY] AS [KEY], [DT_node_lookup_21].node_id_2 AS node_id_2, [DT_node_data_21].node_id AS node_id, [DT_node_data_21].feature AS feature, [DT_node_data_21].threshold AS threshold, [DT_node_data_21].count AS count, [DT_node_data_21].depth AS depth, [DT_node_data_21].parent_id AS parent_id, [DT_node_data_21].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_21] LEFT OUTER JOIN [DT_node_data_21] ON [DT_node_lookup_21].node_id_2 = [DT_node_data_21].node_id), 
[RF_Tree_5_1] AS 
(SELECT [DT_Output_21].[KEY] AS join_key_5_1, [DT_Output_21].[Estimator] AS [Estimator_5_1] 
FROM [DT_Output_21]), 
[DT_node_lookup_22] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_17 <= -0.05051703006029129) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_19 <= -0.1847020387649536) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.18368540704250336) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= 0.46859562397003174) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_15 <= 0.3836907744407654) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_22] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_17' AS feature, -0.05051703006029129 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.001680453151293818 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_19' AS feature, -0.1847020387649536 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10693687929469108 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6003718176545789 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_2' AS feature, 0.18368540704250336 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21920457561796144 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3221867031936228 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.18570680499425 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_18' AS feature, 0.46859562397003174 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.09547932482722671 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'anoova_15' AS feature, 0.3836907744407654 AS threshold, 37 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.15291667399408407 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9522916725989565 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3393059627990037 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.20436210187569404 AS [Estimator]) AS [Values]), 
[DT_Output_22] AS 
(SELECT [DT_node_lookup_22].[KEY] AS [KEY], [DT_node_lookup_22].node_id_2 AS node_id_2, [DT_node_data_22].node_id AS node_id, [DT_node_data_22].feature AS feature, [DT_node_data_22].threshold AS threshold, [DT_node_data_22].count AS count, [DT_node_data_22].depth AS depth, [DT_node_data_22].parent_id AS parent_id, [DT_node_data_22].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_22] LEFT OUTER JOIN [DT_node_data_22] ON [DT_node_lookup_22].node_id_2 = [DT_node_data_22].node_id), 
[RF_Tree_5_2] AS 
(SELECT [DT_Output_22].[KEY] AS join_key_5_2, [DT_Output_22].[Estimator] AS [Estimator_5_2] 
FROM [DT_Output_22]), 
[DT_node_lookup_23] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -1.4609583616256714) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.5028632879257202) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_14 <= 0.40950390696525574) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_18 <= 0.11521020531654358) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_23] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.4609583616256714 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0005148286905762811 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9477187190503554 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.5028632879257202 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08503570684193958 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_14' AS feature, 0.40950390696525574 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.006468465301987331 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5419278999028008 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5356515965295204 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_18' AS feature, 0.11521020531654358 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.17669748863855053 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9241780367308805 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8989995544580586 AS [Estimator]) AS [Values]), 
[DT_Output_23] AS 
(SELECT [DT_node_lookup_23].[KEY] AS [KEY], [DT_node_lookup_23].node_id_2 AS node_id_2, [DT_node_data_23].node_id AS node_id, [DT_node_data_23].feature AS feature, [DT_node_data_23].threshold AS threshold, [DT_node_data_23].count AS count, [DT_node_data_23].depth AS depth, [DT_node_data_23].parent_id AS parent_id, [DT_node_data_23].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_23] LEFT OUTER JOIN [DT_node_data_23] ON [DT_node_lookup_23].node_id_2 = [DT_node_data_23].node_id), 
[RF_Tree_5_3] AS 
(SELECT [DT_Output_23].[KEY] AS join_key_5_3, [DT_Output_23].[Estimator] AS [Estimator_5_3] 
FROM [DT_Output_23]), 
[RF_Join_CTE_5] AS 
(SELECT [RF_Tree_5_0].join_key_5_0 AS join_key_5_0, [RF_Tree_5_0].[Estimator_5_0] AS [Estimator_5_0], [RF_Tree_5_1].join_key_5_1 AS join_key_5_1, [RF_Tree_5_1].[Estimator_5_1] AS [Estimator_5_1], [RF_Tree_5_2].join_key_5_2 AS join_key_5_2, [RF_Tree_5_2].[Estimator_5_2] AS [Estimator_5_2], [RF_Tree_5_3].join_key_5_3 AS join_key_5_3, [RF_Tree_5_3].[Estimator_5_3] AS [Estimator_5_3] 
FROM [RF_Tree_5_0] LEFT OUTER JOIN [RF_Tree_5_1] ON [RF_Tree_5_0].join_key_5_0 = [RF_Tree_5_1].join_key_5_1 LEFT OUTER JOIN [RF_Tree_5_2] ON [RF_Tree_5_2].join_key_5_2 = [RF_Tree_5_1].join_key_5_1 LEFT OUTER JOIN [RF_Tree_5_3] ON [RF_Tree_5_3].join_key_5_3 = [RF_Tree_5_2].join_key_5_2), 
[RF_Join_CTE] AS 
(SELECT [RF_Join_CTE_0].join_key_0_0 AS join_key_0_0, [RF_Join_CTE_0].[Estimator_0_0] AS [Estimator_0_0], [RF_Join_CTE_0].join_key_0_1 AS join_key_0_1, [RF_Join_CTE_0].[Estimator_0_1] AS [Estimator_0_1], [RF_Join_CTE_0].join_key_0_2 AS join_key_0_2, [RF_Join_CTE_0].[Estimator_0_2] AS [Estimator_0_2], [RF_Join_CTE_0].join_key_0_3 AS join_key_0_3, [RF_Join_CTE_0].[Estimator_0_3] AS [Estimator_0_3], [RF_Join_CTE_1].join_key_1_0 AS join_key_1_0, [RF_Join_CTE_1].[Estimator_1_0] AS [Estimator_1_0], [RF_Join_CTE_1].join_key_1_1 AS join_key_1_1, [RF_Join_CTE_1].[Estimator_1_1] AS [Estimator_1_1], [RF_Join_CTE_1].join_key_1_2 AS join_key_1_2, [RF_Join_CTE_1].[Estimator_1_2] AS [Estimator_1_2], [RF_Join_CTE_1].join_key_1_3 AS join_key_1_3, [RF_Join_CTE_1].[Estimator_1_3] AS [Estimator_1_3], [RF_Join_CTE_2].join_key_2_0 AS join_key_2_0, [RF_Join_CTE_2].[Estimator_2_0] AS [Estimator_2_0], [RF_Join_CTE_2].join_key_2_1 AS join_key_2_1, [RF_Join_CTE_2].[Estimator_2_1] AS [Estimator_2_1], [RF_Join_CTE_2].join_key_2_2 AS join_key_2_2, [RF_Join_CTE_2].[Estimator_2_2] AS [Estimator_2_2], [RF_Join_CTE_2].join_key_2_3 AS join_key_2_3, [RF_Join_CTE_2].[Estimator_2_3] AS [Estimator_2_3], [RF_Join_CTE_3].join_key_3_0 AS join_key_3_0, [RF_Join_CTE_3].[Estimator_3_0] AS [Estimator_3_0], [RF_Join_CTE_3].join_key_3_1 AS join_key_3_1, [RF_Join_CTE_3].[Estimator_3_1] AS [Estimator_3_1], [RF_Join_CTE_3].join_key_3_2 AS join_key_3_2, [RF_Join_CTE_3].[Estimator_3_2] AS [Estimator_3_2], [RF_Join_CTE_3].join_key_3_3 AS join_key_3_3, [RF_Join_CTE_3].[Estimator_3_3] AS [Estimator_3_3], [RF_Join_CTE_4].join_key_4_0 AS join_key_4_0, [RF_Join_CTE_4].[Estimator_4_0] AS [Estimator_4_0], [RF_Join_CTE_4].join_key_4_1 AS join_key_4_1, [RF_Join_CTE_4].[Estimator_4_1] AS [Estimator_4_1], [RF_Join_CTE_4].join_key_4_2 AS join_key_4_2, [RF_Join_CTE_4].[Estimator_4_2] AS [Estimator_4_2], [RF_Join_CTE_4].join_key_4_3 AS join_key_4_3, [RF_Join_CTE_4].[Estimator_4_3] AS [Estimator_4_3], [RF_Join_CTE_5].join_key_5_0 AS join_key_5_0, [RF_Join_CTE_5].[Estimator_5_0] AS [Estimator_5_0], [RF_Join_CTE_5].join_key_5_1 AS join_key_5_1, [RF_Join_CTE_5].[Estimator_5_1] AS [Estimator_5_1], [RF_Join_CTE_5].join_key_5_2 AS join_key_5_2, [RF_Join_CTE_5].[Estimator_5_2] AS [Estimator_5_2], [RF_Join_CTE_5].join_key_5_3 AS join_key_5_3, [RF_Join_CTE_5].[Estimator_5_3] AS [Estimator_5_3] 
FROM [RF_Join_CTE_0] LEFT OUTER JOIN [RF_Join_CTE_1] ON [RF_Join_CTE_0].join_key_0_0 = [RF_Join_CTE_1].join_key_1_0 LEFT OUTER JOIN [RF_Join_CTE_2] ON [RF_Join_CTE_2].join_key_2_0 = [RF_Join_CTE_1].join_key_1_0 LEFT OUTER JOIN [RF_Join_CTE_3] ON [RF_Join_CTE_3].join_key_3_0 = [RF_Join_CTE_2].join_key_2_0 LEFT OUTER JOIN [RF_Join_CTE_4] ON [RF_Join_CTE_4].join_key_4_0 = [RF_Join_CTE_3].join_key_3_0 LEFT OUTER JOIN [RF_Join_CTE_5] ON [RF_Join_CTE_5].join_key_5_0 = [RF_Join_CTE_4].join_key_4_0), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0_0 AS [KEY], 0.25 + 0.1 * [RF_Join_CTE].[Estimator_0_0] + 0.1 * [RF_Join_CTE].[Estimator_1_0] + 0.1 * [RF_Join_CTE].[Estimator_2_0] + 0.1 * [RF_Join_CTE].[Estimator_3_0] + 0.1 * [RF_Join_CTE].[Estimator_4_0] + 0.1 * [RF_Join_CTE].[Estimator_5_0] AS [Score_0], CAST(NULL AS FLOAT) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], 0.25 + 0.1 * [RF_Join_CTE].[Estimator_0_1] + 0.1 * [RF_Join_CTE].[Estimator_1_1] + 0.1 * [RF_Join_CTE].[Estimator_2_1] + 0.1 * [RF_Join_CTE].[Estimator_3_1] + 0.1 * [RF_Join_CTE].[Estimator_4_1] + 0.1 * [RF_Join_CTE].[Estimator_5_1] AS [Score_1], CAST(NULL AS FLOAT) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1], 0.25 + 0.1 * [RF_Join_CTE].[Estimator_0_2] + 0.1 * [RF_Join_CTE].[Estimator_1_2] + 0.1 * [RF_Join_CTE].[Estimator_2_2] + 0.1 * [RF_Join_CTE].[Estimator_3_2] + 0.1 * [RF_Join_CTE].[Estimator_4_2] + 0.1 * [RF_Join_CTE].[Estimator_5_2] AS [Score_2], CAST(NULL AS FLOAT) AS [Proba_2], CAST(NULL AS FLOAT) AS [LogProba_2], 0.25 + 0.1 * [RF_Join_CTE].[Estimator_0_3] + 0.1 * [RF_Join_CTE].[Estimator_1_3] + 0.1 * [RF_Join_CTE].[Estimator_2_3] + 0.1 * [RF_Join_CTE].[Estimator_3_3] + 0.1 * [RF_Join_CTE].[Estimator_4_3] + 0.1 * [RF_Join_CTE].[Estimator_5_3] AS [Score_3], CAST(NULL AS FLOAT) AS [Proba_3], CAST(NULL AS FLOAT) AS [LogProba_3] 
FROM [RF_Join_CTE]), 
orig_cte AS 
(SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Score_0] AS [Score_0], [RF_AVG_Scores].[Score_1] AS [Score_1], [RF_AVG_Scores].[Score_2] AS [Score_2], [RF_AVG_Scores].[Score_3] AS [Score_3], [RF_AVG_Scores].[Proba_0] AS [Proba_0], [RF_AVG_Scores].[Proba_1] AS [Proba_1], [RF_AVG_Scores].[Proba_2] AS [Proba_2], [RF_AVG_Scores].[Proba_3] AS [Proba_3], [RF_AVG_Scores].[LogProba_0] AS [LogProba_0], [RF_AVG_Scores].[LogProba_1] AS [LogProba_1], [RF_AVG_Scores].[LogProba_2] AS [LogProba_2], [RF_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [RF_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], exp(score_max.[Score_0] - score_max.[max_Score]) AS [exp_delta_Score_0], exp(score_max.[Score_1] - score_max.[max_Score]) AS [exp_delta_Score_1], exp(score_max.[Score_2] - score_max.[max_Score]) AS [exp_delta_Score_2], exp(score_max.[Score_3] - score_max.[max_Score]) AS [exp_delta_Score_3] 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.[KEY] AS [KEY], soft_scu.class AS class, soft_scu.[LogProba] AS [LogProba], soft_scu.[Proba] AS [Proba], soft_scu.[Score] AS [Score], soft_scu.[exp_delta_Score] AS [exp_delta_Score] 
FROM (SELECT score_soft_max_comp.[KEY] AS [KEY], 0 AS class, score_soft_max_comp.[LogProba_0] AS [LogProba], score_soft_max_comp.[Proba_0] AS [Proba], score_soft_max_comp.[Score_0] AS [Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 1 AS class, score_soft_max_comp.[LogProba_1] AS [LogProba], score_soft_max_comp.[Proba_1] AS [Proba], score_soft_max_comp.[Score_1] AS [Score], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 2 AS class, score_soft_max_comp.[LogProba_2] AS [LogProba], score_soft_max_comp.[Proba_2] AS [Proba], score_soft_max_comp.[Score_2] AS [Score], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 3 AS class, score_soft_max_comp.[LogProba_3] AS [LogProba], score_soft_max_comp.[Proba_3] AS [Proba], score_soft_max_comp.[Score_3] AS [Score], score_soft_max_comp.[exp_delta_Score_3] AS [exp_delta_Score] 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.[KEY] AS [KEY], score_soft_max_comp.[Score_0] AS [Score_0], score_soft_max_comp.[Score_1] AS [Score_1], score_soft_max_comp.[Score_2] AS [Score_2], score_soft_max_comp.[Score_3] AS [Score_3], score_soft_max_comp.[Proba_0] AS [Proba_0], score_soft_max_comp.[Proba_1] AS [Proba_1], score_soft_max_comp.[Proba_2] AS [Proba_2], score_soft_max_comp.[Proba_3] AS [Proba_3], score_soft_max_comp.[LogProba_0] AS [LogProba_0], score_soft_max_comp.[LogProba_1] AS [LogProba_1], score_soft_max_comp.[LogProba_2] AS [LogProba_2], score_soft_max_comp.[LogProba_3] AS [LogProba_3], score_soft_max_comp.[Decision] AS [Decision], score_soft_max_comp.[max_LogProba] AS [max_LogProba], score_soft_max_comp.[max_Proba] AS [max_Proba], score_soft_max_comp.[max_Score] AS [max_Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max_comp.[exp_delta_Score_3] AS [exp_delta_Score_3], (SELECT sum(score_class_union_soft.[exp_delta_Score]) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.[KEY] = score_class_union_soft.[KEY]) AS [sum_ExpDeltaScore] 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Score_2] AS [Score_2], score_soft_max.[Score_3] AS [Score_3], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[Proba_2] AS [Proba_2], score_soft_max.[Proba_3] AS [Proba_3], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[LogProba_2] AS [LogProba_2], score_soft_max.[LogProba_3] AS [LogProba_3], score_soft_max.[Decision] AS [Decision], score_soft_max.[max_LogProba] AS [max_LogProba], score_soft_max.[max_Proba] AS [max_Proba], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max.[exp_delta_Score_3] AS [exp_delta_Score_3], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.[max_LogProba] = score_class_union.[LogProba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.[max_Proba] = score_class_union.[Proba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.[max_Score] = score_class_union.[Score] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score], score_soft_max.[exp_delta_Score_0] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_0], score_soft_max.[exp_delta_Score_1] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_1], score_soft_max.[exp_delta_Score_2] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_2], score_soft_max.[exp_delta_Score_3] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_3] 
FROM score_soft_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[SoftProba_0] AS [Proba_0], arg_max_cte.[SoftProba_1] AS [Proba_1], arg_max_cte.[SoftProba_2] AS [Proba_2], arg_max_cte.[SoftProba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[SoftProba_0] IS NULL OR arg_max_cte.[SoftProba_0] > 0.0) THEN log(arg_max_cte.[SoftProba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[SoftProba_1] IS NULL OR arg_max_cte.[SoftProba_1] > 0.0) THEN log(arg_max_cte.[SoftProba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[SoftProba_2] IS NULL OR arg_max_cte.[SoftProba_2] > 0.0) THEN log(arg_max_cte.[SoftProba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[SoftProba_3] IS NULL OR arg_max_cte.[SoftProba_3] > 0.0) THEN log(arg_max_cte.[SoftProba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte