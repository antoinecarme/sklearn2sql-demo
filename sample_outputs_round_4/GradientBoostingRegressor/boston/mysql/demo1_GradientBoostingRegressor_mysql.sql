-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.940999984741211) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.399999618530273) THEN CASE WHEN (`ADS`.`Feature_12` <= 4.909999847412109) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_4` <= 0.6069999933242798) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.437000274658203) THEN CASE WHEN (`ADS`.`Feature_12` <= 5.494999885559082) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_9` <= 270.0) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.940999984741211 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.0647421359613017e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 430 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.599085393878127 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 4.909999847412109 AS threshold, 255 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8169975974579501 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.032193675889323 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 235 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.11783197376166364 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 0.6069999933242798 AS threshold, 175 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.576806324110678 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 68 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.4092769123459705 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 107 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.58981566990507 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 76 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.705351570626169 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 5.494999885559082 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.580237154150195 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.715019762845847 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.445454545454541 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, 270.0 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.563860342555994 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.753860342555996 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.373860342555993 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 9.725000381469727) THEN CASE WHEN (`ADS`.`Feature_5` <= 7.437000274658203) THEN CASE WHEN (`ADS`.`Feature_5` <= 6.638500213623047) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_9` <= 270.0) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_12` <= 19.229999542236328) THEN CASE WHEN (`ADS`.`Feature_12` <= 15.0) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_4` <= 0.6030000448226929) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.725000381469727 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.6194148249439886e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 212 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.59551755965745 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 6.638500213623047 AS threshold, 182 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.335304908782241 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 113 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.758747420708602 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 69 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.55488456316371 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 270.0 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.307474308300392 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.37847430830039 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.23647430830039 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 19.229999542236328 AS threshold, 294 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.755951437576126 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 15.0 AS threshold, 212 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.0598153463261397 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 132 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.8070904027045394 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.126811503301781 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.6030000448226929 AS threshold, 82 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.14108377105171 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.987530806789121 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 59 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -10.760265435086271 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1_0, `DT_Output_1`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.837500095367432) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.399999618530273) THEN CASE WHEN (`ADS`.`Feature_12` <= 5.409999847412109) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 6.992370128631592) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.437000274658203) THEN CASE WHEN (`ADS`.`Feature_12` <= 5.494999885559082) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_12` <= 3.7300000190734863) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.837500095367432 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.497061484726721e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.399999618530273 AS threshold, 419 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.3020440712823946 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 5.409999847412109 AS threshold, 245 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4777173566345966 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.304514504285678 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 219 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2140485147760339 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 6.992370128631592 AS threshold, 174 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -6.216075966912643 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 102 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.227580823973134 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 72 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.03311075274361 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 87 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.086855929509444 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 5.494999885559082 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.3027133253194965 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.090389698137862 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.964662173923447 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_12' AS feature, 3.7300000190734863 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.276726877470352 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.338613544137015 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.214840210803686 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2_0, `DT_Output_2`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 9.630000114440918) THEN CASE WHEN (`ADS`.`Feature_5` <= 7.140999794006348) THEN CASE WHEN (`ADS`.`Feature_6` <= 87.60000610351562) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.437000274658203) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_12` <= 19.829999923706055) THEN CASE WHEN (`ADS`.`Feature_10` <= 19.650001525878906) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_4` <= 0.6030000448226929) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.630000114440918 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.978529046439973e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.140999794006348 AS threshold, 207 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.551026298627096 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 87.60000610351562 AS threshold, 157 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9828775107463237 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 142 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.0796532196717905 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.53340079958525 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 50 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.61501349257273 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.363952446846838 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.449054189723316 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 19.829999923706055 AS threshold, 299 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.8430182067418452 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_10' AS feature, 19.650001525878906 AS threshold, 223 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.517322678948771 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 105 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0665683616194275 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 118 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.808248130809632 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.6030000448226929 AS threshold, 76 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.732887979082046 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.326452614013749 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.033526936653576 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3_0, `DT_Output_3`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 9.725000381469727) THEN CASE WHEN (`ADS`.`Feature_5` <= 6.940999984741211) THEN CASE WHEN (`ADS`.`Feature_6` <= 83.44999694824219) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.437000274658203) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= 5.848030090332031) THEN CASE WHEN (`ADS`.`Feature_12` <= 16.084999084472656) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_4` <= 0.6694999933242798) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.725000381469727 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.178115292718121e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 6.940999984741211 AS threshold, 212 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.897445725363333 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 83.44999694824219 AS threshold, 142 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.002987151434269 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 127 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2408057663167893 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.456122878762262 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, 7.437000274658203 AS threshold, 70 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.769061689619434 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.74274637877077 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.804148770750981 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 5.848030090332031 AS threshold, 294 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.5314914754320688 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 16.084999084472656 AS threshold, 204 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.155474128133905 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 133 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.2885699800329278 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 71 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.779393166125879 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.6694999933242798 AS threshold, 90 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -6.6504641293079105 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.644258962478321 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 64 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.871734978332435 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`RF_Tree_4_0` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_4_0, `DT_Output_4`.`Estimator` AS `Estimator_4_0` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 5.154999732971191) THEN CASE WHEN (`ADS`.`Feature_7` <= 3.2074499130249023) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.406000137329102) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS`.`Feature_12` <= 15.0) THEN CASE WHEN (`ADS`.`Feature_5` <= 6.543000221252441) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.6147900223731995) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 5.154999732971191 AS threshold, 506 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.560252044231078e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 3.2074499130249023 AS threshold, 67 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.676297645646564 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.12866746492829 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_5' AS feature, 7.406000137329102 AS threshold, 52 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.526575582392227 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.202182843583538 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.260077671453665 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_12' AS feature, 15.0 AS threshold, 439 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.4767925791761327 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'Feature_5' AS feature, 6.543000221252441 AS threshold, 277 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4670440386662415 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 209 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7191220432900666 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 68 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.11276037879666 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'Feature_0' AS feature, 0.6147900223731995 AS threshold, 162 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.800513215857229 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.0109206467719667 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 116 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.906730958770352 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`RF_Tree_5_0` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_5_0, `DT_Output_5`.`Estimator` AS `Estimator_5_0` 
FROM `DT_Output_5`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Tree_4_0`.join_key_4_0 AS join_key_4_0, `RF_Tree_4_0`.`Estimator_4_0` AS `Estimator_4_0`, `RF_Tree_5_0`.join_key_5_0 AS join_key_5_0, `RF_Tree_5_0`.`Estimator_5_0` AS `Estimator_5_0` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_1_0` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_2_0` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_3_0` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_2_0`.join_key_2_0 LEFT OUTER JOIN `RF_Tree_4_0` ON `RF_Tree_4_0`.join_key_4_0 = `RF_Tree_3_0`.join_key_3_0 LEFT OUTER JOIN `RF_Tree_5_0` ON `RF_Tree_5_0`.join_key_5_0 = `RF_Tree_4_0`.join_key_4_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 22.5328063241 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` + 0.1 * `RF_Join_CTE`.`Estimator_4_0` + 0.1 * `RF_Join_CTE`.`Estimator_5_0` AS `Estimator` 
FROM `RF_Join_CTE`)
 SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `RF_AVG_Scores`