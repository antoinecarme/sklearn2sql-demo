-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= -0.003761786036193371) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.0061888848431408405) THEN CASE WHEN (`ADS`.`Feature_6` <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= -0.029770705848932266) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.014811381697654724) THEN CASE WHEN (`ADS`.`Feature_2` <= -0.021834230050444603) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.06870198249816895) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.003761786036193371 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0095494073695542e-14 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 218 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -42.147245630785825 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.021027816459536552 AS threshold, 171 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -55.82354264242809 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 87 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -43.32888646174649 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -68.7644365438483 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, -0.029770705848932266 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.611196688167895 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -20.88348416289594 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.318128740329886 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.014811381697654724 AS threshold, 224 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 41.0183015513898 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, -0.021834230050444603 AS threshold, 116 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.547550319862705 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -14.443007972419739 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 74 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.73138070196895 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.06870198249816895 AS threshold, 108 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 73.74614546673371 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 77 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 56.43794440853265 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 116.73748357903956 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= -0.003761786036193371) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.0061888848431408405) THEN CASE WHEN (`ADS`.`Feature_6` <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= -0.029770705848932266) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.014811381697654724) THEN CASE WHEN (`ADS`.`Feature_9` <= 0.0486275851726532) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.06870198249816895) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.003761786036193371 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.1188636744095695e-14 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 218 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -37.93252106770707 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.021027816459536552 AS threshold, 171 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -50.24118837818516 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 87 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -38.995997815571926 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -61.88799288946344 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, -0.029770705848932266 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.850077019351099 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -18.79513574660634 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.08631586629687 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.014811381697654724 AS threshold, 224 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 36.91647139625081 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.0486275851726532 AS threshold, 116 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.49279528787641 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 96 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4136406637325638 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 48.27273748376688 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.06870198249816895 AS threshold, 108 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 66.37153092006027 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 77 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 50.79414996767927 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 105.06373522113556 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1_0, `DT_Output_1`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= 0.021657448261976242) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.005111072678118944) THEN CASE WHEN (`ADS`.`Feature_7` <= 0.03135676681995392) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.02359379082918167) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.06089155748486519) THEN CASE WHEN (`ADS`.`Feature_9` <= 0.029988106340169907) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.07810591161251068) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.021657448261976242 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -8.552233833130617e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.005111072678118944 AS threshold, 296 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -23.743744621789837 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 0.03135676681995392 AS threshold, 214 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -39.24293702957954 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 185 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -44.330057956818635 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -6.790613873054203 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.02359379082918167 AS threshold, 82 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.7053672717101 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.2225019628257647 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 51.29768001068941 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.06089155748486519 AS threshold, 146 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 48.13800279486152 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.029988106340169907 AS threshold, 114 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.4132526432307 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 70 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.86703708760596 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 59.145868299906404 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.07810591161251068 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 97.0324252100462 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 110.87556177582695 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 84.81789294612202 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2_0, `DT_Output_2`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= -0.00016888421669136733) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.0061888848431408405) THEN CASE WHEN (`ADS`.`Feature_8` <= -0.04327875375747681) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= -0.029770705848932266) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.05576823651790619) THEN CASE WHEN (`ADS`.`Feature_2` <= -0.023450948297977448) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_5` <= 0.022485405206680298) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00016888421669136733 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.684725762616708e-14 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 230 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -29.63091195406098 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.04327875375747681 AS threshold, 178 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -40.00559714249776 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 66 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -54.28595262806107 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 112 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -31.590387659933793 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, -0.029770705848932266 AS threshold, 52 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.882433498665095 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -20.68990558910852 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.78899819844084 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.05576823651790619 AS threshold, 212 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.146744101103835 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, -0.023450948297977448 AS threshold, 165 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.9236506050891 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -15.136880965465629 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 127 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 29.114990760058237 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_5' AS feature, 0.022485405206680298 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 78.56824254455992 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 97.13227413291662 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 45.80818680040106 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3_0, `DT_Output_3`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= -0.003761786036193371) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.0061888848431408405) THEN CASE WHEN (`ADS`.`Feature_6` <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_8` <= -0.030139416456222534) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.014811381697654724) THEN CASE WHEN (`ADS`.`Feature_6` <= -0.023151837289333344) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.02359379082918167) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.003761786036193371 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.0222179711063084e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 218 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -28.160650199755022 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.021027816459536552 AS threshold, 171 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -37.03978621203248 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 87 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -27.244783922766555 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -47.18461001162927 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, -0.030139416456222534 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.144291461935451 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -15.435840930158943 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.959013778627078 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.014811381697654724 AS threshold, 224 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 27.406347069404397 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_6' AS feature, -0.023151837289333344 AS threshold, 116 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.49267450734166 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.24824061383843 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 56 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -8.24543203533345 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.02359379082918167 AS threshold, 108 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 49.869180561990305 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 26.800848397810473 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 58 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 69.75567380697288 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`RF_Tree_4_0` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_4_0, `DT_Output_4`.`Estimator` AS `Estimator_4_0` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= 0.021657448261976242) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.005111072678118944) THEN CASE WHEN (`ADS`.`Feature_8` <= -0.04327875375747681) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.009822307154536247) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.06089155748486519) THEN CASE WHEN (`ADS`.`Feature_9` <= 0.029988106340169907) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_9` <= 0.04241442680358887) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.021657448261976242 AS threshold, 442 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.115360641506463e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.005111072678118944 AS threshold, 296 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -17.893686001208426 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.04327875375747681 AS threshold, 214 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -29.28192152972424 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 65 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -44.6840148678901 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 149 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -22.562887523141885 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.009822307154536247 AS threshold, 82 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.826831109796386 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.850192827488161 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.61075356349429 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.06089155748486519 AS threshold, 146 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 36.2776099750527 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.029988106340169907 AS threshold, 114 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.1987396478816 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 70 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.234542241211395 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 45.82359915849328 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, 0.04241442680358887 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 75.7460855155997 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 63.013839372185174 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 88.4783316590142 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`RF_Tree_5_0` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_5_0, `DT_Output_5`.`Estimator` AS `Estimator_5_0` 
FROM `DT_Output_5`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Tree_4_0`.join_key_4_0 AS join_key_4_0, `RF_Tree_4_0`.`Estimator_4_0` AS `Estimator_4_0`, `RF_Tree_5_0`.join_key_5_0 AS join_key_5_0, `RF_Tree_5_0`.`Estimator_5_0` AS `Estimator_5_0` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_1_0` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_2_0` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_3_0` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_2_0`.join_key_2_0 LEFT OUTER JOIN `RF_Tree_4_0` ON `RF_Tree_4_0`.join_key_4_0 = `RF_Tree_3_0`.join_key_3_0 LEFT OUTER JOIN `RF_Tree_5_0` ON `RF_Tree_5_0`.join_key_5_0 = `RF_Tree_4_0`.join_key_4_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 152.133484163 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` + 0.1 * `RF_Join_CTE`.`Estimator_4_0` + 0.1 * `RF_Join_CTE`.`Estimator_5_0` AS `Estimator` 
FROM `RF_Join_CTE`)
 SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `RF_AVG_Scores`