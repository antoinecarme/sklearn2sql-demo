-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.51511284526 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.530677536637 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.504558468959 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.480656453562 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.465899251122 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.508992960714 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.499157695239 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.502219693655 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.529918777403 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.483298670365 ELSE [ADS].[Feature_9] END AS impute_11 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 0.51511284526 AS impute_2, [ADS_imp_1_OUT].impute_3 - 0.530677536637 AS impute_3, [ADS_imp_1_OUT].impute_4 - 0.504558468959 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.480656453562 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.465899251122 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.508992960714 AS impute_7, [ADS_imp_1_OUT].impute_8 - 0.499157695239 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.502219693655 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.529918777403 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.483298670365 AS impute_11 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * -0.118480128274 + [CenteredDataForPCA].impute_3 * -0.147219854916 + [CenteredDataForPCA].impute_4 * -0.489982923137 + [CenteredDataForPCA].impute_5 * -0.402830232979 + [CenteredDataForPCA].impute_6 * -0.368801683274 + [CenteredDataForPCA].impute_7 * -0.279557071082 + [CenteredDataForPCA].impute_8 * 0.262160146556 + [CenteredDataForPCA].impute_9 * -0.0851925001739 + [CenteredDataForPCA].impute_10 * -0.365022090725 + [CenteredDataForPCA].impute_11 * 0.372209138968 AS anoova_2, [CenteredDataForPCA].impute_2 * -0.353688704373 + [CenteredDataForPCA].impute_3 * -0.548783198425 + [CenteredDataForPCA].impute_4 * 0.185127969224 + [CenteredDataForPCA].impute_5 * -0.162367016962 + [CenteredDataForPCA].impute_6 * 0.0853482949072 + [CenteredDataForPCA].impute_7 * -0.232124454372 + [CenteredDataForPCA].impute_8 * -0.620042241056 + [CenteredDataForPCA].impute_9 * -0.0775874759771 + [CenteredDataForPCA].impute_10 * 0.139879525079 + [CenteredDataForPCA].impute_11 * 0.204698109225 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.669460024147 + [CenteredDataForPCA].impute_3 * 0.216394581627 + [CenteredDataForPCA].impute_4 * -0.0164766984968 + [CenteredDataForPCA].impute_5 * 0.270469145066 + [CenteredDataForPCA].impute_6 * -0.527885066922 + [CenteredDataForPCA].impute_7 * -0.000763270638509 + [CenteredDataForPCA].impute_8 * 0.0209361569687 + [CenteredDataForPCA].impute_9 * 0.300979383382 + [CenteredDataForPCA].impute_10 * 0.225682332324 + [CenteredDataForPCA].impute_11 * -0.104637314625 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.184214846392 + [CenteredDataForPCA].impute_3 * 0.278904872903 + [CenteredDataForPCA].impute_4 * -0.137261805718 + [CenteredDataForPCA].impute_5 * -0.378586560617 + [CenteredDataForPCA].impute_6 * 0.372918392994 + [CenteredDataForPCA].impute_7 * 0.302458479083 + [CenteredDataForPCA].impute_8 * 0.0945455477346 + [CenteredDataForPCA].impute_9 * 0.195188568378 + [CenteredDataForPCA].impute_10 * 0.459802972881 + [CenteredDataForPCA].impute_11 * 0.486932134856 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.427062401799 + [CenteredDataForPCA].impute_3 * -0.421168421954 + [CenteredDataForPCA].impute_4 * -0.156895805334 + [CenteredDataForPCA].impute_5 * 0.237858442341 + [CenteredDataForPCA].impute_6 * 0.277865615539 + [CenteredDataForPCA].impute_7 * 0.493120755301 + [CenteredDataForPCA].impute_8 * 0.333550535954 + [CenteredDataForPCA].impute_9 * -0.302173348828 + [CenteredDataForPCA].impute_10 * -0.17263864852 + [CenteredDataForPCA].impute_11 * -0.0793458105122 AS anoova_6, [CenteredDataForPCA].impute_2 * 0.0846654757155 + [CenteredDataForPCA].impute_3 * -0.427868806389 + [CenteredDataForPCA].impute_4 * 0.364334533705 + [CenteredDataForPCA].impute_5 * -0.267457820354 + [CenteredDataForPCA].impute_6 * -0.0654191182913 + [CenteredDataForPCA].impute_7 * 0.14502971334 + [CenteredDataForPCA].impute_8 * 0.304801998385 + [CenteredDataForPCA].impute_9 * 0.681990459299 + [CenteredDataForPCA].impute_10 * -0.121599362261 + [CenteredDataForPCA].impute_11 * -0.0858590422495 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.161854917501 + [CenteredDataForPCA].impute_3 * -0.195022791453 + [CenteredDataForPCA].impute_4 * -0.240812961551 + [CenteredDataForPCA].impute_5 * -0.428825460528 + [CenteredDataForPCA].impute_6 * -0.33292819423 + [CenteredDataForPCA].impute_7 * 0.275630343318 + [CenteredDataForPCA].impute_8 * -0.0546757512147 + [CenteredDataForPCA].impute_9 * -0.225798943023 + [CenteredDataForPCA].impute_10 * 0.467176654285 + [CenteredDataForPCA].impute_11 * -0.484608133471 AS anoova_8, [CenteredDataForPCA].impute_2 * -0.021898945752 + [CenteredDataForPCA].impute_3 * -0.0341900961142 + [CenteredDataForPCA].impute_4 * 0.589458832808 + [CenteredDataForPCA].impute_5 * -0.0470282219699 + [CenteredDataForPCA].impute_6 * -0.189132254614 + [CenteredDataForPCA].impute_7 * -0.196108157113 + [CenteredDataForPCA].impute_8 * 0.475562593074 + [CenteredDataForPCA].impute_9 * -0.460529400533 + [CenteredDataForPCA].impute_10 * 0.296262180141 + [CenteredDataForPCA].impute_11 * 0.220068846445 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.402800695277 + [CenteredDataForPCA].impute_3 * 0.308075278344 + [CenteredDataForPCA].impute_4 * 0.171818139078 + [CenteredDataForPCA].impute_5 * -0.48459711861 + [CenteredDataForPCA].impute_6 * 0.322075199457 + [CenteredDataForPCA].impute_7 * -0.246028737913 + [CenteredDataForPCA].impute_8 * 0.0650134370772 + [CenteredDataForPCA].impute_9 * -0.0910654809052 + [CenteredDataForPCA].impute_10 * -0.254655001815 + [CenteredDataForPCA].impute_11 * -0.48667645282 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.0167155608153 + [CenteredDataForPCA].impute_3 * -0.240792417322 + [CenteredDataForPCA].impute_4 * -0.337937964748 + [CenteredDataForPCA].impute_5 * 0.214092951784 + [CenteredDataForPCA].impute_6 * 0.32731731938 + [CenteredDataForPCA].impute_7 * -0.580794313984 + [CenteredDataForPCA].impute_8 * 0.316079595422 + [CenteredDataForPCA].impute_9 * 0.173925623429 + [CenteredDataForPCA].impute_10 * 0.411553543598 + [CenteredDataForPCA].impute_11 * -0.194191469091 AS anoova_11 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.39045852422714233) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.1344437450170517) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 <= 0.060814015567302704) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.39045852422714233 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.6822988274943782e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.1344437450170517 AS threshold, 84 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.2106298903825632 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.609636488611971 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_4' AS feature, 0.060814015567302704 AS threshold, 56 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.4888734087321411 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1468672531201685 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.8358056626941504 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.355806924508473 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0_0, [DT_Output].[Estimator] AS [Estimator_0_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.29787155985832214) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.39045852422714233) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.2937434911727905) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, -0.29787155985832214 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.806643806252396e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.981039794463131 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.39045852422714233 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0554776107876147 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_3' AS feature, 0.2937434911727905 AS threshold, 69 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.02620322892717045 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0451857100487625 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.349176239788104 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.720226232057625 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1_0] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1_0, [DT_Output_1].[Estimator] AS [Estimator_1_0] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.11880804598331451) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.04516150429844856) THEN 2 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.004893644712865353) THEN 4 ELSE 5 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_9 <= 0.029917895793914795) THEN 7 ELSE 8 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.11880804598331451 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.149391775674303e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.04516150429844856 AS threshold, 67 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5869941000319183 AS [Estimator] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.013968204308119 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_3' AS feature, -0.004893644712865353 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.051213420354516835 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7135628436629928 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.8159896843720258 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_9' AS feature, 0.029917895793914795 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.2220789303678408 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3418501141321501 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.62226961056425 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2_0] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2_0, [DT_Output_2].[Estimator] AS [Estimator_2_0] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.29787155985832214) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.39045852422714233) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.23252440989017487) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, -0.29787155985832214 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.829647544582258e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.039616572165212 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.39045852422714233 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8893441009703332 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_3' AS feature, 0.23252440989017487 AS threshold, 69 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.013762746088520366 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9966035594961057 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.770952891899639 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.783992378911641 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3_0] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3_0, [DT_Output_3].[Estimator] AS [Estimator_3_0] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= -0.1737196296453476) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= 0.09874023497104645) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.025941181927919388) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.1737196296453476 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.078337502098293e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.095622087372895 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.09874023497104645 AS threshold, 72 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.2038530339783504 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_8' AS feature, -0.025941181927919388 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4606368220550255 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.1521338591519097 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8925608076224821 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.9780027940339777 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].count AS count, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[RF_Tree_4_0] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4_0, [DT_Output_4].[Estimator] AS [Estimator_4_0] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_8 <= -0.29787155985832214) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 <= 0.08169052004814148) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 <= 0.11450880020856857) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 <= -0.007688191719353199) THEN 7 ELSE 8 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, -0.29787155985832214 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.6875389974302379e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.298409891506673 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.08169052004814148 AS threshold, 85 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7585429220305914 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_5' AS feature, 0.11450880020856857 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.551642547307198 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.08391877235291 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.8233856015136545 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_2' AS feature, -0.007688191719353199 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.7238211260372753 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6551535897258823 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.344133338698373 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].count AS count, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[RF_Tree_5_0] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5_0, [DT_Output_5].[Estimator] AS [Estimator_5_0] 
FROM [DT_Output_5]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0_0].join_key_0_0 AS join_key_0_0, [RF_Tree_0_0].[Estimator_0_0] AS [Estimator_0_0], [RF_Tree_1_0].join_key_1_0 AS join_key_1_0, [RF_Tree_1_0].[Estimator_1_0] AS [Estimator_1_0], [RF_Tree_2_0].join_key_2_0 AS join_key_2_0, [RF_Tree_2_0].[Estimator_2_0] AS [Estimator_2_0], [RF_Tree_3_0].join_key_3_0 AS join_key_3_0, [RF_Tree_3_0].[Estimator_3_0] AS [Estimator_3_0], [RF_Tree_4_0].join_key_4_0 AS join_key_4_0, [RF_Tree_4_0].[Estimator_4_0] AS [Estimator_4_0], [RF_Tree_5_0].join_key_5_0 AS join_key_5_0, [RF_Tree_5_0].[Estimator_5_0] AS [Estimator_5_0] 
FROM [RF_Tree_0_0] LEFT OUTER JOIN [RF_Tree_1_0] ON [RF_Tree_0_0].join_key_0_0 = [RF_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [RF_Tree_2_0] ON [RF_Tree_2_0].join_key_2_0 = [RF_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [RF_Tree_3_0] ON [RF_Tree_3_0].join_key_3_0 = [RF_Tree_2_0].join_key_2_0 LEFT OUTER JOIN [RF_Tree_4_0] ON [RF_Tree_4_0].join_key_4_0 = [RF_Tree_3_0].join_key_3_0 LEFT OUTER JOIN [RF_Tree_5_0] ON [RF_Tree_5_0].join_key_5_0 = [RF_Tree_4_0].join_key_4_0), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0_0 AS [KEY], 13.9977014915 + 0.1 * [RF_Join_CTE].[Estimator_0_0] + 0.1 * [RF_Join_CTE].[Estimator_1_0] + 0.1 * [RF_Join_CTE].[Estimator_2_0] + 0.1 * [RF_Join_CTE].[Estimator_3_0] + 0.1 * [RF_Join_CTE].[Estimator_4_0] + 0.1 * [RF_Join_CTE].[Estimator_5_0] AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]