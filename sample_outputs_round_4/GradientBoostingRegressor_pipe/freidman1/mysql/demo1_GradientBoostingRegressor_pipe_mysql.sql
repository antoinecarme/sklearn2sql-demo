-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.499559749502 ELSE `ADS`.`Feature_0` END AS impute_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.512427777959 ELSE `ADS`.`Feature_1` END AS impute_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.488196963795 ELSE `ADS`.`Feature_2` END AS impute_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.526494625859 ELSE `ADS`.`Feature_3` END AS impute_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.507477764625 ELSE `ADS`.`Feature_4` END AS impute_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.523129957766 ELSE `ADS`.`Feature_5` END AS impute_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 0.499591252971 ELSE `ADS`.`Feature_6` END AS impute_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.534271106321 ELSE `ADS`.`Feature_7` END AS impute_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.504557814237 ELSE `ADS`.`Feature_8` END AS impute_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.524330267699 ELSE `ADS`.`Feature_9` END AS impute_11 
FROM `INPUT_DATA` AS `ADS`), 
`CenteredDataForPCA` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, `ADS_imp_1_OUT`.impute_2 - 0.499559749502 AS impute_2, `ADS_imp_1_OUT`.impute_3 - 0.512427777959 AS impute_3, `ADS_imp_1_OUT`.impute_4 - 0.488196963795 AS impute_4, `ADS_imp_1_OUT`.impute_5 - 0.526494625859 AS impute_5, `ADS_imp_1_OUT`.impute_6 - 0.507477764625 AS impute_6, `ADS_imp_1_OUT`.impute_7 - 0.523129957766 AS impute_7, `ADS_imp_1_OUT`.impute_8 - 0.499591252971 AS impute_8, `ADS_imp_1_OUT`.impute_9 - 0.534271106321 AS impute_9, `ADS_imp_1_OUT`.impute_10 - 0.504557814237 AS impute_10, `ADS_imp_1_OUT`.impute_11 - 0.524330267699 AS impute_11 
FROM `ADS_imp_1_OUT`), 
`ADS_ano_2_OUT` AS 
(SELECT `CenteredDataForPCA`.`KEY` AS `KEY`, `CenteredDataForPCA`.impute_2 * 0.147036796981 + `CenteredDataForPCA`.impute_3 * -0.208012009855 + `CenteredDataForPCA`.impute_4 * -0.496444288109 + `CenteredDataForPCA`.impute_5 * -0.12366857515 + `CenteredDataForPCA`.impute_6 * -0.484045872903 + `CenteredDataForPCA`.impute_7 * -0.353607268728 + `CenteredDataForPCA`.impute_8 * -0.051745303639 + `CenteredDataForPCA`.impute_9 * -0.513223071681 + `CenteredDataForPCA`.impute_10 * 0.210090045156 + `CenteredDataForPCA`.impute_11 * 0.0617130781443 AS anoova_2, `CenteredDataForPCA`.impute_2 * 0.0903930481344 + `CenteredDataForPCA`.impute_3 * -0.331601485684 + `CenteredDataForPCA`.impute_4 * -0.312176294541 + `CenteredDataForPCA`.impute_5 * 0.0643404555942 + `CenteredDataForPCA`.impute_6 * 0.251826918834 + `CenteredDataForPCA`.impute_7 * 0.364453012913 + `CenteredDataForPCA`.impute_8 * -0.507081690791 + `CenteredDataForPCA`.impute_9 * 0.132113286316 + `CenteredDataForPCA`.impute_10 * 0.410392503633 + `CenteredDataForPCA`.impute_11 * -0.375533293034 AS anoova_3, `CenteredDataForPCA`.impute_2 * -0.656271544271 + `CenteredDataForPCA`.impute_3 * 0.29115262401 + `CenteredDataForPCA`.impute_4 * -0.286179826898 + `CenteredDataForPCA`.impute_5 * -0.199616565546 + `CenteredDataForPCA`.impute_6 * -0.0391052422658 + `CenteredDataForPCA`.impute_7 * -0.28038526693 + `CenteredDataForPCA`.impute_8 * 0.0848185756995 + `CenteredDataForPCA`.impute_9 * 0.372573115032 + `CenteredDataForPCA`.impute_10 * 0.354056891021 + `CenteredDataForPCA`.impute_11 * -0.106234769998 AS anoova_4, `CenteredDataForPCA`.impute_2 * 0.275870728908 + `CenteredDataForPCA`.impute_3 * 0.691734378092 + `CenteredDataForPCA`.impute_4 * -0.227804512007 + `CenteredDataForPCA`.impute_5 * 0.0470589369532 + `CenteredDataForPCA`.impute_6 * 0.352285007697 + `CenteredDataForPCA`.impute_7 * -0.260248602891 + `CenteredDataForPCA`.impute_8 * -0.397451382413 + `CenteredDataForPCA`.impute_9 * -0.159034687272 + `CenteredDataForPCA`.impute_10 * -0.125691210521 + `CenteredDataForPCA`.impute_11 * -0.0199368092991 AS anoova_5, `CenteredDataForPCA`.impute_2 * -0.180220482288 + `CenteredDataForPCA`.impute_3 * -0.162336776549 + `CenteredDataForPCA`.impute_4 * -0.0869339117843 + `CenteredDataForPCA`.impute_5 * -0.624634037852 + `CenteredDataForPCA`.impute_6 * 0.386711603739 + `CenteredDataForPCA`.impute_7 * 0.172031693554 + `CenteredDataForPCA`.impute_8 * -0.140719784816 + `CenteredDataForPCA`.impute_9 * -0.176786344661 + `CenteredDataForPCA`.impute_10 * -0.0572499403091 + `CenteredDataForPCA`.impute_11 * 0.556748030321 AS anoova_6, `CenteredDataForPCA`.impute_2 * 0.397551764129 + `CenteredDataForPCA`.impute_3 * 0.135342160233 + `CenteredDataForPCA`.impute_4 * 0.232105920982 + `CenteredDataForPCA`.impute_5 * -0.719345430528 + `CenteredDataForPCA`.impute_6 * -0.114949453059 + `CenteredDataForPCA`.impute_7 * -0.0044031913019 + `CenteredDataForPCA`.impute_8 * 0.13829342907 + `CenteredDataForPCA`.impute_9 * 0.101046924929 + `CenteredDataForPCA`.impute_10 * 0.119327743058 + `CenteredDataForPCA`.impute_11 * -0.442150041103 AS anoova_7, `CenteredDataForPCA`.impute_2 * -0.0256841760439 + `CenteredDataForPCA`.impute_3 * -0.342657999523 + `CenteredDataForPCA`.impute_4 * -0.285811274827 + `CenteredDataForPCA`.impute_5 * -0.0118086938989 + `CenteredDataForPCA`.impute_6 * 0.515020683128 + `CenteredDataForPCA`.impute_7 * -0.34032881928 + `CenteredDataForPCA`.impute_8 * 0.384634412852 + `CenteredDataForPCA`.impute_9 * -0.0681816704887 + `CenteredDataForPCA`.impute_10 * -0.350286839498 + `CenteredDataForPCA`.impute_11 * -0.379124039657 AS anoova_8, `CenteredDataForPCA`.impute_2 * -0.152457675659 + `CenteredDataForPCA`.impute_3 * -0.309096429153 + `CenteredDataForPCA`.impute_4 * 0.467176562419 + `CenteredDataForPCA`.impute_5 * -0.0576179107507 + `CenteredDataForPCA`.impute_6 * -0.0246522756589 + `CenteredDataForPCA`.impute_7 * -0.573414746994 + `CenteredDataForPCA`.impute_8 * -0.55781259981 + `CenteredDataForPCA`.impute_9 * 0.0695123029319 + `CenteredDataForPCA`.impute_10 * -0.099428733161 + `CenteredDataForPCA`.impute_11 * -0.0660087418054 AS anoova_9, `CenteredDataForPCA`.impute_2 * -0.297151839141 + `CenteredDataForPCA`.impute_3 * 0.122606349735 + `CenteredDataForPCA`.impute_4 * 0.384136116867 + `CenteredDataForPCA`.impute_5 * 0.083137717233 + `CenteredDataForPCA`.impute_6 * 0.238062639337 + `CenteredDataForPCA`.impute_7 * 0.0648014272464 + `CenteredDataForPCA`.impute_8 * 0.122817060332 + `CenteredDataForPCA`.impute_9 * -0.675125318923 + `CenteredDataForPCA`.impute_10 * 0.393736234002 + `CenteredDataForPCA`.impute_11 * -0.235407173732 AS anoova_10, `CenteredDataForPCA`.impute_2 * 0.400853109785 + `CenteredDataForPCA`.impute_3 * -0.104148954105 + `CenteredDataForPCA`.impute_4 * 0.115594099203 + `CenteredDataForPCA`.impute_5 * 0.143207520485 + `CenteredDataForPCA`.impute_6 * 0.302261061068 + `CenteredDataForPCA`.impute_7 * -0.342562364698 + `CenteredDataForPCA`.impute_8 * 0.248835490881 + `CenteredDataForPCA`.impute_9 * 0.219787649962 + `CenteredDataForPCA`.impute_10 * 0.584083703427 + `CenteredDataForPCA`.impute_11 * 0.366754934648 AS anoova_11 
FROM `CenteredDataForPCA`), 
`DT_node_lookup` AS 
(SELECT `ADS_ano_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_ano_2_OUT`.anoova_5 <= 0.07433080673217773) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_2 <= -0.21706540882587433) THEN 2 ELSE CASE WHEN (`ADS_ano_2_OUT`.anoova_11 <= 0.004426168277859688) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS_ano_2_OUT`.anoova_6 <= 0.06470900774002075) THEN 7 ELSE 8 END END AS node_id_2 
FROM `ADS_ano_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.07433080673217773 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.085620730620576e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.21706540882587433 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.151205900156802 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.34315722027603357 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'anoova_11' AS feature, 0.004426168277859688 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.0420498717399567 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.483022459222206 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.2977146342614443 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'anoova_6' AS feature, 0.06470900774002075 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.851598518812503 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.14826594341343 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.4355140071092272 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_ano_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_ano_2_OUT`.anoova_5 <= 0.06503342092037201) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_2 <= -0.21706540882587433) THEN 2 ELSE CASE WHEN (`ADS_ano_2_OUT`.anoova_11 <= 0.004426168277859688) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS_ano_2_OUT`.anoova_4 <= 0.007091048173606396) THEN 7 ELSE 8 END END AS node_id_2 
FROM `ADS_ano_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.06503342092037201 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.085620730620576e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.21706540882587433 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.976261266128443 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3088414982484302 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'anoova_11' AS feature, 0.004426168277859688 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.812274472607788 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.034720213299986 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.2502604706122005 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'anoova_4' AS feature, 0.007091048173606396 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.515241611436199 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.060855066060984 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8342497762279919 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1_0, `DT_Output_1`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_ano_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_ano_2_OUT`.anoova_5 <= -0.0861356109380722) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_11 <= 0.004426168277859688) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_ano_2_OUT`.anoova_4 <= 0.007091048173606396) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_6 <= -0.11031509935855865) THEN 6 ELSE 7 END ELSE 8 END END AS node_id_2 
FROM `ADS_ano_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, -0.0861356109380722 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.1974423109204507e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, 0.004426168277859688 AS threshold, 40 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.475510622360834 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.5336951542613706 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0438491968483457 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'anoova_4' AS feature, 0.007091048173606396 AS threshold, 60 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.650340414907223 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'anoova_6' AS feature, -0.11031509935855865 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.823383561563939 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.185142217388505 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.18927317457446 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0056012087843198 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2_0, `DT_Output_2`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_ano_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_ano_2_OUT`.anoova_5 <= 0.07433080673217773) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_6 <= 0.2656690180301666) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_9 <= -0.0065970770083367825) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS_ano_2_OUT`.anoova_6 <= 0.06470900774002075) THEN 7 ELSE 8 END END AS node_id_2 
FROM `ADS_ano_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.07433080673217773 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.4210854715202004e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 0.2656690180301666 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.6238182809891923 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -0.0065970770083367825 AS threshold, 42 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8575296222232531 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8635306544278037 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.9166436386239039 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.7694265255338237 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'anoova_6' AS feature, 0.06470900774002075 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1525033027066045 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.061510508845141 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.4109768154186648 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3_0, `DT_Output_3`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS_ano_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_ano_2_OUT`.anoova_6 <= 0.2744760513305664) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_5 <= 0.27018338441848755) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_9 <= -0.14558641612529755) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM `ADS_ano_2_OUT`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, 0.2744760513305664 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.9539925233402755e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.27018338441848755 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9040923658461626 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -0.14558641612529755 AS threshold, 59 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.13210210538350217 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.837992452135028 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.3342832358076688 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.121748881769857 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.205418388000031 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`RF_Tree_4_0` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_4_0, `DT_Output_4`.`Estimator` AS `Estimator_4_0` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS_ano_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_ano_2_OUT`.anoova_5 <= -0.1272188127040863) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_11 <= 0.004426168277859688) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_ano_2_OUT`.anoova_4 <= 0.27874618768692017) THEN CASE WHEN (`ADS_ano_2_OUT`.anoova_7 <= 0.07962147891521454) THEN 6 ELSE 7 END ELSE 8 END END AS node_id_2 
FROM `ADS_ano_2_OUT`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, -0.1272188127040863 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -6.217248937900876e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'anoova_11' AS feature, 0.004426168277859688 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.1493711382029494 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.383713004177355 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6835901723583434 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'anoova_4' AS feature, 0.27874618768692017 AS threshold, 65 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1573536898015873 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, 0.07962147891521454 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.294209900586841 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.5154780940899846 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.19091467844254062 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.324268455728255 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`RF_Tree_5_0` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_5_0, `DT_Output_5`.`Estimator` AS `Estimator_5_0` 
FROM `DT_Output_5`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Tree_4_0`.join_key_4_0 AS join_key_4_0, `RF_Tree_4_0`.`Estimator_4_0` AS `Estimator_4_0`, `RF_Tree_5_0`.join_key_5_0 AS join_key_5_0, `RF_Tree_5_0`.`Estimator_5_0` AS `Estimator_5_0` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_1_0` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_2_0` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_3_0` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_2_0`.join_key_2_0 LEFT OUTER JOIN `RF_Tree_4_0` ON `RF_Tree_4_0`.join_key_4_0 = `RF_Tree_3_0`.join_key_3_0 LEFT OUTER JOIN `RF_Tree_5_0` ON `RF_Tree_5_0`.join_key_5_0 = `RF_Tree_4_0`.join_key_4_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 14.7471534293 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` + 0.1 * `RF_Join_CTE`.`Estimator_4_0` + 0.1 * `RF_Join_CTE`.`Estimator_5_0` AS `Estimator` 
FROM `RF_Join_CTE`)
 SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `RF_AVG_Scores`