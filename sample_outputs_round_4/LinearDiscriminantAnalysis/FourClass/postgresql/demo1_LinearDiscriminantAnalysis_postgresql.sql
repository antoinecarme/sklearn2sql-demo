-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", 0.3379508815119989 * "ADS"."Feature_0" + 0.1359558909153882 * "ADS"."Feature_1" + -0.1555298080684437 * "ADS"."Feature_2" + -0.43479453244529315 * "ADS"."Feature_3" + 0.13734015422331602 * "ADS"."Feature_4" + -0.5384857323000105 * "ADS"."Feature_5" + -0.8944394602340698 * "ADS"."Feature_6" + 0.13393088870955128 * "ADS"."Feature_7" + -0.11163146045534902 * "ADS"."Feature_8" + 0.2754241721485755 * "ADS"."Feature_9" + 0.02222050820063559 * "ADS"."Feature_10" + 0.10656667656452935 * "ADS"."Feature_11" + 0.9295859458937891 * "ADS"."Feature_12" + -0.1858951918917834 * "ADS"."Feature_13" + 0.5383530840217433 * "ADS"."Feature_14" + -0.07316749137325126 * "ADS"."Feature_15" + -0.19491888840998522 * "ADS"."Feature_16" + 0.07266033158707319 * "ADS"."Feature_17" + 0.07719294810498722 * "ADS"."Feature_18" + 0.036873413673218676 * "ADS"."Feature_19" + -2.52072387381 AS "Score_0", -0.3872038700952051 * "ADS"."Feature_0" + -0.09845989141109895 * "ADS"."Feature_1" + -0.2070886447828064 * "ADS"."Feature_2" + -0.37049394667401736 * "ADS"."Feature_3" + -0.5410204204212362 * "ADS"."Feature_4" + 0.4533713426721563 * "ADS"."Feature_5" + 0.619172092236311 * "ADS"."Feature_6" + -0.12713595571940947 * "ADS"."Feature_7" + 0.25586497745523845 * "ADS"."Feature_8" + 0.32058031731606845 * "ADS"."Feature_9" + -0.08277646798017309 * "ADS"."Feature_10" + -0.3240412268481606 * "ADS"."Feature_11" + -0.3127760823689306 * "ADS"."Feature_12" + 0.1851265992715986 * "ADS"."Feature_13" + -0.14355497962424402 * "ADS"."Feature_14" + -0.16330196001344857 * "ADS"."Feature_15" + 0.3307883779442475 * "ADS"."Feature_16" + 0.14094057838675242 * "ADS"."Feature_17" + -0.3348658404615519 * "ADS"."Feature_18" + 0.07251512159782468 * "ADS"."Feature_19" + -2.60543893586 AS "Score_1", 0.3824361259117926 * "ADS"."Feature_0" + -0.11247172947531361 * "ADS"."Feature_1" + 0.04652506189371784 * "ADS"."Feature_2" + -0.40301163317628597 * "ADS"."Feature_3" + 0.6441098099472539 * "ADS"."Feature_4" + -0.21153163419857332 * "ADS"."Feature_5" + -1.2282414275824958 * "ADS"."Feature_6" + 0.037382836740354586 * "ADS"."Feature_7" + -0.09354549164676168 * "ADS"."Feature_8" + -0.5415086546300146 * "ADS"."Feature_9" + 0.4451531021279485 * "ADS"."Feature_10" + 0.3883257171586986 * "ADS"."Feature_11" + 0.3246355127174148 * "ADS"."Feature_12" + -0.5454314273782382 * "ADS"."Feature_13" + 0.10198849187828077 * "ADS"."Feature_14" + 0.1476425434926744 * "ADS"."Feature_15" + 0.19650209258193335 * "ADS"."Feature_16" + 0.2961815226650093 * "ADS"."Feature_17" + 0.06613138288937886 * "ADS"."Feature_18" + 0.004244560666922937 * "ADS"."Feature_19" + -3.21546344901 AS "Score_2", -0.33318313732858623 * "ADS"."Feature_0" + 0.07497572997102431 * "ADS"."Feature_1" + 0.31609339095753225 * "ADS"."Feature_2" + 1.2083001122955963 * "ADS"."Feature_3" + -0.24042954374933354 * "ADS"."Feature_4" + 0.2966460238264274 * "ADS"."Feature_5" + 1.5035087955802542 * "ADS"."Feature_6" + -0.04417776973049639 * "ADS"."Feature_7" + -0.05068802535312773 * "ADS"."Feature_8" + -0.05449583483462951 * "ADS"."Feature_9" + -0.3845971423484108 * "ADS"."Feature_10" + -0.17085116687506724 * "ADS"."Feature_11" + -0.9414453762422732 * "ADS"."Feature_12" + 0.5462000199984228 * "ADS"."Feature_13" + -0.4967865962757799 * "ADS"."Feature_14" + 0.08882690789402545 * "ADS"."Feature_15" + -0.33237158211619555 * "ADS"."Feature_16" + -0.5097824326388347 * "ADS"."Feature_17" + 0.19154150946718573 * "ADS"."Feature_18" + -0.11363309593796626 * "ADS"."Feature_19" + -3.20749977714 AS "Score_3" 
FROM "INPUT_DATA" AS "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", (1.0 / (1.0 + exp(-linear_model_cte."Score_0"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_0", (1.0 / (1.0 + exp(-linear_model_cte."Score_1"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_1", (1.0 / (1.0 + exp(-linear_model_cte."Score_2"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_2", (1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_3", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_2", CAST(NULL AS FLOAT(53)) AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte