-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0677757655408 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.142224499727 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0647936848292 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.00340553191074 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.281756495655 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.161284785197 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.121429980613 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0100781093036 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.516407975002 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0779489218619 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.0841022358381 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.163362270716 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.0339334444008 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.238590702735 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0338218353966 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.419757233696 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.291646734919 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0346668602415 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0851032957262 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.209861397378 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.0677757655408 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.142224499727 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.0647936848292 AS impute_4, "ADS_imp_1_OUT".impute_5 - -0.00340553191074 AS impute_5, "ADS_imp_1_OUT".impute_6 - -0.281756495655 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.161284785197 AS impute_7, "ADS_imp_1_OUT".impute_8 - -0.121429980613 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.0100781093036 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.516407975002 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.0779489218619 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.0841022358381 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.163362270716 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.0339334444008 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.238590702735 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.0338218353966 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.419757233696 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.291646734919 AS impute_18, "ADS_imp_1_OUT".impute_19 - 0.0346668602415 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.0851032957262 AS impute_20, "ADS_imp_1_OUT".impute_21 - 0.209861397378 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.0181033014384 + "CenteredDataForPCA".impute_3 * 0.00462048677714 + "CenteredDataForPCA".impute_4 * 0.0239917046035 + "CenteredDataForPCA".impute_5 * 0.0779615908518 + "CenteredDataForPCA".impute_6 * 0.423772264369 + "CenteredDataForPCA".impute_7 * -0.00621268275227 + "CenteredDataForPCA".impute_8 * 0.00803381729612 + "CenteredDataForPCA".impute_9 * 0.00982881440282 + "CenteredDataForPCA".impute_10 * -0.359830520873 + "CenteredDataForPCA".impute_11 * -0.0717502986825 + "CenteredDataForPCA".impute_12 * -0.0909098255648 + "CenteredDataForPCA".impute_13 * 0.0046742291787 + "CenteredDataForPCA".impute_14 * -0.0392898730061 + "CenteredDataForPCA".impute_15 * -0.0249207430046 + "CenteredDataForPCA".impute_16 * -0.786816044412 + "CenteredDataForPCA".impute_17 * -0.218355437104 + "CenteredDataForPCA".impute_18 * -0.00940140121599 + "CenteredDataForPCA".impute_19 * 0.0061372205378 + "CenteredDataForPCA".impute_20 * 0.0241914957198 + "CenteredDataForPCA".impute_21 * 0.0258355635166 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.0461995701746 + "CenteredDataForPCA".impute_3 * 0.0724572676576 + "CenteredDataForPCA".impute_4 * 0.0625390622278 + "CenteredDataForPCA".impute_5 * -0.0604325586574 + "CenteredDataForPCA".impute_6 * 0.420269189827 + "CenteredDataForPCA".impute_7 * -0.0461208015295 + "CenteredDataForPCA".impute_8 * -0.0704694299107 + "CenteredDataForPCA".impute_9 * -0.0223662725047 + "CenteredDataForPCA".impute_10 * 0.452028894016 + "CenteredDataForPCA".impute_11 * -0.0309081876869 + "CenteredDataForPCA".impute_12 * -0.0873589990239 + "CenteredDataForPCA".impute_13 * -0.0116295044179 + "CenteredDataForPCA".impute_14 * -0.202722141468 + "CenteredDataForPCA".impute_15 * -0.561540248002 + "CenteredDataForPCA".impute_16 * -0.000816215374299 + "CenteredDataForPCA".impute_17 * 0.188424245973 + "CenteredDataForPCA".impute_18 * 0.440689802262 + "CenteredDataForPCA".impute_19 * -0.000952187495904 + "CenteredDataForPCA".impute_20 * 0.0226918375072 + "CenteredDataForPCA".impute_21 * -0.033602382233 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.109563933507 + "CenteredDataForPCA".impute_3 * -0.00827561921914 + "CenteredDataForPCA".impute_4 * 0.0567143079726 + "CenteredDataForPCA".impute_5 * -0.265954986339 + "CenteredDataForPCA".impute_6 * 0.395530868184 + "CenteredDataForPCA".impute_7 * 0.0273945772098 + "CenteredDataForPCA".impute_8 * -0.0697996090766 + "CenteredDataForPCA".impute_9 * -0.0750207114929 + "CenteredDataForPCA".impute_10 * 0.0879338371485 + "CenteredDataForPCA".impute_11 * 0.0347067388065 + "CenteredDataForPCA".impute_12 * -0.0886723488169 + "CenteredDataForPCA".impute_13 * -0.1128038133 + "CenteredDataForPCA".impute_14 * -0.155560653275 + "CenteredDataForPCA".impute_15 * 0.389616187393 + "CenteredDataForPCA".impute_16 * -0.0149891407741 + "CenteredDataForPCA".impute_17 * 0.61540417655 + "CenteredDataForPCA".impute_18 * -0.394681846126 + "CenteredDataForPCA".impute_19 * 0.0613337258028 + "CenteredDataForPCA".impute_20 * 0.034302744592 + "CenteredDataForPCA".impute_21 * -0.0331652794461 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.304528273824 + "CenteredDataForPCA".impute_3 * -0.0142930505759 + "CenteredDataForPCA".impute_4 * 0.0272072626 + "CenteredDataForPCA".impute_5 * -0.078512095624 + "CenteredDataForPCA".impute_6 * -0.104735638932 + "CenteredDataForPCA".impute_7 * 0.327760705506 + "CenteredDataForPCA".impute_8 * -0.0288232662192 + "CenteredDataForPCA".impute_9 * -0.295701055957 + "CenteredDataForPCA".impute_10 * -0.310223275992 + "CenteredDataForPCA".impute_11 * -0.0781577689083 + "CenteredDataForPCA".impute_12 * 0.0945706760451 + "CenteredDataForPCA".impute_13 * 0.18617029004 + "CenteredDataForPCA".impute_14 * 0.157474104999 + "CenteredDataForPCA".impute_15 * -0.391354479775 + "CenteredDataForPCA".impute_16 * -0.05348935541 + "CenteredDataForPCA".impute_17 * 0.391677801012 + "CenteredDataForPCA".impute_18 * -0.098126453116 + "CenteredDataForPCA".impute_19 * -0.147531126194 + "CenteredDataForPCA".impute_20 * -0.423940206082 + "CenteredDataForPCA".impute_21 * 0.0467830333694 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.0849501813245 + "CenteredDataForPCA".impute_3 * -0.174159376068 + "CenteredDataForPCA".impute_4 * 0.0759182422827 + "CenteredDataForPCA".impute_5 * 0.528300762004 + "CenteredDataForPCA".impute_6 * 0.092789408278 + "CenteredDataForPCA".impute_7 * 0.587288002434 + "CenteredDataForPCA".impute_8 * -0.411373673517 + "CenteredDataForPCA".impute_9 * 0.1855000395 + "CenteredDataForPCA".impute_10 * 0.117515984337 + "CenteredDataForPCA".impute_11 * 0.00448655170447 + "CenteredDataForPCA".impute_12 * -0.025746219398 + "CenteredDataForPCA".impute_13 * -0.25502556508 + "CenteredDataForPCA".impute_14 * 0.136388812065 + "CenteredDataForPCA".impute_15 * 0.0667536278486 + "CenteredDataForPCA".impute_16 * 0.0322382895112 + "CenteredDataForPCA".impute_17 * 0.0333512707951 + "CenteredDataForPCA".impute_18 * 0.00781270403675 + "CenteredDataForPCA".impute_19 * -0.0323909639765 + "CenteredDataForPCA".impute_20 * 0.0154964748982 + "CenteredDataForPCA".impute_21 * 0.119750166177 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.103573439366 + "CenteredDataForPCA".impute_3 * -0.0457782602252 + "CenteredDataForPCA".impute_4 * -0.373477695845 + "CenteredDataForPCA".impute_5 * 0.105827296822 + "CenteredDataForPCA".impute_6 * -0.197902077324 + "CenteredDataForPCA".impute_7 * -0.0993670973259 + "CenteredDataForPCA".impute_8 * -0.00791479334119 + "CenteredDataForPCA".impute_9 * 0.243714420589 + "CenteredDataForPCA".impute_10 * -0.319074140003 + "CenteredDataForPCA".impute_11 * 0.295787525912 + "CenteredDataForPCA".impute_12 * -0.284646080366 + "CenteredDataForPCA".impute_13 * -0.303528476752 + "CenteredDataForPCA".impute_14 * -0.0770445407687 + "CenteredDataForPCA".impute_15 * -0.340731245537 + "CenteredDataForPCA".impute_16 * -0.016302945693 + "CenteredDataForPCA".impute_17 * 0.267871469032 + "CenteredDataForPCA".impute_18 * -0.0840711254831 + "CenteredDataForPCA".impute_19 * -0.0205268588087 + "CenteredDataForPCA".impute_20 * 0.191018535844 + "CenteredDataForPCA".impute_21 * -0.357085477048 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.368348530692 + "CenteredDataForPCA".impute_3 * 0.338850338894 + "CenteredDataForPCA".impute_4 * 0.188601258632 + "CenteredDataForPCA".impute_5 * 0.125552618256 + "CenteredDataForPCA".impute_6 * -0.16459117102 + "CenteredDataForPCA".impute_7 * -0.0138930315047 + "CenteredDataForPCA".impute_8 * 0.0158824868771 + "CenteredDataForPCA".impute_9 * -0.261845222178 + "CenteredDataForPCA".impute_10 * -0.159928596944 + "CenteredDataForPCA".impute_11 * 0.103943019574 + "CenteredDataForPCA".impute_12 * -0.251754701224 + "CenteredDataForPCA".impute_13 * 0.0808338214534 + "CenteredDataForPCA".impute_14 * -0.127029183839 + "CenteredDataForPCA".impute_15 * -0.119066128031 + "CenteredDataForPCA".impute_16 * 0.0418166387676 + "CenteredDataForPCA".impute_17 * 0.0909013115114 + "CenteredDataForPCA".impute_18 * -0.0565779139796 + "CenteredDataForPCA".impute_19 * -0.208831996404 + "CenteredDataForPCA".impute_20 * 0.291503604951 + "CenteredDataForPCA".impute_21 * 0.568911746054 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.405539147078 + "CenteredDataForPCA".impute_3 * -0.44089143697 + "CenteredDataForPCA".impute_4 * -0.119750340111 + "CenteredDataForPCA".impute_5 * -0.0413748337758 + "CenteredDataForPCA".impute_6 * 0.00451486591812 + "CenteredDataForPCA".impute_7 * 0.0146397213709 + "CenteredDataForPCA".impute_8 * 0.157796323363 + "CenteredDataForPCA".impute_9 * 0.315286965909 + "CenteredDataForPCA".impute_10 * 0.0307518827158 + "CenteredDataForPCA".impute_11 * -0.119687841336 + "CenteredDataForPCA".impute_12 * -0.453672152382 + "CenteredDataForPCA".impute_13 * 0.254423420337 + "CenteredDataForPCA".impute_14 * -0.131804456061 + "CenteredDataForPCA".impute_15 * 0.00411247211076 + "CenteredDataForPCA".impute_16 * 0.0462728807089 + "CenteredDataForPCA".impute_17 * 0.0622871129217 + "CenteredDataForPCA".impute_18 * -0.0152175904428 + "CenteredDataForPCA".impute_19 * 0.0416386351562 + "CenteredDataForPCA".impute_20 * 0.129625906582 + "CenteredDataForPCA".impute_21 * 0.415405212066 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.085701373767 + "CenteredDataForPCA".impute_3 * 0.295466162152 + "CenteredDataForPCA".impute_4 * 0.367123380672 + "CenteredDataForPCA".impute_5 * 0.106231917637 + "CenteredDataForPCA".impute_6 * 0.0284264011578 + "CenteredDataForPCA".impute_7 * -0.139566310728 + "CenteredDataForPCA".impute_8 * 0.360155113872 + "CenteredDataForPCA".impute_9 * 0.290617541281 + "CenteredDataForPCA".impute_10 * 0.021854935754 + "CenteredDataForPCA".impute_11 * -0.342065767869 + "CenteredDataForPCA".impute_12 * -0.279509367769 + "CenteredDataForPCA".impute_13 * -0.329763525868 + "CenteredDataForPCA".impute_14 * 0.414840298892 + "CenteredDataForPCA".impute_15 * -0.0137480813812 + "CenteredDataForPCA".impute_16 * 0.0369220455441 + "CenteredDataForPCA".impute_17 * 0.120133795125 + "CenteredDataForPCA".impute_18 * -0.0319470563831 + "CenteredDataForPCA".impute_19 * -0.102701647643 + "CenteredDataForPCA".impute_20 * -0.135852866902 + "CenteredDataForPCA".impute_21 * -0.0487437858225 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.210624510628 + "CenteredDataForPCA".impute_3 * -0.121039943188 + "CenteredDataForPCA".impute_4 * -0.420721585443 + "CenteredDataForPCA".impute_5 * 0.0965607445672 + "CenteredDataForPCA".impute_6 * 0.058684451033 + "CenteredDataForPCA".impute_7 * 0.217597969175 + "CenteredDataForPCA".impute_8 * 0.309821033232 + "CenteredDataForPCA".impute_9 * -0.313497765593 + "CenteredDataForPCA".impute_10 * 0.101977838558 + "CenteredDataForPCA".impute_11 * -0.494866648431 + "CenteredDataForPCA".impute_12 * -0.0826646132295 + "CenteredDataForPCA".impute_13 * 0.0677205426832 + "CenteredDataForPCA".impute_14 * 0.0379483539585 + "CenteredDataForPCA".impute_15 * 0.0786491971715 + "CenteredDataForPCA".impute_16 * 0.0340692214351 + "CenteredDataForPCA".impute_17 * -0.0138070333111 + "CenteredDataForPCA".impute_18 * 0.0120795043502 + "CenteredDataForPCA".impute_19 * -0.371641072713 + "CenteredDataForPCA".impute_20 * 0.213417786251 + "CenteredDataForPCA".impute_21 * -0.223817097355 AS anoova_11, "CenteredDataForPCA".impute_2 * 0.0745838777688 + "CenteredDataForPCA".impute_3 * 0.432692055767 + "CenteredDataForPCA".impute_4 * -0.303090933458 + "CenteredDataForPCA".impute_5 * 0.207478615427 + "CenteredDataForPCA".impute_6 * 0.123467970295 + "CenteredDataForPCA".impute_7 * -0.147559502333 + "CenteredDataForPCA".impute_8 * -0.286932480597 + "CenteredDataForPCA".impute_9 * 0.231786227367 + "CenteredDataForPCA".impute_10 * 0.0568239110425 + "CenteredDataForPCA".impute_11 * -0.0425200587483 + "CenteredDataForPCA".impute_12 * 0.0118650366017 + "CenteredDataForPCA".impute_13 * 0.569427363343 + "CenteredDataForPCA".impute_14 * 0.33926860147 + "CenteredDataForPCA".impute_15 * 0.051898617159 + "CenteredDataForPCA".impute_16 * -9.47201433691e-05 + "CenteredDataForPCA".impute_17 * 0.159744613842 + "CenteredDataForPCA".impute_18 * -0.0605496072699 + "CenteredDataForPCA".impute_19 * 0.036247558394 + "CenteredDataForPCA".impute_20 * 0.13381584328 + "CenteredDataForPCA".impute_21 * -0.0600254559473 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.446577482756 + "CenteredDataForPCA".impute_3 * 0.0443285682598 + "CenteredDataForPCA".impute_4 * -0.221073057711 + "CenteredDataForPCA".impute_5 * 0.0980910910176 + "CenteredDataForPCA".impute_6 * 0.035882106218 + "CenteredDataForPCA".impute_7 * -0.238306610559 + "CenteredDataForPCA".impute_8 * -0.129175372062 + "CenteredDataForPCA".impute_9 * -0.339452726855 + "CenteredDataForPCA".impute_10 * -0.0029464563277 + "CenteredDataForPCA".impute_11 * -0.162524454812 + "CenteredDataForPCA".impute_12 * 0.232977264149 + "CenteredDataForPCA".impute_13 * -0.443345048139 + "CenteredDataForPCA".impute_14 * 0.159897956607 + "CenteredDataForPCA".impute_15 * -0.0477157920008 + "CenteredDataForPCA".impute_16 * -0.0113093346072 + "CenteredDataForPCA".impute_17 * 0.0771176376734 + "CenteredDataForPCA".impute_18 * -0.00565204993563 + "CenteredDataForPCA".impute_19 * 0.193747199682 + "CenteredDataForPCA".impute_20 * 0.367246538465 + "CenteredDataForPCA".impute_21 * 0.25787812901 AS anoova_13, "CenteredDataForPCA".impute_2 * -0.242924177011 + "CenteredDataForPCA".impute_3 * -0.0146723491576 + "CenteredDataForPCA".impute_4 * -0.174539877663 + "CenteredDataForPCA".impute_5 * -0.551959945473 + "CenteredDataForPCA".impute_6 * -0.0820885440931 + "CenteredDataForPCA".impute_7 * -0.00357457981357 + "CenteredDataForPCA".impute_8 * -0.369667539713 + "CenteredDataForPCA".impute_9 * 0.364936286265 + "CenteredDataForPCA".impute_10 * -0.0914859937456 + "CenteredDataForPCA".impute_11 * -0.339938800974 + "CenteredDataForPCA".impute_12 * 0.165611524205 + "CenteredDataForPCA".impute_13 * -0.177236618226 + "CenteredDataForPCA".impute_14 * 0.10107367661 + "CenteredDataForPCA".impute_15 * -0.0959148873669 + "CenteredDataForPCA".impute_16 * -0.0286630790273 + "CenteredDataForPCA".impute_17 * -0.0466076794796 + "CenteredDataForPCA".impute_18 * 0.0249317045089 + "CenteredDataForPCA".impute_19 * -0.244662778605 + "CenteredDataForPCA".impute_20 * -0.0123838808397 + "CenteredDataForPCA".impute_21 * 0.251500353806 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.165711440658 + "CenteredDataForPCA".impute_3 * -0.499318608375 + "CenteredDataForPCA".impute_4 * 0.285850412367 + "CenteredDataForPCA".impute_5 * 0.156879024964 + "CenteredDataForPCA".impute_6 * 0.0767215904565 + "CenteredDataForPCA".impute_7 * -0.30082956844 + "CenteredDataForPCA".impute_8 * 0.116836004978 + "CenteredDataForPCA".impute_9 * 0.0998419784363 + "CenteredDataForPCA".impute_10 * -0.0388201486179 + "CenteredDataForPCA".impute_11 * 0.114787829297 + "CenteredDataForPCA".impute_12 * 0.414985499391 + "CenteredDataForPCA".impute_13 * 0.163174452153 + "CenteredDataForPCA".impute_14 * 0.275526391997 + "CenteredDataForPCA".impute_15 * -0.123105674213 + "CenteredDataForPCA".impute_16 * -0.0325548204253 + "CenteredDataForPCA".impute_17 * 0.219712732231 + "CenteredDataForPCA".impute_18 * -0.0377512985308 + "CenteredDataForPCA".impute_19 * -0.273531804397 + "CenteredDataForPCA".impute_20 * 0.25795701145 + "CenteredDataForPCA".impute_21 * 0.0135428704056 AS anoova_15, "CenteredDataForPCA".impute_2 * 0.0222678429402 + "CenteredDataForPCA".impute_3 * -0.202030668884 + "CenteredDataForPCA".impute_4 * 0.377614841743 + "CenteredDataForPCA".impute_5 * -0.0571814998555 + "CenteredDataForPCA".impute_6 * -0.153017673761 + "CenteredDataForPCA".impute_7 * -0.187575363552 + "CenteredDataForPCA".impute_8 * -0.515714604539 + "CenteredDataForPCA".impute_9 * -0.264928070782 + "CenteredDataForPCA".impute_10 * -0.0895351918653 + "CenteredDataForPCA".impute_11 * -0.302411597771 + "CenteredDataForPCA".impute_12 * -0.38470400294 + "CenteredDataForPCA".impute_13 * 0.118889288428 + "CenteredDataForPCA".impute_14 * 0.0344473417685 + "CenteredDataForPCA".impute_15 * -0.0189818543152 + "CenteredDataForPCA".impute_16 * 0.0400629868059 + "CenteredDataForPCA".impute_17 * -0.0663172968964 + "CenteredDataForPCA".impute_18 * -0.0124190653567 + "CenteredDataForPCA".impute_19 * 0.0623799757478 + "CenteredDataForPCA".impute_20 * 0.165249453601 + "CenteredDataForPCA".impute_21 * -0.342890225322 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.352150310827 + "CenteredDataForPCA".impute_3 * -0.0765619578512 + "CenteredDataForPCA".impute_4 * 0.0274854809868 + "CenteredDataForPCA".impute_5 * -0.0934610799325 + "CenteredDataForPCA".impute_6 * -0.070626807014 + "CenteredDataForPCA".impute_7 * 0.229197300564 + "CenteredDataForPCA".impute_8 * 0.208863198572 + "CenteredDataForPCA".impute_9 * 0.025885064514 + "CenteredDataForPCA".impute_10 * -0.098067472399 + "CenteredDataForPCA".impute_11 * -0.217850803541 + "CenteredDataForPCA".impute_12 * 0.0776577324743 + "CenteredDataForPCA".impute_13 * 0.109211513194 + "CenteredDataForPCA".impute_14 * 0.188521831566 + "CenteredDataForPCA".impute_15 * -0.17651465557 + "CenteredDataForPCA".impute_16 * 0.00065061277886 + "CenteredDataForPCA".impute_17 * 0.0933717313127 + "CenteredDataForPCA".impute_18 * 0.00645192415859 + "CenteredDataForPCA".impute_19 * 0.761376280491 + "CenteredDataForPCA".impute_20 * 0.165100427827 + "CenteredDataForPCA".impute_21 * 0.037152016821 AS anoova_17, "CenteredDataForPCA".impute_2 * 0.324076679305 + "CenteredDataForPCA".impute_3 * 0.25133141931 + "CenteredDataForPCA".impute_4 * 0.29579014478 + "CenteredDataForPCA".impute_5 * -0.177869894666 + "CenteredDataForPCA".impute_6 * -0.0655639772503 + "CenteredDataForPCA".impute_7 * 0.396562451743 + "CenteredDataForPCA".impute_8 * 0.0942738128533 + "CenteredDataForPCA".impute_9 * 0.214082667644 + "CenteredDataForPCA".impute_10 * -0.0802275639519 + "CenteredDataForPCA".impute_11 * -0.033159458215 + "CenteredDataForPCA".impute_12 * 0.227951588625 + "CenteredDataForPCA".impute_13 * 0.07110303309 + "CenteredDataForPCA".impute_14 * -0.246326981981 + "CenteredDataForPCA".impute_15 * -0.0350858907019 + "CenteredDataForPCA".impute_16 * -0.0120148072337 + "CenteredDataForPCA".impute_17 * -0.00530014135528 + "CenteredDataForPCA".impute_18 * -0.018417447347 + "CenteredDataForPCA".impute_19 * -0.123693721927 + "CenteredDataForPCA".impute_20 * 0.549920442558 + "CenteredDataForPCA".impute_21 * -0.227402945933 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.0447668633897 + "CenteredDataForPCA".impute_3 * 0.0480161873795 + "CenteredDataForPCA".impute_4 * 0.029296267205 + "CenteredDataForPCA".impute_5 * 0.399256310121 + "CenteredDataForPCA".impute_6 * -0.100377675085 + "CenteredDataForPCA".impute_7 * -0.231490804271 + "CenteredDataForPCA".impute_8 * -0.0364539186218 + "CenteredDataForPCA".impute_9 * 0.181748488523 + "CenteredDataForPCA".impute_10 * -0.123219501885 + "CenteredDataForPCA".impute_11 * -0.463760271814 + "CenteredDataForPCA".impute_12 * 0.267215697556 + "CenteredDataForPCA".impute_13 * 0.02715294154 + "CenteredDataForPCA".impute_14 * -0.593783105473 + "CenteredDataForPCA".impute_15 * -0.0322084239077 + "CenteredDataForPCA".impute_16 * 0.044788461404 + "CenteredDataForPCA".impute_17 * 0.149500604513 + "CenteredDataForPCA".impute_18 * -0.106242822314 + "CenteredDataForPCA".impute_19 * 0.080856189692 + "CenteredDataForPCA".impute_20 * -0.197583822339 + "CenteredDataForPCA".impute_21 * 0.0129019285377 AS anoova_19, "CenteredDataForPCA".impute_2 * 1.54619541352e-16 + "CenteredDataForPCA".impute_3 * 5.94320330709e-17 + "CenteredDataForPCA".impute_4 * -4.91730087802e-16 + "CenteredDataForPCA".impute_5 * -1.33167105788e-16 + "CenteredDataForPCA".impute_6 * 0.491402862347 + "CenteredDataForPCA".impute_7 * -4.33246905024e-17 + "CenteredDataForPCA".impute_8 * 2.93956316872e-16 + "CenteredDataForPCA".impute_9 * -3.10803233579e-17 + "CenteredDataForPCA".impute_10 * -0.589433725121 + "CenteredDataForPCA".impute_11 * -2.92083252917e-18 + "CenteredDataForPCA".impute_12 * -2.91047554131e-16 + "CenteredDataForPCA".impute_13 * -6.57823321487e-17 + "CenteredDataForPCA".impute_14 * 2.79125205154e-17 + "CenteredDataForPCA".impute_15 * 0.0971295469025 + "CenteredDataForPCA".impute_16 * 0.552070679115 + "CenteredDataForPCA".impute_17 * -0.0882304149803 + "CenteredDataForPCA".impute_18 * 0.298480017455 + "CenteredDataForPCA".impute_19 * 1.78678857071e-17 + "CenteredDataForPCA".impute_20 * 5.3269531304e-17 + "CenteredDataForPCA".impute_21 * 6.29603934046e-17 AS anoova_20, "CenteredDataForPCA".impute_2 * 1.09554666237e-16 + "CenteredDataForPCA".impute_3 * -1.82990894969e-17 + "CenteredDataForPCA".impute_4 * 3.19767806618e-17 + "CenteredDataForPCA".impute_5 * -2.02115325002e-16 + "CenteredDataForPCA".impute_6 * 0.289531946644 + "CenteredDataForPCA".impute_7 * 7.80342894678e-17 + "CenteredDataForPCA".impute_8 * 3.08729921961e-16 + "CenteredDataForPCA".impute_9 * 3.91248117044e-17 + "CenteredDataForPCA".impute_10 * 0.0969692518445 + "CenteredDataForPCA".impute_11 * 6.11746014503e-18 + "CenteredDataForPCA".impute_12 * 3.62390866014e-17 + "CenteredDataForPCA".impute_13 * 2.83495727124e-17 + "CenteredDataForPCA".impute_14 * 6.47950448289e-17 + "CenteredDataForPCA".impute_15 * -0.40672471386 + "CenteredDataForPCA".impute_16 * 0.244065658961 + "CenteredDataForPCA".impute_17 * -0.399824529894 + "CenteredDataForPCA".impute_18 * -0.722437210154 + "CenteredDataForPCA".impute_19 * -5.26396097191e-17 + "CenteredDataForPCA".impute_20 * 1.05375156306e-16 + "CenteredDataForPCA".impute_21 * -1.05458557121e-16 AS anoova_21 
FROM "CenteredDataForPCA"), 
linear_model_cte AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", 0.588646523393912 * "ADS_ano_2_OUT".anoova_2 + -0.41888959905538065 * "ADS_ano_2_OUT".anoova_3 + -1.1321907061208896 * "ADS_ano_2_OUT".anoova_4 + -0.5768321325959479 * "ADS_ano_2_OUT".anoova_5 + -0.22540872579633256 * "ADS_ano_2_OUT".anoova_6 + -0.6919730050543595 * "ADS_ano_2_OUT".anoova_7 + 0.11545712135223557 * "ADS_ano_2_OUT".anoova_8 + -0.5380844161382429 * "ADS_ano_2_OUT".anoova_9 + 0.6234762670742584 * "ADS_ano_2_OUT".anoova_10 + -0.39459240052654976 * "ADS_ano_2_OUT".anoova_11 + 0.31746901069699635 * "ADS_ano_2_OUT".anoova_12 + 0.03477739335877908 * "ADS_ano_2_OUT".anoova_13 + -0.05425129648093086 * "ADS_ano_2_OUT".anoova_14 + -0.1533352359516156 * "ADS_ano_2_OUT".anoova_15 + -0.3212392862069667 * "ADS_ano_2_OUT".anoova_16 + 0.3075119112303789 * "ADS_ano_2_OUT".anoova_17 + 0.41185696834288743 * "ADS_ano_2_OUT".anoova_18 + 0.08152407620234833 * "ADS_ano_2_OUT".anoova_19 + 361665230111304.9 * "ADS_ano_2_OUT".anoova_20 + -1250397747661723.2 * "ADS_ano_2_OUT".anoova_21 + -3.43278458968 AS "Score_0", 0.033947131031518786 * "ADS_ano_2_OUT".anoova_2 + 0.2916352763007397 * "ADS_ano_2_OUT".anoova_3 + -0.0462356994995296 * "ADS_ano_2_OUT".anoova_4 + 0.7051718228523316 * "ADS_ano_2_OUT".anoova_5 + -0.10587529037496574 * "ADS_ano_2_OUT".anoova_6 + 0.7445493076185246 * "ADS_ano_2_OUT".anoova_7 + 0.015803162236354425 * "ADS_ano_2_OUT".anoova_8 + 0.07201042447173234 * "ADS_ano_2_OUT".anoova_9 + 0.011922046961980615 * "ADS_ano_2_OUT".anoova_10 + 0.014548206277455789 * "ADS_ano_2_OUT".anoova_11 + -0.09664683978494458 * "ADS_ano_2_OUT".anoova_12 + 0.22760886552847726 * "ADS_ano_2_OUT".anoova_13 + -0.34709806890455486 * "ADS_ano_2_OUT".anoova_14 + 0.17299039992463755 * "ADS_ano_2_OUT".anoova_15 + 0.4245259377260209 * "ADS_ano_2_OUT".anoova_16 + -0.02411707319412526 * "ADS_ano_2_OUT".anoova_17 + 0.08751460216843304 * "ADS_ano_2_OUT".anoova_18 + -0.519996901810864 * "ADS_ano_2_OUT".anoova_19 + 44758585956802.47 * "ADS_ano_2_OUT".anoova_20 + 274235931320010.6 * "ADS_ano_2_OUT".anoova_21 + -2.08415584224 AS "Score_1", -0.34941129421363964 * "ADS_ano_2_OUT".anoova_2 + -0.5378550537788138 * "ADS_ano_2_OUT".anoova_3 + 0.9019032466339895 * "ADS_ano_2_OUT".anoova_4 + -0.23018684422740238 * "ADS_ano_2_OUT".anoova_5 + 0.2283781347005951 * "ADS_ano_2_OUT".anoova_6 + -0.4470282697337578 * "ADS_ano_2_OUT".anoova_7 + -0.2014031343008633 * "ADS_ano_2_OUT".anoova_8 + 0.4355599758297386 * "ADS_ano_2_OUT".anoova_9 + -0.5069498853483714 * "ADS_ano_2_OUT".anoova_10 + 0.5546745930551495 * "ADS_ano_2_OUT".anoova_11 + -0.12810425079507956 * "ADS_ano_2_OUT".anoova_12 + -0.42725795166374536 * "ADS_ano_2_OUT".anoova_13 + 0.1255013585467021 * "ADS_ano_2_OUT".anoova_14 + 0.014378959481593748 * "ADS_ano_2_OUT".anoova_15 + -0.0027903754558345553 * "ADS_ano_2_OUT".anoova_16 + -0.2781317812865554 * "ADS_ano_2_OUT".anoova_17 + -0.19416525606931279 * "ADS_ano_2_OUT".anoova_18 + 0.1351940181544977 * "ADS_ano_2_OUT".anoova_19 + -593054366702271.0 * "ADS_ano_2_OUT".anoova_20 + 437553118921303.8 * "ADS_ano_2_OUT".anoova_21 + -2.8842158101 AS "Score_2", -0.2509943845172953 * "ADS_ano_2_OUT".anoova_2 + 0.63668838151921 * "ADS_ano_2_OUT".anoova_3 + 0.23308495872157525 * "ADS_ano_2_OUT".anoova_4 + 0.050566995753087596 * "ADS_ano_2_OUT".anoova_5 + 0.09812454405384852 * "ADS_ano_2_OUT".anoova_6 + 0.3369910746626777 * "ADS_ano_2_OUT".anoova_7 + 0.07412900907690854 * "ADS_ano_2_OUT".anoova_8 + 0.006110222212372951 * "ADS_ano_2_OUT".anoova_9 + -0.10398625988337659 * "ADS_ano_2_OUT".anoova_10 + -0.19099602307821567 * "ADS_ano_2_OUT".anoova_11 + -0.07615328609769456 * "ADS_ano_2_OUT".anoova_12 + 0.1571584338897011 * "ADS_ano_2_OUT".anoova_13 + 0.28756187773572855 * "ADS_ano_2_OUT".anoova_14 + -0.04708714888966575 * "ADS_ano_2_OUT".anoova_15 + -0.13032688502053905 * "ADS_ano_2_OUT".anoova_16 + 0.008002102627281918 * "ADS_ano_2_OUT".anoova_17 + -0.29223261979502946 * "ADS_ano_2_OUT".anoova_18 + 0.3273396465745464 * "ADS_ano_2_OUT".anoova_19 + 199306816400343.7 * "ADS_ano_2_OUT".anoova_20 + 477623350261139.8 * "ADS_ano_2_OUT".anoova_21 + -2.14108567069 AS "Score_3" 
FROM "ADS_ano_2_OUT"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", (1.0 / (1.0 + exp(-linear_model_cte."Score_0"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_0", (1.0 / (1.0 + exp(-linear_model_cte."Score_1"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_1", (1.0 / (1.0 + exp(-linear_model_cte."Score_2"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_2", (1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte