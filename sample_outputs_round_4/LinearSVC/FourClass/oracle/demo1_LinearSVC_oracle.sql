-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", -0.009832452476655087 * "ADS"."Feature_0" + -0.6382687673881161 * "ADS"."Feature_1" + 0.2718497610690729 * "ADS"."Feature_2" + 0.27029598284998485 * "ADS"."Feature_3" + 0.03960744366946679 * "ADS"."Feature_4" + 0.3492516847351045 * "ADS"."Feature_5" + 0.06718955226340136 * "ADS"."Feature_6" + -0.7752050339148959 * "ADS"."Feature_7" + -0.09036484312671499 * "ADS"."Feature_8" + 0.672310276794705 * "ADS"."Feature_9" + 0.029523862260268503 * "ADS"."Feature_10" + -0.3348053191657986 * "ADS"."Feature_11" + -0.23181687077623464 * "ADS"."Feature_12" + -0.2482722218772702 * "ADS"."Feature_13" + 0.4189248086889432 * "ADS"."Feature_14" + 0.2102051382053875 * "ADS"."Feature_15" + 0.030616653640219805 * "ADS"."Feature_16" + -0.3940505544181879 * "ADS"."Feature_17" + -0.1026378810939807 * "ADS"."Feature_18" + 0.15341383832117275 * "ADS"."Feature_19" + -1.49972895771 AS "Score_0", -0.08525435958346553 * "ADS"."Feature_0" + 0.08999190746482491 * "ADS"."Feature_1" + -0.05991339198551304 * "ADS"."Feature_2" + -0.34175377331210244 * "ADS"."Feature_3" + 0.3868251116494774 * "ADS"."Feature_4" + -0.06011786304796575 * "ADS"."Feature_5" + -0.32450403602635314 * "ADS"."Feature_6" + 0.3965255572295064 * "ADS"."Feature_7" + -0.07143195564613679 * "ADS"."Feature_8" + -0.19233359359011795 * "ADS"."Feature_9" + -0.0577544600772918 * "ADS"."Feature_10" + -0.011702984716550383 * "ADS"."Feature_11" + 0.0013047563434678377 * "ADS"."Feature_12" + 0.06990610949084355 * "ADS"."Feature_13" + 0.12622854124153546 * "ADS"."Feature_14" + -0.2739702574891234 * "ADS"."Feature_15" + -0.07738959623599709 * "ADS"."Feature_16" + 0.18026740057079318 * "ADS"."Feature_17" + 0.03183879839984677 * "ADS"."Feature_18" + 0.1108686877044839 * "ADS"."Feature_19" + -0.697132163811 AS "Score_1", 0.1438172678075956 * "ADS"."Feature_0" + 0.3110262065098755 * "ADS"."Feature_1" + 0.05609058631910306 * "ADS"."Feature_2" + 0.14179992463784155 * "ADS"."Feature_3" + -0.03659321896902278 * "ADS"."Feature_4" + -0.3353997095548057 * "ADS"."Feature_5" + 0.04549332688752435 * "ADS"."Feature_6" + 0.06431057952436732 * "ADS"."Feature_7" + -0.09447007584786653 * "ADS"."Feature_8" + -0.1675432598322108 * "ADS"."Feature_9" + 0.07055290093230755 * "ADS"."Feature_10" + 0.1557277976103767 * "ADS"."Feature_11" + 0.21245388807379417 * "ADS"."Feature_12" + -0.04536997242319918 * "ADS"."Feature_13" + -0.1955098127109659 * "ADS"."Feature_14" + -0.2626252172168441 * "ADS"."Feature_15" + 0.06274177911835646 * "ADS"."Feature_16" + -0.32865101409844216 * "ADS"."Feature_17" + -0.0604092935917934 * "ADS"."Feature_18" + 0.1373734442012762 * "ADS"."Feature_19" + -0.840463602614 AS "Score_2", -0.09642326168122108 * "ADS"."Feature_0" + -0.03676385153379397 * "ADS"."Feature_1" + -0.08866196978710117 * "ADS"."Feature_2" + 0.059017193235499386 * "ADS"."Feature_3" + -0.18657140184558285 * "ADS"."Feature_4" + 0.1345852281688207 * "ADS"."Feature_5" + 0.17311108553726096 * "ADS"."Feature_6" + -0.018076582501825138 * "ADS"."Feature_7" + 0.12843014433540342 * "ADS"."Feature_8" + 0.04217791357729881 * "ADS"."Feature_9" + -0.02155727609218152 * "ADS"."Feature_10" + -0.02092461611575935 * "ADS"."Feature_11" + -0.15534353497333434 * "ADS"."Feature_12" + 0.12680358858520233 * "ADS"."Feature_13" + 0.03460997704533483 * "ADS"."Feature_14" + 0.15191291136481383 * "ADS"."Feature_15" + -0.008316411678575575 * "ADS"."Feature_16" + 0.23676881044235354 * "ADS"."Feature_17" + -0.012582220009279561 * "ADS"."Feature_18" + -0.0638690468105911 * "ADS"."Feature_19" + -0.562352943553 AS "Score_3" 
FROM "INPUT_DATA" "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte