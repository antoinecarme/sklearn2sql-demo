-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.165033070845 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.078028011727 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0135953165904 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.142250145715 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.373823942583 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.182445670004 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0693942600748 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0641356912354 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.465265602565 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.119785548237 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0185204714077 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.014732420769 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.0709478263021 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.109647376357 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.102545760981 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.143440939949 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.133998883645 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.17063218209 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0432899159544 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.00874578740001 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.165033070845 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.078028011727 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.0135953165904 AS impute_4, "ADS_imp_1_OUT".impute_5 - -0.142250145715 AS impute_5, "ADS_imp_1_OUT".impute_6 - -0.373823942583 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.182445670004 AS impute_7, "ADS_imp_1_OUT".impute_8 - -0.0693942600748 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.0641356912354 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.465265602565 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.119785548237 AS impute_11, "ADS_imp_1_OUT".impute_12 - 0.0185204714077 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.014732420769 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.0709478263021 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.109647376357 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.102545760981 AS impute_16, "ADS_imp_1_OUT".impute_17 - -0.143440939949 AS impute_17, "ADS_imp_1_OUT".impute_18 - 0.133998883645 AS impute_18, "ADS_imp_1_OUT".impute_19 - 0.17063218209 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.0432899159544 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.00874578740001 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.0263439401917 + "CenteredDataForPCA".impute_3 * 0.0185356155087 + "CenteredDataForPCA".impute_4 * -0.00211211755963 + "CenteredDataForPCA".impute_5 * -0.550387324153 + "CenteredDataForPCA".impute_6 * 0.251181314181 + "CenteredDataForPCA".impute_7 * -0.00972471411393 + "CenteredDataForPCA".impute_8 * 0.0151064095835 + "CenteredDataForPCA".impute_9 * -0.100526997229 + "CenteredDataForPCA".impute_10 * 0.335278114889 + "CenteredDataForPCA".impute_11 * 0.0302771195833 + "CenteredDataForPCA".impute_12 * -0.0892162068948 + "CenteredDataForPCA".impute_13 * 0.533647336923 + "CenteredDataForPCA".impute_14 * 0.0123054075039 + "CenteredDataForPCA".impute_15 * 0.0259884887265 + "CenteredDataForPCA".impute_16 * 0.0196352306345 + "CenteredDataForPCA".impute_17 * 0.0243319950277 + "CenteredDataForPCA".impute_18 * 0.0139069156863 + "CenteredDataForPCA".impute_19 * -0.461933376088 + "CenteredDataForPCA".impute_20 * 0.0168473402149 + "CenteredDataForPCA".impute_21 * 0.0279291003913 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.0368656115839 + "CenteredDataForPCA".impute_3 * -0.0313318884036 + "CenteredDataForPCA".impute_4 * 0.0214383096933 + "CenteredDataForPCA".impute_5 * -0.390589288906 + "CenteredDataForPCA".impute_6 * -0.11897744798 + "CenteredDataForPCA".impute_7 * 0.0611429521438 + "CenteredDataForPCA".impute_8 * 0.0438845539279 + "CenteredDataForPCA".impute_9 * 0.00659072998566 + "CenteredDataForPCA".impute_10 * 0.442272111885 + "CenteredDataForPCA".impute_11 * 0.0204644467473 + "CenteredDataForPCA".impute_12 * -0.0673792710193 + "CenteredDataForPCA".impute_13 * -0.218445712538 + "CenteredDataForPCA".impute_14 * 0.128103087576 + "CenteredDataForPCA".impute_15 * -0.0106357592489 + "CenteredDataForPCA".impute_16 * -0.0480219192461 + "CenteredDataForPCA".impute_17 * 0.530374819969 + "CenteredDataForPCA".impute_18 * -0.0586363532851 + "CenteredDataForPCA".impute_19 * 0.510303262393 + "CenteredDataForPCA".impute_20 * -0.0942576701567 + "CenteredDataForPCA".impute_21 * 0.0602920015792 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.137552248715 + "CenteredDataForPCA".impute_3 * 0.0660664425808 + "CenteredDataForPCA".impute_4 * -0.157386838333 + "CenteredDataForPCA".impute_5 * -0.093322637156 + "CenteredDataForPCA".impute_6 * 0.748742205517 + "CenteredDataForPCA".impute_7 * -0.197067737646 + "CenteredDataForPCA".impute_8 * -0.0876508962956 + "CenteredDataForPCA".impute_9 * 0.0345555793154 + "CenteredDataForPCA".impute_10 * -0.272865538264 + "CenteredDataForPCA".impute_11 * 0.0686414819965 + "CenteredDataForPCA".impute_12 * -0.160259015378 + "CenteredDataForPCA".impute_13 * -0.263409446332 + "CenteredDataForPCA".impute_14 * 0.062168368084 + "CenteredDataForPCA".impute_15 * 0.202109905196 + "CenteredDataForPCA".impute_16 * 0.0736865964519 + "CenteredDataForPCA".impute_17 * 0.18578785365 + "CenteredDataForPCA".impute_18 * -0.124838475817 + "CenteredDataForPCA".impute_19 * 0.0458634748438 + "CenteredDataForPCA".impute_20 * -0.116415921715 + "CenteredDataForPCA".impute_21 * -0.211593588865 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.160948170091 + "CenteredDataForPCA".impute_3 * -0.109237129788 + "CenteredDataForPCA".impute_4 * -0.161891912035 + "CenteredDataForPCA".impute_5 * -0.0965355658706 + "CenteredDataForPCA".impute_6 * 0.234118976269 + "CenteredDataForPCA".impute_7 * -0.0680630277885 + "CenteredDataForPCA".impute_8 * -0.0670324112919 + "CenteredDataForPCA".impute_9 * 0.15467970388 + "CenteredDataForPCA".impute_10 * 0.438324654448 + "CenteredDataForPCA".impute_11 * 0.0414436753878 + "CenteredDataForPCA".impute_12 * -0.0364331773302 + "CenteredDataForPCA".impute_13 * -0.286820128647 + "CenteredDataForPCA".impute_14 * -0.0783002054592 + "CenteredDataForPCA".impute_15 * -0.240205267796 + "CenteredDataForPCA".impute_16 * 0.062555484975 + "CenteredDataForPCA".impute_17 * -0.67188029664 + "CenteredDataForPCA".impute_18 * -0.00880537221866 + "CenteredDataForPCA".impute_19 * 0.162388375466 + "CenteredDataForPCA".impute_20 * -0.0993753966022 + "CenteredDataForPCA".impute_21 * 0.0764418536362 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.0826842587685 + "CenteredDataForPCA".impute_3 * -0.445683186385 + "CenteredDataForPCA".impute_4 * 0.115890552276 + "CenteredDataForPCA".impute_5 * -0.0211453108526 + "CenteredDataForPCA".impute_6 * 0.175508604243 + "CenteredDataForPCA".impute_7 * 0.2036743353 + "CenteredDataForPCA".impute_8 * 0.128052382281 + "CenteredDataForPCA".impute_9 * 0.475084931022 + "CenteredDataForPCA".impute_10 * -0.167140444928 + "CenteredDataForPCA".impute_11 * 0.0769732670969 + "CenteredDataForPCA".impute_12 * 0.0511344351002 + "CenteredDataForPCA".impute_13 * 0.0378784934107 + "CenteredDataForPCA".impute_14 * -0.350625358703 + "CenteredDataForPCA".impute_15 * -0.0855749472486 + "CenteredDataForPCA".impute_16 * -0.234806733095 + "CenteredDataForPCA".impute_17 * 0.165220214491 + "CenteredDataForPCA".impute_18 * -0.251629005189 + "CenteredDataForPCA".impute_19 * -0.0809415540463 + "CenteredDataForPCA".impute_20 * -0.0512049287055 + "CenteredDataForPCA".impute_21 * 0.378375954766 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.170992467818 + "CenteredDataForPCA".impute_3 * -0.359611271936 + "CenteredDataForPCA".impute_4 * -0.392459864337 + "CenteredDataForPCA".impute_5 * -0.00562550021062 + "CenteredDataForPCA".impute_6 * 0.0127564186346 + "CenteredDataForPCA".impute_7 * -0.150477623183 + "CenteredDataForPCA".impute_8 * 0.0641473801966 + "CenteredDataForPCA".impute_9 * -0.029379791783 + "CenteredDataForPCA".impute_10 * -0.100474918935 + "CenteredDataForPCA".impute_11 * -0.57685333923 + "CenteredDataForPCA".impute_12 * -0.143267246374 + "CenteredDataForPCA".impute_13 * 0.0259791338374 + "CenteredDataForPCA".impute_14 * -0.0539525229237 + "CenteredDataForPCA".impute_15 * -0.235697101551 + "CenteredDataForPCA".impute_16 * 0.327581313894 + "CenteredDataForPCA".impute_17 * 0.190385360938 + "CenteredDataForPCA".impute_18 * 0.238981886623 + "CenteredDataForPCA".impute_19 * -0.00502509685397 + "CenteredDataForPCA".impute_20 * 0.18674463378 + "CenteredDataForPCA".impute_21 * 0.0389096514783 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.0132878461307 + "CenteredDataForPCA".impute_3 * -0.456605208746 + "CenteredDataForPCA".impute_4 * 0.0488023464884 + "CenteredDataForPCA".impute_5 * -0.0106963246356 + "CenteredDataForPCA".impute_6 * 0.122864626968 + "CenteredDataForPCA".impute_7 * 0.14768121656 + "CenteredDataForPCA".impute_8 * -0.292492670214 + "CenteredDataForPCA".impute_9 * -0.327059334702 + "CenteredDataForPCA".impute_10 * -0.00737224430007 + "CenteredDataForPCA".impute_11 * -0.0060898471005 + "CenteredDataForPCA".impute_12 * -0.0133477678295 + "CenteredDataForPCA".impute_13 * -0.0644995474566 + "CenteredDataForPCA".impute_14 * 0.130990600576 + "CenteredDataForPCA".impute_15 * -0.0167199553423 + "CenteredDataForPCA".impute_16 * -0.618320002821 + "CenteredDataForPCA".impute_17 * -0.0421166160743 + "CenteredDataForPCA".impute_18 * 0.287848391256 + "CenteredDataForPCA".impute_19 * 0.0188499609891 + "CenteredDataForPCA".impute_20 * 0.165896069977 + "CenteredDataForPCA".impute_21 * -0.206685663585 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.040683649378 + "CenteredDataForPCA".impute_3 * -0.11706043773 + "CenteredDataForPCA".impute_4 * -0.166705409902 + "CenteredDataForPCA".impute_5 * 0.0548703433092 + "CenteredDataForPCA".impute_6 * -0.301221039683 + "CenteredDataForPCA".impute_7 * 0.00787869371443 + "CenteredDataForPCA".impute_8 * -0.448196493842 + "CenteredDataForPCA".impute_9 * 0.143977122766 + "CenteredDataForPCA".impute_10 * 0.0106495205854 + "CenteredDataForPCA".impute_11 * 0.0968104820117 + "CenteredDataForPCA".impute_12 * -0.477022047881 + "CenteredDataForPCA".impute_13 * 0.146322714892 + "CenteredDataForPCA".impute_14 * -0.16951774287 + "CenteredDataForPCA".impute_15 * -0.102627764894 + "CenteredDataForPCA".impute_16 * 0.0217430471278 + "CenteredDataForPCA".impute_17 * 0.0487257537442 + "CenteredDataForPCA".impute_18 * -0.338439207067 + "CenteredDataForPCA".impute_19 * -0.052070949901 + "CenteredDataForPCA".impute_20 * -0.238966147451 + "CenteredDataForPCA".impute_21 * -0.408063124082 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.100312598286 + "CenteredDataForPCA".impute_3 * 0.273603971239 + "CenteredDataForPCA".impute_4 * 0.0414138165152 + "CenteredDataForPCA".impute_5 * 0.0196358649428 + "CenteredDataForPCA".impute_6 * 0.0965903313083 + "CenteredDataForPCA".impute_7 * 0.023731492148 + "CenteredDataForPCA".impute_8 * 0.162091158808 + "CenteredDataForPCA".impute_9 * -0.369329979856 + "CenteredDataForPCA".impute_10 * -0.080859629364 + "CenteredDataForPCA".impute_11 * 0.26905545715 + "CenteredDataForPCA".impute_12 * -0.377326845777 + "CenteredDataForPCA".impute_13 * -0.0818480956336 + "CenteredDataForPCA".impute_14 * -0.363860042274 + "CenteredDataForPCA".impute_15 * -0.442851230726 + "CenteredDataForPCA".impute_16 * -0.0729386889152 + "CenteredDataForPCA".impute_17 * 0.0780444083157 + "CenteredDataForPCA".impute_18 * -0.0752485543343 + "CenteredDataForPCA".impute_19 * 0.0528948938009 + "CenteredDataForPCA".impute_20 * 0.390800099111 + "CenteredDataForPCA".impute_21 * 0.106280240173 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.0962398474877 + "CenteredDataForPCA".impute_3 * 0.0193265378049 + "CenteredDataForPCA".impute_4 * 0.100378933767 + "CenteredDataForPCA".impute_5 * -0.0466675459305 + "CenteredDataForPCA".impute_6 * 0.0379084596797 + "CenteredDataForPCA".impute_7 * 0.00945830799749 + "CenteredDataForPCA".impute_8 * 0.0462058083984 + "CenteredDataForPCA".impute_9 * -0.381094897526 + "CenteredDataForPCA".impute_10 * 0.0461383832676 + "CenteredDataForPCA".impute_11 * -0.261467083318 + "CenteredDataForPCA".impute_12 * 0.263387453581 + "CenteredDataForPCA".impute_13 * -0.0330755493528 + "CenteredDataForPCA".impute_14 * -0.649295703817 + "CenteredDataForPCA".impute_15 * 0.0246551241177 + "CenteredDataForPCA".impute_16 * -0.0161211254161 + "CenteredDataForPCA".impute_17 * 0.0202299649415 + "CenteredDataForPCA".impute_18 * 0.047185398208 + "CenteredDataForPCA".impute_19 * 0.0416088858615 + "CenteredDataForPCA".impute_20 * -0.489136045884 + "CenteredDataForPCA".impute_21 * -0.148933838783 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.312959989205 + "CenteredDataForPCA".impute_3 * -0.267807821089 + "CenteredDataForPCA".impute_4 * 0.432726882201 + "CenteredDataForPCA".impute_5 * -0.0134215474099 + "CenteredDataForPCA".impute_6 * -0.0865283636516 + "CenteredDataForPCA".impute_7 * -0.713194884941 + "CenteredDataForPCA".impute_8 * 0.165919463793 + "CenteredDataForPCA".impute_9 * 0.0250727846156 + "CenteredDataForPCA".impute_10 * 0.0882311505629 + "CenteredDataForPCA".impute_11 * -0.071115242985 + "CenteredDataForPCA".impute_12 * -0.0664771826309 + "CenteredDataForPCA".impute_13 * 0.0106683311033 + "CenteredDataForPCA".impute_14 * -0.00510614960851 + "CenteredDataForPCA".impute_15 * -0.0776946006488 + "CenteredDataForPCA".impute_16 * -0.0563953332495 + "CenteredDataForPCA".impute_17 * -0.0544050466383 + "CenteredDataForPCA".impute_18 * -0.183828955246 + "CenteredDataForPCA".impute_19 * 0.0210933009038 + "CenteredDataForPCA".impute_20 * 0.147742462811 + "CenteredDataForPCA".impute_21 * -0.113870331004 AS anoova_12, "CenteredDataForPCA".impute_2 * -0.393429037217 + "CenteredDataForPCA".impute_3 * -0.0871149356749 + "CenteredDataForPCA".impute_4 * -0.305367555513 + "CenteredDataForPCA".impute_5 * -0.0672983665438 + "CenteredDataForPCA".impute_6 * -0.0695025539501 + "CenteredDataForPCA".impute_7 * 0.0658837843365 + "CenteredDataForPCA".impute_8 * -0.243674933987 + "CenteredDataForPCA".impute_9 * 0.000946649202058 + "CenteredDataForPCA".impute_10 * 0.152878212673 + "CenteredDataForPCA".impute_11 * 0.0983934681967 + "CenteredDataForPCA".impute_12 * 0.238234813536 + "CenteredDataForPCA".impute_13 * -0.0265491722022 + "CenteredDataForPCA".impute_14 * -0.349680702187 + "CenteredDataForPCA".impute_15 * 0.336749212329 + "CenteredDataForPCA".impute_16 * 0.140464686155 + "CenteredDataForPCA".impute_17 * -0.0233954325391 + "CenteredDataForPCA".impute_18 * -0.142443927068 + "CenteredDataForPCA".impute_19 * 0.079910203775 + "CenteredDataForPCA".impute_20 * 0.545830173483 + "CenteredDataForPCA".impute_21 * 0.0149003482797 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.250146216788 + "CenteredDataForPCA".impute_3 * -0.323326133751 + "CenteredDataForPCA".impute_4 * -0.175554127399 + "CenteredDataForPCA".impute_5 * 0.011059379269 + "CenteredDataForPCA".impute_6 * -0.0266125632051 + "CenteredDataForPCA".impute_7 * 0.104444345885 + "CenteredDataForPCA".impute_8 * 0.526290779941 + "CenteredDataForPCA".impute_9 * -0.156798238795 + "CenteredDataForPCA".impute_10 * 0.000909660378131 + "CenteredDataForPCA".impute_11 * 0.323390485588 + "CenteredDataForPCA".impute_12 * 0.247223991369 + "CenteredDataForPCA".impute_13 * 0.0147061948379 + "CenteredDataForPCA".impute_14 * 0.0814100355231 + "CenteredDataForPCA".impute_15 * 0.0129193849785 + "CenteredDataForPCA".impute_16 * 0.152454469945 + "CenteredDataForPCA".impute_17 * -0.0151505433811 + "CenteredDataForPCA".impute_18 * -0.239534877956 + "CenteredDataForPCA".impute_19 * -0.011624958199 + "CenteredDataForPCA".impute_20 * 0.0420160958815 + "CenteredDataForPCA".impute_21 * -0.483010280515 AS anoova_14, "CenteredDataForPCA".impute_2 * 0.0519276190106 + "CenteredDataForPCA".impute_3 * -0.16646359637 + "CenteredDataForPCA".impute_4 * 0.222176053626 + "CenteredDataForPCA".impute_5 * 0.0614724391918 + "CenteredDataForPCA".impute_6 * 0.020581031181 + "CenteredDataForPCA".impute_7 * 0.281433589542 + "CenteredDataForPCA".impute_8 * 0.105130414448 + "CenteredDataForPCA".impute_9 * -0.344853148786 + "CenteredDataForPCA".impute_10 * 0.0329951576596 + "CenteredDataForPCA".impute_11 * -0.30141448918 + "CenteredDataForPCA".impute_12 * -0.388495259717 + "CenteredDataForPCA".impute_13 * -0.0755406878418 + "CenteredDataForPCA".impute_14 * 0.113640407323 + "CenteredDataForPCA".impute_15 * 0.425917559331 + "CenteredDataForPCA".impute_16 * 0.138988679237 + "CenteredDataForPCA".impute_17 * -0.198207235282 + "CenteredDataForPCA".impute_18 * -0.394734633982 + "CenteredDataForPCA".impute_19 * 0.0224694569094 + "CenteredDataForPCA".impute_20 * 0.0233592587307 + "CenteredDataForPCA".impute_21 * 0.220189965854 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.397836813194 + "CenteredDataForPCA".impute_3 * -0.302245664303 + "CenteredDataForPCA".impute_4 * 0.118029360217 + "CenteredDataForPCA".impute_5 * 0.0180909315311 + "CenteredDataForPCA".impute_6 * 0.0489750074256 + "CenteredDataForPCA".impute_7 * 0.170998725867 + "CenteredDataForPCA".impute_8 * -0.229832992793 + "CenteredDataForPCA".impute_9 * -0.267874024462 + "CenteredDataForPCA".impute_10 * -0.0762974935481 + "CenteredDataForPCA".impute_11 * 0.273628915003 + "CenteredDataForPCA".impute_12 * 0.11592219051 + "CenteredDataForPCA".impute_13 * 0.00521857038258 + "CenteredDataForPCA".impute_14 * 0.216279007226 + "CenteredDataForPCA".impute_15 * -0.391559894366 + "CenteredDataForPCA".impute_16 * 0.442677830271 + "CenteredDataForPCA".impute_17 * 0.0462575396909 + "CenteredDataForPCA".impute_18 * -0.00756112125487 + "CenteredDataForPCA".impute_19 * -0.0261316458005 + "CenteredDataForPCA".impute_20 * -0.197496932886 + "CenteredDataForPCA".impute_21 * 0.218615809276 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.122429872663 + "CenteredDataForPCA".impute_3 * 0.0573711275935 + "CenteredDataForPCA".impute_4 * 0.484300512534 + "CenteredDataForPCA".impute_5 * -0.0683772292543 + "CenteredDataForPCA".impute_6 * 0.132800026918 + "CenteredDataForPCA".impute_7 * 0.429705249061 + "CenteredDataForPCA".impute_8 * 0.0282147834824 + "CenteredDataForPCA".impute_9 * 0.320773861981 + "CenteredDataForPCA".impute_10 * 0.0522408363029 + "CenteredDataForPCA".impute_11 * -0.200642667373 + "CenteredDataForPCA".impute_12 * -0.0696989881392 + "CenteredDataForPCA".impute_13 * -0.0553456585631 + "CenteredDataForPCA".impute_14 * -0.0804092120814 + "CenteredDataForPCA".impute_15 * -0.129252004065 + "CenteredDataForPCA".impute_16 * 0.24480677094 + "CenteredDataForPCA".impute_17 * -0.0260491832888 + "CenteredDataForPCA".impute_18 * 0.196899665226 + "CenteredDataForPCA".impute_19 * 0.0296490744045 + "CenteredDataForPCA".impute_20 * 0.233370955275 + "CenteredDataForPCA".impute_21 * -0.455767258551 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.378992419353 + "CenteredDataForPCA".impute_3 * 0.205671844171 + "CenteredDataForPCA".impute_4 * -0.255689623257 + "CenteredDataForPCA".impute_5 * -0.0177988518164 + "CenteredDataForPCA".impute_6 * 0.0370621115406 + "CenteredDataForPCA".impute_7 * 0.189507901002 + "CenteredDataForPCA".impute_8 * 0.143714909013 + "CenteredDataForPCA".impute_9 * 0.0111421521408 + "CenteredDataForPCA".impute_10 * 0.0138393065673 + "CenteredDataForPCA".impute_11 * -0.394516526568 + "CenteredDataForPCA".impute_12 * 0.152961153902 + "CenteredDataForPCA".impute_13 * 0.0237332529789 + "CenteredDataForPCA".impute_14 * 0.22249490198 + "CenteredDataForPCA".impute_15 * -0.376926449433 + "CenteredDataForPCA".impute_16 * -0.323786467203 + "CenteredDataForPCA".impute_17 * -0.0476989177712 + "CenteredDataForPCA".impute_18 * -0.45089160683 + "CenteredDataForPCA".impute_19 * -0.0402811408626 + "CenteredDataForPCA".impute_20 * 0.00887288448717 + "CenteredDataForPCA".impute_21 * -0.0825515500245 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.510873760608 + "CenteredDataForPCA".impute_3 * -0.092166066793 + "CenteredDataForPCA".impute_4 * -0.254163566526 + "CenteredDataForPCA".impute_5 * 0.0367951007181 + "CenteredDataForPCA".impute_6 * -0.1016307745 + "CenteredDataForPCA".impute_7 * 0.114655911589 + "CenteredDataForPCA".impute_8 * 0.448444706909 + "CenteredDataForPCA".impute_9 * 0.0995565844684 + "CenteredDataForPCA".impute_10 * 0.044817040476 + "CenteredDataForPCA".impute_11 * 0.149803459032 + "CenteredDataForPCA".impute_12 * -0.427734630891 + "CenteredDataForPCA".impute_13 * 0.0123026372219 + "CenteredDataForPCA".impute_14 * -0.0559361495455 + "CenteredDataForPCA".impute_15 * 0.130932257565 + "CenteredDataForPCA".impute_16 * -0.104626616 + "CenteredDataForPCA".impute_17 * -0.0880200329624 + "CenteredDataForPCA".impute_18 * 0.381555319447 + "CenteredDataForPCA".impute_19 * 0.00118171356101 + "CenteredDataForPCA".impute_20 * -0.194133239707 + "CenteredDataForPCA".impute_21 * 0.0165411043731 AS anoova_19, "CenteredDataForPCA".impute_2 * -4.23748669387e-17 + "CenteredDataForPCA".impute_3 * -1.54600265753e-16 + "CenteredDataForPCA".impute_4 * 4.76457308988e-16 + "CenteredDataForPCA".impute_5 * -0.25138433341 + "CenteredDataForPCA".impute_6 * -0.256043908999 + "CenteredDataForPCA".impute_7 * 1.6096191675e-16 + "CenteredDataForPCA".impute_8 * 2.22532902101e-16 + "CenteredDataForPCA".impute_9 * -2.51309040003e-16 + "CenteredDataForPCA".impute_10 * -0.00423184626481 + "CenteredDataForPCA".impute_11 * -5.19022724515e-17 + "CenteredDataForPCA".impute_12 * -1.45442158543e-16 + "CenteredDataForPCA".impute_13 * -0.684433677454 + "CenteredDataForPCA".impute_14 * 1.05045265023e-16 + "CenteredDataForPCA".impute_15 * 6.75178769665e-17 + "CenteredDataForPCA".impute_16 * 9.52123467407e-17 + "CenteredDataForPCA".impute_17 * 0.0842864974193 + "CenteredDataForPCA".impute_18 * 3.61302663695e-17 + "CenteredDataForPCA".impute_19 * -0.629027704142 + "CenteredDataForPCA".impute_20 * 4.97640098114e-17 + "CenteredDataForPCA".impute_21 * 2.29690636208e-16 AS anoova_20, "CenteredDataForPCA".impute_2 * 1.38249493317e-16 + "CenteredDataForPCA".impute_3 * 2.88865729675e-16 + "CenteredDataForPCA".impute_4 * -5.50297865267e-16 + "CenteredDataForPCA".impute_5 * -0.664710718787 + "CenteredDataForPCA".impute_6 * -0.221400748509 + "CenteredDataForPCA".impute_7 * -2.62542907057e-17 + "CenteredDataForPCA".impute_8 * 2.46343128974e-17 + "CenteredDataForPCA".impute_9 * -1.18546481198e-16 + "CenteredDataForPCA".impute_10 * -0.579240471435 + "CenteredDataForPCA".impute_11 * 3.15402535957e-17 + "CenteredDataForPCA".impute_12 * -3.3537531306e-16 + "CenteredDataForPCA".impute_13 * 0.0371825903802 + "CenteredDataForPCA".impute_14 * 1.09171453971e-16 + "CenteredDataForPCA".impute_15 * 1.78135624664e-16 + "CenteredDataForPCA".impute_16 * -1.20205219009e-16 + "CenteredDataForPCA".impute_17 * -0.308236275103 + "CenteredDataForPCA".impute_18 * 2.46234194151e-16 + "CenteredDataForPCA".impute_19 * 0.277902318854 + "CenteredDataForPCA".impute_20 * 1.32643062817e-17 + "CenteredDataForPCA".impute_21 * -2.56023061047e-17 AS anoova_21 
FROM "CenteredDataForPCA"), 
linear_model_cte AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", -0.7274927979361763 * "ADS_ano_2_OUT".anoova_2 + -0.7348938622874285 * "ADS_ano_2_OUT".anoova_3 + -0.5038414763480381 * "ADS_ano_2_OUT".anoova_4 + -0.38343905754779184 * "ADS_ano_2_OUT".anoova_5 + -0.003456793962294196 * "ADS_ano_2_OUT".anoova_6 + 0.16882108249506106 * "ADS_ano_2_OUT".anoova_7 + 0.03618683212465931 * "ADS_ano_2_OUT".anoova_8 + -0.2226572051718313 * "ADS_ano_2_OUT".anoova_9 + 0.09538408280217392 * "ADS_ano_2_OUT".anoova_10 + -0.6841406103317341 * "ADS_ano_2_OUT".anoova_11 + 0.13349437956994983 * "ADS_ano_2_OUT".anoova_12 + 0.45959258755348403 * "ADS_ano_2_OUT".anoova_13 + -0.2874623312177858 * "ADS_ano_2_OUT".anoova_14 + -0.28620785248988084 * "ADS_ano_2_OUT".anoova_15 + 0.335304317391869 * "ADS_ano_2_OUT".anoova_16 + -0.27467782915807837 * "ADS_ano_2_OUT".anoova_17 + -0.4080075047309053 * "ADS_ano_2_OUT".anoova_18 + -0.21850559655824228 * "ADS_ano_2_OUT".anoova_19 + 1.1278841088645765e-15 * "ADS_ano_2_OUT".anoova_20 + -5.108184443335062e-16 * "ADS_ano_2_OUT".anoova_21 + -2.02884924573 AS "Score_0", -0.06790372139072558 * "ADS_ano_2_OUT".anoova_2 + 0.4580593563961578 * "ADS_ano_2_OUT".anoova_3 + -0.8490033176597158 * "ADS_ano_2_OUT".anoova_4 + 0.20157968245519434 * "ADS_ano_2_OUT".anoova_5 + -0.3149361303040647 * "ADS_ano_2_OUT".anoova_6 + 0.3641348838594108 * "ADS_ano_2_OUT".anoova_7 + 0.07003749385008647 * "ADS_ano_2_OUT".anoova_8 + 0.2264287059752939 * "ADS_ano_2_OUT".anoova_9 + -0.39026686063363164 * "ADS_ano_2_OUT".anoova_10 + 0.44392555126760574 * "ADS_ano_2_OUT".anoova_11 + -0.0461199639922945 * "ADS_ano_2_OUT".anoova_12 + 0.6524028084319451 * "ADS_ano_2_OUT".anoova_13 + 0.32605355372663786 * "ADS_ano_2_OUT".anoova_14 + -0.6619367173472481 * "ADS_ano_2_OUT".anoova_15 + -0.5589960724249313 * "ADS_ano_2_OUT".anoova_16 + -0.2492546605083161 * "ADS_ano_2_OUT".anoova_17 + -0.22823497239240118 * "ADS_ano_2_OUT".anoova_18 + 0.2477469537958916 * "ADS_ano_2_OUT".anoova_19 + -3.4295921826367815e-16 * "ADS_ano_2_OUT".anoova_20 + -1.5183468508332082e-15 * "ADS_ano_2_OUT".anoova_21 + -1.78096503558 AS "Score_1", 0.6417640027780628 * "ADS_ano_2_OUT".anoova_2 + 0.38856510841597963 * "ADS_ano_2_OUT".anoova_3 + 0.22619574638447745 * "ADS_ano_2_OUT".anoova_4 + -0.7161728121472343 * "ADS_ano_2_OUT".anoova_5 + 0.2993710902239407 * "ADS_ano_2_OUT".anoova_6 + 0.12784519057756277 * "ADS_ano_2_OUT".anoova_7 + 0.02951778239743739 * "ADS_ano_2_OUT".anoova_8 + -0.091166784601042 * "ADS_ano_2_OUT".anoova_9 + -0.38867793673155837 * "ADS_ano_2_OUT".anoova_10 + -0.08755555025299075 * "ADS_ano_2_OUT".anoova_11 + -0.18023514158628756 * "ADS_ano_2_OUT".anoova_12 + -0.5755636091060021 * "ADS_ano_2_OUT".anoova_13 + 0.31382653629038537 * "ADS_ano_2_OUT".anoova_14 + 0.12967198844293717 * "ADS_ano_2_OUT".anoova_15 + -0.07358470346329209 * "ADS_ano_2_OUT".anoova_16 + -0.11695730054726743 * "ADS_ano_2_OUT".anoova_17 + 0.3575631131159166 * "ADS_ano_2_OUT".anoova_18 + 0.19048621743046026 * "ADS_ano_2_OUT".anoova_19 + -4.5400485314299694e-17 * "ADS_ano_2_OUT".anoova_20 + 4.495063306140116e-17 * "ADS_ano_2_OUT".anoova_21 + -1.54486811476 AS "Score_2", 0.04389261706339745 * "ADS_ano_2_OUT".anoova_2 + -0.2774053143547098 * "ADS_ano_2_OUT".anoova_3 + 0.9651554759172106 * "ADS_ano_2_OUT".anoova_4 + 0.9996120520654668 * "ADS_ano_2_OUT".anoova_5 + -0.023204265931649554 * "ADS_ano_2_OUT".anoova_6 + -0.16463737617672325 * "ADS_ano_2_OUT".anoova_7 + -0.03792786602117562 * "ADS_ano_2_OUT".anoova_8 + 0.08430320401029637 * "ADS_ano_2_OUT".anoova_9 + 0.3154546108489169 * "ADS_ano_2_OUT".anoova_10 + -0.015686172008392087 * "ADS_ano_2_OUT".anoova_11 + 0.21841134994024686 * "ADS_ano_2_OUT".anoova_12 + -0.7211001532871881 * "ADS_ano_2_OUT".anoova_13 + -0.11368602150163386 * "ADS_ano_2_OUT".anoova_14 + 0.43440136931447015 * "ADS_ano_2_OUT".anoova_15 + 0.5966315824358442 * "ADS_ano_2_OUT".anoova_16 + 0.6543282218504075 * "ADS_ano_2_OUT".anoova_17 + 0.2923458306090874 * "ADS_ano_2_OUT".anoova_18 + -0.552711735417259 * "ADS_ano_2_OUT".anoova_19 + 1.9681071053390765e-16 * "ADS_ano_2_OUT".anoova_20 + 1.469963149680853e-15 * "ADS_ano_2_OUT".anoova_21 + -1.90425763378 AS "Score_3" 
FROM "ADS_ano_2_OUT"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", (1.0 / (1.0 + exp(-linear_model_cte."Score_0"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_0", (1.0 / (1.0 + exp(-linear_model_cte."Score_1"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_1", (1.0 / (1.0 + exp(-linear_model_cte."Score_2"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_2", (1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) / (1.0 / (1.0 + exp(-linear_model_cte."Score_0")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_1")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_2")) + 1.0 / (1.0 + exp(-linear_model_cte."Score_3"))) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte