-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.504062244794 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.476963360977 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.50689174683 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.54021826406 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.47672584944 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.496128851239 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.490124124849 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.527123637716 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.519283303247 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.533325320001 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.504062244794 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.476963360977 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.50689174683 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.54021826406 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.47672584944 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.496128851239 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.490124124849 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.527123637716 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.519283303247 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.533325320001 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.128870132106 + "CenteredDataForPCA".impute_3 * -0.364595187413 + "CenteredDataForPCA".impute_4 * 0.399858656158 + "CenteredDataForPCA".impute_5 * -0.24240728565 + "CenteredDataForPCA".impute_6 * 0.585538950821 + "CenteredDataForPCA".impute_7 * -0.0973880387263 + "CenteredDataForPCA".impute_8 * 0.318122736868 + "CenteredDataForPCA".impute_9 * -0.371888785058 + "CenteredDataForPCA".impute_10 * 0.172817432722 + "CenteredDataForPCA".impute_11 * 0.100524121945 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.383467236664 + "CenteredDataForPCA".impute_3 * 0.0607288213121 + "CenteredDataForPCA".impute_4 * 0.0587125414643 + "CenteredDataForPCA".impute_5 * 0.0682422192947 + "CenteredDataForPCA".impute_6 * 0.220654813442 + "CenteredDataForPCA".impute_7 * -0.740325206445 + "CenteredDataForPCA".impute_8 * -0.351811186551 + "CenteredDataForPCA".impute_9 * 0.27958081994 + "CenteredDataForPCA".impute_10 * -0.175919997488 + "CenteredDataForPCA".impute_11 * 0.107267778382 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.452152102836 + "CenteredDataForPCA".impute_3 * -0.167760474075 + "CenteredDataForPCA".impute_4 * 0.207369368756 + "CenteredDataForPCA".impute_5 * 0.0211178768866 + "CenteredDataForPCA".impute_6 * -0.0336295362135 + "CenteredDataForPCA".impute_7 * 0.211272542482 + "CenteredDataForPCA".impute_8 * 0.00240860372572 + "CenteredDataForPCA".impute_9 * 0.0969384728723 + "CenteredDataForPCA".impute_10 * -0.25145551922 + "CenteredDataForPCA".impute_11 * -0.77818191926 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.273236590674 + "CenteredDataForPCA".impute_3 * 0.424339821789 + "CenteredDataForPCA".impute_4 * 0.0945806562577 + "CenteredDataForPCA".impute_5 * 0.317692175919 + "CenteredDataForPCA".impute_6 * 0.278575446406 + "CenteredDataForPCA".impute_7 * -0.185859491621 + "CenteredDataForPCA".impute_8 * 0.602274820446 + "CenteredDataForPCA".impute_9 * 0.322858848363 + "CenteredDataForPCA".impute_10 * 0.00125746981147 + "CenteredDataForPCA".impute_11 * -0.237236707692 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.534949200325 + "CenteredDataForPCA".impute_3 * -0.244053420569 + "CenteredDataForPCA".impute_4 * -0.159687933977 + "CenteredDataForPCA".impute_5 * -0.287553574989 + "CenteredDataForPCA".impute_6 * -0.164419993647 + "CenteredDataForPCA".impute_7 * -0.493108455406 + "CenteredDataForPCA".impute_8 * 0.0151310879679 + "CenteredDataForPCA".impute_9 * -0.260556578429 + "CenteredDataForPCA".impute_10 * -0.230407002652 + "CenteredDataForPCA".impute_11 * -0.393298914153 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.194051917057 + "CenteredDataForPCA".impute_3 * 0.105585282237 + "CenteredDataForPCA".impute_4 * 0.24559830784 + "CenteredDataForPCA".impute_5 * -0.0257048477799 + "CenteredDataForPCA".impute_6 * 0.0239738939707 + "CenteredDataForPCA".impute_7 * -0.0734102518179 + "CenteredDataForPCA".impute_8 * -0.403431816138 + "CenteredDataForPCA".impute_9 * 0.0928321215884 + "CenteredDataForPCA".impute_10 * 0.776207988819 + "CenteredDataForPCA".impute_11 * -0.332232818979 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.184616193908 + "CenteredDataForPCA".impute_3 * 0.699957075903 + "CenteredDataForPCA".impute_4 * -0.168280767078 + "CenteredDataForPCA".impute_5 * -0.56894793213 + "CenteredDataForPCA".impute_6 * 0.164368818117 + "CenteredDataForPCA".impute_7 * 0.047055331913 + "CenteredDataForPCA".impute_8 * -0.0412812821371 + "CenteredDataForPCA".impute_9 * -0.27714079844 + "CenteredDataForPCA".impute_10 * -0.0531243291821 + "CenteredDataForPCA".impute_11 * -0.115724299096 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.0411272908543 + "CenteredDataForPCA".impute_3 * -0.02561289387 + "CenteredDataForPCA".impute_4 * -0.508839159668 + "CenteredDataForPCA".impute_5 * 0.49189199811 + "CenteredDataForPCA".impute_6 * 0.505986487363 + "CenteredDataForPCA".impute_7 * 0.0959183347006 + "CenteredDataForPCA".impute_8 * -0.262030580911 + "CenteredDataForPCA".impute_9 * -0.361072990823 + "CenteredDataForPCA".impute_10 * -0.0062120429948 + "CenteredDataForPCA".impute_11 * -0.180229091882 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.0665005874341 + "CenteredDataForPCA".impute_3 * -0.306209346999 + "CenteredDataForPCA".impute_4 * -0.56715080353 + "CenteredDataForPCA".impute_5 * -0.396218145148 + "CenteredDataForPCA".impute_6 * 0.237204170443 + "CenteredDataForPCA".impute_7 * 0.0734893330534 + "CenteredDataForPCA".impute_8 * 0.14793130775 + "CenteredDataForPCA".impute_9 * 0.539212409151 + "CenteredDataForPCA".impute_10 * 0.215435093834 + "CenteredDataForPCA".impute_11 * -0.0495195011464 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.439570124323 + "CenteredDataForPCA".impute_3 * 0.0102020593157 + "CenteredDataForPCA".impute_4 * 0.300006384828 + "CenteredDataForPCA".impute_5 * -0.170913195785 + "CenteredDataForPCA".impute_6 * 0.403492789513 + "CenteredDataForPCA".impute_7 * 0.312880318417 + "CenteredDataForPCA".impute_8 * -0.396297907003 + "CenteredDataForPCA".impute_9 * 0.308966196817 + "CenteredDataForPCA".impute_10 * -0.413636963764 + "CenteredDataForPCA".impute_11 * 0.0561308101945 AS anoova_11 
FROM "CenteredDataForPCA"), 
"IL" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", "ADS_ano_2_OUT".anoova_2 AS anoova_2, "ADS_ano_2_OUT".anoova_3 AS anoova_3, "ADS_ano_2_OUT".anoova_4 AS anoova_4, "ADS_ano_2_OUT".anoova_5 AS anoova_5, "ADS_ano_2_OUT".anoova_6 AS anoova_6, "ADS_ano_2_OUT".anoova_7 AS anoova_7, "ADS_ano_2_OUT".anoova_8 AS anoova_8, "ADS_ano_2_OUT".anoova_9 AS anoova_9, "ADS_ano_2_OUT".anoova_10 AS anoova_10, "ADS_ano_2_OUT".anoova_11 AS anoova_11 
FROM "ADS_ano_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.195611500876 * "IL".anoova_2 + 0.772933258484 * "IL".anoova_3 + -0.780376280454 * "IL".anoova_4 + -0.662208748541 * "IL".anoova_5 + 0.129366228589 * "IL".anoova_6 + -0.270636452615 * "IL".anoova_7 + -0.45591240403 * "IL".anoova_8 + 0.384995200657 * "IL".anoova_9 + -0.584122411188 * "IL".anoova_10 + 0.802692501668 * "IL".anoova_11 + 0.0459891325508 AS "NEUR_1_1", 0.188949756466 * "IL".anoova_2 + -0.0878952410095 * "IL".anoova_3 + 0.328332709825 * "IL".anoova_4 + 0.0856162516394 * "IL".anoova_5 + 0.0967249402862 * "IL".anoova_6 + -0.0603385711187 * "IL".anoova_7 + -0.117132238406 * "IL".anoova_8 + -0.240398398692 * "IL".anoova_9 + -0.117134288591 * "IL".anoova_10 + 0.0411289907066 * "IL".anoova_11 + -0.149417755618 AS "NEUR_1_2", 0.352073005485 * "IL".anoova_2 + 0.574840319825 * "IL".anoova_3 + 0.589582571977 * "IL".anoova_4 + -0.636099462148 * "IL".anoova_5 + -0.796247022834 * "IL".anoova_6 + 0.29208850588 * "IL".anoova_7 + -0.128581994718 * "IL".anoova_8 + 0.0861690873776 * "IL".anoova_9 + 0.588780055862 * "IL".anoova_10 + 0.508518283388 * "IL".anoova_11 + -0.250617609509 AS "NEUR_1_3", -0.107399677312 * "IL".anoova_2 + -0.0723992776551 * "IL".anoova_3 + 0.622071360784 * "IL".anoova_4 + 0.753081934579 * "IL".anoova_5 + -0.0725466386319 * "IL".anoova_6 + -0.466468944004 * "IL".anoova_7 + 0.165177355217 * "IL".anoova_8 + -0.0304921975931 * "IL".anoova_9 + -0.639233034175 * "IL".anoova_10 + -0.57987472273 * "IL".anoova_11 + 0.445497584543 AS "NEUR_1_4", 0.00459943029314 * "IL".anoova_2 + -0.010692807864 * "IL".anoova_3 + 0.40717967352 * "IL".anoova_4 + -0.11276443158 * "IL".anoova_5 + 0.0207726593258 * "IL".anoova_6 + 0.0562752851381 * "IL".anoova_7 + 0.418008676477 * "IL".anoova_8 + -0.205182795843 * "IL".anoova_9 + 0.264414110408 * "IL".anoova_10 + -0.134913360933 * "IL".anoova_11 + -0.0481035298616 AS "NEUR_1_5", 0.169065740906 * "IL".anoova_2 + 0.451438481409 * "IL".anoova_3 + 0.327160964553 * "IL".anoova_4 + -0.0269612547188 * "IL".anoova_5 + 0.317766214585 * "IL".anoova_6 + 0.153200671324 * "IL".anoova_7 + -0.439528465966 * "IL".anoova_8 + -0.435009713274 * "IL".anoova_9 + -0.454559561776 * "IL".anoova_10 + -0.446684756115 * "IL".anoova_11 + -0.290615566398 AS "NEUR_1_6", -0.308769610382 * "IL".anoova_2 + -0.727191806306 * "IL".anoova_3 + -0.243516768825 * "IL".anoova_4 + -0.104719118977 * "IL".anoova_5 + 0.719532830486 * "IL".anoova_6 + -0.5448246902 * "IL".anoova_7 + -0.497995350999 * "IL".anoova_8 + 0.336814331907 * "IL".anoova_9 + 0.672481737507 * "IL".anoova_10 + -0.475726895925 * "IL".anoova_11 + 0.286025618923 AS "NEUR_1_7", 0.737801437379 * "IL".anoova_2 + -0.783495776605 * "IL".anoova_3 + 0.553460879848 * "IL".anoova_4 + 0.592287964956 * "IL".anoova_5 + 0.413431599104 * "IL".anoova_6 + -0.656590711292 * "IL".anoova_7 + -0.666648315958 * "IL".anoova_8 + -0.653673947271 * "IL".anoova_9 + -0.287796207873 * "IL".anoova_10 + -0.565844874165 * "IL".anoova_11 + -0.177935457604 AS "NEUR_1_8" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3", CASE WHEN ("HL_BA_1"."NEUR_1_4" >= 0.0) THEN "HL_BA_1"."NEUR_1_4" ELSE 0.0 END AS "NEUR_1_4", CASE WHEN ("HL_BA_1"."NEUR_1_5" >= 0.0) THEN "HL_BA_1"."NEUR_1_5" ELSE 0.0 END AS "NEUR_1_5", CASE WHEN ("HL_BA_1"."NEUR_1_6" >= 0.0) THEN "HL_BA_1"."NEUR_1_6" ELSE 0.0 END AS "NEUR_1_6", CASE WHEN ("HL_BA_1"."NEUR_1_7" >= 0.0) THEN "HL_BA_1"."NEUR_1_7" ELSE 0.0 END AS "NEUR_1_7", CASE WHEN ("HL_BA_1"."NEUR_1_8" >= 0.0) THEN "HL_BA_1"."NEUR_1_8" ELSE 0.0 END AS "NEUR_1_8" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.151417172054 * "HL_1_relu"."NEUR_1_1" + 0.117784219817 * "HL_1_relu"."NEUR_1_2" + -0.0837336853685 * "HL_1_relu"."NEUR_1_3" + -0.269506193059 * "HL_1_relu"."NEUR_1_4" + -0.0419303545966 * "HL_1_relu"."NEUR_1_5" + 0.129006558187 * "HL_1_relu"."NEUR_1_6" + 0.00127761678881 * "HL_1_relu"."NEUR_1_7" + -0.534461551815 * "HL_1_relu"."NEUR_1_8" + 0.307115003941 AS "NEUR_2_1", 0.24304908993 * "HL_1_relu"."NEUR_1_1" + -0.306015857574 * "HL_1_relu"."NEUR_1_2" + -0.493680041658 * "HL_1_relu"."NEUR_1_3" + -0.0304446898543 * "HL_1_relu"."NEUR_1_4" + 0.0664929870565 * "HL_1_relu"."NEUR_1_5" + 0.452722082178 * "HL_1_relu"."NEUR_1_6" + -0.192575375051 * "HL_1_relu"."NEUR_1_7" + -0.612447077867 * "HL_1_relu"."NEUR_1_8" + -0.0121576477036 AS "NEUR_2_2", -0.292000559186 * "HL_1_relu"."NEUR_1_1" + 0.229043251046 * "HL_1_relu"."NEUR_1_2" + 0.181401436519 * "HL_1_relu"."NEUR_1_3" + -0.598277607201 * "HL_1_relu"."NEUR_1_4" + 0.0823878479359 * "HL_1_relu"."NEUR_1_5" + -0.396248530287 * "HL_1_relu"."NEUR_1_6" + 0.107487247677 * "HL_1_relu"."NEUR_1_7" + 0.0507721916949 * "HL_1_relu"."NEUR_1_8" + -0.0606300637127 AS "NEUR_2_3", 0.204857707976 * "HL_1_relu"."NEUR_1_1" + 0.472982728833 * "HL_1_relu"."NEUR_1_2" + -0.0135228021671 * "HL_1_relu"."NEUR_1_3" + -0.211634403505 * "HL_1_relu"."NEUR_1_4" + -0.111666142568 * "HL_1_relu"."NEUR_1_5" + 0.380677041459 * "HL_1_relu"."NEUR_1_6" + 0.427741101654 * "HL_1_relu"."NEUR_1_7" + -0.235244448982 * "HL_1_relu"."NEUR_1_8" + 0.083241622537 AS "NEUR_2_4", -0.58154039004 * "HL_1_relu"."NEUR_1_1" + -0.355608148719 * "HL_1_relu"."NEUR_1_2" + 0.133344248419 * "HL_1_relu"."NEUR_1_3" + 0.00126963178986 * "HL_1_relu"."NEUR_1_4" + 0.317018464476 * "HL_1_relu"."NEUR_1_5" + -0.460832420362 * "HL_1_relu"."NEUR_1_6" + 0.319029714062 * "HL_1_relu"."NEUR_1_7" + -0.393243124857 * "HL_1_relu"."NEUR_1_8" + 0.101934320193 AS "NEUR_2_5", 0.561433680807 * "HL_1_relu"."NEUR_1_1" + 0.346995742049 * "HL_1_relu"."NEUR_1_2" + 0.293867119369 * "HL_1_relu"."NEUR_1_3" + 0.109168624734 * "HL_1_relu"."NEUR_1_4" + 0.161614478766 * "HL_1_relu"."NEUR_1_5" + 0.368690687993 * "HL_1_relu"."NEUR_1_6" + 0.708222487648 * "HL_1_relu"."NEUR_1_7" + 0.798356421918 * "HL_1_relu"."NEUR_1_8" + 0.120222514248 AS "NEUR_2_6", -0.150628905356 * "HL_1_relu"."NEUR_1_1" + 0.0762995684617 * "HL_1_relu"."NEUR_1_2" + 0.231327942515 * "HL_1_relu"."NEUR_1_3" + 0.0721011212938 * "HL_1_relu"."NEUR_1_4" + -0.0999371714553 * "HL_1_relu"."NEUR_1_5" + -0.249836016446 * "HL_1_relu"."NEUR_1_6" + -0.59591873272 * "HL_1_relu"."NEUR_1_7" + 0.152014656594 * "HL_1_relu"."NEUR_1_8" + -0.168400122852 AS "NEUR_2_7", -0.191174577292 * "HL_1_relu"."NEUR_1_1" + 0.00659296003833 * "HL_1_relu"."NEUR_1_2" + 0.0785310886575 * "HL_1_relu"."NEUR_1_3" + -0.00630719315387 * "HL_1_relu"."NEUR_1_4" + 0.265684094918 * "HL_1_relu"."NEUR_1_5" + 0.221759348641 * "HL_1_relu"."NEUR_1_6" + -0.0395968214176 * "HL_1_relu"."NEUR_1_7" + -0.34365737477 * "HL_1_relu"."NEUR_1_8" + -0.317850247775 AS "NEUR_2_8", 0.0113167794147 * "HL_1_relu"."NEUR_1_1" + -0.153083995114 * "HL_1_relu"."NEUR_1_2" + 0.106167216876 * "HL_1_relu"."NEUR_1_3" + -0.238174411735 * "HL_1_relu"."NEUR_1_4" + 0.180914943711 * "HL_1_relu"."NEUR_1_5" + 0.18199838642 * "HL_1_relu"."NEUR_1_6" + 0.110321479881 * "HL_1_relu"."NEUR_1_7" + -0.209235838489 * "HL_1_relu"."NEUR_1_8" + -0.343758338764 AS "NEUR_2_9", -0.674439437834 * "HL_1_relu"."NEUR_1_1" + 0.407390905697 * "HL_1_relu"."NEUR_1_2" + -0.278750563806 * "HL_1_relu"."NEUR_1_3" + -0.385129765132 * "HL_1_relu"."NEUR_1_4" + 0.0982733840481 * "HL_1_relu"."NEUR_1_5" + -0.0174021609643 * "HL_1_relu"."NEUR_1_6" + -0.51741896207 * "HL_1_relu"."NEUR_1_7" + -0.0865269916248 * "HL_1_relu"."NEUR_1_8" + 0.337240228215 AS "NEUR_2_10", 0.640681683359 * "HL_1_relu"."NEUR_1_1" + 0.079291634109 * "HL_1_relu"."NEUR_1_2" + 0.830370080334 * "HL_1_relu"."NEUR_1_3" + 0.325163892167 * "HL_1_relu"."NEUR_1_4" + -0.265431723405 * "HL_1_relu"."NEUR_1_5" + 0.0837770838013 * "HL_1_relu"."NEUR_1_6" + 0.294852522527 * "HL_1_relu"."NEUR_1_7" + 0.390570328532 * "HL_1_relu"."NEUR_1_8" + 0.487072579904 AS "NEUR_2_11", -0.496730526362 * "HL_1_relu"."NEUR_1_1" + 0.336777817553 * "HL_1_relu"."NEUR_1_2" + 0.333268276254 * "HL_1_relu"."NEUR_1_3" + 0.0626482691695 * "HL_1_relu"."NEUR_1_4" + 0.415262751733 * "HL_1_relu"."NEUR_1_5" + -0.510465495507 * "HL_1_relu"."NEUR_1_6" + -0.52704481497 * "HL_1_relu"."NEUR_1_7" + -0.345210376753 * "HL_1_relu"."NEUR_1_8" + -0.049729782577 AS "NEUR_2_12" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5", CASE WHEN ("HL_BA_2"."NEUR_2_6" >= 0.0) THEN "HL_BA_2"."NEUR_2_6" ELSE 0.0 END AS "NEUR_2_6", CASE WHEN ("HL_BA_2"."NEUR_2_7" >= 0.0) THEN "HL_BA_2"."NEUR_2_7" ELSE 0.0 END AS "NEUR_2_7", CASE WHEN ("HL_BA_2"."NEUR_2_8" >= 0.0) THEN "HL_BA_2"."NEUR_2_8" ELSE 0.0 END AS "NEUR_2_8", CASE WHEN ("HL_BA_2"."NEUR_2_9" >= 0.0) THEN "HL_BA_2"."NEUR_2_9" ELSE 0.0 END AS "NEUR_2_9", CASE WHEN ("HL_BA_2"."NEUR_2_10" >= 0.0) THEN "HL_BA_2"."NEUR_2_10" ELSE 0.0 END AS "NEUR_2_10", CASE WHEN ("HL_BA_2"."NEUR_2_11" >= 0.0) THEN "HL_BA_2"."NEUR_2_11" ELSE 0.0 END AS "NEUR_2_11", CASE WHEN ("HL_BA_2"."NEUR_2_12" >= 0.0) THEN "HL_BA_2"."NEUR_2_12" ELSE 0.0 END AS "NEUR_2_12" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.218795991011 * "HL_2_relu"."NEUR_2_1" + -0.217049489482 * "HL_2_relu"."NEUR_2_2" + -0.529220545408 * "HL_2_relu"."NEUR_2_3" + 0.0974278249817 * "HL_2_relu"."NEUR_2_4" + -0.101865663442 * "HL_2_relu"."NEUR_2_5" + 0.623177165442 * "HL_2_relu"."NEUR_2_6" + -0.147167382417 * "HL_2_relu"."NEUR_2_7" + -0.271223540077 * "HL_2_relu"."NEUR_2_8" + -0.470610503426 * "HL_2_relu"."NEUR_2_9" + -0.471748191943 * "HL_2_relu"."NEUR_2_10" + 0.494494124073 * "HL_2_relu"."NEUR_2_11" + 0.0236257641054 * "HL_2_relu"."NEUR_2_12" + 0.245527166413 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"