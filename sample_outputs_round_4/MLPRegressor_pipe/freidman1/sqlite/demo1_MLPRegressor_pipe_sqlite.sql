-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.474997332763 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.514401933097 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.51400053908 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.512050903347 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.517696514911 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.447692754815 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.559664329716 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.489651270772 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.529808548415 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.520512576012 ELSE "ADS"."Feature_9" END AS impute_11 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.474997332763 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.514401933097 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.51400053908 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.512050903347 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.517696514911 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.447692754815 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.559664329716 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.489651270772 AS impute_9, "ADS_imp_1_OUT".impute_10 - 0.529808548415 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.520512576012 AS impute_11 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.260397000434 + "CenteredDataForPCA".impute_3 * -0.0928454177598 + "CenteredDataForPCA".impute_4 * -0.493047260415 + "CenteredDataForPCA".impute_5 * 0.26643512281 + "CenteredDataForPCA".impute_6 * -0.487883850149 + "CenteredDataForPCA".impute_7 * 0.32103427628 + "CenteredDataForPCA".impute_8 * 0.456060356897 + "CenteredDataForPCA".impute_9 * -0.048284237456 + "CenteredDataForPCA".impute_10 * 0.164107764168 + "CenteredDataForPCA".impute_11 * -0.176472156825 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.276483941985 + "CenteredDataForPCA".impute_3 * 0.398032273232 + "CenteredDataForPCA".impute_4 * 0.0155174751956 + "CenteredDataForPCA".impute_5 * 0.175148617122 + "CenteredDataForPCA".impute_6 * -0.452099113663 + "CenteredDataForPCA".impute_7 * -0.349997603205 + "CenteredDataForPCA".impute_8 * -0.286521470432 + "CenteredDataForPCA".impute_9 * -0.462380956565 + "CenteredDataForPCA".impute_10 * -0.305305319674 + "CenteredDataForPCA".impute_11 * 0.134963469562 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.134892425865 + "CenteredDataForPCA".impute_3 * 0.110995536342 + "CenteredDataForPCA".impute_4 * 0.549417056109 + "CenteredDataForPCA".impute_5 * 0.168273814821 + "CenteredDataForPCA".impute_6 * -0.27476939764 + "CenteredDataForPCA".impute_7 * 0.31186750097 + "CenteredDataForPCA".impute_8 * 0.165813860121 + "CenteredDataForPCA".impute_9 * 0.49623159694 + "CenteredDataForPCA".impute_10 * -0.432210577001 + "CenteredDataForPCA".impute_11 * 0.0774807662338 AS anoova_4, "CenteredDataForPCA".impute_2 * -0.549002466689 + "CenteredDataForPCA".impute_3 * -0.443659569479 + "CenteredDataForPCA".impute_4 * -0.091964790848 + "CenteredDataForPCA".impute_5 * 0.227635257196 + "CenteredDataForPCA".impute_6 * -0.0966286679887 + "CenteredDataForPCA".impute_7 * -0.0800764004124 + "CenteredDataForPCA".impute_8 * 0.0259109499961 + "CenteredDataForPCA".impute_9 * -0.190749446605 + "CenteredDataForPCA".impute_10 * -0.565876934008 + "CenteredDataForPCA".impute_11 * -0.261656993739 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.0593205426944 + "CenteredDataForPCA".impute_3 * 0.21489878475 + "CenteredDataForPCA".impute_4 * -0.0661236062282 + "CenteredDataForPCA".impute_5 * -0.447590741416 + "CenteredDataForPCA".impute_6 * 0.190589780811 + "CenteredDataForPCA".impute_7 * -0.230458335263 + "CenteredDataForPCA".impute_8 * 0.709731037075 + "CenteredDataForPCA".impute_9 * -0.14592772882 + "CenteredDataForPCA".impute_10 * -0.352315611905 + "CenteredDataForPCA".impute_11 * 0.0837552157578 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.101116142778 + "CenteredDataForPCA".impute_3 * 0.309011237246 + "CenteredDataForPCA".impute_4 * -0.0970122229526 + "CenteredDataForPCA".impute_5 * -0.306711896965 + "CenteredDataForPCA".impute_6 * -0.242501600451 + "CenteredDataForPCA".impute_7 * -0.253912859545 + "CenteredDataForPCA".impute_8 * -0.131806125537 + "CenteredDataForPCA".impute_9 * 0.372180383382 + "CenteredDataForPCA".impute_10 * 0.0246094079496 + "CenteredDataForPCA".impute_11 * -0.714862602083 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.241710013845 + "CenteredDataForPCA".impute_3 * 0.122585715634 + "CenteredDataForPCA".impute_4 * -0.243370231306 + "CenteredDataForPCA".impute_5 * -0.267138334064 + "CenteredDataForPCA".impute_6 * 0.265232853578 + "CenteredDataForPCA".impute_7 * 0.624574745699 + "CenteredDataForPCA".impute_8 * -0.328123460695 + "CenteredDataForPCA".impute_9 * -0.18344433722 + "CenteredDataForPCA".impute_10 * -0.395677474371 + "CenteredDataForPCA".impute_11 * -0.194003811543 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.11156392625 + "CenteredDataForPCA".impute_3 * 0.51717144969 + "CenteredDataForPCA".impute_4 * -0.175648712755 + "CenteredDataForPCA".impute_5 * 0.646568536396 + "CenteredDataForPCA".impute_6 * 0.474486399932 + "CenteredDataForPCA".impute_7 * -0.0351965880276 + "CenteredDataForPCA".impute_8 * 0.115067211278 + "CenteredDataForPCA".impute_9 * 0.107913238529 + "CenteredDataForPCA".impute_10 * -0.0557964792148 + "CenteredDataForPCA".impute_11 * -0.129648442539 AS anoova_9, "CenteredDataForPCA".impute_2 * -0.31648847542 + "CenteredDataForPCA".impute_3 * 0.258360764997 + "CenteredDataForPCA".impute_4 * 0.491424584985 + "CenteredDataForPCA".impute_5 * -0.0245569033572 + "CenteredDataForPCA".impute_6 * -0.0844666293943 + "CenteredDataForPCA".impute_7 * 0.332006912436 + "CenteredDataForPCA".impute_8 * 0.182973963943 + "CenteredDataForPCA".impute_9 * -0.520857398203 + "CenteredDataForPCA".impute_10 * 0.297300957897 + "CenteredDataForPCA".impute_11 * -0.283655837432 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.592766193689 + "CenteredDataForPCA".impute_3 * -0.364531112272 + "CenteredDataForPCA".impute_4 * 0.317779196067 + "CenteredDataForPCA".impute_5 * 0.183779589055 + "CenteredDataForPCA".impute_6 * 0.273840293316 + "CenteredDataForPCA".impute_7 * -0.227203248054 + "CenteredDataForPCA".impute_8 * 0.0792012913001 + "CenteredDataForPCA".impute_9 * -0.157602897352 + "CenteredDataForPCA".impute_10 * -0.00639784885427 + "CenteredDataForPCA".impute_11 * -0.472466380351 AS anoova_11 
FROM "CenteredDataForPCA"), 
"IL" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", "ADS_ano_2_OUT".anoova_2 AS anoova_2, "ADS_ano_2_OUT".anoova_3 AS anoova_3, "ADS_ano_2_OUT".anoova_4 AS anoova_4, "ADS_ano_2_OUT".anoova_5 AS anoova_5, "ADS_ano_2_OUT".anoova_6 AS anoova_6, "ADS_ano_2_OUT".anoova_7 AS anoova_7, "ADS_ano_2_OUT".anoova_8 AS anoova_8, "ADS_ano_2_OUT".anoova_9 AS anoova_9, "ADS_ano_2_OUT".anoova_10 AS anoova_10, "ADS_ano_2_OUT".anoova_11 AS anoova_11 
FROM "ADS_ano_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.321856308088 * "IL".anoova_2 + 0.755860474065 * "IL".anoova_3 + -0.764813042388 * "IL".anoova_4 + -0.675406927959 * "IL".anoova_5 + -0.255495373198 * "IL".anoova_6 + -0.231804708544 * "IL".anoova_7 + -0.455015514753 * "IL".anoova_8 + 0.427883934022 * "IL".anoova_9 + -0.631214018172 * "IL".anoova_10 + 0.773034114124 * "IL".anoova_11 + 0.0418627213334 AS "NEUR_1_1", 0.232384730989 * "IL".anoova_2 + -0.0240649320607 * "IL".anoova_3 + 0.363317195302 * "IL".anoova_4 + 0.133918893943 * "IL".anoova_5 + 0.222580393246 * "IL".anoova_6 + -0.204532744246 * "IL".anoova_7 + -0.10846675713 * "IL".anoova_8 + -0.228920253769 * "IL".anoova_9 + 0.0646284893704 * "IL".anoova_10 + 0.0719200561751 * "IL".anoova_11 + -0.115877913663 AS "NEUR_1_2", 0.314803498353 * "IL".anoova_2 + 0.631589457023 * "IL".anoova_3 + 0.622549700441 * "IL".anoova_4 + -0.694743924582 * "IL".anoova_5 + -0.850555736554 * "IL".anoova_6 + 0.433842717117 * "IL".anoova_7 + -0.194512213867 * "IL".anoova_8 + -0.317296306334 * "IL".anoova_9 + 0.590649142405 * "IL".anoova_10 + 0.541515450979 * "IL".anoova_11 + -0.205520650165 AS "NEUR_1_3", 0.1901960754 * "IL".anoova_2 + 0.184594084146 * "IL".anoova_3 + 0.627168044277 * "IL".anoova_4 + 0.674960442854 * "IL".anoova_5 + 0.0816780675022 * "IL".anoova_6 + -0.548863882669 * "IL".anoova_7 + -0.159602206125 * "IL".anoova_8 + -0.150178409324 * "IL".anoova_9 + -0.591412847127 * "IL".anoova_10 + -0.643427517972 * "IL".anoova_11 + 0.435507828328 AS "NEUR_1_4", -0.0169856415508 * "IL".anoova_2 + -0.00472287028154 * "IL".anoova_3 + 0.418870858976 * "IL".anoova_4 + 0.128253723708 * "IL".anoova_5 + 0.149672250228 * "IL".anoova_6 + 0.0254140694294 * "IL".anoova_7 + 0.420540850419 * "IL".anoova_8 + -0.304100418783 * "IL".anoova_9 + 0.273513557855 * "IL".anoova_10 + -0.0788413657073 * "IL".anoova_11 + -0.0481730545181 AS "NEUR_1_5", 0.174803905787 * "IL".anoova_2 + 0.458356261319 * "IL".anoova_3 + 0.323383796261 * "IL".anoova_4 + -0.071504004476 * "IL".anoova_5 + 0.226557999041 * "IL".anoova_6 + 0.197943305284 * "IL".anoova_7 + -0.469257264356 * "IL".anoova_8 + -0.427861826223 * "IL".anoova_9 + -0.459292286611 * "IL".anoova_10 + -0.448412291519 * "IL".anoova_11 + -0.287314354384 AS "NEUR_1_6", -0.202686218682 * "IL".anoova_2 + -0.680708075851 * "IL".anoova_3 + 0.184963812941 * "IL".anoova_4 + -0.486938980749 * "IL".anoova_5 + 0.733040465901 * "IL".anoova_6 + -0.53128512561 * "IL".anoova_7 + -0.578750727325 * "IL".anoova_8 + 0.416305084955 * "IL".anoova_9 + 0.738015010991 * "IL".anoova_10 + -0.264254902863 * "IL".anoova_11 + 0.283644770588 AS "NEUR_1_7", 0.730175271505 * "IL".anoova_2 + -0.739006523824 * "IL".anoova_3 + 0.603172240541 * "IL".anoova_4 + 0.610490683727 * "IL".anoova_5 + 0.461002092595 * "IL".anoova_6 + -0.695359318844 * "IL".anoova_7 + -0.682195849222 * "IL".anoova_8 + -0.284245300189 * "IL".anoova_9 + 0.179039303833 * "IL".anoova_10 + -0.683343179072 * "IL".anoova_11 + -0.176525934159 AS "NEUR_1_8" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3", CASE WHEN ("HL_BA_1"."NEUR_1_4" >= 0.0) THEN "HL_BA_1"."NEUR_1_4" ELSE 0.0 END AS "NEUR_1_4", CASE WHEN ("HL_BA_1"."NEUR_1_5" >= 0.0) THEN "HL_BA_1"."NEUR_1_5" ELSE 0.0 END AS "NEUR_1_5", CASE WHEN ("HL_BA_1"."NEUR_1_6" >= 0.0) THEN "HL_BA_1"."NEUR_1_6" ELSE 0.0 END AS "NEUR_1_6", CASE WHEN ("HL_BA_1"."NEUR_1_7" >= 0.0) THEN "HL_BA_1"."NEUR_1_7" ELSE 0.0 END AS "NEUR_1_7", CASE WHEN ("HL_BA_1"."NEUR_1_8" >= 0.0) THEN "HL_BA_1"."NEUR_1_8" ELSE 0.0 END AS "NEUR_1_8" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.144692676065 * "HL_1_relu"."NEUR_1_1" + 0.112226106952 * "HL_1_relu"."NEUR_1_2" + -0.0805187084922 * "HL_1_relu"."NEUR_1_3" + -0.268437488412 * "HL_1_relu"."NEUR_1_4" + -0.0419768810181 * "HL_1_relu"."NEUR_1_5" + 0.127758643511 * "HL_1_relu"."NEUR_1_6" + 0.00770012878939 * "HL_1_relu"."NEUR_1_7" + -0.562692091497 * "HL_1_relu"."NEUR_1_8" + 0.307273451441 AS "NEUR_2_1", 0.251920587074 * "HL_1_relu"."NEUR_1_1" + -0.312528027996 * "HL_1_relu"."NEUR_1_2" + -0.424177908916 * "HL_1_relu"."NEUR_1_3" + -0.028592082744 * "HL_1_relu"."NEUR_1_4" + 0.0734428591873 * "HL_1_relu"."NEUR_1_5" + 0.455396417663 * "HL_1_relu"."NEUR_1_6" + -0.187566004553 * "HL_1_relu"."NEUR_1_7" + -0.641785840116 * "HL_1_relu"."NEUR_1_8" + -0.0120087907659 AS "NEUR_2_2", -0.260689128164 * "HL_1_relu"."NEUR_1_1" + 0.22494648443 * "HL_1_relu"."NEUR_1_2" + 0.150305905005 * "HL_1_relu"."NEUR_1_3" + -0.620117679124 * "HL_1_relu"."NEUR_1_4" + 0.0909523570325 * "HL_1_relu"."NEUR_1_5" + -0.224277801598 * "HL_1_relu"."NEUR_1_6" + 0.116920971404 * "HL_1_relu"."NEUR_1_7" + 0.0876057563337 * "HL_1_relu"."NEUR_1_8" + -0.0578891157784 AS "NEUR_2_3", 0.169773045427 * "HL_1_relu"."NEUR_1_1" + 0.473168593381 * "HL_1_relu"."NEUR_1_2" + -0.102247336231 * "HL_1_relu"."NEUR_1_3" + -0.239049218409 * "HL_1_relu"."NEUR_1_4" + -0.116117657704 * "HL_1_relu"."NEUR_1_5" + 0.363723486789 * "HL_1_relu"."NEUR_1_6" + 0.402819725677 * "HL_1_relu"."NEUR_1_7" + -0.263755402311 * "HL_1_relu"."NEUR_1_8" + 0.0649714660772 AS "NEUR_2_4", -0.556006177614 * "HL_1_relu"."NEUR_1_1" + -0.36453387598 * "HL_1_relu"."NEUR_1_2" + 0.14730525752 * "HL_1_relu"."NEUR_1_3" + 0.00450456227143 * "HL_1_relu"."NEUR_1_4" + 0.313866039753 * "HL_1_relu"."NEUR_1_5" + -0.456232214933 * "HL_1_relu"."NEUR_1_6" + 0.322627183864 * "HL_1_relu"."NEUR_1_7" + -0.435234833588 * "HL_1_relu"."NEUR_1_8" + 0.104331381661 AS "NEUR_2_5", 0.561265560852 * "HL_1_relu"."NEUR_1_1" + 0.393775777483 * "HL_1_relu"."NEUR_1_2" + 0.3451995129 * "HL_1_relu"."NEUR_1_3" + 0.107196957828 * "HL_1_relu"."NEUR_1_4" + 0.16268486492 * "HL_1_relu"."NEUR_1_5" + 0.44175734203 * "HL_1_relu"."NEUR_1_6" + 0.704563170635 * "HL_1_relu"."NEUR_1_7" + 0.813452133151 * "HL_1_relu"."NEUR_1_8" + 0.114534887003 AS "NEUR_2_6", -0.093540173778 * "HL_1_relu"."NEUR_1_1" + 0.0579363691079 * "HL_1_relu"."NEUR_1_2" + 0.248689170824 * "HL_1_relu"."NEUR_1_3" + 0.00321350995089 * "HL_1_relu"."NEUR_1_4" + -0.173763302428 * "HL_1_relu"."NEUR_1_5" + -0.249836016446 * "HL_1_relu"."NEUR_1_6" + -0.364508641915 * "HL_1_relu"."NEUR_1_7" + 0.207653109008 * "HL_1_relu"."NEUR_1_8" + -0.230222420593 AS "NEUR_2_7", -0.191174577292 * "HL_1_relu"."NEUR_1_1" + 0.00659296003833 * "HL_1_relu"."NEUR_1_2" + 0.0785310886575 * "HL_1_relu"."NEUR_1_3" + -0.00630719315387 * "HL_1_relu"."NEUR_1_4" + 0.265684094918 * "HL_1_relu"."NEUR_1_5" + 0.221759348641 * "HL_1_relu"."NEUR_1_6" + -0.0395968214176 * "HL_1_relu"."NEUR_1_7" + -0.34365737477 * "HL_1_relu"."NEUR_1_8" + -0.317850247775 AS "NEUR_2_8", 0.0113167794147 * "HL_1_relu"."NEUR_1_1" + -0.153083995114 * "HL_1_relu"."NEUR_1_2" + 0.106167216876 * "HL_1_relu"."NEUR_1_3" + -0.238174411735 * "HL_1_relu"."NEUR_1_4" + 0.180914943711 * "HL_1_relu"."NEUR_1_5" + 0.18199838642 * "HL_1_relu"."NEUR_1_6" + 0.110321479881 * "HL_1_relu"."NEUR_1_7" + -0.209235838489 * "HL_1_relu"."NEUR_1_8" + -0.343758338764 AS "NEUR_2_9", -0.666121376441 * "HL_1_relu"."NEUR_1_1" + 0.416727827999 * "HL_1_relu"."NEUR_1_2" + -0.239183937393 * "HL_1_relu"."NEUR_1_3" + -0.372618354838 * "HL_1_relu"."NEUR_1_4" + 0.104835481454 * "HL_1_relu"."NEUR_1_5" + -0.0188423658911 * "HL_1_relu"."NEUR_1_6" + -0.501111337231 * "HL_1_relu"."NEUR_1_7" + -0.0406772042579 * "HL_1_relu"."NEUR_1_8" + 0.343871521588 AS "NEUR_2_10", 0.63702871288 * "HL_1_relu"."NEUR_1_1" + 0.0997322511533 * "HL_1_relu"."NEUR_1_2" + 0.831659234077 * "HL_1_relu"."NEUR_1_3" + 0.324707431291 * "HL_1_relu"."NEUR_1_4" + -0.261905957281 * "HL_1_relu"."NEUR_1_5" + 0.0606870549088 * "HL_1_relu"."NEUR_1_6" + 0.291732072148 * "HL_1_relu"."NEUR_1_7" + 0.404951177361 * "HL_1_relu"."NEUR_1_8" + 0.487196388454 AS "NEUR_2_11", -0.595934841143 * "HL_1_relu"."NEUR_1_1" + 0.334893146428 * "HL_1_relu"."NEUR_1_2" + 0.159403227834 * "HL_1_relu"."NEUR_1_3" + 0.0510586239588 * "HL_1_relu"."NEUR_1_4" + 0.410508636627 * "HL_1_relu"."NEUR_1_5" + -0.516692715124 * "HL_1_relu"."NEUR_1_6" + -0.534902639254 * "HL_1_relu"."NEUR_1_7" + -0.353995747414 * "HL_1_relu"."NEUR_1_8" + -0.0572557806724 AS "NEUR_2_12" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5", CASE WHEN ("HL_BA_2"."NEUR_2_6" >= 0.0) THEN "HL_BA_2"."NEUR_2_6" ELSE 0.0 END AS "NEUR_2_6", CASE WHEN ("HL_BA_2"."NEUR_2_7" >= 0.0) THEN "HL_BA_2"."NEUR_2_7" ELSE 0.0 END AS "NEUR_2_7", CASE WHEN ("HL_BA_2"."NEUR_2_8" >= 0.0) THEN "HL_BA_2"."NEUR_2_8" ELSE 0.0 END AS "NEUR_2_8", CASE WHEN ("HL_BA_2"."NEUR_2_9" >= 0.0) THEN "HL_BA_2"."NEUR_2_9" ELSE 0.0 END AS "NEUR_2_9", CASE WHEN ("HL_BA_2"."NEUR_2_10" >= 0.0) THEN "HL_BA_2"."NEUR_2_10" ELSE 0.0 END AS "NEUR_2_10", CASE WHEN ("HL_BA_2"."NEUR_2_11" >= 0.0) THEN "HL_BA_2"."NEUR_2_11" ELSE 0.0 END AS "NEUR_2_11", CASE WHEN ("HL_BA_2"."NEUR_2_12" >= 0.0) THEN "HL_BA_2"."NEUR_2_12" ELSE 0.0 END AS "NEUR_2_12" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.218888830545 * "HL_2_relu"."NEUR_2_1" + -0.217824900028 * "HL_2_relu"."NEUR_2_2" + -0.540729970923 * "HL_2_relu"."NEUR_2_3" + 0.0776122487773 * "HL_2_relu"."NEUR_2_4" + -0.100587733406 * "HL_2_relu"."NEUR_2_5" + 0.625740298987 * "HL_2_relu"."NEUR_2_6" + -0.134616828808 * "HL_2_relu"."NEUR_2_7" + -0.271223540077 * "HL_2_relu"."NEUR_2_8" + -0.470610503426 * "HL_2_relu"."NEUR_2_9" + -0.472455515922 * "HL_2_relu"."NEUR_2_10" + 0.497453981009 * "HL_2_relu"."NEUR_2_11" + 0.0157166526638 * "HL_2_relu"."NEUR_2_12" + 0.245466073569 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"