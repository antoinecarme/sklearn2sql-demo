-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= 0.06136244535446167) THEN 1 ELSE 2 END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 0.06136244535446167 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07692307692307693 AS "Proba_0", -2.56494935746 AS "LogProba_0", 0.9230769230769231 AS "Proba_1", -0.0800427076735 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9583333333333334 AS "Proba_0", -0.0425596144188 AS "LogProba_0", 0.041666666666666664 AS "Proba_1", -3.17805383035 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"OVO_Decision_0_1" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Decision" AS dec_0_1 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= 0.14212289452552795) THEN 1 ELSE CASE WHEN ("ADS"."Feature_19" <= -0.11083389818668365) THEN 3 ELSE 4 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.14212289452552795 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.125 AS "Proba_0", -2.07944154168 AS "LogProba_0", 0.875 AS "Proba_1", -0.133531392625 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_19' AS feature, -0.11083389818668365 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6764705882352942 AS "Proba_0", -0.390866308687 AS "LogProba_0", 0.3235294117647059 AS "Proba_1", -1.12846525182 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8421052631578947 AS "Proba_0", -0.171850256927 AS "LogProba_0", 0.15789473684210525 AS "Proba_1", -1.8458266905 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4666666666666667 AS "Proba_0", -0.762140052047 AS "LogProba_0", 0.5333333333333333 AS "Proba_1", -0.628608659422 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"OVO_Decision_0_2" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Decision" AS dec_0_2 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= -0.2957702875137329) THEN 1 ELSE 2 END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -0.2957702875137329 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9545454545454546 AS "Proba_0", -0.0465200156349 AS "LogProba_0", 0.045454545454545456 AS "Proba_1", -3.09104245336 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14285714285714285 AS "Proba_0", -1.94591014906 AS "LogProba_0", 0.8571428571428571 AS "Proba_1", -0.154150679827 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"OVO_Decision_0_3" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Decision" AS dec_0_3 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" <= -0.43059176206588745) THEN 1 ELSE CASE WHEN ("ADS"."Feature_0" <= 0.35169655084609985) THEN 3 ELSE 4 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, -0.43059176206588745 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9444444444444444 AS "Proba_0", -0.0571584138399 AS "LogProba_0", 0.05555555555555555 AS "Proba_1", -2.8903717579 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.35169655084609985 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.75 AS "Proba_1", -0.287682072452 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.47058823529411764 AS "Proba_0", -0.753771802376 AS "LogProba_0", 0.5294117647058824 AS "Proba_1", -0.63598876672 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -1.79769313486231e+308 AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"OVO_Decision_1_2" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Decision" AS dec_1_2 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_11" <= 0.6119737029075623) THEN CASE WHEN ("ADS"."Feature_18" <= -1.0364354848861694) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.6119737029075623 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_18' AS feature, -1.0364354848861694 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3142857142857143 AS "Proba_0", -1.15745278869 AS "LogProba_0", 0.6857142857142857 AS "Proba_1", -0.377294231141 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5625 AS "Proba_0", -0.575364144904 AS "LogProba_0", 0.4375 AS "Proba_1", -0.826678573184 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10526315789473684 AS "Proba_0", -2.25129179861 AS "LogProba_0", 0.8947368421052632 AS "Proba_1", -0.11122563511 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9333333333333333 AS "Proba_0", -0.068992871487 AS "LogProba_0", 0.06666666666666667 AS "Proba_1", -2.7080502011 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0" AS "Proba_0", "DT_node_data_4"."LogProba_0" AS "LogProba_0", "DT_node_data_4"."Proba_1" AS "Proba_1", "DT_node_data_4"."LogProba_1" AS "LogProba_1", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"OVO_Decision_1_3" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Decision" AS dec_1_3 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_16" <= -0.31476420164108276) THEN 1 ELSE CASE WHEN ("ADS"."Feature_11" <= -0.006372535135596991) THEN 3 ELSE 4 END END AS node_id_2 
FROM "INPUT_DATA" AS "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -0.31476420164108276 AS threshold, 50 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0", -0.69314718056 AS "LogProba_0", 0.5 AS "Proba_1", -0.69314718056 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9411764705882353 AS "Proba_0", -0.0606246218164 AS "LogProba_0", 0.058823529411764705 AS "Proba_1", -2.83321334406 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, -0.006372535135596991 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2727272727272727 AS "Proba_0", -1.29928298413 AS "LogProba_0", 0.7272727272727273 AS "Proba_1", -0.318453731119 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05555555555555555 AS "Proba_0", -2.8903717579 AS "LogProba_0", 0.9444444444444444 AS "Proba_1", -0.0571584138399 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5333333333333333 AS "Proba_0", -0.628608659422 AS "LogProba_0", 0.4666666666666667 AS "Proba_1", -0.762140052047 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0" AS "Proba_0", "DT_node_data_5"."LogProba_0" AS "LogProba_0", "DT_node_data_5"."Proba_1" AS "Proba_1", "DT_node_data_5"."LogProba_1" AS "LogProba_1", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"OVO_Decision_2_3" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Decision" AS dec_2_3 
FROM "DT_Output_5"), 
"OVO_Decisions_CTE" AS 
(SELECT "OVO_Decision_0_1".join_key_0 AS join_key_0, "OVO_Decision_0_1".dec_0_1 AS dec_0_1, "OVO_Decision_0_2".join_key_1 AS join_key_1, "OVO_Decision_0_2".dec_0_2 AS dec_0_2, "OVO_Decision_0_3".join_key_2 AS join_key_2, "OVO_Decision_0_3".dec_0_3 AS dec_0_3, "OVO_Decision_1_2".join_key_3 AS join_key_3, "OVO_Decision_1_2".dec_1_2 AS dec_1_2, "OVO_Decision_1_3".join_key_4 AS join_key_4, "OVO_Decision_1_3".dec_1_3 AS dec_1_3, "OVO_Decision_2_3".join_key_5 AS join_key_5, "OVO_Decision_2_3".dec_2_3 AS dec_2_3 
FROM "OVO_Decision_0_1" LEFT OUTER JOIN "OVO_Decision_0_2" ON "OVO_Decision_0_1".join_key_0 = "OVO_Decision_0_2".join_key_1 LEFT OUTER JOIN "OVO_Decision_0_3" ON "OVO_Decision_0_3".join_key_2 = "OVO_Decision_0_2".join_key_1 LEFT OUTER JOIN "OVO_Decision_1_2" ON "OVO_Decision_1_2".join_key_3 = "OVO_Decision_0_3".join_key_2 LEFT OUTER JOIN "OVO_Decision_1_3" ON "OVO_Decision_1_3".join_key_4 = "OVO_Decision_1_2".join_key_3 LEFT OUTER JOIN "OVO_Decision_2_3" ON "OVO_Decision_2_3".join_key_5 = "OVO_Decision_1_3".join_key_4), 
"OVO_Scores" AS 
(SELECT "OVO_Decisions_CTE".join_key_0 AS "KEY", (1.0 - "OVO_Decisions_CTE".dec_0_1) + (1.0 - "OVO_Decisions_CTE".dec_0_2) + (1.0 - "OVO_Decisions_CTE".dec_0_3) AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", "OVO_Decisions_CTE".dec_0_1 + (1.0 - "OVO_Decisions_CTE".dec_1_2) + (1.0 - "OVO_Decisions_CTE".dec_1_3) AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", "OVO_Decisions_CTE".dec_0_2 + "OVO_Decisions_CTE".dec_1_2 + (1.0 - "OVO_Decisions_CTE".dec_2_3) AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", "OVO_Decisions_CTE".dec_0_3 + "OVO_Decisions_CTE".dec_1_3 + "OVO_Decisions_CTE".dec_2_3 AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "OVO_Decisions_CTE"), 
orig_cte AS 
(SELECT "OVO_Scores"."KEY" AS "KEY", "OVO_Scores"."Score_0" AS "Score_0", "OVO_Scores"."Score_1" AS "Score_1", "OVO_Scores"."Score_2" AS "Score_2", "OVO_Scores"."Score_3" AS "Score_3", "OVO_Scores"."Proba_0" AS "Proba_0", "OVO_Scores"."Proba_1" AS "Proba_1", "OVO_Scores"."Proba_2" AS "Proba_2", "OVO_Scores"."Proba_3" AS "Proba_3", "OVO_Scores"."LogProba_0" AS "LogProba_0", "OVO_Scores"."LogProba_1" AS "LogProba_1", "OVO_Scores"."LogProba_2" AS "LogProba_2", "OVO_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "OVO_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte