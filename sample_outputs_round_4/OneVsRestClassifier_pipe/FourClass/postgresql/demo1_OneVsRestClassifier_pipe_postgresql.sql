-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.106619290815 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.098135785493 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0698601823607 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.579145468593 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.398204595785 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0487032263517 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.101107889431 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0304764987528 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.116475349668 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.0480252303041 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.00420482536028 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.0664385655208 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.17271383196 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.257615105125 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0764146805753 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.179270430727 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.265737791431 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.0597720524864 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0490200564115 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0433171014808 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.106619290815 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.098135785493 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.0698601823607 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.579145468593 AS impute_5, "ADS_imp_1_OUT".impute_6 - -0.398204595785 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.0487032263517 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.101107889431 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.0304764987528 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.116475349668 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.0480252303041 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.00420482536028 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.0664385655208 AS impute_13, "ADS_imp_1_OUT".impute_14 - -0.17271383196 AS impute_14, "ADS_imp_1_OUT".impute_15 - -0.257615105125 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.0764146805753 AS impute_16, "ADS_imp_1_OUT".impute_17 - 0.179270430727 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.265737791431 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.0597720524864 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.0490200564115 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.0433171014808 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * -0.000846509818058 + "CenteredDataForPCA".impute_3 * 0.0527165494039 + "CenteredDataForPCA".impute_4 * 0.0301234292021 + "CenteredDataForPCA".impute_5 * 0.264910294618 + "CenteredDataForPCA".impute_6 * 0.305245183144 + "CenteredDataForPCA".impute_7 * 0.0456977218801 + "CenteredDataForPCA".impute_8 * -0.0529647338769 + "CenteredDataForPCA".impute_9 * 0.0396080348068 + "CenteredDataForPCA".impute_10 * 0.781013628418 + "CenteredDataForPCA".impute_11 * 0.00786770936256 + "CenteredDataForPCA".impute_12 * 0.0617564739353 + "CenteredDataForPCA".impute_13 * 0.00537592174124 + "CenteredDataForPCA".impute_14 * 0.448052402378 + "CenteredDataForPCA".impute_15 * 0.0437050211814 + "CenteredDataForPCA".impute_16 * -0.0555590751268 + "CenteredDataForPCA".impute_17 * 0.0192893699858 + "CenteredDataForPCA".impute_18 * -0.0422430302505 + "CenteredDataForPCA".impute_19 * 0.0281240931061 + "CenteredDataForPCA".impute_20 * -0.0569023755704 + "CenteredDataForPCA".impute_21 * -0.0260414287888 AS anoova_2, "CenteredDataForPCA".impute_2 * -0.0397671529634 + "CenteredDataForPCA".impute_3 * 0.0596141432304 + "CenteredDataForPCA".impute_4 * -0.106920437433 + "CenteredDataForPCA".impute_5 * 0.233615141821 + "CenteredDataForPCA".impute_6 * 0.41926319357 + "CenteredDataForPCA".impute_7 * -0.0486166050384 + "CenteredDataForPCA".impute_8 * -0.102721898696 + "CenteredDataForPCA".impute_9 * 0.0573409832893 + "CenteredDataForPCA".impute_10 * -0.0759586384988 + "CenteredDataForPCA".impute_11 * 0.095897668947 + "CenteredDataForPCA".impute_12 * -0.0781326870012 + "CenteredDataForPCA".impute_13 * 0.0917635453157 + "CenteredDataForPCA".impute_14 * -0.265140759208 + "CenteredDataForPCA".impute_15 * 0.0409477974405 + "CenteredDataForPCA".impute_16 * 0.00199494483525 + "CenteredDataForPCA".impute_17 * -0.111320711453 + "CenteredDataForPCA".impute_18 * 0.532180590946 + "CenteredDataForPCA".impute_19 * 0.56842900565 + "CenteredDataForPCA".impute_20 * 0.127166944456 + "CenteredDataForPCA".impute_21 * -0.0225526322679 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.0165013736047 + "CenteredDataForPCA".impute_3 * 0.0586218584186 + "CenteredDataForPCA".impute_4 * -0.00819725628652 + "CenteredDataForPCA".impute_5 * 0.50517742096 + "CenteredDataForPCA".impute_6 * -0.664536279172 + "CenteredDataForPCA".impute_7 * 0.0120444935191 + "CenteredDataForPCA".impute_8 * 0.025782558361 + "CenteredDataForPCA".impute_9 * -0.0490895951309 + "CenteredDataForPCA".impute_10 * -0.110308154457 + "CenteredDataForPCA".impute_11 * 0.0303953670422 + "CenteredDataForPCA".impute_12 * -0.0137140307416 + "CenteredDataForPCA".impute_13 * 0.0458059166845 + "CenteredDataForPCA".impute_14 * 0.331239720635 + "CenteredDataForPCA".impute_15 * -0.0694898428141 + "CenteredDataForPCA".impute_16 * -0.111610751817 + "CenteredDataForPCA".impute_17 * 0.0439695217175 + "CenteredDataForPCA".impute_18 * 0.29187196427 + "CenteredDataForPCA".impute_19 * 0.169485701686 + "CenteredDataForPCA".impute_20 * -0.113274800169 + "CenteredDataForPCA".impute_21 * -0.158521214613 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.205879067095 + "CenteredDataForPCA".impute_3 * -0.0633014718316 + "CenteredDataForPCA".impute_4 * -0.18459491989 + "CenteredDataForPCA".impute_5 * -0.435270141995 + "CenteredDataForPCA".impute_6 * -0.045997064353 + "CenteredDataForPCA".impute_7 * 0.161513321064 + "CenteredDataForPCA".impute_8 * -0.392707287609 + "CenteredDataForPCA".impute_9 * -0.360236762292 + "CenteredDataForPCA".impute_10 * -0.0122248205238 + "CenteredDataForPCA".impute_11 * -0.179325147652 + "CenteredDataForPCA".impute_12 * -0.231651070907 + "CenteredDataForPCA".impute_13 * 0.11981810419 + "CenteredDataForPCA".impute_14 * 0.332598970382 + "CenteredDataForPCA".impute_15 * 0.248110591341 + "CenteredDataForPCA".impute_16 * -0.014394109168 + "CenteredDataForPCA".impute_17 * -0.247729341302 + "CenteredDataForPCA".impute_18 * 0.275092756624 + "CenteredDataForPCA".impute_19 * -0.00365815182981 + "CenteredDataForPCA".impute_20 * -0.0544364526319 + "CenteredDataForPCA".impute_21 * -0.0717167181483 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.331150305766 + "CenteredDataForPCA".impute_3 * -0.00773473954557 + "CenteredDataForPCA".impute_4 * 0.0522069197242 + "CenteredDataForPCA".impute_5 * -0.277897823824 + "CenteredDataForPCA".impute_6 * -0.0628418188416 + "CenteredDataForPCA".impute_7 * -0.189924204164 + "CenteredDataForPCA".impute_8 * 0.0344450139665 + "CenteredDataForPCA".impute_9 * 0.304809702985 + "CenteredDataForPCA".impute_10 * 0.00701791521487 + "CenteredDataForPCA".impute_11 * -0.0964105903119 + "CenteredDataForPCA".impute_12 * 0.241223941562 + "CenteredDataForPCA".impute_13 * 0.122153109821 + "CenteredDataForPCA".impute_14 * 0.282389748033 + "CenteredDataForPCA".impute_15 * -0.396775469255 + "CenteredDataForPCA".impute_16 * 0.375513046834 + "CenteredDataForPCA".impute_17 * -0.352946282792 + "CenteredDataForPCA".impute_18 * 0.236688591437 + "CenteredDataForPCA".impute_19 * 0.0217315668845 + "CenteredDataForPCA".impute_20 * -0.0372968036032 + "CenteredDataForPCA".impute_21 * 0.181977683984 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.186186322022 + "CenteredDataForPCA".impute_3 * -0.00181619493819 + "CenteredDataForPCA".impute_4 * -0.156159318973 + "CenteredDataForPCA".impute_5 * 0.201865501718 + "CenteredDataForPCA".impute_6 * -0.0581114593621 + "CenteredDataForPCA".impute_7 * -0.0512707648402 + "CenteredDataForPCA".impute_8 * 0.108160384434 + "CenteredDataForPCA".impute_9 * -0.26115648793 + "CenteredDataForPCA".impute_10 * 0.0902729685378 + "CenteredDataForPCA".impute_11 * 0.0802136733011 + "CenteredDataForPCA".impute_12 * -0.325786307623 + "CenteredDataForPCA".impute_13 * 0.484953498281 + "CenteredDataForPCA".impute_14 * -0.0227812476152 + "CenteredDataForPCA".impute_15 * -0.219505028394 + "CenteredDataForPCA".impute_16 * 0.419128476636 + "CenteredDataForPCA".impute_17 * -0.0208298323847 + "CenteredDataForPCA".impute_18 * -0.171525414559 + "CenteredDataForPCA".impute_19 * -0.0673389089028 + "CenteredDataForPCA".impute_20 * 0.421068055749 + "CenteredDataForPCA".impute_21 * 0.149435817832 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.0880488733441 + "CenteredDataForPCA".impute_3 * -0.146227778868 + "CenteredDataForPCA".impute_4 * -0.285686984593 + "CenteredDataForPCA".impute_5 * -0.0916295059811 + "CenteredDataForPCA".impute_6 * -0.0463751254777 + "CenteredDataForPCA".impute_7 * 0.0859768143878 + "CenteredDataForPCA".impute_8 * 0.274656805415 + "CenteredDataForPCA".impute_9 * 0.469848869057 + "CenteredDataForPCA".impute_10 * -0.0058724867693 + "CenteredDataForPCA".impute_11 * -0.438748439676 + "CenteredDataForPCA".impute_12 * 0.0943549195922 + "CenteredDataForPCA".impute_13 * 0.242159229327 + "CenteredDataForPCA".impute_14 * 0.104079730647 + "CenteredDataForPCA".impute_15 * 0.229170376072 + "CenteredDataForPCA".impute_16 * -0.20213963323 + "CenteredDataForPCA".impute_17 * 0.182576277843 + "CenteredDataForPCA".impute_18 * 0.0764801971506 + "CenteredDataForPCA".impute_19 * -0.000739032267998 + "CenteredDataForPCA".impute_20 * 0.402903590733 + "CenteredDataForPCA".impute_21 * -0.0964829246298 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.0790688488426 + "CenteredDataForPCA".impute_3 * -0.518941806873 + "CenteredDataForPCA".impute_4 * 0.119053808262 + "CenteredDataForPCA".impute_5 * 0.0914976248364 + "CenteredDataForPCA".impute_6 * 0.00367575411861 + "CenteredDataForPCA".impute_7 * -0.195660160398 + "CenteredDataForPCA".impute_8 * 0.358823694287 + "CenteredDataForPCA".impute_9 * -0.276266827323 + "CenteredDataForPCA".impute_10 * 0.0465644982298 + "CenteredDataForPCA".impute_11 * -0.254648035562 + "CenteredDataForPCA".impute_12 * -0.115402950174 + "CenteredDataForPCA".impute_13 * -0.443088486092 + "CenteredDataForPCA".impute_14 * 0.0605263854002 + "CenteredDataForPCA".impute_15 * 0.238215114821 + "CenteredDataForPCA".impute_16 * 0.289664019385 + "CenteredDataForPCA".impute_17 * -0.016042926634 + "CenteredDataForPCA".impute_18 * 0.115456475199 + "CenteredDataForPCA".impute_19 * 0.0980366138841 + "CenteredDataForPCA".impute_20 * 0.0730792912901 + "CenteredDataForPCA".impute_21 * 0.0949425966813 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.523448780653 + "CenteredDataForPCA".impute_3 * 0.0680236440139 + "CenteredDataForPCA".impute_4 * 0.106089254461 + "CenteredDataForPCA".impute_5 * -0.00385080851903 + "CenteredDataForPCA".impute_6 * 0.0574391476205 + "CenteredDataForPCA".impute_7 * 0.29105126709 + "CenteredDataForPCA".impute_8 * 0.208322900635 + "CenteredDataForPCA".impute_9 * 0.21387152519 + "CenteredDataForPCA".impute_10 * -0.0112413403668 + "CenteredDataForPCA".impute_11 * -0.237312368201 + "CenteredDataForPCA".impute_12 * -0.283840192886 + "CenteredDataForPCA".impute_13 * -0.100635681137 + "CenteredDataForPCA".impute_14 * -0.00266316585242 + "CenteredDataForPCA".impute_15 * -0.294739513722 + "CenteredDataForPCA".impute_16 * 0.0390350037001 + "CenteredDataForPCA".impute_17 * 0.0776432503966 + "CenteredDataForPCA".impute_18 * 0.115353262928 + "CenteredDataForPCA".impute_19 * 0.0910482635072 + "CenteredDataForPCA".impute_20 * -0.37745059183 + "CenteredDataForPCA".impute_21 * 0.356823107371 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.24236690186 + "CenteredDataForPCA".impute_3 * -0.42865108939 + "CenteredDataForPCA".impute_4 * -0.33894425948 + "CenteredDataForPCA".impute_5 * -0.0201493428272 + "CenteredDataForPCA".impute_6 * 0.072535583052 + "CenteredDataForPCA".impute_7 * 0.00195950498244 + "CenteredDataForPCA".impute_8 * 0.226609977002 + "CenteredDataForPCA".impute_9 * -0.113181067927 + "CenteredDataForPCA".impute_10 * -0.00298148171516 + "CenteredDataForPCA".impute_11 * 0.281344486892 + "CenteredDataForPCA".impute_12 * 0.429642396406 + "CenteredDataForPCA".impute_13 * 0.302987620458 + "CenteredDataForPCA".impute_14 * -0.0439305946063 + "CenteredDataForPCA".impute_15 * 0.00256669991794 + "CenteredDataForPCA".impute_16 * 0.0812895163536 + "CenteredDataForPCA".impute_17 * 0.0236311379049 + "CenteredDataForPCA".impute_18 * 0.0176047391496 + "CenteredDataForPCA".impute_19 * 0.0278876500331 + "CenteredDataForPCA".impute_20 * -0.437602843637 + "CenteredDataForPCA".impute_21 * -0.124721853631 AS anoova_11, "CenteredDataForPCA".impute_2 * 0.310358158599 + "CenteredDataForPCA".impute_3 * 0.03457609454 + "CenteredDataForPCA".impute_4 * 0.434106443202 + "CenteredDataForPCA".impute_5 * -0.0697454213504 + "CenteredDataForPCA".impute_6 * -0.0276902253209 + "CenteredDataForPCA".impute_7 * 0.11639211157 + "CenteredDataForPCA".impute_8 * 0.367436930984 + "CenteredDataForPCA".impute_9 * 0.0193220779128 + "CenteredDataForPCA".impute_10 * -0.00516957052386 + "CenteredDataForPCA".impute_11 * 0.320146292838 + "CenteredDataForPCA".impute_12 * 0.10316160367 + "CenteredDataForPCA".impute_13 * 0.0316170029391 + "CenteredDataForPCA".impute_14 * 0.0641634141612 + "CenteredDataForPCA".impute_15 * 0.137346786561 + "CenteredDataForPCA".impute_16 * -0.206477034749 + "CenteredDataForPCA".impute_17 * -0.549118414841 + "CenteredDataForPCA".impute_18 * 0.0401062279498 + "CenteredDataForPCA".impute_19 * -0.00914749608942 + "CenteredDataForPCA".impute_20 * 0.265083132325 + "CenteredDataForPCA".impute_21 * -0.0787648736745 AS anoova_12, "CenteredDataForPCA".impute_2 * -0.304241006018 + "CenteredDataForPCA".impute_3 * 0.364447799479 + "CenteredDataForPCA".impute_4 * 0.242664765792 + "CenteredDataForPCA".impute_5 * -0.109348499752 + "CenteredDataForPCA".impute_6 * 0.100539181085 + "CenteredDataForPCA".impute_7 * 0.355648626262 + "CenteredDataForPCA".impute_8 * 0.392522675195 + "CenteredDataForPCA".impute_9 * -0.271666824963 + "CenteredDataForPCA".impute_10 * -0.0234108643841 + "CenteredDataForPCA".impute_11 * -0.200901939989 + "CenteredDataForPCA".impute_12 * 0.0443896079568 + "CenteredDataForPCA".impute_13 * 0.263961199002 + "CenteredDataForPCA".impute_14 * -0.0201787575506 + "CenteredDataForPCA".impute_15 * 0.135038622587 + "CenteredDataForPCA".impute_16 * 0.236379994351 + "CenteredDataForPCA".impute_17 * 0.188469666141 + "CenteredDataForPCA".impute_18 * 0.0827010297515 + "CenteredDataForPCA".impute_19 * 0.0481840405318 + "CenteredDataForPCA".impute_20 * -0.177372719457 + "CenteredDataForPCA".impute_21 * -0.275833572786 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.155664480469 + "CenteredDataForPCA".impute_3 * 0.245609074173 + "CenteredDataForPCA".impute_4 * -0.352164067621 + "CenteredDataForPCA".impute_5 * 0.0322041219954 + "CenteredDataForPCA".impute_6 * -0.0663284444577 + "CenteredDataForPCA".impute_7 * 0.238432277047 + "CenteredDataForPCA".impute_8 * -0.00471498017732 + "CenteredDataForPCA".impute_9 * 0.279261217206 + "CenteredDataForPCA".impute_10 * -0.00185365623688 + "CenteredDataForPCA".impute_11 * 0.209576941368 + "CenteredDataForPCA".impute_12 * 0.00493812297554 + "CenteredDataForPCA".impute_13 * -0.416116689868 + "CenteredDataForPCA".impute_14 * 0.0178445614359 + "CenteredDataForPCA".impute_15 * 0.189907059559 + "CenteredDataForPCA".impute_16 * 0.544252288711 + "CenteredDataForPCA".impute_17 * -0.107920656126 + "CenteredDataForPCA".impute_18 * -0.0416615150539 + "CenteredDataForPCA".impute_19 * -0.0353908758705 + "CenteredDataForPCA".impute_20 * 0.0568640794362 + "CenteredDataForPCA".impute_21 * -0.289074330444 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.17136903001 + "CenteredDataForPCA".impute_3 * -0.269345210843 + "CenteredDataForPCA".impute_4 * 0.0959621291249 + "CenteredDataForPCA".impute_5 * 0.348093631461 + "CenteredDataForPCA".impute_6 * -0.0575989746337 + "CenteredDataForPCA".impute_7 * 0.516048116225 + "CenteredDataForPCA".impute_8 * -0.291004743511 + "CenteredDataForPCA".impute_9 * 0.0816849179421 + "CenteredDataForPCA".impute_10 * -0.021757167978 + "CenteredDataForPCA".impute_11 * -0.262787085086 + "CenteredDataForPCA".impute_12 * 0.155297468497 + "CenteredDataForPCA".impute_13 * 0.136154386766 + "CenteredDataForPCA".impute_14 * -0.218461891111 + "CenteredDataForPCA".impute_15 * 0.147948845449 + "CenteredDataForPCA".impute_16 * 0.100834419069 + "CenteredDataForPCA".impute_17 * -0.37236151768 + "CenteredDataForPCA".impute_18 * -0.206880889869 + "CenteredDataForPCA".impute_19 * -0.0142061252051 + "CenteredDataForPCA".impute_20 * -0.0593766723191 + "CenteredDataForPCA".impute_21 * 0.171989616242 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.0328893690735 + "CenteredDataForPCA".impute_3 * -0.178702095495 + "CenteredDataForPCA".impute_4 * 0.360061773738 + "CenteredDataForPCA".impute_5 * -0.043555669451 + "CenteredDataForPCA".impute_6 * -0.0579854618639 + "CenteredDataForPCA".impute_7 * -0.169049868714 + "CenteredDataForPCA".impute_8 * -0.135177393962 + "CenteredDataForPCA".impute_9 * 0.409094390884 + "CenteredDataForPCA".impute_10 * -0.0192895235968 + "CenteredDataForPCA".impute_11 * 0.268130787579 + "CenteredDataForPCA".impute_12 * -0.342091128879 + "CenteredDataForPCA".impute_13 * 0.303364796562 + "CenteredDataForPCA".impute_14 * 0.0528005185388 + "CenteredDataForPCA".impute_15 * 0.446205314931 + "CenteredDataForPCA".impute_16 * 0.226644828645 + "CenteredDataForPCA".impute_17 * 0.188127786637 + "CenteredDataForPCA".impute_18 * 0.0194336272564 + "CenteredDataForPCA".impute_19 * -0.0196247696608 + "CenteredDataForPCA".impute_20 * -0.216174012968 + "CenteredDataForPCA".impute_21 * 0.0201788499659 AS anoova_16, "CenteredDataForPCA".impute_2 * 0.331774685516 + "CenteredDataForPCA".impute_3 * 0.240208845377 + "CenteredDataForPCA".impute_4 * 0.110068505734 + "CenteredDataForPCA".impute_5 * 0.169396970852 + "CenteredDataForPCA".impute_6 * 0.0225259133554 + "CenteredDataForPCA".impute_7 * -0.531794450076 + "CenteredDataForPCA".impute_8 * -0.0906961650994 + "CenteredDataForPCA".impute_9 * 0.00739218599571 + "CenteredDataForPCA".impute_10 * -0.00128125471968 + "CenteredDataForPCA".impute_11 * -0.467393945685 + "CenteredDataForPCA".impute_12 * 0.125864316874 + "CenteredDataForPCA".impute_13 * 0.105385960498 + "CenteredDataForPCA".impute_14 * -0.154733388777 + "CenteredDataForPCA".impute_15 * 0.107362088314 + "CenteredDataForPCA".impute_16 * 0.119781625878 + "CenteredDataForPCA".impute_17 * -0.246777131244 + "CenteredDataForPCA".impute_18 * -0.140397069304 + "CenteredDataForPCA".impute_19 * -0.016594026136 + "CenteredDataForPCA".impute_20 * -0.194081794375 + "CenteredDataForPCA".impute_21 * -0.293333982999 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.110876240537 + "CenteredDataForPCA".impute_3 * 0.378777922231 + "CenteredDataForPCA".impute_4 * -0.308541807368 + "CenteredDataForPCA".impute_5 * 0.0548561485713 + "CenteredDataForPCA".impute_6 * -0.0782529148833 + "CenteredDataForPCA".impute_7 * -0.154779006188 + "CenteredDataForPCA".impute_8 * 0.211419936914 + "CenteredDataForPCA".impute_9 * -0.0740237621839 + "CenteredDataForPCA".impute_10 * -0.00949981511099 + "CenteredDataForPCA".impute_11 * 0.0540658177096 + "CenteredDataForPCA".impute_12 * 0.0760786539934 + "CenteredDataForPCA".impute_13 * 0.0423306676588 + "CenteredDataForPCA".impute_14 * 0.0179849699309 + "CenteredDataForPCA".impute_15 * 0.458196637081 + "CenteredDataForPCA".impute_16 * -0.0767668551359 + "CenteredDataForPCA".impute_17 * -0.14734114541 + "CenteredDataForPCA".impute_18 * -0.0236661331413 + "CenteredDataForPCA".impute_19 * -0.0183639987967 + "CenteredDataForPCA".impute_20 * -0.144871093325 + "CenteredDataForPCA".impute_21 * 0.628824452256 AS anoova_18, "CenteredDataForPCA".impute_2 * 0.31425376254 + "CenteredDataForPCA".impute_3 * 0.0843353643079 + "CenteredDataForPCA".impute_4 * 0.29488534005 + "CenteredDataForPCA".impute_5 * -0.0269843753432 + "CenteredDataForPCA".impute_6 * -0.0517053876207 + "CenteredDataForPCA".impute_7 * 0.0412143404704 + "CenteredDataForPCA".impute_8 * -0.273762117973 + "CenteredDataForPCA".impute_9 * -0.120378945454 + "CenteredDataForPCA".impute_10 * -0.0495189147305 + "CenteredDataForPCA".impute_11 * 0.00207392568874 + "CenteredDataForPCA".impute_12 * 0.555982295701 + "CenteredDataForPCA".impute_13 * -0.0283306212272 + "CenteredDataForPCA".impute_14 * 0.0669625512506 + "CenteredDataForPCA".impute_15 * 0.112452935977 + "CenteredDataForPCA".impute_16 * 0.241192600681 + "CenteredDataForPCA".impute_17 * 0.39165914984 + "CenteredDataForPCA".impute_18 * 0.145459507484 + "CenteredDataForPCA".impute_19 * 0.0722605005909 + "CenteredDataForPCA".impute_20 * 0.265695116426 + "CenteredDataForPCA".impute_21 * 0.273108094395 AS anoova_19, "CenteredDataForPCA".impute_2 * 1.65014301582e-16 + "CenteredDataForPCA".impute_3 * 1.59739166136e-16 + "CenteredDataForPCA".impute_4 * -2.22373382877e-16 + "CenteredDataForPCA".impute_5 * 0.235235863251 + "CenteredDataForPCA".impute_6 * 0.445830136122 + "CenteredDataForPCA".impute_7 * -1.59927664839e-16 + "CenteredDataForPCA".impute_8 * 4.52266766303e-17 + "CenteredDataForPCA".impute_9 * 6.13338649637e-17 + "CenteredDataForPCA".impute_10 * -0.59428067004 + "CenteredDataForPCA".impute_11 * -1.37748366827e-16 + "CenteredDataForPCA".impute_12 * -5.09640870647e-17 + "CenteredDataForPCA".impute_13 * -3.7451117879e-16 + "CenteredDataForPCA".impute_14 * 0.567509616845 + "CenteredDataForPCA".impute_15 * 8.57435327042e-17 + "CenteredDataForPCA".impute_16 * -1.13406666889e-16 + "CenteredDataForPCA".impute_17 * -5.69191429506e-17 + "CenteredDataForPCA".impute_18 * -0.265688063198 + "CenteredDataForPCA".impute_19 * 0.00852944572281 + "CenteredDataForPCA".impute_20 * 1.5363950757e-16 + "CenteredDataForPCA".impute_21 * 1.54144274429e-18 AS anoova_20, "CenteredDataForPCA".impute_2 * 1.43443480169e-17 + "CenteredDataForPCA".impute_3 * -2.81020847495e-16 + "CenteredDataForPCA".impute_4 * 1.0323557342e-16 + "CenteredDataForPCA".impute_5 * -0.258308334186 + "CenteredDataForPCA".impute_6 * -0.198104780431 + "CenteredDataForPCA".impute_7 * -1.43520633517e-16 + "CenteredDataForPCA".impute_8 * 8.73662568235e-17 + "CenteredDataForPCA".impute_9 * 1.51487468392e-16 + "CenteredDataForPCA".impute_10 * 0.0652456265965 + "CenteredDataForPCA".impute_11 * -4.83947222068e-17 + "CenteredDataForPCA".impute_12 * -8.123265872e-17 + "CenteredDataForPCA".impute_13 * -1.43731365735e-17 + "CenteredDataForPCA".impute_14 * 0.0757531544719 + "CenteredDataForPCA".impute_15 * 5.90005403441e-17 + "CenteredDataForPCA".impute_16 * -3.89049499439e-17 + "CenteredDataForPCA".impute_17 * 5.61285814567e-17 + "CenteredDataForPCA".impute_18 * -0.520110412263 + "CenteredDataForPCA".impute_19 * 0.783275767092 + "CenteredDataForPCA".impute_20 * -4.23501158779e-17 + "CenteredDataForPCA".impute_21 * 6.12558838996e-17 AS anoova_21 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -1.5390207767486572) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -0.3071835935115814) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.0912000983953476) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.5390207767486572 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0", -0.287682072452 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, -0.3071835935115814 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34375 AS "Proba_0", -1.06784063 AS "LogProba_0", 0.65625 AS "Proba_1", -0.421213465076 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6 AS "Proba_0", -0.510825623766 AS "LogProba_0", 0.4 AS "Proba_1", -0.916290731874 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11764705882352941 AS "Proba_0", -2.1400661635 AS "LogProba_0", 0.8823529411764706 AS "Proba_1", -0.125163142954 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.0912000983953476 AS threshold, 68 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9411764705882353 AS "Proba_0", -0.0606246218164 AS "LogProba_0", 0.058823529411764705 AS "Proba_1", -2.83321334406 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7894736842105263 AS "Proba_0", -0.236388778064 AS "LogProba_0", 0.21052631578947367 AS "Proba_1", -1.55814461805 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"OVR_Score_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0", "DT_Output"."Proba_1" AS "Proba_0", "DT_Output"."LogProba_1" AS "LogProba_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.5482180118560791) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.5598121881484985) THEN 2 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.8824918866157532) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= 0.058876361697912216) THEN 7 ELSE 8 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.5482180118560791 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0", -0.287682072452 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, -0.5598121881484985 AS threshold, 69 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8405797101449275 AS "Proba_0", -0.173663494051 AS "LogProba_0", 0.15942028985507245 AS "Proba_1", -1.8362112318 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5294117647058824 AS "Proba_0", -0.63598876672 AS "LogProba_0", 0.47058823529411764 AS "Proba_1", -0.753771802376 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, 'anoova_3' AS feature, 0.8824918866157532 AS threshold, 52 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9423076923076923 AS "Proba_0", -0.0594234204708 AS "LogProba_0", 0.057692307692307696 AS "Proba_1", -2.85263142991 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8125 AS "Proba_0", -0.207639364778 AS "LogProba_0", 0.1875 AS "Proba_1", -1.67397643357 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_10' AS feature, 0.058876361697912216 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5483870967741935 AS "Proba_0", -0.600773860429 AS "LogProba_0", 0.45161290322580644 AS "Proba_1", -0.79492987487 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0", -0.287682072452 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0" AS "Proba_0", "DT_node_data_1"."LogProba_0" AS "LogProba_0", "DT_node_data_1"."Proba_1" AS "Proba_1", "DT_node_data_1"."LogProba_1" AS "LogProba_1", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"OVR_Score_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1", "DT_Output_1"."Proba_1" AS "Proba_1", "DT_Output_1"."LogProba_1" AS "LogProba_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 1.565485954284668) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -1.387528657913208) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.565485954284668 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0", -0.287682072452 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -1.387528657913208 AS threshold, 71 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9436619718309859 AS "Proba_0", -0.0579872576503 AS "LogProba_0", 0.056338028169014086 AS "Proba_1", -2.87638551592 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7333333333333333 AS "Proba_0", -0.310154928304 AS "LogProba_0", 0.26666666666666666 AS "Proba_1", -1.32175583998 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 56 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.27586206896551724 AS "Proba_0", -1.28785428831 AS "LogProba_0", 0.7241379310344828 AS "Proba_1", -0.322773392263 AS "LogProba_1", 1 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0" AS "Proba_0", "DT_node_data_2"."LogProba_0" AS "LogProba_0", "DT_node_data_2"."Proba_1" AS "Proba_1", "DT_node_data_2"."LogProba_1" AS "LogProba_1", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"OVR_Score_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2", "DT_Output_2"."Proba_1" AS "Proba_2", "DT_Output_2"."LogProba_1" AS "LogProba_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= -1.3167176246643066) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -0.30966025590896606) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_15 <= -0.01772368513047695) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_17 <= -0.016074540093541145) THEN 7 ELSE 8 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -1.3167176246643066 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0", -0.287682072452 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -1.79769313486231e+308 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.30966025590896606 AS threshold, 75 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0", -0.405465108108 AS "LogProba_0", 0.3333333333333333 AS "Proba_1", -1.09861228867 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, 'anoova_15' AS feature, -0.01772368513047695 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.47058823529411764 AS "Proba_0", -0.753771802376 AS "LogProba_0", 0.5294117647058824 AS "Proba_1", -0.63598876672 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6842105263157895 AS "Proba_0", -0.379489621705 AS "LogProba_0", 0.3157894736842105 AS "Proba_1", -1.15267950994 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.8 AS "Proba_1", -0.223143551314 AS "LogProba_1", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'anoova_17' AS feature, -0.016074540093541145 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8292682926829268 AS "Proba_0", -0.187211542088 AS "LogProba_0", 0.17073170731707318 AS "Proba_1", -1.76766191765 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9545454545454546 AS "Proba_0", -0.0465200156349 AS "LogProba_0", 0.045454545454545456 AS "Proba_1", -3.09104245336 AS "LogProba_1", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6842105263157895 AS "Proba_0", -0.379489621705 AS "LogProba_0", 0.3157894736842105 AS "Proba_1", -1.15267950994 AS "LogProba_1", 0 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0" AS "Proba_0", "DT_node_data_3"."LogProba_0" AS "LogProba_0", "DT_node_data_3"."Proba_1" AS "Proba_1", "DT_node_data_3"."LogProba_1" AS "LogProba_1", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"OVR_Score_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3", "DT_Output_3"."Proba_1" AS "Proba_3", "DT_Output_3"."LogProba_1" AS "LogProba_3" 
FROM "DT_Output_3"), 
"OVR_Join_CTE" AS 
(SELECT "OVR_Score_0".join_key_0 AS join_key_0, "OVR_Score_0"."Score_0" AS "Score_0", "OVR_Score_0"."Proba_0" AS "Proba_0", "OVR_Score_0"."LogProba_0" AS "LogProba_0", "OVR_Score_1".join_key_1 AS join_key_1, "OVR_Score_1"."Score_1" AS "Score_1", "OVR_Score_1"."Proba_1" AS "Proba_1", "OVR_Score_1"."LogProba_1" AS "LogProba_1", "OVR_Score_2".join_key_2 AS join_key_2, "OVR_Score_2"."Score_2" AS "Score_2", "OVR_Score_2"."Proba_2" AS "Proba_2", "OVR_Score_2"."LogProba_2" AS "LogProba_2", "OVR_Score_3".join_key_3 AS join_key_3, "OVR_Score_3"."Score_3" AS "Score_3", "OVR_Score_3"."Proba_3" AS "Proba_3", "OVR_Score_3"."LogProba_3" AS "LogProba_3" 
FROM "OVR_Score_0" LEFT OUTER JOIN "OVR_Score_1" ON "OVR_Score_0".join_key_0 = "OVR_Score_1".join_key_1 LEFT OUTER JOIN "OVR_Score_2" ON "OVR_Score_2".join_key_2 = "OVR_Score_1".join_key_1 LEFT OUTER JOIN "OVR_Score_3" ON "OVR_Score_3".join_key_3 = "OVR_Score_2".join_key_2), 
"OVR_Scores" AS 
(SELECT "OVR_Join_CTE".join_key_0 AS "KEY", "OVR_Join_CTE"."Score_0" AS "Score_0", "OVR_Join_CTE"."Proba_0" AS "Proba_0", "OVR_Join_CTE"."LogProba_0" AS "LogProba_0", "OVR_Join_CTE"."Score_1" AS "Score_1", "OVR_Join_CTE"."Proba_1" AS "Proba_1", "OVR_Join_CTE"."LogProba_1" AS "LogProba_1", "OVR_Join_CTE"."Score_2" AS "Score_2", "OVR_Join_CTE"."Proba_2" AS "Proba_2", "OVR_Join_CTE"."LogProba_2" AS "LogProba_2", "OVR_Join_CTE"."Score_3" AS "Score_3", "OVR_Join_CTE"."Proba_3" AS "Proba_3", "OVR_Join_CTE"."LogProba_3" AS "LogProba_3" 
FROM "OVR_Join_CTE"), 
orig_cte AS 
(SELECT "OVR_Scores"."KEY" AS "KEY", "OVR_Scores"."Score_0" AS "Score_0", "OVR_Scores"."Score_1" AS "Score_1", "OVR_Scores"."Score_2" AS "Score_2", "OVR_Scores"."Score_3" AS "Score_3", "OVR_Scores"."Proba_0" AS "Proba_0", "OVR_Scores"."Proba_1" AS "Proba_1", "OVR_Scores"."Proba_2" AS "Proba_2", "OVR_Scores"."Proba_3" AS "Proba_3", "OVR_Scores"."LogProba_0" AS "LogProba_0", "OVR_Scores"."LogProba_1" AS "LogProba_1", "OVR_Scores"."LogProba_2" AS "LogProba_2", "OVR_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "OVR_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte