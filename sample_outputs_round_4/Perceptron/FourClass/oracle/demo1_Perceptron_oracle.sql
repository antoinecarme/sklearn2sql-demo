-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", 1.1213145436981256 * "ADS"."Feature_0" + 3.2182770828112446 * "ADS"."Feature_1" + -2.917092841380854 * "ADS"."Feature_2" + -3.7516491807731374 * "ADS"."Feature_3" + -3.380219696818213 * "ADS"."Feature_4" + 1.3048362074123476 * "ADS"."Feature_5" + -0.5083806495886387 * "ADS"."Feature_6" + -1.3749517534286695 * "ADS"."Feature_7" + 1.9582897026358883 * "ADS"."Feature_8" + 1.4639172310803832 * "ADS"."Feature_9" + -3.307031958082641 * "ADS"."Feature_10" + -4.094854434934114 * "ADS"."Feature_11" + 0.06495360378301518 * "ADS"."Feature_12" + 2.167750943501374 * "ADS"."Feature_13" + 2.154657091878361 * "ADS"."Feature_14" + -0.2906118460204239 * "ADS"."Feature_15" + 1.7652702686949717 * "ADS"."Feature_16" + 1.888029915180709 * "ADS"."Feature_17" + -4.949287074194299 * "ADS"."Feature_18" + -0.6371731019018282 * "ADS"."Feature_19" + -10.0 AS "Score_0", 5.283312291486951 * "ADS"."Feature_0" + 4.367481067492422 * "ADS"."Feature_1" + -1.0245612766761134 * "ADS"."Feature_2" + -5.5719961519784595 * "ADS"."Feature_3" + 3.1600308340826855 * "ADS"."Feature_4" + -4.628889308276625 * "ADS"."Feature_5" + -2.8165845069694737 * "ADS"."Feature_6" + -3.183928901288022 * "ADS"."Feature_7" + 3.421237003133089 * "ADS"."Feature_8" + -0.6511444302012568 * "ADS"."Feature_9" + -4.100474286704271 * "ADS"."Feature_10" + 1.777907573613407 * "ADS"."Feature_11" + 0.19726098917745905 * "ADS"."Feature_12" + -3.510222347636001 * "ADS"."Feature_13" + 0.4534379110203999 * "ADS"."Feature_14" + 7.598640178414653 * "ADS"."Feature_15" + 1.5034287267171265 * "ADS"."Feature_16" + -6.210622099050429 * "ADS"."Feature_17" + 2.898423122532339 * "ADS"."Feature_18" + 6.747945182167341 * "ADS"."Feature_19" + -20.0 AS "Score_1", 4.599296706143262 * "ADS"."Feature_0" + -5.457857967161148 * "ADS"."Feature_1" + 0.0019235614841500784 * "ADS"."Feature_2" + -3.596994790335006 * "ADS"."Feature_3" + 2.60725441741577 * "ADS"."Feature_4" + -0.5771858768188097 * "ADS"."Feature_5" + -4.321262008077099 * "ADS"."Feature_6" + -2.0239016230914504 * "ADS"."Feature_7" + -7.656584394011495 * "ADS"."Feature_8" + 0.23891111179691332 * "ADS"."Feature_9" + 5.868512224250031 * "ADS"."Feature_10" + 4.442549252334722 * "ADS"."Feature_11" + -2.0762284674494222 * "ADS"."Feature_12" + -4.017034715296391 * "ADS"."Feature_13" + 5.609877388259905 * "ADS"."Feature_14" + -6.110732933704775 * "ADS"."Feature_15" + -1.0578954720531715 * "ADS"."Feature_16" + 0.9414229236865765 * "ADS"."Feature_17" + -4.482887092173353 * "ADS"."Feature_18" + -4.433058379017739 * "ADS"."Feature_19" + -9.0 AS "Score_2", -2.8781975407729337 * "ADS"."Feature_0" + -1.4315623957434287 * "ADS"."Feature_1" + 1.4580423167734087 * "ADS"."Feature_2" + 10.069351425646186 * "ADS"."Feature_3" + 1.336355894978122 * "ADS"."Feature_4" + 1.0036223913326299 * "ADS"."Feature_5" + 6.044302227021769 * "ADS"."Feature_6" + 2.0205858590185177 * "ADS"."Feature_7" + 1.6776645285869545 * "ADS"."Feature_8" + -3.981839256008938 * "ADS"."Feature_9" + 3.5625770787268767 * "ADS"."Feature_10" + -6.415899529252169 * "ADS"."Feature_11" + -4.36026743849493 * "ADS"."Feature_12" + 2.855479031943496 * "ADS"."Feature_13" + -4.0462684171979655 * "ADS"."Feature_14" + 4.990338279400475 * "ADS"."Feature_15" + 2.3204546468785576 * "ADS"."Feature_16" + -0.7389017844262398 * "ADS"."Feature_17" + 9.27934053454576 * "ADS"."Feature_18" + -0.95264376591452 * "ADS"."Feature_19" + -10.0 AS "Score_3" 
FROM "INPUT_DATA" "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte