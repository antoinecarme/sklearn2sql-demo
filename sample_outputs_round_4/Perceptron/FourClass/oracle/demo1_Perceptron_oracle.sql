-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", -1.6422328899020462 * "ADS"."Feature_0" + -0.6147657744719365 * "ADS"."Feature_1" + 5.194367094111822 * "ADS"."Feature_2" + 11.471976608003668 * "ADS"."Feature_3" + 0.14652844372167462 * "ADS"."Feature_4" + -0.9205798247947619 * "ADS"."Feature_5" + 1.7763137501846762 * "ADS"."Feature_6" + -1.371824001949291 * "ADS"."Feature_7" + 3.0756893805921273 * "ADS"."Feature_8" + 4.688181079487185 * "ADS"."Feature_9" + -0.35494537943369664 * "ADS"."Feature_10" + 4.463432047251938 * "ADS"."Feature_11" + 4.061623028638572 * "ADS"."Feature_12" + -1.5738040508817122 * "ADS"."Feature_13" + 3.233178859940714 * "ADS"."Feature_14" + 4.805662894923721 * "ADS"."Feature_15" + -0.45706675658936397 * "ADS"."Feature_16" + 2.7934827628484635 * "ADS"."Feature_17" + -1.8600218813956528 * "ADS"."Feature_18" + 1.2348928853197347 * "ADS"."Feature_19" + -16.0 AS "Score_0", -5.659372302074146 * "ADS"."Feature_0" + 3.594384004025672 * "ADS"."Feature_1" + -9.968640968351657 * "ADS"."Feature_2" + -3.228367760451203 * "ADS"."Feature_3" + 1.9152681968098737 * "ADS"."Feature_4" + 0.5910982463325287 * "ADS"."Feature_5" + 3.433108186863841 * "ADS"."Feature_6" + -7.8973419050599665 * "ADS"."Feature_7" + 5.541666056572246 * "ADS"."Feature_8" + 0.38413698629311854 * "ADS"."Feature_9" + -4.2116752031637406 * "ADS"."Feature_10" + -2.9267519885219047 * "ADS"."Feature_11" + 3.341922781880065 * "ADS"."Feature_12" + -0.6433662439392407 * "ADS"."Feature_13" + -5.168646061990387 * "ADS"."Feature_14" + -3.0712603898632653 * "ADS"."Feature_15" + -0.1392692927777524 * "ADS"."Feature_16" + -4.987482512551863 * "ADS"."Feature_17" + 1.4781498166275153 * "ADS"."Feature_18" + 4.463087554881739 * "ADS"."Feature_19" + -17.0 AS "Score_1", 3.3322599286952617 * "ADS"."Feature_0" + -5.652927408077325 * "ADS"."Feature_1" + 1.9361106542952053 * "ADS"."Feature_2" + -3.905007170223851 * "ADS"."Feature_3" + 3.2829256089197054 * "ADS"."Feature_4" + 3.0747033009004276 * "ADS"."Feature_5" + -3.3742648970297306 * "ADS"."Feature_6" + 4.8245876869521265 * "ADS"."Feature_7" + 4.577332029847047 * "ADS"."Feature_8" + -1.3994127536608318 * "ADS"."Feature_9" + -0.3285474627770456 * "ADS"."Feature_10" + -4.596829117439702 * "ADS"."Feature_11" + 2.2495987113954663 * "ADS"."Feature_12" + 0.060373576711832744 * "ADS"."Feature_13" + -1.100565691750801 * "ADS"."Feature_14" + 3.363219288978883 * "ADS"."Feature_15" + -4.504488640053609 * "ADS"."Feature_16" + 1.5589113397118424 * "ADS"."Feature_17" + -2.4691852592495014 * "ADS"."Feature_18" + -3.13519727790683 * "ADS"."Feature_19" + -19.0 AS "Score_2", 3.8434670590869873 * "ADS"."Feature_0" + -0.5812808773206051 * "ADS"."Feature_1" + 5.088957712063072 * "ADS"."Feature_2" + -2.305859641879766 * "ADS"."Feature_3" + -1.3380590275830007 * "ADS"."Feature_4" + -1.778390095305805 * "ADS"."Feature_5" + -5.5192792039773275 * "ADS"."Feature_6" + 0.814563707880956 * "ADS"."Feature_7" + -10.652664880791574 * "ADS"."Feature_8" + 0.3957114243446799 * "ADS"."Feature_9" + 1.193707777006345 * "ADS"."Feature_10" + 2.9175693652001002 * "ADS"."Feature_11" + -9.366708666179804 * "ADS"."Feature_12" + -4.173578346838943 * "ADS"."Feature_13" + -2.970567979612198 * "ADS"."Feature_14" + -2.603808678944551 * "ADS"."Feature_15" + -0.6508909408405008 * "ADS"."Feature_16" + -3.1618085057754994 * "ADS"."Feature_17" + 3.8194651559792865 * "ADS"."Feature_18" + 4.380453645852226 * "ADS"."Feature_19" + -11.0 AS "Score_3" 
FROM "INPUT_DATA" "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte