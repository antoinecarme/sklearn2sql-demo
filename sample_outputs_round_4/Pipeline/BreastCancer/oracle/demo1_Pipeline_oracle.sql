-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_20" <= 16.795000076293945) THEN CASE WHEN ("ADS"."Feature_27" <= 0.13580000400543213) THEN CASE WHEN ("ADS"."Feature_13" <= 38.084999084472656) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_21" <= 25.670000076293945) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 16.110000610351562) THEN 9 ELSE CASE WHEN ("ADS"."Feature_27" <= 0.11720000207424164) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_20' AS feature, 16.795000076293945 AS threshold, 569 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.37258347978910367 AS "Proba_0", -0.987294159454 AS "LogProba_0", 0.6274165202108963 AS "Proba_1", -0.466144652347 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_27' AS feature, 0.13580000400543213 AS threshold, 379 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0870712401055409 AS "Proba_0", -2.44102864362 AS "LogProba_0", 0.9129287598944591 AS "Proba_1", -0.0910974300247 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, 38.084999084472656 AS threshold, 333 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.015015015015015015 AS "Proba_0", -4.19870457755 AS "LogProba_0", 0.984984984984985 AS "Proba_1", -0.0151288815963 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 318 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.006289308176100629 AS "Proba_0", -5.06890420222 AS "LogProba_0", 0.9937106918238994 AS "Proba_1", -0.00630916919326 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0", -1.60943791243 AS "LogProba_0", 0.8 AS "Proba_1", -0.223143551314 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_21' AS feature, 25.670000076293945 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6086956521739131 AS "Proba_0", -0.496436886314 AS "LogProba_0", 0.391304347826087 AS "Proba_1", -0.938269638593 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21052631578947367 AS "Proba_0", -1.55814461805 AS "LogProba_0", 0.7894736842105263 AS "Proba_1", -0.236388778064 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8888888888888888 AS "Proba_0", -0.117783035656 AS "LogProba_0", 0.1111111111111111 AS "Proba_1", -2.19722457734 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 16.110000610351562 AS threshold, 190 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9421052631578948 AS "Proba_0", -0.0596382663197 AS "LogProba_0", 0.05789473684210526 AS "Proba_1", -2.84912879936 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.47058823529411764 AS "Proba_0", -0.753771802376 AS "LogProba_0", 0.5294117647058824 AS "Proba_1", -0.63598876672 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_27' AS feature, 0.11720000207424164 AS threshold, 173 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9884393063583815 AS "Proba_0", -0.0116280379951 AS "LogProba_0", 0.011560693641618497 AS "Proba_1", -4.46014441394 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8666666666666667 AS "Proba_0", -0.143100843641 AS "LogProba_0", 0.13333333333333333 AS "Proba_1", -2.01490302054 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 158 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."Decision" AS "Decision" 
FROM "DT_Output"