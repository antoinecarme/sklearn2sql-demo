-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" <= 0.2109430581331253) THEN CASE WHEN ("ADS"."Feature_16" <= -0.07920979708433151) THEN 2 ELSE CASE WHEN ("ADS"."Feature_16" <= 1.2574398517608643) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 0.6086039543151855) THEN 7 ELSE 8 END END AS node_id_2 
FROM "INPUT_DATA" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Proba_2" AS "Proba_2", "Values"."LogProba_2" AS "LogProba_2", "Values"."Proba_3" AS "Proba_3", "Values"."LogProba_3" AS "LogProba_3", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, 0.2109430581331253 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0", -1.38629436112 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0.26 AS "Proba_2", -1.34707364797 AS "LogProba_2", 0.24 AS "Proba_3", -1.42711635564 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_16' AS feature, -0.07920979708433151 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.37037037037037035 AS "Proba_0", -0.99325177301 AS "LogProba_0", 0.09259259259259259 AS "Proba_1", -2.37954613413 AS "LogProba_1", 0.42592592592592593 AS "Proba_2", -0.853489830635 AS "LogProba_2", 0.1111111111111111 AS "Proba_3", -2.19722457734 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08695652173913043 AS "Proba_0", -2.44234703537 AS "LogProba_0", 0.043478260869565216 AS "Proba_1", -3.13549421593 AS "LogProba_1", 0.8260869565217391 AS "Proba_2", -0.191055236763 AS "LogProba_2", 0.043478260869565216 AS "Proba_3", -3.13549421593 AS "LogProba_3", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_16' AS feature, 1.2574398517608643 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5806451612903226 AS "Proba_0", -0.543615446589 AS "LogProba_0", 0.12903225806451613 AS "Proba_1", -2.04769284337 AS "LogProba_1", 0.12903225806451613 AS "Proba_2", -2.04769284337 AS "LogProba_2", 0.16129032258064516 AS "Proba_3", -1.82454929205 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0", -0.287682072452 AS "LogProba_0", 0.0625 AS "Proba_1", -2.77258872224 AS "LogProba_1", 0.1875 AS "Proba_2", -1.67397643357 AS "LogProba_2", 0.0 AS "Proba_3", -BINARY_FLOAT_INFINITY AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0", -0.916290731874 AS "LogProba_0", 0.2 AS "Proba_1", -1.60943791243 AS "LogProba_1", 0.06666666666666667 AS "Proba_2", -2.7080502011 AS "LogProba_2", 0.3333333333333333 AS "Proba_3", -1.09861228867 AS "LogProba_3", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_16' AS feature, 0.6086039543151855 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10869565217391304 AS "Proba_0", -2.21920348405 AS "LogProba_0", 0.43478260869565216 AS "Proba_1", -0.832909122935 AS "LogProba_1", 0.06521739130434782 AS "Proba_2", -2.73002910782 AS "LogProba_2", 0.391304347826087 AS "Proba_3", -0.938269638593 AS "LogProba_3", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12 AS "Proba_0", -2.1202635362 AS "LogProba_0", 0.24 AS "Proba_1", -1.42711635564 AS "LogProba_1", 0.08 AS "Proba_2", -2.52572864431 AS "LogProba_2", 0.56 AS "Proba_3", -0.579818495253 AS "LogProba_3", 3 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09523809523809523 AS "Proba_0", -2.35137525716 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 0.047619047619047616 AS "Proba_2", -3.04452243772 AS "LogProba_2", 0.19047619047619047 AS "Proba_3", -1.6582280766 AS "LogProba_3", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Proba_2" AS "Proba_2", "DT_node_data"."LogProba_2" AS "LogProba_2", "DT_node_data"."Proba_3" AS "Proba_3", "DT_node_data"."LogProba_3" AS "LogProba_3", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."Proba_2" AS "Proba_2", "DT_Output"."Proba_3" AS "Proba_3", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."LogProba_2" AS "LogProba_2", "DT_Output"."LogProba_3" AS "LogProba_3", "DT_Output"."Decision" AS "Decision" 
FROM "DT_Output"