-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.75) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.850000381469727) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.75) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.75 AS threshold, 94 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.31333333333333335 AS `Proba_0.0`, -1.16048769239 AS `LogProba_0.0`, 0.29333333333333333 AS `Proba_1.0`, -1.22644566018 AS `LogProba_1.0`, 0.3933333333333333 AS `Proba_2.0`, -0.933097850191 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.850000381469727 AS threshold, 63 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.42718446601941745 AS `Proba_1.0`, -0.850539354311 AS `LogProba_1.0`, 0.5728155339805825 AS `Proba_2.0`, -0.557191544324 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, 5.75 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9347826086956522 AS `Proba_1.0`, -0.0674412807955 AS `LogProba_1.0`, 0.06521739130434782 AS `Proba_2.0`, -2.73002910782 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9615384615384616 AS `Proba_1.0`, -0.0392207131533 AS `LogProba_1.0`, 0.038461538461538464 AS `Proba_2.0`, -3.25809653802 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9 AS `Proba_1.0`, -0.105360515658 AS `LogProba_1.0`, 0.1 AS `Proba_2.0`, -2.30258509299 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.017543859649122806 AS `Proba_1.0`, -4.04305126783 AS `LogProba_1.0`, 0.9824561403508771 AS `Proba_2.0`, -0.0176995770994 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data`.`Decision` AS `Decision` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0_0`, `DT_Output`.`Proba_0.0` AS `Proba_0_0`, `DT_Output`.`LogProba_0.0` AS `LogProba_0_0`, NULL AS `Score_0_1`, `DT_Output`.`Proba_1.0` AS `Proba_0_1`, `DT_Output`.`LogProba_1.0` AS `LogProba_0_1`, NULL AS `Score_0_2`, `DT_Output`.`Proba_2.0` AS `Proba_0_2`, `DT_Output`.`LogProba_2.0` AS `LogProba_0_2` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.800000011920929) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.75) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.449999809265137) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.800000011920929 AS threshold, 100 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.30666666666666664 AS `Proba_0.0`, -1.18199389761 AS `LogProba_0.0`, 0.41333333333333333 AS `Proba_1.0`, -0.883500909051 AS `LogProba_1.0`, 0.28 AS `Proba_2.0`, -1.27296567581 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 1.75 AS threshold, 67 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.5961538461538461 AS `Proba_1.0`, -0.517256514096 AS `LogProba_1.0`, 0.40384615384615385 AS `Proba_2.0`, -0.906721280858 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 4.449999809265137 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9242424242424242 AS `Proba_1.0`, -0.0787808778531 AS `LogProba_1.0`, 0.07575757575757576 AS `Proba_2.0`, -2.58021682959 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8214285714285714 AS `Proba_1.0`, -0.196710294246 AS `LogProba_1.0`, 0.17857142857142858 AS `Proba_2.0`, -1.72276659774 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.02631578947368421 AS `Proba_1.0`, -3.63758615973 AS `LogProba_1.0`, 0.9736842105263158 AS `Proba_2.0`, -0.0266682470822 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_1`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_1`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_1`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_1`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_1`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1_0`, `DT_Output_1`.`Proba_0.0` AS `Proba_1_0`, `DT_Output_1`.`LogProba_0.0` AS `LogProba_1_0`, NULL AS `Score_1_1`, `DT_Output_1`.`Proba_1.0` AS `Proba_1_1`, `DT_Output_1`.`LogProba_1.0` AS `LogProba_1_1`, NULL AS `Score_1_2`, `DT_Output_1`.`Proba_2.0` AS `Proba_1_2`, `DT_Output_1`.`LogProba_2.0` AS `LogProba_1_2` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` <= 5.550000190734863) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.3500000238418579) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.75) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.8499999046325684) THEN 7 ELSE 8 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 5.550000190734863 AS threshold, 98 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.34 AS `Proba_0.0`, -1.07880966137 AS `LogProba_0.0`, 0.30666666666666664 AS `Proba_1.0`, -1.18199389761 AS `LogProba_1.0`, 0.35333333333333333 AS `Proba_2.0`, -1.04034338054 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.3500000238418579 AS threshold, 40 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7903225806451613 AS `Proba_0.0`, -0.235314086934 AS `LogProba_0.0`, 0.1935483870967742 AS `Proba_1.0`, -1.64222773526 AS `LogProba_1.0`, 0.016129032258064516 AS `Proba_2.0`, -4.12713438505 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.48 AS `Proba_0.0`, -0.73396917508 AS `LogProba_0.0`, 0.48 AS `Proba_1.0`, -0.73396917508 AS `LogProba_1.0`, 0.04 AS `Proba_2.0`, -3.21887582487 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_2' AS feature, 4.75 AS threshold, 58 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.022727272727272728 AS `Proba_0.0`, -3.78418963392 AS `LogProba_0.0`, 0.38636363636363635 AS `Proba_1.0`, -0.950976289862 AS `LogProba_1.0`, 0.5909090909090909 AS `Proba_2.0`, -0.526093095897 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.06060606060606061 AS `Proba_0.0`, -2.80336038091 AS `LogProba_0.0`, 0.9393939393939394 AS `Proba_1.0`, -0.0625203569813 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 1.8499999046325684 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.05454545454545454 AS `Proba_1.0`, -2.90872089656 AS `LogProba_1.0`, 0.9454545454545454 AS `Proba_2.0`, -0.056089466651 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.14285714285714285 AS `Proba_1.0`, -1.94591014906 AS `LogProba_1.0`, 0.8571428571428571 AS `Proba_2.0`, -0.154150679827 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_2`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_2`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_2`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_2`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_2`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2_0`, `DT_Output_2`.`Proba_0.0` AS `Proba_2_0`, `DT_Output_2`.`LogProba_0.0` AS `LogProba_2_0`, NULL AS `Score_2_1`, `DT_Output_2`.`Proba_1.0` AS `Proba_2_1`, `DT_Output_2`.`LogProba_1.0` AS `LogProba_2_1`, NULL AS `Score_2_2`, `DT_Output_2`.`Proba_2.0` AS `Proba_2_2`, `DT_Output_2`.`LogProba_2.0` AS `LogProba_2_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` <= 5.449999809265137) THEN CASE WHEN (`ADS`.`Feature_1` <= 3.3000001907348633) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 6.25) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.75) THEN 6 ELSE 7 END ELSE 8 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, 5.449999809265137 AS threshold, 96 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.29333333333333333 AS `Proba_0.0`, -1.22644566018 AS `LogProba_0.0`, 0.3933333333333333 AS `Proba_1.0`, -0.933097850191 AS `LogProba_1.0`, 0.31333333333333335 AS `Proba_2.0`, -1.16048769239 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 3.3000001907348633 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7884615384615384 AS `Proba_0.0`, -0.237671651877 AS `LogProba_0.0`, 0.15384615384615385 AS `Proba_1.0`, -1.8718021769 AS `LogProba_1.0`, 0.057692307692307696 AS `Proba_2.0`, -2.85263142991 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5925925925925926 AS `Proba_0.0`, -0.523248143765 AS `LogProba_0.0`, 0.2962962962962963 AS `Proba_1.0`, -1.21639532432 AS `LogProba_1.0`, 0.1111111111111111 AS `Proba_2.0`, -2.19722457734 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_0' AS feature, 6.25 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.030612244897959183 AS `Proba_0.0`, -3.48635519 AS `LogProba_0.0`, 0.5204081632653061 AS `Proba_1.0`, -0.653141845946 AS `LogProba_1.0`, 0.4489795918367347 AS `Proba_2.0`, -0.800777844752 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 5.75 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.05660377358490566 AS `Proba_0.0`, -2.87167962488 AS `LogProba_0.0`, 0.7735849056603774 AS `Proba_1.0`, -0.256719846848 AS `LogProba_1.0`, 0.16981132075471697 AS `Proba_2.0`, -1.77306733622 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.08 AS `Proba_0.0`, -2.52572864431 AS `LogProba_0.0`, 0.88 AS `Proba_1.0`, -0.12783337151 AS `LogProba_1.0`, 0.04 AS `Proba_2.0`, -3.21887582487 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.03571428571428571 AS `Proba_0.0`, -3.33220451018 AS `LogProba_0.0`, 0.6785714285714286 AS `Proba_1.0`, -0.387765531009 AS `LogProba_1.0`, 0.2857142857142857 AS `Proba_2.0`, -1.2527629685 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.2222222222222222 AS `Proba_1.0`, -1.50407739678 AS `LogProba_1.0`, 0.7777777777777778 AS `Proba_2.0`, -0.251314428281 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_3`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_3`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_3`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_3`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_3`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3_0`, `DT_Output_3`.`Proba_0.0` AS `Proba_3_0`, `DT_Output_3`.`LogProba_0.0` AS `LogProba_3_0`, NULL AS `Score_3_1`, `DT_Output_3`.`Proba_1.0` AS `Proba_3_1`, `DT_Output_3`.`LogProba_1.0` AS `LogProba_3_1`, NULL AS `Score_3_2`, `DT_Output_3`.`Proba_2.0` AS `Proba_3_2`, `DT_Output_3`.`LogProba_2.0` AS `LogProba_3_2` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.699999988079071) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_3` <= 1.75) THEN CASE WHEN (`ADS`.`Feature_2` <= 4.449999809265137) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.699999988079071 AS threshold, 95 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3333333333333333 AS `Proba_0.0`, -1.09861228867 AS `LogProba_0.0`, 0.4066666666666667 AS `Proba_1.0`, -0.899761429923 AS `LogProba_1.0`, 0.26 AS `Proba_2.0`, -1.34707364797 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 1.75 AS threshold, 64 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.61 AS `Proba_1.0`, -0.494296321815 AS `LogProba_1.0`, 0.39 AS `Proba_2.0`, -0.941608539858 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 4.449999809265137 AS threshold, 41 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9104477611940298 AS `Proba_1.0`, -0.0938187552177 AS `LogProba_1.0`, 0.08955223880597014 AS `Proba_2.0`, -2.41293315016 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8125 AS `Proba_1.0`, -0.207639364778 AS `LogProba_1.0`, 0.1875 AS `Proba_2.0`, -1.67397643357 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_4`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_4`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_4`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_4`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_4`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_4`.`Decision` AS `Decision` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`RF_Tree_4` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_4, NULL AS `Score_4_0`, `DT_Output_4`.`Proba_0.0` AS `Proba_4_0`, `DT_Output_4`.`LogProba_0.0` AS `LogProba_4_0`, NULL AS `Score_4_1`, `DT_Output_4`.`Proba_1.0` AS `Proba_4_1`, `DT_Output_4`.`LogProba_1.0` AS `LogProba_4_1`, NULL AS `Score_4_2`, `DT_Output_4`.`Proba_2.0` AS `Proba_4_2`, `DT_Output_4`.`LogProba_2.0` AS `LogProba_4_2` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.800000011920929) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.949999809265137) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.949999809265137) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.800000011920929 AS threshold, 94 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.32666666666666666 AS `Proba_0.0`, -1.11881499599 AS `LogProba_0.0`, 0.35333333333333333 AS `Proba_1.0`, -1.04034338054 AS `LogProba_1.0`, 0.32 AS `Proba_2.0`, -1.13943428319 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 66 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.5247524752475248 AS `Proba_1.0`, -0.644828603289 AS `LogProba_1.0`, 0.4752475247524752 AS `Proba_2.0`, -0.743919505933 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, 5.949999809265137 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9298245614035088 AS `Proba_1.0`, -0.0727593542824 AS `LogProba_1.0`, 0.07017543859649122 AS `Proba_2.0`, -2.65675690671 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.96875 AS `Proba_1.0`, -0.0317486983146 AS `LogProba_1.0`, 0.03125 AS `Proba_2.0`, -3.4657359028 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.88 AS `Proba_1.0`, -0.12783337151 AS `LogProba_1.0`, 0.12 AS `Proba_2.0`, -2.1202635362 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_5`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_5`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_5`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_5`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_5`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_5`.`Decision` AS `Decision` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`RF_Tree_5` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_5, NULL AS `Score_5_0`, `DT_Output_5`.`Proba_0.0` AS `Proba_5_0`, `DT_Output_5`.`LogProba_0.0` AS `LogProba_5_0`, NULL AS `Score_5_1`, `DT_Output_5`.`Proba_1.0` AS `Proba_5_1`, `DT_Output_5`.`LogProba_1.0` AS `LogProba_5_1`, NULL AS `Score_5_2`, `DT_Output_5`.`Proba_2.0` AS `Proba_5_2`, `DT_Output_5`.`LogProba_2.0` AS `LogProba_5_2` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.699999988079071) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.75) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_0` <= 6.599999904632568) THEN 5 ELSE 6 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.699999988079071 AS threshold, 95 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.30666666666666664 AS `Proba_0.0`, -1.18199389761 AS `LogProba_0.0`, 0.2866666666666667 AS `Proba_1.0`, -1.2494351784 AS `LogProba_1.0`, 0.4066666666666667 AS `Proba_2.0`, -0.899761429923 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.75 AS threshold, 68 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.41346153846153844 AS `Proba_1.0`, -0.883190783448 AS `LogProba_1.0`, 0.5865384615384616 AS `Proba_2.0`, -0.533517034968 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9512195121951219 AS `Proba_1.0`, -0.0500104205747 AS `LogProba_1.0`, 0.04878048780487805 AS `Proba_2.0`, -3.02042488614 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_0' AS feature, 6.599999904632568 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.06349206349206349 AS `Proba_1.0`, -2.75684036527 AS `LogProba_1.0`, 0.9365079365079365 AS `Proba_2.0`, -0.0655972824858 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.027777777777777776 AS `Proba_1.0`, -3.58351893846 AS `LogProba_1.0`, 0.9722222222222222 AS `Proba_2.0`, -0.0281708769667 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.1111111111111111 AS `Proba_1.0`, -2.19722457734 AS `LogProba_1.0`, 0.8888888888888888 AS `Proba_2.0`, -0.117783035656 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_6`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_6`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_6`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_6`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_6`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_6`.`Decision` AS `Decision` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`RF_Tree_6` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_6, NULL AS `Score_6_0`, `DT_Output_6`.`Proba_0.0` AS `Proba_6_0`, `DT_Output_6`.`LogProba_0.0` AS `LogProba_6_0`, NULL AS `Score_6_1`, `DT_Output_6`.`Proba_1.0` AS `Proba_6_1`, `DT_Output_6`.`LogProba_1.0` AS `LogProba_6_1`, NULL AS `Score_6_2`, `DT_Output_6`.`Proba_2.0` AS `Proba_6_2`, `DT_Output_6`.`LogProba_2.0` AS `LogProba_6_2` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 2.5999999046325684) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.75) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.149999618530273) THEN 5 ELSE 6 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.5999999046325684 AS threshold, 101 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.38666666666666666 AS `Proba_0.0`, -0.95019228355 AS `LogProba_0.0`, 0.2733333333333333 AS `Proba_1.0`, -1.29706322739 AS `LogProba_1.0`, 0.34 AS `Proba_2.0`, -1.07880966137 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.75 AS threshold, 64 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.44565217391304346 AS `Proba_1.0`, -0.808216510345 AS `LogProba_1.0`, 0.5543478260869565 AS `Proba_2.0`, -0.589962944325 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_2' AS feature, 5.149999618530273 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.07272727272727272 AS `Proba_1.0`, -2.62103882411 AS `LogProba_1.0`, 0.9272727272727272 AS `Proba_2.0`, -0.0755075525081 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.19047619047619047 AS `Proba_1.0`, -1.6582280766 AS `LogProba_1.0`, 0.8095238095238095 AS `Proba_2.0`, -0.211309093667 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_7`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_7`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_7`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_7`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_7`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_7`.`Decision` AS `Decision` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`RF_Tree_7` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_7, NULL AS `Score_7_0`, `DT_Output_7`.`Proba_0.0` AS `Proba_7_0`, `DT_Output_7`.`LogProba_0.0` AS `LogProba_7_0`, NULL AS `Score_7_1`, `DT_Output_7`.`Proba_1.0` AS `Proba_7_1`, `DT_Output_7`.`LogProba_1.0` AS `LogProba_7_1`, NULL AS `Score_7_2`, `DT_Output_7`.`Proba_2.0` AS `Proba_7_2`, `DT_Output_7`.`LogProba_2.0` AS `LogProba_7_2` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.699999988079071) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_0` <= 6.25) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_2` <= 5.649999618530273) THEN 5 ELSE 6 END END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.699999988079071 AS threshold, 91 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.28 AS `Proba_0.0`, -1.27296567581 AS `LogProba_0.0`, 0.36 AS `Proba_1.0`, -1.02165124753 AS `LogProba_1.0`, 0.36 AS `Proba_2.0`, -1.02165124753 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 6.25 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.5 AS `Proba_1.0`, -0.69314718056 AS `LogProba_1.0`, 0.5 AS `Proba_2.0`, -0.69314718056 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.78 AS `Proba_1.0`, -0.248461359298 AS `LogProba_1.0`, 0.22 AS `Proba_2.0`, -1.51412773263 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_2' AS feature, 5.649999618530273 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.25862068965517243 AS `Proba_1.0`, -1.35239280944 AS `LogProba_1.0`, 0.7413793103448276 AS `Proba_2.0`, -0.299242894853 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.4411764705882353 AS `Proba_1.0`, -0.818310323514 AS `LogProba_1.0`, 0.5588235294117647 AS `Proba_2.0`, -0.58192154545 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_8`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_8`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_8`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_8`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_8`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_8`.`Decision` AS `Decision` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`RF_Tree_8` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_8, NULL AS `Score_8_0`, `DT_Output_8`.`Proba_0.0` AS `Proba_8_0`, `DT_Output_8`.`LogProba_0.0` AS `LogProba_8_0`, NULL AS `Score_8_1`, `DT_Output_8`.`Proba_1.0` AS `Proba_8_1`, `DT_Output_8`.`LogProba_1.0` AS `LogProba_8_1`, NULL AS `Score_8_2`, `DT_Output_8`.`Proba_2.0` AS `Proba_8_2`, `DT_Output_8`.`LogProba_2.0` AS `LogProba_8_2` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 2.5999999046325684) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 4.949999809265137) THEN CASE WHEN (`ADS`.`Feature_0` <= 5.949999809265137) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 2.5999999046325684 AS threshold, 96 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.36666666666666664 AS `Proba_0.0`, -1.00330210886 AS `LogProba_0.0`, 0.26666666666666666 AS `Proba_1.0`, -1.32175583998 AS `LogProba_1.0`, 0.36666666666666664 AS `Proba_2.0`, -1.00330210886 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 4.949999809265137 AS threshold, 60 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.42105263157894735 AS `Proba_1.0`, -0.864997437487 AS `LogProba_1.0`, 0.5789473684210527 AS `Proba_2.0`, -0.546543706368 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_0' AS feature, 5.949999809265137 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9069767441860465 AS `Proba_1.0`, -0.0976384695639 AS `LogProba_1.0`, 0.09302325581395349 AS `Proba_2.0`, -2.37490575457 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8 AS `Proba_1.0`, -0.223143551314 AS `LogProba_1.0`, 0.2 AS `Proba_2.0`, -1.60943791243 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.019230769230769232 AS `Proba_1.0`, -3.95124371858 AS `LogProba_1.0`, 0.9807692307692307 AS `Proba_2.0`, -0.0194180858571 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_9`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_9`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_9`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_9`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_9`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_9`.`Decision` AS `Decision` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`RF_Tree_9` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_9, NULL AS `Score_9_0`, `DT_Output_9`.`Proba_0.0` AS `Proba_9_0`, `DT_Output_9`.`LogProba_0.0` AS `LogProba_9_0`, NULL AS `Score_9_1`, `DT_Output_9`.`Proba_1.0` AS `Proba_9_1`, `DT_Output_9`.`LogProba_1.0` AS `LogProba_9_1`, NULL AS `Score_9_2`, `DT_Output_9`.`Proba_2.0` AS `Proba_9_2`, `DT_Output_9`.`LogProba_2.0` AS `LogProba_9_2` 
FROM `DT_Output_9`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0`.join_key_0 AS join_key_0, `RF_Tree_0`.`Score_0_0` AS `Score_0_0`, `RF_Tree_0`.`Proba_0_0` AS `Proba_0_0`, `RF_Tree_0`.`LogProba_0_0` AS `LogProba_0_0`, `RF_Tree_0`.`Score_0_1` AS `Score_0_1`, `RF_Tree_0`.`Proba_0_1` AS `Proba_0_1`, `RF_Tree_0`.`LogProba_0_1` AS `LogProba_0_1`, `RF_Tree_0`.`Score_0_2` AS `Score_0_2`, `RF_Tree_0`.`Proba_0_2` AS `Proba_0_2`, `RF_Tree_0`.`LogProba_0_2` AS `LogProba_0_2`, `RF_Tree_1`.join_key_1 AS join_key_1, `RF_Tree_1`.`Score_1_0` AS `Score_1_0`, `RF_Tree_1`.`Proba_1_0` AS `Proba_1_0`, `RF_Tree_1`.`LogProba_1_0` AS `LogProba_1_0`, `RF_Tree_1`.`Score_1_1` AS `Score_1_1`, `RF_Tree_1`.`Proba_1_1` AS `Proba_1_1`, `RF_Tree_1`.`LogProba_1_1` AS `LogProba_1_1`, `RF_Tree_1`.`Score_1_2` AS `Score_1_2`, `RF_Tree_1`.`Proba_1_2` AS `Proba_1_2`, `RF_Tree_1`.`LogProba_1_2` AS `LogProba_1_2`, `RF_Tree_2`.join_key_2 AS join_key_2, `RF_Tree_2`.`Score_2_0` AS `Score_2_0`, `RF_Tree_2`.`Proba_2_0` AS `Proba_2_0`, `RF_Tree_2`.`LogProba_2_0` AS `LogProba_2_0`, `RF_Tree_2`.`Score_2_1` AS `Score_2_1`, `RF_Tree_2`.`Proba_2_1` AS `Proba_2_1`, `RF_Tree_2`.`LogProba_2_1` AS `LogProba_2_1`, `RF_Tree_2`.`Score_2_2` AS `Score_2_2`, `RF_Tree_2`.`Proba_2_2` AS `Proba_2_2`, `RF_Tree_2`.`LogProba_2_2` AS `LogProba_2_2`, `RF_Tree_3`.join_key_3 AS join_key_3, `RF_Tree_3`.`Score_3_0` AS `Score_3_0`, `RF_Tree_3`.`Proba_3_0` AS `Proba_3_0`, `RF_Tree_3`.`LogProba_3_0` AS `LogProba_3_0`, `RF_Tree_3`.`Score_3_1` AS `Score_3_1`, `RF_Tree_3`.`Proba_3_1` AS `Proba_3_1`, `RF_Tree_3`.`LogProba_3_1` AS `LogProba_3_1`, `RF_Tree_3`.`Score_3_2` AS `Score_3_2`, `RF_Tree_3`.`Proba_3_2` AS `Proba_3_2`, `RF_Tree_3`.`LogProba_3_2` AS `LogProba_3_2`, `RF_Tree_4`.join_key_4 AS join_key_4, `RF_Tree_4`.`Score_4_0` AS `Score_4_0`, `RF_Tree_4`.`Proba_4_0` AS `Proba_4_0`, `RF_Tree_4`.`LogProba_4_0` AS `LogProba_4_0`, `RF_Tree_4`.`Score_4_1` AS `Score_4_1`, `RF_Tree_4`.`Proba_4_1` AS `Proba_4_1`, `RF_Tree_4`.`LogProba_4_1` AS `LogProba_4_1`, `RF_Tree_4`.`Score_4_2` AS `Score_4_2`, `RF_Tree_4`.`Proba_4_2` AS `Proba_4_2`, `RF_Tree_4`.`LogProba_4_2` AS `LogProba_4_2`, `RF_Tree_5`.join_key_5 AS join_key_5, `RF_Tree_5`.`Score_5_0` AS `Score_5_0`, `RF_Tree_5`.`Proba_5_0` AS `Proba_5_0`, `RF_Tree_5`.`LogProba_5_0` AS `LogProba_5_0`, `RF_Tree_5`.`Score_5_1` AS `Score_5_1`, `RF_Tree_5`.`Proba_5_1` AS `Proba_5_1`, `RF_Tree_5`.`LogProba_5_1` AS `LogProba_5_1`, `RF_Tree_5`.`Score_5_2` AS `Score_5_2`, `RF_Tree_5`.`Proba_5_2` AS `Proba_5_2`, `RF_Tree_5`.`LogProba_5_2` AS `LogProba_5_2`, `RF_Tree_6`.join_key_6 AS join_key_6, `RF_Tree_6`.`Score_6_0` AS `Score_6_0`, `RF_Tree_6`.`Proba_6_0` AS `Proba_6_0`, `RF_Tree_6`.`LogProba_6_0` AS `LogProba_6_0`, `RF_Tree_6`.`Score_6_1` AS `Score_6_1`, `RF_Tree_6`.`Proba_6_1` AS `Proba_6_1`, `RF_Tree_6`.`LogProba_6_1` AS `LogProba_6_1`, `RF_Tree_6`.`Score_6_2` AS `Score_6_2`, `RF_Tree_6`.`Proba_6_2` AS `Proba_6_2`, `RF_Tree_6`.`LogProba_6_2` AS `LogProba_6_2`, `RF_Tree_7`.join_key_7 AS join_key_7, `RF_Tree_7`.`Score_7_0` AS `Score_7_0`, `RF_Tree_7`.`Proba_7_0` AS `Proba_7_0`, `RF_Tree_7`.`LogProba_7_0` AS `LogProba_7_0`, `RF_Tree_7`.`Score_7_1` AS `Score_7_1`, `RF_Tree_7`.`Proba_7_1` AS `Proba_7_1`, `RF_Tree_7`.`LogProba_7_1` AS `LogProba_7_1`, `RF_Tree_7`.`Score_7_2` AS `Score_7_2`, `RF_Tree_7`.`Proba_7_2` AS `Proba_7_2`, `RF_Tree_7`.`LogProba_7_2` AS `LogProba_7_2`, `RF_Tree_8`.join_key_8 AS join_key_8, `RF_Tree_8`.`Score_8_0` AS `Score_8_0`, `RF_Tree_8`.`Proba_8_0` AS `Proba_8_0`, `RF_Tree_8`.`LogProba_8_0` AS `LogProba_8_0`, `RF_Tree_8`.`Score_8_1` AS `Score_8_1`, `RF_Tree_8`.`Proba_8_1` AS `Proba_8_1`, `RF_Tree_8`.`LogProba_8_1` AS `LogProba_8_1`, `RF_Tree_8`.`Score_8_2` AS `Score_8_2`, `RF_Tree_8`.`Proba_8_2` AS `Proba_8_2`, `RF_Tree_8`.`LogProba_8_2` AS `LogProba_8_2`, `RF_Tree_9`.join_key_9 AS join_key_9, `RF_Tree_9`.`Score_9_0` AS `Score_9_0`, `RF_Tree_9`.`Proba_9_0` AS `Proba_9_0`, `RF_Tree_9`.`LogProba_9_0` AS `LogProba_9_0`, `RF_Tree_9`.`Score_9_1` AS `Score_9_1`, `RF_Tree_9`.`Proba_9_1` AS `Proba_9_1`, `RF_Tree_9`.`LogProba_9_1` AS `LogProba_9_1`, `RF_Tree_9`.`Score_9_2` AS `Score_9_2`, `RF_Tree_9`.`Proba_9_2` AS `Proba_9_2`, `RF_Tree_9`.`LogProba_9_2` AS `LogProba_9_2` 
FROM `RF_Tree_0` LEFT OUTER JOIN `RF_Tree_1` ON `RF_Tree_0`.join_key_0 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN `RF_Tree_2` ON `RF_Tree_2`.join_key_2 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN `RF_Tree_3` ON `RF_Tree_3`.join_key_3 = `RF_Tree_2`.join_key_2 LEFT OUTER JOIN `RF_Tree_4` ON `RF_Tree_4`.join_key_4 = `RF_Tree_3`.join_key_3 LEFT OUTER JOIN `RF_Tree_5` ON `RF_Tree_5`.join_key_5 = `RF_Tree_4`.join_key_4 LEFT OUTER JOIN `RF_Tree_6` ON `RF_Tree_6`.join_key_6 = `RF_Tree_5`.join_key_5 LEFT OUTER JOIN `RF_Tree_7` ON `RF_Tree_7`.join_key_7 = `RF_Tree_6`.join_key_6 LEFT OUTER JOIN `RF_Tree_8` ON `RF_Tree_8`.join_key_8 = `RF_Tree_7`.join_key_7 LEFT OUTER JOIN `RF_Tree_9` ON `RF_Tree_9`.join_key_9 = `RF_Tree_8`.join_key_8), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0 AS `KEY`, `RF_Join_CTE`.`Score_0_0` / 10 + `RF_Join_CTE`.`Score_1_0` / 10 + `RF_Join_CTE`.`Score_2_0` / 10 + `RF_Join_CTE`.`Score_3_0` / 10 + `RF_Join_CTE`.`Score_4_0` / 10 + `RF_Join_CTE`.`Score_5_0` / 10 + `RF_Join_CTE`.`Score_6_0` / 10 + `RF_Join_CTE`.`Score_7_0` / 10 + `RF_Join_CTE`.`Score_8_0` / 10 + `RF_Join_CTE`.`Score_9_0` / 10 AS `Score_0`, `RF_Join_CTE`.`Proba_0_0` / 10 + `RF_Join_CTE`.`Proba_1_0` / 10 + `RF_Join_CTE`.`Proba_2_0` / 10 + `RF_Join_CTE`.`Proba_3_0` / 10 + `RF_Join_CTE`.`Proba_4_0` / 10 + `RF_Join_CTE`.`Proba_5_0` / 10 + `RF_Join_CTE`.`Proba_6_0` / 10 + `RF_Join_CTE`.`Proba_7_0` / 10 + `RF_Join_CTE`.`Proba_8_0` / 10 + `RF_Join_CTE`.`Proba_9_0` / 10 AS `Proba_0`, `RF_Join_CTE`.`LogProba_0_0` / 10 + `RF_Join_CTE`.`LogProba_1_0` / 10 + `RF_Join_CTE`.`LogProba_2_0` / 10 + `RF_Join_CTE`.`LogProba_3_0` / 10 + `RF_Join_CTE`.`LogProba_4_0` / 10 + `RF_Join_CTE`.`LogProba_5_0` / 10 + `RF_Join_CTE`.`LogProba_6_0` / 10 + `RF_Join_CTE`.`LogProba_7_0` / 10 + `RF_Join_CTE`.`LogProba_8_0` / 10 + `RF_Join_CTE`.`LogProba_9_0` / 10 AS `LogProba_0`, `RF_Join_CTE`.`Score_0_1` / 10 + `RF_Join_CTE`.`Score_1_1` / 10 + `RF_Join_CTE`.`Score_2_1` / 10 + `RF_Join_CTE`.`Score_3_1` / 10 + `RF_Join_CTE`.`Score_4_1` / 10 + `RF_Join_CTE`.`Score_5_1` / 10 + `RF_Join_CTE`.`Score_6_1` / 10 + `RF_Join_CTE`.`Score_7_1` / 10 + `RF_Join_CTE`.`Score_8_1` / 10 + `RF_Join_CTE`.`Score_9_1` / 10 AS `Score_1`, `RF_Join_CTE`.`Proba_0_1` / 10 + `RF_Join_CTE`.`Proba_1_1` / 10 + `RF_Join_CTE`.`Proba_2_1` / 10 + `RF_Join_CTE`.`Proba_3_1` / 10 + `RF_Join_CTE`.`Proba_4_1` / 10 + `RF_Join_CTE`.`Proba_5_1` / 10 + `RF_Join_CTE`.`Proba_6_1` / 10 + `RF_Join_CTE`.`Proba_7_1` / 10 + `RF_Join_CTE`.`Proba_8_1` / 10 + `RF_Join_CTE`.`Proba_9_1` / 10 AS `Proba_1`, `RF_Join_CTE`.`LogProba_0_1` / 10 + `RF_Join_CTE`.`LogProba_1_1` / 10 + `RF_Join_CTE`.`LogProba_2_1` / 10 + `RF_Join_CTE`.`LogProba_3_1` / 10 + `RF_Join_CTE`.`LogProba_4_1` / 10 + `RF_Join_CTE`.`LogProba_5_1` / 10 + `RF_Join_CTE`.`LogProba_6_1` / 10 + `RF_Join_CTE`.`LogProba_7_1` / 10 + `RF_Join_CTE`.`LogProba_8_1` / 10 + `RF_Join_CTE`.`LogProba_9_1` / 10 AS `LogProba_1`, `RF_Join_CTE`.`Score_0_2` / 10 + `RF_Join_CTE`.`Score_1_2` / 10 + `RF_Join_CTE`.`Score_2_2` / 10 + `RF_Join_CTE`.`Score_3_2` / 10 + `RF_Join_CTE`.`Score_4_2` / 10 + `RF_Join_CTE`.`Score_5_2` / 10 + `RF_Join_CTE`.`Score_6_2` / 10 + `RF_Join_CTE`.`Score_7_2` / 10 + `RF_Join_CTE`.`Score_8_2` / 10 + `RF_Join_CTE`.`Score_9_2` / 10 AS `Score_2`, `RF_Join_CTE`.`Proba_0_2` / 10 + `RF_Join_CTE`.`Proba_1_2` / 10 + `RF_Join_CTE`.`Proba_2_2` / 10 + `RF_Join_CTE`.`Proba_3_2` / 10 + `RF_Join_CTE`.`Proba_4_2` / 10 + `RF_Join_CTE`.`Proba_5_2` / 10 + `RF_Join_CTE`.`Proba_6_2` / 10 + `RF_Join_CTE`.`Proba_7_2` / 10 + `RF_Join_CTE`.`Proba_8_2` / 10 + `RF_Join_CTE`.`Proba_9_2` / 10 AS `Proba_2`, `RF_Join_CTE`.`LogProba_0_2` / 10 + `RF_Join_CTE`.`LogProba_1_2` / 10 + `RF_Join_CTE`.`LogProba_2_2` / 10 + `RF_Join_CTE`.`LogProba_3_2` / 10 + `RF_Join_CTE`.`LogProba_4_2` / 10 + `RF_Join_CTE`.`LogProba_5_2` / 10 + `RF_Join_CTE`.`LogProba_6_2` / 10 + `RF_Join_CTE`.`LogProba_7_2` / 10 + `RF_Join_CTE`.`LogProba_8_2` / 10 + `RF_Join_CTE`.`LogProba_9_2` / 10 AS `LogProba_2` 
FROM `RF_Join_CTE`), 
orig_cte AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Score_2` AS `Score_2`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`Proba_2` AS `Proba_2`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `RF_AVG_Scores`.`LogProba_2` AS `LogProba_2`, NULL AS `Decision` 
FROM `RF_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.`max_LogProba` = score_class_union.`LogProba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.`max_Proba` = score_class_union.`Proba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.`max_Score` = score_class_union.`Score` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score` 
FROM score_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, arg_max_cte.`arg_max_Proba` AS `Decision` 
FROM arg_max_cte