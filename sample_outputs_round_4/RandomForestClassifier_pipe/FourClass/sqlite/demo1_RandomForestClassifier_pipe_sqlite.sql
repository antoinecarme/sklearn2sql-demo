-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.11353244674 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.00860984991455 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.139724715876 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.107379001017 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.346470933107 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.00188890488325 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.162193112608 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.00970240651539 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.272241460017 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0935446257601 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.0421171389173 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.0877703517772 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.022692097077 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.0671466834529 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.214423649217 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.0311219503006 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.182366457605 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.155138677705 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0758570569442 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.12185437233 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - -0.11353244674 AS impute_2, "ADS_imp_1_OUT".impute_3 - -0.00860984991455 AS impute_3, "ADS_imp_1_OUT".impute_4 - 0.139724715876 AS impute_4, "ADS_imp_1_OUT".impute_5 - -0.107379001017 AS impute_5, "ADS_imp_1_OUT".impute_6 - -0.346470933107 AS impute_6, "ADS_imp_1_OUT".impute_7 - 0.00188890488325 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.162193112608 AS impute_8, "ADS_imp_1_OUT".impute_9 - 0.00970240651539 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.272241460017 AS impute_10, "ADS_imp_1_OUT".impute_11 - 0.0935446257601 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.0421171389173 AS impute_12, "ADS_imp_1_OUT".impute_13 - -0.0877703517772 AS impute_13, "ADS_imp_1_OUT".impute_14 - 0.022692097077 AS impute_14, "ADS_imp_1_OUT".impute_15 - 0.0671466834529 AS impute_15, "ADS_imp_1_OUT".impute_16 - -0.214423649217 AS impute_16, "ADS_imp_1_OUT".impute_17 - -0.0311219503006 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.182366457605 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.155138677705 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.0758570569442 AS impute_20, "ADS_imp_1_OUT".impute_21 - -0.12185437233 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.0262841584631 + "CenteredDataForPCA".impute_3 * -0.073494600961 + "CenteredDataForPCA".impute_4 * -0.447752032024 + "CenteredDataForPCA".impute_5 * 0.0807593638385 + "CenteredDataForPCA".impute_6 * 0.760238292092 + "CenteredDataForPCA".impute_7 * 0.0271958052681 + "CenteredDataForPCA".impute_8 * -0.0275193831502 + "CenteredDataForPCA".impute_9 * -0.0103392954829 + "CenteredDataForPCA".impute_10 * 0.321762024974 + "CenteredDataForPCA".impute_11 * -0.0156340434156 + "CenteredDataForPCA".impute_12 * 0.215663004757 + "CenteredDataForPCA".impute_13 * 0.00512319408136 + "CenteredDataForPCA".impute_14 * 0.016960092798 + "CenteredDataForPCA".impute_15 * 0.0328056793249 + "CenteredDataForPCA".impute_16 * -0.00175856922847 + "CenteredDataForPCA".impute_17 * 0.0491431035687 + "CenteredDataForPCA".impute_18 * 0.215674344739 + "CenteredDataForPCA".impute_19 * -0.0472031368829 + "CenteredDataForPCA".impute_20 * 0.0540447629102 + "CenteredDataForPCA".impute_21 * 0.0397397374627 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.0218845619562 + "CenteredDataForPCA".impute_3 * -0.0800858138282 + "CenteredDataForPCA".impute_4 * -0.0113570870882 + "CenteredDataForPCA".impute_5 * 0.00754473447076 + "CenteredDataForPCA".impute_6 * 0.0756564794548 + "CenteredDataForPCA".impute_7 * 0.0198581375425 + "CenteredDataForPCA".impute_8 * 0.0250413577417 + "CenteredDataForPCA".impute_9 * 0.639488863535 + "CenteredDataForPCA".impute_10 * 0.0689911523439 + "CenteredDataForPCA".impute_11 * -0.0194024899888 + "CenteredDataForPCA".impute_12 * 0.308536536498 + "CenteredDataForPCA".impute_13 * 0.109569394286 + "CenteredDataForPCA".impute_14 * -0.0552623162016 + "CenteredDataForPCA".impute_15 * 0.0295048480906 + "CenteredDataForPCA".impute_16 * -0.0242235333492 + "CenteredDataForPCA".impute_17 * -0.0354886091606 + "CenteredDataForPCA".impute_18 * -0.660882873943 + "CenteredDataForPCA".impute_19 * 0.0816831347496 + "CenteredDataForPCA".impute_20 * -0.116391433446 + "CenteredDataForPCA".impute_21 * 0.046234846602 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.0772915115492 + "CenteredDataForPCA".impute_3 * -0.0506286380688 + "CenteredDataForPCA".impute_4 * 0.495651796845 + "CenteredDataForPCA".impute_5 * 0.145628547344 + "CenteredDataForPCA".impute_6 * -0.0596026542392 + "CenteredDataForPCA".impute_7 * -0.0171732354981 + "CenteredDataForPCA".impute_8 * 0.0181729954014 + "CenteredDataForPCA".impute_9 * 0.176035962334 + "CenteredDataForPCA".impute_10 * 0.740154881399 + "CenteredDataForPCA".impute_11 * -0.118317796773 + "CenteredDataForPCA".impute_12 * -0.119734423595 + "CenteredDataForPCA".impute_13 * -0.086696869853 + "CenteredDataForPCA".impute_14 * -0.0973783580757 + "CenteredDataForPCA".impute_15 * 0.0219803507358 + "CenteredDataForPCA".impute_16 * -0.0144938741492 + "CenteredDataForPCA".impute_17 * 0.0139730518823 + "CenteredDataForPCA".impute_18 * 0.18968450705 + "CenteredDataForPCA".impute_19 * 0.182270179187 + "CenteredDataForPCA".impute_20 * 0.116324576762 + "CenteredDataForPCA".impute_21 * 0.112392197227 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.151344122193 + "CenteredDataForPCA".impute_3 * 0.29735250795 + "CenteredDataForPCA".impute_4 * 0.268613201297 + "CenteredDataForPCA".impute_5 * 0.275754355435 + "CenteredDataForPCA".impute_6 * 0.0288433668704 + "CenteredDataForPCA".impute_7 * -0.200748033205 + "CenteredDataForPCA".impute_8 * 0.164402387474 + "CenteredDataForPCA".impute_9 * -0.227888513864 + "CenteredDataForPCA".impute_10 * 0.0425628827332 + "CenteredDataForPCA".impute_11 * 0.197109964404 + "CenteredDataForPCA".impute_12 * 0.499307186527 + "CenteredDataForPCA".impute_13 * 0.0365228958693 + "CenteredDataForPCA".impute_14 * -0.196684716635 + "CenteredDataForPCA".impute_15 * 0.0794457916391 + "CenteredDataForPCA".impute_16 * -0.161272162499 + "CenteredDataForPCA".impute_17 * -0.0298673489992 + "CenteredDataForPCA".impute_18 * -0.0631542018435 + "CenteredDataForPCA".impute_19 * -0.184168345167 + "CenteredDataForPCA".impute_20 * 0.141922608197 + "CenteredDataForPCA".impute_21 * -0.446249513782 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.0885185116833 + "CenteredDataForPCA".impute_3 * -0.158809112773 + "CenteredDataForPCA".impute_4 * 0.213126152177 + "CenteredDataForPCA".impute_5 * -0.328643178667 + "CenteredDataForPCA".impute_6 * 0.000587498423409 + "CenteredDataForPCA".impute_7 * -0.0329642891207 + "CenteredDataForPCA".impute_8 * 0.175801003365 + "CenteredDataForPCA".impute_9 * -0.278721472036 + "CenteredDataForPCA".impute_10 * -0.0399908043601 + "CenteredDataForPCA".impute_11 * -0.106076618649 + "CenteredDataForPCA".impute_12 * 0.41999451254 + "CenteredDataForPCA".impute_13 * -0.1312507645 + "CenteredDataForPCA".impute_14 * 0.106099671152 + "CenteredDataForPCA".impute_15 * 0.240585120736 + "CenteredDataForPCA".impute_16 * -0.290200838562 + "CenteredDataForPCA".impute_17 * 0.212525289564 + "CenteredDataForPCA".impute_18 * -0.0158360238658 + "CenteredDataForPCA".impute_19 * -0.00762139481944 + "CenteredDataForPCA".impute_20 * -0.129589222703 + "CenteredDataForPCA".impute_21 * 0.530790577153 AS anoova_6, "CenteredDataForPCA".impute_2 * 0.0494938485182 + "CenteredDataForPCA".impute_3 * 0.529547450413 + "CenteredDataForPCA".impute_4 * -0.0257539629931 + "CenteredDataForPCA".impute_5 * -0.337566344714 + "CenteredDataForPCA".impute_6 * 0.0115559882132 + "CenteredDataForPCA".impute_7 * 0.0377219068217 + "CenteredDataForPCA".impute_8 * 0.0194723876295 + "CenteredDataForPCA".impute_9 * 0.141737201649 + "CenteredDataForPCA".impute_10 * 0.0546692931302 + "CenteredDataForPCA".impute_11 * 0.272626896438 + "CenteredDataForPCA".impute_12 * -0.0568866542688 + "CenteredDataForPCA".impute_13 * 0.0775236307559 + "CenteredDataForPCA".impute_14 * 0.142153064129 + "CenteredDataForPCA".impute_15 * 0.03846636609 + "CenteredDataForPCA".impute_16 * 0.142643833713 + "CenteredDataForPCA".impute_17 * 0.226554613255 + "CenteredDataForPCA".impute_18 * -0.0628239508837 + "CenteredDataForPCA".impute_19 * -0.0517242722447 + "CenteredDataForPCA".impute_20 * 0.585418217652 + "CenteredDataForPCA".impute_21 * 0.22634520299 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.122024828029 + "CenteredDataForPCA".impute_3 * -0.00176137106652 + "CenteredDataForPCA".impute_4 * 0.0897706246091 + "CenteredDataForPCA".impute_5 * 0.484631631364 + "CenteredDataForPCA".impute_6 * -0.0395176192483 + "CenteredDataForPCA".impute_7 * 0.314530855262 + "CenteredDataForPCA".impute_8 * -0.240608411352 + "CenteredDataForPCA".impute_9 * -0.156522258006 + "CenteredDataForPCA".impute_10 * -0.136446980543 + "CenteredDataForPCA".impute_11 * -0.0500102471753 + "CenteredDataForPCA".impute_12 * 0.258037217977 + "CenteredDataForPCA".impute_13 * -0.0665486809406 + "CenteredDataForPCA".impute_14 * -0.00141397909689 + "CenteredDataForPCA".impute_15 * 0.105143652585 + "CenteredDataForPCA".impute_16 * 0.438860410742 + "CenteredDataForPCA".impute_17 * -0.235713602948 + "CenteredDataForPCA".impute_18 * -0.0759780956271 + "CenteredDataForPCA".impute_19 * -0.0846378545467 + "CenteredDataForPCA".impute_20 * 0.201873632026 + "CenteredDataForPCA".impute_21 * 0.392760541726 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.17727262268 + "CenteredDataForPCA".impute_3 * 0.365484624086 + "CenteredDataForPCA".impute_4 * -0.0324658089344 + "CenteredDataForPCA".impute_5 * -0.098830971988 + "CenteredDataForPCA".impute_6 * 0.0267490434622 + "CenteredDataForPCA".impute_7 * 0.589083764936 + "CenteredDataForPCA".impute_8 * -0.238727156216 + "CenteredDataForPCA".impute_9 * -0.0255457361825 + "CenteredDataForPCA".impute_10 * -0.00884423150542 + "CenteredDataForPCA".impute_11 * -0.0592367581238 + "CenteredDataForPCA".impute_12 * -0.0085917175469 + "CenteredDataForPCA".impute_13 * 0.0301427507906 + "CenteredDataForPCA".impute_14 * -0.360257370138 + "CenteredDataForPCA".impute_15 * 0.0662824697516 + "CenteredDataForPCA".impute_16 * -0.486879476348 + "CenteredDataForPCA".impute_17 * -0.118833580101 + "CenteredDataForPCA".impute_18 * 0.0299028033042 + "CenteredDataForPCA".impute_19 * 0.125538055058 + "CenteredDataForPCA".impute_20 * -0.110371109236 + "CenteredDataForPCA".impute_21 * -0.00618234673542 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.242386805658 + "CenteredDataForPCA".impute_3 * -0.129824080007 + "CenteredDataForPCA".impute_4 * -0.107788445596 + "CenteredDataForPCA".impute_5 * 0.0783044488293 + "CenteredDataForPCA".impute_6 * 0.00204127008925 + "CenteredDataForPCA".impute_7 * -0.114566596138 + "CenteredDataForPCA".impute_8 * 0.219458799645 + "CenteredDataForPCA".impute_9 * -0.0957365445084 + "CenteredDataForPCA".impute_10 * -0.140562110881 + "CenteredDataForPCA".impute_11 * 0.108406605143 + "CenteredDataForPCA".impute_12 * -0.0550233968216 + "CenteredDataForPCA".impute_13 * 0.361966932879 + "CenteredDataForPCA".impute_14 * -0.438861449047 + "CenteredDataForPCA".impute_15 * 0.153517084331 + "CenteredDataForPCA".impute_16 * 0.0606126563376 + "CenteredDataForPCA".impute_17 * -0.0654322386448 + "CenteredDataForPCA".impute_18 * 0.057042215879 + "CenteredDataForPCA".impute_19 * 0.6220908108 + "CenteredDataForPCA".impute_20 * 0.177013901094 + "CenteredDataForPCA".impute_21 * 0.157869888657 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.54071174082 + "CenteredDataForPCA".impute_3 * 0.108980733751 + "CenteredDataForPCA".impute_4 * -0.0381319656676 + "CenteredDataForPCA".impute_5 * -0.0504888022155 + "CenteredDataForPCA".impute_6 * 0.0541927718466 + "CenteredDataForPCA".impute_7 * -0.227233797241 + "CenteredDataForPCA".impute_8 * -0.135345324631 + "CenteredDataForPCA".impute_9 * -0.0660470594484 + "CenteredDataForPCA".impute_10 * -0.102630136142 + "CenteredDataForPCA".impute_11 * -0.037391513053 + "CenteredDataForPCA".impute_12 * 0.170958697248 + "CenteredDataForPCA".impute_13 * -0.382262234033 + "CenteredDataForPCA".impute_14 * 0.131347403627 + "CenteredDataForPCA".impute_15 * 0.143612550578 + "CenteredDataForPCA".impute_16 * 0.0889108357555 + "CenteredDataForPCA".impute_17 * 0.130286996695 + "CenteredDataForPCA".impute_18 * -0.065187266878 + "CenteredDataForPCA".impute_19 * 0.556604632965 + "CenteredDataForPCA".impute_20 * 0.0573300519043 + "CenteredDataForPCA".impute_21 * -0.217058710356 AS anoova_11, "CenteredDataForPCA".impute_2 * 0.155428138793 + "CenteredDataForPCA".impute_3 * 0.0721626028907 + "CenteredDataForPCA".impute_4 * 0.0372462807168 + "CenteredDataForPCA".impute_5 * -0.173256968718 + "CenteredDataForPCA".impute_6 * 0.0317442767524 + "CenteredDataForPCA".impute_7 * -0.221278949744 + "CenteredDataForPCA".impute_8 * -0.31916019575 + "CenteredDataForPCA".impute_9 * 0.0147412492472 + "CenteredDataForPCA".impute_10 * 0.11706681183 + "CenteredDataForPCA".impute_11 * 0.529153437373 + "CenteredDataForPCA".impute_12 * -0.0228048479609 + "CenteredDataForPCA".impute_13 * -0.100199401743 + "CenteredDataForPCA".impute_14 * 0.133432826999 + "CenteredDataForPCA".impute_15 * 0.240657614005 + "CenteredDataForPCA".impute_16 * -0.00233099273839 + "CenteredDataForPCA".impute_17 * -0.565414404557 + "CenteredDataForPCA".impute_18 * 0.0541119887999 + "CenteredDataForPCA".impute_19 * 0.0646586634921 + "CenteredDataForPCA".impute_20 * -0.261744582566 + "CenteredDataForPCA".impute_21 * 0.10895153358 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.104260325269 + "CenteredDataForPCA".impute_3 * -0.395312740598 + "CenteredDataForPCA".impute_4 * -0.0468100858407 + "CenteredDataForPCA".impute_5 * -0.026774006487 + "CenteredDataForPCA".impute_6 * -0.0503542900028 + "CenteredDataForPCA".impute_7 * -0.108910533063 + "CenteredDataForPCA".impute_8 * -0.343244850987 + "CenteredDataForPCA".impute_9 * 0.057111768323 + "CenteredDataForPCA".impute_10 * -0.0849805202744 + "CenteredDataForPCA".impute_11 * -0.184565500975 + "CenteredDataForPCA".impute_12 * -0.0605104990007 + "CenteredDataForPCA".impute_13 * -0.0952693992912 + "CenteredDataForPCA".impute_14 * 0.0369179336455 + "CenteredDataForPCA".impute_15 * 0.221433918045 + "CenteredDataForPCA".impute_16 * -0.397529246162 + "CenteredDataForPCA".impute_17 * -0.172146341095 + "CenteredDataForPCA".impute_18 * -0.0604345499994 + "CenteredDataForPCA".impute_19 * -0.0991727453549 + "CenteredDataForPCA".impute_20 * 0.610819845315 + "CenteredDataForPCA".impute_21 * -0.125704525805 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.348087032919 + "CenteredDataForPCA".impute_3 * 0.288652756951 + "CenteredDataForPCA".impute_4 * 0.0476815729719 + "CenteredDataForPCA".impute_5 * 0.00403597136663 + "CenteredDataForPCA".impute_6 * 0.0244078729524 + "CenteredDataForPCA".impute_7 * 0.0577144163865 + "CenteredDataForPCA".impute_8 * -0.0052087129733 + "CenteredDataForPCA".impute_9 * -0.0674411819113 + "CenteredDataForPCA".impute_10 * 0.019236392944 + "CenteredDataForPCA".impute_11 * -0.487107046527 + "CenteredDataForPCA".impute_12 * 0.102525934689 + "CenteredDataForPCA".impute_13 * 0.209246177612 + "CenteredDataForPCA".impute_14 * 0.537609758994 + "CenteredDataForPCA".impute_15 * -0.118353325369 + "CenteredDataForPCA".impute_16 * -0.0266050795814 + "CenteredDataForPCA".impute_17 * -0.279657636304 + "CenteredDataForPCA".impute_18 * 0.0133218229879 + "CenteredDataForPCA".impute_19 * 0.318106356424 + "CenteredDataForPCA".impute_20 * -0.00752234826324 + "CenteredDataForPCA".impute_21 * -0.0970077281507 AS anoova_14, "CenteredDataForPCA".impute_2 * 0.0531779556587 + "CenteredDataForPCA".impute_3 * 0.29151406653 + "CenteredDataForPCA".impute_4 * -0.185168591863 + "CenteredDataForPCA".impute_5 * 0.131363937212 + "CenteredDataForPCA".impute_6 * 0.0258431997546 + "CenteredDataForPCA".impute_7 * -0.231899702205 + "CenteredDataForPCA".impute_8 * 0.41734217477 + "CenteredDataForPCA".impute_9 * 0.123805015241 + "CenteredDataForPCA".impute_10 * -0.08245619157 + "CenteredDataForPCA".impute_11 * -0.243496362854 + "CenteredDataForPCA".impute_12 * -0.171440349541 + "CenteredDataForPCA".impute_13 * -0.530468568431 + "CenteredDataForPCA".impute_14 * -0.202458729058 + "CenteredDataForPCA".impute_15 * -0.0355403077173 + "CenteredDataForPCA".impute_16 * -0.116833836596 + "CenteredDataForPCA".impute_17 * -0.340329594759 + "CenteredDataForPCA".impute_18 * -0.0332018104849 + "CenteredDataForPCA".impute_19 * -0.0926294174534 + "CenteredDataForPCA".impute_20 * 0.0534656615479 + "CenteredDataForPCA".impute_21 * 0.235698693873 AS anoova_15, "CenteredDataForPCA".impute_2 * -0.113572911462 + "CenteredDataForPCA".impute_3 * -0.0226740757038 + "CenteredDataForPCA".impute_4 * 0.0702530830988 + "CenteredDataForPCA".impute_5 * -0.557727646373 + "CenteredDataForPCA".impute_6 * 0.042099122996 + "CenteredDataForPCA".impute_7 * -0.0212209108403 + "CenteredDataForPCA".impute_8 * 0.0290264665656 + "CenteredDataForPCA".impute_9 * -0.060497681361 + "CenteredDataForPCA".impute_10 * 0.0690306021182 + "CenteredDataForPCA".impute_11 * -0.367973890886 + "CenteredDataForPCA".impute_12 * 0.117555514568 + "CenteredDataForPCA".impute_13 * 0.105058274168 + "CenteredDataForPCA".impute_14 * -0.335327432906 + "CenteredDataForPCA".impute_15 * 0.184432375287 + "CenteredDataForPCA".impute_16 * 0.440479128913 + "CenteredDataForPCA".impute_17 * -0.289681266557 + "CenteredDataForPCA".impute_18 * 0.0231098468772 + "CenteredDataForPCA".impute_19 * -0.187469856989 + "CenteredDataForPCA".impute_20 * 0.0238151402873 + "CenteredDataForPCA".impute_21 * -0.19543970766 AS anoova_16, "CenteredDataForPCA".impute_2 * 0.444159946629 + "CenteredDataForPCA".impute_3 * -0.0234010881939 + "CenteredDataForPCA".impute_4 * 0.0516355594201 + "CenteredDataForPCA".impute_5 * -0.158503830384 + "CenteredDataForPCA".impute_6 * 0.018389784879 + "CenteredDataForPCA".impute_7 * -0.0136757040249 + "CenteredDataForPCA".impute_8 * -0.392773792103 + "CenteredDataForPCA".impute_9 * -0.0512209156762 + "CenteredDataForPCA".impute_10 * -0.00953568959462 + "CenteredDataForPCA".impute_11 * -0.0112656084496 + "CenteredDataForPCA".impute_12 * 0.149721671135 + "CenteredDataForPCA".impute_13 * -0.386480924698 + "CenteredDataForPCA".impute_14 * -0.290958431529 + "CenteredDataForPCA".impute_15 * -0.540481128821 + "CenteredDataForPCA".impute_16 * 0.140605015046 + "CenteredDataForPCA".impute_17 * 0.158103330529 + "CenteredDataForPCA".impute_18 * -0.0393055565208 + "CenteredDataForPCA".impute_19 * 0.147477849155 + "CenteredDataForPCA".impute_20 * 0.00977957283471 + "CenteredDataForPCA".impute_21 * 0.00541199160447 AS anoova_17, "CenteredDataForPCA".impute_2 * -0.311395682849 + "CenteredDataForPCA".impute_3 * -0.250428892448 + "CenteredDataForPCA".impute_4 * 0.066292645017 + "CenteredDataForPCA".impute_5 * -0.180890439545 + "CenteredDataForPCA".impute_6 * 0.0363015471668 + "CenteredDataForPCA".impute_7 * 0.164631566501 + "CenteredDataForPCA".impute_8 * 0.315012624523 + "CenteredDataForPCA".impute_9 * -0.0876707502423 + "CenteredDataForPCA".impute_10 * 0.0139058056681 + "CenteredDataForPCA".impute_11 * 0.251608051849 + "CenteredDataForPCA".impute_12 * 0.170631101631 + "CenteredDataForPCA".impute_13 * 0.0420055555926 + "CenteredDataForPCA".impute_14 * 0.107014933415 + "CenteredDataForPCA".impute_15 * -0.575444592519 + "CenteredDataForPCA".impute_16 * -0.118318157514 + "CenteredDataForPCA".impute_17 * -0.393713890295 + "CenteredDataForPCA".impute_18 * -0.00657274880011 + "CenteredDataForPCA".impute_19 * 0.075800319528 + "CenteredDataForPCA".impute_20 * 0.236310692204 + "CenteredDataForPCA".impute_21 * 0.0158751146479 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.309943693906 + "CenteredDataForPCA".impute_3 * 0.188923708309 + "CenteredDataForPCA".impute_4 * -0.00264106017847 + "CenteredDataForPCA".impute_5 * 0.0631416046083 + "CenteredDataForPCA".impute_6 * 0.0133675890207 + "CenteredDataForPCA".impute_7 * -0.547153095872 + "CenteredDataForPCA".impute_8 * -0.3322346147 + "CenteredDataForPCA".impute_9 * -0.0423276155581 + "CenteredDataForPCA".impute_10 * -0.0217831032836 + "CenteredDataForPCA".impute_11 * -0.179777706245 + "CenteredDataForPCA".impute_12 * 0.0406432833552 + "CenteredDataForPCA".impute_13 * 0.408574730379 + "CenteredDataForPCA".impute_14 * -0.140189001899 + "CenteredDataForPCA".impute_15 * -0.304574597879 + "CenteredDataForPCA".impute_16 * -0.164968813046 + "CenteredDataForPCA".impute_17 * -0.0228659369677 + "CenteredDataForPCA".impute_18 * 0.00795248224662 + "CenteredDataForPCA".impute_19 * -0.12275418894 + "CenteredDataForPCA".impute_20 * -0.0419963073299 + "CenteredDataForPCA".impute_21 * 0.306742226621 AS anoova_19, "CenteredDataForPCA".impute_2 * -8.55006609143e-17 + "CenteredDataForPCA".impute_3 * 2.45396813162e-17 + "CenteredDataForPCA".impute_4 * 0.384327429068 + "CenteredDataForPCA".impute_5 * -3.23546886463e-16 + "CenteredDataForPCA".impute_6 * 0.249904293208 + "CenteredDataForPCA".impute_7 * -9.39904397061e-17 + "CenteredDataForPCA".impute_8 * -1.23987912659e-16 + "CenteredDataForPCA".impute_9 * 0.517099430568 + "CenteredDataForPCA".impute_10 * -0.476202358905 + "CenteredDataForPCA".impute_11 * -1.9583137882e-16 + "CenteredDataForPCA".impute_12 * 0.122420537105 + "CenteredDataForPCA".impute_13 * 4.09859575595e-16 + "CenteredDataForPCA".impute_14 * -7.8722238728e-17 + "CenteredDataForPCA".impute_15 * -3.68497771855e-17 + "CenteredDataForPCA".impute_16 * -2.3162766666e-16 + "CenteredDataForPCA".impute_17 * -7.01462232951e-17 + "CenteredDataForPCA".impute_18 * 0.529804658224 + "CenteredDataForPCA".impute_19 * -3.75719539437e-16 + "CenteredDataForPCA".impute_20 * 1.44272395985e-16 + "CenteredDataForPCA".impute_21 * 1.30702519775e-16 AS anoova_20, "CenteredDataForPCA".impute_2 * -3.40984328628e-16 + "CenteredDataForPCA".impute_3 * -6.10753511131e-16 + "CenteredDataForPCA".impute_4 * 0.461999747875 + "CenteredDataForPCA".impute_5 * -1.25707857411e-16 + "CenteredDataForPCA".impute_6 * 0.579406004054 + "CenteredDataForPCA".impute_7 * -1.55150299635e-16 + "CenteredDataForPCA".impute_8 * 2.18365937783e-16 + "CenteredDataForPCA".impute_9 * -0.255073418505 + "CenteredDataForPCA".impute_10 * -0.167647908581 + "CenteredDataForPCA".impute_11 * -1.80800322435e-16 + "CenteredDataForPCA".impute_12 * -0.435928046957 + "CenteredDataForPCA".impute_13 * 3.54364936605e-16 + "CenteredDataForPCA".impute_14 * -1.76917003889e-17 + "CenteredDataForPCA".impute_15 * -1.73951187702e-16 + "CenteredDataForPCA".impute_16 * -1.07447595569e-16 + "CenteredDataForPCA".impute_17 * -1.41504038995e-16 + "CenteredDataForPCA".impute_18 * -0.409442771613 + "CenteredDataForPCA".impute_19 * -2.35116517687e-16 + "CenteredDataForPCA".impute_20 * 5.41653547235e-17 + "CenteredDataForPCA".impute_21 * -9.38771065621e-18 AS anoova_21 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.7226625084877014) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.6727070808410645) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.7226625084877014 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36 AS "Proba_0.0", -1.02165124753 AS "LogProba_0.0", 0.17 AS "Proba_1.0", -1.77195684193 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.22 AS "Proba_3.0", -1.51412773263 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 0.6727070808410645 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2727272727272727 AS "Proba_0.0", -1.29928298413 AS "LogProba_0.0", 0.12121212121212122 AS "Proba_1.0", -2.11021320035 AS "LogProba_1.0", 0.3484848484848485 AS "Proba_2.0", -1.0541605261 AS "LogProba_2.0", 0.25757575757575757 AS "Proba_3.0", -1.35644139797 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4146341463414634 AS "Proba_0.0", -0.880358722648 AS "LogProba_0.0", 0.17073170731707318 AS "Proba_1.0", -1.76766191765 AS "LogProba_1.0", 0.3902439024390244 AS "Proba_2.0", -0.940983344465 AS "LogProba_2.0", 0.024390243902439025 AS "Proba_3.0", -3.7135720667 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04 AS "Proba_0.0", -3.21887582487 AS "LogProba_0.0", 0.04 AS "Proba_1.0", -3.21887582487 AS "LogProba_1.0", 0.28 AS "Proba_2.0", -1.27296567581 AS "LogProba_2.0", 0.64 AS "Proba_3.0", -0.446287102628 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5294117647058824 AS "Proba_0.0", -0.63598876672 AS "LogProba_0.0", 0.2647058823529412 AS "Proba_1.0", -1.32913594728 AS "LogProba_1.0", 0.058823529411764705 AS "Proba_2.0", -2.83321334406 AS "LogProba_2.0", 0.14705882352941177 AS "Proba_3.0", -1.91692261218 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= -0.39285731315612793) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_10 <= -0.03715090826153755) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_9' AS feature, -0.39285731315612793 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.27 AS "Proba_0.0", -1.30933331998 AS "LogProba_0.0", 0.31 AS "Proba_1.0", -1.1711829815 AS "LogProba_1.0", 0.19 AS "Proba_2.0", -1.66073120682 AS "LogProba_2.0", 0.23 AS "Proba_3.0", -1.46967597006 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1702127659574468 AS "Proba_0.0", -1.77070606003 AS "LogProba_0.0", 0.23404255319148937 AS "Proba_1.0", -1.45225232891 AS "LogProba_1.0", 0.1702127659574468 AS "Proba_2.0", -1.77070606003 AS "LogProba_2.0", 0.425531914893617 AS "Proba_3.0", -0.854415328156 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_10' AS feature, -0.03715090826153755 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3584905660377358 AS "Proba_0.0", -1.02585293439 AS "LogProba_0.0", 0.37735849056603776 AS "Proba_1.0", -0.974559639998 AS "LogProba_1.0", 0.20754716981132076 AS "Proba_2.0", -1.57239664075 AS "LogProba_2.0", 0.05660377358490566 AS "Proba_3.0", -2.87167962488 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21739130434782608 AS "Proba_0.0", -1.5260563035 AS "LogProba_0.0", 0.391304347826087 AS "Proba_1.0", -0.938269638593 AS "LogProba_1.0", 0.34782608695652173 AS "Proba_2.0", -1.05605267425 AS "LogProba_2.0", 0.043478260869565216 AS "Proba_3.0", -3.13549421593 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4666666666666667 AS "Proba_0.0", -0.762140052047 AS "LogProba_0.0", 0.36666666666666664 AS "Proba_1.0", -1.00330210886 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 1.7401633262634277) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.15777820348739624) THEN 2 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= 0.2559877038002014) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.7401633262634277 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS "Proba_0.0", -1.42711635564 AS "LogProba_0.0", 0.3 AS "Proba_1.0", -1.20397280433 AS "LogProba_1.0", 0.28 AS "Proba_2.0", -1.27296567581 AS "LogProba_2.0", 0.18 AS "Proba_3.0", -1.71479842809 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.15777820348739624 AS threshold, 49 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.3625 AS "Proba_1.0", -1.01473080469 AS "LogProba_1.0", 0.3125 AS "Proba_2.0", -1.16315080981 AS "LogProba_2.0", 0.075 AS "Proba_3.0", -2.59026716545 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.45 AS "Proba_0.0", -0.798507696218 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.45 AS "Proba_2.0", -0.798507696218 AS "LogProba_2.0", 0.1 AS "Proba_3.0", -2.30258509299 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, 'anoova_9' AS feature, 0.2559877038002014 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18333333333333332 AS "Proba_0.0", -1.69644928942 AS "LogProba_0.0", 0.48333333333333334 AS "Proba_1.0", -0.727048732236 AS "LogProba_1.0", 0.26666666666666666 AS "Proba_2.0", -1.32175583998 AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2702702702702703 AS "Proba_0.0", -1.30833281965 AS "LogProba_0.0", 0.2702702702702703 AS "Proba_1.0", -1.30833281965 AS "LogProba_1.0", 0.35135135135135137 AS "Proba_2.0", -1.04596855518 AS "LogProba_2.0", 0.10810810810810811 AS "Proba_3.0", -2.22462355152 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.043478260869565216 AS "Proba_0.0", -3.13549421593 AS "LogProba_0.0", 0.8260869565217391 AS "Proba_1.0", -0.191055236763 AS "LogProba_1.0", 0.13043478260869565 AS "Proba_2.0", -2.03688192726 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.05 AS "Proba_1.0", -2.99573227355 AS "LogProba_1.0", 0.15 AS "Proba_2.0", -1.89711998489 AS "LogProba_2.0", 0.6 AS "Proba_3.0", -0.510825623766 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= -0.26578885316848755) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= -0.3404175937175751) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.26578885316848755 AS threshold, 61 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26 AS "Proba_0.0", -1.34707364797 AS "LogProba_0.0", 0.22 AS "Proba_1.0", -1.51412773263 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.27 AS "Proba_3.0", -1.30933331998 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12195121951219512 AS "Proba_0.0", -2.10413415427 AS "LogProba_0.0", 0.4878048780487805 AS "Proba_1.0", -0.71783979315 AS "LogProba_1.0", 0.17073170731707318 AS "Proba_2.0", -1.76766191765 AS "LogProba_2.0", 0.21951219512195122 AS "Proba_3.0", -1.51634748937 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_13' AS feature, -0.3404175937175751 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3559322033898305 AS "Proba_0.0", -1.03301500618 AS "LogProba_0.0", 0.03389830508474576 AS "Proba_1.0", -3.38439026335 AS "LogProba_1.0", 0.3050847457627119 AS "Proba_2.0", -1.18716568601 AS "LogProba_2.0", 0.3050847457627119 AS "Proba_3.0", -1.18716568601 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.4 AS "Proba_2.0", -0.916290731874 AS "LogProba_2.0", 0.43333333333333335 AS "Proba_3.0", -0.836248024201 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5517241379310345 AS "Proba_0.0", -0.594707107747 AS "LogProba_0.0", 0.06896551724137931 AS "Proba_1.0", -2.67414864943 AS "LogProba_1.0", 0.20689655172413793 AS "Proba_2.0", -1.57553636076 AS "LogProba_2.0", 0.1724137931034483 AS "Proba_3.0", -1.75785791755 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.470960408449173) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_14 <= 0.18614797294139862) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.470960408449173 AS threshold, 65 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34 AS "Proba_0.0", -1.07880966137 AS "LogProba_0.0", 0.21 AS "Proba_1.0", -1.56064774826 AS "LogProba_1.0", 0.23 AS "Proba_2.0", -1.46967597006 AS "LogProba_2.0", 0.22 AS "Proba_3.0", -1.51412773263 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_14' AS feature, 0.18614797294139862 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.45161290322580644 AS "Proba_0.0", -0.79492987487 AS "LogProba_0.0", 0.25806451612903225 AS "Proba_1.0", -1.35454566281 AS "LogProba_1.0", 0.25806451612903225 AS "Proba_2.0", -1.35454566281 AS "LogProba_2.0", 0.03225806451612903 AS "Proba_3.0", -3.43398720449 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.13333333333333333 AS "Proba_1.0", -2.01490302054 AS "LogProba_1.0", 0.13333333333333333 AS "Proba_2.0", -2.01490302054 AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.375 AS "Proba_1.0", -0.980829253012 AS "LogProba_1.0", 0.375 AS "Proba_2.0", -0.980829253012 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15789473684210525 AS "Proba_0.0", -1.8458266905 AS "LogProba_0.0", 0.13157894736842105 AS "Proba_1.0", -2.02814824729 AS "LogProba_1.0", 0.18421052631578946 AS "Proba_2.0", -1.69167601067 AS "LogProba_2.0", 0.5263157894736842 AS "Proba_3.0", -0.641853886172 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Proba_2.0" AS "Proba_2.0", "DT_node_data_4"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_4"."Proba_3.0" AS "Proba_3.0", "DT_node_data_4"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0.0" AS "Proba_4_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1.0" AS "Proba_4_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2.0" AS "Proba_4_2", "DT_Output_4"."LogProba_2.0" AS "LogProba_4_2", CAST(NULL AS FLOAT) AS "Score_4_3", "DT_Output_4"."Proba_3.0" AS "Proba_4_3", "DT_Output_4"."LogProba_3.0" AS "LogProba_4_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= 0.7410026788711548) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.5491085052490234) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_11 <= -0.3051071763038635) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_8' AS feature, 0.7410026788711548 AS threshold, 63 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.27 AS "Proba_0.0", -1.30933331998 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.31 AS "Proba_2.0", -1.1711829815 AS "LogProba_2.0", 0.22 AS "Proba_3.0", -1.51412773263 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 0.5491085052490234 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.35135135135135137 AS "Proba_0.0", -1.04596855518 AS "LogProba_0.0", 0.21621621621621623 AS "Proba_1.0", -1.53147637096 AS "LogProba_1.0", 0.24324324324324326 AS "Proba_2.0", -1.41369333531 AS "LogProba_2.0", 0.1891891891891892 AS "Proba_3.0", -1.66500776359 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, -0.3051071763038635 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.37777777777777777 AS "Proba_0.0", -0.973449145714 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.06666666666666667 AS "Proba_2.0", -2.7080502011 AS "LogProba_2.0", 0.2222222222222222 AS "Proba_3.0", -1.50407739678 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15 AS "Proba_0.0", -1.89711998489 AS "LogProba_0.0", 0.45 AS "Proba_1.0", -0.798507696218 AS "LogProba_1.0", 0.05 AS "Proba_2.0", -2.99573227355 AS "LogProba_2.0", 0.35 AS "Proba_3.0", -1.0498221245 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.56 AS "Proba_0.0", -0.579818495253 AS "LogProba_0.0", 0.24 AS "Proba_1.0", -1.42711635564 AS "LogProba_1.0", 0.08 AS "Proba_2.0", -2.52572864431 AS "LogProba_2.0", 0.12 AS "Proba_3.0", -2.1202635362 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3103448275862069 AS "Proba_0.0", -1.17007125265 AS "LogProba_0.0", 0.034482758620689655 AS "Proba_1.0", -3.36729582999 AS "LogProba_1.0", 0.5172413793103449 AS "Proba_2.0", -0.659245628884 AS "LogProba_2.0", 0.13793103448275862 AS "Proba_3.0", -1.98100146887 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.038461538461538464 AS "Proba_0.0", -3.25809653802 AS "LogProba_0.0", 0.15384615384615385 AS "Proba_1.0", -1.8718021769 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.3076923076923077 AS "Proba_3.0", -1.17865499634 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Proba_2.0" AS "Proba_2.0", "DT_node_data_5"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_5"."Proba_3.0" AS "Proba_3.0", "DT_node_data_5"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0.0" AS "Proba_5_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1.0" AS "Proba_5_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2.0" AS "Proba_5_2", "DT_Output_5"."LogProba_2.0" AS "LogProba_5_2", CAST(NULL AS FLOAT) AS "Score_5_3", "DT_Output_5"."Proba_3.0" AS "Proba_5_3", "DT_Output_5"."LogProba_3.0" AS "LogProba_5_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= 0.9920835494995117) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.31987714767456055) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, 0.9920835494995117 AS threshold, 58 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.31 AS "Proba_0.0", -1.1711829815 AS "LogProba_0.0", 0.24 AS "Proba_1.0", -1.42711635564 AS "LogProba_1.0", 0.23 AS "Proba_2.0", -1.46967597006 AS "LogProba_2.0", 0.22 AS "Proba_3.0", -1.51412773263 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 0.31987714767456055 AS threshold, 42 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36363636363636365 AS "Proba_0.0", -1.01160091168 AS "LogProba_0.0", 0.2987012987012987 AS "Proba_1.0", -1.20831120592 AS "LogProba_1.0", 0.11688311688311688 AS "Proba_2.0", -2.14658084452 AS "LogProba_2.0", 0.22077922077922077 AS "Proba_3.0", -1.5105920778 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5581395348837209 AS "Proba_0.0", -0.583146285346 AS "LogProba_0.0", 0.23255813953488372 AS "Proba_1.0", -1.4586150227 AS "LogProba_1.0", 0.06976744186046512 AS "Proba_2.0", -2.66258782703 AS "LogProba_2.0", 0.13953488372093023 AS "Proba_3.0", -1.96944064647 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11764705882352941 AS "Proba_0.0", -2.1400661635 AS "LogProba_0.0", 0.38235294117647056 AS "Proba_1.0", -0.961411167155 AS "LogProba_1.0", 0.17647058823529413 AS "Proba_2.0", -1.73460105539 AS "LogProba_2.0", 0.3235294117647059 AS "Proba_3.0", -1.12846525182 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13043478260869565 AS "Proba_0.0", -2.03688192726 AS "LogProba_0.0", 0.043478260869565216 AS "Proba_1.0", -3.13549421593 AS "LogProba_1.0", 0.6086956521739131 AS "Proba_2.0", -0.496436886314 AS "LogProba_2.0", 0.21739130434782608 AS "Proba_3.0", -1.5260563035 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Proba_2.0" AS "Proba_2.0", "DT_node_data_6"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_6"."Proba_3.0" AS "Proba_3.0", "DT_node_data_6"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0.0" AS "Proba_6_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1.0" AS "Proba_6_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2.0" AS "Proba_6_2", "DT_Output_6"."LogProba_2.0" AS "LogProba_6_2", CAST(NULL AS FLOAT) AS "Score_6_3", "DT_Output_6"."Proba_3.0" AS "Proba_6_3", "DT_Output_6"."LogProba_3.0" AS "LogProba_6_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.5491085052490234) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.5467591881752014) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, 0.5491085052490234 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26 AS "Proba_0.0", -1.34707364797 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.27 AS "Proba_2.0", -1.30933331998 AS "LogProba_2.0", 0.21 AS "Proba_3.0", -1.56064774826 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_4' AS feature, -0.5467591881752014 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.2753623188405797 AS "Proba_1.0", -1.28966752543 AS "LogProba_1.0", 0.14492753623188406 AS "Proba_2.0", -1.9315214116 AS "LogProba_2.0", 0.2463768115942029 AS "Proba_3.0", -1.40089316054 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5384615384615384 AS "Proba_0.0", -0.619039208406 AS "LogProba_0.0", 0.23076923076923078 AS "Proba_1.0", -1.46633706879 AS "LogProba_1.0", 0.038461538461538464 AS "Proba_2.0", -3.25809653802 AS "LogProba_2.0", 0.19230769230769232 AS "Proba_3.0", -1.64865862559 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.20930232558139536 AS "Proba_0.0", -1.56397553836 AS "LogProba_0.0", 0.3023255813953488 AS "Proba_1.0", -1.19625075823 AS "LogProba_1.0", 0.20930232558139536 AS "Proba_2.0", -1.56397553836 AS "LogProba_2.0", 0.27906976744186046 AS "Proba_3.0", -1.27629346591 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0967741935483871 AS "Proba_0.0", -2.33537491582 AS "LogProba_0.0", 0.22580645161290322 AS "Proba_1.0", -1.48807705543 AS "LogProba_1.0", 0.5483870967741935 AS "Proba_2.0", -0.600773860429 AS "LogProba_2.0", 0.12903225806451613 AS "Proba_3.0", -2.04769284337 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Proba_2.0" AS "Proba_2.0", "DT_node_data_7"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_7"."Proba_3.0" AS "Proba_3.0", "DT_node_data_7"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0.0" AS "Proba_7_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1.0" AS "Proba_7_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2.0" AS "Proba_7_2", "DT_Output_7"."LogProba_2.0" AS "LogProba_7_2", CAST(NULL AS FLOAT) AS "Score_7_3", "DT_Output_7"."Proba_3.0" AS "Proba_7_3", "DT_Output_7"."LogProba_3.0" AS "LogProba_7_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 0.9680184125900269) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= 0.3054979741573334) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 <= -0.145382821559906) THEN 3 ELSE 4 END ELSE 5 END ELSE 6 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.9680184125900269 AS threshold, 65 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32 AS "Proba_0.0", -1.13943428319 AS "LogProba_0.0", 0.19 AS "Proba_1.0", -1.66073120682 AS "LogProba_1.0", 0.19 AS "Proba_2.0", -1.66073120682 AS "LogProba_2.0", 0.3 AS "Proba_3.0", -1.20397280433 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_19' AS feature, 0.3054979741573334 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.22857142857142856 AS "Proba_1.0", -1.47590651981 AS "LogProba_1.0", 0.2714285714285714 AS "Proba_2.0", -1.30405626288 AS "LogProba_2.0", 0.3 AS "Proba_3.0", -1.20397280433 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_8' AS feature, -0.145382821559906 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2553191489361702 AS "Proba_0.0", -1.36524095192 AS "LogProba_0.0", 0.2765957446808511 AS "Proba_1.0", -1.28519824425 AS "LogProba_1.0", 0.2978723404255319 AS "Proba_2.0", -1.21109027209 AS "LogProba_2.0", 0.1702127659574468 AS "Proba_3.0", -1.77070606003 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4166666666666667 AS "Proba_0.0", -0.875468737354 AS "LogProba_0.0", 0.4583333333333333 AS "Proba_1.0", -0.78015855755 AS "LogProba_1.0", 0.041666666666666664 AS "Proba_2.0", -3.17805383035 AS "LogProba_2.0", 0.08333333333333333 AS "Proba_3.0", -2.48490664979 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08695652173913043 AS "Proba_0.0", -2.44234703537 AS "LogProba_0.0", 0.08695652173913043 AS "Proba_1.0", -2.44234703537 AS "LogProba_1.0", 0.5652173913043478 AS "Proba_2.0", -0.570544858468 AS "LogProba_2.0", 0.2608695652173913 AS "Proba_3.0", -1.3437347467 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08695652173913043 AS "Proba_0.0", -2.44234703537 AS "LogProba_0.0", 0.13043478260869565 AS "Proba_1.0", -2.03688192726 AS "LogProba_1.0", 0.21739130434782608 AS "Proba_2.0", -1.5260563035 AS "LogProba_2.0", 0.5652173913043478 AS "Proba_3.0", -0.570544858468 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6 AS "Proba_0.0", -0.510825623766 AS "LogProba_0.0", 0.1 AS "Proba_1.0", -2.30258509299 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3 AS "Proba_3.0", -1.20397280433 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Proba_2.0" AS "Proba_2.0", "DT_node_data_8"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_8"."Proba_3.0" AS "Proba_3.0", "DT_node_data_8"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0.0" AS "Proba_8_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1.0" AS "Proba_8_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2.0" AS "Proba_8_2", "DT_Output_8"."LogProba_2.0" AS "LogProba_8_2", CAST(NULL AS FLOAT) AS "Score_8_3", "DT_Output_8"."Proba_3.0" AS "Proba_8_3", "DT_Output_8"."LogProba_3.0" AS "LogProba_8_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 1.4220541715621948) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= -0.35141244530677795) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.4220541715621948 AS threshold, 61 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26 AS "Proba_0.0", -1.34707364797 AS "LogProba_0.0", 0.18 AS "Proba_1.0", -1.71479842809 AS "LogProba_1.0", 0.27 AS "Proba_2.0", -1.30933331998 AS "LogProba_2.0", 0.29 AS "Proba_3.0", -1.237874356 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, -0.35141244530677795 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2602739726027397 AS "Proba_0.0", -1.34602046198 AS "LogProba_0.0", 0.2465753424657534 AS "Proba_1.0", -1.40008768325 AS "LogProba_1.0", 0.3561643835616438 AS "Proba_2.0", -1.03236290313 AS "LogProba_2.0", 0.136986301369863 AS "Proba_3.0", -1.98787434815 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS "Proba_0.0", -1.42711635564 AS "LogProba_0.0", 0.52 AS "Proba_1.0", -0.653926467407 AS "LogProba_1.0", 0.08 AS "Proba_2.0", -2.52572864431 AS "LogProba_2.0", 0.16 AS "Proba_3.0", -1.83258146375 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2708333333333333 AS "Proba_0.0", -1.30625165345 AS "LogProba_0.0", 0.10416666666666667 AS "Proba_1.0", -2.26176309847 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25925925925925924 AS "Proba_0.0", -1.34992671695 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.037037037037037035 AS "Proba_2.0", -3.295836866 AS "LogProba_2.0", 0.7037037037037037 AS "Proba_3.0", -0.351397886838 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Proba_2.0" AS "Proba_2.0", "DT_node_data_9"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_9"."Proba_3.0" AS "Proba_3.0", "DT_node_data_9"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0.0" AS "Proba_9_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1.0" AS "Proba_9_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2.0" AS "Proba_9_2", "DT_Output_9"."LogProba_2.0" AS "LogProba_9_2", CAST(NULL AS FLOAT) AS "Score_9_3", "DT_Output_9"."Proba_3.0" AS "Proba_9_3", "DT_Output_9"."LogProba_3.0" AS "LogProba_9_3" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_4"."Score_4_2" AS "Score_4_2", "RF_Tree_4"."Proba_4_2" AS "Proba_4_2", "RF_Tree_4"."LogProba_4_2" AS "LogProba_4_2", "RF_Tree_4"."Score_4_3" AS "Score_4_3", "RF_Tree_4"."Proba_4_3" AS "Proba_4_3", "RF_Tree_4"."LogProba_4_3" AS "LogProba_4_3", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_5"."Score_5_2" AS "Score_5_2", "RF_Tree_5"."Proba_5_2" AS "Proba_5_2", "RF_Tree_5"."LogProba_5_2" AS "LogProba_5_2", "RF_Tree_5"."Score_5_3" AS "Score_5_3", "RF_Tree_5"."Proba_5_3" AS "Proba_5_3", "RF_Tree_5"."LogProba_5_3" AS "LogProba_5_3", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_6"."Score_6_2" AS "Score_6_2", "RF_Tree_6"."Proba_6_2" AS "Proba_6_2", "RF_Tree_6"."LogProba_6_2" AS "LogProba_6_2", "RF_Tree_6"."Score_6_3" AS "Score_6_3", "RF_Tree_6"."Proba_6_3" AS "Proba_6_3", "RF_Tree_6"."LogProba_6_3" AS "LogProba_6_3", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_7"."Score_7_2" AS "Score_7_2", "RF_Tree_7"."Proba_7_2" AS "Proba_7_2", "RF_Tree_7"."LogProba_7_2" AS "LogProba_7_2", "RF_Tree_7"."Score_7_3" AS "Score_7_3", "RF_Tree_7"."Proba_7_3" AS "Proba_7_3", "RF_Tree_7"."LogProba_7_3" AS "LogProba_7_3", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_8"."Score_8_2" AS "Score_8_2", "RF_Tree_8"."Proba_8_2" AS "Proba_8_2", "RF_Tree_8"."LogProba_8_2" AS "LogProba_8_2", "RF_Tree_8"."Score_8_3" AS "Score_8_3", "RF_Tree_8"."Proba_8_3" AS "Proba_8_3", "RF_Tree_8"."LogProba_8_3" AS "LogProba_8_3", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1", "RF_Tree_9"."Score_9_2" AS "Score_9_2", "RF_Tree_9"."Proba_9_2" AS "Proba_9_2", "RF_Tree_9"."LogProba_9_2" AS "LogProba_9_2", "RF_Tree_9"."Score_9_3" AS "Score_9_3", "RF_Tree_9"."Proba_9_3" AS "Proba_9_3", "RF_Tree_9"."LogProba_9_3" AS "LogProba_9_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 10 + "RF_Join_CTE"."Score_1_2" / 10 + "RF_Join_CTE"."Score_2_2" / 10 + "RF_Join_CTE"."Score_3_2" / 10 + "RF_Join_CTE"."Score_4_2" / 10 + "RF_Join_CTE"."Score_5_2" / 10 + "RF_Join_CTE"."Score_6_2" / 10 + "RF_Join_CTE"."Score_7_2" / 10 + "RF_Join_CTE"."Score_8_2" / 10 + "RF_Join_CTE"."Score_9_2" / 10 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 10 + "RF_Join_CTE"."Proba_1_2" / 10 + "RF_Join_CTE"."Proba_2_2" / 10 + "RF_Join_CTE"."Proba_3_2" / 10 + "RF_Join_CTE"."Proba_4_2" / 10 + "RF_Join_CTE"."Proba_5_2" / 10 + "RF_Join_CTE"."Proba_6_2" / 10 + "RF_Join_CTE"."Proba_7_2" / 10 + "RF_Join_CTE"."Proba_8_2" / 10 + "RF_Join_CTE"."Proba_9_2" / 10 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 10 + "RF_Join_CTE"."LogProba_1_2" / 10 + "RF_Join_CTE"."LogProba_2_2" / 10 + "RF_Join_CTE"."LogProba_3_2" / 10 + "RF_Join_CTE"."LogProba_4_2" / 10 + "RF_Join_CTE"."LogProba_5_2" / 10 + "RF_Join_CTE"."LogProba_6_2" / 10 + "RF_Join_CTE"."LogProba_7_2" / 10 + "RF_Join_CTE"."LogProba_8_2" / 10 + "RF_Join_CTE"."LogProba_9_2" / 10 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 10 + "RF_Join_CTE"."Score_1_3" / 10 + "RF_Join_CTE"."Score_2_3" / 10 + "RF_Join_CTE"."Score_3_3" / 10 + "RF_Join_CTE"."Score_4_3" / 10 + "RF_Join_CTE"."Score_5_3" / 10 + "RF_Join_CTE"."Score_6_3" / 10 + "RF_Join_CTE"."Score_7_3" / 10 + "RF_Join_CTE"."Score_8_3" / 10 + "RF_Join_CTE"."Score_9_3" / 10 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 10 + "RF_Join_CTE"."Proba_1_3" / 10 + "RF_Join_CTE"."Proba_2_3" / 10 + "RF_Join_CTE"."Proba_3_3" / 10 + "RF_Join_CTE"."Proba_4_3" / 10 + "RF_Join_CTE"."Proba_5_3" / 10 + "RF_Join_CTE"."Proba_6_3" / 10 + "RF_Join_CTE"."Proba_7_3" / 10 + "RF_Join_CTE"."Proba_8_3" / 10 + "RF_Join_CTE"."Proba_9_3" / 10 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 10 + "RF_Join_CTE"."LogProba_1_3" / 10 + "RF_Join_CTE"."LogProba_2_3" / 10 + "RF_Join_CTE"."LogProba_3_3" / 10 + "RF_Join_CTE"."LogProba_4_3" / 10 + "RF_Join_CTE"."LogProba_5_3" / 10 + "RF_Join_CTE"."LogProba_6_3" / 10 + "RF_Join_CTE"."LogProba_7_3" / 10 + "RF_Join_CTE"."LogProba_8_3" / 10 + "RF_Join_CTE"."LogProba_9_3" / 10 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte