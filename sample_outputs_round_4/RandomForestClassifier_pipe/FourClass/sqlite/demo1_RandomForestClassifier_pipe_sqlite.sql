-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.056161888068 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0618761641748 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.514061156776 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.0870264626118 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.00375132154462 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0496048429773 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0809219198659 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0489497249493 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0174173967391 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.075844568695 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.0632587136799 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.329786942729 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.398311649977 ELSE "ADS"."Feature_12" END AS impute_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.0213189406658 ELSE "ADS"."Feature_13" END AS impute_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.192614087718 ELSE "ADS"."Feature_14" END AS impute_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.236400791467 ELSE "ADS"."Feature_15" END AS impute_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.0542307154531 ELSE "ADS"."Feature_16" END AS impute_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.00407849045048 ELSE "ADS"."Feature_17" END AS impute_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.0856862276025 ELSE "ADS"."Feature_18" END AS impute_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.182115008831 ELSE "ADS"."Feature_19" END AS impute_21 
FROM "INPUT_DATA" AS "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 0.056161888068 AS impute_2, "ADS_imp_1_OUT".impute_3 - 0.0618761641748 AS impute_3, "ADS_imp_1_OUT".impute_4 - -0.514061156776 AS impute_4, "ADS_imp_1_OUT".impute_5 - -0.0870264626118 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.00375132154462 AS impute_6, "ADS_imp_1_OUT".impute_7 - -0.0496048429773 AS impute_7, "ADS_imp_1_OUT".impute_8 - 0.0809219198659 AS impute_8, "ADS_imp_1_OUT".impute_9 - -0.0489497249493 AS impute_9, "ADS_imp_1_OUT".impute_10 - -0.0174173967391 AS impute_10, "ADS_imp_1_OUT".impute_11 - -0.075844568695 AS impute_11, "ADS_imp_1_OUT".impute_12 - -0.0632587136799 AS impute_12, "ADS_imp_1_OUT".impute_13 - 0.329786942729 AS impute_13, "ADS_imp_1_OUT".impute_14 - -0.398311649977 AS impute_14, "ADS_imp_1_OUT".impute_15 - 0.0213189406658 AS impute_15, "ADS_imp_1_OUT".impute_16 - 0.192614087718 AS impute_16, "ADS_imp_1_OUT".impute_17 - -0.236400791467 AS impute_17, "ADS_imp_1_OUT".impute_18 - -0.0542307154531 AS impute_18, "ADS_imp_1_OUT".impute_19 - -0.00407849045048 AS impute_19, "ADS_imp_1_OUT".impute_20 - -0.0856862276025 AS impute_20, "ADS_imp_1_OUT".impute_21 - 0.182115008831 AS impute_21 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.0126139169784 + "CenteredDataForPCA".impute_3 * 0.0725797426948 + "CenteredDataForPCA".impute_4 * -0.103186086345 + "CenteredDataForPCA".impute_5 * -0.0485757376539 + "CenteredDataForPCA".impute_6 * 0.00142451732506 + "CenteredDataForPCA".impute_7 * 0.00776007925621 + "CenteredDataForPCA".impute_8 * -0.130776380047 + "CenteredDataForPCA".impute_9 * -0.0365037808586 + "CenteredDataForPCA".impute_10 * 0.0328941541569 + "CenteredDataForPCA".impute_11 * -0.0362739127351 + "CenteredDataForPCA".impute_12 * 0.0832833725066 + "CenteredDataForPCA".impute_13 * -0.383805739973 + "CenteredDataForPCA".impute_14 * -0.33456515551 + "CenteredDataForPCA".impute_15 * -0.00649101364312 + "CenteredDataForPCA".impute_16 * 0.0234986597811 + "CenteredDataForPCA".impute_17 * 0.0350791510782 + "CenteredDataForPCA".impute_18 * -0.0448337525313 + "CenteredDataForPCA".impute_19 * 0.00450162426341 + "CenteredDataForPCA".impute_20 * 0.204909447336 + "CenteredDataForPCA".impute_21 * -0.805388821247 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.0788580308757 + "CenteredDataForPCA".impute_3 * -0.0160479888057 + "CenteredDataForPCA".impute_4 * 0.0885346960996 + "CenteredDataForPCA".impute_5 * -0.224682308228 + "CenteredDataForPCA".impute_6 * 0.0170013631896 + "CenteredDataForPCA".impute_7 * -0.0203571503491 + "CenteredDataForPCA".impute_8 * 0.241437014208 + "CenteredDataForPCA".impute_9 * 0.071353164215 + "CenteredDataForPCA".impute_10 * 0.141846322422 + "CenteredDataForPCA".impute_11 * -0.0303744932904 + "CenteredDataForPCA".impute_12 * -0.0209714993727 + "CenteredDataForPCA".impute_13 * 0.232768873105 + "CenteredDataForPCA".impute_14 * -0.756724817811 + "CenteredDataForPCA".impute_15 * -0.165425393336 + "CenteredDataForPCA".impute_16 * 0.011401465849 + "CenteredDataForPCA".impute_17 * -0.109247696516 + "CenteredDataForPCA".impute_18 * -0.149319909496 + "CenteredDataForPCA".impute_19 * -0.0701694089632 + "CenteredDataForPCA".impute_20 * -0.38821788625 + "CenteredDataForPCA".impute_21 * 0.0738665166623 AS anoova_3, "CenteredDataForPCA".impute_2 * 0.0774611814808 + "CenteredDataForPCA".impute_3 * -0.0771622158493 + "CenteredDataForPCA".impute_4 * 0.116983902806 + "CenteredDataForPCA".impute_5 * 0.135396370331 + "CenteredDataForPCA".impute_6 * 0.112944721806 + "CenteredDataForPCA".impute_7 * -0.178728052132 + "CenteredDataForPCA".impute_8 * -0.0648496219859 + "CenteredDataForPCA".impute_9 * 0.0199519304337 + "CenteredDataForPCA".impute_10 * -0.11906616151 + "CenteredDataForPCA".impute_11 * 0.0577869708141 + "CenteredDataForPCA".impute_12 * -0.176988939146 + "CenteredDataForPCA".impute_13 * 0.637493205957 + "CenteredDataForPCA".impute_14 * -0.185453297547 + "CenteredDataForPCA".impute_15 * 0.0189430356922 + "CenteredDataForPCA".impute_16 * 0.139692125161 + "CenteredDataForPCA".impute_17 * -0.0303565814961 + "CenteredDataForPCA".impute_18 * 0.0217213599198 + "CenteredDataForPCA".impute_19 * 0.0400719774087 + "CenteredDataForPCA".impute_20 * 0.617315636938 + "CenteredDataForPCA".impute_21 * -0.114640559381 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.105718340858 + "CenteredDataForPCA".impute_3 * 0.0499208989041 + "CenteredDataForPCA".impute_4 * -0.857722930619 + "CenteredDataForPCA".impute_5 * 0.11738106148 + "CenteredDataForPCA".impute_6 * 0.204465032287 + "CenteredDataForPCA".impute_7 * -0.0725728966029 + "CenteredDataForPCA".impute_8 * -0.0444398568108 + "CenteredDataForPCA".impute_9 * -0.161556605834 + "CenteredDataForPCA".impute_10 * 0.145567420362 + "CenteredDataForPCA".impute_11 * -0.159193809586 + "CenteredDataForPCA".impute_12 * -0.142700611757 + "CenteredDataForPCA".impute_13 * 0.08764726816 + "CenteredDataForPCA".impute_14 * -0.0756756554189 + "CenteredDataForPCA".impute_15 * 0.0545763828656 + "CenteredDataForPCA".impute_16 * 0.037215170409 + "CenteredDataForPCA".impute_17 * 0.199300475634 + "CenteredDataForPCA".impute_18 * -0.143434198579 + "CenteredDataForPCA".impute_19 * -0.0282149514121 + "CenteredDataForPCA".impute_20 * -0.00929871892706 + "CenteredDataForPCA".impute_21 * 0.12598166329 AS anoova_5, "CenteredDataForPCA".impute_2 * -0.0953274026511 + "CenteredDataForPCA".impute_3 * -0.125943010808 + "CenteredDataForPCA".impute_4 * 0.169384018814 + "CenteredDataForPCA".impute_5 * 0.615657558009 + "CenteredDataForPCA".impute_6 * 0.46916390615 + "CenteredDataForPCA".impute_7 * 0.302382215755 + "CenteredDataForPCA".impute_8 * 0.0727771191384 + "CenteredDataForPCA".impute_9 * -0.162877904755 + "CenteredDataForPCA".impute_10 * -0.193130953611 + "CenteredDataForPCA".impute_11 * -0.165261219934 + "CenteredDataForPCA".impute_12 * -0.00702966639741 + "CenteredDataForPCA".impute_13 * -0.0520017631613 + "CenteredDataForPCA".impute_14 * -0.173203887331 + "CenteredDataForPCA".impute_15 * 0.222823671665 + "CenteredDataForPCA".impute_16 * -0.16771583782 + "CenteredDataForPCA".impute_17 * -0.0834051464218 + "CenteredDataForPCA".impute_18 * -0.00436528236081 + "CenteredDataForPCA".impute_19 * 0.118741115045 + "CenteredDataForPCA".impute_20 * -0.164161490443 + "CenteredDataForPCA".impute_21 * -0.027989980028 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.0349240581346 + "CenteredDataForPCA".impute_3 * -0.203888441276 + "CenteredDataForPCA".impute_4 * -0.187739572129 + "CenteredDataForPCA".impute_5 * 0.0760004826995 + "CenteredDataForPCA".impute_6 * 0.00730989338425 + "CenteredDataForPCA".impute_7 * -0.265691171355 + "CenteredDataForPCA".impute_8 * 0.00750698409504 + "CenteredDataForPCA".impute_9 * 0.222612010033 + "CenteredDataForPCA".impute_10 * -0.285659439914 + "CenteredDataForPCA".impute_11 * 0.087750484693 + "CenteredDataForPCA".impute_12 * -0.39803780687 + "CenteredDataForPCA".impute_13 * -0.135383761329 + "CenteredDataForPCA".impute_14 * -0.0826538561754 + "CenteredDataForPCA".impute_15 * -0.164488535532 + "CenteredDataForPCA".impute_16 * -0.190668622161 + "CenteredDataForPCA".impute_17 * -0.171748549877 + "CenteredDataForPCA".impute_18 * 0.605105138936 + "CenteredDataForPCA".impute_19 * -0.213374228882 + "CenteredDataForPCA".impute_20 * -0.126287371651 + "CenteredDataForPCA".impute_21 * -0.0499605812596 AS anoova_7, "CenteredDataForPCA".impute_2 * -0.226023363726 + "CenteredDataForPCA".impute_3 * -0.118275053811 + "CenteredDataForPCA".impute_4 * 0.232821906217 + "CenteredDataForPCA".impute_5 * -0.25575094923 + "CenteredDataForPCA".impute_6 * 0.185462454721 + "CenteredDataForPCA".impute_7 * -0.231816311606 + "CenteredDataForPCA".impute_8 * 0.0281053188853 + "CenteredDataForPCA".impute_9 * 0.0294712482264 + "CenteredDataForPCA".impute_10 * -0.214461047415 + "CenteredDataForPCA".impute_11 * -0.438302625783 + "CenteredDataForPCA".impute_12 * -0.215271102821 + "CenteredDataForPCA".impute_13 * -0.0555740045365 + "CenteredDataForPCA".impute_14 * 0.0128792770152 + "CenteredDataForPCA".impute_15 * 0.104839219029 + "CenteredDataForPCA".impute_16 * 0.0974869957454 + "CenteredDataForPCA".impute_17 * 0.628853935024 + "CenteredDataForPCA".impute_18 * -0.0699572435454 + "CenteredDataForPCA".impute_19 * -0.115028478128 + "CenteredDataForPCA".impute_20 * -0.0604435451025 + "CenteredDataForPCA".impute_21 * -0.00929042874378 AS anoova_8, "CenteredDataForPCA".impute_2 * -0.594257899701 + "CenteredDataForPCA".impute_3 * -0.249316196032 + "CenteredDataForPCA".impute_4 * -0.0105824943933 + "CenteredDataForPCA".impute_5 * -0.209567692678 + "CenteredDataForPCA".impute_6 * 0.0972448486997 + "CenteredDataForPCA".impute_7 * 0.0107389390956 + "CenteredDataForPCA".impute_8 * -0.010649538926 + "CenteredDataForPCA".impute_9 * -0.324714016482 + "CenteredDataForPCA".impute_10 * 0.444343937383 + "CenteredDataForPCA".impute_11 * 0.0767289429514 + "CenteredDataForPCA".impute_12 * -0.20027879072 + "CenteredDataForPCA".impute_13 * 0.026387319892 + "CenteredDataForPCA".impute_14 * -0.00495044406312 + "CenteredDataForPCA".impute_15 * -0.0366697561814 + "CenteredDataForPCA".impute_16 * -0.0176861445887 + "CenteredDataForPCA".impute_17 * -0.112405682083 + "CenteredDataForPCA".impute_18 * 0.187162950608 + "CenteredDataForPCA".impute_19 * 0.360134820812 + "CenteredDataForPCA".impute_20 * 0.0443858764208 + "CenteredDataForPCA".impute_21 * -0.0198230963998 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.263627381116 + "CenteredDataForPCA".impute_3 * -0.052306076836 + "CenteredDataForPCA".impute_4 * 0.127842765312 + "CenteredDataForPCA".impute_5 * 0.137679165603 + "CenteredDataForPCA".impute_6 * 0.207987875999 + "CenteredDataForPCA".impute_7 * -0.475290321968 + "CenteredDataForPCA".impute_8 * 0.0145415544209 + "CenteredDataForPCA".impute_9 * 0.0144726046588 + "CenteredDataForPCA".impute_10 * 0.44010964593 + "CenteredDataForPCA".impute_11 * -0.095654326259 + "CenteredDataForPCA".impute_12 * 0.461227146333 + "CenteredDataForPCA".impute_13 * 0.0141450248626 + "CenteredDataForPCA".impute_14 * 0.00529344640802 + "CenteredDataForPCA".impute_15 * 0.0051829360512 + "CenteredDataForPCA".impute_16 * -0.24626812605 + "CenteredDataForPCA".impute_17 * 0.183267251809 + "CenteredDataForPCA".impute_18 * 0.329844905374 + "CenteredDataForPCA".impute_19 * 0.062418770884 + "CenteredDataForPCA".impute_20 * -0.00479059051421 + "CenteredDataForPCA".impute_21 * 0.01006514432 AS anoova_10, "CenteredDataForPCA".impute_2 * -0.254667399057 + "CenteredDataForPCA".impute_3 * -0.313462880207 + "CenteredDataForPCA".impute_4 * -0.184485053138 + "CenteredDataForPCA".impute_5 * 0.102629529626 + "CenteredDataForPCA".impute_6 * -0.122405729696 + "CenteredDataForPCA".impute_7 * 0.180003027034 + "CenteredDataForPCA".impute_8 * 0.00575469449631 + "CenteredDataForPCA".impute_9 * 0.0721720238434 + "CenteredDataForPCA".impute_10 * -0.288496236572 + "CenteredDataForPCA".impute_11 * 0.24419383564 + "CenteredDataForPCA".impute_12 * 0.458864127227 + "CenteredDataForPCA".impute_13 * 0.111104079867 + "CenteredDataForPCA".impute_14 * -0.111030681345 + "CenteredDataForPCA".impute_15 * -0.417181081232 + "CenteredDataForPCA".impute_16 * -0.0643008438348 + "CenteredDataForPCA".impute_17 * 0.407776801182 + "CenteredDataForPCA".impute_18 * 0.0355087554792 + "CenteredDataForPCA".impute_19 * 0.120804757565 + "CenteredDataForPCA".impute_20 * 0.0259112500547 + "CenteredDataForPCA".impute_21 * 0.0249050775155 AS anoova_11, "CenteredDataForPCA".impute_2 * 0.450881987244 + "CenteredDataForPCA".impute_3 * -0.337375142894 + "CenteredDataForPCA".impute_4 * 0.12007363051 + "CenteredDataForPCA".impute_5 * -0.20186710133 + "CenteredDataForPCA".impute_6 * 0.251082146109 + "CenteredDataForPCA".impute_7 * 0.31211557087 + "CenteredDataForPCA".impute_8 * -0.0231419296285 + "CenteredDataForPCA".impute_9 * -0.175439812679 + "CenteredDataForPCA".impute_10 * 0.16062016665 + "CenteredDataForPCA".impute_11 * 0.378276329144 + "CenteredDataForPCA".impute_12 * -0.279251455683 + "CenteredDataForPCA".impute_13 * -0.0530863643997 + "CenteredDataForPCA".impute_14 * 0.0929726021304 + "CenteredDataForPCA".impute_15 * -0.100200436945 + "CenteredDataForPCA".impute_16 * -0.245276326915 + "CenteredDataForPCA".impute_17 * 0.255754761912 + "CenteredDataForPCA".impute_18 * -0.0771549484413 + "CenteredDataForPCA".impute_19 * -0.178802133583 + "CenteredDataForPCA".impute_20 * 0.045949528808 + "CenteredDataForPCA".impute_21 * -0.044289735725 AS anoova_12, "CenteredDataForPCA".impute_2 * -0.245118309254 + "CenteredDataForPCA".impute_3 * -0.20409714197 + "CenteredDataForPCA".impute_4 * -0.0622768401777 + "CenteredDataForPCA".impute_5 * -0.10621846986 + "CenteredDataForPCA".impute_6 * -0.135897108776 + "CenteredDataForPCA".impute_7 * 0.119251169233 + "CenteredDataForPCA".impute_8 * -0.0362143672019 + "CenteredDataForPCA".impute_9 * -0.121109074561 + "CenteredDataForPCA".impute_10 * 0.0631854259961 + "CenteredDataForPCA".impute_11 * -0.267761205979 + "CenteredDataForPCA".impute_12 * 0.229742441743 + "CenteredDataForPCA".impute_13 * 0.149595011765 + "CenteredDataForPCA".impute_14 * 0.00891914977666 + "CenteredDataForPCA".impute_15 * 0.152559184317 + "CenteredDataForPCA".impute_16 * -0.416825587543 + "CenteredDataForPCA".impute_17 * -0.198401347928 + "CenteredDataForPCA".impute_18 * -0.0724513329824 + "CenteredDataForPCA".impute_19 * -0.641633541632 + "CenteredDataForPCA".impute_20 * 0.173459775696 + "CenteredDataForPCA".impute_21 * -0.00961863201446 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.211950313446 + "CenteredDataForPCA".impute_3 * -0.1327558775 + "CenteredDataForPCA".impute_4 * -0.0873683761299 + "CenteredDataForPCA".impute_5 * -0.169989463612 + "CenteredDataForPCA".impute_6 * -0.174372621379 + "CenteredDataForPCA".impute_7 * 0.531107720048 + "CenteredDataForPCA".impute_8 * -0.00354727955777 + "CenteredDataForPCA".impute_9 * 0.297805618484 + "CenteredDataForPCA".impute_10 * 0.116222484475 + "CenteredDataForPCA".impute_11 * -0.362600439539 + "CenteredDataForPCA".impute_12 * 0.0278940617819 + "CenteredDataForPCA".impute_13 * 0.107920366293 + "CenteredDataForPCA".impute_14 * -0.0687137923305 + "CenteredDataForPCA".impute_15 * 0.265723172955 + "CenteredDataForPCA".impute_16 * 0.0906464221183 + "CenteredDataForPCA".impute_17 * 0.092563356382 + "CenteredDataForPCA".impute_18 * 0.445727291443 + "CenteredDataForPCA".impute_19 * 0.217409891498 + "CenteredDataForPCA".impute_20 * 0.0652966175602 + "CenteredDataForPCA".impute_21 * 0.00331734094347 AS anoova_14, "CenteredDataForPCA".impute_2 * -0.162178709041 + "CenteredDataForPCA".impute_3 * -0.249119849423 + "CenteredDataForPCA".impute_4 * -0.0574805885539 + "CenteredDataForPCA".impute_5 * -0.0048688881195 + "CenteredDataForPCA".impute_6 * 0.32441471304 + "CenteredDataForPCA".impute_7 * -0.00207768558988 + "CenteredDataForPCA".impute_8 * -0.00034842307194 + "CenteredDataForPCA".impute_9 * 0.332750328905 + "CenteredDataForPCA".impute_10 * 0.150102242645 + "CenteredDataForPCA".impute_11 * 0.328128131769 + "CenteredDataForPCA".impute_12 * 0.197068719278 + "CenteredDataForPCA".impute_13 * -0.0690044807018 + "CenteredDataForPCA".impute_14 * 0.0143858721764 + "CenteredDataForPCA".impute_15 * 0.313895778775 + "CenteredDataForPCA".impute_16 * 0.54990797247 + "CenteredDataForPCA".impute_17 * -0.0589553972263 + "CenteredDataForPCA".impute_18 * 0.0148467688828 + "CenteredDataForPCA".impute_19 * -0.332698414096 + "CenteredDataForPCA".impute_20 * -0.0549465884637 + "CenteredDataForPCA".impute_21 * 0.00111600843591 AS anoova_15, "CenteredDataForPCA".impute_2 * 0.192230420476 + "CenteredDataForPCA".impute_3 * -0.527767033223 + "CenteredDataForPCA".impute_4 * -0.120199620916 + "CenteredDataForPCA".impute_5 * -0.284817212775 + "CenteredDataForPCA".impute_6 * 0.0872278356783 + "CenteredDataForPCA".impute_7 * -0.245507067098 + "CenteredDataForPCA".impute_8 * -0.0264762393571 + "CenteredDataForPCA".impute_9 * 0.0885649987135 + "CenteredDataForPCA".impute_10 * -0.28937253712 + "CenteredDataForPCA".impute_11 * -0.116108747455 + "CenteredDataForPCA".impute_12 * 0.141713404357 + "CenteredDataForPCA".impute_13 * -0.0768104427296 + "CenteredDataForPCA".impute_14 * 0.0730316111623 + "CenteredDataForPCA".impute_15 * 0.165774835287 + "CenteredDataForPCA".impute_16 * -0.113803618369 + "CenteredDataForPCA".impute_17 * -0.335702245053 + "CenteredDataForPCA".impute_18 * -0.299180784231 + "CenteredDataForPCA".impute_19 * 0.375788295022 + "CenteredDataForPCA".impute_20 * -0.0108160542389 + "CenteredDataForPCA".impute_21 * -0.00284269509276 AS anoova_16, "CenteredDataForPCA".impute_2 * -0.235343152534 + "CenteredDataForPCA".impute_3 * 0.293335948159 + "CenteredDataForPCA".impute_4 * -0.0633004571304 + "CenteredDataForPCA".impute_5 * -0.0895535161407 + "CenteredDataForPCA".impute_6 * 0.167510847124 + "CenteredDataForPCA".impute_7 * 0.0265381566096 + "CenteredDataForPCA".impute_8 * -0.013129639136 + "CenteredDataForPCA".impute_9 * 0.579471297423 + "CenteredDataForPCA".impute_10 * 0.0686881201918 + "CenteredDataForPCA".impute_11 * 0.240812722774 + "CenteredDataForPCA".impute_12 * -0.0927859673175 + "CenteredDataForPCA".impute_13 * 0.0599390011561 + "CenteredDataForPCA".impute_14 * -0.0217021667722 + "CenteredDataForPCA".impute_15 * 0.233286802416 + "CenteredDataForPCA".impute_16 * -0.525352294087 + "CenteredDataForPCA".impute_17 * 0.114907475152 + "CenteredDataForPCA".impute_18 * -0.179464425053 + "CenteredDataForPCA".impute_19 * 0.163412363675 + "CenteredDataForPCA".impute_20 * 0.0616491734069 + "CenteredDataForPCA".impute_21 * -0.0101187654208 AS anoova_17, "CenteredDataForPCA".impute_2 * 0.00797014083528 + "CenteredDataForPCA".impute_3 * -0.348448571026 + "CenteredDataForPCA".impute_4 * 0.0473458822967 + "CenteredDataForPCA".impute_5 * 0.41614223785 + "CenteredDataForPCA".impute_6 * -0.598413210422 + "CenteredDataForPCA".impute_7 * -0.162384849801 + "CenteredDataForPCA".impute_8 * 0.0295729922124 + "CenteredDataForPCA".impute_9 * 0.0734556976432 + "CenteredDataForPCA".impute_10 * 0.228843304254 + "CenteredDataForPCA".impute_11 * 0.108128040834 + "CenteredDataForPCA".impute_12 * -0.228461512813 + "CenteredDataForPCA".impute_13 * -0.0495356323517 + "CenteredDataForPCA".impute_14 * -0.0909113485046 + "CenteredDataForPCA".impute_15 * 0.304577741221 + "CenteredDataForPCA".impute_16 * -0.0265235059113 + "CenteredDataForPCA".impute_17 * 0.200290443632 + "CenteredDataForPCA".impute_18 * -0.206946225779 + "CenteredDataForPCA".impute_19 * 0.0271090750236 + "CenteredDataForPCA".impute_20 * -0.0837299771725 + "CenteredDataForPCA".impute_21 * -0.0351085196105 AS anoova_18, "CenteredDataForPCA".impute_2 * -0.0234504507956 + "CenteredDataForPCA".impute_3 * -0.174043283889 + "CenteredDataForPCA".impute_4 * 0.0512754174464 + "CenteredDataForPCA".impute_5 * 0.219440364624 + "CenteredDataForPCA".impute_6 * 0.109340397189 + "CenteredDataForPCA".impute_7 * 0.0840736847605 + "CenteredDataForPCA".impute_8 * -0.0513494819797 + "CenteredDataForPCA".impute_9 * 0.4305604182 + "CenteredDataForPCA".impute_10 * 0.312274029112 + "CenteredDataForPCA".impute_11 * -0.360820445577 + "CenteredDataForPCA".impute_12 * -0.146452361268 + "CenteredDataForPCA".impute_13 * -0.0701252051981 + "CenteredDataForPCA".impute_14 * 0.174767118253 + "CenteredDataForPCA".impute_15 * -0.573602425993 + "CenteredDataForPCA".impute_16 * 0.0718842179414 + "CenteredDataForPCA".impute_17 * -0.137636483097 + "CenteredDataForPCA".impute_18 * -0.252697091009 + "CenteredDataForPCA".impute_19 * -0.0365123356344 + "CenteredDataForPCA".impute_20 * 0.084589607154 + "CenteredDataForPCA".impute_21 * -0.0352408124456 AS anoova_19, "CenteredDataForPCA".impute_2 * -1.85935895096e-16 + "CenteredDataForPCA".impute_3 * -6.8484415645e-17 + "CenteredDataForPCA".impute_4 * -0.0845237813431 + "CenteredDataForPCA".impute_5 * 6.99194827095e-18 + "CenteredDataForPCA".impute_6 * -1.44636586097e-16 + "CenteredDataForPCA".impute_7 * 1.70923334958e-16 + "CenteredDataForPCA".impute_8 * 0.387508174592 + "CenteredDataForPCA".impute_9 * 4.33242358914e-17 + "CenteredDataForPCA".impute_10 * -1.37249736126e-16 + "CenteredDataForPCA".impute_11 * 8.94156427582e-18 + "CenteredDataForPCA".impute_12 * 1.5703920734e-17 + "CenteredDataForPCA".impute_13 * 0.464712765643 + "CenteredDataForPCA".impute_14 * 0.40941551419 + "CenteredDataForPCA".impute_15 * 2.60072817324e-16 + "CenteredDataForPCA".impute_16 * 3.29919666157e-16 + "CenteredDataForPCA".impute_17 * -1.81761112316e-16 + "CenteredDataForPCA".impute_18 * 2.45071549055e-17 + "CenteredDataForPCA".impute_19 * -2.00912736879e-16 + "CenteredDataForPCA".impute_20 * -0.401537308346 + "CenteredDataForPCA".impute_21 * -0.545785596372 AS anoova_20, "CenteredDataForPCA".impute_2 * 4.83644998869e-17 + "CenteredDataForPCA".impute_3 * -2.39074475786e-16 + "CenteredDataForPCA".impute_4 * -0.0616721198262 + "CenteredDataForPCA".impute_5 * -3.65467454482e-18 + "CenteredDataForPCA".impute_6 * -1.75588242823e-16 + "CenteredDataForPCA".impute_7 * 1.97400498258e-16 + "CenteredDataForPCA".impute_8 * 0.869205122118 + "CenteredDataForPCA".impute_9 * 4.22138581637e-18 + "CenteredDataForPCA".impute_10 * 1.30411105672e-16 + "CenteredDataForPCA".impute_11 * -6.29664807506e-17 + "CenteredDataForPCA".impute_12 * 5.1652435468e-17 + "CenteredDataForPCA".impute_13 * -0.269524043539 + "CenteredDataForPCA".impute_14 * -0.00710193376901 + "CenteredDataForPCA".impute_15 * -2.24830543469e-17 + "CenteredDataForPCA".impute_16 * 5.77047265465e-17 + "CenteredDataForPCA".impute_17 * 9.05707631928e-17 + "CenteredDataForPCA".impute_18 * -1.11754857091e-16 + "CenteredDataForPCA".impute_19 * 1.44490059823e-16 + "CenteredDataForPCA".impute_20 * 0.397643315378 + "CenteredDataForPCA".impute_21 * 0.0993234692611 AS anoova_21 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= 1.4442667961120605) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.100503109395504) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 1.4442667961120605 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS "Proba_0.0", -1.42711635564 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.3 AS "Proba_2.0", -1.20397280433 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, 0.100503109395504 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2972972972972973 AS "Proba_0.0", -1.21302263985 AS "LogProba_0.0", 0.14864864864864866 AS "Proba_1.0", -1.90616982041 AS "LogProba_1.0", 0.3783783783783784 AS "Proba_2.0", -0.971860583029 AS "LogProba_2.0", 0.17567567567567569 AS "Proba_3.0", -1.73911573574 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.375 AS "Proba_0.0", -0.980829253012 AS "LogProba_0.0", 0.3125 AS "Proba_1.0", -1.16315080981 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3125 AS "Proba_3.0", -1.16315080981 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23809523809523808 AS "Proba_0.0", -1.43508452529 AS "LogProba_0.0", 0.023809523809523808 AS "Proba_1.0", -3.73766961828 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 0.07142857142857142 AS "Proba_3.0", -2.63905732962 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07692307692307693 AS "Proba_0.0", -2.56494935746 AS "LogProba_0.0", 0.5769230769230769 AS "Proba_1.0", -0.550046336919 AS "LogProba_1.0", 0.07692307692307693 AS "Proba_2.0", -2.56494935746 AS "LogProba_2.0", 0.2692307692307692 AS "Proba_3.0", -1.31218638897 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_18 <= -0.4141623079776764) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.46064087748527527) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_18' AS feature, -0.4141623079776764 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18 AS "Proba_0.0", -1.71479842809 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.32 AS "Proba_2.0", -1.13943428319 AS "LogProba_2.0", 0.24 AS "Proba_3.0", -1.42711635564 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.28 AS "Proba_0.0", -1.27296567581 AS "LogProba_0.0", 0.16 AS "Proba_1.0", -1.83258146375 AS "LogProba_1.0", 0.48 AS "Proba_2.0", -0.73396917508 AS "LogProba_2.0", 0.08 AS "Proba_3.0", -2.52572864431 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, 0.46064087748527527 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14666666666666667 AS "Proba_0.0", -1.91959284074 AS "LogProba_0.0", 0.29333333333333333 AS "Proba_1.0", -1.22644566018 AS "LogProba_1.0", 0.26666666666666666 AS "Proba_2.0", -1.32175583998 AS "LogProba_2.0", 0.29333333333333333 AS "Proba_3.0", -1.22644566018 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.3958333333333333 AS "Proba_1.0", -0.926762031741 AS "LogProba_1.0", 0.041666666666666664 AS "Proba_2.0", -3.17805383035 AS "LogProba_2.0", 0.3958333333333333 AS "Proba_3.0", -0.926762031741 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.1111111111111111 AS "Proba_1.0", -2.19722457734 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.6410447955131531) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 <= -0.10160160064697266) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.6410447955131531 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23 AS "Proba_0.0", -1.46967597006 AS "LogProba_0.0", 0.29 AS "Proba_1.0", -1.237874356 AS "LogProba_1.0", 0.22 AS "Proba_2.0", -1.51412773263 AS "LogProba_2.0", 0.26 AS "Proba_3.0", -1.34707364797 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.10160160064697266 AS threshold, 40 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.36507936507936506 AS "Proba_1.0", -1.00764051046 AS "LogProba_1.0", 0.047619047619047616 AS "Proba_2.0", -3.04452243772 AS "LogProba_2.0", 0.36507936507936506 AS "Proba_3.0", -1.00764051046 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.5555555555555556 AS "Proba_1.0", -0.587786664902 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.2222222222222222 AS "Proba_3.0", -1.50407739678 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.2222222222222222 AS "Proba_1.0", -1.50407739678 AS "LogProba_1.0", 0.08333333333333333 AS "Proba_2.0", -2.48490664979 AS "LogProba_2.0", 0.4722222222222222 AS "Proba_3.0", -0.7503055944 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24324324324324326 AS "Proba_0.0", -1.41369333531 AS "LogProba_0.0", 0.16216216216216217 AS "Proba_1.0", -1.81915844342 AS "LogProba_1.0", 0.5135135135135135 AS "Proba_2.0", -0.666478933478 AS "LogProba_2.0", 0.08108108108108109 AS "Proba_3.0", -2.51230562398 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 <= 1.1485908031463623) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= -0.3566208779811859) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.1485908031463623 AS threshold, 61 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.38 AS "Proba_1.0", -0.967584026262 AS "LogProba_1.0", 0.21 AS "Proba_2.0", -1.56064774826 AS "LogProba_2.0", 0.21 AS "Proba_3.0", -1.56064774826 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_13' AS feature, -0.3566208779811859 AS threshold, 42 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25757575757575757 AS "Proba_0.0", -1.35644139797 AS "LogProba_0.0", 0.19696969696969696 AS "Proba_1.0", -1.62470538456 AS "LogProba_1.0", 0.3181818181818182 AS "Proba_2.0", -1.1451323043 AS "LogProba_2.0", 0.22727272727272727 AS "Proba_3.0", -1.48160454092 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6 AS "Proba_0.0", -0.510825623766 AS "LogProba_0.0", 0.16 AS "Proba_1.0", -1.83258146375 AS "LogProba_1.0", 0.12 AS "Proba_2.0", -2.1202635362 AS "LogProba_2.0", 0.12 AS "Proba_3.0", -2.1202635362 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04878048780487805 AS "Proba_0.0", -3.02042488614 AS "LogProba_0.0", 0.21951219512195122 AS "Proba_1.0", -1.51634748937 AS "LogProba_1.0", 0.43902439024390244 AS "Proba_2.0", -0.823200308808 AS "LogProba_2.0", 0.2926829268292683 AS "Proba_3.0", -1.22866541692 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08823529411764706 AS "Proba_0.0", -2.42774823595 AS "LogProba_0.0", 0.7352941176470589 AS "Proba_1.0", -0.307484699748 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.17647058823529413 AS "Proba_3.0", -1.73460105539 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.28602397441864014) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= 0.055700164288282394) THEN 2 ELSE 3 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_14 <= -0.35051965713500977) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.28602397441864014 AS threshold, 65 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23 AS "Proba_0.0", -1.46967597006 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.21 AS "Proba_2.0", -1.56064774826 AS "LogProba_2.0", 0.3 AS "Proba_3.0", -1.20397280433 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_19' AS feature, 0.055700164288282394 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23728813559322035 AS "Proba_0.0", -1.43848011429 AS "LogProba_0.0", 0.3389830508474576 AS "Proba_1.0", -1.08180517035 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.423728813559322 AS "Proba_3.0", -0.858661619038 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.20689655172413793 AS "Proba_0.0", -1.57553636076 AS "LogProba_0.0", 0.4482758620689655 AS "Proba_1.0", -0.802346472525 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3448275862068966 AS "Proba_3.0", -1.06471073699 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26666666666666666 AS "Proba_0.0", -1.32175583998 AS "LogProba_0.0", 0.23333333333333334 AS "Proba_1.0", -1.45528723261 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 4 AS node_id, 'anoova_14' AS feature, -0.35051965713500977 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21951219512195122 AS "Proba_0.0", -1.51634748937 AS "LogProba_0.0", 0.14634146341463414 AS "Proba_1.0", -1.92181259748 AS "LogProba_1.0", 0.5121951219512195 AS "Proba_2.0", -0.669049628981 AS "LogProba_2.0", 0.12195121951219512 AS "Proba_3.0", -2.10413415427 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.5416666666666666 AS "Proba_2.0", -0.613104472886 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4117647058823529 AS "Proba_0.0", -0.887303195001 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.47058823529411764 AS "Proba_2.0", -0.753771802376 AS "LogProba_2.0", 0.11764705882352941 AS "Proba_3.0", -2.1400661635 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Proba_0.0" AS "Proba_0.0", "DT_node_data_4"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_4"."Proba_1.0" AS "Proba_1.0", "DT_node_data_4"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_4"."Proba_2.0" AS "Proba_2.0", "DT_node_data_4"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_4"."Proba_3.0" AS "Proba_3.0", "DT_node_data_4"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_4"."Decision" AS "Decision" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, CAST(NULL AS FLOAT) AS "Score_4_0", "DT_Output_4"."Proba_0.0" AS "Proba_4_0", "DT_Output_4"."LogProba_0.0" AS "LogProba_4_0", CAST(NULL AS FLOAT) AS "Score_4_1", "DT_Output_4"."Proba_1.0" AS "Proba_4_1", "DT_Output_4"."LogProba_1.0" AS "LogProba_4_1", CAST(NULL AS FLOAT) AS "Score_4_2", "DT_Output_4"."Proba_2.0" AS "Proba_4_2", "DT_Output_4"."LogProba_2.0" AS "LogProba_4_2", CAST(NULL AS FLOAT) AS "Score_4_3", "DT_Output_4"."Proba_3.0" AS "Proba_4_3", "DT_Output_4"."LogProba_3.0" AS "LogProba_4_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_13 <= 0.36061903834342957) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.4545133113861084) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_13' AS feature, 0.36061903834342957 AS threshold, 63 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29 AS "Proba_0.0", -1.237874356 AS "LogProba_0.0", 0.19 AS "Proba_1.0", -1.66073120682 AS "LogProba_1.0", 0.28 AS "Proba_2.0", -1.27296567581 AS "LogProba_2.0", 0.24 AS "Proba_3.0", -1.42711635564 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 0.4545133113861084 AS threshold, 46 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2465753424657534 AS "Proba_0.0", -1.40008768325 AS "LogProba_0.0", 0.2465753424657534 AS "Proba_1.0", -1.40008768325 AS "LogProba_1.0", 0.3287671232876712 AS "Proba_2.0", -1.1124056108 AS "LogProba_2.0", 0.1780821917808219 AS "Proba_3.0", -1.72551008369 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.38461538461538464 AS "Proba_0.0", -0.955511445027 AS "LogProba_0.0", 0.2564102564102564 AS "Proba_1.0", -1.36097655314 AS "LogProba_1.0", 0.1794871794871795 AS "Proba_2.0", -1.71765149707 AS "LogProba_2.0", 0.1794871794871795 AS "Proba_3.0", -1.71765149707 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08823529411764706 AS "Proba_0.0", -2.42774823595 AS "LogProba_0.0", 0.23529411764705882 AS "Proba_1.0", -1.44691898294 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.17647058823529413 AS "Proba_3.0", -1.73460105539 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4074074074074074 AS "Proba_0.0", -0.897941593206 AS "LogProba_0.0", 0.037037037037037035 AS "Proba_1.0", -3.295836866 AS "LogProba_1.0", 0.14814814814814814 AS "Proba_2.0", -1.90954250488 AS "LogProba_2.0", 0.4074074074074074 AS "Proba_3.0", -0.897941593206 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Proba_0.0" AS "Proba_0.0", "DT_node_data_5"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_5"."Proba_1.0" AS "Proba_1.0", "DT_node_data_5"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_5"."Proba_2.0" AS "Proba_2.0", "DT_node_data_5"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_5"."Proba_3.0" AS "Proba_3.0", "DT_node_data_5"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_5"."Decision" AS "Decision" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, CAST(NULL AS FLOAT) AS "Score_5_0", "DT_Output_5"."Proba_0.0" AS "Proba_5_0", "DT_Output_5"."LogProba_0.0" AS "LogProba_5_0", CAST(NULL AS FLOAT) AS "Score_5_1", "DT_Output_5"."Proba_1.0" AS "Proba_5_1", "DT_Output_5"."LogProba_1.0" AS "LogProba_5_1", CAST(NULL AS FLOAT) AS "Score_5_2", "DT_Output_5"."Proba_2.0" AS "Proba_5_2", "DT_Output_5"."LogProba_2.0" AS "LogProba_5_2", CAST(NULL AS FLOAT) AS "Score_5_3", "DT_Output_5"."Proba_3.0" AS "Proba_5_3", "DT_Output_5"."LogProba_3.0" AS "LogProba_5_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.24845758080482483) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_15 <= 0.25335970520973206) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.24845758080482483 AS threshold, 58 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29 AS "Proba_0.0", -1.237874356 AS "LogProba_0.0", 0.27 AS "Proba_1.0", -1.30933331998 AS "LogProba_1.0", 0.17 AS "Proba_2.0", -1.77195684193 AS "LogProba_2.0", 0.27 AS "Proba_3.0", -1.30933331998 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_15' AS feature, 0.25335970520973206 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.31666666666666665 AS "Proba_0.0", -1.14990558306 AS "LogProba_0.0", 0.36666666666666664 AS "Proba_1.0", -1.00330210886 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.31666666666666665 AS "Proba_3.0", -1.14990558306 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.034482758620689655 AS "Proba_0.0", -3.36729582999 AS "LogProba_0.0", 0.4827586206896552 AS "Proba_1.0", -0.728238500371 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.4827586206896552 AS "Proba_3.0", -0.728238500371 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5806451612903226 AS "Proba_0.0", -0.543615446589 AS "LogProba_0.0", 0.25806451612903225 AS "Proba_1.0", -1.35454566281 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.16129032258064516 AS "Proba_3.0", -1.82454929205 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.125 AS "Proba_1.0", -2.07944154168 AS "LogProba_1.0", 0.425 AS "Proba_2.0", -0.855666110058 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Proba_0.0" AS "Proba_0.0", "DT_node_data_6"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_6"."Proba_1.0" AS "Proba_1.0", "DT_node_data_6"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_6"."Proba_2.0" AS "Proba_2.0", "DT_node_data_6"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_6"."Proba_3.0" AS "Proba_3.0", "DT_node_data_6"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_6"."Decision" AS "Decision" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, CAST(NULL AS FLOAT) AS "Score_6_0", "DT_Output_6"."Proba_0.0" AS "Proba_6_0", "DT_Output_6"."LogProba_0.0" AS "LogProba_6_0", CAST(NULL AS FLOAT) AS "Score_6_1", "DT_Output_6"."Proba_1.0" AS "Proba_6_1", "DT_Output_6"."LogProba_1.0" AS "LogProba_6_1", CAST(NULL AS FLOAT) AS "Score_6_2", "DT_Output_6"."Proba_2.0" AS "Proba_6_2", "DT_Output_6"."LogProba_2.0" AS "LogProba_6_2", CAST(NULL AS FLOAT) AS "Score_6_3", "DT_Output_6"."Proba_3.0" AS "Proba_6_3", "DT_Output_6"."LogProba_3.0" AS "LogProba_6_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_5 <= -0.6253371238708496) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -0.4075508117675781) THEN 3 ELSE 4 END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_5' AS feature, -0.6253371238708496 AS threshold, 64 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19 AS "Proba_0.0", -1.66073120682 AS "LogProba_0.0", 0.27 AS "Proba_1.0", -1.30933331998 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.34 AS "Proba_3.0", -1.07880966137 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.225 AS "Proba_0.0", -1.49165487678 AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0.3 AS "Proba_2.0", -1.20397280433 AS "LogProba_2.0", 0.075 AS "Proba_3.0", -2.59026716545 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.4075508117675781 AS threshold, 37 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.18333333333333332 AS "Proba_1.0", -1.69644928942 AS "LogProba_1.0", 0.13333333333333333 AS "Proba_2.0", -2.01490302054 AS "LogProba_2.0", 0.5166666666666667 AS "Proba_3.0", -0.660357357737 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14285714285714285 AS "Proba_0.0", -1.94591014906 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.10714285714285714 AS "Proba_2.0", -2.23359222151 AS "LogProba_2.0", 0.75 AS "Proba_3.0", -0.287682072452 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1875 AS "Proba_0.0", -1.67397643357 AS "LogProba_0.0", 0.34375 AS "Proba_1.0", -1.06784063 AS "LogProba_1.0", 0.15625 AS "Proba_2.0", -1.85629799037 AS "LogProba_2.0", 0.3125 AS "Proba_3.0", -1.16315080981 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Proba_0.0" AS "Proba_0.0", "DT_node_data_7"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_7"."Proba_1.0" AS "Proba_1.0", "DT_node_data_7"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_7"."Proba_2.0" AS "Proba_2.0", "DT_node_data_7"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_7"."Proba_3.0" AS "Proba_3.0", "DT_node_data_7"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_7"."Decision" AS "Decision" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, CAST(NULL AS FLOAT) AS "Score_7_0", "DT_Output_7"."Proba_0.0" AS "Proba_7_0", "DT_Output_7"."LogProba_0.0" AS "LogProba_7_0", CAST(NULL AS FLOAT) AS "Score_7_1", "DT_Output_7"."Proba_1.0" AS "Proba_7_1", "DT_Output_7"."LogProba_1.0" AS "LogProba_7_1", CAST(NULL AS FLOAT) AS "Score_7_2", "DT_Output_7"."Proba_2.0" AS "Proba_7_2", "DT_Output_7"."LogProba_2.0" AS "LogProba_7_2", CAST(NULL AS FLOAT) AS "Score_7_3", "DT_Output_7"."Proba_3.0" AS "Proba_7_3", "DT_Output_7"."LogProba_3.0" AS "LogProba_7_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_4 <= -1.4381022453308105) THEN 1 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_19 <= -0.20721636712551117) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 <= -0.06371796876192093) THEN 5 ELSE 6 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, -1.4381022453308105 AS threshold, 65 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.22 AS "Proba_0.0", -1.51412773263 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.33 AS "Proba_2.0", -1.10866262452 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4230769230769231 AS "Proba_0.0", -0.860201265223 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.07692307692307693 AS "Proba_2.0", -2.56494935746 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, 'anoova_19' AS feature, -0.20721636712551117 AS threshold, 50 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14864864864864866 AS "Proba_0.0", -1.90616982041 AS "LogProba_0.0", 0.2702702702702703 AS "Proba_1.0", -1.30833281965 AS "LogProba_1.0", 0.4189189189189189 AS "Proba_2.0", -0.870077888719 AS "LogProba_2.0", 0.16216216216216217 AS "Proba_3.0", -1.81915844342 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17857142857142858 AS "Proba_0.0", -1.72276659774 AS "LogProba_0.0", 0.17857142857142858 AS "Proba_1.0", -1.72276659774 AS "LogProba_1.0", 0.5714285714285714 AS "Proba_2.0", -0.559615787935 AS "LogProba_2.0", 0.07142857142857142 AS "Proba_3.0", -2.63905732962 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, 'anoova_9' AS feature, -0.06371796876192093 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13043478260869565 AS "Proba_0.0", -2.03688192726 AS "LogProba_0.0", 0.32608695652173914 AS "Proba_1.0", -1.12059119539 AS "LogProba_1.0", 0.32608695652173914 AS "Proba_2.0", -1.12059119539 AS "LogProba_2.0", 0.21739130434782608 AS "Proba_3.0", -1.5260563035 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03333333333333333 AS "Proba_0.0", -3.40119738166 AS "LogProba_0.0", 0.3 AS "Proba_1.0", -1.20397280433 AS "LogProba_1.0", 0.4666666666666667 AS "Proba_2.0", -0.762140052047 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3125 AS "Proba_0.0", -1.16315080981 AS "LogProba_0.0", 0.375 AS "Proba_1.0", -0.980829253012 AS "LogProba_1.0", 0.0625 AS "Proba_2.0", -2.77258872224 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Proba_0.0" AS "Proba_0.0", "DT_node_data_8"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_8"."Proba_1.0" AS "Proba_1.0", "DT_node_data_8"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_8"."Proba_2.0" AS "Proba_2.0", "DT_node_data_8"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_8"."Proba_3.0" AS "Proba_3.0", "DT_node_data_8"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_8"."Decision" AS "Decision" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, CAST(NULL AS FLOAT) AS "Score_8_0", "DT_Output_8"."Proba_0.0" AS "Proba_8_0", "DT_Output_8"."LogProba_0.0" AS "LogProba_8_0", CAST(NULL AS FLOAT) AS "Score_8_1", "DT_Output_8"."Proba_1.0" AS "Proba_8_1", "DT_Output_8"."LogProba_1.0" AS "LogProba_8_1", CAST(NULL AS FLOAT) AS "Score_8_2", "DT_Output_8"."Proba_2.0" AS "Proba_8_2", "DT_Output_8"."LogProba_2.0" AS "LogProba_8_2", CAST(NULL AS FLOAT) AS "Score_8_3", "DT_Output_8"."Proba_3.0" AS "Proba_8_3", "DT_Output_8"."LogProba_3.0" AS "LogProba_8_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_3 <= 0.24845758080482483) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_6 <= 0.061269611120224) THEN 2 ELSE 3 END ELSE 4 END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.24845758080482483 AS threshold, 61 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23 AS "Proba_0.0", -1.46967597006 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.36 AS "Proba_2.0", -1.02165124753 AS "LogProba_2.0", 0.21 AS "Proba_3.0", -1.56064774826 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'anoova_6' AS feature, 0.061269611120224 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26 AS "Proba_0.0", -1.34707364797 AS "LogProba_0.0", 0.34 AS "Proba_1.0", -1.07880966137 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.3 AS "Proba_3.0", -1.20397280433 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.37037037037037035 AS "Proba_0.0", -0.99325177301 AS "LogProba_0.0", 0.18518518518518517 AS "Proba_1.0", -1.68639895357 AS "LogProba_1.0", 0.18518518518518517 AS "Proba_2.0", -1.68639895357 AS "LogProba_2.0", 0.25925925925925924 AS "Proba_3.0", -1.34992671695 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13043478260869565 AS "Proba_0.0", -2.03688192726 AS "LogProba_0.0", 0.5217391304347826 AS "Proba_1.0", -0.650587566141 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.34782608695652173 AS "Proba_3.0", -1.05605267425 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.06 AS "Proba_1.0", -2.81341071676 AS "LogProba_1.0", 0.62 AS "Proba_2.0", -0.478035800943 AS "LogProba_2.0", 0.12 AS "Proba_3.0", -2.1202635362 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Proba_0.0" AS "Proba_0.0", "DT_node_data_9"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_9"."Proba_1.0" AS "Proba_1.0", "DT_node_data_9"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_9"."Proba_2.0" AS "Proba_2.0", "DT_node_data_9"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_9"."Proba_3.0" AS "Proba_3.0", "DT_node_data_9"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_9"."Decision" AS "Decision" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, CAST(NULL AS FLOAT) AS "Score_9_0", "DT_Output_9"."Proba_0.0" AS "Proba_9_0", "DT_Output_9"."LogProba_0.0" AS "LogProba_9_0", CAST(NULL AS FLOAT) AS "Score_9_1", "DT_Output_9"."Proba_1.0" AS "Proba_9_1", "DT_Output_9"."LogProba_1.0" AS "LogProba_9_1", CAST(NULL AS FLOAT) AS "Score_9_2", "DT_Output_9"."Proba_2.0" AS "Proba_9_2", "DT_Output_9"."LogProba_2.0" AS "LogProba_9_2", CAST(NULL AS FLOAT) AS "Score_9_3", "DT_Output_9"."Proba_3.0" AS "Proba_9_3", "DT_Output_9"."LogProba_3.0" AS "LogProba_9_3" 
FROM "DT_Output_9"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3", "RF_Tree_4".join_key_4 AS join_key_4, "RF_Tree_4"."Score_4_0" AS "Score_4_0", "RF_Tree_4"."Proba_4_0" AS "Proba_4_0", "RF_Tree_4"."LogProba_4_0" AS "LogProba_4_0", "RF_Tree_4"."Score_4_1" AS "Score_4_1", "RF_Tree_4"."Proba_4_1" AS "Proba_4_1", "RF_Tree_4"."LogProba_4_1" AS "LogProba_4_1", "RF_Tree_4"."Score_4_2" AS "Score_4_2", "RF_Tree_4"."Proba_4_2" AS "Proba_4_2", "RF_Tree_4"."LogProba_4_2" AS "LogProba_4_2", "RF_Tree_4"."Score_4_3" AS "Score_4_3", "RF_Tree_4"."Proba_4_3" AS "Proba_4_3", "RF_Tree_4"."LogProba_4_3" AS "LogProba_4_3", "RF_Tree_5".join_key_5 AS join_key_5, "RF_Tree_5"."Score_5_0" AS "Score_5_0", "RF_Tree_5"."Proba_5_0" AS "Proba_5_0", "RF_Tree_5"."LogProba_5_0" AS "LogProba_5_0", "RF_Tree_5"."Score_5_1" AS "Score_5_1", "RF_Tree_5"."Proba_5_1" AS "Proba_5_1", "RF_Tree_5"."LogProba_5_1" AS "LogProba_5_1", "RF_Tree_5"."Score_5_2" AS "Score_5_2", "RF_Tree_5"."Proba_5_2" AS "Proba_5_2", "RF_Tree_5"."LogProba_5_2" AS "LogProba_5_2", "RF_Tree_5"."Score_5_3" AS "Score_5_3", "RF_Tree_5"."Proba_5_3" AS "Proba_5_3", "RF_Tree_5"."LogProba_5_3" AS "LogProba_5_3", "RF_Tree_6".join_key_6 AS join_key_6, "RF_Tree_6"."Score_6_0" AS "Score_6_0", "RF_Tree_6"."Proba_6_0" AS "Proba_6_0", "RF_Tree_6"."LogProba_6_0" AS "LogProba_6_0", "RF_Tree_6"."Score_6_1" AS "Score_6_1", "RF_Tree_6"."Proba_6_1" AS "Proba_6_1", "RF_Tree_6"."LogProba_6_1" AS "LogProba_6_1", "RF_Tree_6"."Score_6_2" AS "Score_6_2", "RF_Tree_6"."Proba_6_2" AS "Proba_6_2", "RF_Tree_6"."LogProba_6_2" AS "LogProba_6_2", "RF_Tree_6"."Score_6_3" AS "Score_6_3", "RF_Tree_6"."Proba_6_3" AS "Proba_6_3", "RF_Tree_6"."LogProba_6_3" AS "LogProba_6_3", "RF_Tree_7".join_key_7 AS join_key_7, "RF_Tree_7"."Score_7_0" AS "Score_7_0", "RF_Tree_7"."Proba_7_0" AS "Proba_7_0", "RF_Tree_7"."LogProba_7_0" AS "LogProba_7_0", "RF_Tree_7"."Score_7_1" AS "Score_7_1", "RF_Tree_7"."Proba_7_1" AS "Proba_7_1", "RF_Tree_7"."LogProba_7_1" AS "LogProba_7_1", "RF_Tree_7"."Score_7_2" AS "Score_7_2", "RF_Tree_7"."Proba_7_2" AS "Proba_7_2", "RF_Tree_7"."LogProba_7_2" AS "LogProba_7_2", "RF_Tree_7"."Score_7_3" AS "Score_7_3", "RF_Tree_7"."Proba_7_3" AS "Proba_7_3", "RF_Tree_7"."LogProba_7_3" AS "LogProba_7_3", "RF_Tree_8".join_key_8 AS join_key_8, "RF_Tree_8"."Score_8_0" AS "Score_8_0", "RF_Tree_8"."Proba_8_0" AS "Proba_8_0", "RF_Tree_8"."LogProba_8_0" AS "LogProba_8_0", "RF_Tree_8"."Score_8_1" AS "Score_8_1", "RF_Tree_8"."Proba_8_1" AS "Proba_8_1", "RF_Tree_8"."LogProba_8_1" AS "LogProba_8_1", "RF_Tree_8"."Score_8_2" AS "Score_8_2", "RF_Tree_8"."Proba_8_2" AS "Proba_8_2", "RF_Tree_8"."LogProba_8_2" AS "LogProba_8_2", "RF_Tree_8"."Score_8_3" AS "Score_8_3", "RF_Tree_8"."Proba_8_3" AS "Proba_8_3", "RF_Tree_8"."LogProba_8_3" AS "LogProba_8_3", "RF_Tree_9".join_key_9 AS join_key_9, "RF_Tree_9"."Score_9_0" AS "Score_9_0", "RF_Tree_9"."Proba_9_0" AS "Proba_9_0", "RF_Tree_9"."LogProba_9_0" AS "LogProba_9_0", "RF_Tree_9"."Score_9_1" AS "Score_9_1", "RF_Tree_9"."Proba_9_1" AS "Proba_9_1", "RF_Tree_9"."LogProba_9_1" AS "LogProba_9_1", "RF_Tree_9"."Score_9_2" AS "Score_9_2", "RF_Tree_9"."Proba_9_2" AS "Proba_9_2", "RF_Tree_9"."LogProba_9_2" AS "LogProba_9_2", "RF_Tree_9"."Score_9_3" AS "Score_9_3", "RF_Tree_9"."Proba_9_3" AS "Proba_9_3", "RF_Tree_9"."LogProba_9_3" AS "LogProba_9_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2 LEFT OUTER JOIN "RF_Tree_4" ON "RF_Tree_4".join_key_4 = "RF_Tree_3".join_key_3 LEFT OUTER JOIN "RF_Tree_5" ON "RF_Tree_5".join_key_5 = "RF_Tree_4".join_key_4 LEFT OUTER JOIN "RF_Tree_6" ON "RF_Tree_6".join_key_6 = "RF_Tree_5".join_key_5 LEFT OUTER JOIN "RF_Tree_7" ON "RF_Tree_7".join_key_7 = "RF_Tree_6".join_key_6 LEFT OUTER JOIN "RF_Tree_8" ON "RF_Tree_8".join_key_8 = "RF_Tree_7".join_key_7 LEFT OUTER JOIN "RF_Tree_9" ON "RF_Tree_9".join_key_9 = "RF_Tree_8".join_key_8), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 10 + "RF_Join_CTE"."Score_1_0" / 10 + "RF_Join_CTE"."Score_2_0" / 10 + "RF_Join_CTE"."Score_3_0" / 10 + "RF_Join_CTE"."Score_4_0" / 10 + "RF_Join_CTE"."Score_5_0" / 10 + "RF_Join_CTE"."Score_6_0" / 10 + "RF_Join_CTE"."Score_7_0" / 10 + "RF_Join_CTE"."Score_8_0" / 10 + "RF_Join_CTE"."Score_9_0" / 10 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 10 + "RF_Join_CTE"."Proba_1_0" / 10 + "RF_Join_CTE"."Proba_2_0" / 10 + "RF_Join_CTE"."Proba_3_0" / 10 + "RF_Join_CTE"."Proba_4_0" / 10 + "RF_Join_CTE"."Proba_5_0" / 10 + "RF_Join_CTE"."Proba_6_0" / 10 + "RF_Join_CTE"."Proba_7_0" / 10 + "RF_Join_CTE"."Proba_8_0" / 10 + "RF_Join_CTE"."Proba_9_0" / 10 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 10 + "RF_Join_CTE"."LogProba_1_0" / 10 + "RF_Join_CTE"."LogProba_2_0" / 10 + "RF_Join_CTE"."LogProba_3_0" / 10 + "RF_Join_CTE"."LogProba_4_0" / 10 + "RF_Join_CTE"."LogProba_5_0" / 10 + "RF_Join_CTE"."LogProba_6_0" / 10 + "RF_Join_CTE"."LogProba_7_0" / 10 + "RF_Join_CTE"."LogProba_8_0" / 10 + "RF_Join_CTE"."LogProba_9_0" / 10 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 10 + "RF_Join_CTE"."Score_1_1" / 10 + "RF_Join_CTE"."Score_2_1" / 10 + "RF_Join_CTE"."Score_3_1" / 10 + "RF_Join_CTE"."Score_4_1" / 10 + "RF_Join_CTE"."Score_5_1" / 10 + "RF_Join_CTE"."Score_6_1" / 10 + "RF_Join_CTE"."Score_7_1" / 10 + "RF_Join_CTE"."Score_8_1" / 10 + "RF_Join_CTE"."Score_9_1" / 10 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 10 + "RF_Join_CTE"."Proba_1_1" / 10 + "RF_Join_CTE"."Proba_2_1" / 10 + "RF_Join_CTE"."Proba_3_1" / 10 + "RF_Join_CTE"."Proba_4_1" / 10 + "RF_Join_CTE"."Proba_5_1" / 10 + "RF_Join_CTE"."Proba_6_1" / 10 + "RF_Join_CTE"."Proba_7_1" / 10 + "RF_Join_CTE"."Proba_8_1" / 10 + "RF_Join_CTE"."Proba_9_1" / 10 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 10 + "RF_Join_CTE"."LogProba_1_1" / 10 + "RF_Join_CTE"."LogProba_2_1" / 10 + "RF_Join_CTE"."LogProba_3_1" / 10 + "RF_Join_CTE"."LogProba_4_1" / 10 + "RF_Join_CTE"."LogProba_5_1" / 10 + "RF_Join_CTE"."LogProba_6_1" / 10 + "RF_Join_CTE"."LogProba_7_1" / 10 + "RF_Join_CTE"."LogProba_8_1" / 10 + "RF_Join_CTE"."LogProba_9_1" / 10 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 10 + "RF_Join_CTE"."Score_1_2" / 10 + "RF_Join_CTE"."Score_2_2" / 10 + "RF_Join_CTE"."Score_3_2" / 10 + "RF_Join_CTE"."Score_4_2" / 10 + "RF_Join_CTE"."Score_5_2" / 10 + "RF_Join_CTE"."Score_6_2" / 10 + "RF_Join_CTE"."Score_7_2" / 10 + "RF_Join_CTE"."Score_8_2" / 10 + "RF_Join_CTE"."Score_9_2" / 10 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 10 + "RF_Join_CTE"."Proba_1_2" / 10 + "RF_Join_CTE"."Proba_2_2" / 10 + "RF_Join_CTE"."Proba_3_2" / 10 + "RF_Join_CTE"."Proba_4_2" / 10 + "RF_Join_CTE"."Proba_5_2" / 10 + "RF_Join_CTE"."Proba_6_2" / 10 + "RF_Join_CTE"."Proba_7_2" / 10 + "RF_Join_CTE"."Proba_8_2" / 10 + "RF_Join_CTE"."Proba_9_2" / 10 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 10 + "RF_Join_CTE"."LogProba_1_2" / 10 + "RF_Join_CTE"."LogProba_2_2" / 10 + "RF_Join_CTE"."LogProba_3_2" / 10 + "RF_Join_CTE"."LogProba_4_2" / 10 + "RF_Join_CTE"."LogProba_5_2" / 10 + "RF_Join_CTE"."LogProba_6_2" / 10 + "RF_Join_CTE"."LogProba_7_2" / 10 + "RF_Join_CTE"."LogProba_8_2" / 10 + "RF_Join_CTE"."LogProba_9_2" / 10 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 10 + "RF_Join_CTE"."Score_1_3" / 10 + "RF_Join_CTE"."Score_2_3" / 10 + "RF_Join_CTE"."Score_3_3" / 10 + "RF_Join_CTE"."Score_4_3" / 10 + "RF_Join_CTE"."Score_5_3" / 10 + "RF_Join_CTE"."Score_6_3" / 10 + "RF_Join_CTE"."Score_7_3" / 10 + "RF_Join_CTE"."Score_8_3" / 10 + "RF_Join_CTE"."Score_9_3" / 10 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 10 + "RF_Join_CTE"."Proba_1_3" / 10 + "RF_Join_CTE"."Proba_2_3" / 10 + "RF_Join_CTE"."Proba_3_3" / 10 + "RF_Join_CTE"."Proba_4_3" / 10 + "RF_Join_CTE"."Proba_5_3" / 10 + "RF_Join_CTE"."Proba_6_3" / 10 + "RF_Join_CTE"."Proba_7_3" / 10 + "RF_Join_CTE"."Proba_8_3" / 10 + "RF_Join_CTE"."Proba_9_3" / 10 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 10 + "RF_Join_CTE"."LogProba_1_3" / 10 + "RF_Join_CTE"."LogProba_2_3" / 10 + "RF_Join_CTE"."LogProba_3_3" / 10 + "RF_Join_CTE"."LogProba_4_3" / 10 + "RF_Join_CTE"."LogProba_5_3" / 10 + "RF_Join_CTE"."LogProba_6_3" / 10 + "RF_Join_CTE"."LogProba_7_3" / 10 + "RF_Join_CTE"."LogProba_8_3" / 10 + "RF_Join_CTE"."LogProba_9_3" / 10 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte