-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", -0.03476271148253145 * "ADS"."Feature_0" + 0.08775822046207851 * "ADS"."Feature_1" + -0.04201833732825178 * "ADS"."Feature_2" + -0.05293841753188416 * "ADS"."Feature_3" + 0.013390584886456879 * "ADS"."Feature_4" + -0.00618147946875843 * "ADS"."Feature_5" + 0.055582476019333235 * "ADS"."Feature_6" + -0.02927310680816276 * "ADS"."Feature_7" + -0.0315613210861009 * "ADS"."Feature_8" + -0.15905057788649488 * "ADS"."Feature_9" + 0.007044269910599479 * "ADS"."Feature_10" + -0.01716527705976381 * "ADS"."Feature_11" + -0.0908111918038943 * "ADS"."Feature_12" + 0.005702195200968818 * "ADS"."Feature_13" + 0.040504722237009 * "ADS"."Feature_14" + -0.11618331519357483 * "ADS"."Feature_15" + -0.15176824539871703 * "ADS"."Feature_16" + -0.05095885477077705 * "ADS"."Feature_17" + 0.10106770022931594 * "ADS"."Feature_18" + -0.16556691625675468 * "ADS"."Feature_19" + -0.459722244766 AS "Score_0", 0.1520586007840218 * "ADS"."Feature_0" + -0.07071736950626833 * "ADS"."Feature_1" + -0.13427200213806545 * "ADS"."Feature_2" + 0.006833617884231055 * "ADS"."Feature_3" + 0.058955045536830425 * "ADS"."Feature_4" + -0.0319657065327373 * "ADS"."Feature_5" + 0.042488794234152125 * "ADS"."Feature_6" + -0.04854168004418774 * "ADS"."Feature_7" + 0.02507478673371736 * "ADS"."Feature_8" + 9.238576870084642e-05 * "ADS"."Feature_9" + 0.015166226058322355 * "ADS"."Feature_10" + -0.04794577711765997 * "ADS"."Feature_11" + 0.21296132394645062 * "ADS"."Feature_12" + -0.12770660552357435 * "ADS"."Feature_13" + -0.060462325657113916 * "ADS"."Feature_14" + 0.007006735060080208 * "ADS"."Feature_15" + 0.3488591720054614 * "ADS"."Feature_16" + 0.04526036145319008 * "ADS"."Feature_17" + -0.015461111995930803 * "ADS"."Feature_18" + 0.09366490784335497 * "ADS"."Feature_19" + -0.35720158981 AS "Score_1", -0.000631428709358936 * "ADS"."Feature_0" + -0.06145204718218668 * "ADS"."Feature_1" + 0.009709512567375931 * "ADS"."Feature_2" + 0.06080875329945683 * "ADS"."Feature_3" + 0.007557989132498291 * "ADS"."Feature_4" + 0.11434781556869637 * "ADS"."Feature_5" + -0.05384781096443738 * "ADS"."Feature_6" + 0.055993302028830544 * "ADS"."Feature_7" + 0.02720108035999262 * "ADS"."Feature_8" + 0.14781101899978816 * "ADS"."Feature_9" + -0.10153811666235192 * "ADS"."Feature_10" + 0.0571043612742909 * "ADS"."Feature_11" + -0.18790123522677896 * "ADS"."Feature_12" + 0.02620650539274834 * "ADS"."Feature_13" + -0.03185696688799196 * "ADS"."Feature_14" + 0.11308695026935289 * "ADS"."Feature_15" + -0.281124353366279 * "ADS"."Feature_16" + -0.034568842857133006 * "ADS"."Feature_17" + -0.0576371902235239 * "ADS"."Feature_18" + 0.09243672579431052 * "ADS"."Feature_19" + -0.7060312149 AS "Score_2", -0.11666446059213308 * "ADS"."Feature_0" + 0.04441119622637505 * "ADS"."Feature_1" + 0.16658082689894044 * "ADS"."Feature_2" + -0.014703953651802895 * "ADS"."Feature_3" + -0.07990361955578595 * "ADS"."Feature_4" + -0.07620062956720239 * "ADS"."Feature_5" + -0.04422345928904844 * "ADS"."Feature_6" + 0.021821484823521413 * "ADS"."Feature_7" + -0.020714546007609243 * "ADS"."Feature_8" + 0.011147173118005838 * "ADS"."Feature_9" + 0.07932762069343043 * "ADS"."Feature_10" + 0.008006692903133751 * "ADS"."Feature_11" + 0.06575110308422297 * "ADS"."Feature_12" + 0.09579790492985694 * "ADS"."Feature_13" + 0.0518145703080975 * "ADS"."Feature_14" + -0.0039103701358566 * "ADS"."Feature_15" + 0.08403342675953464 * "ADS"."Feature_16" + 0.040267336174719864 * "ADS"."Feature_17" + -0.02796939800986606 * "ADS"."Feature_18" + -0.020534717380905593 * "ADS"."Feature_19" + -0.477044950524 AS "Score_3" 
FROM "INPUT_DATA" AS "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte