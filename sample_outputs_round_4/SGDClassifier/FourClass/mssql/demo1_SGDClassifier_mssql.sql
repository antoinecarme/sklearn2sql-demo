-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT [ADS].[KEY] AS [KEY], 2.2907373344699757 * [ADS].[Feature_0] + -35.89621853412323 * [ADS].[Feature_1] + -9.937062072500026 * [ADS].[Feature_2] + -0.2370785216541642 * [ADS].[Feature_3] + -33.4308642450597 * [ADS].[Feature_4] + -5.662456030528148 * [ADS].[Feature_5] + 17.604162016753982 * [ADS].[Feature_6] + -53.486552922243696 * [ADS].[Feature_7] + -1.1627733093141424 * [ADS].[Feature_8] + 42.63063824081771 * [ADS].[Feature_9] + 34.92368898451978 * [ADS].[Feature_10] + -11.146624224011758 * [ADS].[Feature_11] + -16.57907316849249 * [ADS].[Feature_12] + -11.57669162362155 * [ADS].[Feature_13] + -12.681347166828438 * [ADS].[Feature_14] + -15.366575340040912 * [ADS].[Feature_15] + -8.952813811197906 * [ADS].[Feature_16] + 30.154037341446784 * [ADS].[Feature_17] + 1.494453279031451 * [ADS].[Feature_18] + -41.04867078998751 * [ADS].[Feature_19] + -142.953687704 AS [Score_0], 28.217434233826513 * [ADS].[Feature_0] + 2.755276816303788 * [ADS].[Feature_1] + 63.779613190834056 * [ADS].[Feature_2] + 48.90816171398765 * [ADS].[Feature_3] + -64.18403613658288 * [ADS].[Feature_4] + 21.453579610174405 * [ADS].[Feature_5] + -2.7942572917541924 * [ADS].[Feature_6] + -25.61216551067711 * [ADS].[Feature_7] + -17.135441508722693 * [ADS].[Feature_8] + 9.682582574360364 * [ADS].[Feature_9] + -7.325433449117375 * [ADS].[Feature_10] + -41.40592382332945 * [ADS].[Feature_11] + -35.56260325649022 * [ADS].[Feature_12] + -22.006597313359837 * [ADS].[Feature_13] + -15.635629130075005 * [ADS].[Feature_14] + -9.336301195956677 * [ADS].[Feature_15] + -13.856623552160839 * [ADS].[Feature_16] + -3.159372817262949 * [ADS].[Feature_17] + 18.59042110787612 * [ADS].[Feature_18] + -5.208920007802997 * [ADS].[Feature_19] + -135.817520834 AS [Score_1], 16.814319903633375 * [ADS].[Feature_0] + 15.891558694623253 * [ADS].[Feature_1] + 31.110340875022793 * [ADS].[Feature_2] + -52.21668828371198 * [ADS].[Feature_3] + 28.568173619715882 * [ADS].[Feature_4] + -35.555912403311176 * [ADS].[Feature_5] + -18.771402442081797 * [ADS].[Feature_6] + 24.89723524667872 * [ADS].[Feature_7] + 30.822470695277456 * [ADS].[Feature_8] + -28.533677848779764 * [ADS].[Feature_9] + 44.972704831488045 * [ADS].[Feature_10] + -10.40388602633966 * [ADS].[Feature_11] + 23.387935955884398 * [ADS].[Feature_12] + 1.6239554692828646 * [ADS].[Feature_13] + -1.0147396422603816 * [ADS].[Feature_14] + 35.403934684135486 * [ADS].[Feature_15] + -28.479949448579386 * [ADS].[Feature_16] + -10.280572854333377 * [ADS].[Feature_17] + 7.2366799539154245 * [ADS].[Feature_18] + 33.52597452877539 * [ADS].[Feature_19] + -144.008552186 AS [Score_2], -21.351984725968688 * [ADS].[Feature_0] + 6.169218801779128 * [ADS].[Feature_1] + -12.22830338461936 * [ADS].[Feature_2] + 27.39372405362449 * [ADS].[Feature_3] + 76.37083556009566 * [ADS].[Feature_4] + -5.871790822583714 * [ADS].[Feature_5] + 38.16375422147746 * [ADS].[Feature_6] + 63.568330209674244 * [ADS].[Feature_7] + -39.22334612849675 * [ADS].[Feature_8] + 6.64199804685376 * [ADS].[Feature_9] + -56.73780372048642 * [ADS].[Feature_10] + 76.24062407495971 * [ADS].[Feature_11] + 11.66460625921128 * [ADS].[Feature_12] + 13.495689978459096 * [ADS].[Feature_13] + 0.8216331175062774 * [ADS].[Feature_14] + -52.26591075105373 * [ADS].[Feature_15] + 18.643086766929603 * [ADS].[Feature_16] + -11.114108183289591 * [ADS].[Feature_17] + -89.85520648028586 * [ADS].[Feature_18] + 31.53392405776613 * [ADS].[Feature_19] + -126.644229781 AS [Score_3] 
FROM [INPUT_DATA] AS [ADS]), 
orig_cte AS 
(SELECT linear_model_cte.[KEY] AS [KEY], linear_model_cte.[Score_0] AS [Score_0], linear_model_cte.[Score_1] AS [Score_1], linear_model_cte.[Score_2] AS [Score_2], linear_model_cte.[Score_3] AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Proba_0], CAST(NULL AS FLOAT(53)) AS [Proba_1], CAST(NULL AS FLOAT(53)) AS [Proba_2], CAST(NULL AS FLOAT(53)) AS [Proba_3], CAST(NULL AS FLOAT(53)) AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte