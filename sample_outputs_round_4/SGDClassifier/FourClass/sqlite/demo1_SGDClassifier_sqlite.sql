-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", -11.127613603171719 * "ADS"."Feature_0" + -28.08645930525525 * "ADS"."Feature_1" + -19.533518182056014 * "ADS"."Feature_2" + 34.79830481738549 * "ADS"."Feature_3" + 19.880031041360258 * "ADS"."Feature_4" + -19.034863443220182 * "ADS"."Feature_5" + -48.91351491140781 * "ADS"."Feature_6" + -7.359047397093485 * "ADS"."Feature_7" + -26.939086792165593 * "ADS"."Feature_8" + -19.449917407178518 * "ADS"."Feature_9" + -22.470548821476726 * "ADS"."Feature_10" + 7.623294758408693 * "ADS"."Feature_11" + -10.083017129961519 * "ADS"."Feature_12" + -9.757149409308209 * "ADS"."Feature_13" + 18.8632371662456 * "ADS"."Feature_14" + -15.121153106519053 * "ADS"."Feature_15" + -25.653215026666384 * "ADS"."Feature_16" + 16.009784658424685 * "ADS"."Feature_17" + -30.834512590190407 * "ADS"."Feature_18" + -21.183329507585295 * "ADS"."Feature_19" + -52.1097141312 AS "Score_0", 3.502642552466966 * "ADS"."Feature_0" + 13.674383949566254 * "ADS"."Feature_1" + 7.075282694294859 * "ADS"."Feature_2" + 23.273847388203485 * "ADS"."Feature_3" + -52.04555225936985 * "ADS"."Feature_4" + -30.659322169468474 * "ADS"."Feature_5" + -22.009835488497114 * "ADS"."Feature_6" + -3.132082627099038 * "ADS"."Feature_7" + 30.734847267879232 * "ADS"."Feature_8" + -47.600932394980035 * "ADS"."Feature_9" + 16.053478080178863 * "ADS"."Feature_10" + 13.864534638668857 * "ADS"."Feature_11" + -4.2159753788472365 * "ADS"."Feature_12" + 28.94494100768671 * "ADS"."Feature_13" + -5.524360479378216 * "ADS"."Feature_14" + 27.50592102041606 * "ADS"."Feature_15" + 45.52967033955122 * "ADS"."Feature_16" + 37.13773248927878 * "ADS"."Feature_17" + -5.638508632426777 * "ADS"."Feature_18" + 4.0524079319101505 * "ADS"."Feature_19" + -146.237281186 AS "Score_1", -20.422589241045227 * "ADS"."Feature_0" + 13.557857994645138 * "ADS"."Feature_1" + -2.859676943883358 * "ADS"."Feature_2" + 14.73877239450184 * "ADS"."Feature_3" + 1.6912744161170215 * "ADS"."Feature_4" + 62.39844805621195 * "ADS"."Feature_5" + 39.608758220546434 * "ADS"."Feature_6" + 23.02491819859616 * "ADS"."Feature_7" + -1.5191920005041062 * "ADS"."Feature_8" + 45.15404713243979 * "ADS"."Feature_9" + -22.36544689219382 * "ADS"."Feature_10" + -35.514404899656526 * "ADS"."Feature_11" + 15.942346971755999 * "ADS"."Feature_12" + -25.75234492566793 * "ADS"."Feature_13" + -9.21359192756158 * "ADS"."Feature_14" + 17.06729721146108 * "ADS"."Feature_15" + 17.479323136888873 * "ADS"."Feature_16" + -47.8336176692365 * "ADS"."Feature_17" + -25.155794353000267 * "ADS"."Feature_18" + -40.69021583643015 * "ADS"."Feature_19" + -68.1830240835 AS "Score_2", 21.839255064590578 * "ADS"."Feature_0" + -21.76405091140456 * "ADS"."Feature_1" + -8.146276228912983 * "ADS"."Feature_2" + -42.942155926356136 * "ADS"."Feature_3" + 37.32509293266013 * "ADS"."Feature_4" + 12.34170226823987 * "ADS"."Feature_5" + 19.303021095477565 * "ADS"."Feature_6" + -28.241956254801554 * "ADS"."Feature_7" + -10.42990860047075 * "ADS"."Feature_8" + 20.940777537603882 * "ADS"."Feature_9" + 25.09171375586361 * "ADS"."Feature_10" + 14.134974590150138 * "ADS"."Feature_11" + -6.625353996934015 * "ADS"."Feature_12" + -5.666357098387786 * "ADS"."Feature_13" + -18.416519798682586 * "ADS"."Feature_14" + -18.495643526462498 * "ADS"."Feature_15" + -8.249841899577941 * "ADS"."Feature_16" + -4.770680200113559 * "ADS"."Feature_17" + 74.48876578205396 * "ADS"."Feature_18" + 47.52807979142089 * "ADS"."Feature_19" + -165.378514035 AS "Score_3" 
FROM "INPUT_DATA" AS "ADS"), 
orig_cte AS 
(SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Score_0" AS "Score_0", linear_model_cte."Score_1" AS "Score_1", linear_model_cte."Score_2" AS "Score_2", linear_model_cte."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM linear_model_cte), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte