-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM (SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM (SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM (SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS score_max) AS score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM (SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS score_max) AS score_soft_max_comp) AS soft_scu) AS score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM (SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM (SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS scu) AS score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM (SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM (SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` + `XGB_Join_CTE`.`Score_0_10` + `XGB_Join_CTE`.`Score_0_11` + `XGB_Join_CTE`.`Score_0_12` + `XGB_Join_CTE`.`Score_0_13` + `XGB_Join_CTE`.`Score_0_14` + `XGB_Join_CTE`.`Score_0_15` + `XGB_Join_CTE`.`Score_0_16` + `XGB_Join_CTE`.`Score_0_17` + `XGB_Join_CTE`.`Score_0_18` + `XGB_Join_CTE`.`Score_0_19` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` + `XGB_Join_CTE`.`Score_1_10` + `XGB_Join_CTE`.`Score_1_11` + `XGB_Join_CTE`.`Score_1_12` + `XGB_Join_CTE`.`Score_1_13` + `XGB_Join_CTE`.`Score_1_14` + `XGB_Join_CTE`.`Score_1_15` + `XGB_Join_CTE`.`Score_1_16` + `XGB_Join_CTE`.`Score_1_17` + `XGB_Join_CTE`.`Score_1_18` + `XGB_Join_CTE`.`Score_1_19` AS `Score_1` 
FROM (SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_0_10`.join_key_0_10 AS join_key_0_10, `XGB_Tree_0_10`.`Score_0_10` AS `Score_0_10`, `XGB_Tree_0_11`.join_key_0_11 AS join_key_0_11, `XGB_Tree_0_11`.`Score_0_11` AS `Score_0_11`, `XGB_Tree_0_12`.join_key_0_12 AS join_key_0_12, `XGB_Tree_0_12`.`Score_0_12` AS `Score_0_12`, `XGB_Tree_0_13`.join_key_0_13 AS join_key_0_13, `XGB_Tree_0_13`.`Score_0_13` AS `Score_0_13`, `XGB_Tree_0_14`.join_key_0_14 AS join_key_0_14, `XGB_Tree_0_14`.`Score_0_14` AS `Score_0_14`, `XGB_Tree_0_15`.join_key_0_15 AS join_key_0_15, `XGB_Tree_0_15`.`Score_0_15` AS `Score_0_15`, `XGB_Tree_0_16`.join_key_0_16 AS join_key_0_16, `XGB_Tree_0_16`.`Score_0_16` AS `Score_0_16`, `XGB_Tree_0_17`.join_key_0_17 AS join_key_0_17, `XGB_Tree_0_17`.`Score_0_17` AS `Score_0_17`, `XGB_Tree_0_18`.join_key_0_18 AS join_key_0_18, `XGB_Tree_0_18`.`Score_0_18` AS `Score_0_18`, `XGB_Tree_0_19`.join_key_0_19 AS join_key_0_19, `XGB_Tree_0_19`.`Score_0_19` AS `Score_0_19`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_1_10`.join_key_1_10 AS join_key_1_10, `XGB_Tree_1_10`.`Score_1_10` AS `Score_1_10`, `XGB_Tree_1_11`.join_key_1_11 AS join_key_1_11, `XGB_Tree_1_11`.`Score_1_11` AS `Score_1_11`, `XGB_Tree_1_12`.join_key_1_12 AS join_key_1_12, `XGB_Tree_1_12`.`Score_1_12` AS `Score_1_12`, `XGB_Tree_1_13`.join_key_1_13 AS join_key_1_13, `XGB_Tree_1_13`.`Score_1_13` AS `Score_1_13`, `XGB_Tree_1_14`.join_key_1_14 AS join_key_1_14, `XGB_Tree_1_14`.`Score_1_14` AS `Score_1_14`, `XGB_Tree_1_15`.join_key_1_15 AS join_key_1_15, `XGB_Tree_1_15`.`Score_1_15` AS `Score_1_15`, `XGB_Tree_1_16`.join_key_1_16 AS join_key_1_16, `XGB_Tree_1_16`.`Score_1_16` AS `Score_1_16`, `XGB_Tree_1_17`.join_key_1_17 AS join_key_1_17, `XGB_Tree_1_17`.`Score_1_17` AS `Score_1_17`, `XGB_Tree_1_18`.join_key_1_18 AS join_key_1_18, `XGB_Tree_1_18`.`Score_1_18` AS `Score_1_18`, `XGB_Tree_1_19`.join_key_1_19 AS join_key_1_19, `XGB_Tree_1_19`.`Score_1_19` AS `Score_1_19` 
FROM (SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM (SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0528 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173913 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0542056 AS `Score`) AS `Values`) AS `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id) AS `DT_Output`) AS `XGB_Tree_0_0` LEFT OUTER JOIN (SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM (SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_3` <= -0.303389) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_1` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, -0.303389 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545455 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00769231 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0690909 AS `Score`) AS `Values`) AS `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id) AS `DT_Output_1`) AS `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM (SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_2` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0509579 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.104728 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352024 AS `Score`) AS `Values`) AS `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id) AS `DT_Output_2`) AS `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN (SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM (SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.132093) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_3` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.132093 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0528818 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.074381 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00173077 AS `Score`) AS `Values`) AS `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id) AS `DT_Output_3`) AS `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN (SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM (SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.0221557) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_4` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0495421 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0221557 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0933026 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0338041 AS `Score`) AS `Values`) AS `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id) AS `DT_Output_4`) AS `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN (SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM (SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_5` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0512648 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0709107 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00321517 AS `Score`) AS `Values`) AS `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id) AS `DT_Output_5`) AS `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN (SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM (SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_6` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0482003 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0923411 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0283252 AS `Score`) AS `Values`) AS `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id) AS `DT_Output_6`) AS `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN (SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM (SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.0309767) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_7` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.0309767 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.049804 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0633051 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0029264 AS `Score`) AS `Values`) AS `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id) AS `DT_Output_7`) AS `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN (SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM (SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_8` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0475054 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0144317 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0712469 AS `Score`) AS `Values`) AS `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id) AS `DT_Output_8`) AS `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN (SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM (SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.933175) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_9` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.933175 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.048859 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0173928 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0538239 AS `Score`) AS `Values`) AS `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id) AS `DT_Output_9`) AS `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN (SELECT `DT_Output_10`.`KEY` AS join_key_0_10, `DT_Output_10`.`Score` AS `Score_0_10` 
FROM (SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_10` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.046514 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0814204 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0265824 AS `Score`) AS `Values`) AS `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id) AS `DT_Output_10`) AS `XGB_Tree_0_10` ON `XGB_Tree_0_10`.join_key_0_10 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN (SELECT `DT_Output_11`.`KEY` AS join_key_0_11, `DT_Output_11`.`Score` AS `Score_0_11` 
FROM (SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.355296) THEN CASE WHEN (`ADS`.`Feature_1` <= -0.194039) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_11` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.355296 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, -0.194039 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047508 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014206 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046052 AS `Score`) AS `Values`) AS `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id) AS `DT_Output_11`) AS `XGB_Tree_0_11` ON `XGB_Tree_0_11`.join_key_0_11 = `XGB_Tree_0_10`.join_key_0_10 LEFT OUTER JOIN (SELECT `DT_Output_12`.`KEY` AS join_key_0_12, `DT_Output_12`.`Score` AS `Score_0_12` 
FROM (SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_12` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0454711 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0748806 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0252169 AS `Score`) AS `Values`) AS `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id) AS `DT_Output_12`) AS `XGB_Tree_0_12` ON `XGB_Tree_0_12`.join_key_0_12 = `XGB_Tree_0_11`.join_key_0_11 LEFT OUTER JOIN (SELECT `DT_Output_13`.`KEY` AS join_key_0_13, `DT_Output_13`.`Score` AS `Score_0_13` 
FROM (SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_13` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0303923 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0298728 AS `Score`) AS `Values`) AS `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id) AS `DT_Output_13`) AS `XGB_Tree_0_13` ON `XGB_Tree_0_13`.join_key_0_13 = `XGB_Tree_0_12`.join_key_0_12 LEFT OUTER JOIN (SELECT `DT_Output_14`.`KEY` AS join_key_0_14, `DT_Output_14`.`Score` AS `Score_0_14` 
FROM (SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= 0.270852) THEN CASE WHEN (`ADS`.`Feature_13` <= 0.171289) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_14` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.270852 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_13' AS feature, 0.171289 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0448236 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0149989 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0623732 AS `Score`) AS `Values`) AS `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id) AS `DT_Output_14`) AS `XGB_Tree_0_14` ON `XGB_Tree_0_14`.join_key_0_14 = `XGB_Tree_0_13`.join_key_0_13 LEFT OUTER JOIN (SELECT `DT_Output_15`.`KEY` AS join_key_0_15, `DT_Output_15`.`Score` AS `Score_0_15` 
FROM (SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` <= -1.12849) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.407107) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_15` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, -1.12849 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0461165 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.407107 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0177322 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0384068 AS `Score`) AS `Values`) AS `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id) AS `DT_Output_15`) AS `XGB_Tree_0_15` ON `XGB_Tree_0_15`.join_key_0_15 = `XGB_Tree_0_14`.join_key_0_14 LEFT OUTER JOIN (SELECT `DT_Output_16`.`KEY` AS join_key_0_16, `DT_Output_16`.`Score` AS `Score_0_16` 
FROM (SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_16` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0440372 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0682138 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0238355 AS `Score`) AS `Values`) AS `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id) AS `DT_Output_16`) AS `XGB_Tree_0_16` ON `XGB_Tree_0_16`.join_key_0_16 = `XGB_Tree_0_15`.join_key_0_15 LEFT OUTER JOIN (SELECT `DT_Output_17`.`KEY` AS join_key_0_17, `DT_Output_17`.`Score` AS `Score_0_17` 
FROM (SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.573752) THEN 1 ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_17` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.573752 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0265798 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0277206 AS `Score`) AS `Values`) AS `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id) AS `DT_Output_17`) AS `XGB_Tree_0_17` ON `XGB_Tree_0_17`.join_key_0_17 = `XGB_Tree_0_16`.join_key_0_16 LEFT OUTER JOIN (SELECT `DT_Output_18`.`KEY` AS join_key_0_18, `DT_Output_18`.`Score` AS `Score_0_18` 
FROM (SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_14` <= -0.162662) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_2` <= -0.337606) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_18` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_14' AS feature, -0.162662 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430376 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.337606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0636274 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0227303 AS `Score`) AS `Values`) AS `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id) AS `DT_Output_18`) AS `XGB_Tree_0_18` ON `XGB_Tree_0_18`.join_key_0_18 = `XGB_Tree_0_17`.join_key_0_17 LEFT OUTER JOIN (SELECT `DT_Output_19`.`KEY` AS join_key_0_19, `DT_Output_19`.`Score` AS `Score_0_19` 
FROM (SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= -0.309369) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_17` <= -0.348026) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_19` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, -0.309369 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0343202 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_17' AS feature, -0.348026 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0169904 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0493292 AS `Score`) AS `Values`) AS `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id) AS `DT_Output_19`) AS `XGB_Tree_0_19` ON `XGB_Tree_0_19`.join_key_0_19 = `XGB_Tree_0_18`.join_key_0_18 LEFT OUTER JOIN (SELECT `DT_Output_20`.`KEY` AS join_key_1_0, `DT_Output_20`.`Score` AS `Score_1_0` 
FROM (SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_20` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.107368 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0628571 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score`) AS `Values`) AS `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id) AS `DT_Output_20`) AS `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_19`.join_key_0_19 LEFT OUTER JOIN (SELECT `DT_Output_21`.`KEY` AS join_key_1_1, `DT_Output_21`.`Score` AS `Score_1_1` 
FROM (SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.547611) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_21` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.547611 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0465753 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00674157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0741573 AS `Score`) AS `Values`) AS `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id) AS `DT_Output_21`) AS `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN (SELECT `DT_Output_22`.`KEY` AS join_key_1_2, `DT_Output_22`.`Score` AS `Score_1_2` 
FROM (SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_22` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.095627 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0615761 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00629487 AS `Score`) AS `Values`) AS `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id) AS `DT_Output_22`) AS `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN (SELECT `DT_Output_23`.`KEY` AS join_key_1_3, `DT_Output_23`.`Score` AS `Score_1_3` 
FROM (SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_23` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0494598 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0248556 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0755277 AS `Score`) AS `Values`) AS `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id) AS `DT_Output_23`) AS `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN (SELECT `DT_Output_24`.`KEY` AS join_key_1_4, `DT_Output_24`.`Score` AS `Score_1_4` 
FROM (SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.560598) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_24` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.560598 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0862418 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0604348 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00577141 AS `Score`) AS `Values`) AS `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id) AS `DT_Output_24`) AS `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN (SELECT `DT_Output_25`.`KEY` AS join_key_1_5, `DT_Output_25`.`Score` AS `Score_1_5` 
FROM (SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.573526) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_25` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.573526 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.044225 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00150361 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0582093 AS `Score`) AS `Values`) AS `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id) AS `DT_Output_25`) AS `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN (SELECT `DT_Output_26`.`KEY` AS join_key_1_6, `DT_Output_26`.`Score` AS `Score_1_6` 
FROM (SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_26` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0783186 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0592226 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00725416 AS `Score`) AS `Values`) AS `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id) AS `DT_Output_26`) AS `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN (SELECT `DT_Output_27`.`KEY` AS join_key_1_7, `DT_Output_27`.`Score` AS `Score_1_7` 
FROM (SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_27` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0472936 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0230867 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658604 AS `Score`) AS `Values`) AS `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id) AS `DT_Output_27`) AS `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN (SELECT `DT_Output_28`.`KEY` AS join_key_1_8, `DT_Output_28`.`Score` AS `Score_1_8` 
FROM (SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_28` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716961 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0582362 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00665092 AS `Score`) AS `Values`) AS `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id) AS `DT_Output_28`) AS `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN (SELECT `DT_Output_29`.`KEY` AS join_key_1_9, `DT_Output_29`.`Score` AS `Score_1_9` 
FROM (SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.933164) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_29` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.933164 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0421851 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0532971 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000112264 AS `Score`) AS `Values`) AS `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id) AS `DT_Output_29`) AS `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN (SELECT `DT_Output_30`.`KEY` AS join_key_1_10, `DT_Output_30`.`Score` AS `Score_1_10` 
FROM (SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_30` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0658157 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0572557 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00646724 AS `Score`) AS `Values`) AS `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id) AS `DT_Output_30`) AS `XGB_Tree_1_10` ON `XGB_Tree_1_10`.join_key_1_10 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN (SELECT `DT_Output_31`.`KEY` AS join_key_1_11, `DT_Output_31`.`Score` AS `Score_1_11` 
FROM (SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_31` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0456712 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0139805 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0556411 AS `Score`) AS `Values`) AS `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id) AS `DT_Output_31`) AS `XGB_Tree_1_11` ON `XGB_Tree_1_11`.join_key_1_11 = `XGB_Tree_1_10`.join_key_1_10 LEFT OUTER JOIN (SELECT `DT_Output_32`.`KEY` AS join_key_1_12, `DT_Output_32`.`Score` AS `Score_1_12` 
FROM (SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.552609) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_32` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0524294 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.552609 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0718233 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.010216 AS `Score`) AS `Values`) AS `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id) AS `DT_Output_32`) AS `XGB_Tree_1_12` ON `XGB_Tree_1_12`.join_key_1_12 = `XGB_Tree_1_11`.join_key_1_11 LEFT OUTER JOIN (SELECT `DT_Output_33`.`KEY` AS join_key_1_13, `DT_Output_33`.`Score` AS `Score_1_13` 
FROM (SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.395059) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_33` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0443359 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.395059 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0137398 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0521181 AS `Score`) AS `Values`) AS `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id) AS `DT_Output_33`) AS `XGB_Tree_1_13` ON `XGB_Tree_1_13`.join_key_1_13 = `XGB_Tree_1_12`.join_key_1_12 LEFT OUTER JOIN (SELECT `DT_Output_34`.`KEY` AS join_key_1_14, `DT_Output_34`.`Score` AS `Score_1_14` 
FROM (SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.484157) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_34` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.484157 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058079 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0559599 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00544638 AS `Score`) AS `Values`) AS `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id) AS `DT_Output_34`) AS `XGB_Tree_1_14` ON `XGB_Tree_1_14`.join_key_1_14 = `XGB_Tree_1_13`.join_key_1_13 LEFT OUTER JOIN (SELECT `DT_Output_35`.`KEY` AS join_key_1_15, `DT_Output_35`.`Score` AS `Score_1_15` 
FROM (SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= -0.332119) THEN CASE WHEN (`ADS`.`Feature_14` <= 0.748106) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_35` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, -0.332119 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_14' AS feature, 0.748106 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0393956 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0513474 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.66914e-05 AS `Score`) AS `Values`) AS `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id) AS `DT_Output_35`) AS `XGB_Tree_1_15` ON `XGB_Tree_1_15`.join_key_1_15 = `XGB_Tree_1_14`.join_key_1_14 LEFT OUTER JOIN (SELECT `DT_Output_36`.`KEY` AS join_key_1_16, `DT_Output_36`.`Score` AS `Score_1_16` 
FROM (SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= -0.513914) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_13` <= -0.470898) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_36` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -0.513914 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0505854 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.470898 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0704243 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.00328872 AS `Score`) AS `Values`) AS `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id) AS `DT_Output_36`) AS `XGB_Tree_1_16` ON `XGB_Tree_1_16`.join_key_1_16 = `XGB_Tree_1_15`.join_key_1_15 LEFT OUTER JOIN (SELECT `DT_Output_37`.`KEY` AS join_key_1_17, `DT_Output_37`.`Score` AS `Score_1_17` 
FROM (SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.271417) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.809079) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_37` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.271417 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0427418 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.809079 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00522284 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0544344 AS `Score`) AS `Values`) AS `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id) AS `DT_Output_37`) AS `XGB_Tree_1_17` ON `XGB_Tree_1_17`.join_key_1_17 = `XGB_Tree_1_16`.join_key_1_16 LEFT OUTER JOIN (SELECT `DT_Output_38`.`KEY` AS join_key_1_18, `DT_Output_38`.`Score` AS `Score_1_18` 
FROM (SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_7` <= 0.679415) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.382493) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_38` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, 0.679415 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.382493 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0512886 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0545157 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00655344 AS `Score`) AS `Values`) AS `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id) AS `DT_Output_38`) AS `XGB_Tree_1_18` ON `XGB_Tree_1_18`.join_key_1_18 = `XGB_Tree_1_17`.join_key_1_17 LEFT OUTER JOIN (SELECT `DT_Output_39`.`KEY` AS join_key_1_19, `DT_Output_39`.`Score` AS `Score_1_19` 
FROM (SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM (SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= -0.548276) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_15` <= 0.342874) THEN 3 ELSE 4 END END AS node_id_2 
FROM `INPUT_DATA` AS `ADS`) AS `DT_node_lookup_39` LEFT OUTER JOIN (SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, -0.548276 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.047082 AS `Score` UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.342874 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0229412 AS `Score` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0471897 AS `Score`) AS `Values`) AS `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id) AS `DT_Output_39`) AS `XGB_Tree_1_19` ON `XGB_Tree_1_19`.join_key_1_19 = `XGB_Tree_1_18`.join_key_1_18) AS `XGB_Join_CTE`) AS `XGB_AVG_Scores`) AS orig_cte) AS score_max) AS score_soft_max_comp) AS score_soft_max) AS arg_max_cte