-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 14.1272917399 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 19.2896485062 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 91.9690333919 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 654.889103691 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.0963602811951 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.104340984183 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.0887993158172 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.0489191458699 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.181161862917 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.0627976098418 ELSE [ADS].[Feature_9] END AS impute_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN 0.405172056239 ELSE [ADS].[Feature_10] END AS impute_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN 1.21685342707 ELSE [ADS].[Feature_11] END AS impute_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 2.86605922671 ELSE [ADS].[Feature_12] END AS impute_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN 40.3370790861 ELSE [ADS].[Feature_13] END AS impute_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.00704097891037 ELSE [ADS].[Feature_14] END AS impute_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN 0.0254781388401 ELSE [ADS].[Feature_15] END AS impute_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 0.0318937163445 ELSE [ADS].[Feature_16] END AS impute_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN 0.0117961370826 ELSE [ADS].[Feature_17] END AS impute_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN 0.0205422987698 ELSE [ADS].[Feature_18] END AS impute_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN 0.00379490386643 ELSE [ADS].[Feature_19] END AS impute_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN 16.2691898067 ELSE [ADS].[Feature_20] END AS impute_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN 25.6772231986 ELSE [ADS].[Feature_21] END AS impute_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN 107.261212654 ELSE [ADS].[Feature_22] END AS impute_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN 880.583128295 ELSE [ADS].[Feature_23] END AS impute_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN 0.132368594025 ELSE [ADS].[Feature_24] END AS impute_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN 0.254265043937 ELSE [ADS].[Feature_25] END AS impute_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN 0.272188483304 ELSE [ADS].[Feature_26] END AS impute_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN 0.114606223199 ELSE [ADS].[Feature_27] END AS impute_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN 0.290075571178 ELSE [ADS].[Feature_28] END AS impute_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.0839458172232 ELSE [ADS].[Feature_29] END AS impute_31 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 14.1272917399 AS impute_2, [ADS_imp_1_OUT].impute_3 - 19.2896485062 AS impute_3, [ADS_imp_1_OUT].impute_4 - 91.9690333919 AS impute_4, [ADS_imp_1_OUT].impute_5 - 654.889103691 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.0963602811951 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.104340984183 AS impute_7, [ADS_imp_1_OUT].impute_8 - 0.0887993158172 AS impute_8, [ADS_imp_1_OUT].impute_9 - 0.0489191458699 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.181161862917 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.0627976098418 AS impute_11, [ADS_imp_1_OUT].impute_12 - 0.405172056239 AS impute_12, [ADS_imp_1_OUT].impute_13 - 1.21685342707 AS impute_13, [ADS_imp_1_OUT].impute_14 - 2.86605922671 AS impute_14, [ADS_imp_1_OUT].impute_15 - 40.3370790861 AS impute_15, [ADS_imp_1_OUT].impute_16 - 0.00704097891037 AS impute_16, [ADS_imp_1_OUT].impute_17 - 0.0254781388401 AS impute_17, [ADS_imp_1_OUT].impute_18 - 0.0318937163445 AS impute_18, [ADS_imp_1_OUT].impute_19 - 0.0117961370826 AS impute_19, [ADS_imp_1_OUT].impute_20 - 0.0205422987698 AS impute_20, [ADS_imp_1_OUT].impute_21 - 0.00379490386643 AS impute_21, [ADS_imp_1_OUT].impute_22 - 16.2691898067 AS impute_22, [ADS_imp_1_OUT].impute_23 - 25.6772231986 AS impute_23, [ADS_imp_1_OUT].impute_24 - 107.261212654 AS impute_24, [ADS_imp_1_OUT].impute_25 - 880.583128295 AS impute_25, [ADS_imp_1_OUT].impute_26 - 0.132368594025 AS impute_26, [ADS_imp_1_OUT].impute_27 - 0.254265043937 AS impute_27, [ADS_imp_1_OUT].impute_28 - 0.272188483304 AS impute_28, [ADS_imp_1_OUT].impute_29 - 0.114606223199 AS impute_29, [ADS_imp_1_OUT].impute_30 - 0.290075571178 AS impute_30, [ADS_imp_1_OUT].impute_31 - 0.0839458172232 AS impute_31 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.00508623201873 + [CenteredDataForPCA].impute_3 * 0.00219657026063 + [CenteredDataForPCA].impute_4 * 0.0350763297783 + [CenteredDataForPCA].impute_5 * 0.516826468722 + [CenteredDataForPCA].impute_6 * 4.23694535447e-06 + [CenteredDataForPCA].impute_7 * 4.05260046729e-05 + [CenteredDataForPCA].impute_8 * 8.19399539422e-05 + [CenteredDataForPCA].impute_9 * 4.77807775163e-05 + [CenteredDataForPCA].impute_10 * 7.07804331831e-06 + [CenteredDataForPCA].impute_11 * -2.62155250648e-06 + [CenteredDataForPCA].impute_12 * 0.000313742506643 + [CenteredDataForPCA].impute_13 * -6.50984007831e-05 + [CenteredDataForPCA].impute_14 * 0.00223634150302 + [CenteredDataForPCA].impute_15 * 0.0557271669111 + [CenteredDataForPCA].impute_16 * -8.05646029196e-07 + [CenteredDataForPCA].impute_17 * 5.51918196969e-06 + [CenteredDataForPCA].impute_18 * 8.87094462e-06 + [CenteredDataForPCA].impute_19 * 3.27915008813e-06 + [CenteredDataForPCA].impute_20 * -1.24101835689e-06 + [CenteredDataForPCA].impute_21 * -8.54530832068e-08 + [CenteredDataForPCA].impute_22 * 0.00715473257241 + [CenteredDataForPCA].impute_23 * 0.00306736622401 + [CenteredDataForPCA].impute_24 * 0.04945764466 + [CenteredDataForPCA].impute_25 * 0.852063391798 + [CenteredDataForPCA].impute_26 * 6.42005480763e-06 + [CenteredDataForPCA].impute_27 * 0.000101275937184 + [CenteredDataForPCA].impute_28 * 0.000168928625057 + [CenteredDataForPCA].impute_29 * 7.36658177657e-05 + [CenteredDataForPCA].impute_30 * 1.78986261776e-05 + [CenteredDataForPCA].impute_31 * 1.61356158525e-06 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.00928705649724 + [CenteredDataForPCA].impute_3 * -0.00288160657798 + [CenteredDataForPCA].impute_4 * 0.0627480827489 + [CenteredDataForPCA].impute_5 * 0.851823720483 + [CenteredDataForPCA].impute_6 * -1.48194356158e-05 + [CenteredDataForPCA].impute_7 * -2.68862248719e-06 + [CenteredDataForPCA].impute_8 * 7.51419574317e-05 + [CenteredDataForPCA].impute_9 * 4.63501038363e-05 + [CenteredDataForPCA].impute_10 * -2.52430431357e-05 + [CenteredDataForPCA].impute_11 * -1.61197147998e-05 + [CenteredDataForPCA].impute_12 * -5.38692831195e-05 + [CenteredDataForPCA].impute_13 * 0.000348370414257 + [CenteredDataForPCA].impute_14 * 0.000819640791368 + [CenteredDataForPCA].impute_15 * 0.00751112451338 + [CenteredDataForPCA].impute_16 * 1.4943813104e-06 + [CenteredDataForPCA].impute_17 * 1.27357957011e-05 + [CenteredDataForPCA].impute_18 * 2.86921008766e-05 + [CenteredDataForPCA].impute_19 * 9.36007476642e-06 + [CenteredDataForPCA].impute_20 * 1.22647431651e-05 + [CenteredDataForPCA].impute_21 * 2.89683789846e-07 + [CenteredDataForPCA].impute_22 * -0.000568673345422 + [CenteredDataForPCA].impute_23 * -0.0132152604641 + [CenteredDataForPCA].impute_24 * -0.000185961117041 + [CenteredDataForPCA].impute_25 * -0.519742358317 + [CenteredDataForPCA].impute_26 * -7.68565691773e-05 + [CenteredDataForPCA].impute_27 * -0.000256104143553 + [CenteredDataForPCA].impute_28 * -0.000175471479001 + [CenteredDataForPCA].impute_29 * -3.05051743179e-05 + [CenteredDataForPCA].impute_30 * -0.000157042844697 + [CenteredDataForPCA].impute_31 * -5.53071661675e-05 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.0123425821157 + [CenteredDataForPCA].impute_3 * -0.00635497857479 + [CenteredDataForPCA].impute_4 * -0.0716694814445 + [CenteredDataForPCA].impute_5 * -0.0278944181074 + [CenteredDataForPCA].impute_6 * 7.26596827177e-05 + [CenteredDataForPCA].impute_7 * 0.000101754349505 + [CenteredDataForPCA].impute_8 * 0.0002659897293 + [CenteredDataForPCA].impute_9 * 3.6047176433e-05 + [CenteredDataForPCA].impute_10 * 0.00014129095828 + [CenteredDataForPCA].impute_11 * 5.06376971176e-05 + [CenteredDataForPCA].impute_12 * 0.00606156709482 + [CenteredDataForPCA].impute_13 * 0.00623377634798 + [CenteredDataForPCA].impute_14 * 0.0438560369115 + [CenteredDataForPCA].impute_15 * 0.990245878283 + [CenteredDataForPCA].impute_16 * 4.3447143288e-05 + [CenteredDataForPCA].impute_17 * 0.000127658711284 + [CenteredDataForPCA].impute_18 * 0.000207365800194 + [CenteredDataForPCA].impute_19 * 4.7885514373e-05 + [CenteredDataForPCA].impute_20 * 0.000114411270113 + [CenteredDataForPCA].impute_21 * 2.4315836964e-05 + [CenteredDataForPCA].impute_22 * -0.0155659935239 + [CenteredDataForPCA].impute_23 * -0.0315446196162 + [CenteredDataForPCA].impute_24 * -0.092313379086 + [CenteredDataForPCA].impute_25 * -0.0393186778242 + [CenteredDataForPCA].impute_26 * -4.21307399419e-05 + [CenteredDataForPCA].impute_27 * -0.000764833236821 + [CenteredDataForPCA].impute_28 * -0.00084655223666 + [CenteredDataForPCA].impute_29 * -0.000333596392895 + [CenteredDataForPCA].impute_30 * -0.000349992952226 + [CenteredDataForPCA].impute_31 * -4.09371692043e-05 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.034238047329 + [CenteredDataForPCA].impute_3 * -0.36241511066 + [CenteredDataForPCA].impute_4 * -0.329281416695 + [CenteredDataForPCA].impute_5 * 0.0394122493555 + [CenteredDataForPCA].impute_6 * -0.000344153009316 + [CenteredDataForPCA].impute_7 * -0.00300489873157 + [CenteredDataForPCA].impute_8 * -0.00340779109833 + [CenteredDataForPCA].impute_9 * -0.00124725032251 + [CenteredDataForPCA].impute_10 * -0.000966809714273 + [CenteredDataForPCA].impute_11 * -0.000199194796397 + [CenteredDataForPCA].impute_12 * -0.00408618842931 + [CenteredDataForPCA].impute_13 * -0.0226398666335 + [CenteredDataForPCA].impute_14 * -0.0498565303495 + [CenteredDataForPCA].impute_15 * -0.10198027498 + [CenteredDataForPCA].impute_16 * 6.69114619433e-06 + [CenteredDataForPCA].impute_17 * -0.000893263011809 + [CenteredDataForPCA].impute_18 * -0.000995328877977 + [CenteredDataForPCA].impute_19 * -0.000234560912295 + [CenteredDataForPCA].impute_20 * -0.000124528446471 + [CenteredDataForPCA].impute_21 * -6.72412842897e-05 + [CenteredDataForPCA].impute_22 * -0.0618999387207 + [CenteredDataForPCA].impute_23 * -0.542057412175 + [CenteredDataForPCA].impute_24 * -0.666816450971 + [CenteredDataForPCA].impute_25 * 0.0387691524053 + [CenteredDataForPCA].impute_26 * -0.000721927588877 + [CenteredDataForPCA].impute_27 * -0.0103619614431 + [CenteredDataForPCA].impute_28 * -0.0115618070811 + [CenteredDataForPCA].impute_29 * -0.00299467373451 + [CenteredDataForPCA].impute_30 * -0.00264085170173 + [CenteredDataForPCA].impute_31 * -0.000908697292267 AS anoova_5, [CenteredDataForPCA].impute_2 * 0.0354561137788 + [CenteredDataForPCA].impute_3 * -0.443187450361 + [CenteredDataForPCA].impute_4 * 0.313382893025 + [CenteredDataForPCA].impute_5 * -0.0460378117325 + [CenteredDataForPCA].impute_6 * 0.000579019358894 + [CenteredDataForPCA].impute_7 * 0.00252639926496 + [CenteredDataForPCA].impute_8 * 0.00219520726393 + [CenteredDataForPCA].impute_9 * 0.00113196737427 + [CenteredDataForPCA].impute_10 * 0.000937014168987 + [CenteredDataForPCA].impute_11 * 0.0002070280415 + [CenteredDataForPCA].impute_12 * 0.00293386179506 + [CenteredDataForPCA].impute_13 * -0.0375434531098 + [CenteredDataForPCA].impute_14 * 0.0357275319968 + [CenteredDataForPCA].impute_15 * 0.0508045702308 + [CenteredDataForPCA].impute_16 * -5.18037664417e-05 + [CenteredDataForPCA].impute_17 * 0.000524579915081 + [CenteredDataForPCA].impute_18 * 0.000576839903301 + [CenteredDataForPCA].impute_19 * 0.000225598524371 + [CenteredDataForPCA].impute_20 * 6.11321955063e-05 + [CenteredDataForPCA].impute_21 * 4.64421630449e-05 + [CenteredDataForPCA].impute_22 * 0.053144766681 + [CenteredDataForPCA].impute_23 * -0.612574311832 + [CenteredDataForPCA].impute_24 * 0.564102975833 + [CenteredDataForPCA].impute_25 * -0.0184525531046 + [CenteredDataForPCA].impute_26 * 0.000465062511883 + [CenteredDataForPCA].impute_27 * 0.00609647380142 + [CenteredDataForPCA].impute_28 * 0.00616530214107 + [CenteredDataForPCA].impute_29 * 0.00241157233019 + [CenteredDataForPCA].impute_30 * 0.00188324181926 + [CenteredDataForPCA].impute_31 * 0.000519581269035 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.131213100812 + [CenteredDataForPCA].impute_3 * -0.213486088794 + [CenteredDataForPCA].impute_4 * -0.840324225067 + [CenteredDataForPCA].impute_5 * 0.0523468100673 + [CenteredDataForPCA].impute_6 * -0.000406502429994 + [CenteredDataForPCA].impute_7 * -0.00101527757899 + [CenteredDataForPCA].impute_8 * 0.00027560006966 + [CenteredDataForPCA].impute_9 * -0.00057634687785 + [CenteredDataForPCA].impute_10 * -0.000179444494787 + [CenteredDataForPCA].impute_11 * 0.000219983885026 + [CenteredDataForPCA].impute_12 * -0.000845585552115 + [CenteredDataForPCA].impute_13 * -0.0124013980426 + [CenteredDataForPCA].impute_14 * 0.0948056396683 + [CenteredDataForPCA].impute_15 * -0.0231166662489 + [CenteredDataForPCA].impute_16 * -1.49989513623e-05 + [CenteredDataForPCA].impute_17 * -0.000359930491725 + [CenteredDataForPCA].impute_18 * -0.000383840527372 + [CenteredDataForPCA].impute_19 * -0.000425616207791 + [CenteredDataForPCA].impute_20 * -4.11711910814e-05 + [CenteredDataForPCA].impute_21 * -0.000100135534947 + [CenteredDataForPCA].impute_22 * -0.074980718614 + [CenteredDataForPCA].impute_23 * 0.121167279179 + [CenteredDataForPCA].impute_24 * 0.44463052442 + [CenteredDataForPCA].impute_25 * -0.0201806771736 + [CenteredDataForPCA].impute_26 * 0.00147871511087 + [CenteredDataForPCA].impute_27 * 0.00948569782096 + [CenteredDataForPCA].impute_28 * 0.0104511092381 + [CenteredDataForPCA].impute_29 * 0.00159681971408 + [CenteredDataForPCA].impute_30 * 0.00547852367946 + [CenteredDataForPCA].impute_31 * 0.0012372657926 AS anoova_7, [CenteredDataForPCA].impute_2 * 0.0335131911571 + [CenteredDataForPCA].impute_3 * -0.784253474948 + [CenteredDataForPCA].impute_4 * 0.189074737216 + [CenteredDataForPCA].impute_5 * -0.00733787337319 + [CenteredDataForPCA].impute_6 * 0.00160796958066 + [CenteredDataForPCA].impute_7 * 0.000277107786425 + [CenteredDataForPCA].impute_8 * 0.00102365524821 + [CenteredDataForPCA].impute_9 * 0.000905454729064 + [CenteredDataForPCA].impute_10 * 0.000598298140341 + [CenteredDataForPCA].impute_11 * -4.25619565464e-05 + [CenteredDataForPCA].impute_12 * -0.0153826412115 + [CenteredDataForPCA].impute_13 * 0.0666867308073 + [CenteredDataForPCA].impute_14 * -0.148548561364 + [CenteredDataForPCA].impute_15 * 0.0225977534145 + [CenteredDataForPCA].impute_16 * -0.00023717706347 + [CenteredDataForPCA].impute_17 * -0.00127405509665 + [CenteredDataForPCA].impute_18 * -0.00141036864638 + [CenteredDataForPCA].impute_19 * -0.00052161474561 + [CenteredDataForPCA].impute_20 * -0.00071377311434 + [CenteredDataForPCA].impute_21 * -0.000194572501324 + [CenteredDataForPCA].impute_22 * 0.0453901657216 + [CenteredDataForPCA].impute_23 * 0.552024144416 + [CenteredDataForPCA].impute_24 * -0.117015608332 + [CenteredDataForPCA].impute_25 * 0.00183169389582 + [CenteredDataForPCA].impute_26 * 0.00394704099393 + [CenteredDataForPCA].impute_27 * 0.00774390328624 + [CenteredDataForPCA].impute_28 * 0.0108822097042 + [CenteredDataForPCA].impute_29 * 0.00424156865424 + [CenteredDataForPCA].impute_30 * 0.0070379952676 + [CenteredDataForPCA].impute_31 * 0.00117067749582 AS anoova_8, [CenteredDataForPCA].impute_2 * -0.0754924585463 + [CenteredDataForPCA].impute_3 * -0.0687405638033 + [CenteredDataForPCA].impute_4 * 0.0839642266852 + [CenteredDataForPCA].impute_5 * -0.00300992471328 + [CenteredDataForPCA].impute_6 * 0.00343658579997 + [CenteredDataForPCA].impute_7 * 0.0155731486145 + [CenteredDataForPCA].impute_8 * 0.0192512586711 + [CenteredDataForPCA].impute_9 * 0.00907295722324 + [CenteredDataForPCA].impute_10 * 0.00914981253364 + [CenteredDataForPCA].impute_11 * 0.00300903312927 + [CenteredDataForPCA].impute_12 * 0.0841264090628 + [CenteredDataForPCA].impute_13 * 0.587281487414 + [CenteredDataForPCA].impute_14 * 0.777894164957 + [CenteredDataForPCA].impute_15 * -0.0422340771686 + [CenteredDataForPCA].impute_16 * 0.00160686058017 + [CenteredDataForPCA].impute_17 * 0.0086804542769 + [CenteredDataForPCA].impute_18 * 0.011790846368 + [CenteredDataForPCA].impute_19 * 0.00399536083142 + [CenteredDataForPCA].impute_20 * 0.00554864403965 + [CenteredDataForPCA].impute_21 * 0.00144055226646 + [CenteredDataForPCA].impute_22 * -0.129429314862 + [CenteredDataForPCA].impute_23 * 0.016015867727 + [CenteredDataForPCA].impute_24 * -0.0732396131967 + [CenteredDataForPCA].impute_25 * 0.00501077220572 + [CenteredDataForPCA].impute_26 * -0.00213704577363 + [CenteredDataForPCA].impute_27 * -0.00859643463212 + [CenteredDataForPCA].impute_28 * -0.0059601734146 + [CenteredDataForPCA].impute_29 * 0.000406900452006 + [CenteredDataForPCA].impute_30 * -0.00769020237909 + [CenteredDataForPCA].impute_31 * -9.48038254764e-05 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.35054926404 + [CenteredDataForPCA].impute_3 * 0.00408376429274 + [CenteredDataForPCA].impute_4 * 0.132828033867 + [CenteredDataForPCA].impute_5 * -0.0038291611566 + [CenteredDataForPCA].impute_6 * 0.00822698129974 + [CenteredDataForPCA].impute_7 * 0.0563148308398 + [CenteredDataForPCA].impute_8 * 0.0702297024991 + [CenteredDataForPCA].impute_9 * 0.019249809964 + [CenteredDataForPCA].impute_10 * 0.0149895863695 + [CenteredDataForPCA].impute_11 * 0.00763859417564 + [CenteredDataForPCA].impute_12 * -0.091512790948 + [CenteredDataForPCA].impute_13 * 0.0162432583719 + [CenteredDataForPCA].impute_14 * -0.190207007613 + [CenteredDataForPCA].impute_15 * 0.00447806986012 + [CenteredDataForPCA].impute_16 * 0.00102379223824 + [CenteredDataForPCA].impute_17 * 0.0189362796987 + [CenteredDataForPCA].impute_18 * 0.0252133644324 + [CenteredDataForPCA].impute_19 * 0.00290414427868 + [CenteredDataForPCA].impute_20 * 0.00176381904964 + [CenteredDataForPCA].impute_21 * 0.0021054829177 + [CenteredDataForPCA].impute_22 * -0.860507445979 + [CenteredDataForPCA].impute_23 * -0.00211047340521 + [CenteredDataForPCA].impute_24 * 0.0386007208026 + [CenteredDataForPCA].impute_25 * 0.00409978696168 + [CenteredDataForPCA].impute_26 * 0.0114296357624 + [CenteredDataForPCA].impute_27 * 0.156279540406 + [CenteredDataForPCA].impute_28 * 0.191177497053 + [CenteredDataForPCA].impute_29 * 0.0309293509104 + [CenteredDataForPCA].impute_30 * 0.0202890503117 + [CenteredDataForPCA].impute_31 * 0.0176591683724 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.139559852313 + [CenteredDataForPCA].impute_3 * 0.0766679112098 + [CenteredDataForPCA].impute_4 * -0.0892113883598 + [CenteredDataForPCA].impute_5 * 0.00195571373566 + [CenteredDataForPCA].impute_6 * -0.00444685265989 + [CenteredDataForPCA].impute_7 * -0.0299475404282 + [CenteredDataForPCA].impute_8 * -0.0279441150236 + [CenteredDataForPCA].impute_9 * -0.0104362499533 + [CenteredDataForPCA].impute_10 * -0.00827800166445 + [CenteredDataForPCA].impute_11 * -0.00454280516837 + [CenteredDataForPCA].impute_12 * -0.0322073954844 + [CenteredDataForPCA].impute_13 * 0.791295671221 + [CenteredDataForPCA].impute_14 * -0.548501632383 + [CenteredDataForPCA].impute_15 * 0.0203427164152 + [CenteredDataForPCA].impute_16 * 0.000445191328945 + [CenteredDataForPCA].impute_17 * -0.0066483016727 + [CenteredDataForPCA].impute_18 * -0.00988467883572 + [CenteredDataForPCA].impute_19 * -0.00263444827124 + [CenteredDataForPCA].impute_20 * 0.00106193404729 + [CenteredDataForPCA].impute_21 * -0.000629812957899 + [CenteredDataForPCA].impute_22 * 0.0283270490783 + [CenteredDataForPCA].impute_23 * -0.0944156308492 + [CenteredDataForPCA].impute_24 * 0.0841866695856 + [CenteredDataForPCA].impute_25 * -0.00310937021522 + [CenteredDataForPCA].impute_26 * -0.0117730196694 + [CenteredDataForPCA].impute_27 * -0.0854753910745 + [CenteredDataForPCA].impute_28 * -0.10041192181 + [CenteredDataForPCA].impute_29 * -0.0284427472526 + [CenteredDataForPCA].impute_30 * -0.0297280860817 + [CenteredDataForPCA].impute_31 * -0.0121927539699 AS anoova_11, [CenteredDataForPCA].impute_2 * -0.419346972301 + [CenteredDataForPCA].impute_3 * 0.0290168452889 + [CenteredDataForPCA].impute_4 * 0.00268885270268 + [CenteredDataForPCA].impute_5 * 0.00344514452278 + [CenteredDataForPCA].impute_6 * 0.0291369356475 + [CenteredDataForPCA].impute_7 * 0.116711657086 + [CenteredDataForPCA].impute_8 * 0.185699905116 + [CenteredDataForPCA].impute_9 * 0.0577209422577 + [CenteredDataForPCA].impute_10 * 0.0517276491191 + [CenteredDataForPCA].impute_11 * 0.0192137159883 + [CenteredDataForPCA].impute_12 * 0.105998470234 + [CenteredDataForPCA].impute_13 * 0.140864382033 + [CenteredDataForPCA].impute_14 * -0.0877215348369 + [CenteredDataForPCA].impute_15 * 0.00144869247197 + [CenteredDataForPCA].impute_16 * 0.00385723906499 + [CenteredDataForPCA].impute_17 * 0.0401767227476 + [CenteredDataForPCA].impute_18 * 0.0788928691349 + [CenteredDataForPCA].impute_19 * 0.00856309877138 + [CenteredDataForPCA].impute_20 * 0.00972156094132 + [CenteredDataForPCA].impute_21 * 0.00624114956825 + [CenteredDataForPCA].impute_22 * 0.42186188502 + [CenteredDataForPCA].impute_23 * -0.0327379835875 + [CenteredDataForPCA].impute_24 * -0.0265059616219 + [CenteredDataForPCA].impute_25 * -0.00175632076387 + [CenteredDataForPCA].impute_26 * 0.0536022007284 + [CenteredDataForPCA].impute_27 * 0.393362884254 + [CenteredDataForPCA].impute_28 * 0.592901604756 + [CenteredDataForPCA].impute_29 * 0.11428366665 + [CenteredDataForPCA].impute_30 * 0.126297594546 + [CenteredDataForPCA].impute_31 * 0.056773865198 AS anoova_12, [CenteredDataForPCA].impute_2 * 0.735141931198 + [CenteredDataForPCA].impute_3 * -0.00177040388188 + [CenteredDataForPCA].impute_4 * -0.0817809788443 + [CenteredDataForPCA].impute_5 * -0.00146297165213 + [CenteredDataForPCA].impute_6 * -0.0463391435283 + [CenteredDataForPCA].impute_7 * -0.0944692077181 + [CenteredDataForPCA].impute_8 * 0.033566692003 + [CenteredDataForPCA].impute_9 * -0.0475382102106 + [CenteredDataForPCA].impute_10 * -0.0552351985121 + [CenteredDataForPCA].impute_11 * -0.0152406055819 + [CenteredDataForPCA].impute_12 * -0.0642159671891 + [CenteredDataForPCA].impute_13 * -0.00412379899766 + [CenteredDataForPCA].impute_14 * 0.0676048260881 + [CenteredDataForPCA].impute_15 * -0.0011586962038 + [CenteredDataForPCA].impute_16 * -0.00432409361036 + [CenteredDataForPCA].impute_17 * 0.0313125858702 + [CenteredDataForPCA].impute_18 * 0.125506514072 + [CenteredDataForPCA].impute_19 * 0.0143712028021 + [CenteredDataForPCA].impute_20 * -0.00651537135143 + [CenteredDataForPCA].impute_21 * 0.00213796926429 + [CenteredDataForPCA].impute_22 * -0.168128351614 + [CenteredDataForPCA].impute_23 * 0.00044646023571 + [CenteredDataForPCA].impute_24 * 0.0026330324616 + [CenteredDataForPCA].impute_25 * 0.000919000401954 + [CenteredDataForPCA].impute_26 * -0.0593045367248 + [CenteredDataForPCA].impute_27 * 0.124613176347 + [CenteredDataForPCA].impute_28 * 0.597245084023 + [CenteredDataForPCA].impute_29 * 0.0227020608957 + [CenteredDataForPCA].impute_30 * -0.0698326846665 + [CenteredDataForPCA].impute_31 * -0.000222345679661 AS anoova_13, [CenteredDataForPCA].impute_2 * 0.218087181974 + [CenteredDataForPCA].impute_3 * 0.00423058843329 + [CenteredDataForPCA].impute_4 * -0.0251180394002 + [CenteredDataForPCA].impute_5 * -0.000200988446458 + [CenteredDataForPCA].impute_6 * 0.00525266399543 + [CenteredDataForPCA].impute_7 * 0.0877581594313 + [CenteredDataForPCA].impute_8 * -0.224378306399 + [CenteredDataForPCA].impute_9 * -0.0404419790544 + [CenteredDataForPCA].impute_10 * 0.115113361656 + [CenteredDataForPCA].impute_11 * 0.00903812811092 + [CenteredDataForPCA].impute_12 * -0.096632695264 + [CenteredDataForPCA].impute_13 * 0.022728385151 + [CenteredDataForPCA].impute_14 * 0.0263044655026 + [CenteredDataForPCA].impute_15 * -0.000231375241012 + [CenteredDataForPCA].impute_16 * -0.00253645692025 + [CenteredDataForPCA].impute_17 * 0.0381654059112 + [CenteredDataForPCA].impute_18 * -0.139282085534 + [CenteredDataForPCA].impute_19 * -0.0120723947345 + [CenteredDataForPCA].impute_20 * 0.0381570258117 + [CenteredDataForPCA].impute_21 * -0.000622637688337 + [CenteredDataForPCA].impute_22 * -0.031062921926 + [CenteredDataForPCA].impute_23 * -0.00446771810127 + [CenteredDataForPCA].impute_24 * -0.00335229867744 + [CenteredDataForPCA].impute_25 * 0.000287275851453 + [CenteredDataForPCA].impute_26 * 0.00734213380903 + [CenteredDataForPCA].impute_27 * 0.740034843629 + [CenteredDataForPCA].impute_28 * -0.335405153153 + [CenteredDataForPCA].impute_29 * 0.003294271288 + [CenteredDataForPCA].impute_30 * 0.424745510008 + [CenteredDataForPCA].impute_31 * 0.0641650533679 AS anoova_14, [CenteredDataForPCA].impute_2 * 0.081026011308 + [CenteredDataForPCA].impute_3 * 0.00198471260085 + [CenteredDataForPCA].impute_4 * -0.00522865767693 + [CenteredDataForPCA].impute_5 * -0.000338365236067 + [CenteredDataForPCA].impute_6 * 0.0361161370292 + [CenteredDataForPCA].impute_7 * -0.0254306035019 + [CenteredDataForPCA].impute_8 * 0.128761314164 + [CenteredDataForPCA].impute_9 * 0.0548374335955 + [CenteredDataForPCA].impute_10 * 0.326359051599 + [CenteredDataForPCA].impute_11 * -0.0023905313396 + [CenteredDataForPCA].impute_12 * 0.146435306385 + [CenteredDataForPCA].impute_13 * -0.00985458034502 + [CenteredDataForPCA].impute_14 * -0.0139810593789 + [CenteredDataForPCA].impute_15 * -0.000225744302359 + [CenteredDataForPCA].impute_16 * 0.000203874389144 + [CenteredDataForPCA].impute_17 * -0.0461430982786 + [CenteredDataForPCA].impute_18 * 0.0509256882566 + [CenteredDataForPCA].impute_19 * 0.003762746906 + [CenteredDataForPCA].impute_20 * 0.0842645063143 + [CenteredDataForPCA].impute_21 * -0.00515315785654 + [CenteredDataForPCA].impute_22 * -0.0631338895187 + [CenteredDataForPCA].impute_23 * -0.000161770543935 + [CenteredDataForPCA].impute_24 * 0.00407595408813 + [CenteredDataForPCA].impute_25 * 0.000214122499032 + [CenteredDataForPCA].impute_26 * 0.0283201064444 + [CenteredDataForPCA].impute_27 * -0.415638333174 + [CenteredDataForPCA].impute_28 * 0.0988608380512 + [CenteredDataForPCA].impute_29 * 0.0473907069533 + [CenteredDataForPCA].impute_30 * 0.799896166088 + [CenteredDataForPCA].impute_31 * -0.0483413295934 AS anoova_15, [CenteredDataForPCA].impute_2 * -0.137865559411 + [CenteredDataForPCA].impute_3 * 0.00707543942802 + [CenteredDataForPCA].impute_4 * 0.0134434455238 + [CenteredDataForPCA].impute_5 * 0.000189595168838 + [CenteredDataForPCA].impute_6 * -0.0537159783889 + [CenteredDataForPCA].impute_7 * -0.0961467980478 + [CenteredDataForPCA].impute_8 * -0.106775624436 + [CenteredDataForPCA].impute_9 * -0.0750229009674 + [CenteredDataForPCA].impute_10 * -0.0524186367607 + [CenteredDataForPCA].impute_11 * -0.0131995161006 + [CenteredDataForPCA].impute_12 * -0.924496275015 + [CenteredDataForPCA].impute_13 * 0.0378188038059 + [CenteredDataForPCA].impute_14 * 0.0857009464213 + [CenteredDataForPCA].impute_15 * 0.00178223809013 + [CenteredDataForPCA].impute_16 * -0.015751722777 + [CenteredDataForPCA].impute_17 * -0.0490555492761 + [CenteredDataForPCA].impute_18 * -0.0588786230006 + [CenteredDataForPCA].impute_19 * -0.0164236828955 + [CenteredDataForPCA].impute_20 * 0.0119559471216 + [CenteredDataForPCA].impute_21 * -0.0134453973605 + [CenteredDataForPCA].impute_22 * 0.122855427038 + [CenteredDataForPCA].impute_23 * -0.00746425242403 + [CenteredDataForPCA].impute_24 * -0.0102334958732 + [CenteredDataForPCA].impute_25 * -0.000262085387382 + [CenteredDataForPCA].impute_26 * -0.0601702394799 + [CenteredDataForPCA].impute_27 * -0.133017877721 + [CenteredDataForPCA].impute_28 * 0.129230577878 + [CenteredDataForPCA].impute_29 * -0.028051556934 + [CenteredDataForPCA].impute_30 * 0.15532718245 + [CenteredDataForPCA].impute_31 * -0.0176897423169 AS anoova_16, [CenteredDataForPCA].impute_2 * -0.141957143853 + [CenteredDataForPCA].impute_3 * -0.00371772552653 + [CenteredDataForPCA].impute_4 * 0.0206841238256 + [CenteredDataForPCA].impute_5 * 7.1623630519e-05 + [CenteredDataForPCA].impute_6 * -0.244151202722 + [CenteredDataForPCA].impute_7 * -0.17313265175 + [CenteredDataForPCA].impute_8 * -0.163916070539 + [CenteredDataForPCA].impute_9 * -0.311870435623 + [CenteredDataForPCA].impute_10 * -0.0920311011841 + [CenteredDataForPCA].impute_11 * -0.036539750006 + [CenteredDataForPCA].impute_12 * 0.175147664682 + [CenteredDataForPCA].impute_13 * -0.00474183049967 + [CenteredDataForPCA].impute_14 * -0.0164085615863 + [CenteredDataForPCA].impute_15 * -0.000394123159839 + [CenteredDataForPCA].impute_16 * -0.0272335855369 + [CenteredDataForPCA].impute_17 * 0.0714537634858 + [CenteredDataForPCA].impute_18 * 0.0966647543121 + [CenteredDataForPCA].impute_19 * -0.0630245504496 + [CenteredDataForPCA].impute_20 * 0.0442032738768 + [CenteredDataForPCA].impute_21 * 0.00662754742688 + [CenteredDataForPCA].impute_22 * 0.0147186017533 + [CenteredDataForPCA].impute_23 * 0.00233182485879 + [CenteredDataForPCA].impute_24 * -0.000673566380115 + [CenteredDataForPCA].impute_25 * -4.67346729523e-05 + [CenteredDataForPCA].impute_26 * -0.391496947401 + [CenteredDataForPCA].impute_27 * 0.0333214534142 + [CenteredDataForPCA].impute_28 * 0.105075524382 + [CenteredDataForPCA].impute_29 * -0.721728013839 + [CenteredDataForPCA].impute_30 * 0.12650275455 + [CenteredDataForPCA].impute_31 * -0.0348926382278 AS anoova_17, [CenteredDataForPCA].impute_2 * 0.0442129323608 + [CenteredDataForPCA].impute_3 * -0.00174411881287 + [CenteredDataForPCA].impute_4 * -0.0108282411559 + [CenteredDataForPCA].impute_5 * 0.0001332466608 + [CenteredDataForPCA].impute_6 * -0.13003060766 + [CenteredDataForPCA].impute_7 * 0.180413129032 + [CenteredDataForPCA].impute_8 * 0.432652559497 + [CenteredDataForPCA].impute_9 * 0.038893944317 + [CenteredDataForPCA].impute_10 * 0.0216862037125 + [CenteredDataForPCA].impute_11 * 0.0376425779253 + [CenteredDataForPCA].impute_12 * -0.164246809202 + [CenteredDataForPCA].impute_13 * -0.00958819753772 + [CenteredDataForPCA].impute_14 * 0.00253430874483 + [CenteredDataForPCA].impute_15 * 0.000673342112406 + [CenteredDataForPCA].impute_16 * 0.00532163111694 + [CenteredDataForPCA].impute_17 * 0.331399675836 + [CenteredDataForPCA].impute_18 * 0.676877070856 + [CenteredDataForPCA].impute_19 * 0.100527901458 + [CenteredDataForPCA].impute_20 * 0.0405424524668 + [CenteredDataForPCA].impute_21 * 0.0535339202127 + [CenteredDataForPCA].impute_22 * 0.022514367693 + [CenteredDataForPCA].impute_23 * 0.0019316476578 + [CenteredDataForPCA].impute_24 * 0.000541453437492 + [CenteredDataForPCA].impute_25 * -0.000130917707494 + [CenteredDataForPCA].impute_26 * -0.26018951411 + [CenteredDataForPCA].impute_27 * 0.0624843149725 + [CenteredDataForPCA].impute_28 * -0.269804019678 + [CenteredDataForPCA].impute_29 * 0.0543397195791 + [CenteredDataForPCA].impute_30 * 0.00227045335658 + [CenteredDataForPCA].impute_31 * 0.0174914412741 AS anoova_18, [CenteredDataForPCA].impute_2 * 0.0897292327606 + [CenteredDataForPCA].impute_3 * -0.00014145888372 + [CenteredDataForPCA].impute_4 * -0.0137775701847 + [CenteredDataForPCA].impute_5 * 1.13279337855e-06 + [CenteredDataForPCA].impute_6 * 0.306212224558 + [CenteredDataForPCA].impute_7 * 0.287099573029 + [CenteredDataForPCA].impute_8 * 0.199451086652 + [CenteredDataForPCA].impute_9 * -0.0138388516332 + [CenteredDataForPCA].impute_10 * 0.438304941355 + [CenteredDataForPCA].impute_11 * 0.080995780496 + [CenteredDataForPCA].impute_12 * -0.146255623732 + [CenteredDataForPCA].impute_13 * -0.00612757296488 + [CenteredDataForPCA].impute_14 * 0.0147257226422 + [CenteredDataForPCA].impute_15 * 0.000180666959585 + [CenteredDataForPCA].impute_16 * 0.0378861545529 + [CenteredDataForPCA].impute_17 * -0.0184806700267 + [CenteredDataForPCA].impute_18 * 0.0213236057297 + [CenteredDataForPCA].impute_19 * -0.0536608155089 + [CenteredDataForPCA].impute_20 * -0.0541504309987 + [CenteredDataForPCA].impute_21 * 0.0083867970187 + [CenteredDataForPCA].impute_22 * 0.00592277426021 + [CenteredDataForPCA].impute_23 * 0.000486674310329 + [CenteredDataForPCA].impute_24 * 0.000613605812249 + [CenteredDataForPCA].impute_25 * -4.23143565921e-05 + [CenteredDataForPCA].impute_26 * 0.412030400894 + [CenteredDataForPCA].impute_27 * 0.00405638129188 + [CenteredDataForPCA].impute_28 * 0.0116402569554 + [CenteredDataForPCA].impute_29 * -0.580515606199 + [CenteredDataForPCA].impute_30 * -0.165287245945 + [CenteredDataForPCA].impute_31 * 0.113530564684 AS anoova_19, [CenteredDataForPCA].impute_2 * -0.0210057741947 + [CenteredDataForPCA].impute_3 * -0.00124960485022 + [CenteredDataForPCA].impute_4 * 0.000616356937939 + [CenteredDataForPCA].impute_5 * 0.000120299752686 + [CenteredDataForPCA].impute_6 * -0.197107021071 + [CenteredDataForPCA].impute_7 * -0.0553153375082 + [CenteredDataForPCA].impute_8 * -0.0420063481834 + [CenteredDataForPCA].impute_9 * 0.0444765528422 + [CenteredDataForPCA].impute_10 * 0.763628283512 + [CenteredDataForPCA].impute_11 * -0.044091363618 + [CenteredDataForPCA].impute_12 * -0.0228731803569 + [CenteredDataForPCA].impute_13 * -0.00236191574981 + [CenteredDataForPCA].impute_14 * -0.00130277683426 + [CenteredDataForPCA].impute_15 * 0.00014235499164 + [CenteredDataForPCA].impute_16 * -0.0534210339609 + [CenteredDataForPCA].impute_17 * -0.055680726199 + [CenteredDataForPCA].impute_18 * -0.17159065005 + [CenteredDataForPCA].impute_19 * -0.00170880696786 + [CenteredDataForPCA].impute_20 * -0.123077156294 + [CenteredDataForPCA].impute_21 * -0.0145669104111 + [CenteredDataForPCA].impute_22 * 0.0131009680805 + [CenteredDataForPCA].impute_23 * 0.00101735245785 + [CenteredDataForPCA].impute_24 * -0.000569726712583 + [CenteredDataForPCA].impute_25 * -6.08533609331e-05 + [CenteredDataForPCA].impute_26 * -0.469474770103 + [CenteredDataForPCA].impute_27 * 0.0295753422426 + [CenteredDataForPCA].impute_28 * 0.0270708048841 + [CenteredDataForPCA].impute_29 * 0.157973615796 + [CenteredDataForPCA].impute_30 * -0.257505985276 + [CenteredDataForPCA].impute_31 * -0.0639356850982 AS anoova_20, [CenteredDataForPCA].impute_2 * -0.0801074429304 + [CenteredDataForPCA].impute_3 * 0.000212853659563 + [CenteredDataForPCA].impute_4 * 0.010939798222 + [CenteredDataForPCA].impute_5 * 0.000122408809581 + [CenteredDataForPCA].impute_6 * 0.0649458800773 + [CenteredDataForPCA].impute_7 * 0.0429470256386 + [CenteredDataForPCA].impute_8 * -0.667235913749 + [CenteredDataForPCA].impute_9 * -0.328925155093 + [CenteredDataForPCA].impute_10 * 0.222382755725 + [CenteredDataForPCA].impute_11 * 0.0233171053098 + [CenteredDataForPCA].impute_12 * 0.0439284077211 + [CenteredDataForPCA].impute_13 * 0.00320684477184 + [CenteredDataForPCA].impute_14 * -0.0091127254163 + [CenteredDataForPCA].impute_15 * 7.44106237338e-05 + [CenteredDataForPCA].impute_16 * 0.0377952551429 + [CenteredDataForPCA].impute_17 * 0.225649739395 + [CenteredDataForPCA].impute_18 * 0.443120249825 + [CenteredDataForPCA].impute_19 * 0.111669447678 + [CenteredDataForPCA].impute_20 * -0.0124646701642 + [CenteredDataForPCA].impute_21 * 0.0387988752347 + [CenteredDataForPCA].impute_22 * 0.00469179080328 + [CenteredDataForPCA].impute_23 * -0.000186035981975 + [CenteredDataForPCA].impute_24 * 0.000317772986596 + [CenteredDataForPCA].impute_25 * -4.9415227029e-05 + [CenteredDataForPCA].impute_26 * 0.249151067203 + [CenteredDataForPCA].impute_27 * -0.0992181812857 + [CenteredDataForPCA].impute_28 * 0.075921206716 + [CenteredDataForPCA].impute_29 * 0.188195406978 + [CenteredDataForPCA].impute_30 * -0.0535602114336 + [CenteredDataForPCA].impute_31 * 0.0562031123023 AS anoova_21, [CenteredDataForPCA].impute_2 * 0.0594747776517 + [CenteredDataForPCA].impute_3 * -0.000508486619145 + [CenteredDataForPCA].impute_4 * -0.0100150531786 + [CenteredDataForPCA].impute_5 * 6.72130539212e-05 + [CenteredDataForPCA].impute_6 * 0.0505875320947 + [CenteredDataForPCA].impute_7 * 0.7864764472 + [CenteredDataForPCA].impute_8 * -0.207298286137 + [CenteredDataForPCA].impute_9 * 0.0195295923316 + [CenteredDataForPCA].impute_10 * -0.159737119128 + [CenteredDataForPCA].impute_11 * 0.176680619228 + [CenteredDataForPCA].impute_12 * 0.0113499142918 + [CenteredDataForPCA].impute_13 * -0.000252359538842 + [CenteredDataForPCA].impute_14 * -0.00416204243065 + [CenteredDataForPCA].impute_15 * 0.000150857164343 + [CenteredDataForPCA].impute_16 * -0.0661066896033 + [CenteredDataForPCA].impute_17 * -0.0407953355154 + [CenteredDataForPCA].impute_18 * -0.15152506814 + [CenteredDataForPCA].impute_19 * -0.0236680657571 + [CenteredDataForPCA].impute_20 * 0.0401205396569 + [CenteredDataForPCA].impute_21 * 0.0234074016796 + [CenteredDataForPCA].impute_22 * -0.00614078602133 + [CenteredDataForPCA].impute_23 * 0.000680390514182 + [CenteredDataForPCA].impute_24 * 0.00123096655794 + [CenteredDataForPCA].impute_25 * -2.07826845052e-05 + [CenteredDataForPCA].impute_26 * -0.371434661475 + [CenteredDataForPCA].impute_27 * -0.175980615374 + [CenteredDataForPCA].impute_28 * 0.0948178123331 + [CenteredDataForPCA].impute_29 * 0.0197712542578 + [CenteredDataForPCA].impute_30 * 0.0391032580327 + [CenteredDataForPCA].impute_31 * 0.251854689421 AS anoova_22, [CenteredDataForPCA].impute_2 * -0.00872363409187 + [CenteredDataForPCA].impute_3 * 0.000325522688523 + [CenteredDataForPCA].impute_4 * 0.00317936985183 + [CenteredDataForPCA].impute_5 * -8.61054786232e-05 + [CenteredDataForPCA].impute_6 * -0.123800316281 + [CenteredDataForPCA].impute_7 * -0.307516380372 + [CenteredDataForPCA].impute_8 * 0.0674748546256 + [CenteredDataForPCA].impute_9 * -0.00994859921767 + [CenteredDataForPCA].impute_10 * 0.0228284660156 + [CenteredDataForPCA].impute_11 * 0.204533392179 + [CenteredDataForPCA].impute_12 * 0.0142505915938 + [CenteredDataForPCA].impute_13 * 0.00132642699543 + [CenteredDataForPCA].impute_14 * 0.000211743590038 + [CenteredDataForPCA].impute_15 * -4.80315787047e-05 + [CenteredDataForPCA].impute_16 * -0.0143604235627 + [CenteredDataForPCA].impute_17 * -0.0531878430365 + [CenteredDataForPCA].impute_18 * 0.00233095913842 + [CenteredDataForPCA].impute_19 * -0.020607189871 + [CenteredDataForPCA].impute_20 * -0.117416101514 + [CenteredDataForPCA].impute_21 * 0.11288976854 + [CenteredDataForPCA].impute_22 * -0.00681318530514 + [CenteredDataForPCA].impute_23 * -0.000314021728181 + [CenteredDataForPCA].impute_24 * 0.00028526163231 + [CenteredDataForPCA].impute_25 * 2.78114736115e-05 + [CenteredDataForPCA].impute_26 * 0.00774928694586 + [CenteredDataForPCA].impute_27 * -0.0402655019192 + [CenteredDataForPCA].impute_28 * -0.0333052793974 + [CenteredDataForPCA].impute_29 * 0.0367880306548 + [CenteredDataForPCA].impute_30 * 0.0197580345561 + [CenteredDataForPCA].impute_31 * 0.899017368077 AS anoova_23, [CenteredDataForPCA].impute_2 * -0.00457847380819 + [CenteredDataForPCA].impute_3 * 0.000570803677204 + [CenteredDataForPCA].impute_4 * 0.00125149829788 + [CenteredDataForPCA].impute_5 * -8.95193306545e-06 + [CenteredDataForPCA].impute_6 * 0.0576678236276 + [CenteredDataForPCA].impute_7 * 0.0681084243651 + [CenteredDataForPCA].impute_8 * 0.0975431968694 + [CenteredDataForPCA].impute_9 * -0.370822357195 + [CenteredDataForPCA].impute_10 * -0.0275978830681 + [CenteredDataForPCA].impute_11 * 0.0120861421463 + [CenteredDataForPCA].impute_12 * 0.0166061174869 + [CenteredDataForPCA].impute_13 * 0.00448926294996 + [CenteredDataForPCA].impute_14 * 0.00125850374336 + [CenteredDataForPCA].impute_15 * -0.000136165606615 + [CenteredDataForPCA].impute_16 * -0.118579493056 + [CenteredDataForPCA].impute_17 * -0.802419200219 + [CenteredDataForPCA].impute_18 * 0.320221000817 + [CenteredDataForPCA].impute_19 * -0.0365853433843 + [CenteredDataForPCA].impute_20 * -0.226926628044 + [CenteredDataForPCA].impute_21 * -0.0770139814136 + [CenteredDataForPCA].impute_22 * -0.00197252552947 + [CenteredDataForPCA].impute_23 * -0.000594055090512 + [CenteredDataForPCA].impute_24 * -0.00034022382161 + [CenteredDataForPCA].impute_25 * 2.29399965227e-05 + [CenteredDataForPCA].impute_26 * -0.040756755621 + [CenteredDataForPCA].impute_27 * 0.0845421997677 + [CenteredDataForPCA].impute_28 * -0.065266364273 + [CenteredDataForPCA].impute_29 * 0.0891754581556 + [CenteredDataForPCA].impute_30 * 0.0196427496019 + [CenteredDataForPCA].impute_31 * -0.0559332519854 AS anoova_24, [CenteredDataForPCA].impute_2 * 0.0282894830218 + [CenteredDataForPCA].impute_3 * 7.33059897319e-05 + [CenteredDataForPCA].impute_4 * -0.00358436086863 + [CenteredDataForPCA].impute_5 * -2.64959224207e-05 + [CenteredDataForPCA].impute_6 * -0.684974204485 + [CenteredDataForPCA].impute_7 * 0.247366571472 + [CenteredDataForPCA].impute_8 * 0.221208939664 + [CenteredDataForPCA].impute_9 * -0.461447928747 + [CenteredDataForPCA].impute_10 * 0.0289096395795 + [CenteredDataForPCA].impute_11 * -0.0134513145348 + [CenteredDataForPCA].impute_12 * 0.0080069632373 + [CenteredDataForPCA].impute_13 * 0.00198785625644 + [CenteredDataForPCA].impute_14 * 0.000417372804084 + [CenteredDataForPCA].impute_15 * -3.67867124203e-05 + [CenteredDataForPCA].impute_16 * 0.116955811321 + [CenteredDataForPCA].impute_17 * 0.0920949353452 + [CenteredDataForPCA].impute_18 * -0.232860818706 + [CenteredDataForPCA].impute_19 * -0.0237982721445 + [CenteredDataForPCA].impute_20 * 0.00640992514069 + [CenteredDataForPCA].impute_21 * -0.000179257890355 + [CenteredDataForPCA].impute_22 * -0.003655972751 + [CenteredDataForPCA].impute_23 * -0.000328916830862 + [CenteredDataForPCA].impute_24 * 7.4649802186e-05 + [CenteredDataForPCA].impute_25 * 1.5239297534e-05 + [CenteredDataForPCA].impute_26 * 0.338845353547 + [CenteredDataForPCA].impute_27 * -0.0471308734676 + [CenteredDataForPCA].impute_28 * -0.0118303713601 + [CenteredDataForPCA].impute_29 * 0.103567515389 + [CenteredDataForPCA].impute_30 * -0.00507940555306 + [CenteredDataForPCA].impute_31 * -0.0303265920965 AS anoova_25, [CenteredDataForPCA].impute_2 * 0.00359617410954 + [CenteredDataForPCA].impute_3 * 0.000432289948373 + [CenteredDataForPCA].impute_4 * -0.00030776393199 + [CenteredDataForPCA].impute_5 * -1.83005652947e-05 + [CenteredDataForPCA].impute_6 * -0.470763997476 + [CenteredDataForPCA].impute_7 * 0.112910548365 + [CenteredDataForPCA].impute_8 * -0.246083833981 + [CenteredDataForPCA].impute_9 * 0.606124799964 + [CenteredDataForPCA].impute_10 * -0.0379117864967 + [CenteredDataForPCA].impute_11 * -0.0637956992786 + [CenteredDataForPCA].impute_12 * -0.00548812336326 + [CenteredDataForPCA].impute_13 * 0.00336786193526 + [CenteredDataForPCA].impute_14 * 0.00096535851489 + [CenteredDataForPCA].impute_15 * 4.85535217511e-05 + [CenteredDataForPCA].impute_16 * 0.0191129277625 + [CenteredDataForPCA].impute_17 * -0.15177670131 + [CenteredDataForPCA].impute_18 * 0.204174154868 + [CenteredDataForPCA].impute_19 * -0.00512935750574 + [CenteredDataForPCA].impute_20 * -0.444877141363 + [CenteredDataForPCA].impute_21 * -0.0290928878787 + [CenteredDataForPCA].impute_22 * -0.00157275837881 + [CenteredDataForPCA].impute_23 * -0.000510381910138 + [CenteredDataForPCA].impute_24 * -3.00466191546e-05 + [CenteredDataForPCA].impute_25 * 6.3234895966e-06 + [CenteredDataForPCA].impute_26 * 0.18444078751 + [CenteredDataForPCA].impute_27 * 0.000905167513604 + [CenteredDataForPCA].impute_28 * 0.0249243202588 + [CenteredDataForPCA].impute_29 * -0.166799319858 + [CenteredDataForPCA].impute_30 * 0.0617567462697 + [CenteredDataForPCA].impute_31 * -0.0443746763047 AS anoova_26, [CenteredDataForPCA].impute_2 * -0.00160336173297 + [CenteredDataForPCA].impute_3 * -0.000685637301982 + [CenteredDataForPCA].impute_4 * 0.00013399332795 + [CenteredDataForPCA].impute_5 * -6.11786890429e-06 + [CenteredDataForPCA].impute_6 * -0.233739580879 + [CenteredDataForPCA].impute_7 * 0.000564508610147 + [CenteredDataForPCA].impute_8 * -0.107297992561 + [CenteredDataForPCA].impute_9 * 0.234238245691 + [CenteredDataForPCA].impute_10 * 0.0910728702254 + [CenteredDataForPCA].impute_11 * 0.0270861186834 + [CenteredDataForPCA].impute_12 * -0.0102803828816 + [CenteredDataForPCA].impute_13 * -0.00405065872986 + [CenteredDataForPCA].impute_14 * -0.0012251067388 + [CenteredDataForPCA].impute_15 * 9.14651056621e-05 + [CenteredDataForPCA].impute_16 * 0.106982586718 + [CenteredDataForPCA].impute_17 * -0.342920796062 + [CenteredDataForPCA].impute_18 * 0.151034302669 + [CenteredDataForPCA].impute_19 * -0.00396060033114 + [CenteredDataForPCA].impute_20 * 0.830872058204 + [CenteredDataForPCA].impute_21 * -0.0133614025781 + [CenteredDataForPCA].impute_22 * 0.00113210755471 + [CenteredDataForPCA].impute_23 * 0.000660844086827 + [CenteredDataForPCA].impute_24 * 0.000144679382334 + [CenteredDataForPCA].impute_25 * -9.13824976579e-06 + [CenteredDataForPCA].impute_26 * 0.0759773477534 + [CenteredDataForPCA].impute_27 * 0.0331512433191 + [CenteredDataForPCA].impute_28 * 0.00162159306289 + [CenteredDataForPCA].impute_29 * -0.0432253501835 + [CenteredDataForPCA].impute_30 * -0.119316597542 + [CenteredDataForPCA].impute_31 * 0.0667516067565 AS anoova_27, [CenteredDataForPCA].impute_2 * -0.00279341068362 + [CenteredDataForPCA].impute_3 * -0.000203286434083 + [CenteredDataForPCA].impute_4 * -0.00014849978243 + [CenteredDataForPCA].impute_5 * 2.79755999372e-05 + [CenteredDataForPCA].impute_6 * 0.0423689945215 + [CenteredDataForPCA].impute_7 * 0.0447732651785 + [CenteredDataForPCA].impute_8 * 0.0287280747115 + [CenteredDataForPCA].impute_9 * -0.0251468693641 + [CenteredDataForPCA].impute_10 * -0.0173524457874 + [CenteredDataForPCA].impute_11 * -0.336239624172 + [CenteredDataForPCA].impute_12 * -0.0035410794243 + [CenteredDataForPCA].impute_13 * -0.000389325162431 + [CenteredDataForPCA].impute_14 * -0.00136868855915 + [CenteredDataForPCA].impute_15 * 5.15075948126e-05 + [CenteredDataForPCA].impute_16 * 0.323321168764 + [CenteredDataForPCA].impute_17 * -0.108304964125 + [CenteredDataForPCA].impute_18 * -0.0917739425085 + [CenteredDataForPCA].impute_19 * 0.854802093979 + [CenteredDataForPCA].impute_20 * -0.0362928822373 + [CenteredDataForPCA].impute_21 * -0.0200238568421 + [CenteredDataForPCA].impute_22 * 0.00177504178676 + [CenteredDataForPCA].impute_23 * 0.00015025429179 + [CenteredDataForPCA].impute_24 * 9.9445141628e-05 + [CenteredDataForPCA].impute_25 * -1.32750118268e-05 + [CenteredDataForPCA].impute_26 * -0.0598909048665 + [CenteredDataForPCA].impute_27 * -0.00110335473358 + [CenteredDataForPCA].impute_28 * 0.00600223989656 + [CenteredDataForPCA].impute_29 * -0.0835480472834 + [CenteredDataForPCA].impute_30 * 0.0156674415775 + [CenteredDataForPCA].impute_31 * 0.115823522312 AS anoova_28, [CenteredDataForPCA].impute_2 * -0.00325869729818 + [CenteredDataForPCA].impute_3 * -0.000108812487035 + [CenteredDataForPCA].impute_4 * 0.00059248149888 + [CenteredDataForPCA].impute_5 * -2.69334809073e-06 + [CenteredDataForPCA].impute_6 * -0.0443105873134 + [CenteredDataForPCA].impute_7 * -0.108470080882 + [CenteredDataForPCA].impute_8 * -0.00789825836293 + [CenteredDataForPCA].impute_9 * 0.0174453235166 + [CenteredDataForPCA].impute_10 * -0.00130715896303 + [CenteredDataForPCA].impute_11 * 0.888814612895 + [CenteredDataForPCA].impute_12 * 0.00208214817884 + [CenteredDataForPCA].impute_13 * -0.000416851132847 + [CenteredDataForPCA].impute_14 * -0.00130535119799 + [CenteredDataForPCA].impute_15 * 4.73766465399e-05 + [CenteredDataForPCA].impute_16 * 0.179728738702 + [CenteredDataForPCA].impute_17 * -0.0375730400783 + [CenteredDataForPCA].impute_18 * -0.0478504389145 + [CenteredDataForPCA].impute_19 * 0.307352340168 + [CenteredDataForPCA].impute_20 * -0.0557502875412 + [CenteredDataForPCA].impute_21 * 0.02404734113 + [CenteredDataForPCA].impute_22 * 0.000898500542013 + [CenteredDataForPCA].impute_23 * 0.000121159573375 + [CenteredDataForPCA].impute_24 * 3.92446495937e-05 + [CenteredDataForPCA].impute_25 * -7.82704449624e-06 + [CenteredDataForPCA].impute_26 * -0.0163749618018 + [CenteredDataForPCA].impute_27 * 0.0253473355907 + [CenteredDataForPCA].impute_28 * 0.00873144088227 + [CenteredDataForPCA].impute_29 * -0.0309344589356 + [CenteredDataForPCA].impute_30 * 0.00696062043032 + [CenteredDataForPCA].impute_31 * -0.244427990614 AS anoova_29, [CenteredDataForPCA].impute_2 * -0.000512865809477 + [CenteredDataForPCA].impute_3 * -0.000128702529573 + [CenteredDataForPCA].impute_4 * 0.000282547546945 + [CenteredDataForPCA].impute_5 * -1.30371538602e-05 + [CenteredDataForPCA].impute_6 * 0.0943925291573 + [CenteredDataForPCA].impute_7 * 0.00681916699068 + [CenteredDataForPCA].impute_8 * -0.0144289057638 + [CenteredDataForPCA].impute_9 * -0.017348124263 + [CenteredDataForPCA].impute_10 * -0.00882902913416 + [CenteredDataForPCA].impute_11 * -0.0474686275122 + [CenteredDataForPCA].impute_12 * -0.00363257185139 + [CenteredDataForPCA].impute_13 * -0.000472658846586 + [CenteredDataForPCA].impute_14 * 0.00119657801191 + [CenteredDataForPCA].impute_15 * -2.03423346575e-05 + [CenteredDataForPCA].impute_16 * 0.901248743455 + [CenteredDataForPCA].impute_17 * -0.0434291556978 + [CenteredDataForPCA].impute_18 * 0.0496009337886 + [CenteredDataForPCA].impute_19 * -0.376480980986 + [CenteredDataForPCA].impute_20 * -0.0978356412048 + [CenteredDataForPCA].impute_21 * -0.00775315348119 + [CenteredDataForPCA].impute_22 * 5.15472695746e-05 + [CenteredDataForPCA].impute_23 * 0.000107829473308 + [CenteredDataForPCA].impute_24 * -0.000115443883163 + [CenteredDataForPCA].impute_25 * 5.20580200135e-06 + [CenteredDataForPCA].impute_26 * -0.132092425241 + [CenteredDataForPCA].impute_27 * 8.29891880774e-05 + [CenteredDataForPCA].impute_28 * -0.00108953389706 + [CenteredDataForPCA].impute_29 * 0.0479998985024 + [CenteredDataForPCA].impute_30 * 0.0128640352627 + [CenteredDataForPCA].impute_31 * 0.0174174205903 AS anoova_30, [CenteredDataForPCA].impute_2 * 0.000648447162293 + [CenteredDataForPCA].impute_3 * 4.67664636913e-06 + [CenteredDataForPCA].impute_4 * -0.000153201139512 + [CenteredDataForPCA].impute_5 * 1.78631232613e-06 + [CenteredDataForPCA].impute_6 * 0.00295544129565 + [CenteredDataForPCA].impute_7 * 0.0131734820796 + [CenteredDataForPCA].impute_8 * -0.00401346519396 + [CenteredDataForPCA].impute_9 * 0.00422724702112 + [CenteredDataForPCA].impute_10 * -0.00219542354972 + [CenteredDataForPCA].impute_11 * -0.0613701891905 + [CenteredDataForPCA].impute_12 * -0.00651778390706 + [CenteredDataForPCA].impute_13 * -8.77127241394e-05 + [CenteredDataForPCA].impute_14 * 0.000798704359287 + [CenteredDataForPCA].impute_15 * 7.20344350944e-06 + [CenteredDataForPCA].impute_16 * 0.00231482576251 + [CenteredDataForPCA].impute_17 * -0.0955572739556 + [CenteredDataForPCA].impute_18 * -0.0229448848078 + [CenteredDataForPCA].impute_19 * -0.00254907673801 + [CenteredDataForPCA].impute_20 * -0.0100353743442 + [CenteredDataForPCA].impute_21 * 0.986791086742 + [CenteredDataForPCA].impute_22 * 0.000451134630538 + [CenteredDataForPCA].impute_23 * 1.35174619003e-06 + [CenteredDataForPCA].impute_24 * -6.58155924648e-05 + [CenteredDataForPCA].impute_25 * -2.32842029354e-07 + [CenteredDataForPCA].impute_26 * 0.00502792306392 + [CenteredDataForPCA].impute_27 * 0.00924822559714 + [CenteredDataForPCA].impute_28 * 0.00492968092446 + [CenteredDataForPCA].impute_29 * -0.00298937509293 + [CenteredDataForPCA].impute_30 * 0.0034000373892 + [CenteredDataForPCA].impute_31 * -0.110843881057 AS anoova_31 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.731009) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.731009 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0374194 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0360248 AS [Score]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Score] AS [Score] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[XGB_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0_0, [DT_Output].[Score] AS [Score_0_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 1.38137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.49697) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.38137 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.49697 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0695652 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0610526 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00437956 AS [Score]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Score] AS [Score] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[XGB_Tree_0_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_0_1, [DT_Output_1].[Score] AS [Score_0_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.010983) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.010983 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0336549 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0366038 AS [Score]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Score] AS [Score] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[XGB_Tree_0_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_0_2, [DT_Output_2].[Score] AS [Score_0_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 1.38137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.49697) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.38137 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.49697 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0637017 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0600547 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00375887 AS [Score]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Score] AS [Score] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[XGB_Tree_0_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_0_3, [DT_Output_3].[Score] AS [Score_0_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.731009) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.731009 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0357544 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.032623 AS [Score]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Score] AS [Score] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[XGB_Tree_0_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_0_4, [DT_Output_4].[Score] AS [Score_0_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 1.38137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.49697) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.38137 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.49697 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0576607 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0588568 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00330299 AS [Score]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Score] AS [Score] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[XGB_Tree_0_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_0_5, [DT_Output_5].[Score] AS [Score_0_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.342855) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.560579) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_14' AS feature, -0.342855 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0439759 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.560579 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0175583 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0550427 AS [Score]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Score] AS [Score] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[XGB_Tree_0_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_0_6, [DT_Output_6].[Score] AS [Score_0_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 1.38137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 < -0.135974) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.38137 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.135974 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0533223 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00414582 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0432717 AS [Score]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Score] AS [Score] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[XGB_Tree_0_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_0_7, [DT_Output_7].[Score] AS [Score_0_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.731009) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.731009 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0341482 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0295733 AS [Score]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Score] AS [Score] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[XGB_Tree_0_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_0_8, [DT_Output_8].[Score] AS [Score_0_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 0.433218) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.481945) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.433218 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.481945 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0422033 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514515 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.19886e-06 AS [Score]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Score] AS [Score] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[XGB_Tree_0_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_0_9, [DT_Output_9].[Score] AS [Score_0_9] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.342855) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.560579) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_14' AS feature, -0.342855 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0410352 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.560579 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0160672 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538699 AS [Score]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Score] AS [Score] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[XGB_Tree_0_10] AS 
(SELECT [DT_Output_10].[KEY] AS join_key_0_10, [DT_Output_10].[Score] AS [Score_0_10] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 1.09984) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0826185) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.09984 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 0.0826185 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0533532 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053772 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0227548 AS [Score]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Score] AS [Score] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[XGB_Tree_0_11] AS 
(SELECT [DT_Output_11].[KEY] AS join_key_0_11, [DT_Output_11].[Score] AS [Score_0_11] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_7 < 0.646284) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.010983) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.646284 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.010983 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0446937 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0566315 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0272716 AS [Score]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Score] AS [Score] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[XGB_Tree_0_12] AS 
(SELECT [DT_Output_12].[KEY] AS join_key_0_12, [DT_Output_12].[Score] AS [Score_0_12] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 1.15737) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0826185) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.15737 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 0.0826185 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0525645 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527951 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0207847 AS [Score]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Score] AS [Score] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[XGB_Tree_0_13] AS 
(SELECT [DT_Output_13].[KEY] AS join_key_0_13, [DT_Output_13].[Score] AS [Score_0_13] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.731009) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 < -0.309484) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.731009 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.032661 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.309484 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0677356 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0173089 AS [Score]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Score] AS [Score] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[XGB_Tree_0_14] AS 
(SELECT [DT_Output_14].[KEY] AS join_key_0_14, [DT_Output_14].[Score] AS [Score_0_14] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.626666) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.322693) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.626666 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0454357 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_14' AS feature, -0.322693 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0174825 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.050464 AS [Score]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Score] AS [Score] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[XGB_Tree_0_15] AS 
(SELECT [DT_Output_15].[KEY] AS join_key_0_15, [DT_Output_15].[Score] AS [Score_0_15] 
FROM [DT_Output_15]), 
[DT_node_lookup_16] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_6 < -0.709842) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.803197) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.709842 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.044196 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.803197 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0240475 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0491881 AS [Score]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].depth AS depth, [DT_node_data_16].parent_id AS parent_id, [DT_node_data_16].[Score] AS [Score] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[XGB_Tree_0_16] AS 
(SELECT [DT_Output_16].[KEY] AS join_key_0_16, [DT_Output_16].[Score] AS [Score_0_16] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.626666) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.322693) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.626666 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.044288 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_14' AS feature, -0.322693 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0167477 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0471371 AS [Score]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].depth AS depth, [DT_node_data_17].parent_id AS parent_id, [DT_node_data_17].[Score] AS [Score] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[XGB_Tree_0_17] AS 
(SELECT [DT_Output_17].[KEY] AS join_key_0_17, [DT_Output_17].[Score] AS [Score_0_17] 
FROM [DT_Output_17]), 
[DT_node_lookup_18] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.342855) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.560579) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_18] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_14' AS feature, -0.342855 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0362569 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.560579 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0119396 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514452 AS [Score]) AS [Values]), 
[DT_Output_18] AS 
(SELECT [DT_node_lookup_18].[KEY] AS [KEY], [DT_node_lookup_18].node_id_2 AS node_id_2, [DT_node_data_18].node_id AS node_id, [DT_node_data_18].feature AS feature, [DT_node_data_18].threshold AS threshold, [DT_node_data_18].depth AS depth, [DT_node_data_18].parent_id AS parent_id, [DT_node_data_18].[Score] AS [Score] 
FROM [DT_node_lookup_18] LEFT OUTER JOIN [DT_node_data_18] ON [DT_node_lookup_18].node_id_2 = [DT_node_data_18].node_id), 
[XGB_Tree_0_18] AS 
(SELECT [DT_Output_18].[KEY] AS join_key_0_18, [DT_Output_18].[Score] AS [Score_0_18] 
FROM [DT_Output_18]), 
[DT_node_lookup_19] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.626666) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.343684) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_19] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.626666 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0433288 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.343684 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00784327 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0541645 AS [Score]) AS [Values]), 
[DT_Output_19] AS 
(SELECT [DT_node_lookup_19].[KEY] AS [KEY], [DT_node_lookup_19].node_id_2 AS node_id_2, [DT_node_data_19].node_id AS node_id, [DT_node_data_19].feature AS feature, [DT_node_data_19].threshold AS threshold, [DT_node_data_19].depth AS depth, [DT_node_data_19].parent_id AS parent_id, [DT_node_data_19].[Score] AS [Score] 
FROM [DT_node_lookup_19] LEFT OUTER JOIN [DT_node_data_19] ON [DT_node_lookup_19].node_id_2 = [DT_node_data_19].node_id), 
[XGB_Tree_0_19] AS 
(SELECT [DT_Output_19].[KEY] AS join_key_0_19, [DT_Output_19].[Score] AS [Score_0_19] 
FROM [DT_Output_19]), 
[DT_node_lookup_20] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.522268) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_20] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.522268 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0409938 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0374194 AS [Score]) AS [Values]), 
[DT_Output_20] AS 
(SELECT [DT_node_lookup_20].[KEY] AS [KEY], [DT_node_lookup_20].node_id_2 AS node_id_2, [DT_node_data_20].node_id AS node_id, [DT_node_data_20].feature AS feature, [DT_node_data_20].threshold AS threshold, [DT_node_data_20].depth AS depth, [DT_node_data_20].parent_id AS parent_id, [DT_node_data_20].[Score] AS [Score] 
FROM [DT_node_lookup_20] LEFT OUTER JOIN [DT_node_data_20] ON [DT_node_lookup_20].node_id_2 = [DT_node_data_20].node_id), 
[XGB_Tree_1_0] AS 
(SELECT [DT_Output_20].[KEY] AS join_key_1_0, [DT_Output_20].[Score] AS [Score_1_0] 
FROM [DT_Output_20]), 
[DT_node_lookup_21] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_21] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0695652 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0619469 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00168067 AS [Score]) AS [Values]), 
[DT_Output_21] AS 
(SELECT [DT_node_lookup_21].[KEY] AS [KEY], [DT_node_lookup_21].node_id_2 AS node_id_2, [DT_node_data_21].node_id AS node_id, [DT_node_data_21].feature AS feature, [DT_node_data_21].threshold AS threshold, [DT_node_data_21].depth AS depth, [DT_node_data_21].parent_id AS parent_id, [DT_node_data_21].[Score] AS [Score] 
FROM [DT_node_lookup_21] LEFT OUTER JOIN [DT_node_data_21] ON [DT_node_lookup_21].node_id_2 = [DT_node_data_21].node_id), 
[XGB_Tree_1_1] AS 
(SELECT [DT_Output_21].[KEY] AS join_key_1_1, [DT_Output_21].[Score] AS [Score_1_1] 
FROM [DT_Output_21]), 
[DT_node_lookup_22] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.522268) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_22] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.522268 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0373591 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0358904 AS [Score]) AS [Values]), 
[DT_Output_22] AS 
(SELECT [DT_node_lookup_22].[KEY] AS [KEY], [DT_node_lookup_22].node_id_2 AS node_id_2, [DT_node_data_22].node_id AS node_id, [DT_node_data_22].feature AS feature, [DT_node_data_22].threshold AS threshold, [DT_node_data_22].depth AS depth, [DT_node_data_22].parent_id AS parent_id, [DT_node_data_22].[Score] AS [Score] 
FROM [DT_node_lookup_22] LEFT OUTER JOIN [DT_node_data_22] ON [DT_node_lookup_22].node_id_2 = [DT_node_data_22].node_id), 
[XGB_Tree_1_2] AS 
(SELECT [DT_Output_22].[KEY] AS join_key_1_2, [DT_Output_22].[Score] AS [Score_1_2] 
FROM [DT_Output_22]), 
[DT_node_lookup_23] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_23] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0638938 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0609162 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00112374 AS [Score]) AS [Values]), 
[DT_Output_23] AS 
(SELECT [DT_node_lookup_23].[KEY] AS [KEY], [DT_node_lookup_23].node_id_2 AS node_id_2, [DT_node_data_23].node_id AS node_id, [DT_node_data_23].feature AS feature, [DT_node_data_23].threshold AS threshold, [DT_node_data_23].depth AS depth, [DT_node_data_23].parent_id AS parent_id, [DT_node_data_23].[Score] AS [Score] 
FROM [DT_node_lookup_23] LEFT OUTER JOIN [DT_node_data_23] ON [DT_node_lookup_23].node_id_2 = [DT_node_data_23].node_id), 
[XGB_Tree_1_3] AS 
(SELECT [DT_Output_23].[KEY] AS join_key_1_3, [DT_Output_23].[Score] AS [Score_1_3] 
FROM [DT_Output_23]), 
[DT_node_lookup_24] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.522268) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_24] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.522268 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0349416 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0348003 AS [Score]) AS [Values]), 
[DT_Output_24] AS 
(SELECT [DT_node_lookup_24].[KEY] AS [KEY], [DT_node_lookup_24].node_id_2 AS node_id_2, [DT_node_data_24].node_id AS node_id, [DT_node_data_24].feature AS feature, [DT_node_data_24].threshold AS threshold, [DT_node_data_24].depth AS depth, [DT_node_data_24].parent_id AS parent_id, [DT_node_data_24].[Score] AS [Score] 
FROM [DT_node_lookup_24] LEFT OUTER JOIN [DT_node_data_24] ON [DT_node_lookup_24].node_id_2 = [DT_node_data_24].node_id), 
[XGB_Tree_1_4] AS 
(SELECT [DT_Output_24].[KEY] AS join_key_1_4, [DT_Output_24].[Score] AS [Score_1_4] 
FROM [DT_Output_24]), 
[DT_node_lookup_25] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_25] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0596888 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0598054 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00134014 AS [Score]) AS [Values]), 
[DT_Output_25] AS 
(SELECT [DT_node_lookup_25].[KEY] AS [KEY], [DT_node_lookup_25].node_id_2 AS node_id_2, [DT_node_data_25].node_id AS node_id, [DT_node_data_25].feature AS feature, [DT_node_data_25].threshold AS threshold, [DT_node_data_25].depth AS depth, [DT_node_data_25].parent_id AS parent_id, [DT_node_data_25].[Score] AS [Score] 
FROM [DT_node_lookup_25] LEFT OUTER JOIN [DT_node_data_25] ON [DT_node_lookup_25].node_id_2 = [DT_node_data_25].node_id), 
[XGB_Tree_1_5] AS 
(SELECT [DT_Output_25].[KEY] AS join_key_1_5, [DT_Output_25].[Score] AS [Score_1_5] 
FROM [DT_Output_25]), 
[DT_node_lookup_26] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_26] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0551734 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0221198 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0603493 AS [Score]) AS [Values]), 
[DT_Output_26] AS 
(SELECT [DT_node_lookup_26].[KEY] AS [KEY], [DT_node_lookup_26].node_id_2 AS node_id_2, [DT_node_data_26].node_id AS node_id, [DT_node_data_26].feature AS feature, [DT_node_data_26].threshold AS threshold, [DT_node_data_26].depth AS depth, [DT_node_data_26].parent_id AS parent_id, [DT_node_data_26].[Score] AS [Score] 
FROM [DT_node_lookup_26] LEFT OUTER JOIN [DT_node_data_26] ON [DT_node_lookup_26].node_id_2 = [DT_node_data_26].node_id), 
[XGB_Tree_1_6] AS 
(SELECT [DT_Output_26].[KEY] AS join_key_1_6, [DT_Output_26].[Score] AS [Score_1_6] 
FROM [DT_Output_26]), 
[DT_node_lookup_27] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_27] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0552501 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0588974 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00081487 AS [Score]) AS [Values]), 
[DT_Output_27] AS 
(SELECT [DT_node_lookup_27].[KEY] AS [KEY], [DT_node_lookup_27].node_id_2 AS node_id_2, [DT_node_data_27].node_id AS node_id, [DT_node_data_27].feature AS feature, [DT_node_data_27].threshold AS threshold, [DT_node_data_27].depth AS depth, [DT_node_data_27].parent_id AS parent_id, [DT_node_data_27].[Score] AS [Score] 
FROM [DT_node_lookup_27] LEFT OUTER JOIN [DT_node_data_27] ON [DT_node_lookup_27].node_id_2 = [DT_node_data_27].node_id), 
[XGB_Tree_1_7] AS 
(SELECT [DT_Output_27].[KEY] AS join_key_1_7, [DT_Output_27].[Score] AS [Score_1_7] 
FROM [DT_Output_27]), 
[DT_node_lookup_28] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_28] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0514631 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0208242 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0594026 AS [Score]) AS [Values]), 
[DT_Output_28] AS 
(SELECT [DT_node_lookup_28].[KEY] AS [KEY], [DT_node_lookup_28].node_id_2 AS node_id_2, [DT_node_data_28].node_id AS node_id, [DT_node_data_28].feature AS feature, [DT_node_data_28].threshold AS threshold, [DT_node_data_28].depth AS depth, [DT_node_data_28].parent_id AS parent_id, [DT_node_data_28].[Score] AS [Score] 
FROM [DT_node_lookup_28] LEFT OUTER JOIN [DT_node_data_28] ON [DT_node_lookup_28].node_id_2 = [DT_node_data_28].node_id), 
[XGB_Tree_1_8] AS 
(SELECT [DT_Output_28].[KEY] AS join_key_1_8, [DT_Output_28].[Score] AS [Score_1_8] 
FROM [DT_Output_28]), 
[DT_node_lookup_29] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_29] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0518835 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0579263 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000998366 AS [Score]) AS [Values]), 
[DT_Output_29] AS 
(SELECT [DT_node_lookup_29].[KEY] AS [KEY], [DT_node_lookup_29].node_id_2 AS node_id_2, [DT_node_data_29].node_id AS node_id, [DT_node_data_29].feature AS feature, [DT_node_data_29].threshold AS threshold, [DT_node_data_29].depth AS depth, [DT_node_data_29].parent_id AS parent_id, [DT_node_data_29].[Score] AS [Score] 
FROM [DT_node_lookup_29] LEFT OUTER JOIN [DT_node_data_29] ON [DT_node_lookup_29].node_id_2 = [DT_node_data_29].node_id), 
[XGB_Tree_1_9] AS 
(SELECT [DT_Output_29].[KEY] AS join_key_1_9, [DT_Output_29].[Score] AS [Score_1_9] 
FROM [DT_Output_29]), 
[DT_node_lookup_30] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.414763) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 < 0.294918) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_30] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.414763 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 0.294918 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0423376 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00541185 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0624323 AS [Score]) AS [Values]), 
[DT_Output_30] AS 
(SELECT [DT_node_lookup_30].[KEY] AS [KEY], [DT_node_lookup_30].node_id_2 AS node_id_2, [DT_node_data_30].node_id AS node_id, [DT_node_data_30].feature AS feature, [DT_node_data_30].threshold AS threshold, [DT_node_data_30].depth AS depth, [DT_node_data_30].parent_id AS parent_id, [DT_node_data_30].[Score] AS [Score] 
FROM [DT_node_lookup_30] LEFT OUTER JOIN [DT_node_data_30] ON [DT_node_lookup_30].node_id_2 = [DT_node_data_30].node_id), 
[XGB_Tree_1_10] AS 
(SELECT [DT_Output_30].[KEY] AS join_key_1_10, [DT_Output_30].[Score] AS [Score_1_10] 
FROM [DT_Output_30]), 
[DT_node_lookup_31] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 < 0.129094) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_31] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0484065 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, 0.129094 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000955228 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0587496 AS [Score]) AS [Values]), 
[DT_Output_31] AS 
(SELECT [DT_node_lookup_31].[KEY] AS [KEY], [DT_node_lookup_31].node_id_2 AS node_id_2, [DT_node_data_31].node_id AS node_id, [DT_node_data_31].feature AS feature, [DT_node_data_31].threshold AS threshold, [DT_node_data_31].depth AS depth, [DT_node_data_31].parent_id AS parent_id, [DT_node_data_31].[Score] AS [Score] 
FROM [DT_node_lookup_31] LEFT OUTER JOIN [DT_node_data_31] ON [DT_node_lookup_31].node_id_2 = [DT_node_data_31].node_id), 
[XGB_Tree_1_11] AS 
(SELECT [DT_Output_31].[KEY] AS join_key_1_11, [DT_Output_31].[Score] AS [Score_1_11] 
FROM [DT_Output_31]), 
[DT_node_lookup_32] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_32] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0482395 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0175584 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0580434 AS [Score]) AS [Values]), 
[DT_Output_32] AS 
(SELECT [DT_node_lookup_32].[KEY] AS [KEY], [DT_node_lookup_32].node_id_2 AS node_id_2, [DT_node_data_32].node_id AS node_id, [DT_node_data_32].feature AS feature, [DT_node_data_32].threshold AS threshold, [DT_node_data_32].depth AS depth, [DT_node_data_32].parent_id AS parent_id, [DT_node_data_32].[Score] AS [Score] 
FROM [DT_node_lookup_32] LEFT OUTER JOIN [DT_node_data_32] ON [DT_node_lookup_32].node_id_2 = [DT_node_data_32].node_id), 
[XGB_Tree_1_12] AS 
(SELECT [DT_Output_32].[KEY] AS join_key_1_12, [DT_Output_32].[Score] AS [Score_1_12] 
FROM [DT_Output_32]), 
[DT_node_lookup_33] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_33] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0453663 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0567576 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000937373 AS [Score]) AS [Values]), 
[DT_Output_33] AS 
(SELECT [DT_node_lookup_33].[KEY] AS [KEY], [DT_node_lookup_33].node_id_2 AS node_id_2, [DT_node_data_33].node_id AS node_id, [DT_node_data_33].feature AS feature, [DT_node_data_33].threshold AS threshold, [DT_node_data_33].depth AS depth, [DT_node_data_33].parent_id AS parent_id, [DT_node_data_33].[Score] AS [Score] 
FROM [DT_node_lookup_33] LEFT OUTER JOIN [DT_node_data_33] ON [DT_node_lookup_33].node_id_2 = [DT_node_data_33].node_id), 
[XGB_Tree_1_13] AS 
(SELECT [DT_Output_33].[KEY] AS join_key_1_13, [DT_Output_33].[Score] AS [Score_1_13] 
FROM [DT_Output_33]), 
[DT_node_lookup_34] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_34] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.045217 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0164875 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.057163 AS [Score]) AS [Values]), 
[DT_Output_34] AS 
(SELECT [DT_node_lookup_34].[KEY] AS [KEY], [DT_node_lookup_34].node_id_2 AS node_id_2, [DT_node_data_34].node_id AS node_id, [DT_node_data_34].feature AS feature, [DT_node_data_34].threshold AS threshold, [DT_node_data_34].depth AS depth, [DT_node_data_34].parent_id AS parent_id, [DT_node_data_34].[Score] AS [Score] 
FROM [DT_node_lookup_34] LEFT OUTER JOIN [DT_node_data_34] ON [DT_node_lookup_34].node_id_2 = [DT_node_data_34].node_id), 
[XGB_Tree_1_14] AS 
(SELECT [DT_Output_34].[KEY] AS join_key_1_14, [DT_Output_34].[Score] AS [Score_1_14] 
FROM [DT_Output_34]), 
[DT_node_lookup_35] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 < 0.129094) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_35] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0426875 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, 0.129094 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000410144 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.057404 AS [Score]) AS [Values]), 
[DT_Output_35] AS 
(SELECT [DT_node_lookup_35].[KEY] AS [KEY], [DT_node_lookup_35].node_id_2 AS node_id_2, [DT_node_data_35].node_id AS node_id, [DT_node_data_35].feature AS feature, [DT_node_data_35].threshold AS threshold, [DT_node_data_35].depth AS depth, [DT_node_data_35].parent_id AS parent_id, [DT_node_data_35].[Score] AS [Score] 
FROM [DT_node_lookup_35] LEFT OUTER JOIN [DT_node_data_35] ON [DT_node_lookup_35].node_id_2 = [DT_node_data_35].node_id), 
[XGB_Tree_1_15] AS 
(SELECT [DT_Output_35].[KEY] AS join_key_1_15, [DT_Output_35].[Score] AS [Score_1_15] 
FROM [DT_Output_35]), 
[DT_node_lookup_36] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_36] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0419172 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0154714 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0562843 AS [Score]) AS [Values]), 
[DT_Output_36] AS 
(SELECT [DT_node_lookup_36].[KEY] AS [KEY], [DT_node_lookup_36].node_id_2 AS node_id_2, [DT_node_data_36].node_id AS node_id, [DT_node_data_36].feature AS feature, [DT_node_data_36].threshold AS threshold, [DT_node_data_36].depth AS depth, [DT_node_data_36].parent_id AS parent_id, [DT_node_data_36].[Score] AS [Score] 
FROM [DT_node_lookup_36] LEFT OUTER JOIN [DT_node_data_36] ON [DT_node_lookup_36].node_id_2 = [DT_node_data_36].node_id), 
[XGB_Tree_1_16] AS 
(SELECT [DT_Output_36].[KEY] AS join_key_1_16, [DT_Output_36].[Score] AS [Score_1_16] 
FROM [DT_Output_36]), 
[DT_node_lookup_37] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_37] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0403321 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0556469 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0025018 AS [Score]) AS [Values]), 
[DT_Output_37] AS 
(SELECT [DT_node_lookup_37].[KEY] AS [KEY], [DT_node_lookup_37].node_id_2 AS node_id_2, [DT_node_data_37].node_id AS node_id, [DT_node_data_37].feature AS feature, [DT_node_data_37].threshold AS threshold, [DT_node_data_37].depth AS depth, [DT_node_data_37].parent_id AS parent_id, [DT_node_data_37].[Score] AS [Score] 
FROM [DT_node_lookup_37] LEFT OUTER JOIN [DT_node_data_37] ON [DT_node_lookup_37].node_id_2 = [DT_node_data_37].node_id), 
[XGB_Tree_1_17] AS 
(SELECT [DT_Output_37].[KEY] AS join_key_1_17, [DT_Output_37].[Score] AS [Score_1_17] 
FROM [DT_Output_37]), 
[DT_node_lookup_38] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.414763) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 < 0.309933) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_38] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.414763 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 0.309933 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0391993 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00848342 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0586052 AS [Score]) AS [Values]), 
[DT_Output_38] AS 
(SELECT [DT_node_lookup_38].[KEY] AS [KEY], [DT_node_lookup_38].node_id_2 AS node_id_2, [DT_node_data_38].node_id AS node_id, [DT_node_data_38].feature AS feature, [DT_node_data_38].threshold AS threshold, [DT_node_data_38].depth AS depth, [DT_node_data_38].parent_id AS parent_id, [DT_node_data_38].[Score] AS [Score] 
FROM [DT_node_lookup_38] LEFT OUTER JOIN [DT_node_data_38] ON [DT_node_lookup_38].node_id_2 = [DT_node_data_38].node_id), 
[XGB_Tree_1_18] AS 
(SELECT [DT_Output_38].[KEY] AS join_key_1_18, [DT_Output_38].[Score] AS [Score_1_18] 
FROM [DT_Output_38]), 
[DT_node_lookup_39] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.0152971) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_39] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0381914 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.0152971 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0482108 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00284426 AS [Score]) AS [Values]), 
[DT_Output_39] AS 
(SELECT [DT_node_lookup_39].[KEY] AS [KEY], [DT_node_lookup_39].node_id_2 AS node_id_2, [DT_node_data_39].node_id AS node_id, [DT_node_data_39].feature AS feature, [DT_node_data_39].threshold AS threshold, [DT_node_data_39].depth AS depth, [DT_node_data_39].parent_id AS parent_id, [DT_node_data_39].[Score] AS [Score] 
FROM [DT_node_lookup_39] LEFT OUTER JOIN [DT_node_data_39] ON [DT_node_lookup_39].node_id_2 = [DT_node_data_39].node_id), 
[XGB_Tree_1_19] AS 
(SELECT [DT_Output_39].[KEY] AS join_key_1_19, [DT_Output_39].[Score] AS [Score_1_19] 
FROM [DT_Output_39]), 
[XGB_Join_CTE] AS 
(SELECT [XGB_Tree_0_0].join_key_0_0 AS join_key_0_0, [XGB_Tree_0_0].[Score_0_0] AS [Score_0_0], [XGB_Tree_0_1].join_key_0_1 AS join_key_0_1, [XGB_Tree_0_1].[Score_0_1] AS [Score_0_1], [XGB_Tree_0_2].join_key_0_2 AS join_key_0_2, [XGB_Tree_0_2].[Score_0_2] AS [Score_0_2], [XGB_Tree_0_3].join_key_0_3 AS join_key_0_3, [XGB_Tree_0_3].[Score_0_3] AS [Score_0_3], [XGB_Tree_0_4].join_key_0_4 AS join_key_0_4, [XGB_Tree_0_4].[Score_0_4] AS [Score_0_4], [XGB_Tree_0_5].join_key_0_5 AS join_key_0_5, [XGB_Tree_0_5].[Score_0_5] AS [Score_0_5], [XGB_Tree_0_6].join_key_0_6 AS join_key_0_6, [XGB_Tree_0_6].[Score_0_6] AS [Score_0_6], [XGB_Tree_0_7].join_key_0_7 AS join_key_0_7, [XGB_Tree_0_7].[Score_0_7] AS [Score_0_7], [XGB_Tree_0_8].join_key_0_8 AS join_key_0_8, [XGB_Tree_0_8].[Score_0_8] AS [Score_0_8], [XGB_Tree_0_9].join_key_0_9 AS join_key_0_9, [XGB_Tree_0_9].[Score_0_9] AS [Score_0_9], [XGB_Tree_0_10].join_key_0_10 AS join_key_0_10, [XGB_Tree_0_10].[Score_0_10] AS [Score_0_10], [XGB_Tree_0_11].join_key_0_11 AS join_key_0_11, [XGB_Tree_0_11].[Score_0_11] AS [Score_0_11], [XGB_Tree_0_12].join_key_0_12 AS join_key_0_12, [XGB_Tree_0_12].[Score_0_12] AS [Score_0_12], [XGB_Tree_0_13].join_key_0_13 AS join_key_0_13, [XGB_Tree_0_13].[Score_0_13] AS [Score_0_13], [XGB_Tree_0_14].join_key_0_14 AS join_key_0_14, [XGB_Tree_0_14].[Score_0_14] AS [Score_0_14], [XGB_Tree_0_15].join_key_0_15 AS join_key_0_15, [XGB_Tree_0_15].[Score_0_15] AS [Score_0_15], [XGB_Tree_0_16].join_key_0_16 AS join_key_0_16, [XGB_Tree_0_16].[Score_0_16] AS [Score_0_16], [XGB_Tree_0_17].join_key_0_17 AS join_key_0_17, [XGB_Tree_0_17].[Score_0_17] AS [Score_0_17], [XGB_Tree_0_18].join_key_0_18 AS join_key_0_18, [XGB_Tree_0_18].[Score_0_18] AS [Score_0_18], [XGB_Tree_0_19].join_key_0_19 AS join_key_0_19, [XGB_Tree_0_19].[Score_0_19] AS [Score_0_19], [XGB_Tree_1_0].join_key_1_0 AS join_key_1_0, [XGB_Tree_1_0].[Score_1_0] AS [Score_1_0], [XGB_Tree_1_1].join_key_1_1 AS join_key_1_1, [XGB_Tree_1_1].[Score_1_1] AS [Score_1_1], [XGB_Tree_1_2].join_key_1_2 AS join_key_1_2, [XGB_Tree_1_2].[Score_1_2] AS [Score_1_2], [XGB_Tree_1_3].join_key_1_3 AS join_key_1_3, [XGB_Tree_1_3].[Score_1_3] AS [Score_1_3], [XGB_Tree_1_4].join_key_1_4 AS join_key_1_4, [XGB_Tree_1_4].[Score_1_4] AS [Score_1_4], [XGB_Tree_1_5].join_key_1_5 AS join_key_1_5, [XGB_Tree_1_5].[Score_1_5] AS [Score_1_5], [XGB_Tree_1_6].join_key_1_6 AS join_key_1_6, [XGB_Tree_1_6].[Score_1_6] AS [Score_1_6], [XGB_Tree_1_7].join_key_1_7 AS join_key_1_7, [XGB_Tree_1_7].[Score_1_7] AS [Score_1_7], [XGB_Tree_1_8].join_key_1_8 AS join_key_1_8, [XGB_Tree_1_8].[Score_1_8] AS [Score_1_8], [XGB_Tree_1_9].join_key_1_9 AS join_key_1_9, [XGB_Tree_1_9].[Score_1_9] AS [Score_1_9], [XGB_Tree_1_10].join_key_1_10 AS join_key_1_10, [XGB_Tree_1_10].[Score_1_10] AS [Score_1_10], [XGB_Tree_1_11].join_key_1_11 AS join_key_1_11, [XGB_Tree_1_11].[Score_1_11] AS [Score_1_11], [XGB_Tree_1_12].join_key_1_12 AS join_key_1_12, [XGB_Tree_1_12].[Score_1_12] AS [Score_1_12], [XGB_Tree_1_13].join_key_1_13 AS join_key_1_13, [XGB_Tree_1_13].[Score_1_13] AS [Score_1_13], [XGB_Tree_1_14].join_key_1_14 AS join_key_1_14, [XGB_Tree_1_14].[Score_1_14] AS [Score_1_14], [XGB_Tree_1_15].join_key_1_15 AS join_key_1_15, [XGB_Tree_1_15].[Score_1_15] AS [Score_1_15], [XGB_Tree_1_16].join_key_1_16 AS join_key_1_16, [XGB_Tree_1_16].[Score_1_16] AS [Score_1_16], [XGB_Tree_1_17].join_key_1_17 AS join_key_1_17, [XGB_Tree_1_17].[Score_1_17] AS [Score_1_17], [XGB_Tree_1_18].join_key_1_18 AS join_key_1_18, [XGB_Tree_1_18].[Score_1_18] AS [Score_1_18], [XGB_Tree_1_19].join_key_1_19 AS join_key_1_19, [XGB_Tree_1_19].[Score_1_19] AS [Score_1_19] 
FROM [XGB_Tree_0_0] LEFT OUTER JOIN [XGB_Tree_0_1] ON [XGB_Tree_0_0].join_key_0_0 = [XGB_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [XGB_Tree_0_2] ON [XGB_Tree_0_2].join_key_0_2 = [XGB_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [XGB_Tree_0_3] ON [XGB_Tree_0_3].join_key_0_3 = [XGB_Tree_0_2].join_key_0_2 LEFT OUTER JOIN [XGB_Tree_0_4] ON [XGB_Tree_0_4].join_key_0_4 = [XGB_Tree_0_3].join_key_0_3 LEFT OUTER JOIN [XGB_Tree_0_5] ON [XGB_Tree_0_5].join_key_0_5 = [XGB_Tree_0_4].join_key_0_4 LEFT OUTER JOIN [XGB_Tree_0_6] ON [XGB_Tree_0_6].join_key_0_6 = [XGB_Tree_0_5].join_key_0_5 LEFT OUTER JOIN [XGB_Tree_0_7] ON [XGB_Tree_0_7].join_key_0_7 = [XGB_Tree_0_6].join_key_0_6 LEFT OUTER JOIN [XGB_Tree_0_8] ON [XGB_Tree_0_8].join_key_0_8 = [XGB_Tree_0_7].join_key_0_7 LEFT OUTER JOIN [XGB_Tree_0_9] ON [XGB_Tree_0_9].join_key_0_9 = [XGB_Tree_0_8].join_key_0_8 LEFT OUTER JOIN [XGB_Tree_0_10] ON [XGB_Tree_0_10].join_key_0_10 = [XGB_Tree_0_9].join_key_0_9 LEFT OUTER JOIN [XGB_Tree_0_11] ON [XGB_Tree_0_11].join_key_0_11 = [XGB_Tree_0_10].join_key_0_10 LEFT OUTER JOIN [XGB_Tree_0_12] ON [XGB_Tree_0_12].join_key_0_12 = [XGB_Tree_0_11].join_key_0_11 LEFT OUTER JOIN [XGB_Tree_0_13] ON [XGB_Tree_0_13].join_key_0_13 = [XGB_Tree_0_12].join_key_0_12 LEFT OUTER JOIN [XGB_Tree_0_14] ON [XGB_Tree_0_14].join_key_0_14 = [XGB_Tree_0_13].join_key_0_13 LEFT OUTER JOIN [XGB_Tree_0_15] ON [XGB_Tree_0_15].join_key_0_15 = [XGB_Tree_0_14].join_key_0_14 LEFT OUTER JOIN [XGB_Tree_0_16] ON [XGB_Tree_0_16].join_key_0_16 = [XGB_Tree_0_15].join_key_0_15 LEFT OUTER JOIN [XGB_Tree_0_17] ON [XGB_Tree_0_17].join_key_0_17 = [XGB_Tree_0_16].join_key_0_16 LEFT OUTER JOIN [XGB_Tree_0_18] ON [XGB_Tree_0_18].join_key_0_18 = [XGB_Tree_0_17].join_key_0_17 LEFT OUTER JOIN [XGB_Tree_0_19] ON [XGB_Tree_0_19].join_key_0_19 = [XGB_Tree_0_18].join_key_0_18 LEFT OUTER JOIN [XGB_Tree_1_0] ON [XGB_Tree_1_0].join_key_1_0 = [XGB_Tree_0_19].join_key_0_19 LEFT OUTER JOIN [XGB_Tree_1_1] ON [XGB_Tree_1_1].join_key_1_1 = [XGB_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [XGB_Tree_1_2] ON [XGB_Tree_1_2].join_key_1_2 = [XGB_Tree_1_1].join_key_1_1 LEFT OUTER JOIN [XGB_Tree_1_3] ON [XGB_Tree_1_3].join_key_1_3 = [XGB_Tree_1_2].join_key_1_2 LEFT OUTER JOIN [XGB_Tree_1_4] ON [XGB_Tree_1_4].join_key_1_4 = [XGB_Tree_1_3].join_key_1_3 LEFT OUTER JOIN [XGB_Tree_1_5] ON [XGB_Tree_1_5].join_key_1_5 = [XGB_Tree_1_4].join_key_1_4 LEFT OUTER JOIN [XGB_Tree_1_6] ON [XGB_Tree_1_6].join_key_1_6 = [XGB_Tree_1_5].join_key_1_5 LEFT OUTER JOIN [XGB_Tree_1_7] ON [XGB_Tree_1_7].join_key_1_7 = [XGB_Tree_1_6].join_key_1_6 LEFT OUTER JOIN [XGB_Tree_1_8] ON [XGB_Tree_1_8].join_key_1_8 = [XGB_Tree_1_7].join_key_1_7 LEFT OUTER JOIN [XGB_Tree_1_9] ON [XGB_Tree_1_9].join_key_1_9 = [XGB_Tree_1_8].join_key_1_8 LEFT OUTER JOIN [XGB_Tree_1_10] ON [XGB_Tree_1_10].join_key_1_10 = [XGB_Tree_1_9].join_key_1_9 LEFT OUTER JOIN [XGB_Tree_1_11] ON [XGB_Tree_1_11].join_key_1_11 = [XGB_Tree_1_10].join_key_1_10 LEFT OUTER JOIN [XGB_Tree_1_12] ON [XGB_Tree_1_12].join_key_1_12 = [XGB_Tree_1_11].join_key_1_11 LEFT OUTER JOIN [XGB_Tree_1_13] ON [XGB_Tree_1_13].join_key_1_13 = [XGB_Tree_1_12].join_key_1_12 LEFT OUTER JOIN [XGB_Tree_1_14] ON [XGB_Tree_1_14].join_key_1_14 = [XGB_Tree_1_13].join_key_1_13 LEFT OUTER JOIN [XGB_Tree_1_15] ON [XGB_Tree_1_15].join_key_1_15 = [XGB_Tree_1_14].join_key_1_14 LEFT OUTER JOIN [XGB_Tree_1_16] ON [XGB_Tree_1_16].join_key_1_16 = [XGB_Tree_1_15].join_key_1_15 LEFT OUTER JOIN [XGB_Tree_1_17] ON [XGB_Tree_1_17].join_key_1_17 = [XGB_Tree_1_16].join_key_1_16 LEFT OUTER JOIN [XGB_Tree_1_18] ON [XGB_Tree_1_18].join_key_1_18 = [XGB_Tree_1_17].join_key_1_17 LEFT OUTER JOIN [XGB_Tree_1_19] ON [XGB_Tree_1_19].join_key_1_19 = [XGB_Tree_1_18].join_key_1_18), 
[XGB_AVG_Scores] AS 
(SELECT [XGB_Join_CTE].join_key_0_0 AS [KEY], [XGB_Join_CTE].[Score_0_0] + [XGB_Join_CTE].[Score_0_1] + [XGB_Join_CTE].[Score_0_2] + [XGB_Join_CTE].[Score_0_3] + [XGB_Join_CTE].[Score_0_4] + [XGB_Join_CTE].[Score_0_5] + [XGB_Join_CTE].[Score_0_6] + [XGB_Join_CTE].[Score_0_7] + [XGB_Join_CTE].[Score_0_8] + [XGB_Join_CTE].[Score_0_9] + [XGB_Join_CTE].[Score_0_10] + [XGB_Join_CTE].[Score_0_11] + [XGB_Join_CTE].[Score_0_12] + [XGB_Join_CTE].[Score_0_13] + [XGB_Join_CTE].[Score_0_14] + [XGB_Join_CTE].[Score_0_15] + [XGB_Join_CTE].[Score_0_16] + [XGB_Join_CTE].[Score_0_17] + [XGB_Join_CTE].[Score_0_18] + [XGB_Join_CTE].[Score_0_19] AS [Score_0], [XGB_Join_CTE].[Score_1_0] + [XGB_Join_CTE].[Score_1_1] + [XGB_Join_CTE].[Score_1_2] + [XGB_Join_CTE].[Score_1_3] + [XGB_Join_CTE].[Score_1_4] + [XGB_Join_CTE].[Score_1_5] + [XGB_Join_CTE].[Score_1_6] + [XGB_Join_CTE].[Score_1_7] + [XGB_Join_CTE].[Score_1_8] + [XGB_Join_CTE].[Score_1_9] + [XGB_Join_CTE].[Score_1_10] + [XGB_Join_CTE].[Score_1_11] + [XGB_Join_CTE].[Score_1_12] + [XGB_Join_CTE].[Score_1_13] + [XGB_Join_CTE].[Score_1_14] + [XGB_Join_CTE].[Score_1_15] + [XGB_Join_CTE].[Score_1_16] + [XGB_Join_CTE].[Score_1_17] + [XGB_Join_CTE].[Score_1_18] + [XGB_Join_CTE].[Score_1_19] AS [Score_1] 
FROM [XGB_Join_CTE]), 
orig_cte AS 
(SELECT [XGB_AVG_Scores].[KEY] AS [KEY], [XGB_AVG_Scores].[Score_0] AS [Score_0], [XGB_AVG_Scores].[Score_1] AS [Score_1], CAST(NULL AS FLOAT(53)) AS [Proba_0], CAST(NULL AS FLOAT(53)) AS [Proba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [XGB_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], exp(score_max.[Score_0] - score_max.[max_Score]) AS [exp_delta_Score_0], exp(score_max.[Score_1] - score_max.[max_Score]) AS [exp_delta_Score_1] 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.[KEY] AS [KEY], soft_scu.class AS class, soft_scu.[LogProba] AS [LogProba], soft_scu.[Proba] AS [Proba], soft_scu.[Score] AS [Score], soft_scu.[exp_delta_Score] AS [exp_delta_Score] 
FROM (SELECT score_soft_max_comp.[KEY] AS [KEY], 0 AS class, score_soft_max_comp.[LogProba_0] AS [LogProba], score_soft_max_comp.[Proba_0] AS [Proba], score_soft_max_comp.[Score_0] AS [Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 1 AS class, score_soft_max_comp.[LogProba_1] AS [LogProba], score_soft_max_comp.[Proba_1] AS [Proba], score_soft_max_comp.[Score_1] AS [Score], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score] 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.[KEY] AS [KEY], score_soft_max_comp.[Score_0] AS [Score_0], score_soft_max_comp.[Score_1] AS [Score_1], score_soft_max_comp.[Proba_0] AS [Proba_0], score_soft_max_comp.[Proba_1] AS [Proba_1], score_soft_max_comp.[LogProba_0] AS [LogProba_0], score_soft_max_comp.[LogProba_1] AS [LogProba_1], score_soft_max_comp.[Decision] AS [Decision], score_soft_max_comp.[max_LogProba] AS [max_LogProba], score_soft_max_comp.[max_Proba] AS [max_Proba], score_soft_max_comp.[max_Score] AS [max_Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score_1], (SELECT sum(score_class_union_soft.[exp_delta_Score]) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.[KEY] = score_class_union_soft.[KEY]) AS [sum_ExpDeltaScore] 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[Decision] AS [Decision], score_soft_max.[max_LogProba] AS [max_LogProba], score_soft_max.[max_Proba] AS [max_Proba], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.[max_LogProba] = score_class_union.[LogProba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.[max_Proba] = score_class_union.[Proba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.[max_Score] = score_class_union.[Score] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score], score_soft_max.[exp_delta_Score_0] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_0], score_soft_max.[exp_delta_Score_1] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_1] 
FROM score_soft_max)
 SELECT arg_max_cte.[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], arg_max_cte.[SoftProba_0] AS [Proba_0], arg_max_cte.[SoftProba_1] AS [Proba_1], CASE WHEN (arg_max_cte.[SoftProba_0] IS NULL OR arg_max_cte.[SoftProba_0] > 0.0) THEN log(arg_max_cte.[SoftProba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[SoftProba_1] IS NULL OR arg_max_cte.[SoftProba_1] > 0.0) THEN log(arg_max_cte.[SoftProba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte