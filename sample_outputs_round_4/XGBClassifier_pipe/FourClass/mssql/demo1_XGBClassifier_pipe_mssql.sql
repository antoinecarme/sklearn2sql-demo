-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.0353506683115 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN -0.427986058239 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -0.370970250708 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.0547482270004 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.0253380160608 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.0461918200837 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.0571385281343 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN -0.181060597827 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.0214151300387 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.239331403264 ELSE [ADS].[Feature_9] END AS impute_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN 0.23224588702 ELSE [ADS].[Feature_10] END AS impute_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN -0.104037781634 ELSE [ADS].[Feature_11] END AS impute_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN -0.207884533314 ELSE [ADS].[Feature_12] END AS impute_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN 0.0361064693533 ELSE [ADS].[Feature_13] END AS impute_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.178707786531 ELSE [ADS].[Feature_14] END AS impute_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN 0.127293884716 ELSE [ADS].[Feature_15] END AS impute_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 0.480518381352 ELSE [ADS].[Feature_16] END AS impute_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN 0.0357745606025 ELSE [ADS].[Feature_17] END AS impute_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN -0.0498467685562 ELSE [ADS].[Feature_18] END AS impute_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN 0.0568422797202 ELSE [ADS].[Feature_19] END AS impute_21 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - 0.0353506683115 AS impute_2, [ADS_imp_1_OUT].impute_3 - -0.427986058239 AS impute_3, [ADS_imp_1_OUT].impute_4 - -0.370970250708 AS impute_4, [ADS_imp_1_OUT].impute_5 - 0.0547482270004 AS impute_5, [ADS_imp_1_OUT].impute_6 - 0.0253380160608 AS impute_6, [ADS_imp_1_OUT].impute_7 - 0.0461918200837 AS impute_7, [ADS_imp_1_OUT].impute_8 - -0.0571385281343 AS impute_8, [ADS_imp_1_OUT].impute_9 - -0.181060597827 AS impute_9, [ADS_imp_1_OUT].impute_10 - 0.0214151300387 AS impute_10, [ADS_imp_1_OUT].impute_11 - 0.239331403264 AS impute_11, [ADS_imp_1_OUT].impute_12 - 0.23224588702 AS impute_12, [ADS_imp_1_OUT].impute_13 - -0.104037781634 AS impute_13, [ADS_imp_1_OUT].impute_14 - -0.207884533314 AS impute_14, [ADS_imp_1_OUT].impute_15 - 0.0361064693533 AS impute_15, [ADS_imp_1_OUT].impute_16 - 0.178707786531 AS impute_16, [ADS_imp_1_OUT].impute_17 - 0.127293884716 AS impute_17, [ADS_imp_1_OUT].impute_18 - 0.480518381352 AS impute_18, [ADS_imp_1_OUT].impute_19 - 0.0357745606025 AS impute_19, [ADS_imp_1_OUT].impute_20 - -0.0498467685562 AS impute_20, [ADS_imp_1_OUT].impute_21 - 0.0568422797202 AS impute_21 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.0546063217805 + [CenteredDataForPCA].impute_3 * 0.662630037866 + [CenteredDataForPCA].impute_4 * 0.226830849791 + [CenteredDataForPCA].impute_5 * -0.0327086622371 + [CenteredDataForPCA].impute_6 * -0.052094969381 + [CenteredDataForPCA].impute_7 * 0.0362289219046 + [CenteredDataForPCA].impute_8 * -0.00837395583501 + [CenteredDataForPCA].impute_9 * -0.0534252112469 + [CenteredDataForPCA].impute_10 * -0.0807436973332 + [CenteredDataForPCA].impute_11 * -0.0339914087267 + [CenteredDataForPCA].impute_12 * -0.438995166304 + [CenteredDataForPCA].impute_13 * 0.0698740507235 + [CenteredDataForPCA].impute_14 * 0.0382674292806 + [CenteredDataForPCA].impute_15 * 0.113684175603 + [CenteredDataForPCA].impute_16 * 0.0565038884144 + [CenteredDataForPCA].impute_17 * -0.00232662309028 + [CenteredDataForPCA].impute_18 * 0.224086703979 + [CenteredDataForPCA].impute_19 * 0.0420420422029 + [CenteredDataForPCA].impute_20 * 0.472781001529 + [CenteredDataForPCA].impute_21 * -0.010086869259 AS anoova_2, [CenteredDataForPCA].impute_2 * -0.00593094415776 + [CenteredDataForPCA].impute_3 * -0.348856360022 + [CenteredDataForPCA].impute_4 * -0.344417639963 + [CenteredDataForPCA].impute_5 * -0.626035307888 + [CenteredDataForPCA].impute_6 * 0.161305334849 + [CenteredDataForPCA].impute_7 * -0.00645085623359 + [CenteredDataForPCA].impute_8 * 0.0628369125958 + [CenteredDataForPCA].impute_9 * -0.0374121124283 + [CenteredDataForPCA].impute_10 * 0.102265870212 + [CenteredDataForPCA].impute_11 * -0.0526730056384 + [CenteredDataForPCA].impute_12 * -0.183683876875 + [CenteredDataForPCA].impute_13 * 0.102822233076 + [CenteredDataForPCA].impute_14 * -0.0228551534931 + [CenteredDataForPCA].impute_15 * 0.085136429185 + [CenteredDataForPCA].impute_16 * 0.104150005604 + [CenteredDataForPCA].impute_17 * -0.110435193401 + [CenteredDataForPCA].impute_18 * -0.114086658871 + [CenteredDataForPCA].impute_19 * 0.0764555341116 + [CenteredDataForPCA].impute_20 * 0.468178919389 + [CenteredDataForPCA].impute_21 * -0.099497768873 AS anoova_3, [CenteredDataForPCA].impute_2 * -0.0268709734925 + [CenteredDataForPCA].impute_3 * 0.111459747834 + [CenteredDataForPCA].impute_4 * 0.489535231737 + [CenteredDataForPCA].impute_5 * -0.412046054487 + [CenteredDataForPCA].impute_6 * 0.0264953683075 + [CenteredDataForPCA].impute_7 * 0.104461683396 + [CenteredDataForPCA].impute_8 * 0.00436881695315 + [CenteredDataForPCA].impute_9 * 0.181441941173 + [CenteredDataForPCA].impute_10 * -0.103080244258 + [CenteredDataForPCA].impute_11 * 0.195165053236 + [CenteredDataForPCA].impute_12 * 0.139263151828 + [CenteredDataForPCA].impute_13 * 0.190750014975 + [CenteredDataForPCA].impute_14 * -0.110726882222 + [CenteredDataForPCA].impute_15 * 0.103614730582 + [CenteredDataForPCA].impute_16 * -0.307707457633 + [CenteredDataForPCA].impute_17 * 0.00485351812892 + [CenteredDataForPCA].impute_18 * -0.474993758031 + [CenteredDataForPCA].impute_19 * -0.0437060852242 + [CenteredDataForPCA].impute_20 * -0.0475111769531 + [CenteredDataForPCA].impute_21 * 0.284408588946 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.0349871375915 + [CenteredDataForPCA].impute_3 * 0.0844189956718 + [CenteredDataForPCA].impute_4 * -0.132280609611 + [CenteredDataForPCA].impute_5 * 0.204462975983 + [CenteredDataForPCA].impute_6 * 0.146458000716 + [CenteredDataForPCA].impute_7 * -0.291090541857 + [CenteredDataForPCA].impute_8 * 0.124515667309 + [CenteredDataForPCA].impute_9 * -0.271102288019 + [CenteredDataForPCA].impute_10 * 0.0579981921858 + [CenteredDataForPCA].impute_11 * -0.0940185324487 + [CenteredDataForPCA].impute_12 * -0.341334612314 + [CenteredDataForPCA].impute_13 * -0.187997018615 + [CenteredDataForPCA].impute_14 * 0.154282025458 + [CenteredDataForPCA].impute_15 * 0.220787442547 + [CenteredDataForPCA].impute_16 * 0.073900062031 + [CenteredDataForPCA].impute_17 * 0.11705691143 + [CenteredDataForPCA].impute_18 * -0.610910518412 + [CenteredDataForPCA].impute_19 * -0.302448785092 + [CenteredDataForPCA].impute_20 * -0.0676963970113 + [CenteredDataForPCA].impute_21 * 0.110104646591 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.10267421763 + [CenteredDataForPCA].impute_3 * -0.0506075571057 + [CenteredDataForPCA].impute_4 * -0.331376381813 + [CenteredDataForPCA].impute_5 * 0.277629435656 + [CenteredDataForPCA].impute_6 * 0.00626729876485 + [CenteredDataForPCA].impute_7 * 0.14499574468 + [CenteredDataForPCA].impute_8 * 0.336791405835 + [CenteredDataForPCA].impute_9 * 0.0980299223143 + [CenteredDataForPCA].impute_10 * -0.458805454928 + [CenteredDataForPCA].impute_11 * 0.226572424097 + [CenteredDataForPCA].impute_12 * -0.225778486442 + [CenteredDataForPCA].impute_13 * 0.437994410665 + [CenteredDataForPCA].impute_14 * 0.0274049151716 + [CenteredDataForPCA].impute_15 * -0.123139353899 + [CenteredDataForPCA].impute_16 * -0.134044486273 + [CenteredDataForPCA].impute_17 * -0.28171169168 + [CenteredDataForPCA].impute_18 * -0.0544070894159 + [CenteredDataForPCA].impute_19 * 0.0282640807433 + [CenteredDataForPCA].impute_20 * 0.000410516596664 + [CenteredDataForPCA].impute_21 * 0.185072097884 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.359475153012 + [CenteredDataForPCA].impute_3 * 0.00775530265874 + [CenteredDataForPCA].impute_4 * -0.0519262964678 + [CenteredDataForPCA].impute_5 * 0.0773890485586 + [CenteredDataForPCA].impute_6 * -0.195923312826 + [CenteredDataForPCA].impute_7 * -0.0104850749735 + [CenteredDataForPCA].impute_8 * 0.0636798511491 + [CenteredDataForPCA].impute_9 * 0.0630064928692 + [CenteredDataForPCA].impute_10 * -0.156127122982 + [CenteredDataForPCA].impute_11 * 0.201899820132 + [CenteredDataForPCA].impute_12 * -0.0821394562016 + [CenteredDataForPCA].impute_13 * -0.206155333208 + [CenteredDataForPCA].impute_14 * -0.361741491498 + [CenteredDataForPCA].impute_15 * 0.386382431182 + [CenteredDataForPCA].impute_16 * -0.103178354735 + [CenteredDataForPCA].impute_17 * 0.127314701977 + [CenteredDataForPCA].impute_18 * -0.150090456733 + [CenteredDataForPCA].impute_19 * 0.396046037501 + [CenteredDataForPCA].impute_20 * -0.0341797389167 + [CenteredDataForPCA].impute_21 * -0.46214083836 AS anoova_7, [CenteredDataForPCA].impute_2 * -0.331546114404 + [CenteredDataForPCA].impute_3 * -0.0319603747527 + [CenteredDataForPCA].impute_4 * 0.0544156103296 + [CenteredDataForPCA].impute_5 * -0.0138167805166 + [CenteredDataForPCA].impute_6 * 0.422007355726 + [CenteredDataForPCA].impute_7 * 0.0852770956105 + [CenteredDataForPCA].impute_8 * 0.28083229144 + [CenteredDataForPCA].impute_9 * -0.00345940849205 + [CenteredDataForPCA].impute_10 * -0.194926672157 + [CenteredDataForPCA].impute_11 * -0.391286005639 + [CenteredDataForPCA].impute_12 * 0.168309543148 + [CenteredDataForPCA].impute_13 * 0.104423263076 + [CenteredDataForPCA].impute_14 * -0.140320409508 + [CenteredDataForPCA].impute_15 * 0.34191528623 + [CenteredDataForPCA].impute_16 * 0.0731800705619 + [CenteredDataForPCA].impute_17 * 0.331479708854 + [CenteredDataForPCA].impute_18 * 0.291377687262 + [CenteredDataForPCA].impute_19 * -0.120460510111 + [CenteredDataForPCA].impute_20 * -0.0211201964682 + [CenteredDataForPCA].impute_21 * 0.199101460364 AS anoova_8, [CenteredDataForPCA].impute_2 * -0.114947544899 + [CenteredDataForPCA].impute_3 * -0.0678401847439 + [CenteredDataForPCA].impute_4 * 0.138493659744 + [CenteredDataForPCA].impute_5 * -0.192127315397 + [CenteredDataForPCA].impute_6 * -0.268988090929 + [CenteredDataForPCA].impute_7 * 0.155381353791 + [CenteredDataForPCA].impute_8 * 0.294991661182 + [CenteredDataForPCA].impute_9 * -0.248123531949 + [CenteredDataForPCA].impute_10 * -0.245125692842 + [CenteredDataForPCA].impute_11 * 0.162095557444 + [CenteredDataForPCA].impute_12 * 0.196410994647 + [CenteredDataForPCA].impute_13 * -0.265555567665 + [CenteredDataForPCA].impute_14 * 0.600372594182 + [CenteredDataForPCA].impute_15 * 0.233320037088 + [CenteredDataForPCA].impute_16 * 0.0794492782697 + [CenteredDataForPCA].impute_17 * -0.170413139121 + [CenteredDataForPCA].impute_18 * 0.116230712114 + [CenteredDataForPCA].impute_19 * -0.120517455373 + [CenteredDataForPCA].impute_20 * -0.00554899395056 + [CenteredDataForPCA].impute_21 * -0.0851251382167 AS anoova_9, [CenteredDataForPCA].impute_2 * -0.178940149574 + [CenteredDataForPCA].impute_3 * 0.0666553655094 + [CenteredDataForPCA].impute_4 * 0.109184999179 + [CenteredDataForPCA].impute_5 * -0.0110238902802 + [CenteredDataForPCA].impute_6 * 0.161173094002 + [CenteredDataForPCA].impute_7 * 0.25060214553 + [CenteredDataForPCA].impute_8 * -0.0514339814173 + [CenteredDataForPCA].impute_9 * 0.0963269931396 + [CenteredDataForPCA].impute_10 * -0.119109841201 + [CenteredDataForPCA].impute_11 * 0.107129014675 + [CenteredDataForPCA].impute_12 * -0.00559348031385 + [CenteredDataForPCA].impute_13 * -0.285720890875 + [CenteredDataForPCA].impute_14 * -0.237117789963 + [CenteredDataForPCA].impute_15 * -0.174040338584 + [CenteredDataForPCA].impute_16 * 0.719989526959 + [CenteredDataForPCA].impute_17 * -0.29408592076 + [CenteredDataForPCA].impute_18 * -0.155212616586 + [CenteredDataForPCA].impute_19 * 0.0361300839825 + [CenteredDataForPCA].impute_20 * -0.0457314521516 + [CenteredDataForPCA].impute_21 * 0.156800880759 AS anoova_10, [CenteredDataForPCA].impute_2 * -0.0550705435688 + [CenteredDataForPCA].impute_3 * -0.0316142350599 + [CenteredDataForPCA].impute_4 * -0.00810506710898 + [CenteredDataForPCA].impute_5 * -0.0673666409362 + [CenteredDataForPCA].impute_6 * -0.0642518856465 + [CenteredDataForPCA].impute_7 * -0.261367161115 + [CenteredDataForPCA].impute_8 * -0.196980236625 + [CenteredDataForPCA].impute_9 * 0.315129184165 + [CenteredDataForPCA].impute_10 * -0.388772459799 + [CenteredDataForPCA].impute_11 * -0.253945217909 + [CenteredDataForPCA].impute_12 * -0.0333325836027 + [CenteredDataForPCA].impute_13 * -0.0231147385079 + [CenteredDataForPCA].impute_14 * 0.419821080229 + [CenteredDataForPCA].impute_15 * -0.190958517306 + [CenteredDataForPCA].impute_16 * 0.150103042769 + [CenteredDataForPCA].impute_17 * 0.321939311258 + [CenteredDataForPCA].impute_18 * -0.146880340186 + [CenteredDataForPCA].impute_19 * 0.437733603411 + [CenteredDataForPCA].impute_20 * 0.0113245384844 + [CenteredDataForPCA].impute_21 * 0.106461392327 AS anoova_11, [CenteredDataForPCA].impute_2 * 0.018501869459 + [CenteredDataForPCA].impute_3 * -0.00617472579986 + [CenteredDataForPCA].impute_4 * -0.0784910013153 + [CenteredDataForPCA].impute_5 * 0.0910204584418 + [CenteredDataForPCA].impute_6 * -0.122198469142 + [CenteredDataForPCA].impute_7 * 0.401015457524 + [CenteredDataForPCA].impute_8 * -0.210771688348 + [CenteredDataForPCA].impute_9 * 0.538556859174 + [CenteredDataForPCA].impute_10 * 0.0374547464925 + [CenteredDataForPCA].impute_11 * -0.375868884811 + [CenteredDataForPCA].impute_12 * -0.0881136062477 + [CenteredDataForPCA].impute_13 * 0.0522124355004 + [CenteredDataForPCA].impute_14 * 0.159211700308 + [CenteredDataForPCA].impute_15 * 0.270129511637 + [CenteredDataForPCA].impute_16 * -0.0101056787758 + [CenteredDataForPCA].impute_17 * -0.170553854843 + [CenteredDataForPCA].impute_18 * -0.140985374162 + [CenteredDataForPCA].impute_19 * -0.324275555726 + [CenteredDataForPCA].impute_20 * -0.0341377435484 + [CenteredDataForPCA].impute_21 * -0.260928253717 AS anoova_12, [CenteredDataForPCA].impute_2 * -0.438575152713 + [CenteredDataForPCA].impute_3 * -0.00972664964016 + [CenteredDataForPCA].impute_4 * -0.155053168021 + [CenteredDataForPCA].impute_5 * 0.0549480605423 + [CenteredDataForPCA].impute_6 * 0.248700380383 + [CenteredDataForPCA].impute_7 * 0.345298925011 + [CenteredDataForPCA].impute_8 * -0.435015195889 + [CenteredDataForPCA].impute_9 * -0.0441470031476 + [CenteredDataForPCA].impute_10 * 0.159690953337 + [CenteredDataForPCA].impute_11 * 0.381816406556 + [CenteredDataForPCA].impute_12 * -0.117525513858 + [CenteredDataForPCA].impute_13 * -0.100591639289 + [CenteredDataForPCA].impute_14 * 0.266232138914 + [CenteredDataForPCA].impute_15 * -0.0685498760795 + [CenteredDataForPCA].impute_16 * -0.190363885882 + [CenteredDataForPCA].impute_17 * 0.256487842418 + [CenteredDataForPCA].impute_18 * 0.0636651596426 + [CenteredDataForPCA].impute_19 * -0.0476410654448 + [CenteredDataForPCA].impute_20 * 0.0873286329538 + [CenteredDataForPCA].impute_21 * 0.146485089431 AS anoova_13, [CenteredDataForPCA].impute_2 * 0.0611423700682 + [CenteredDataForPCA].impute_3 * 0.105337380683 + [CenteredDataForPCA].impute_4 * 0.150496343776 + [CenteredDataForPCA].impute_5 * 0.00374384079212 + [CenteredDataForPCA].impute_6 * 0.686999560594 + [CenteredDataForPCA].impute_7 * -0.144839717455 + [CenteredDataForPCA].impute_8 * 0.089884483137 + [CenteredDataForPCA].impute_9 * 0.125765795886 + [CenteredDataForPCA].impute_10 * -0.135157160159 + [CenteredDataForPCA].impute_11 * 0.066701353388 + [CenteredDataForPCA].impute_12 * 0.0395731546243 + [CenteredDataForPCA].impute_13 * -0.136989450391 + [CenteredDataForPCA].impute_14 * 0.166857419106 + [CenteredDataForPCA].impute_15 * -0.196172437224 + [CenteredDataForPCA].impute_16 * -0.196813382878 + [CenteredDataForPCA].impute_17 * -0.222419784095 + [CenteredDataForPCA].impute_18 * -0.00865650060342 + [CenteredDataForPCA].impute_19 * 0.00165444704695 + [CenteredDataForPCA].impute_20 * -0.0358864911393 + [CenteredDataForPCA].impute_21 * -0.496703139469 AS anoova_14, [CenteredDataForPCA].impute_2 * -0.62999733664 + [CenteredDataForPCA].impute_3 * 0.0877409934982 + [CenteredDataForPCA].impute_4 * 0.133585275383 + [CenteredDataForPCA].impute_5 * -0.00860550475516 + [CenteredDataForPCA].impute_6 * -0.136410575809 + [CenteredDataForPCA].impute_7 * -0.365107405933 + [CenteredDataForPCA].impute_8 * 0.123739050712 + [CenteredDataForPCA].impute_9 * 0.133949687984 + [CenteredDataForPCA].impute_10 * 0.40612549845 + [CenteredDataForPCA].impute_11 * -0.0459149334181 + [CenteredDataForPCA].impute_12 * 0.0434567384371 + [CenteredDataForPCA].impute_13 * 0.331732639033 + [CenteredDataForPCA].impute_14 * 0.144862227507 + [CenteredDataForPCA].impute_15 * -0.137630328791 + [CenteredDataForPCA].impute_16 * 0.119123658136 + [CenteredDataForPCA].impute_17 * -0.217309010633 + [CenteredDataForPCA].impute_18 * 0.0117759531148 + [CenteredDataForPCA].impute_19 * -0.0480642372737 + [CenteredDataForPCA].impute_20 * -0.0245017367468 + [CenteredDataForPCA].impute_21 * -0.0946019119499 AS anoova_15, [CenteredDataForPCA].impute_2 * 0.0839079265578 + [CenteredDataForPCA].impute_3 * -0.0170954570464 + [CenteredDataForPCA].impute_4 * -0.0458876925114 + [CenteredDataForPCA].impute_5 * -0.0835189761318 + [CenteredDataForPCA].impute_6 * -0.115661324559 + [CenteredDataForPCA].impute_7 * -0.152921615215 + [CenteredDataForPCA].impute_8 * 0.251785202561 + [CenteredDataForPCA].impute_9 * 0.405709454366 + [CenteredDataForPCA].impute_10 * -0.0620365014798 + [CenteredDataForPCA].impute_11 * 0.39366468103 + [CenteredDataForPCA].impute_12 * -0.0282090692119 + [CenteredDataForPCA].impute_13 * -0.059932608288 + [CenteredDataForPCA].impute_14 * -0.0754457838259 + [CenteredDataForPCA].impute_15 * -0.170208874545 + [CenteredDataForPCA].impute_16 * 0.185618628184 + [CenteredDataForPCA].impute_17 * 0.471592416148 + [CenteredDataForPCA].impute_18 * 0.0881838753346 + [CenteredDataForPCA].impute_19 * -0.473848812819 + [CenteredDataForPCA].impute_20 * 0.104589477262 + [CenteredDataForPCA].impute_21 * -0.144411406721 AS anoova_16, [CenteredDataForPCA].impute_2 * -0.208551545249 + [CenteredDataForPCA].impute_3 * -0.0487610130166 + [CenteredDataForPCA].impute_4 * -0.0846346989426 + [CenteredDataForPCA].impute_5 * -0.0840862119276 + [CenteredDataForPCA].impute_6 * -0.107185759697 + [CenteredDataForPCA].impute_7 * -0.399383794684 + [CenteredDataForPCA].impute_8 * -0.303986844884 + [CenteredDataForPCA].impute_9 * 0.0872797468764 + [CenteredDataForPCA].impute_10 * -0.336393575498 + [CenteredDataForPCA].impute_11 * -0.0785834830603 + [CenteredDataForPCA].impute_12 * -0.00574951857159 + [CenteredDataForPCA].impute_13 * -0.355458076421 + [CenteredDataForPCA].impute_14 * -0.21012695857 + [CenteredDataForPCA].impute_15 * 0.00617885053662 + [CenteredDataForPCA].impute_16 * -0.272892493822 + [CenteredDataForPCA].impute_17 * -0.321921761457 + [CenteredDataForPCA].impute_18 * 0.190112585416 + [CenteredDataForPCA].impute_19 * -0.319409079949 + [CenteredDataForPCA].impute_20 * 0.12407247026 + [CenteredDataForPCA].impute_21 * 0.217483903324 AS anoova_17, [CenteredDataForPCA].impute_2 * 0.173116540441 + [CenteredDataForPCA].impute_3 * 0.00371287181809 + [CenteredDataForPCA].impute_4 * -0.0821490218718 + [CenteredDataForPCA].impute_5 * 0.101953554298 + [CenteredDataForPCA].impute_6 * 0.141359664111 + [CenteredDataForPCA].impute_7 * -0.153273473155 + [CenteredDataForPCA].impute_8 * 0.219751497386 + [CenteredDataForPCA].impute_9 * 0.450228406187 + [CenteredDataForPCA].impute_10 * 0.341438736075 + [CenteredDataForPCA].impute_11 * 0.212149953714 + [CenteredDataForPCA].impute_12 * -0.0202714689546 + [CenteredDataForPCA].impute_13 * -0.251814148613 + [CenteredDataForPCA].impute_14 * 0.13631347457 + [CenteredDataForPCA].impute_15 * 0.376350931475 + [CenteredDataForPCA].impute_16 * -0.0382459159739 + [CenteredDataForPCA].impute_17 * -0.167416127918 + [CenteredDataForPCA].impute_18 * 0.146468671509 + [CenteredDataForPCA].impute_19 * 0.277769494469 + [CenteredDataForPCA].impute_20 * 0.0115226019047 + [CenteredDataForPCA].impute_21 * 0.380182714082 AS anoova_18, [CenteredDataForPCA].impute_2 * -0.152496547097 + [CenteredDataForPCA].impute_3 * 0.0499268928898 + [CenteredDataForPCA].impute_4 * -0.021551113373 + [CenteredDataForPCA].impute_5 * -0.0440511220384 + [CenteredDataForPCA].impute_6 * -0.133903646098 + [CenteredDataForPCA].impute_7 * 0.280400652302 + [CenteredDataForPCA].impute_8 * 0.44101366616 + [CenteredDataForPCA].impute_9 * 0.0700762814679 + [CenteredDataForPCA].impute_10 * 0.164442971287 + [CenteredDataForPCA].impute_11 * -0.319256733202 + [CenteredDataForPCA].impute_12 * -0.113039472258 + [CenteredDataForPCA].impute_13 * -0.424114065202 + [CenteredDataForPCA].impute_14 * -0.0651852752715 + [CenteredDataForPCA].impute_15 * -0.460484934086 + [CenteredDataForPCA].impute_16 * -0.323981654364 + [CenteredDataForPCA].impute_17 * 0.0618206951508 + [CenteredDataForPCA].impute_18 * -0.0844847278254 + [CenteredDataForPCA].impute_19 * 0.0771424608916 + [CenteredDataForPCA].impute_20 * 0.0874431880273 + [CenteredDataForPCA].impute_21 * 0.0919529518682 AS anoova_19, [CenteredDataForPCA].impute_2 * -1.22787978489e-16 + [CenteredDataForPCA].impute_3 * -0.309910914436 + [CenteredDataForPCA].impute_4 * 0.282190988053 + [CenteredDataForPCA].impute_5 * 0.480629188719 + [CenteredDataForPCA].impute_6 * -1.31838984174e-16 + [CenteredDataForPCA].impute_7 * -9.36750677027e-17 + [CenteredDataForPCA].impute_8 * 2.42861286637e-16 + [CenteredDataForPCA].impute_9 * 2.18575157973e-16 + [CenteredDataForPCA].impute_10 * -2.77555756156e-17 + [CenteredDataForPCA].impute_11 * -6.93889390391e-18 + [CenteredDataForPCA].impute_12 * 0.291485936524 + [CenteredDataForPCA].impute_13 * -4.16333634234e-17 + [CenteredDataForPCA].impute_14 * 6.24500451352e-17 + [CenteredDataForPCA].impute_15 * -9.71445146547e-17 + [CenteredDataForPCA].impute_16 * -1.78676518026e-16 + [CenteredDataForPCA].impute_17 * 1.38777878078e-16 + [CenteredDataForPCA].impute_18 * -0.182312150596 + [CenteredDataForPCA].impute_19 * -1.04083408559e-16 + [CenteredDataForPCA].impute_20 * 0.689287518297 + [CenteredDataForPCA].impute_21 * 5.46437894933e-17 AS anoova_20, [CenteredDataForPCA].impute_2 * -1.82399155327e-16 + [CenteredDataForPCA].impute_3 * -0.534635465291 + [CenteredDataForPCA].impute_4 * 0.509250646236 + [CenteredDataForPCA].impute_5 * 0.0425989344817 + [CenteredDataForPCA].impute_6 * -1.38777878078e-16 + [CenteredDataForPCA].impute_7 * 4.02455846427e-16 + [CenteredDataForPCA].impute_8 * 2.49800180541e-16 + [CenteredDataForPCA].impute_9 * -1.31838984174e-16 + [CenteredDataForPCA].impute_10 * 5.41233724505e-16 + [CenteredDataForPCA].impute_11 * -2.42861286637e-16 + [CenteredDataForPCA].impute_12 * -0.622781581815 + [CenteredDataForPCA].impute_13 * -6.93889390391e-18 + [CenteredDataForPCA].impute_14 * -1.38777878078e-17 + [CenteredDataForPCA].impute_15 * -1.11022302463e-16 + [CenteredDataForPCA].impute_16 * -6.93889390391e-18 + [CenteredDataForPCA].impute_17 * -2.08166817117e-17 + [CenteredDataForPCA].impute_18 * 0.196175076852 + [CenteredDataForPCA].impute_19 * -2.15105711021e-16 + [CenteredDataForPCA].impute_20 * -0.163317083972 + [CenteredDataForPCA].impute_21 * 1.04083408559e-16 AS anoova_21 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.731009) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.731009 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0374194 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0360248 AS [Score]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Score] AS [Score] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[XGB_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0_0, [DT_Output].[Score] AS [Score_0_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.010983) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.010983 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0336549 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0366038 AS [Score]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Score] AS [Score] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[XGB_Tree_0_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_0_1, [DT_Output_1].[Score] AS [Score_0_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.731009) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.731009 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0357544 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.032623 AS [Score]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Score] AS [Score] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[XGB_Tree_0_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_0_2, [DT_Output_2].[Score] AS [Score_0_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.342855) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.560579) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_14' AS feature, -0.342855 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0439759 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.560579 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0175583 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0550427 AS [Score]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Score] AS [Score] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[XGB_Tree_0_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_0_3, [DT_Output_3].[Score] AS [Score_0_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.731009) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.731009 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0341482 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0295733 AS [Score]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Score] AS [Score] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[XGB_Tree_0_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_0_4, [DT_Output_4].[Score] AS [Score_0_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.342855) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.560579) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_14' AS feature, -0.342855 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0410352 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.560579 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0160672 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538699 AS [Score]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Score] AS [Score] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[XGB_Tree_0_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_0_5, [DT_Output_5].[Score] AS [Score_0_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_7 < 0.646284) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.010983) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.646284 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.010983 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0446937 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0566315 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0272716 AS [Score]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Score] AS [Score] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[XGB_Tree_0_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_0_6, [DT_Output_6].[Score] AS [Score_0_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.731009) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 < -0.309484) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.731009 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.032661 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, -0.309484 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0677356 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0173089 AS [Score]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Score] AS [Score] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[XGB_Tree_0_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_0_7, [DT_Output_7].[Score] AS [Score_0_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_6 < -0.709842) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.803197) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_6' AS feature, -0.709842 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.044196 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, -0.803197 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0240475 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0491881 AS [Score]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Score] AS [Score] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[XGB_Tree_0_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_0_8, [DT_Output_8].[Score] AS [Score_0_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.342855) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.560579) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_14' AS feature, -0.342855 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0362569 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.560579 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0119396 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514452 AS [Score]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Score] AS [Score] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[XGB_Tree_0_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_0_9, [DT_Output_9].[Score] AS [Score_0_9] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.522268) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.522268 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0409938 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0374194 AS [Score]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Score] AS [Score] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[XGB_Tree_1_0] AS 
(SELECT [DT_Output_10].[KEY] AS join_key_1_0, [DT_Output_10].[Score] AS [Score_1_0] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.522268) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.522268 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0373591 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0358904 AS [Score]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Score] AS [Score] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[XGB_Tree_1_1] AS 
(SELECT [DT_Output_11].[KEY] AS join_key_1_1, [DT_Output_11].[Score] AS [Score_1_1] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.522268) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.522268 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0349416 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0348003 AS [Score]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Score] AS [Score] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[XGB_Tree_1_2] AS 
(SELECT [DT_Output_12].[KEY] AS join_key_1_2, [DT_Output_12].[Score] AS [Score_1_2] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0551734 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0221198 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0603493 AS [Score]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Score] AS [Score] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[XGB_Tree_1_3] AS 
(SELECT [DT_Output_13].[KEY] AS join_key_1_3, [DT_Output_13].[Score] AS [Score_1_3] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0514631 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0208242 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0594026 AS [Score]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Score] AS [Score] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[XGB_Tree_1_4] AS 
(SELECT [DT_Output_14].[KEY] AS join_key_1_4, [DT_Output_14].[Score] AS [Score_1_4] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.414763) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 < 0.294918) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.414763 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 0.294918 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0423376 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00541185 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0624323 AS [Score]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Score] AS [Score] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[XGB_Tree_1_5] AS 
(SELECT [DT_Output_15].[KEY] AS join_key_1_5, [DT_Output_15].[Score] AS [Score_1_5] 
FROM [DT_Output_15]), 
[DT_node_lookup_16] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0482395 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0175584 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0580434 AS [Score]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].depth AS depth, [DT_node_data_16].parent_id AS parent_id, [DT_node_data_16].[Score] AS [Score] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[XGB_Tree_1_6] AS 
(SELECT [DT_Output_16].[KEY] AS join_key_1_6, [DT_Output_16].[Score] AS [Score_1_6] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.045217 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0164875 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.057163 AS [Score]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].depth AS depth, [DT_node_data_17].parent_id AS parent_id, [DT_node_data_17].[Score] AS [Score] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[XGB_Tree_1_7] AS 
(SELECT [DT_Output_17].[KEY] AS join_key_1_7, [DT_Output_17].[Score] AS [Score_1_7] 
FROM [DT_Output_17]), 
[DT_node_lookup_18] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.790566) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.935527) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_18] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_4' AS feature, 0.790566 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.935527 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0419172 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0154714 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0562843 AS [Score]) AS [Values]), 
[DT_Output_18] AS 
(SELECT [DT_node_lookup_18].[KEY] AS [KEY], [DT_node_lookup_18].node_id_2 AS node_id_2, [DT_node_data_18].node_id AS node_id, [DT_node_data_18].feature AS feature, [DT_node_data_18].threshold AS threshold, [DT_node_data_18].depth AS depth, [DT_node_data_18].parent_id AS parent_id, [DT_node_data_18].[Score] AS [Score] 
FROM [DT_node_lookup_18] LEFT OUTER JOIN [DT_node_data_18] ON [DT_node_lookup_18].node_id_2 = [DT_node_data_18].node_id), 
[XGB_Tree_1_8] AS 
(SELECT [DT_Output_18].[KEY] AS join_key_1_8, [DT_Output_18].[Score] AS [Score_1_8] 
FROM [DT_Output_18]), 
[DT_node_lookup_19] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.414763) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 < 0.309933) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_19] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.414763 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 0.309933 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0391993 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00848342 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0586052 AS [Score]) AS [Values]), 
[DT_Output_19] AS 
(SELECT [DT_node_lookup_19].[KEY] AS [KEY], [DT_node_lookup_19].node_id_2 AS node_id_2, [DT_node_data_19].node_id AS node_id, [DT_node_data_19].feature AS feature, [DT_node_data_19].threshold AS threshold, [DT_node_data_19].depth AS depth, [DT_node_data_19].parent_id AS parent_id, [DT_node_data_19].[Score] AS [Score] 
FROM [DT_node_lookup_19] LEFT OUTER JOIN [DT_node_data_19] ON [DT_node_lookup_19].node_id_2 = [DT_node_data_19].node_id), 
[XGB_Tree_1_9] AS 
(SELECT [DT_Output_19].[KEY] AS join_key_1_9, [DT_Output_19].[Score] AS [Score_1_9] 
FROM [DT_Output_19]), 
[DT_node_lookup_20] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 1.38137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.49697) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_20] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.38137 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.49697 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0695652 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0610526 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00437956 AS [Score]) AS [Values]), 
[DT_Output_20] AS 
(SELECT [DT_node_lookup_20].[KEY] AS [KEY], [DT_node_lookup_20].node_id_2 AS node_id_2, [DT_node_data_20].node_id AS node_id, [DT_node_data_20].feature AS feature, [DT_node_data_20].threshold AS threshold, [DT_node_data_20].depth AS depth, [DT_node_data_20].parent_id AS parent_id, [DT_node_data_20].[Score] AS [Score] 
FROM [DT_node_lookup_20] LEFT OUTER JOIN [DT_node_data_20] ON [DT_node_lookup_20].node_id_2 = [DT_node_data_20].node_id), 
[XGB_Tree_2_0] AS 
(SELECT [DT_Output_20].[KEY] AS join_key_2_0, [DT_Output_20].[Score] AS [Score_2_0] 
FROM [DT_Output_20]), 
[DT_node_lookup_21] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 1.38137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.49697) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_21] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.38137 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.49697 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0637017 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0600547 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00375887 AS [Score]) AS [Values]), 
[DT_Output_21] AS 
(SELECT [DT_node_lookup_21].[KEY] AS [KEY], [DT_node_lookup_21].node_id_2 AS node_id_2, [DT_node_data_21].node_id AS node_id, [DT_node_data_21].feature AS feature, [DT_node_data_21].threshold AS threshold, [DT_node_data_21].depth AS depth, [DT_node_data_21].parent_id AS parent_id, [DT_node_data_21].[Score] AS [Score] 
FROM [DT_node_lookup_21] LEFT OUTER JOIN [DT_node_data_21] ON [DT_node_lookup_21].node_id_2 = [DT_node_data_21].node_id), 
[XGB_Tree_2_1] AS 
(SELECT [DT_Output_21].[KEY] AS join_key_2_1, [DT_Output_21].[Score] AS [Score_2_1] 
FROM [DT_Output_21]), 
[DT_node_lookup_22] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 1.38137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.49697) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_22] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.38137 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_3' AS feature, -0.49697 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0576607 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0588568 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00330299 AS [Score]) AS [Values]), 
[DT_Output_22] AS 
(SELECT [DT_node_lookup_22].[KEY] AS [KEY], [DT_node_lookup_22].node_id_2 AS node_id_2, [DT_node_data_22].node_id AS node_id, [DT_node_data_22].feature AS feature, [DT_node_data_22].threshold AS threshold, [DT_node_data_22].depth AS depth, [DT_node_data_22].parent_id AS parent_id, [DT_node_data_22].[Score] AS [Score] 
FROM [DT_node_lookup_22] LEFT OUTER JOIN [DT_node_data_22] ON [DT_node_lookup_22].node_id_2 = [DT_node_data_22].node_id), 
[XGB_Tree_2_2] AS 
(SELECT [DT_Output_22].[KEY] AS join_key_2_2, [DT_Output_22].[Score] AS [Score_2_2] 
FROM [DT_Output_22]), 
[DT_node_lookup_23] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 1.38137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 < -0.135974) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_23] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 1.38137 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_8' AS feature, -0.135974 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0533223 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00414582 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0432717 AS [Score]) AS [Values]), 
[DT_Output_23] AS 
(SELECT [DT_node_lookup_23].[KEY] AS [KEY], [DT_node_lookup_23].node_id_2 AS node_id_2, [DT_node_data_23].node_id AS node_id, [DT_node_data_23].feature AS feature, [DT_node_data_23].threshold AS threshold, [DT_node_data_23].depth AS depth, [DT_node_data_23].parent_id AS parent_id, [DT_node_data_23].[Score] AS [Score] 
FROM [DT_node_lookup_23] LEFT OUTER JOIN [DT_node_data_23] ON [DT_node_lookup_23].node_id_2 = [DT_node_data_23].node_id), 
[XGB_Tree_2_3] AS 
(SELECT [DT_Output_23].[KEY] AS join_key_2_3, [DT_Output_23].[Score] AS [Score_2_3] 
FROM [DT_Output_23]), 
[DT_node_lookup_24] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 0.433218) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.481945) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_24] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 0.433218 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, -0.481945 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0422033 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514515 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.19886e-06 AS [Score]) AS [Values]), 
[DT_Output_24] AS 
(SELECT [DT_node_lookup_24].[KEY] AS [KEY], [DT_node_lookup_24].node_id_2 AS node_id_2, [DT_node_data_24].node_id AS node_id, [DT_node_data_24].feature AS feature, [DT_node_data_24].threshold AS threshold, [DT_node_data_24].depth AS depth, [DT_node_data_24].parent_id AS parent_id, [DT_node_data_24].[Score] AS [Score] 
FROM [DT_node_lookup_24] LEFT OUTER JOIN [DT_node_data_24] ON [DT_node_lookup_24].node_id_2 = [DT_node_data_24].node_id), 
[XGB_Tree_2_4] AS 
(SELECT [DT_Output_24].[KEY] AS join_key_2_4, [DT_Output_24].[Score] AS [Score_2_4] 
FROM [DT_Output_24]), 
[DT_node_lookup_25] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 1.09984) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0826185) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_25] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.09984 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 0.0826185 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0533532 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053772 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0227548 AS [Score]) AS [Values]), 
[DT_Output_25] AS 
(SELECT [DT_node_lookup_25].[KEY] AS [KEY], [DT_node_lookup_25].node_id_2 AS node_id_2, [DT_node_data_25].node_id AS node_id, [DT_node_data_25].feature AS feature, [DT_node_data_25].threshold AS threshold, [DT_node_data_25].depth AS depth, [DT_node_data_25].parent_id AS parent_id, [DT_node_data_25].[Score] AS [Score] 
FROM [DT_node_lookup_25] LEFT OUTER JOIN [DT_node_data_25] ON [DT_node_lookup_25].node_id_2 = [DT_node_data_25].node_id), 
[XGB_Tree_2_5] AS 
(SELECT [DT_Output_25].[KEY] AS join_key_2_5, [DT_Output_25].[Score] AS [Score_2_5] 
FROM [DT_Output_25]), 
[DT_node_lookup_26] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 1.15737) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0826185) THEN 3 ELSE 4 END ELSE 2 END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_26] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, 1.15737 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, 'anoova_2' AS feature, 0.0826185 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0525645 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527951 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0207847 AS [Score]) AS [Values]), 
[DT_Output_26] AS 
(SELECT [DT_node_lookup_26].[KEY] AS [KEY], [DT_node_lookup_26].node_id_2 AS node_id_2, [DT_node_data_26].node_id AS node_id, [DT_node_data_26].feature AS feature, [DT_node_data_26].threshold AS threshold, [DT_node_data_26].depth AS depth, [DT_node_data_26].parent_id AS parent_id, [DT_node_data_26].[Score] AS [Score] 
FROM [DT_node_lookup_26] LEFT OUTER JOIN [DT_node_data_26] ON [DT_node_lookup_26].node_id_2 = [DT_node_data_26].node_id), 
[XGB_Tree_2_6] AS 
(SELECT [DT_Output_26].[KEY] AS join_key_2_6, [DT_Output_26].[Score] AS [Score_2_6] 
FROM [DT_Output_26]), 
[DT_node_lookup_27] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.626666) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.322693) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_27] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.626666 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0454357 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_14' AS feature, -0.322693 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0174825 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.050464 AS [Score]) AS [Values]), 
[DT_Output_27] AS 
(SELECT [DT_node_lookup_27].[KEY] AS [KEY], [DT_node_lookup_27].node_id_2 AS node_id_2, [DT_node_data_27].node_id AS node_id, [DT_node_data_27].feature AS feature, [DT_node_data_27].threshold AS threshold, [DT_node_data_27].depth AS depth, [DT_node_data_27].parent_id AS parent_id, [DT_node_data_27].[Score] AS [Score] 
FROM [DT_node_lookup_27] LEFT OUTER JOIN [DT_node_data_27] ON [DT_node_lookup_27].node_id_2 = [DT_node_data_27].node_id), 
[XGB_Tree_2_7] AS 
(SELECT [DT_Output_27].[KEY] AS join_key_2_7, [DT_Output_27].[Score] AS [Score_2_7] 
FROM [DT_Output_27]), 
[DT_node_lookup_28] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.626666) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_14 < -0.322693) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_28] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.626666 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.044288 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_14' AS feature, -0.322693 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0167477 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0471371 AS [Score]) AS [Values]), 
[DT_Output_28] AS 
(SELECT [DT_node_lookup_28].[KEY] AS [KEY], [DT_node_lookup_28].node_id_2 AS node_id_2, [DT_node_data_28].node_id AS node_id, [DT_node_data_28].feature AS feature, [DT_node_data_28].threshold AS threshold, [DT_node_data_28].depth AS depth, [DT_node_data_28].parent_id AS parent_id, [DT_node_data_28].[Score] AS [Score] 
FROM [DT_node_lookup_28] LEFT OUTER JOIN [DT_node_data_28] ON [DT_node_lookup_28].node_id_2 = [DT_node_data_28].node_id), 
[XGB_Tree_2_8] AS 
(SELECT [DT_Output_28].[KEY] AS join_key_2_8, [DT_Output_28].[Score] AS [Score_2_8] 
FROM [DT_Output_28]), 
[DT_node_lookup_29] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.626666) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.343684) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_29] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_3' AS feature, -0.626666 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0433288 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 0.343684 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00784327 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0541645 AS [Score]) AS [Values]), 
[DT_Output_29] AS 
(SELECT [DT_node_lookup_29].[KEY] AS [KEY], [DT_node_lookup_29].node_id_2 AS node_id_2, [DT_node_data_29].node_id AS node_id, [DT_node_data_29].feature AS feature, [DT_node_data_29].threshold AS threshold, [DT_node_data_29].depth AS depth, [DT_node_data_29].parent_id AS parent_id, [DT_node_data_29].[Score] AS [Score] 
FROM [DT_node_lookup_29] LEFT OUTER JOIN [DT_node_data_29] ON [DT_node_lookup_29].node_id_2 = [DT_node_data_29].node_id), 
[XGB_Tree_2_9] AS 
(SELECT [DT_Output_29].[KEY] AS join_key_2_9, [DT_Output_29].[Score] AS [Score_2_9] 
FROM [DT_Output_29]), 
[DT_node_lookup_30] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_30] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0695652 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0619469 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00168067 AS [Score]) AS [Values]), 
[DT_Output_30] AS 
(SELECT [DT_node_lookup_30].[KEY] AS [KEY], [DT_node_lookup_30].node_id_2 AS node_id_2, [DT_node_data_30].node_id AS node_id, [DT_node_data_30].feature AS feature, [DT_node_data_30].threshold AS threshold, [DT_node_data_30].depth AS depth, [DT_node_data_30].parent_id AS parent_id, [DT_node_data_30].[Score] AS [Score] 
FROM [DT_node_lookup_30] LEFT OUTER JOIN [DT_node_data_30] ON [DT_node_lookup_30].node_id_2 = [DT_node_data_30].node_id), 
[XGB_Tree_3_0] AS 
(SELECT [DT_Output_30].[KEY] AS join_key_3_0, [DT_Output_30].[Score] AS [Score_3_0] 
FROM [DT_Output_30]), 
[DT_node_lookup_31] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_31] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0638938 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0609162 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00112374 AS [Score]) AS [Values]), 
[DT_Output_31] AS 
(SELECT [DT_node_lookup_31].[KEY] AS [KEY], [DT_node_lookup_31].node_id_2 AS node_id_2, [DT_node_data_31].node_id AS node_id, [DT_node_data_31].feature AS feature, [DT_node_data_31].threshold AS threshold, [DT_node_data_31].depth AS depth, [DT_node_data_31].parent_id AS parent_id, [DT_node_data_31].[Score] AS [Score] 
FROM [DT_node_lookup_31] LEFT OUTER JOIN [DT_node_data_31] ON [DT_node_lookup_31].node_id_2 = [DT_node_data_31].node_id), 
[XGB_Tree_3_1] AS 
(SELECT [DT_Output_31].[KEY] AS join_key_3_1, [DT_Output_31].[Score] AS [Score_3_1] 
FROM [DT_Output_31]), 
[DT_node_lookup_32] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_32] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0596888 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0598054 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00134014 AS [Score]) AS [Values]), 
[DT_Output_32] AS 
(SELECT [DT_node_lookup_32].[KEY] AS [KEY], [DT_node_lookup_32].node_id_2 AS node_id_2, [DT_node_data_32].node_id AS node_id, [DT_node_data_32].feature AS feature, [DT_node_data_32].threshold AS threshold, [DT_node_data_32].depth AS depth, [DT_node_data_32].parent_id AS parent_id, [DT_node_data_32].[Score] AS [Score] 
FROM [DT_node_lookup_32] LEFT OUTER JOIN [DT_node_data_32] ON [DT_node_lookup_32].node_id_2 = [DT_node_data_32].node_id), 
[XGB_Tree_3_2] AS 
(SELECT [DT_Output_32].[KEY] AS join_key_3_2, [DT_Output_32].[Score] AS [Score_3_2] 
FROM [DT_Output_32]), 
[DT_node_lookup_33] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_33] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0552501 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0588974 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00081487 AS [Score]) AS [Values]), 
[DT_Output_33] AS 
(SELECT [DT_node_lookup_33].[KEY] AS [KEY], [DT_node_lookup_33].node_id_2 AS node_id_2, [DT_node_data_33].node_id AS node_id, [DT_node_data_33].feature AS feature, [DT_node_data_33].threshold AS threshold, [DT_node_data_33].depth AS depth, [DT_node_data_33].parent_id AS parent_id, [DT_node_data_33].[Score] AS [Score] 
FROM [DT_node_lookup_33] LEFT OUTER JOIN [DT_node_data_33] ON [DT_node_lookup_33].node_id_2 = [DT_node_data_33].node_id), 
[XGB_Tree_3_3] AS 
(SELECT [DT_Output_33].[KEY] AS join_key_3_3, [DT_Output_33].[Score] AS [Score_3_3] 
FROM [DT_Output_33]), 
[DT_node_lookup_34] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_34] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0518835 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0579263 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000998366 AS [Score]) AS [Values]), 
[DT_Output_34] AS 
(SELECT [DT_node_lookup_34].[KEY] AS [KEY], [DT_node_lookup_34].node_id_2 AS node_id_2, [DT_node_data_34].node_id AS node_id, [DT_node_data_34].feature AS feature, [DT_node_data_34].threshold AS threshold, [DT_node_data_34].depth AS depth, [DT_node_data_34].parent_id AS parent_id, [DT_node_data_34].[Score] AS [Score] 
FROM [DT_node_lookup_34] LEFT OUTER JOIN [DT_node_data_34] ON [DT_node_lookup_34].node_id_2 = [DT_node_data_34].node_id), 
[XGB_Tree_3_4] AS 
(SELECT [DT_Output_34].[KEY] AS join_key_3_4, [DT_Output_34].[Score] AS [Score_3_4] 
FROM [DT_Output_34]), 
[DT_node_lookup_35] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 < 0.129094) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_35] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0484065 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, 0.129094 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000955228 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0587496 AS [Score]) AS [Values]), 
[DT_Output_35] AS 
(SELECT [DT_node_lookup_35].[KEY] AS [KEY], [DT_node_lookup_35].node_id_2 AS node_id_2, [DT_node_data_35].node_id AS node_id, [DT_node_data_35].feature AS feature, [DT_node_data_35].threshold AS threshold, [DT_node_data_35].depth AS depth, [DT_node_data_35].parent_id AS parent_id, [DT_node_data_35].[Score] AS [Score] 
FROM [DT_node_lookup_35] LEFT OUTER JOIN [DT_node_data_35] ON [DT_node_lookup_35].node_id_2 = [DT_node_data_35].node_id), 
[XGB_Tree_3_5] AS 
(SELECT [DT_Output_35].[KEY] AS join_key_3_5, [DT_Output_35].[Score] AS [Score_3_5] 
FROM [DT_Output_35]), 
[DT_node_lookup_36] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_36] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0453663 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0567576 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000937373 AS [Score]) AS [Values]), 
[DT_Output_36] AS 
(SELECT [DT_node_lookup_36].[KEY] AS [KEY], [DT_node_lookup_36].node_id_2 AS node_id_2, [DT_node_data_36].node_id AS node_id, [DT_node_data_36].feature AS feature, [DT_node_data_36].threshold AS threshold, [DT_node_data_36].depth AS depth, [DT_node_data_36].parent_id AS parent_id, [DT_node_data_36].[Score] AS [Score] 
FROM [DT_node_lookup_36] LEFT OUTER JOIN [DT_node_data_36] ON [DT_node_lookup_36].node_id_2 = [DT_node_data_36].node_id), 
[XGB_Tree_3_6] AS 
(SELECT [DT_Output_36].[KEY] AS join_key_3_6, [DT_Output_36].[Score] AS [Score_3_6] 
FROM [DT_Output_36]), 
[DT_node_lookup_37] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 < 0.129094) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_37] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0426875 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_11' AS feature, 0.129094 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000410144 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.057404 AS [Score]) AS [Values]), 
[DT_Output_37] AS 
(SELECT [DT_node_lookup_37].[KEY] AS [KEY], [DT_node_lookup_37].node_id_2 AS node_id_2, [DT_node_data_37].node_id AS node_id, [DT_node_data_37].feature AS feature, [DT_node_data_37].threshold AS threshold, [DT_node_data_37].depth AS depth, [DT_node_data_37].parent_id AS parent_id, [DT_node_data_37].[Score] AS [Score] 
FROM [DT_node_lookup_37] LEFT OUTER JOIN [DT_node_data_37] ON [DT_node_lookup_37].node_id_2 = [DT_node_data_37].node_id), 
[XGB_Tree_3_7] AS 
(SELECT [DT_Output_37].[KEY] AS join_key_3_7, [DT_Output_37].[Score] AS [Score_3_7] 
FROM [DT_Output_37]), 
[DT_node_lookup_38] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.255308) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_38] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0403321 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.255308 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0556469 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0025018 AS [Score]) AS [Values]), 
[DT_Output_38] AS 
(SELECT [DT_node_lookup_38].[KEY] AS [KEY], [DT_node_lookup_38].node_id_2 AS node_id_2, [DT_node_data_38].node_id AS node_id, [DT_node_data_38].feature AS feature, [DT_node_data_38].threshold AS threshold, [DT_node_data_38].depth AS depth, [DT_node_data_38].parent_id AS parent_id, [DT_node_data_38].[Score] AS [Score] 
FROM [DT_node_lookup_38] LEFT OUTER JOIN [DT_node_data_38] ON [DT_node_lookup_38].node_id_2 = [DT_node_data_38].node_id), 
[XGB_Tree_3_8] AS 
(SELECT [DT_Output_38].[KEY] AS join_key_3_8, [DT_Output_38].[Score] AS [Score_3_8] 
FROM [DT_Output_38]), 
[DT_node_lookup_39] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -1.83949) THEN 1 ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.0152971) THEN 3 ELSE 4 END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_39] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -1.83949 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0381914 AS [Score] UNION ALL SELECT 2 AS node_id, 'anoova_3' AS feature, -0.0152971 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0482108 AS [Score] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00284426 AS [Score]) AS [Values]), 
[DT_Output_39] AS 
(SELECT [DT_node_lookup_39].[KEY] AS [KEY], [DT_node_lookup_39].node_id_2 AS node_id_2, [DT_node_data_39].node_id AS node_id, [DT_node_data_39].feature AS feature, [DT_node_data_39].threshold AS threshold, [DT_node_data_39].depth AS depth, [DT_node_data_39].parent_id AS parent_id, [DT_node_data_39].[Score] AS [Score] 
FROM [DT_node_lookup_39] LEFT OUTER JOIN [DT_node_data_39] ON [DT_node_lookup_39].node_id_2 = [DT_node_data_39].node_id), 
[XGB_Tree_3_9] AS 
(SELECT [DT_Output_39].[KEY] AS join_key_3_9, [DT_Output_39].[Score] AS [Score_3_9] 
FROM [DT_Output_39]), 
[XGB_Join_CTE] AS 
(SELECT [XGB_Tree_0_0].join_key_0_0 AS join_key_0_0, [XGB_Tree_0_0].[Score_0_0] AS [Score_0_0], [XGB_Tree_0_1].join_key_0_1 AS join_key_0_1, [XGB_Tree_0_1].[Score_0_1] AS [Score_0_1], [XGB_Tree_0_2].join_key_0_2 AS join_key_0_2, [XGB_Tree_0_2].[Score_0_2] AS [Score_0_2], [XGB_Tree_0_3].join_key_0_3 AS join_key_0_3, [XGB_Tree_0_3].[Score_0_3] AS [Score_0_3], [XGB_Tree_0_4].join_key_0_4 AS join_key_0_4, [XGB_Tree_0_4].[Score_0_4] AS [Score_0_4], [XGB_Tree_0_5].join_key_0_5 AS join_key_0_5, [XGB_Tree_0_5].[Score_0_5] AS [Score_0_5], [XGB_Tree_0_6].join_key_0_6 AS join_key_0_6, [XGB_Tree_0_6].[Score_0_6] AS [Score_0_6], [XGB_Tree_0_7].join_key_0_7 AS join_key_0_7, [XGB_Tree_0_7].[Score_0_7] AS [Score_0_7], [XGB_Tree_0_8].join_key_0_8 AS join_key_0_8, [XGB_Tree_0_8].[Score_0_8] AS [Score_0_8], [XGB_Tree_0_9].join_key_0_9 AS join_key_0_9, [XGB_Tree_0_9].[Score_0_9] AS [Score_0_9], [XGB_Tree_1_0].join_key_1_0 AS join_key_1_0, [XGB_Tree_1_0].[Score_1_0] AS [Score_1_0], [XGB_Tree_1_1].join_key_1_1 AS join_key_1_1, [XGB_Tree_1_1].[Score_1_1] AS [Score_1_1], [XGB_Tree_1_2].join_key_1_2 AS join_key_1_2, [XGB_Tree_1_2].[Score_1_2] AS [Score_1_2], [XGB_Tree_1_3].join_key_1_3 AS join_key_1_3, [XGB_Tree_1_3].[Score_1_3] AS [Score_1_3], [XGB_Tree_1_4].join_key_1_4 AS join_key_1_4, [XGB_Tree_1_4].[Score_1_4] AS [Score_1_4], [XGB_Tree_1_5].join_key_1_5 AS join_key_1_5, [XGB_Tree_1_5].[Score_1_5] AS [Score_1_5], [XGB_Tree_1_6].join_key_1_6 AS join_key_1_6, [XGB_Tree_1_6].[Score_1_6] AS [Score_1_6], [XGB_Tree_1_7].join_key_1_7 AS join_key_1_7, [XGB_Tree_1_7].[Score_1_7] AS [Score_1_7], [XGB_Tree_1_8].join_key_1_8 AS join_key_1_8, [XGB_Tree_1_8].[Score_1_8] AS [Score_1_8], [XGB_Tree_1_9].join_key_1_9 AS join_key_1_9, [XGB_Tree_1_9].[Score_1_9] AS [Score_1_9], [XGB_Tree_2_0].join_key_2_0 AS join_key_2_0, [XGB_Tree_2_0].[Score_2_0] AS [Score_2_0], [XGB_Tree_2_1].join_key_2_1 AS join_key_2_1, [XGB_Tree_2_1].[Score_2_1] AS [Score_2_1], [XGB_Tree_2_2].join_key_2_2 AS join_key_2_2, [XGB_Tree_2_2].[Score_2_2] AS [Score_2_2], [XGB_Tree_2_3].join_key_2_3 AS join_key_2_3, [XGB_Tree_2_3].[Score_2_3] AS [Score_2_3], [XGB_Tree_2_4].join_key_2_4 AS join_key_2_4, [XGB_Tree_2_4].[Score_2_4] AS [Score_2_4], [XGB_Tree_2_5].join_key_2_5 AS join_key_2_5, [XGB_Tree_2_5].[Score_2_5] AS [Score_2_5], [XGB_Tree_2_6].join_key_2_6 AS join_key_2_6, [XGB_Tree_2_6].[Score_2_6] AS [Score_2_6], [XGB_Tree_2_7].join_key_2_7 AS join_key_2_7, [XGB_Tree_2_7].[Score_2_7] AS [Score_2_7], [XGB_Tree_2_8].join_key_2_8 AS join_key_2_8, [XGB_Tree_2_8].[Score_2_8] AS [Score_2_8], [XGB_Tree_2_9].join_key_2_9 AS join_key_2_9, [XGB_Tree_2_9].[Score_2_9] AS [Score_2_9], [XGB_Tree_3_0].join_key_3_0 AS join_key_3_0, [XGB_Tree_3_0].[Score_3_0] AS [Score_3_0], [XGB_Tree_3_1].join_key_3_1 AS join_key_3_1, [XGB_Tree_3_1].[Score_3_1] AS [Score_3_1], [XGB_Tree_3_2].join_key_3_2 AS join_key_3_2, [XGB_Tree_3_2].[Score_3_2] AS [Score_3_2], [XGB_Tree_3_3].join_key_3_3 AS join_key_3_3, [XGB_Tree_3_3].[Score_3_3] AS [Score_3_3], [XGB_Tree_3_4].join_key_3_4 AS join_key_3_4, [XGB_Tree_3_4].[Score_3_4] AS [Score_3_4], [XGB_Tree_3_5].join_key_3_5 AS join_key_3_5, [XGB_Tree_3_5].[Score_3_5] AS [Score_3_5], [XGB_Tree_3_6].join_key_3_6 AS join_key_3_6, [XGB_Tree_3_6].[Score_3_6] AS [Score_3_6], [XGB_Tree_3_7].join_key_3_7 AS join_key_3_7, [XGB_Tree_3_7].[Score_3_7] AS [Score_3_7], [XGB_Tree_3_8].join_key_3_8 AS join_key_3_8, [XGB_Tree_3_8].[Score_3_8] AS [Score_3_8], [XGB_Tree_3_9].join_key_3_9 AS join_key_3_9, [XGB_Tree_3_9].[Score_3_9] AS [Score_3_9] 
FROM [XGB_Tree_0_0] LEFT OUTER JOIN [XGB_Tree_0_1] ON [XGB_Tree_0_0].join_key_0_0 = [XGB_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [XGB_Tree_0_2] ON [XGB_Tree_0_2].join_key_0_2 = [XGB_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [XGB_Tree_0_3] ON [XGB_Tree_0_3].join_key_0_3 = [XGB_Tree_0_2].join_key_0_2 LEFT OUTER JOIN [XGB_Tree_0_4] ON [XGB_Tree_0_4].join_key_0_4 = [XGB_Tree_0_3].join_key_0_3 LEFT OUTER JOIN [XGB_Tree_0_5] ON [XGB_Tree_0_5].join_key_0_5 = [XGB_Tree_0_4].join_key_0_4 LEFT OUTER JOIN [XGB_Tree_0_6] ON [XGB_Tree_0_6].join_key_0_6 = [XGB_Tree_0_5].join_key_0_5 LEFT OUTER JOIN [XGB_Tree_0_7] ON [XGB_Tree_0_7].join_key_0_7 = [XGB_Tree_0_6].join_key_0_6 LEFT OUTER JOIN [XGB_Tree_0_8] ON [XGB_Tree_0_8].join_key_0_8 = [XGB_Tree_0_7].join_key_0_7 LEFT OUTER JOIN [XGB_Tree_0_9] ON [XGB_Tree_0_9].join_key_0_9 = [XGB_Tree_0_8].join_key_0_8 LEFT OUTER JOIN [XGB_Tree_1_0] ON [XGB_Tree_1_0].join_key_1_0 = [XGB_Tree_0_9].join_key_0_9 LEFT OUTER JOIN [XGB_Tree_1_1] ON [XGB_Tree_1_1].join_key_1_1 = [XGB_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [XGB_Tree_1_2] ON [XGB_Tree_1_2].join_key_1_2 = [XGB_Tree_1_1].join_key_1_1 LEFT OUTER JOIN [XGB_Tree_1_3] ON [XGB_Tree_1_3].join_key_1_3 = [XGB_Tree_1_2].join_key_1_2 LEFT OUTER JOIN [XGB_Tree_1_4] ON [XGB_Tree_1_4].join_key_1_4 = [XGB_Tree_1_3].join_key_1_3 LEFT OUTER JOIN [XGB_Tree_1_5] ON [XGB_Tree_1_5].join_key_1_5 = [XGB_Tree_1_4].join_key_1_4 LEFT OUTER JOIN [XGB_Tree_1_6] ON [XGB_Tree_1_6].join_key_1_6 = [XGB_Tree_1_5].join_key_1_5 LEFT OUTER JOIN [XGB_Tree_1_7] ON [XGB_Tree_1_7].join_key_1_7 = [XGB_Tree_1_6].join_key_1_6 LEFT OUTER JOIN [XGB_Tree_1_8] ON [XGB_Tree_1_8].join_key_1_8 = [XGB_Tree_1_7].join_key_1_7 LEFT OUTER JOIN [XGB_Tree_1_9] ON [XGB_Tree_1_9].join_key_1_9 = [XGB_Tree_1_8].join_key_1_8 LEFT OUTER JOIN [XGB_Tree_2_0] ON [XGB_Tree_2_0].join_key_2_0 = [XGB_Tree_1_9].join_key_1_9 LEFT OUTER JOIN [XGB_Tree_2_1] ON [XGB_Tree_2_1].join_key_2_1 = [XGB_Tree_2_0].join_key_2_0 LEFT OUTER JOIN [XGB_Tree_2_2] ON [XGB_Tree_2_2].join_key_2_2 = [XGB_Tree_2_1].join_key_2_1 LEFT OUTER JOIN [XGB_Tree_2_3] ON [XGB_Tree_2_3].join_key_2_3 = [XGB_Tree_2_2].join_key_2_2 LEFT OUTER JOIN [XGB_Tree_2_4] ON [XGB_Tree_2_4].join_key_2_4 = [XGB_Tree_2_3].join_key_2_3 LEFT OUTER JOIN [XGB_Tree_2_5] ON [XGB_Tree_2_5].join_key_2_5 = [XGB_Tree_2_4].join_key_2_4 LEFT OUTER JOIN [XGB_Tree_2_6] ON [XGB_Tree_2_6].join_key_2_6 = [XGB_Tree_2_5].join_key_2_5 LEFT OUTER JOIN [XGB_Tree_2_7] ON [XGB_Tree_2_7].join_key_2_7 = [XGB_Tree_2_6].join_key_2_6 LEFT OUTER JOIN [XGB_Tree_2_8] ON [XGB_Tree_2_8].join_key_2_8 = [XGB_Tree_2_7].join_key_2_7 LEFT OUTER JOIN [XGB_Tree_2_9] ON [XGB_Tree_2_9].join_key_2_9 = [XGB_Tree_2_8].join_key_2_8 LEFT OUTER JOIN [XGB_Tree_3_0] ON [XGB_Tree_3_0].join_key_3_0 = [XGB_Tree_2_9].join_key_2_9 LEFT OUTER JOIN [XGB_Tree_3_1] ON [XGB_Tree_3_1].join_key_3_1 = [XGB_Tree_3_0].join_key_3_0 LEFT OUTER JOIN [XGB_Tree_3_2] ON [XGB_Tree_3_2].join_key_3_2 = [XGB_Tree_3_1].join_key_3_1 LEFT OUTER JOIN [XGB_Tree_3_3] ON [XGB_Tree_3_3].join_key_3_3 = [XGB_Tree_3_2].join_key_3_2 LEFT OUTER JOIN [XGB_Tree_3_4] ON [XGB_Tree_3_4].join_key_3_4 = [XGB_Tree_3_3].join_key_3_3 LEFT OUTER JOIN [XGB_Tree_3_5] ON [XGB_Tree_3_5].join_key_3_5 = [XGB_Tree_3_4].join_key_3_4 LEFT OUTER JOIN [XGB_Tree_3_6] ON [XGB_Tree_3_6].join_key_3_6 = [XGB_Tree_3_5].join_key_3_5 LEFT OUTER JOIN [XGB_Tree_3_7] ON [XGB_Tree_3_7].join_key_3_7 = [XGB_Tree_3_6].join_key_3_6 LEFT OUTER JOIN [XGB_Tree_3_8] ON [XGB_Tree_3_8].join_key_3_8 = [XGB_Tree_3_7].join_key_3_7 LEFT OUTER JOIN [XGB_Tree_3_9] ON [XGB_Tree_3_9].join_key_3_9 = [XGB_Tree_3_8].join_key_3_8), 
[XGB_AVG_Scores] AS 
(SELECT [XGB_Join_CTE].join_key_0_0 AS [KEY], [XGB_Join_CTE].[Score_0_0] + [XGB_Join_CTE].[Score_0_1] + [XGB_Join_CTE].[Score_0_2] + [XGB_Join_CTE].[Score_0_3] + [XGB_Join_CTE].[Score_0_4] + [XGB_Join_CTE].[Score_0_5] + [XGB_Join_CTE].[Score_0_6] + [XGB_Join_CTE].[Score_0_7] + [XGB_Join_CTE].[Score_0_8] + [XGB_Join_CTE].[Score_0_9] AS [Score_0], [XGB_Join_CTE].[Score_1_0] + [XGB_Join_CTE].[Score_1_1] + [XGB_Join_CTE].[Score_1_2] + [XGB_Join_CTE].[Score_1_3] + [XGB_Join_CTE].[Score_1_4] + [XGB_Join_CTE].[Score_1_5] + [XGB_Join_CTE].[Score_1_6] + [XGB_Join_CTE].[Score_1_7] + [XGB_Join_CTE].[Score_1_8] + [XGB_Join_CTE].[Score_1_9] AS [Score_1], [XGB_Join_CTE].[Score_2_0] + [XGB_Join_CTE].[Score_2_1] + [XGB_Join_CTE].[Score_2_2] + [XGB_Join_CTE].[Score_2_3] + [XGB_Join_CTE].[Score_2_4] + [XGB_Join_CTE].[Score_2_5] + [XGB_Join_CTE].[Score_2_6] + [XGB_Join_CTE].[Score_2_7] + [XGB_Join_CTE].[Score_2_8] + [XGB_Join_CTE].[Score_2_9] AS [Score_2], [XGB_Join_CTE].[Score_3_0] + [XGB_Join_CTE].[Score_3_1] + [XGB_Join_CTE].[Score_3_2] + [XGB_Join_CTE].[Score_3_3] + [XGB_Join_CTE].[Score_3_4] + [XGB_Join_CTE].[Score_3_5] + [XGB_Join_CTE].[Score_3_6] + [XGB_Join_CTE].[Score_3_7] + [XGB_Join_CTE].[Score_3_8] + [XGB_Join_CTE].[Score_3_9] AS [Score_3] 
FROM [XGB_Join_CTE]), 
orig_cte AS 
(SELECT [XGB_AVG_Scores].[KEY] AS [KEY], [XGB_AVG_Scores].[Score_0] AS [Score_0], [XGB_AVG_Scores].[Score_1] AS [Score_1], [XGB_AVG_Scores].[Score_2] AS [Score_2], [XGB_AVG_Scores].[Score_3] AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Proba_0], CAST(NULL AS FLOAT(53)) AS [Proba_1], CAST(NULL AS FLOAT(53)) AS [Proba_2], CAST(NULL AS FLOAT(53)) AS [Proba_3], CAST(NULL AS FLOAT(53)) AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [XGB_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], exp(score_max.[Score_0] - score_max.[max_Score]) AS [exp_delta_Score_0], exp(score_max.[Score_1] - score_max.[max_Score]) AS [exp_delta_Score_1], exp(score_max.[Score_2] - score_max.[max_Score]) AS [exp_delta_Score_2], exp(score_max.[Score_3] - score_max.[max_Score]) AS [exp_delta_Score_3] 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.[KEY] AS [KEY], soft_scu.class AS class, soft_scu.[LogProba] AS [LogProba], soft_scu.[Proba] AS [Proba], soft_scu.[Score] AS [Score], soft_scu.[exp_delta_Score] AS [exp_delta_Score] 
FROM (SELECT score_soft_max_comp.[KEY] AS [KEY], 0 AS class, score_soft_max_comp.[LogProba_0] AS [LogProba], score_soft_max_comp.[Proba_0] AS [Proba], score_soft_max_comp.[Score_0] AS [Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 1 AS class, score_soft_max_comp.[LogProba_1] AS [LogProba], score_soft_max_comp.[Proba_1] AS [Proba], score_soft_max_comp.[Score_1] AS [Score], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 2 AS class, score_soft_max_comp.[LogProba_2] AS [LogProba], score_soft_max_comp.[Proba_2] AS [Proba], score_soft_max_comp.[Score_2] AS [Score], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 3 AS class, score_soft_max_comp.[LogProba_3] AS [LogProba], score_soft_max_comp.[Proba_3] AS [Proba], score_soft_max_comp.[Score_3] AS [Score], score_soft_max_comp.[exp_delta_Score_3] AS [exp_delta_Score] 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.[KEY] AS [KEY], score_soft_max_comp.[Score_0] AS [Score_0], score_soft_max_comp.[Score_1] AS [Score_1], score_soft_max_comp.[Score_2] AS [Score_2], score_soft_max_comp.[Score_3] AS [Score_3], score_soft_max_comp.[Proba_0] AS [Proba_0], score_soft_max_comp.[Proba_1] AS [Proba_1], score_soft_max_comp.[Proba_2] AS [Proba_2], score_soft_max_comp.[Proba_3] AS [Proba_3], score_soft_max_comp.[LogProba_0] AS [LogProba_0], score_soft_max_comp.[LogProba_1] AS [LogProba_1], score_soft_max_comp.[LogProba_2] AS [LogProba_2], score_soft_max_comp.[LogProba_3] AS [LogProba_3], score_soft_max_comp.[Decision] AS [Decision], score_soft_max_comp.[max_LogProba] AS [max_LogProba], score_soft_max_comp.[max_Proba] AS [max_Proba], score_soft_max_comp.[max_Score] AS [max_Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max_comp.[exp_delta_Score_3] AS [exp_delta_Score_3], (SELECT sum(score_class_union_soft.[exp_delta_Score]) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.[KEY] = score_class_union_soft.[KEY]) AS [sum_ExpDeltaScore] 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Score_2] AS [Score_2], score_soft_max.[Score_3] AS [Score_3], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[Proba_2] AS [Proba_2], score_soft_max.[Proba_3] AS [Proba_3], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[LogProba_2] AS [LogProba_2], score_soft_max.[LogProba_3] AS [LogProba_3], score_soft_max.[Decision] AS [Decision], score_soft_max.[max_LogProba] AS [max_LogProba], score_soft_max.[max_Proba] AS [max_Proba], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max.[exp_delta_Score_3] AS [exp_delta_Score_3], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.[max_LogProba] = score_class_union.[LogProba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.[max_Proba] = score_class_union.[Proba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.[max_Score] = score_class_union.[Score] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score], score_soft_max.[exp_delta_Score_0] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_0], score_soft_max.[exp_delta_Score_1] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_1], score_soft_max.[exp_delta_Score_2] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_2], score_soft_max.[exp_delta_Score_3] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_3] 
FROM score_soft_max)
 SELECT arg_max_cte.[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], CAST(NULL AS FLOAT) AS [Score_2], CAST(NULL AS FLOAT) AS [Score_3], arg_max_cte.[SoftProba_0] AS [Proba_0], arg_max_cte.[SoftProba_1] AS [Proba_1], arg_max_cte.[SoftProba_2] AS [Proba_2], arg_max_cte.[SoftProba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[SoftProba_0] IS NULL OR arg_max_cte.[SoftProba_0] > 0.0) THEN log(arg_max_cte.[SoftProba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[SoftProba_1] IS NULL OR arg_max_cte.[SoftProba_1] > 0.0) THEN log(arg_max_cte.[SoftProba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[SoftProba_2] IS NULL OR arg_max_cte.[SoftProba_2] > 0.0) THEN log(arg_max_cte.[SoftProba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[SoftProba_3] IS NULL OR arg_max_cte.[SoftProba_3] > 0.0) THEN log(arg_max_cte.[SoftProba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte