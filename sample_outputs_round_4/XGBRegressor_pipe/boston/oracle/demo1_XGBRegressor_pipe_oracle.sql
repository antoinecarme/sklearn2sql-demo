-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 3.59376071146 ELSE "ADS"."Feature_0" END AS impute_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 11.3636363636 ELSE "ADS"."Feature_1" END AS impute_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 11.1367786561 ELSE "ADS"."Feature_2" END AS impute_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0691699604743 ELSE "ADS"."Feature_3" END AS impute_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.554695059289 ELSE "ADS"."Feature_4" END AS impute_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 6.28463438735 ELSE "ADS"."Feature_5" END AS impute_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 68.5749011858 ELSE "ADS"."Feature_6" END AS impute_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 3.79504268775 ELSE "ADS"."Feature_7" END AS impute_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 9.54940711462 ELSE "ADS"."Feature_8" END AS impute_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 408.23715415 ELSE "ADS"."Feature_9" END AS impute_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 18.4555335968 ELSE "ADS"."Feature_10" END AS impute_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 356.674031621 ELSE "ADS"."Feature_11" END AS impute_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 12.6530632411 ELSE "ADS"."Feature_12" END AS impute_14 
FROM "INPUT_DATA" "ADS"), 
"CenteredDataForPCA" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", "ADS_imp_1_OUT".impute_2 - 3.59376071146 AS impute_2, "ADS_imp_1_OUT".impute_3 - 11.3636363636 AS impute_3, "ADS_imp_1_OUT".impute_4 - 11.1367786561 AS impute_4, "ADS_imp_1_OUT".impute_5 - 0.0691699604743 AS impute_5, "ADS_imp_1_OUT".impute_6 - 0.554695059289 AS impute_6, "ADS_imp_1_OUT".impute_7 - 6.28463438735 AS impute_7, "ADS_imp_1_OUT".impute_8 - 68.5749011858 AS impute_8, "ADS_imp_1_OUT".impute_9 - 3.79504268775 AS impute_9, "ADS_imp_1_OUT".impute_10 - 9.54940711462 AS impute_10, "ADS_imp_1_OUT".impute_11 - 408.23715415 AS impute_11, "ADS_imp_1_OUT".impute_12 - 18.4555335968 AS impute_12, "ADS_imp_1_OUT".impute_13 - 356.674031621 AS impute_13, "ADS_imp_1_OUT".impute_14 - 12.6530632411 AS impute_14 
FROM "ADS_imp_1_OUT"), 
"ADS_ano_2_OUT" AS 
(SELECT "CenteredDataForPCA"."KEY" AS "KEY", "CenteredDataForPCA".impute_2 * 0.0290793418705 + "CenteredDataForPCA".impute_3 * -0.0435901379884 + "CenteredDataForPCA".impute_4 * 0.0283311854744 + "CenteredDataForPCA".impute_5 * -5.55834284791e-05 + "CenteredDataForPCA".impute_6 * 0.000449723983032 + "CenteredDataForPCA".impute_7 * -0.00116817520949 + "CenteredDataForPCA".impute_8 * 0.0836340850971 + "CenteredDataForPCA".impute_9 * -0.00656167700943 + "CenteredDataForPCA".impute_10 * 0.0450056440522 + "CenteredDataForPCA".impute_11 * 0.949748861684 + "CenteredDataForPCA".impute_12 * 0.00560015635568 + "CenteredDataForPCA".impute_13 * -0.291215007119 + "CenteredDataForPCA".impute_14 * 0.0229433981219 AS anoova_2, "CenteredDataForPCA".impute_2 * 0.00595358533578 + "CenteredDataForPCA".impute_3 * 0.00117454545239 + "CenteredDataForPCA".impute_4 * -0.00494881025195 + "CenteredDataForPCA".impute_5 * -0.00010267276141 + "CenteredDataForPCA".impute_6 * 1.83085404137e-06 + "CenteredDataForPCA".impute_7 * 0.000365743217289 + "CenteredDataForPCA".impute_8 * -0.00572142591607 + "CenteredDataForPCA".impute_9 * 0.000353613792575 + "CenteredDataForPCA".impute_10 * -0.00861821318903 + "CenteredDataForPCA".impute_11 * -0.292380996231 + "CenteredDataForPCA".impute_12 * -0.00252890004647 + "CenteredDataForPCA".impute_13 * -0.95619302773 + "CenteredDataForPCA".impute_14 * 0.00576700106093 AS anoova_3, "CenteredDataForPCA".impute_2 * -0.0115545557501 + "CenteredDataForPCA".impute_3 * 0.632896918644 + "CenteredDataForPCA".impute_4 * -0.088340421489 + "CenteredDataForPCA".impute_5 * -0.000975318528256 + "CenteredDataForPCA".impute_6 * -0.00180719024026 + "CenteredDataForPCA".impute_7 * 0.00473411946642 + "CenteredDataForPCA".impute_8 * -0.7558624017 + "CenteredDataForPCA".impute_9 * 0.0450884909145 + "CenteredDataForPCA".impute_10 * 0.00284762033646 + "CenteredDataForPCA".impute_11 * 0.0938666635186 + "CenteredDataForPCA".impute_12 * -0.0111591438347 + "CenteredDataForPCA".impute_13 * -0.023554219456 + "CenteredDataForPCA".impute_14 * -0.0928331511404 AS anoova_4, "CenteredDataForPCA".impute_2 * 0.0270010188326 + "CenteredDataForPCA".impute_3 * 0.768061561807 + "CenteredDataForPCA".impute_4 * -0.0127967831999 + "CenteredDataForPCA".impute_5 * 0.000854486449613 + "CenteredDataForPCA".impute_6 * 0.000679594076936 + "CenteredDataForPCA".impute_7 * 0.00570054720395 + "CenteredDataForPCA".impute_8 * 0.636611733776 + "CenteredDataForPCA".impute_9 * 0.00257396992201 + "CenteredDataForPCA".impute_10 * -0.0195657921452 + "CenteredDataForPCA".impute_11 * -0.0199759769684 + "CenteredDataForPCA".impute_12 * -0.0320122564453 + "CenteredDataForPCA".impute_13 * 0.0040139802958 + "CenteredDataForPCA".impute_14 * 0.0452885745068 AS anoova_5, "CenteredDataForPCA".impute_2 * 0.953871800695 + "CenteredDataForPCA".impute_3 * -0.00565379160917 + "CenteredDataForPCA".impute_4 * -0.0562384399835 + "CenteredDataForPCA".impute_5 * -0.00213578787488 + "CenteredDataForPCA".impute_6 * -0.000179163492751 + "CenteredDataForPCA".impute_7 * -0.0132180033155 + "CenteredDataForPCA".impute_8 * -0.0459165992573 + "CenteredDataForPCA".impute_9 * -0.00667171091971 + "CenteredDataForPCA".impute_10 * 0.17058785538 + "CenteredDataForPCA".impute_11 * -0.0326258446098 + "CenteredDataForPCA".impute_12 * 0.0213376088824 + "CenteredDataForPCA".impute_13 * 0.0162708060102 + "CenteredDataForPCA".impute_14 * 0.231769304291 AS anoova_6, "CenteredDataForPCA".impute_2 * -0.166034349246 + "CenteredDataForPCA".impute_3 * 0.0467338831346 + "CenteredDataForPCA".impute_4 * 0.341930158111 + "CenteredDataForPCA".impute_5 * -0.00351936887193 + "CenteredDataForPCA".impute_6 * 0.00187779954519 + "CenteredDataForPCA".impute_7 * -0.0726614168834 + "CenteredDataForPCA".impute_8 * -0.109563953631 + "CenteredDataForPCA".impute_9 * 0.0073890536197 + "CenteredDataForPCA".impute_10 * -0.207176649927 + "CenteredDataForPCA".impute_11 * -0.00342146728837 + "CenteredDataForPCA".impute_12 * 0.0412943586628 + "CenteredDataForPCA".impute_13 * 0.0060542050517 + "CenteredDataForPCA".impute_14 * 0.889551632117 AS anoova_7, "CenteredDataForPCA".impute_2 * 0.212852802248 + "CenteredDataForPCA".impute_3 * 0.035176546336 + "CenteredDataForPCA".impute_4 * 0.785689931958 + "CenteredDataForPCA".impute_5 * 0.00509255441973 + "CenteredDataForPCA".impute_6 * 0.00385766581269 + "CenteredDataForPCA".impute_7 * 0.00787523138869 + "CenteredDataForPCA".impute_8 * -0.0263745768272 + "CenteredDataForPCA".impute_9 * -0.0889173024929 + "CenteredDataForPCA".impute_10 * -0.435623734582 + "CenteredDataForPCA".impute_11 * 0.00277590025712 + "CenteredDataForPCA".impute_12 * -0.0713658865352 + "CenteredDataForPCA".impute_13 * -0.00150020771634 + "CenteredDataForPCA".impute_14 * -0.364104108592 AS anoova_8, "CenteredDataForPCA".impute_2 * 0.122652780398 + "CenteredDataForPCA".impute_3 * -0.0514137942919 + "CenteredDataForPCA".impute_4 * -0.492499395662 + "CenteredDataForPCA".impute_5 * -0.0113553130638 + "CenteredDataForPCA".impute_6 * -0.0044543901623 + "CenteredDataForPCA".impute_7 * -0.0151387973731 + "CenteredDataForPCA".impute_8 * 0.0176803007577 + "CenteredDataForPCA".impute_9 * 0.0657533681177 + "CenteredDataForPCA".impute_10 * -0.853570768015 + "CenteredDataForPCA".impute_11 * 0.0468119918264 + "CenteredDataForPCA".impute_12 * -0.0598374746853 + "CenteredDataForPCA".impute_13 * -0.00318176205366 + "CenteredDataForPCA".impute_14 * 0.0194455791662 AS anoova_9, "CenteredDataForPCA".impute_2 * 0.0137295009078 + "CenteredDataForPCA".impute_3 * 0.0235097341661 + "CenteredDataForPCA".impute_4 * 0.0352709234238 + "CenteredDataForPCA".impute_5 * -0.0178059044254 + "CenteredDataForPCA".impute_6 * -0.0139018168355 + "CenteredDataForPCA".impute_7 * -0.0529937903518 + "CenteredDataForPCA".impute_8 * 0.0231883052927 + "CenteredDataForPCA".impute_9 * 0.224532665334 + "CenteredDataForPCA".impute_10 * -0.070331864193 + "CenteredDataForPCA".impute_11 * -0.00203423468159 + "CenteredDataForPCA".impute_12 * 0.96586112087 + "CenteredDataForPCA".impute_13 * -0.0019041485606 + "CenteredDataForPCA".impute_14 * -0.0768208791925 AS anoova_10, "CenteredDataForPCA".impute_2 * 0.0164239950024 + "CenteredDataForPCA".impute_3 * -0.0306822646896 + "CenteredDataForPCA".impute_4 * 0.0980506613801 + "CenteredDataForPCA".impute_5 * -0.00156368116258 + "CenteredDataForPCA".impute_6 * -0.0106223819107 + "CenteredDataForPCA".impute_7 * -0.0512068200773 + "CenteredDataForPCA".impute_8 * 0.0260681878414 + "CenteredDataForPCA".impute_9 * 0.964823647455 + "CenteredDataForPCA".impute_10 * 0.0390661641493 + "CenteredDataForPCA".impute_11 * -0.000480480028877 + "CenteredDataForPCA".impute_12 * -0.229898826892 + "CenteredDataForPCA".impute_13 * 7.36484057084e-06 + "CenteredDataForPCA".impute_14 * -0.0222128903555 AS anoova_11, "CenteredDataForPCA".impute_2 * -0.00226717797688 + "CenteredDataForPCA".impute_3 * 0.00552239680166 + "CenteredDataForPCA".impute_4 * -0.0178836079801 + "CenteredDataForPCA".impute_5 * -0.0157986253619 + "CenteredDataForPCA".impute_6 * 0.0115661438829 + "CenteredDataForPCA".impute_7 * -0.994165624979 + "CenteredDataForPCA".impute_8 * 0.00551780566759 + "CenteredDataForPCA".impute_9 * -0.0635307633029 + "CenteredDataForPCA".impute_10 * 0.0241265968226 + "CenteredDataForPCA".impute_11 * -0.000774619844149 + "CenteredDataForPCA".impute_12 * -0.0430041587914 + "CenteredDataForPCA".impute_13 * -0.000616615255131 + "CenteredDataForPCA".impute_14 * -0.0663086932677 AS anoova_12, "CenteredDataForPCA".impute_2 * 0.00196895828586 + "CenteredDataForPCA".impute_3 * -0.000193077157234 + "CenteredDataForPCA".impute_4 * -0.00812264862898 + "CenteredDataForPCA".impute_5 * 0.999597129178 + "CenteredDataForPCA".impute_6 * 0.00778846475673 + "CenteredDataForPCA".impute_7 * -0.0171507849184 + "CenteredDataForPCA".impute_8 * -0.000892510155887 + "CenteredDataForPCA".impute_9 * 0.005875198507 + "CenteredDataForPCA".impute_10 * -0.0086510290719 + "CenteredDataForPCA".impute_11 * 0.00051750984589 + "CenteredDataForPCA".impute_12 * 0.0161466468914 + "CenteredDataForPCA".impute_13 * -0.000156477757414 + "CenteredDataForPCA".impute_14 * 0.00311719313324 AS anoova_13, "CenteredDataForPCA".impute_2 * 0.000531945671707 + "CenteredDataForPCA".impute_3 * 0.000126484701586 + "CenteredDataForPCA".impute_4 * -0.00423973116962 + "CenteredDataForPCA".impute_5 * -0.00793521441916 + "CenteredDataForPCA".impute_6 * 0.999728591757 + "CenteredDataForPCA".impute_7 * 0.0103958814617 + "CenteredDataForPCA".impute_8 * -0.000916065930923 + "CenteredDataForPCA".impute_9 * 0.0147667106543 + "CenteredDataForPCA".impute_10 * -0.00247893969767 + "CenteredDataForPCA".impute_11 * -7.34637920241e-05 + "CenteredDataForPCA".impute_12 * 0.0112939726501 + "CenteredDataForPCA".impute_13 * 5.25551852109e-05 + "CenteredDataForPCA".impute_14 * -0.000908030955549 AS anoova_14 
FROM "CenteredDataForPCA"), 
"DT_node_lookup" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 < -3.16993) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 < -0.522446) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 < 0.76865) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 < -7.08472) THEN 5 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 < -2.75639) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -3.16993 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.522446 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -7.08472 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.00594 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_7' AS feature, 0.76865 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.71294 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_6' AS feature, -2.75639 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.56623 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.03976 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.71822 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.19257 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"XGB_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 < -0.943435) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 < -0.522446) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 < -0.207153) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 < -3.53341) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 < -2.49217) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_8 < 0.6438) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_14 < -0.0224299) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.943435 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.522446 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -2.49217 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anoova_10' AS feature, -0.207153 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_7' AS feature, -3.53341 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_8' AS feature, 0.6438 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_14' AS feature, -0.0224299 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.97489 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.57491 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.63982 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.98982 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.74869 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.85241 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.59303 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.11325 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"XGB_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 < -5.89619) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 < 0.549455) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 < 236.409) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 < 4.38548) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 < 2.65191) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -5.89619 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, 0.549455 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 236.409 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.09832 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5412 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, 4.38548 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_7' AS feature, 2.65191 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.59817 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.18752 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.19357 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.742168 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"XGB_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 < -5.26079) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_9 < 1.62556) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 < -3.49908) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 < 15.4159) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 < 236.853) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 < -0.844771) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -5.26079 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_9' AS feature, 1.62556 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 15.4159 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anoova_4' AS feature, -3.49908 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.46929 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 236.853 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_11' AS feature, -0.844771 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.80987 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.84759 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.44163 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.911351 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.58672 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.74063 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"XGB_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 < -3.28571) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_13 < -0.128467) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 < 260.038) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 < 15.4159) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 < 236.952) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_12 < -0.131237) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -3.28571 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_13' AS feature, -0.128467 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 15.4159 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.63004 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, 260.038 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 236.952 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_12' AS feature, -0.131237 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.85879 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.759667 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.23275 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.790039 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.27774 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.50579 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"XGB_Tree_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_4, "DT_Output_4"."Estimator" AS "Estimator_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 < -4.24765) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 < -0.522446) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 < -0.338968) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 < 2.09241) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 < -2.22589) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_7 < -7.08472) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_6 < 6.63512) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -4.24765 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.522446 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_9' AS feature, -2.22589 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anoova_10' AS feature, -0.338968 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_7' AS feature, 2.09241 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, -7.08472 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_6' AS feature, 6.63512 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.90464 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.84509 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.51648 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.07261 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.17724 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.09603 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.879321 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.357721 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"XGB_Tree_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_5, "DT_Output_5"."Estimator" AS "Estimator_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 < -3.28571) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_13 < -0.128467) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 < 260.038) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_4 < 40.9212) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_2 < -106.378) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_12 < -0.131237) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, -3.28571 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_13' AS feature, -0.128467 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 40.9212 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.18683 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, 260.038 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, -106.378 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_12' AS feature, -0.131237 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.52141 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.629635 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.18778 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.793684 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.17946 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.31731 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"XGB_Tree_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_6, "DT_Output_6"."Estimator" AS "Estimator_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 < 0.227464) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 < -0.315091) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 < -0.293913) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_11 < -0.330325) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 < 46.4566) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 < -13.4926) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_13 < -0.0462357) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.227464 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, -0.315091 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 46.4566 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anoova_12' AS feature, -0.293913 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_11' AS feature, -0.330325 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -13.4926 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_13' AS feature, -0.0462357 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.42039 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.39187 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.36876 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.892017 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.701638 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0723 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.59959 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.310607 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"XGB_Tree_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_7, "DT_Output_7"."Estimator" AS "Estimator_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_2 < -136.03) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 < -0.377268) THEN 3 ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 < 3.31287) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_7 < -7.50446) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 < -4.17525) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 < 236.409) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -136.03 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_12' AS feature, -0.377268 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_7' AS feature, -7.50446 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.02391 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_7' AS feature, 3.31287 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -4.17525 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_2' AS feature, 236.409 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.25689 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.721881 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.16298 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.660184 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.883918 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.521196 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"XGB_Tree_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_8, "DT_Output_8"."Estimator" AS "Estimator_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_ano_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_ano_2_OUT".anoova_7 < 0.227464) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_10 < -0.315091) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_12 < -0.247484) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_9 < -2.48137) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_2 < 46.4566) THEN CASE WHEN ("ADS_ano_2_OUT".anoova_4 < -13.4926) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_ano_2_OUT".anoova_13 < -0.0433556) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_ano_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'anoova_7' AS feature, 0.227464 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, -0.315091 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'anoova_2' AS feature, 46.4566 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'anoova_12' AS feature, -0.247484 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'anoova_9' AS feature, -2.48137 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, -13.4926 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'anoova_13' AS feature, -0.0433556 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.93274 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.11369 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.18044 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.731876 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.545802 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.869584 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.477877 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.220553 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"XGB_Tree_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_9, "DT_Output_9"."Estimator" AS "Estimator_9" 
FROM "DT_Output_9"), 
"XGB_Join_CTE" AS 
(SELECT "XGB_Tree_0".join_key_0 AS join_key_0, "XGB_Tree_0"."Estimator_0" AS "Estimator_0", "XGB_Tree_1".join_key_1 AS join_key_1, "XGB_Tree_1"."Estimator_1" AS "Estimator_1", "XGB_Tree_2".join_key_2 AS join_key_2, "XGB_Tree_2"."Estimator_2" AS "Estimator_2", "XGB_Tree_3".join_key_3 AS join_key_3, "XGB_Tree_3"."Estimator_3" AS "Estimator_3", "XGB_Tree_4".join_key_4 AS join_key_4, "XGB_Tree_4"."Estimator_4" AS "Estimator_4", "XGB_Tree_5".join_key_5 AS join_key_5, "XGB_Tree_5"."Estimator_5" AS "Estimator_5", "XGB_Tree_6".join_key_6 AS join_key_6, "XGB_Tree_6"."Estimator_6" AS "Estimator_6", "XGB_Tree_7".join_key_7 AS join_key_7, "XGB_Tree_7"."Estimator_7" AS "Estimator_7", "XGB_Tree_8".join_key_8 AS join_key_8, "XGB_Tree_8"."Estimator_8" AS "Estimator_8", "XGB_Tree_9".join_key_9 AS join_key_9, "XGB_Tree_9"."Estimator_9" AS "Estimator_9" 
FROM "XGB_Tree_0" LEFT OUTER JOIN "XGB_Tree_1" ON "XGB_Tree_0".join_key_0 = "XGB_Tree_1".join_key_1 LEFT OUTER JOIN "XGB_Tree_2" ON "XGB_Tree_2".join_key_2 = "XGB_Tree_1".join_key_1 LEFT OUTER JOIN "XGB_Tree_3" ON "XGB_Tree_3".join_key_3 = "XGB_Tree_2".join_key_2 LEFT OUTER JOIN "XGB_Tree_4" ON "XGB_Tree_4".join_key_4 = "XGB_Tree_3".join_key_3 LEFT OUTER JOIN "XGB_Tree_5" ON "XGB_Tree_5".join_key_5 = "XGB_Tree_4".join_key_4 LEFT OUTER JOIN "XGB_Tree_6" ON "XGB_Tree_6".join_key_6 = "XGB_Tree_5".join_key_5 LEFT OUTER JOIN "XGB_Tree_7" ON "XGB_Tree_7".join_key_7 = "XGB_Tree_6".join_key_6 LEFT OUTER JOIN "XGB_Tree_8" ON "XGB_Tree_8".join_key_8 = "XGB_Tree_7".join_key_7 LEFT OUTER JOIN "XGB_Tree_9" ON "XGB_Tree_9".join_key_9 = "XGB_Tree_8".join_key_8), 
"XGB_AVG_Scores" AS 
(SELECT "XGB_Join_CTE".join_key_0 AS "KEY", "XGB_Join_CTE"."Estimator_0" + "XGB_Join_CTE"."Estimator_1" + "XGB_Join_CTE"."Estimator_2" + "XGB_Join_CTE"."Estimator_3" + "XGB_Join_CTE"."Estimator_4" + "XGB_Join_CTE"."Estimator_5" + "XGB_Join_CTE"."Estimator_6" + "XGB_Join_CTE"."Estimator_7" + "XGB_Join_CTE"."Estimator_8" + "XGB_Join_CTE"."Estimator_9" + 0.5 AS "Estimator" 
FROM "XGB_Join_CTE")
 SELECT "XGB_AVG_Scores"."KEY" AS "KEY", "XGB_AVG_Scores"."Estimator" AS "Estimator" 
FROM "XGB_AVG_Scores"