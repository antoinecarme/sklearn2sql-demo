-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -3.63428492931e-16 ELSE [ADS].[Feature_0] END AS impute_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 1.30834257455e-16 ELSE [ADS].[Feature_1] END AS impute_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -8.04534920334e-16 ELSE [ADS].[Feature_2] END AS impute_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 1.28165452107e-16 ELSE [ADS].[Feature_3] END AS impute_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -8.83531558624e-17 ELSE [ADS].[Feature_4] END AS impute_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 1.32702421198e-16 ELSE [ADS].[Feature_5] END AS impute_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -4.57464634298e-16 ELSE [ADS].[Feature_6] END AS impute_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 3.77730149823e-16 ELSE [ADS].[Feature_7] END AS impute_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -3.83085421731e-16 ELSE [ADS].[Feature_8] END AS impute_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -3.41288201508e-16 ELSE [ADS].[Feature_9] END AS impute_11 
FROM [INPUT_DATA] AS [ADS]), 
[CenteredDataForPCA] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], [ADS_imp_1_OUT].impute_2 - -3.63428492931e-16 AS impute_2, [ADS_imp_1_OUT].impute_3 - 1.30834257455e-16 AS impute_3, [ADS_imp_1_OUT].impute_4 - -8.04534920334e-16 AS impute_4, [ADS_imp_1_OUT].impute_5 - 1.28165452107e-16 AS impute_5, [ADS_imp_1_OUT].impute_6 - -8.83531558624e-17 AS impute_6, [ADS_imp_1_OUT].impute_7 - 1.32702421198e-16 AS impute_7, [ADS_imp_1_OUT].impute_8 - -4.57464634298e-16 AS impute_8, [ADS_imp_1_OUT].impute_9 - 3.77730149823e-16 AS impute_9, [ADS_imp_1_OUT].impute_10 - -3.83085421731e-16 AS impute_10, [ADS_imp_1_OUT].impute_11 - -3.41288201508e-16 AS impute_11 
FROM [ADS_imp_1_OUT]), 
[ADS_ano_2_OUT] AS 
(SELECT [CenteredDataForPCA].[KEY] AS [KEY], [CenteredDataForPCA].impute_2 * 0.21643100659 + [CenteredDataForPCA].impute_3 * 0.186967108192 + [CenteredDataForPCA].impute_4 * 0.303162498817 + [CenteredDataForPCA].impute_5 * 0.271739703287 + [CenteredDataForPCA].impute_6 * 0.34325493123 + [CenteredDataForPCA].impute_7 * 0.351860620033 + [CenteredDataForPCA].impute_8 * -0.282436391838 + [CenteredDataForPCA].impute_9 * 0.428833247772 + [CenteredDataForPCA].impute_10 * 0.378617309164 + [CenteredDataForPCA].impute_11 * 0.322182824553 AS anoova_2, [CenteredDataForPCA].impute_2 * 0.044371505804 + [CenteredDataForPCA].impute_3 * -0.386548110735 + [CenteredDataForPCA].impute_4 * -0.156280609448 + [CenteredDataForPCA].impute_5 * -0.138255640728 + [CenteredDataForPCA].impute_6 * 0.573026691953 + [CenteredDataForPCA].impute_7 * 0.455939849626 + [CenteredDataForPCA].impute_8 * 0.506242872531 + [CenteredDataForPCA].impute_9 * -0.068184234517 + [CenteredDataForPCA].impute_10 * -0.0261893037261 + [CenteredDataForPCA].impute_11 * -0.0849466000238 AS anoova_3, [CenteredDataForPCA].impute_2 * 0.49466810716 + [CenteredDataForPCA].impute_3 * -0.106858334763 + [CenteredDataForPCA].impute_4 * 0.167531700938 + [CenteredDataForPCA].impute_5 * 0.513568043314 + [CenteredDataForPCA].impute_6 * -0.0685867001784 + [CenteredDataForPCA].impute_7 * -0.269694382255 + [CenteredDataForPCA].impute_8 * 0.386027874592 + [CenteredDataForPCA].impute_9 * -0.380681209291 + [CenteredDataForPCA].impute_10 * 0.0636315032871 + [CenteredDataForPCA].impute_11 * 0.276842712702 AS anoova_4, [CenteredDataForPCA].impute_2 * -0.414009498941 + [CenteredDataForPCA].impute_3 * -0.679860516614 + [CenteredDataForPCA].impute_4 * 0.499825330253 + [CenteredDataForPCA].impute_5 * -0.019667344342 + [CenteredDataForPCA].impute_6 * -0.0683953319645 + [CenteredDataForPCA].impute_7 * -0.167773837077 + [CenteredDataForPCA].impute_8 * -0.0760200485782 + [CenteredDataForPCA].impute_9 * 0.00792120338562 + [CenteredDataForPCA].impute_10 * 0.264427419183 + [CenteredDataForPCA].impute_11 * 0.0870862356146 AS anoova_5, [CenteredDataForPCA].impute_2 * -0.686863892154 + [CenteredDataForPCA].impute_3 * 0.373456115735 + [CenteredDataForPCA].impute_4 * 0.12935935855 + [CenteredDataForPCA].impute_5 * 0.486890138051 + [CenteredDataForPCA].impute_6 * 0.129174145487 + [CenteredDataForPCA].impute_7 * 0.116731430474 + [CenteredDataForPCA].impute_8 * 0.244991147174 + [CenteredDataForPCA].impute_9 * -0.14364377424 + [CenteredDataForPCA].impute_10 * -0.151661098575 + [CenteredDataForPCA].impute_11 * 0.0313879194047 AS anoova_6, [CenteredDataForPCA].impute_2 * -0.225850503591 + [CenteredDataForPCA].impute_3 * 0.0417310316277 + [CenteredDataForPCA].impute_4 * -0.403141902489 + [CenteredDataForPCA].impute_5 * -0.272762738803 + [CenteredDataForPCA].impute_6 * 0.00540864137623 + [CenteredDataForPCA].impute_7 * -0.13325719548 + [CenteredDataForPCA].impute_8 * 0.106371596751 + [CenteredDataForPCA].impute_9 * -0.0339453956408 + [CenteredDataForPCA].impute_10 * 0.178730050963 + [CenteredDataForPCA].impute_11 * 0.805064466151 AS anoova_7, [CenteredDataForPCA].impute_2 * -0.109538210099 + [CenteredDataForPCA].impute_3 * -0.0676055051661 + [CenteredDataForPCA].impute_4 * -0.519857870077 + [CenteredDataForPCA].impute_5 * 0.32064908429 + [CenteredDataForPCA].impute_6 * 0.0736490780231 + [CenteredDataForPCA].impute_7 * -0.230540112449 + [CenteredDataForPCA].impute_8 * -0.00753445287491 + [CenteredDataForPCA].impute_9 * 0.0712361931688 + [CenteredDataForPCA].impute_10 * 0.647313447679 + [CenteredDataForPCA].impute_11 * -0.357272785105 AS anoova_8, [CenteredDataForPCA].impute_2 * 0.0149346777542 + [CenteredDataForPCA].impute_3 * 0.442939663138 + [CenteredDataForPCA].impute_4 * 0.392941868456 + [CenteredDataForPCA].impute_5 * -0.477364351173 + [CenteredDataForPCA].impute_6 * 0.129413507459 + [CenteredDataForPCA].impute_7 * -0.191311206733 + [CenteredDataForPCA].impute_8 * 0.324636408704 + [CenteredDataForPCA].impute_9 * -0.180588338623 + [CenteredDataForPCA].impute_10 * 0.449660024059 + [CenteredDataForPCA].impute_11 * -0.166608696019 AS anoova_9, [CenteredDataForPCA].impute_2 * 0.00810057312789 + [CenteredDataForPCA].impute_3 * -0.00210552195289 + [CenteredDataForPCA].impute_4 * 0.0423775137715 + [CenteredDataForPCA].impute_5 * 0.027194101566 + [CenteredDataForPCA].impute_6 * -0.0420398366517 + [CenteredDataForPCA].impute_7 * -0.359315489659 + [CenteredDataForPCA].impute_8 * 0.481247705071 + [CenteredDataForPCA].impute_9 * 0.773816561846 + [CenteredDataForPCA].impute_10 * -0.18945947188 + [CenteredDataForPCA].impute_11 * -0.0152738068842 AS anoova_10, [CenteredDataForPCA].impute_2 * 0.00326308608059 + [CenteredDataForPCA].impute_3 * 0.00366069256477 + [CenteredDataForPCA].impute_4 * 0.00824808535829 + [CenteredDataForPCA].impute_5 * -0.00322110536704 + [CenteredDataForPCA].impute_6 * 0.709774472551 + [CenteredDataForPCA].impute_7 * -0.563196047553 + [CenteredDataForPCA].impute_8 * -0.317444125112 + [CenteredDataForPCA].impute_9 * -0.0905946399327 + [CenteredDataForPCA].impute_10 * -0.264467346072 + [CenteredDataForPCA].impute_11 * 0.00261090257808 AS anoova_11 
FROM [CenteredDataForPCA]), 
[DT_node_lookup] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0312145) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0313534) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 < 0.01541) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.0494335) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.0402096) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_7 < 0.0245684) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 0.072856) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.0312145 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0313534 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.0402096 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_8' AS feature, 0.01541 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.0494335 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_7' AS feature, 0.0245684 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, 0.072856 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.24027 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.838 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.3027 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.5283 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.815 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.4846 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.1496 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.7737 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[XGB_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.048963) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0313534) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.0843044) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.0494335) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.0230137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_6 < 0.0194078) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.0234126) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.048963 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0313534 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.0230137 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_2' AS feature, -0.0843044 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.0494335 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_6' AS feature, 0.0194078 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_4' AS feature, 0.0234126 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.21033 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.5564 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.0084 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.4351 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.2951 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.82016 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.2842 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.8945 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[XGB_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0304474) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0439368) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_8 < 0.0123126) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_8 < -0.0366485) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.0402096) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.0108095) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.0121861) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.0304474 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0439368 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.0402096 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_8' AS feature, 0.0123126 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_8' AS feature, -0.0366485 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_4' AS feature, 0.0108095 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_4' AS feature, 0.0121861 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.44067 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.6413 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.08436 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.1238 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.5837 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.1829 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.498 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.4367 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[XGB_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.061909) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0313534) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 < -0.00433262) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.0494335) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.0230137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0850283) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.020755) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.061909 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0313534 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.0230137 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_10' AS feature, -0.00433262 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.0494335 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 0.0850283 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, -0.020755 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.42599 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.50054 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.69412 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.0677 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.7846 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.1243 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.3253 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.1929 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[XGB_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.048963) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0313534) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.0598087) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.0494335) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.0413028) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 < -0.0269746) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.020755) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.048963 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0313534 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.0413028 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_3' AS feature, -0.0598087 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.0494335 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_9' AS feature, -0.0269746 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, -0.020755 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.63111 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.20639 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.75091 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.6846 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.96401 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.6229 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.6566 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.273 AS [Estimator]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[XGB_Tree_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_4, [DT_Output_4].[Estimator] AS [Estimator_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0631501) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0313534) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.0167959) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.0494335) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.0230137) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0850283) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.0234126) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.0631501 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0313534 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.0230137 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_4' AS feature, 0.0167959 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.0494335 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 0.0850283 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_4' AS feature, 0.0234126 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.2337 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.12604 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.89947 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.2575 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.2869 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.93456 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.3244 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.0535 AS [Estimator]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[XGB_Tree_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_5, [DT_Output_5].[Estimator] AS [Estimator_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.0101192) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0137875) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.0167959) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_6 < -0.0212859) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0195838) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.061909) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.00171041) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, -0.0101192 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0137875 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, 0.0195838 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_4' AS feature, 0.0167959 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_6' AS feature, -0.0212859 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 0.061909 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, -0.00171041 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.43304 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.47188 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.005 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.56136 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.75991 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.4591 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.1199 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.0379 AS [Estimator]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[XGB_Tree_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_6, [DT_Output_6].[Estimator] AS [Estimator_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.00346216) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 < 0.000156784) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.028085) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.126766) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.0523818) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.048963) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 0.000999485) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.00346216 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_10' AS feature, 0.000156784 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.0523818 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_4' AS feature, 0.028085 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.126766 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_2' AS feature, 0.048963 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, 0.000999485 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.67539 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.58759 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.78806 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.70992 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.24268 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.83569 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.4143 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.04588 AS [Estimator]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[XGB_Tree_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_7, [DT_Output_7].[Estimator] AS [Estimator_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.0631501) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < 0.0439368) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_11 < -0.00142093) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_11 < 0.000791084) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_4 < 0.0252754) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_10 < 0.002681) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.00711985) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.0631501 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, 0.0439368 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_4' AS feature, 0.0252754 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_11' AS feature, -0.00142093 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_11' AS feature, 0.000791084 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_10' AS feature, 0.002681 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_5' AS feature, -0.00711985 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.09103 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.809 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.39964 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.73051 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.57535 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.4193 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.87171 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.5152 AS [Estimator]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[XGB_Tree_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_8, [DT_Output_8].[Estimator] AS [Estimator_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_ano_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_ano_2_OUT].anoova_2 < 0.00822132) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.00529956) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_3 < -0.0643703) THEN 7 ELSE 8 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_2 < -0.133671) THEN 9 ELSE 10 END END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_5 < -0.0446518) THEN CASE WHEN ([ADS_ano_2_OUT].anoova_9 < -0.0290479) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_ano_2_OUT].anoova_3 < 0.000390599) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_ano_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'anoova_2' AS feature, 0.00822132 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'anoova_5' AS feature, -0.00529956 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'anoova_5' AS feature, -0.0446518 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 3 AS node_id, 'anoova_3' AS feature, -0.0643703 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 4 AS node_id, 'anoova_2' AS feature, -0.133671 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'anoova_9' AS feature, -0.0290479 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'anoova_3' AS feature, 0.000390599 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.8175 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.92658 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.53085 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.26517 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.70451 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.00489 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.79484 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.62158 AS [Estimator]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[XGB_Tree_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_9, [DT_Output_9].[Estimator] AS [Estimator_9] 
FROM [DT_Output_9]), 
[XGB_Join_CTE] AS 
(SELECT [XGB_Tree_0].join_key_0 AS join_key_0, [XGB_Tree_0].[Estimator_0] AS [Estimator_0], [XGB_Tree_1].join_key_1 AS join_key_1, [XGB_Tree_1].[Estimator_1] AS [Estimator_1], [XGB_Tree_2].join_key_2 AS join_key_2, [XGB_Tree_2].[Estimator_2] AS [Estimator_2], [XGB_Tree_3].join_key_3 AS join_key_3, [XGB_Tree_3].[Estimator_3] AS [Estimator_3], [XGB_Tree_4].join_key_4 AS join_key_4, [XGB_Tree_4].[Estimator_4] AS [Estimator_4], [XGB_Tree_5].join_key_5 AS join_key_5, [XGB_Tree_5].[Estimator_5] AS [Estimator_5], [XGB_Tree_6].join_key_6 AS join_key_6, [XGB_Tree_6].[Estimator_6] AS [Estimator_6], [XGB_Tree_7].join_key_7 AS join_key_7, [XGB_Tree_7].[Estimator_7] AS [Estimator_7], [XGB_Tree_8].join_key_8 AS join_key_8, [XGB_Tree_8].[Estimator_8] AS [Estimator_8], [XGB_Tree_9].join_key_9 AS join_key_9, [XGB_Tree_9].[Estimator_9] AS [Estimator_9] 
FROM [XGB_Tree_0] LEFT OUTER JOIN [XGB_Tree_1] ON [XGB_Tree_0].join_key_0 = [XGB_Tree_1].join_key_1 LEFT OUTER JOIN [XGB_Tree_2] ON [XGB_Tree_2].join_key_2 = [XGB_Tree_1].join_key_1 LEFT OUTER JOIN [XGB_Tree_3] ON [XGB_Tree_3].join_key_3 = [XGB_Tree_2].join_key_2 LEFT OUTER JOIN [XGB_Tree_4] ON [XGB_Tree_4].join_key_4 = [XGB_Tree_3].join_key_3 LEFT OUTER JOIN [XGB_Tree_5] ON [XGB_Tree_5].join_key_5 = [XGB_Tree_4].join_key_4 LEFT OUTER JOIN [XGB_Tree_6] ON [XGB_Tree_6].join_key_6 = [XGB_Tree_5].join_key_5 LEFT OUTER JOIN [XGB_Tree_7] ON [XGB_Tree_7].join_key_7 = [XGB_Tree_6].join_key_6 LEFT OUTER JOIN [XGB_Tree_8] ON [XGB_Tree_8].join_key_8 = [XGB_Tree_7].join_key_7 LEFT OUTER JOIN [XGB_Tree_9] ON [XGB_Tree_9].join_key_9 = [XGB_Tree_8].join_key_8), 
[XGB_AVG_Scores] AS 
(SELECT [XGB_Join_CTE].join_key_0 AS [KEY], [XGB_Join_CTE].[Estimator_0] + [XGB_Join_CTE].[Estimator_1] + [XGB_Join_CTE].[Estimator_2] + [XGB_Join_CTE].[Estimator_3] + [XGB_Join_CTE].[Estimator_4] + [XGB_Join_CTE].[Estimator_5] + [XGB_Join_CTE].[Estimator_6] + [XGB_Join_CTE].[Estimator_7] + [XGB_Join_CTE].[Estimator_8] + [XGB_Join_CTE].[Estimator_9] + 0.5 AS [Estimator] 
FROM [XGB_Join_CTE])
 SELECT [XGB_AVG_Scores].[KEY] AS [KEY], [XGB_AVG_Scores].[Estimator] AS [Estimator] 
FROM [XGB_AVG_Scores]