-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 9.574999809265137) THEN CASE WHEN (`ADS`.`Feature_4` <= 0.5740000009536743) THEN CASE WHEN (`ADS`.`Feature_5` <= 6.790999889373779) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_11` <= 352.5350036621094) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_12` <= 20.049999237060547) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.095000267028809) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_4` <= 0.6030000448226929) THEN 13 ELSE 14 END END END AS node_id_2 
FROM boston AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.574999809265137 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.254867256637166 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_4' AS feature, 0.5740000009536743 AS threshold, 142 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.467605633802826 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 6.790999889373779 AS threshold, 127 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 28.552755905511795 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.701249999999995 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 35.10851063829788 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_11' AS feature, 352.5350036621094 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 46.68 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 27.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 48.08571428571429 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 20.049999237060547 AS threshold, 197 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.055837563451792 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_12' AS feature, 14.095000267028809 AS threshold, 153 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.632026143790856 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 68 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.698529411764692 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 85 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.978823529411766 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, 0.6030000448226929 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.575 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.33 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.47058823529412 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`AdaBoost_Estim_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_5` <= 6.805000305175781) THEN CASE WHEN (`ADS`.`Feature_12` <= 14.300000190734863) THEN CASE WHEN (`ADS`.`Feature_7` <= 1.2074000835418701) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_7` <= 2.003700017929077) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_5` <= 7.423500061035156) THEN CASE WHEN (`ADS`.`Feature_4` <= 0.659000039100647) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_7` <= 2.022250175476074) THEN 13 ELSE 14 END END END AS node_id_2 
FROM boston AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.805000305175781 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.36017699115046 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.300000190734863 AS threshold, 246 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.177235772357722 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 1.2074000835418701 AS threshold, 140 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.139999999999997 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 50.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 136 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.37941176470589 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 2.003700017929077 AS threshold, 106 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.943396226415096 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.51090909090909 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.566666666666666 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.423500061035156 AS threshold, 93 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 35.42473118279571 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, 0.659000039100647 AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.59454545454544 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 31.21698113207548 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.100000000000001 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, 2.022250175476074 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 42.41578947368423 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.9 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 45.52424242424242 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`AdaBoost_Estim_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 5.269999980926514) THEN CASE WHEN (`ADS`.`Feature_5` <= 7.433000087738037) THEN CASE WHEN (`ADS`.`Feature_7` <= 2.0286498069763184) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_7` <= 3.2074499130249023) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_12` <= 10.184999465942383) THEN CASE WHEN (`ADS`.`Feature_0` <= 6.987714767456055) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_12` <= 19.850000381469727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM boston AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 5.269999980926514 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.616519174041297 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.433000087738037 AS threshold, 75 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 39.95866666666665 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 2.0286498069763184 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.617142857142845 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 50.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.374193548387098 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 3.2074499130249023 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 46.3825 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 49.6578947368421 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 43.41904761904762 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 10.184999465942383 AS threshold, 264 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.257954545454535 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 6.987714767456055 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 26.15116279069768 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 83 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.289156626506035 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 50.0 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_12' AS feature, 19.850000381469727 AS threshold, 178 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.41067415730336 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 120 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.583333333333318 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 58 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.915517241379312 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`AdaBoost_Estim_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_12` <= 7.644999980926514) THEN CASE WHEN (`ADS`.`Feature_5` <= 7.413999557495117) THEN CASE WHEN (`ADS`.`Feature_7` <= 1.4849499464035034) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_11` <= 364.489990234375) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_9` <= 434.5) THEN CASE WHEN (`ADS`.`Feature_5` <= 6.923999786376953) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_12` <= 19.850000381469727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM boston AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 7.644999980926514 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.737168141592935 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 7.413999557495117 AS threshold, 109 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.760550458715585 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 1.4849499464035034 AS threshold, 72 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.083333333333332 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 50.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 69 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 29.217391304347824 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_11' AS feature, 364.489990234375 AS threshold, 37 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 43.86216216216217 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.9 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 47.29374999999999 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_9' AS feature, 434.5 AS threshold, 230 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.513043478260876 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, 6.923999786376953 AS threshold, 129 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.78837209302326 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 114 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.505263157894728 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 31.54 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_12' AS feature, 19.850000381469727 AS threshold, 101 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.329702970297037 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 70 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.32857142857142 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.816129032258065 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`AdaBoost_Estim_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM `DT_Output_3`), 
`AdaBoost_Join_CTE` AS 
(SELECT `AdaBoost_Estim_0`.join_key_0 AS join_key_0, `AdaBoost_Estim_0`.`Estimator_0` AS `Estimator_0`, `AdaBoost_Estim_1`.join_key_1 AS join_key_1, `AdaBoost_Estim_1`.`Estimator_1` AS `Estimator_1`, `AdaBoost_Estim_2`.join_key_2 AS join_key_2, `AdaBoost_Estim_2`.`Estimator_2` AS `Estimator_2`, `AdaBoost_Estim_3`.join_key_3 AS join_key_3, `AdaBoost_Estim_3`.`Estimator_3` AS `Estimator_3` 
FROM `AdaBoost_Estim_0` LEFT OUTER JOIN `AdaBoost_Estim_1` ON `AdaBoost_Estim_0`.join_key_0 = `AdaBoost_Estim_1`.join_key_1 LEFT OUTER JOIN `AdaBoost_Estim_2` ON `AdaBoost_Estim_2`.join_key_2 = `AdaBoost_Estim_1`.join_key_1 LEFT OUTER JOIN `AdaBoost_Estim_3` ON `AdaBoost_Estim_3`.join_key_3 = `AdaBoost_Estim_2`.join_key_2), 
`WeightedEstimators` AS 
(SELECT `Values`.`Key` AS `Key`, `Values`.sub_estimator AS sub_estimator, `Values`.`Weight` AS `Weight`, `Values`.`Value` AS `Value` 
FROM (SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 0 AS sub_estimator, 0.23250696496 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_0` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 1 AS sub_estimator, 0.252193542891 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_1` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 2 AS sub_estimator, 0.262154733142 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_2` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 3 AS sub_estimator, 0.253144759007 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_3` AS `Value` 
FROM `AdaBoost_Join_CTE`) AS `Values`), 
`Cumulative_Frequencies` AS 
(SELECT u1.`Key` AS `Key`, u1.sub_estimator AS sub_estimator, u1.`Weight` AS `Weight`, u1.`Value` AS `Value`, (SELECT sum(u2.`Weight`) AS sum_1 
FROM `WeightedEstimators` AS u2 
WHERE u1.`Key` = u2.`Key` AND u1.`Value` >= u2.`Value`) AS cum_weight 
FROM `WeightedEstimators` AS u1), 
`Quantiles` AS 
(SELECT `AdaBoost_Join_CTE`.join_key_0 AS join_key_0, `AdaBoost_Join_CTE`.`Estimator_0` AS `Estimator_0`, `AdaBoost_Join_CTE`.join_key_1 AS join_key_1, `AdaBoost_Join_CTE`.`Estimator_1` AS `Estimator_1`, `AdaBoost_Join_CTE`.join_key_2 AS join_key_2, `AdaBoost_Join_CTE`.`Estimator_2` AS `Estimator_2`, `AdaBoost_Join_CTE`.join_key_3 AS join_key_3, `AdaBoost_Join_CTE`.`Estimator_3` AS `Estimator_3`, (SELECT min(`Cumulative_Frequencies`.`Value`) AS min_1 
FROM `Cumulative_Frequencies` 
WHERE `AdaBoost_Join_CTE`.join_key_0 = `Cumulative_Frequencies`.`Key` AND `Cumulative_Frequencies`.cum_weight >= 0.5) AS `Median` 
FROM `AdaBoost_Join_CTE`)
 SELECT `Quantiles`.join_key_0 AS `KEY`, `Quantiles`.`Median` AS `Estimator` 
FROM `Quantiles`