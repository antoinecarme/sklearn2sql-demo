-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.00775105461771 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN -0.0480457024162 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.0472353532651 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN -0.0499128324006 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.0265459175268 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.0409618817294 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN -0.103353072964 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN -0.098195556681 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN -0.00753604090621 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN -0.0238693247301 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM `RandomReg_10` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 0.00775105461771) / 0.971828829797 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - -0.0480457024162) / 0.994700025725 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 0.0472353532651) / 0.991335468478 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - -0.0499128324006) / 1.08943953396 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.0265459175268) / 0.731917950839 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 0.0409618817294) / 0.969058692365 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - -0.103353072964) / 0.905359032942 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - -0.098195556681) / 0.978720319189 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - -0.00753604090621) / 0.87990410985 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - -0.0238693247301) / 1.00974859443 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 0.42521876096725464) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= 0.28290244936943054) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.7833816409111023) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= -0.9420179724693298) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.033942416310310364) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.5050817131996155) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.42180365324020386) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, 0.42521876096725464 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.9453934757611875 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_8' AS feature, 0.28290244936943054 AS threshold, 49 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -52.471460972484685 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, -0.7833816409111023 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -95.54799745540743 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -189.59235904008858 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -69.89953520503983 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_3' AS feature, -0.9420179724693298 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.963921004745616 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -148.5169061680019 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.54405886687021 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_4' AS feature, 0.033942416310310364 AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 157.52460836265274 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_5' AS feature, 0.5050817131996155 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 61.73232448504899 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -17.770540768926388 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 141.23518973902438 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_5' AS feature, 0.42180365324020386 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 205.4207503014546 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 229.23929547368263 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 133.9651147847704 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`AdaBoost_Estim_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= -1.0607340335845947) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= -1.8246665000915527) THEN 2 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= 0.9568720459938049) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 0.42521876096725464) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 1.379702091217041) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= -1.3586559295654297) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, -1.0607340335845947 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2856143105819307 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, -1.8246665000915527 AS threshold, 13 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -257.1534289128025 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -343.7550824860327 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_9' AS feature, 0.9568720459938049 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -182.923440135748 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -200.79014870447068 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -75.72318872341164 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_3' AS feature, 0.42521876096725464 AS threshold, 54 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 64.74316175324853 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'scaler_6' AS feature, 1.379702091217041 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.402895798360406 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -21.385392434350578 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 114.96274116765521 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'scaler_4' AS feature, -1.3586559295654297 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 139.3322158663586 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -37.62789436394166 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 165.8762324009037 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`AdaBoost_Estim_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 1.1807421445846558) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= -0.9968216419219971) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.240859031677246) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.09982345253229141) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.9826668500900269) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= 1.1543292999267578) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -0.8194785714149475) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, 1.1807421445846558 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -27.414027312757685 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_3' AS feature, -0.9968216419219971 AS threshold, 59 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -57.56654744333219 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_4' AS feature, 1.240859031677246 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -174.94944029966408 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -192.9905769498918 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -75.72318872341164 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_4' AS feature, 0.09982345253229141 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -24.39312120132533 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -70.64142338438111 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 47.54868219453926 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_7' AS feature, 0.9826668500900269 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 194.96080865022915 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_11' AS feature, 1.1543292999267578 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 233.1089044011127 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 225.7426593633728 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 255.20763951433239 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, -0.8194785714149475 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 156.81271289934563 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 150.2233198111196 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 163.40210598757162 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`AdaBoost_Estim_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 0.48691144585609436) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= -1.1113165616989136) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= -1.8246665000915527) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= -0.43364524841308594) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 1.0066282749176025) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= 1.1807421445846558) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -0.5129785537719727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, 0.48691144585609436 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -34.50848777824593 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_3' AS feature, -1.1113165616989136 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -111.19151864705113 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_11' AS feature, -1.8246665000915527 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -262.8645354093092 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -343.7550824860326 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -195.45574617870636 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_8' AS feature, -0.43364524841308594 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -60.6338463929651 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -142.8160636121187 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07852844200981299 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_10' AS feature, 1.0066282749176025 AS threshold, 23 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 112.18948431859877 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_3' AS feature, 1.1807421445846558 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 63.50068059532802 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.872302918370504 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 152.7574359492431 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_9' AS feature, -0.5129785537719727 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 287.4691777223735 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 244.44488812587127 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 316.15203745337493 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`AdaBoost_Estim_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM `DT_Output_3`), 
`AdaBoost_Join_CTE` AS 
(SELECT `AdaBoost_Estim_0`.join_key_0 AS join_key_0, `AdaBoost_Estim_0`.`Estimator_0` AS `Estimator_0`, `AdaBoost_Estim_1`.join_key_1 AS join_key_1, `AdaBoost_Estim_1`.`Estimator_1` AS `Estimator_1`, `AdaBoost_Estim_2`.join_key_2 AS join_key_2, `AdaBoost_Estim_2`.`Estimator_2` AS `Estimator_2`, `AdaBoost_Estim_3`.join_key_3 AS join_key_3, `AdaBoost_Estim_3`.`Estimator_3` AS `Estimator_3` 
FROM `AdaBoost_Estim_0` LEFT OUTER JOIN `AdaBoost_Estim_1` ON `AdaBoost_Estim_0`.join_key_0 = `AdaBoost_Estim_1`.join_key_1 LEFT OUTER JOIN `AdaBoost_Estim_2` ON `AdaBoost_Estim_2`.join_key_2 = `AdaBoost_Estim_1`.join_key_1 LEFT OUTER JOIN `AdaBoost_Estim_3` ON `AdaBoost_Estim_3`.join_key_3 = `AdaBoost_Estim_2`.join_key_2), 
`WeightedEstimators` AS 
(SELECT `Values`.`Key` AS `Key`, `Values`.sub_estimator AS sub_estimator, `Values`.`Weight` AS `Weight`, `Values`.`Value` AS `Value` 
FROM (SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 0 AS sub_estimator, 0.272816494154 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_0` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 1 AS sub_estimator, 0.189686525921 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_1` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 2 AS sub_estimator, 0.282665931039 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_2` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 3 AS sub_estimator, 0.254831048886 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_3` AS `Value` 
FROM `AdaBoost_Join_CTE`) AS `Values`), 
`Cumulative_Frequencies` AS 
(SELECT u1.`Key` AS `Key`, u1.sub_estimator AS sub_estimator, u1.`Weight` AS `Weight`, u1.`Value` AS `Value`, (SELECT sum(u2.`Weight`) AS sum_1 
FROM `WeightedEstimators` AS u2 
WHERE u1.`Key` = u2.`Key` AND u1.`Value` >= u2.`Value`) AS cum_weight 
FROM `WeightedEstimators` AS u1), 
`Quantiles` AS 
(SELECT `AdaBoost_Join_CTE`.join_key_0 AS join_key_0, `AdaBoost_Join_CTE`.`Estimator_0` AS `Estimator_0`, `AdaBoost_Join_CTE`.join_key_1 AS join_key_1, `AdaBoost_Join_CTE`.`Estimator_1` AS `Estimator_1`, `AdaBoost_Join_CTE`.join_key_2 AS join_key_2, `AdaBoost_Join_CTE`.`Estimator_2` AS `Estimator_2`, `AdaBoost_Join_CTE`.join_key_3 AS join_key_3, `AdaBoost_Join_CTE`.`Estimator_3` AS `Estimator_3`, (SELECT min(`Cumulative_Frequencies`.`Value`) AS min_1 
FROM `Cumulative_Frequencies` 
WHERE `AdaBoost_Join_CTE`.join_key_0 = `Cumulative_Frequencies`.`Key` AND `Cumulative_Frequencies`.cum_weight >= 0.5) AS `Median` 
FROM `AdaBoost_Join_CTE`)
 SELECT `Quantiles`.join_key_0 AS `KEY`, `Quantiles`.`Median` AS `Estimator` 
FROM `Quantiles`