-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.137961443367 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.203925256509 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.0180449279094 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.0788289499978 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -0.10678833762 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN -0.0669308720818 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.0632407887585 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.0804657772474 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.0657143707588 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -0.0832242901394 ELSE [ADS].[Feature_9] END AS impter_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN -0.116313118965 ELSE [ADS].[Feature_10] END AS impter_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN -0.127570359971 ELSE [ADS].[Feature_11] END AS impter_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 0.0451734741563 ELSE [ADS].[Feature_12] END AS impter_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.000583315228373 ELSE [ADS].[Feature_13] END AS impter_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.0234720088823 ELSE [ADS].[Feature_14] END AS impter_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN 0.0801042737592 ELSE [ADS].[Feature_15] END AS impter_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 0.131501591147 ELSE [ADS].[Feature_16] END AS impter_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN -0.03255077605 ELSE [ADS].[Feature_17] END AS impter_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN 0.162907912272 ELSE [ADS].[Feature_18] END AS impter_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN -0.0930041193595 ELSE [ADS].[Feature_19] END AS impter_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN 0.1186271187 ELSE [ADS].[Feature_20] END AS impter_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN -0.229511424226 ELSE [ADS].[Feature_21] END AS impter_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN 0.170006469274 ELSE [ADS].[Feature_22] END AS impter_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN -0.0857367822394 ELSE [ADS].[Feature_23] END AS impter_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN -0.0157613221445 ELSE [ADS].[Feature_24] END AS impter_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN -0.0414674188972 ELSE [ADS].[Feature_25] END AS impter_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN 0.111428081421 ELSE [ADS].[Feature_26] END AS impter_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN 0.0443701991606 ELSE [ADS].[Feature_27] END AS impter_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN 0.064326934756 ELSE [ADS].[Feature_28] END AS impter_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.0525560450315 ELSE [ADS].[Feature_29] END AS impter_31, CASE WHEN ([ADS].[Feature_30] IS NULL) THEN -0.0262671519005 ELSE [ADS].[Feature_30] END AS impter_32, CASE WHEN ([ADS].[Feature_31] IS NULL) THEN -0.12782077549 ELSE [ADS].[Feature_31] END AS impter_33, CASE WHEN ([ADS].[Feature_32] IS NULL) THEN -0.305701373305 ELSE [ADS].[Feature_32] END AS impter_34, CASE WHEN ([ADS].[Feature_33] IS NULL) THEN 0.0397458771626 ELSE [ADS].[Feature_33] END AS impter_35, CASE WHEN ([ADS].[Feature_34] IS NULL) THEN -0.0183662344699 ELSE [ADS].[Feature_34] END AS impter_36, CASE WHEN ([ADS].[Feature_35] IS NULL) THEN -0.218750528085 ELSE [ADS].[Feature_35] END AS impter_37, CASE WHEN ([ADS].[Feature_36] IS NULL) THEN -0.159311776907 ELSE [ADS].[Feature_36] END AS impter_38, CASE WHEN ([ADS].[Feature_37] IS NULL) THEN -0.0130855368205 ELSE [ADS].[Feature_37] END AS impter_39, CASE WHEN ([ADS].[Feature_38] IS NULL) THEN -0.0197807011944 ELSE [ADS].[Feature_38] END AS impter_40, CASE WHEN ([ADS].[Feature_39] IS NULL) THEN 0.124243581712 ELSE [ADS].[Feature_39] END AS impter_41, CASE WHEN ([ADS].[Feature_40] IS NULL) THEN 0.236775584839 ELSE [ADS].[Feature_40] END AS impter_42, CASE WHEN ([ADS].[Feature_41] IS NULL) THEN 0.0824776851921 ELSE [ADS].[Feature_41] END AS impter_43, CASE WHEN ([ADS].[Feature_42] IS NULL) THEN 0.0424126812914 ELSE [ADS].[Feature_42] END AS impter_44, CASE WHEN ([ADS].[Feature_43] IS NULL) THEN -0.0869795191836 ELSE [ADS].[Feature_43] END AS impter_45, CASE WHEN ([ADS].[Feature_44] IS NULL) THEN 0.0136674777677 ELSE [ADS].[Feature_44] END AS impter_46, CASE WHEN ([ADS].[Feature_45] IS NULL) THEN -0.145371490307 ELSE [ADS].[Feature_45] END AS impter_47, CASE WHEN ([ADS].[Feature_46] IS NULL) THEN -0.0520618393583 ELSE [ADS].[Feature_46] END AS impter_48, CASE WHEN ([ADS].[Feature_47] IS NULL) THEN 0.12585861617 ELSE [ADS].[Feature_47] END AS impter_49, CASE WHEN ([ADS].[Feature_48] IS NULL) THEN 0.15262928833 ELSE [ADS].[Feature_48] END AS impter_50, CASE WHEN ([ADS].[Feature_49] IS NULL) THEN -0.127637953856 ELSE [ADS].[Feature_49] END AS impter_51, CASE WHEN ([ADS].[Feature_50] IS NULL) THEN -0.229556973881 ELSE [ADS].[Feature_50] END AS impter_52, CASE WHEN ([ADS].[Feature_51] IS NULL) THEN 0.0906791815339 ELSE [ADS].[Feature_51] END AS impter_53, CASE WHEN ([ADS].[Feature_52] IS NULL) THEN 0.304533539144 ELSE [ADS].[Feature_52] END AS impter_54, CASE WHEN ([ADS].[Feature_53] IS NULL) THEN -0.0397863527799 ELSE [ADS].[Feature_53] END AS impter_55, CASE WHEN ([ADS].[Feature_54] IS NULL) THEN 0.112913875673 ELSE [ADS].[Feature_54] END AS impter_56, CASE WHEN ([ADS].[Feature_55] IS NULL) THEN -0.226001042116 ELSE [ADS].[Feature_55] END AS impter_57, CASE WHEN ([ADS].[Feature_56] IS NULL) THEN 0.0709124249482 ELSE [ADS].[Feature_56] END AS impter_58, CASE WHEN ([ADS].[Feature_57] IS NULL) THEN 0.0798533512996 ELSE [ADS].[Feature_57] END AS impter_59, CASE WHEN ([ADS].[Feature_58] IS NULL) THEN -0.00655446937003 ELSE [ADS].[Feature_58] END AS impter_60, CASE WHEN ([ADS].[Feature_59] IS NULL) THEN 0.0645413955238 ELSE [ADS].[Feature_59] END AS impter_61, CASE WHEN ([ADS].[Feature_60] IS NULL) THEN -0.119896099868 ELSE [ADS].[Feature_60] END AS impter_62, CASE WHEN ([ADS].[Feature_61] IS NULL) THEN 0.0582630057236 ELSE [ADS].[Feature_61] END AS impter_63, CASE WHEN ([ADS].[Feature_62] IS NULL) THEN 0.150294521664 ELSE [ADS].[Feature_62] END AS impter_64, CASE WHEN ([ADS].[Feature_63] IS NULL) THEN -0.00647175393926 ELSE [ADS].[Feature_63] END AS impter_65, CASE WHEN ([ADS].[Feature_64] IS NULL) THEN 0.127562734774 ELSE [ADS].[Feature_64] END AS impter_66, CASE WHEN ([ADS].[Feature_65] IS NULL) THEN -0.0455288671716 ELSE [ADS].[Feature_65] END AS impter_67, CASE WHEN ([ADS].[Feature_66] IS NULL) THEN -0.0190539422925 ELSE [ADS].[Feature_66] END AS impter_68, CASE WHEN ([ADS].[Feature_67] IS NULL) THEN 0.0556932827918 ELSE [ADS].[Feature_67] END AS impter_69, CASE WHEN ([ADS].[Feature_68] IS NULL) THEN -0.110584067917 ELSE [ADS].[Feature_68] END AS impter_70, CASE WHEN ([ADS].[Feature_69] IS NULL) THEN -0.0971555104628 ELSE [ADS].[Feature_69] END AS impter_71, CASE WHEN ([ADS].[Feature_70] IS NULL) THEN -0.130319922392 ELSE [ADS].[Feature_70] END AS impter_72, CASE WHEN ([ADS].[Feature_71] IS NULL) THEN 0.163639586699 ELSE [ADS].[Feature_71] END AS impter_73, CASE WHEN ([ADS].[Feature_72] IS NULL) THEN 0.266929379702 ELSE [ADS].[Feature_72] END AS impter_74, CASE WHEN ([ADS].[Feature_73] IS NULL) THEN -0.1019149839 ELSE [ADS].[Feature_73] END AS impter_75, CASE WHEN ([ADS].[Feature_74] IS NULL) THEN 0.13321030226 ELSE [ADS].[Feature_74] END AS impter_76, CASE WHEN ([ADS].[Feature_75] IS NULL) THEN -0.0525718460032 ELSE [ADS].[Feature_75] END AS impter_77, CASE WHEN ([ADS].[Feature_76] IS NULL) THEN 0.0290688668026 ELSE [ADS].[Feature_76] END AS impter_78, CASE WHEN ([ADS].[Feature_77] IS NULL) THEN 0.0241651934013 ELSE [ADS].[Feature_77] END AS impter_79, CASE WHEN ([ADS].[Feature_78] IS NULL) THEN -0.00119035209685 ELSE [ADS].[Feature_78] END AS impter_80, CASE WHEN ([ADS].[Feature_79] IS NULL) THEN -0.0627449100861 ELSE [ADS].[Feature_79] END AS impter_81, CASE WHEN ([ADS].[Feature_80] IS NULL) THEN 0.130262794233 ELSE [ADS].[Feature_80] END AS impter_82, CASE WHEN ([ADS].[Feature_81] IS NULL) THEN -0.0775500838852 ELSE [ADS].[Feature_81] END AS impter_83, CASE WHEN ([ADS].[Feature_82] IS NULL) THEN 0.0318750138706 ELSE [ADS].[Feature_82] END AS impter_84, CASE WHEN ([ADS].[Feature_83] IS NULL) THEN 0.156317955247 ELSE [ADS].[Feature_83] END AS impter_85, CASE WHEN ([ADS].[Feature_84] IS NULL) THEN 0.282405358014 ELSE [ADS].[Feature_84] END AS impter_86, CASE WHEN ([ADS].[Feature_85] IS NULL) THEN 0.0765632558099 ELSE [ADS].[Feature_85] END AS impter_87, CASE WHEN ([ADS].[Feature_86] IS NULL) THEN -0.245903075456 ELSE [ADS].[Feature_86] END AS impter_88, CASE WHEN ([ADS].[Feature_87] IS NULL) THEN 0.182519019167 ELSE [ADS].[Feature_87] END AS impter_89, CASE WHEN ([ADS].[Feature_88] IS NULL) THEN 0.00846951972712 ELSE [ADS].[Feature_88] END AS impter_90, CASE WHEN ([ADS].[Feature_89] IS NULL) THEN 0.0412159980606 ELSE [ADS].[Feature_89] END AS impter_91, CASE WHEN ([ADS].[Feature_90] IS NULL) THEN -0.00416876237387 ELSE [ADS].[Feature_90] END AS impter_92, CASE WHEN ([ADS].[Feature_91] IS NULL) THEN -0.081391972878 ELSE [ADS].[Feature_91] END AS impter_93, CASE WHEN ([ADS].[Feature_92] IS NULL) THEN -0.0618528143516 ELSE [ADS].[Feature_92] END AS impter_94, CASE WHEN ([ADS].[Feature_93] IS NULL) THEN -0.0973672874056 ELSE [ADS].[Feature_93] END AS impter_95, CASE WHEN ([ADS].[Feature_94] IS NULL) THEN 0.0102345153964 ELSE [ADS].[Feature_94] END AS impter_96, CASE WHEN ([ADS].[Feature_95] IS NULL) THEN -0.0187451237209 ELSE [ADS].[Feature_95] END AS impter_97, CASE WHEN ([ADS].[Feature_96] IS NULL) THEN -0.154146157368 ELSE [ADS].[Feature_96] END AS impter_98, CASE WHEN ([ADS].[Feature_97] IS NULL) THEN 0.140363198927 ELSE [ADS].[Feature_97] END AS impter_99, CASE WHEN ([ADS].[Feature_98] IS NULL) THEN 0.0313401076515 ELSE [ADS].[Feature_98] END AS impter_100, CASE WHEN ([ADS].[Feature_99] IS NULL) THEN -0.0717114437242 ELSE [ADS].[Feature_99] END AS impter_101 
FROM [RandomReg_100] AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - -0.137961443367) / 1.00105835684 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - 0.203925256509) / 0.913183853194 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - 0.0180449279094) / 0.949924352727 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - 0.0788289499978) / 1.00804936955 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - -0.10678833762) / 0.988333077012 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - -0.0669308720818) / 1.0936539778 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - -0.0632407887585) / 0.964269217594 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.0804657772474) / 1.05169769075 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - 0.0657143707588) / 1.03099775253 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - -0.0832242901394) / 0.980755773959 AS scaler_11, (CAST([ADS_imp_1_OUT].impter_12 AS FLOAT) - -0.116313118965) / 0.946958038486 AS scaler_12, (CAST([ADS_imp_1_OUT].impter_13 AS FLOAT) - -0.127570359971) / 0.947507617066 AS scaler_13, (CAST([ADS_imp_1_OUT].impter_14 AS FLOAT) - 0.0451734741563) / 0.953440595148 AS scaler_14, (CAST([ADS_imp_1_OUT].impter_15 AS FLOAT) - -0.000583315228373) / 0.883383981107 AS scaler_15, (CAST([ADS_imp_1_OUT].impter_16 AS FLOAT) - 0.0234720088823) / 1.02165957846 AS scaler_16, (CAST([ADS_imp_1_OUT].impter_17 AS FLOAT) - 0.0801042737592) / 0.903256219569 AS scaler_17, (CAST([ADS_imp_1_OUT].impter_18 AS FLOAT) - 0.131501591147) / 1.01380527391 AS scaler_18, (CAST([ADS_imp_1_OUT].impter_19 AS FLOAT) - -0.03255077605) / 0.952909906008 AS scaler_19, (CAST([ADS_imp_1_OUT].impter_20 AS FLOAT) - 0.162907912272) / 0.91139166082 AS scaler_20, (CAST([ADS_imp_1_OUT].impter_21 AS FLOAT) - -0.0930041193595) / 0.982107947388 AS scaler_21, (CAST([ADS_imp_1_OUT].impter_22 AS FLOAT) - 0.1186271187) / 0.921310323827 AS scaler_22, (CAST([ADS_imp_1_OUT].impter_23 AS FLOAT) - -0.229511424226) / 0.966429109482 AS scaler_23, (CAST([ADS_imp_1_OUT].impter_24 AS FLOAT) - 0.170006469274) / 1.09251932703 AS scaler_24, (CAST([ADS_imp_1_OUT].impter_25 AS FLOAT) - -0.0857367822394) / 1.0884008526 AS scaler_25, (CAST([ADS_imp_1_OUT].impter_26 AS FLOAT) - -0.0157613221445) / 0.985812194282 AS scaler_26, (CAST([ADS_imp_1_OUT].impter_27 AS FLOAT) - -0.0414674188972) / 0.921895521421 AS scaler_27, (CAST([ADS_imp_1_OUT].impter_28 AS FLOAT) - 0.111428081421) / 1.10698740862 AS scaler_28, (CAST([ADS_imp_1_OUT].impter_29 AS FLOAT) - 0.0443701991606) / 1.01545102879 AS scaler_29, (CAST([ADS_imp_1_OUT].impter_30 AS FLOAT) - 0.064326934756) / 0.965272078684 AS scaler_30, (CAST([ADS_imp_1_OUT].impter_31 AS FLOAT) - 0.0525560450315) / 0.884199301542 AS scaler_31, (CAST([ADS_imp_1_OUT].impter_32 AS FLOAT) - -0.0262671519005) / 1.10134736326 AS scaler_32, (CAST([ADS_imp_1_OUT].impter_33 AS FLOAT) - -0.12782077549) / 1.05784447556 AS scaler_33, (CAST([ADS_imp_1_OUT].impter_34 AS FLOAT) - -0.305701373305) / 0.997651806226 AS scaler_34, (CAST([ADS_imp_1_OUT].impter_35 AS FLOAT) - 0.0397458771626) / 0.955012971036 AS scaler_35, (CAST([ADS_imp_1_OUT].impter_36 AS FLOAT) - -0.0183662344699) / 0.856316521493 AS scaler_36, (CAST([ADS_imp_1_OUT].impter_37 AS FLOAT) - -0.218750528085) / 1.02411840398 AS scaler_37, (CAST([ADS_imp_1_OUT].impter_38 AS FLOAT) - -0.159311776907) / 0.836662992837 AS scaler_38, (CAST([ADS_imp_1_OUT].impter_39 AS FLOAT) - -0.0130855368205) / 0.912700373256 AS scaler_39, (CAST([ADS_imp_1_OUT].impter_40 AS FLOAT) - -0.0197807011944) / 0.909411981531 AS scaler_40, (CAST([ADS_imp_1_OUT].impter_41 AS FLOAT) - 0.124243581712) / 1.12388144994 AS scaler_41, (CAST([ADS_imp_1_OUT].impter_42 AS FLOAT) - 0.236775584839) / 1.13405966638 AS scaler_42, (CAST([ADS_imp_1_OUT].impter_43 AS FLOAT) - 0.0824776851921) / 0.97769592894 AS scaler_43, (CAST([ADS_imp_1_OUT].impter_44 AS FLOAT) - 0.0424126812914) / 1.01626226259 AS scaler_44, (CAST([ADS_imp_1_OUT].impter_45 AS FLOAT) - -0.0869795191836) / 1.15363155496 AS scaler_45, (CAST([ADS_imp_1_OUT].impter_46 AS FLOAT) - 0.0136674777677) / 1.0596593969 AS scaler_46, (CAST([ADS_imp_1_OUT].impter_47 AS FLOAT) - -0.145371490307) / 0.946996468579 AS scaler_47, (CAST([ADS_imp_1_OUT].impter_48 AS FLOAT) - -0.0520618393583) / 1.10812913517 AS scaler_48, (CAST([ADS_imp_1_OUT].impter_49 AS FLOAT) - 0.12585861617) / 1.15726011231 AS scaler_49, (CAST([ADS_imp_1_OUT].impter_50 AS FLOAT) - 0.15262928833) / 1.05731781939 AS scaler_50, (CAST([ADS_imp_1_OUT].impter_51 AS FLOAT) - -0.127637953856) / 0.92171611187 AS scaler_51, (CAST([ADS_imp_1_OUT].impter_52 AS FLOAT) - -0.229556973881) / 1.0224044281 AS scaler_52, (CAST([ADS_imp_1_OUT].impter_53 AS FLOAT) - 0.0906791815339) / 0.827992705304 AS scaler_53, (CAST([ADS_imp_1_OUT].impter_54 AS FLOAT) - 0.304533539144) / 1.06769024417 AS scaler_54, (CAST([ADS_imp_1_OUT].impter_55 AS FLOAT) - -0.0397863527799) / 1.01422229314 AS scaler_55, (CAST([ADS_imp_1_OUT].impter_56 AS FLOAT) - 0.112913875673) / 0.994417585985 AS scaler_56, (CAST([ADS_imp_1_OUT].impter_57 AS FLOAT) - -0.226001042116) / 1.06533682185 AS scaler_57, (CAST([ADS_imp_1_OUT].impter_58 AS FLOAT) - 0.0709124249482) / 1.09149646249 AS scaler_58, (CAST([ADS_imp_1_OUT].impter_59 AS FLOAT) - 0.0798533512996) / 1.01630279481 AS scaler_59, (CAST([ADS_imp_1_OUT].impter_60 AS FLOAT) - -0.00655446937003) / 0.885048639932 AS scaler_60, (CAST([ADS_imp_1_OUT].impter_61 AS FLOAT) - 0.0645413955238) / 1.01664380428 AS scaler_61, (CAST([ADS_imp_1_OUT].impter_62 AS FLOAT) - -0.119896099868) / 0.931708873797 AS scaler_62, (CAST([ADS_imp_1_OUT].impter_63 AS FLOAT) - 0.0582630057236) / 1.10130903092 AS scaler_63, (CAST([ADS_imp_1_OUT].impter_64 AS FLOAT) - 0.150294521664) / 0.951527060767 AS scaler_64, (CAST([ADS_imp_1_OUT].impter_65 AS FLOAT) - -0.00647175393926) / 0.872501350163 AS scaler_65, (CAST([ADS_imp_1_OUT].impter_66 AS FLOAT) - 0.127562734774) / 0.763331507239 AS scaler_66, (CAST([ADS_imp_1_OUT].impter_67 AS FLOAT) - -0.0455288671716) / 1.0436171771 AS scaler_67, (CAST([ADS_imp_1_OUT].impter_68 AS FLOAT) - -0.0190539422925) / 0.915351320019 AS scaler_68, (CAST([ADS_imp_1_OUT].impter_69 AS FLOAT) - 0.0556932827918) / 1.03303486667 AS scaler_69, (CAST([ADS_imp_1_OUT].impter_70 AS FLOAT) - -0.110584067917) / 0.947389226763 AS scaler_70, (CAST([ADS_imp_1_OUT].impter_71 AS FLOAT) - -0.0971555104628) / 1.0441847347 AS scaler_71, (CAST([ADS_imp_1_OUT].impter_72 AS FLOAT) - -0.130319922392) / 0.848580764901 AS scaler_72, (CAST([ADS_imp_1_OUT].impter_73 AS FLOAT) - 0.163639586699) / 0.955729647598 AS scaler_73, (CAST([ADS_imp_1_OUT].impter_74 AS FLOAT) - 0.266929379702) / 1.19481487001 AS scaler_74, (CAST([ADS_imp_1_OUT].impter_75 AS FLOAT) - -0.1019149839) / 1.06203910623 AS scaler_75, (CAST([ADS_imp_1_OUT].impter_76 AS FLOAT) - 0.13321030226) / 0.948593540238 AS scaler_76, (CAST([ADS_imp_1_OUT].impter_77 AS FLOAT) - -0.0525718460032) / 0.918438492424 AS scaler_77, (CAST([ADS_imp_1_OUT].impter_78 AS FLOAT) - 0.0290688668026) / 1.02985286616 AS scaler_78, (CAST([ADS_imp_1_OUT].impter_79 AS FLOAT) - 0.0241651934013) / 0.799771751357 AS scaler_79, (CAST([ADS_imp_1_OUT].impter_80 AS FLOAT) - -0.00119035209685) / 1.11119457358 AS scaler_80, (CAST([ADS_imp_1_OUT].impter_81 AS FLOAT) - -0.0627449100861) / 1.0392681152 AS scaler_81, (CAST([ADS_imp_1_OUT].impter_82 AS FLOAT) - 0.130262794233) / 1.09513574587 AS scaler_82, (CAST([ADS_imp_1_OUT].impter_83 AS FLOAT) - -0.0775500838852) / 0.949663319257 AS scaler_83, (CAST([ADS_imp_1_OUT].impter_84 AS FLOAT) - 0.0318750138706) / 1.07548957444 AS scaler_84, (CAST([ADS_imp_1_OUT].impter_85 AS FLOAT) - 0.156317955247) / 0.980295127064 AS scaler_85, (CAST([ADS_imp_1_OUT].impter_86 AS FLOAT) - 0.282405358014) / 0.913856112678 AS scaler_86, (CAST([ADS_imp_1_OUT].impter_87 AS FLOAT) - 0.0765632558099) / 0.905156115411 AS scaler_87, (CAST([ADS_imp_1_OUT].impter_88 AS FLOAT) - -0.245903075456) / 0.922617352506 AS scaler_88, (CAST([ADS_imp_1_OUT].impter_89 AS FLOAT) - 0.182519019167) / 1.0022422262 AS scaler_89, (CAST([ADS_imp_1_OUT].impter_90 AS FLOAT) - 0.00846951972712) / 0.997907559263 AS scaler_90, (CAST([ADS_imp_1_OUT].impter_91 AS FLOAT) - 0.0412159980606) / 1.08770759668 AS scaler_91, (CAST([ADS_imp_1_OUT].impter_92 AS FLOAT) - -0.00416876237387) / 0.988286710123 AS scaler_92, (CAST([ADS_imp_1_OUT].impter_93 AS FLOAT) - -0.081391972878) / 0.983500501287 AS scaler_93, (CAST([ADS_imp_1_OUT].impter_94 AS FLOAT) - -0.0618528143516) / 0.974854877005 AS scaler_94, (CAST([ADS_imp_1_OUT].impter_95 AS FLOAT) - -0.0973672874056) / 0.992050268503 AS scaler_95, (CAST([ADS_imp_1_OUT].impter_96 AS FLOAT) - 0.0102345153964) / 1.18497493617 AS scaler_96, (CAST([ADS_imp_1_OUT].impter_97 AS FLOAT) - -0.0187451237209) / 1.03926647395 AS scaler_97, (CAST([ADS_imp_1_OUT].impter_98 AS FLOAT) - -0.154146157368) / 1.11625756661 AS scaler_98, (CAST([ADS_imp_1_OUT].impter_99 AS FLOAT) - 0.140363198927) / 0.839111720967 AS scaler_99, (CAST([ADS_imp_1_OUT].impter_100 AS FLOAT) - 0.0313401076515) / 0.791775884247 AS scaler_100, (CAST([ADS_imp_1_OUT].impter_101 AS FLOAT) - -0.0717114437242) / 0.956206402293 AS scaler_101 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_91 <= -0.6157737970352173) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_40 <= 0.5837728977203369) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_79 <= -1.138398289680481) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_72 <= -0.17592093348503113) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_49 <= -1.511174201965332) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_67 <= -0.9429162740707397) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_58 <= 0.1320069283246994) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_91' AS feature, -0.6157737970352173 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.07765943978162 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_40' AS feature, 0.5837728977203369 AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -167.19965720813653 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_79' AS feature, -1.138398289680481 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -285.3065128456283 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -115.73953581280176 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -322.9880632973675 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_72' AS feature, -0.17592093348503113 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 49.32957812726493 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 41.39597082632622 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 88.99761463195848 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_49' AS feature, -1.511174201965332 AS threshold, 50 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 94.47194710007379 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_67' AS feature, -0.9429162740707397 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -265.30747017107177 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -113.8584815521084 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -341.0319644805534 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_58' AS feature, 0.1320069283246994 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 117.43659075567884 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 42.29497479788833 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 210.46906765580042 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_91 <= 0.7921377420425415) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_64 <= -1.396496057510376) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_39 <= -0.7851990461349487) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_70 <= 1.6952067613601685) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_91 <= 1.8019740581512451) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_30 <= 0.6809698939323425) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_16 <= 0.6620100736618042) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_91' AS feature, 0.7921377420425415 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.674799633682362 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_64' AS feature, -1.396496057510376 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -103.80019926001297 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_39' AS feature, -0.7851990461349487 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 365.5533314146283 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 420.88828850325325 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 254.88341723737844 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_70' AS feature, 1.6952067613601685 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -135.09043463832236 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -105.96920291243903 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -433.5830598286266 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_91' AS feature, 1.8019740581512451 AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 335.1379547335441 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_30' AS feature, 0.6809698939323425 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 370.2744696920078 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 381.55265619355123 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 291.32716418120367 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_16' AS feature, 0.6620100736618042 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 147.74320828840465 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 202.75482889346225 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.23739798587582 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_28 <= 0.826736330986023) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_44 <= 0.3387078642845154) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_73 <= -0.4936485290527344) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_85 <= 0.8709511756896973) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= 0.3585273027420044) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_49 <= 0.679935872554779) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_58 <= -0.005571141839027405) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, 0.826736330986023 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 64.83040380508008 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.3387078642845154 AS threshold, 42 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -58.87897894634242 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_73' AS feature, -0.4936485290527344 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 57.396238384273666 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -88.28745910816228 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 117.38364323410026 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_85' AS feature, 0.8709511756896973 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -213.91260205383054 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -166.8179453757024 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -378.743900427279 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_7' AS feature, 0.3585273027420044 AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 272.66216682746995 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_49' AS feature, 0.679935872554779 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 200.70069677163724 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 247.73972893005435 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 47.82384225678176 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_58' AS feature, -0.005571141839027405 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 425.58029069611416 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 381.26801970768827 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 440.3510476922561 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.4249902367591858) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_53 <= -0.8836168050765991) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_97 <= -0.8306458592414856) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_34 <= -0.13312768936157227) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.2256958484649658) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_41 <= -0.6631177067756653) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_61 <= -0.40917158126831055) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, -0.4249902367591858 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -33.63698360895473 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_53' AS feature, -0.8836168050765991 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -178.64564514561917 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_97' AS feature, -0.8306458592414856 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 242.5254369193106 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 202.75482889346225 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 282.296044945159 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_34' AS feature, -0.13312768936157227 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -204.17116527076638 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -62.713918429638326 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -274.8997886913304 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_5' AS feature, -1.2256958484649658 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 124.96623994677203 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_41' AS feature, -0.6631177067756653 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 412.14539135346274 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 447.6214960084754 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 358.9312343709437 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_61' AS feature, -0.40917158126831055 AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 71.78491561219974 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 232.9972926138437 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.360583661624332 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Estimator_0] AS [Estimator_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Estimator_1] AS [Estimator_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Estimator_2] AS [Estimator_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Estimator_3] AS [Estimator_3] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2), 
[WeightedEstimators] AS 
(SELECT [Values].[Key] AS [Key], [Values].sub_estimator AS sub_estimator, [Values].[Weight] AS [Weight], [Values].[Value] AS [Value] 
FROM (SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 0 AS sub_estimator, 0.242764610357 AS [Weight], [AdaBoost_Join_CTE].[Estimator_0] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 1 AS sub_estimator, 0.234320083313 AS [Weight], [AdaBoost_Join_CTE].[Estimator_1] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 2 AS sub_estimator, 0.242868934721 AS [Weight], [AdaBoost_Join_CTE].[Estimator_2] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 3 AS sub_estimator, 0.280046371609 AS [Weight], [AdaBoost_Join_CTE].[Estimator_3] AS [Value] 
FROM [AdaBoost_Join_CTE]) AS [Values]), 
[Cumulative_Frequencies] AS 
(SELECT u1.[Key] AS [Key], u1.sub_estimator AS sub_estimator, u1.[Weight] AS [Weight], u1.[Value] AS [Value], (SELECT sum(u2.[Weight]) AS sum_1 
FROM [WeightedEstimators] AS u2 
WHERE u1.[Key] = u2.[Key] AND u1.[Value] >= u2.[Value]) AS cum_weight 
FROM [WeightedEstimators] AS u1), 
[Quantiles] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS join_key_0, [AdaBoost_Join_CTE].[Estimator_0] AS [Estimator_0], [AdaBoost_Join_CTE].join_key_1 AS join_key_1, [AdaBoost_Join_CTE].[Estimator_1] AS [Estimator_1], [AdaBoost_Join_CTE].join_key_2 AS join_key_2, [AdaBoost_Join_CTE].[Estimator_2] AS [Estimator_2], [AdaBoost_Join_CTE].join_key_3 AS join_key_3, [AdaBoost_Join_CTE].[Estimator_3] AS [Estimator_3], (SELECT min([Cumulative_Frequencies].[Value]) AS min_1 
FROM [Cumulative_Frequencies] 
WHERE [AdaBoost_Join_CTE].join_key_0 = [Cumulative_Frequencies].[Key] AND [Cumulative_Frequencies].cum_weight >= 0.5) AS [Median] 
FROM [AdaBoost_Join_CTE])
 SELECT [Quantiles].join_key_0 AS [KEY], [Quantiles].[Median] AS [Estimator] 
FROM [Quantiles]