-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 46.5477812359 ELSE [ADS].[Feature_0] END AS imputer_output_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 823.349944849 ELSE [ADS].[Feature_1] END AS imputer_output_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.449199831419 ELSE [ADS].[Feature_2] END AS imputer_output_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 6.93528035794 ELSE [ADS].[Feature_3] END AS imputer_output_5 
FROM freidman2 AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].imputer_output_2 AS FLOAT) - 46.5477812359) / 29.6583887005 AS scaler_output_2, (CAST([ADS_imp_1_OUT].imputer_output_3 AS FLOAT) - 823.349944849) / 400.480863362 AS scaler_output_3, (CAST([ADS_imp_1_OUT].imputer_output_4 AS FLOAT) - 0.449199831419) / 0.281167779002 AS scaler_output_4, (CAST([ADS_imp_1_OUT].imputer_output_5 AS FLOAT) - 6.93528035794) / 2.97335530497 AS scaler_output_5 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.7485134601593018) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 1.0849690437316895) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_5 <= -1.8121529817581177) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.025363340973854065) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.018639713525772095) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.806257963180542) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.7406756281852722) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, 0.7485134601593018 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 394.2491807143634 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_output_3' AS feature, 1.0849690437316895 AS threshold, 51 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 278.9787819145811 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_output_5' AS feature, -1.8121529817581177 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 169.90353459705705 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 592.2825601180841 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 157.4806220817327 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_output_4' AS feature, 0.025363340973854065 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 517.580885421665 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 392.76366801074124 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 792.178763725697 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_output_3' AS feature, 0.018639713525772095 AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 761.6735768886701 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_output_3' AS feature, -0.806257963180542 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 435.4712250455926 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 359.8045687265782 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 536.3601001376117 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_output_3' AS feature, 0.7406756281852722 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1015.3865172110638 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 803.3912540860349 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1184.982727711087 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, [DT_Output].[Estimator] AS [Estimator_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.7485134601593018) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.7328634262084961) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.33302879333496094) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.4698045253753662) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= 0.7406756281852722) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.4669739902019501) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.3502117395401) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, 0.7485134601593018 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 416.07987407849856 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_output_3' AS feature, 0.7328634262084961 AS threshold, 51 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 304.8375478742738 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -0.33302879333496094 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 226.6938340814269 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 139.80241065545266 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 304.43879188361444 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_output_4' AS feature, -0.4698045253753662 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 492.38246097710606 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 270.2226017009221 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 640.4890338278952 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_output_3' AS feature, 0.7406756281852722 AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 770.6647888544655 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_output_3' AS feature, -0.4669739902019501 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 539.9756494670048 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 350.44183019582437 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 729.5094687381854 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_output_4' AS feature, 1.3502117395401 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1155.1466878335666 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1105.3355342901802 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1254.768994920339 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, [DT_Output_1].[Estimator] AS [Estimator_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.581242561340332) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.8750172257423401) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -1.2246878147125244) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.03601336479187012) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.20461390912532806) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.43046098947525024) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.26662227511405945) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -0.581242561340332 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 385.9543049498152 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, -0.8750172257423401 AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 129.2411636973624 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -1.2246878147125244 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 65.10317969444458 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.17501852841636 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 127.8876631925292 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, -0.03601336479187012 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 257.517131703198 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 147.59138655684754 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 279.50228073246814 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_output_3' AS feature, -0.20461390912532806 AS threshold, 49 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 480.25709153234885 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, 0.43046098947525024 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 321.926747651675 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 225.37804161962652 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 381.34133597908937 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_output_4' AS feature, 0.26662227511405945 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 599.0048494428547 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 482.49536553082487 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 844.969315479362 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, [DT_Output_2].[Estimator] AS [Estimator_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.17252054810523987) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 1.1405174732208252) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_2 <= -0.038126230239868164) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_3 <= -0.9011286497116089) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.021230312064290047) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= -0.581242561340332) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_output_4 <= 0.6267497539520264) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, -0.17252054810523987 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 434.98297613759905 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, 1.1405174732208252 AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 270.695101693367 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, -0.038126230239868164 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 210.02808336003747 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 157.23888397655477 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 273.37512262021676 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, -0.9011286497116089 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 461.36287359811655 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 354.9635638730054 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 541.16235589195 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, -0.021230312064290047 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 560.36056452925 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, -0.581242561340332 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 334.50849474930834 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 229.9872832608758 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 407.67334279121104 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_output_4' AS feature, 0.6267497539520264 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 743.1931924463458 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 620.7831040068263 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 942.1095861605656 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, [DT_Output_3].[Estimator] AS [Estimator_3] 
FROM [DT_Output_3]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Estimator_0] AS [Estimator_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Estimator_1] AS [Estimator_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Estimator_2] AS [Estimator_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Estimator_3] AS [Estimator_3] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2), 
[WeightedEstimators] AS 
(SELECT [Values].[Key] AS [Key], [Values].sub_estimator AS sub_estimator, [Values].[Weight] AS [Weight], [Values].[Value] AS [Value] 
FROM (SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 0 AS sub_estimator, 0.29898371346 AS [Weight], [AdaBoost_Join_CTE].[Estimator_0] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 1 AS sub_estimator, 0.196070338264 AS [Weight], [AdaBoost_Join_CTE].[Estimator_1] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 2 AS sub_estimator, 0.308300648148 AS [Weight], [AdaBoost_Join_CTE].[Estimator_2] AS [Value] 
FROM [AdaBoost_Join_CTE] UNION ALL SELECT [AdaBoost_Join_CTE].join_key_0 AS [Key], 3 AS sub_estimator, 0.196645300128 AS [Weight], [AdaBoost_Join_CTE].[Estimator_3] AS [Value] 
FROM [AdaBoost_Join_CTE]) AS [Values]), 
[Cumulative_Frequencies] AS 
(SELECT u1.[Key] AS [Key], u1.sub_estimator AS sub_estimator, u1.[Weight] AS [Weight], u1.[Value] AS [Value], (SELECT sum(u2.[Weight]) AS sum_1 
FROM [WeightedEstimators] AS u2 
WHERE u1.[Key] = u2.[Key] AND u1.[Value] >= u2.[Value]) AS cum_weight 
FROM [WeightedEstimators] AS u1), 
[Quantiles] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS join_key_0, [AdaBoost_Join_CTE].[Estimator_0] AS [Estimator_0], [AdaBoost_Join_CTE].join_key_1 AS join_key_1, [AdaBoost_Join_CTE].[Estimator_1] AS [Estimator_1], [AdaBoost_Join_CTE].join_key_2 AS join_key_2, [AdaBoost_Join_CTE].[Estimator_2] AS [Estimator_2], [AdaBoost_Join_CTE].join_key_3 AS join_key_3, [AdaBoost_Join_CTE].[Estimator_3] AS [Estimator_3], (SELECT min([Cumulative_Frequencies].[Value]) AS min_1 
FROM [Cumulative_Frequencies] 
WHERE [AdaBoost_Join_CTE].join_key_0 = [Cumulative_Frequencies].[Key] AND [Cumulative_Frequencies].cum_weight >= 0.5) AS [Median] 
FROM [AdaBoost_Join_CTE])
 SELECT [Quantiles].join_key_0 AS [KEY], [Quantiles].[Median] AS [Estimator] 
FROM [Quantiles]