-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_48` <= 0.09750157594680786) THEN CASE WHEN (`ADS`.`Feature_83` <= -1.6591355800628662) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_2` <= 1.4116039276123047) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS`.`Feature_36` <= -1.5893553495407104) THEN 7 ELSE 8 END END AS node_id_2 
FROM `BinaryClass_100` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_48' AS feature, 0.09750157594680786 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4626865671641791 AS `Proba_0`, -0.770705414906 AS `LogProba_0`, 0.5373134328358209 AS `Proba_1`, -0.621173680935 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_83' AS feature, -1.6591355800628662 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9375 AS `Proba_0`, -0.0645385211376 AS `LogProba_0`, 0.0625 AS `Proba_1`, -2.77258872224 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 1.4116039276123047 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.967741935483871 AS `Proba_0`, -0.032789822823 AS `LogProba_0`, 0.03225806451612903 AS `Proba_1`, -3.43398720449 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_36' AS feature, -1.5893553495407104 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.02857142857142857 AS `Proba_0`, -3.55534806149 AS `LogProba_0`, 0.9714285714285714 AS `Proba_1`, -0.0289875368733 AS `LogProba_1`, 1 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 1 AS `Decision`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Decision` AS `Decision` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id)
 SELECT `DT_Output`.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, `DT_Output`.`Proba_0` AS `Proba_0`, `DT_Output`.`Proba_1` AS `Proba_1`, `DT_Output`.`LogProba_0` AS `LogProba_0`, `DT_Output`.`LogProba_1` AS `LogProba_1`, `DT_Output`.`Decision` AS `Decision` 
FROM `DT_Output`