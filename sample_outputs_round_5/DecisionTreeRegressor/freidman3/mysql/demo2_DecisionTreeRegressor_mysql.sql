-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.15052103996276855) THEN CASE WHEN (`ADS`.`Feature_3` <= 9.130830764770508) THEN CASE WHEN (`ADS`.`Feature_0` <= 31.879302978515625) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.11753638088703156) THEN CASE WHEN (`ADS`.`Feature_1` <= 732.2028198242188) THEN 6 ELSE 7 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 6.395828723907471) THEN 9 ELSE 10 END END END ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 211.83901977539062) THEN CASE WHEN (`ADS`.`Feature_3` <= 4.549114227294922) THEN 14 ELSE CASE WHEN (`ADS`.`Feature_0` <= 55.98125457763672) THEN 16 ELSE 17 END END ELSE CASE WHEN (`ADS`.`Feature_0` <= 66.42634582519531) THEN CASE WHEN (`ADS`.`Feature_1` <= 465.14288330078125) THEN CASE WHEN (`ADS`.`Feature_3` <= 9.42445182800293) THEN 21 ELSE 22 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 37.39979553222656) THEN 24 ELSE 25 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.6177456378936768) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.5581523180007935) THEN 28 ELSE 29 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 909.8729858398438) THEN 31 ELSE 32 END END END END END AS node_id_2 
FROM freidman3 AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.15052103996276855 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.368163846656058 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 9.130830764770508 AS threshold, 7 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.978660190200987 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 31.879302978515625 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8870236073942337 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.134640030728731 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_2' AS feature, 0.11753638088703156 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8375003227273343 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 732.2028198242188 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.748995569520407 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7080172268879671 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7694847408366269 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 6.395828723907471 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9702574525377252 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9339733038586244 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.006541601216826 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5284796870415072 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 211.83901977539062 AS threshold, 60 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4136059399091503 AS `Estimator` UNION ALL SELECT 13 AS node_id, 'Feature_3' AS feature, 4.549114227294922 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.892556377494576 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6873313970480824 AS `Estimator` UNION ALL SELECT 15 AS node_id, 'Feature_0' AS feature, 55.98125457763672 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9951688677178228 AS `Estimator` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0640399025478282 AS `Estimator` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9262978328878172 AS `Estimator` UNION ALL SELECT 18 AS node_id, 'Feature_0' AS feature, 66.42634582519531 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4410296010888641 AS `Estimator` UNION ALL SELECT 19 AS node_id, 'Feature_1' AS feature, 465.14288330078125 AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4911230962392885 AS `Estimator` UNION ALL SELECT 20 AS node_id, 'Feature_3' AS feature, 9.42445182800293 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3956674622272598 AS `Estimator` UNION ALL SELECT 21 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3760437940186225 AS `Estimator` UNION ALL SELECT 22 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4937858032704456 AS `Estimator` UNION ALL SELECT 23 AS node_id, 'Feature_0' AS feature, 37.39979553222656 AS threshold, 30 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5102142230416944 AS `Estimator` UNION ALL SELECT 24 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5328971622196286 AS `Estimator` UNION ALL SELECT 25 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.476189814274792 AS `Estimator` UNION ALL SELECT 26 AS node_id, 'Feature_2' AS feature, 0.6177456378936768 AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3551550379738526 AS `Estimator` UNION ALL SELECT 27 AS node_id, 'Feature_2' AS feature, 0.5581523180007935 AS threshold, 10 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.247510672834687 AS `Estimator` UNION ALL SELECT 28 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2890358192188134 AS `Estimator` UNION ALL SELECT 29 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.081410087298181 AS `Estimator` UNION ALL SELECT 30 AS node_id, 'Feature_1' AS feature, 909.8729858398438 AS threshold, 11 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4530135517367306 AS `Estimator` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4116406964599455 AS `Estimator` UNION ALL SELECT 32 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4874909311340516 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id)
 SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Estimator` AS `Estimator` 
FROM `DT_Output`