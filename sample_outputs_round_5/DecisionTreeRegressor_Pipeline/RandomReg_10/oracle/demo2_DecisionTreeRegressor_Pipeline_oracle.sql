-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0669701904596 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0120971834835 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.200861579343 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.00125627634938 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.137786478722 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.117252165519 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.0688476530169 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0160346004726 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0874942762568 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.144228447583 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "RandomReg_10" "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0669701904596) / 0.815271327718 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.0120971834835) / 1.15323327451 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.200861579343) / 0.968667128513 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.00125627634938) / 1.05726162254 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.137786478722) / 0.763415244405 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.117252165519) / 1.04283017851 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.0688476530169) / 1.01809637301 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0160346004726) / 1.04206810593 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0874942762568) / 0.83727604271 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.144228447583) / 1.10480462781 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.8590143918991089) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -1.5333633422851562) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -1.2816379070281982) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.322665810585022) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.0667734146118164) THEN 7 ELSE 8 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 1.1530170440673828) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.509453296661377) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.20358723402023315) THEN 12 ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.43564745783805847) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.14931102097034454) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.17194214463233948) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.3794324994087219) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.7404115200042725) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6485562920570374) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.029180534183979034) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.6149262189865112) THEN 28 ELSE 29 END ELSE 30 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.17227837443351746) THEN 32 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.7506535649299622) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.2485477477312088) THEN 37 ELSE 38 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_8' AS feature, 0.8590143918991089 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -13.036729561171006 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, -1.5333633422851562 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -45.30734815743478 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_4' AS feature, -1.2816379070281982 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -291.2626227182065 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -471.95636758391913 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_9' AS feature, -1.322665810585022 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -231.03137442963558 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -245.98342447455803 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_5' AS feature, -0.0667734146118164 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -223.55534940717433 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -227.0215628074286 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -220.08913600692009 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_4' AS feature, 1.1530170440673828 AS threshold, 53 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -26.74468592643314 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'scaler_2' AS feature, -0.509453296661377 AS threshold, 45 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -52.181316969794956 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_4' AS feature, -0.20358723402023315 AS threshold, 15 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -118.2514317925632 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -182.78135383264672 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -44.50294946103919 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_6' AS feature, -0.43564745783805847 AS threshold, 30 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -19.146259558410865 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.04385039974377 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -48.606332863847285 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_11' AS feature, -0.14931102097034454 AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 116.33636369247726 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_10' AS feature, -0.17194214463233948 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.8590766625272 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -59.231469857890865 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 66.90434992273623 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, 'scaler_9' AS feature, -0.3794324994087219 AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 171.2227359104473 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 205.20516141925796 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.24909764723131 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, 'scaler_8' AS feature, 1.7404115200042725 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 170.9057964375325 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, 'scaler_9' AS feature, 0.6485562920570374 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 112.59070774029193 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, 'scaler_5' AS feature, -0.029180534183979034 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.059336004385784 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, 'scaler_9' AS feature, -0.6149262189865112 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.190097757630441 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -39.001311675221366 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.715509201165021 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 133.80763729043446 AS "Estimator" FROM DUAL UNION ALL SELECT 31 AS node_id, 'scaler_10' AS feature, -0.17227837443351746 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 197.12207947619808 AS "Estimator" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 145.03275014263352 AS "Estimator" FROM DUAL UNION ALL SELECT 33 AS node_id, 'scaler_9' AS feature, 0.7506535649299622 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 214.48518925405293 AS "Estimator" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 192.27591200804744 AS "Estimator" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 225.5898278770557 AS "Estimator" FROM DUAL UNION ALL SELECT 36 AS node_id, 'scaler_7' AS feature, -0.2485477477312088 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 404.16615122649455 AS "Estimator" FROM DUAL UNION ALL SELECT 37 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 351.80198004690266 AS "Estimator" FROM DUAL UNION ALL SELECT 38 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 456.5303224060865 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"