-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.832422285162 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.213250446291 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.107890523927 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.125459590382 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.0346096028881 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.116564058807 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.00630054635951 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.823642510559 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.581496813882 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.143575312956 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "FourClass_10" "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.832422285162) / 1.4011626095 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.213250446291) / 1.62017023678 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.107890523927) / 1.00026720914 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.125459590382) / 1.51069160238 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - -0.0346096028881) / 1.44132318455 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.116564058807) / 1.07959443642 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.00630054635951) / 0.872778934851 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.823642510559) / 1.69802112613 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.581496813882) / 1.36086525445 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.143575312956) / 0.994587608643 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
random_number_cte AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", dbms_random.value AS uniform 
FROM "ADS_sca_2_OUT"), 
multinomial_cte AS 
(SELECT random_number_cte."KEY" AS "KEY", CASE WHEN (random_number_cte.uniform <= 0.253731343284) THEN 0 ELSE CASE WHEN (random_number_cte.uniform <= 0.55223880597) THEN 1 ELSE CASE WHEN (random_number_cte.uniform <= 0.746268656716) THEN 2 ELSE CASE WHEN (random_number_cte.uniform <= 1.0) THEN 3 END END END END AS multinomial_expr 
FROM random_number_cte), 
dummy_class_reg_cte AS 
(SELECT multinomial_cte."KEY" AS "KEY", 0.253731343284 AS "Proba_0", CASE WHEN (0.253731343284 IS NULL OR 0.253731343284 > 0.0) THEN ln(0.253731343284) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", 0.298507462687 AS "Proba_1", CASE WHEN (0.298507462687 IS NULL OR 0.298507462687 > 0.0) THEN ln(0.298507462687) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", 0.194029850746 AS "Proba_2", CASE WHEN (0.194029850746 IS NULL OR 0.194029850746 > 0.0) THEN ln(0.194029850746) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", 0.253731343284 AS "Proba_3", CASE WHEN (0.253731343284 IS NULL OR 0.253731343284 > 0.0) THEN ln(0.253731343284) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", multinomial_cte.multinomial_expr AS "Decision" 
FROM multinomial_cte)
 SELECT dummy_class_reg_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", dummy_class_reg_cte."Proba_0" AS "Proba_0", dummy_class_reg_cte."Proba_1" AS "Proba_1", dummy_class_reg_cte."Proba_2" AS "Proba_2", dummy_class_reg_cte."Proba_3" AS "Proba_3", dummy_class_reg_cte."LogProba_0" AS "LogProba_0", dummy_class_reg_cte."LogProba_1" AS "LogProba_1", dummy_class_reg_cte."LogProba_2" AS "LogProba_2", dummy_class_reg_cte."LogProba_3" AS "LogProba_3", dummy_class_reg_cte."Decision" AS "Decision" 
FROM dummy_class_reg_cte