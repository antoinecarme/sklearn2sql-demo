-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `RawScores` AS 
(SELECT `ADS`.`KEY` AS `KEY`, NULL AS `LogProba_0`, NULL AS `Proba_0`, -0.708185057924 + (-0.5 * -0.27228828192 - (0.5 * (`ADS`.`Feature_0` - -1.01838392911) * (`ADS`.`Feature_0` - -1.01838392911)) / 0.121217921595) + (-0.5 * 1.69121864282 - (0.5 * (`ADS`.`Feature_1` - -0.0344657467466) * (`ADS`.`Feature_1` - -0.0344657467466)) / 0.863588908643) + (-0.5 * 1.73924614679 - (0.5 * (`ADS`.`Feature_2` - 0.265535729554) * (`ADS`.`Feature_2` - 0.265535729554)) / 0.906077061581) + (-0.5 * 1.67616276528 - (0.5 * (`ADS`.`Feature_3` - -0.0466983823959) * (`ADS`.`Feature_3` - -0.0466983823959)) / 0.850684209343) + (-0.5 * 2.12286497899 - (0.5 * (`ADS`.`Feature_4` - -0.00499941141866) * (`ADS`.`Feature_4` - -0.00499941141866)) / 1.32974595482) + (-0.5 * 2.00914827031 - (0.5 * (`ADS`.`Feature_5` - 0.0935056117829) * (`ADS`.`Feature_5` - 0.0935056117829)) / 1.18681257358) + (-0.5 * 0.729014235827 - (0.5 * (`ADS`.`Feature_6` - 0.555667724738) * (`ADS`.`Feature_6` - 0.555667724738)) / 0.329933938613) + (-0.5 * 1.55192760277 - (0.5 * (`ADS`.`Feature_7` - -0.0457566772436) * (`ADS`.`Feature_7` - -0.0457566772436)) / 0.751300582984) + (-0.5 * 1.67040561264 - (0.5 * (`ADS`.`Feature_8` - -0.0213310987774) * (`ADS`.`Feature_8` - -0.0213310987774)) / 0.845800761367) + (-0.5 * -3.82956969079 - (0.5 * (`ADS`.`Feature_9` - 0.127760466351) * (`ADS`.`Feature_9` - 0.127760466351)) / 0.00345667976125) AS `Score_0`, NULL AS `LogProba_1`, NULL AS `Proba_1`, -0.678332094775 + (-0.5 * 1.13614712304 - (0.5 * (`ADS`.`Feature_0` - 0.928452010729) * (`ADS`.`Feature_0` - 0.928452010729)) / 0.495726981978) + (-0.5 * 1.89210122957 - (0.5 * (`ADS`.`Feature_1` - 0.0952298234888) * (`ADS`.`Feature_1` - 0.0952298234888)) / 1.05572122944) + (-0.5 * 1.85648425407 - (0.5 * (`ADS`.`Feature_2` - 0.0638745961427) * (`ADS`.`Feature_2` - 0.0638745961427)) / 1.01878138011) + (-0.5 * 2.19938236721 - (0.5 * (`ADS`.`Feature_3` - 0.0696089352946) * (`ADS`.`Feature_3` - 0.0696089352946)) / 1.43548863121) + (-0.5 * 2.23755630841 - (0.5 * (`ADS`.`Feature_4` - -0.114331864423) * (`ADS`.`Feature_4` - -0.114331864423)) / 1.49134625967) + (-0.5 * 2.0568919483 - (0.5 * (`ADS`.`Feature_5` - -0.188723246028) * (`ADS`.`Feature_5` - -0.188723246028)) / 1.24484980227) + (-0.5 * 0.954591665918 - (0.5 * (`ADS`.`Feature_6` - -0.456540288667) * (`ADS`.`Feature_6` - -0.456540288667)) / 0.413422419804) + (-0.5 * 2.06493473139 - (0.5 * (`ADS`.`Feature_7` - 0.00195830642417) * (`ADS`.`Feature_7` - 0.00195830642417)) / 1.25490222977) + (-0.5 * 1.65363177736 - (0.5 * (`ADS`.`Feature_8` - -0.0407364572008) * (`ADS`.`Feature_8` - -0.0407364572008)) / 0.831731764111) + (-0.5 * -2.65172168213 - (0.5 * (`ADS`.`Feature_9` - -0.122206083111) * (`ADS`.`Feature_9` - -0.122206083111)) / 0.0112251470128) AS `Score_1` 
FROM `BinaryClass_10` AS `ADS`), 
orig_cte AS 
(SELECT `RawScores`.`KEY` AS `KEY`, `RawScores`.`Score_0` AS `Score_0`, `RawScores`.`Score_1` AS `Score_1`, `RawScores`.`Proba_0` AS `Proba_0`, `RawScores`.`Proba_1` AS `Proba_1`, `RawScores`.`LogProba_0` AS `LogProba_0`, `RawScores`.`LogProba_1` AS `LogProba_1`, NULL AS `Decision` 
FROM `RawScores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1` 
FROM score_soft_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM arg_max_cte