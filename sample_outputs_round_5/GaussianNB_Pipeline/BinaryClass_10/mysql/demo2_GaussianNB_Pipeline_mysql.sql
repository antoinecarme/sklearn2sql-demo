-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN -0.00902193653584 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN -0.135992716185 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.129649830152 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.00858676936356 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN -0.0129726798379 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.0738757764922 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 0.0787125853208 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN -0.125034207236 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.141035064755 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.110347337335 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM `BinaryClass_10` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - -0.00902193653584) / 1.39853472908 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - -0.135992716185) / 1.08180305336 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 0.129649830152) / 1.41045498499 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.00858676936356) / 0.967988308056 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - -0.0129726798379) / 1.09597021617 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 0.0738757764922) / 1.3484223814 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - 0.0787125853208) / 0.94981323579 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - -0.125034207236) / 0.917945615353 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.141035064755) / 0.889170256899 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 0.110347337335) / 1.40261405253 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
`RawScores` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, NULL AS `LogProba_0`, NULL AS `Proba_0`, -0.738956716591 + (-0.5 * 1.17394328051 - (0.5 * (`ADS_sca_2_OUT`.scaler_2 - -0.704767036327) * (`ADS_sca_2_OUT`.scaler_2 - -0.704767036327)) / 0.514822145812) + (-0.5 * 2.09741760448 - (0.5 * (`ADS_sca_2_OUT`.scaler_3 - 0.117397536927) * (`ADS_sca_2_OUT`.scaler_3 - 0.117397536927)) / 1.29633433354) + (-0.5 * 1.54684280441 - (0.5 * (`ADS_sca_2_OUT`.scaler_4 - -0.019586771701) * (`ADS_sca_2_OUT`.scaler_4 - -0.019586771701)) / 0.747490067073) + (-0.5 * 2.01011671629 - (0.5 * (`ADS_sca_2_OUT`.scaler_5 - 0.0965491224768) * (`ADS_sca_2_OUT`.scaler_5 - 0.0965491224768)) / 1.18796249417) + (-0.5 * 1.85446384644 - (0.5 * (`ADS_sca_2_OUT`.scaler_6 - -0.0694011329033) * (`ADS_sca_2_OUT`.scaler_6 - -0.0694011329033)) / 1.0167251044) + (-0.5 * 1.61193700358 - (0.5 * (`ADS_sca_2_OUT`.scaler_7 - -0.668591976366) * (`ADS_sca_2_OUT`.scaler_7 - -0.668591976366)) / 0.797765916068) + (-0.5 * 2.13931855629 - (0.5 * (`ADS_sca_2_OUT`.scaler_8 - 0.0711404165731) * (`ADS_sca_2_OUT`.scaler_8 - 0.0711404165731)) / 1.35180601849) + (-0.5 * 1.94856553151 - (0.5 * (`ADS_sca_2_OUT`.scaler_9 - -0.0689811346631) * (`ADS_sca_2_OUT`.scaler_9 - -0.0689811346631)) / 1.11704685356) + (-0.5 * 1.97208650815 - (0.5 * (`ADS_sca_2_OUT`.scaler_10 - 0.220088897285) * (`ADS_sca_2_OUT`.scaler_10 - 0.220088897285)) / 1.14363231891) + (-0.5 * 1.72444622019 - (0.5 * (`ADS_sca_2_OUT`.scaler_11 - -0.512893371524) * (`ADS_sca_2_OUT`.scaler_11 - -0.512893371524)) / 0.892765932412) AS `Score_0`, NULL AS `LogProba_1`, NULL AS `Proba_1`, -0.649344557902 + (-0.5 * 1.28322286539 - (0.5 * (`ADS_sca_2_OUT`.scaler_2 - 0.644358433213) * (`ADS_sca_2_OUT`.scaler_2 - 0.644358433213)) / 0.574270809125) + (-0.5 * 1.48824032963 - (0.5 * (`ADS_sca_2_OUT`.scaler_3 - -0.107334890905) * (`ADS_sca_2_OUT`.scaler_3 - -0.107334890905)) / 0.704944123483) + (-0.5 * 2.04504957705 - (0.5 * (`ADS_sca_2_OUT`.scaler_4 - 0.0179079055552) * (`ADS_sca_2_OUT`.scaler_4 - 0.0179079055552)) / 1.23019477517) + (-0.5 * 1.62941723399 - (0.5 * (`ADS_sca_2_OUT`.scaler_5 - -0.0882734834074) * (`ADS_sca_2_OUT`.scaler_5 - -0.0882734834074)) / 0.811833643437) + (-0.5 * 1.81386977342 - (0.5 * (`ADS_sca_2_OUT`.scaler_6 - 0.0634524643687) * (`ADS_sca_2_OUT`.scaler_6 - 0.0634524643687)) / 0.976278589746) + (-0.5 * 0.927896021997 - (0.5 * (`ADS_sca_2_OUT`.scaler_7 - 0.611284092678) * (`ADS_sca_2_OUT`.scaler_7 - 0.611284092678)) / 0.402531854189) + (-0.5 * 1.43663962034 - (0.5 * (`ADS_sca_2_OUT`.scaler_8 - -0.0650426665812) * (`ADS_sca_2_OUT`.scaler_8 - -0.0650426665812)) / 0.66949107414) + (-0.5 * 1.71532243107 - (0.5 * (`ADS_sca_2_OUT`.scaler_9 - 0.0630684659777) * (`ADS_sca_2_OUT`.scaler_9 - 0.0630684659777)) / 0.884657570059) + (-0.5 * 1.59440410888 - (0.5 * (`ADS_sca_2_OUT`.scaler_10 - -0.201224134661) * (`ADS_sca_2_OUT`.scaler_10 - -0.201224134661)) / 0.783900674354) + (-0.5 * 1.38788713848 - (0.5 * (`ADS_sca_2_OUT`.scaler_11 - 0.468931082536) * (`ADS_sca_2_OUT`.scaler_11 - 0.468931082536)) / 0.637634573893) AS `Score_1` 
FROM `ADS_sca_2_OUT`), 
orig_cte AS 
(SELECT `RawScores`.`KEY` AS `KEY`, `RawScores`.`Score_0` AS `Score_0`, `RawScores`.`Score_1` AS `Score_1`, `RawScores`.`Proba_0` AS `Proba_0`, `RawScores`.`Proba_1` AS `Proba_1`, `RawScores`.`LogProba_0` AS `LogProba_0`, `RawScores`.`LogProba_1` AS `LogProba_1`, NULL AS `Decision` 
FROM `RawScores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1` 
FROM score_soft_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM arg_max_cte