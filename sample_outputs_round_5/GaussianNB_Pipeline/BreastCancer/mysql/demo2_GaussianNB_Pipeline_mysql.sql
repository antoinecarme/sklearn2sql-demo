-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 14.0831968504 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 19.0191076115 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 91.7118897638 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 652.424671916 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.0968055380577 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.104805485564 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 0.0876977427822 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.0489006430446 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.18112335958 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.0630376115486 ELSE `ADS`.`Feature_9` END AS impter_11, CASE WHEN (`ADS`.`Feature_10` IS NULL) THEN 0.410748293963 ELSE `ADS`.`Feature_10` END AS impter_12, CASE WHEN (`ADS`.`Feature_11` IS NULL) THEN 1.21939501312 ELSE `ADS`.`Feature_11` END AS impter_13, CASE WHEN (`ADS`.`Feature_12` IS NULL) THEN 2.90654488189 ELSE `ADS`.`Feature_12` END AS impter_14, CASE WHEN (`ADS`.`Feature_13` IS NULL) THEN 41.1231023622 ELSE `ADS`.`Feature_13` END AS impter_15, CASE WHEN (`ADS`.`Feature_14` IS NULL) THEN 0.00706835170604 ELSE `ADS`.`Feature_14` END AS impter_16, CASE WHEN (`ADS`.`Feature_15` IS NULL) THEN 0.025598015748 ELSE `ADS`.`Feature_15` END AS impter_17, CASE WHEN (`ADS`.`Feature_16` IS NULL) THEN 0.0315339183727 ELSE `ADS`.`Feature_16` END AS impter_18, CASE WHEN (`ADS`.`Feature_17` IS NULL) THEN 0.0119848766404 ELSE `ADS`.`Feature_17` END AS impter_19, CASE WHEN (`ADS`.`Feature_18` IS NULL) THEN 0.0207874829396 ELSE `ADS`.`Feature_18` END AS impter_20, CASE WHEN (`ADS`.`Feature_19` IS NULL) THEN 0.00389341286089 ELSE `ADS`.`Feature_19` END AS impter_21, CASE WHEN (`ADS`.`Feature_20` IS NULL) THEN 16.1808923885 ELSE `ADS`.`Feature_20` END AS impter_22, CASE WHEN (`ADS`.`Feature_21` IS NULL) THEN 25.2414435696 ELSE `ADS`.`Feature_21` END AS impter_23, CASE WHEN (`ADS`.`Feature_22` IS NULL) THEN 106.690393701 ELSE `ADS`.`Feature_22` END AS impter_24, CASE WHEN (`ADS`.`Feature_23` IS NULL) THEN 872.238582677 ELSE `ADS`.`Feature_23` END AS impter_25, CASE WHEN (`ADS`.`Feature_24` IS NULL) THEN 0.132393937008 ELSE `ADS`.`Feature_24` END AS impter_26, CASE WHEN (`ADS`.`Feature_25` IS NULL) THEN 0.251353989501 ELSE `ADS`.`Feature_25` END AS impter_27, CASE WHEN (`ADS`.`Feature_26` IS NULL) THEN 0.263815637795 ELSE `ADS`.`Feature_26` END AS impter_28, CASE WHEN (`ADS`.`Feature_27` IS NULL) THEN 0.114107792651 ELSE `ADS`.`Feature_27` END AS impter_29, CASE WHEN (`ADS`.`Feature_28` IS NULL) THEN 0.288911286089 ELSE `ADS`.`Feature_28` END AS impter_30, CASE WHEN (`ADS`.`Feature_29` IS NULL) THEN 0.0838917060367 ELSE `ADS`.`Feature_29` END AS impter_31 
FROM `BreastCancer` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 14.0831968504) / 3.58372360357 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 19.0191076115) / 4.16872919973 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 91.7118897638) / 24.7405030131 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 652.424671916) / 361.406340946 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.0968055380577) / 0.0142750282315 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 0.104805485564) / 0.052564640227 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - 0.0876977427822) / 0.0789716395799 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 0.0489006430446) / 0.0390994514233 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.18112335958) / 0.0277256176537 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 0.0630376115486) / 0.00705628740437 AS scaler_11, (CAST(`ADS_imp_1_OUT`.impter_12 AS DOUBLE) - 0.410748293963) / 0.299028974585 AS scaler_12, (CAST(`ADS_imp_1_OUT`.impter_13 AS DOUBLE) - 1.21939501312) / 0.554118745057 AS scaler_13, (CAST(`ADS_imp_1_OUT`.impter_14 AS DOUBLE) - 2.90654488189) / 2.19671897682 AS scaler_14, (CAST(`ADS_imp_1_OUT`.impter_15 AS DOUBLE) - 41.1231023622) / 50.0238619245 AS scaler_15, (CAST(`ADS_imp_1_OUT`.impter_16 AS DOUBLE) - 0.00706835170604) / 0.00286192611154 AS scaler_16, (CAST(`ADS_imp_1_OUT`.impter_17 AS DOUBLE) - 0.025598015748) / 0.0177969043718 AS scaler_17, (CAST(`ADS_imp_1_OUT`.impter_18 AS DOUBLE) - 0.0315339183727) / 0.0294145736829 AS scaler_18, (CAST(`ADS_imp_1_OUT`.impter_19 AS DOUBLE) - 0.0119848766404) / 0.00634557179163 AS scaler_19, (CAST(`ADS_imp_1_OUT`.impter_20 AS DOUBLE) - 0.0207874829396) / 0.00846130427006 AS scaler_20, (CAST(`ADS_imp_1_OUT`.impter_21 AS DOUBLE) - 0.00389341286089) / 0.00282534669377 AS scaler_21, (CAST(`ADS_imp_1_OUT`.impter_22 AS DOUBLE) - 16.1808923885) / 4.8559275363 AS scaler_22, (CAST(`ADS_imp_1_OUT`.impter_23 AS DOUBLE) - 25.2414435696) / 6.00010024108 AS scaler_23, (CAST(`ADS_imp_1_OUT`.impter_24 AS DOUBLE) - 106.690393701) / 33.9442803133 AS scaler_24, (CAST(`ADS_imp_1_OUT`.impter_25 AS DOUBLE) - 872.238582677) / 572.065477877 AS scaler_25, (CAST(`ADS_imp_1_OUT`.impter_26 AS DOUBLE) - 0.132393937008) / 0.0230922755997 AS scaler_26, (CAST(`ADS_imp_1_OUT`.impter_27 AS DOUBLE) - 0.251353989501) / 0.15283768085 AS scaler_27, (CAST(`ADS_imp_1_OUT`.impter_28 AS DOUBLE) - 0.263815637795) / 0.197727633616 AS scaler_28, (CAST(`ADS_imp_1_OUT`.impter_29 AS DOUBLE) - 0.114107792651) / 0.0658849454932 AS scaler_29, (CAST(`ADS_imp_1_OUT`.impter_30 AS DOUBLE) - 0.288911286089) / 0.060405414696 AS scaler_30, (CAST(`ADS_imp_1_OUT`.impter_31 AS DOUBLE) - 0.0838917060367) / 0.0170341598582 AS scaler_31 
FROM `ADS_imp_1_OUT`), 
`RawScores` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, NULL AS `LogProba_0`, NULL AS `Proba_0`, -1.03014448939 + (-0.5 * 1.65179322788 - (0.5 * (`ADS_sca_2_OUT`.scaler_2 - 0.986825275375) * (`ADS_sca_2_OUT`.scaler_2 - 0.986825275375)) / 0.830203988981) + (-0.5 * 1.51266858783 - (0.5 * (`ADS_sca_2_OUT`.scaler_3 - 0.493611008333) * (`ADS_sca_2_OUT`.scaler_3 - 0.493611008333)) / 0.722376737866) + (-0.5 * 1.62817036794 - (0.5 * (`ADS_sca_2_OUT`.scaler_4 - 1.00460205773) * (`ADS_sca_2_OUT`.scaler_4 - 1.00460205773)) / 0.810822026443) + (-0.5 * 1.96199900366 - (0.5 * (`ADS_sca_2_OUT`.scaler_5 - 0.954008958463) * (`ADS_sca_2_OUT`.scaler_5 - 0.954008958463)) / 1.13215391432) + (-0.5 * 1.67366573495 - (0.5 * (`ADS_sca_2_OUT`.scaler_6 - 0.489237120495) * (`ADS_sca_2_OUT`.scaler_6 - 0.489237120495)) / 0.848562674939) + (-0.5 * 1.89797452623 - (0.5 * (`ADS_sca_2_OUT`.scaler_7 - 0.832577691004) * (`ADS_sca_2_OUT`.scaler_7 - 0.832577691004)) / 1.06194003799) + (-0.5 * 1.7194765456 - (0.5 * (`ADS_sca_2_OUT`.scaler_8 - 0.957850095482) * (`ADS_sca_2_OUT`.scaler_8 - 0.957850095482)) / 0.888340182621) + (-0.5 * 1.54574273251 - (0.5 * (`ADS_sca_2_OUT`.scaler_9 - 1.06571236177) * (`ADS_sca_2_OUT`.scaler_9 - 1.06571236177)) / 0.746668226381) + (-0.5 * 1.83531932337 - (0.5 * (`ADS_sca_2_OUT`.scaler_10 - 0.440271074616) * (`ADS_sca_2_OUT`.scaler_10 - 0.440271074616)) / 0.997445525202) + (-0.5 * 2.00400096095 - (0.5 * (`ADS_sca_2_OUT`.scaler_11 - -0.00587207912513) * (`ADS_sca_2_OUT`.scaler_11 - -0.00587207912513)) / 1.18071937734) + (-0.5 * 2.30676328755 - (0.5 * (`ADS_sca_2_OUT`.scaler_12 - 0.770029945024) * (`ADS_sca_2_OUT`.scaler_12 - 0.770029945024)) / 1.59821314555) + (-0.5 * 1.76975182275 - (0.5 * (`ADS_sca_2_OUT`.scaler_13 - 0.000883467135045) * (`ADS_sca_2_OUT`.scaler_13 - 0.000883467135045)) / 0.934143470701) + (-0.5 * 2.34699389332 - (0.5 * (`ADS_sca_2_OUT`.scaler_14 - 0.764485374597) * (`ADS_sca_2_OUT`.scaler_14 - 0.764485374597)) / 1.66382110385) + (-0.5 * 2.49480468156 - (0.5 * (`ADS_sca_2_OUT`.scaler_15 - 0.721819943084) * (`ADS_sca_2_OUT`.scaler_15 - 0.721819943084)) / 1.92885703018) + (-0.5 * 1.58893394185 - (0.5 * (`ADS_sca_2_OUT`.scaler_16 - -0.101540604024) * (`ADS_sca_2_OUT`.scaler_16 - -0.101540604024)) / 0.779624313603) + (-0.5 * 1.79724000125 - (0.5 * (`ADS_sca_2_OUT`.scaler_17 - 0.399601409714) * (`ADS_sca_2_OUT`.scaler_17 - 0.399601409714)) / 0.960177548607) + (-0.5 * 1.08310814448 - (0.5 * (`ADS_sca_2_OUT`.scaler_18 - 0.339906812454) * (`ADS_sca_2_OUT`.scaler_18 - 0.339906812454)) / 0.470119236425) + (-0.5 * 1.5502883122 - (0.5 * (`ADS_sca_2_OUT`.scaler_19 - 0.557914281098) * (`ADS_sca_2_OUT`.scaler_19 - 0.557914281098)) / 0.750069991951) + (-0.5 * 2.33717268393 - (0.5 * (`ADS_sca_2_OUT`.scaler_20 - 0.0332259304775) * (`ADS_sca_2_OUT`.scaler_20 - 0.0332259304775)) / 1.64756034923) + (-0.5 * 1.10870426526 - (0.5 * (`ADS_sca_2_OUT`.scaler_21 - 0.0864699995513) * (`ADS_sca_2_OUT`.scaler_21 - 0.0864699995513)) / 0.482307789575) + (-0.5 * 1.57176009515 - (0.5 * (`ADS_sca_2_OUT`.scaler_22 - 1.052728901) * (`ADS_sca_2_OUT`.scaler_22 - 1.052728901)) / 0.766349481393) + (-0.5 * 1.62954864544 - (0.5 * (`ADS_sca_2_OUT`.scaler_23 - 0.544235606731) * (`ADS_sca_2_OUT`.scaler_23 - 0.544235606731)) / 0.811940334685) + (-0.5 * 1.55225348482 - (0.5 * (`ADS_sca_2_OUT`.scaler_24 - 1.06223094996) * (`ADS_sca_2_OUT`.scaler_24 - 1.06223094996)) / 0.751545458255) + (-0.5 * 1.94566374337 - (0.5 * (`ADS_sca_2_OUT`.scaler_25 - 0.993446705595) * (`ADS_sca_2_OUT`.scaler_25 - 0.993446705595)) / 1.11381011868) + (-0.5 * 1.8612667545 - (0.5 * (`ADS_sca_2_OUT`.scaler_26 - 0.558282739126) * (`ADS_sca_2_OUT`.scaler_26 - 0.558282739126)) / 1.02366537204) + (-0.5 * 2.04017805782 - (0.5 * (`ADS_sca_2_OUT`.scaler_27 - 0.80888908023) * (`ADS_sca_2_OUT`.scaler_27 - 0.80888908023)) / 1.2242164313) + (-0.5 * 1.63821505897 - (0.5 * (`ADS_sca_2_OUT`.scaler_28 - 0.910713300113) * (`ADS_sca_2_OUT`.scaler_28 - 0.910713300113)) / 0.819007524755) + (-0.5 * 1.09465111592 - (0.5 * (`ADS_sca_2_OUT`.scaler_29 - 1.08231680676) * (`ADS_sca_2_OUT`.scaler_29 - 1.08231680676)) / 0.475577249591) + (-0.5 * 2.24332375209 - (0.5 * (`ADS_sca_2_OUT`.scaler_30 - 0.537783534865) * (`ADS_sca_2_OUT`.scaler_30 - 0.537783534865)) / 1.49997236661) + (-0.5 * 2.18195523775 - (0.5 * (`ADS_sca_2_OUT`.scaler_31 - 0.426533915667) * (`ADS_sca_2_OUT`.scaler_31 - 0.426533915667)) / 1.41068890664) AS `Score_0`, NULL AS `LogProba_1`, NULL AS `Proba_1`, -0.441541164582 + (-0.5 * 0.465918923429 - (0.5 * (`ADS_sca_2_OUT`.scaler_2 - -0.54778872429) * (`ADS_sca_2_OUT`.scaler_2 - -0.54778872429)) / 0.25360986864) + (-0.5 * 1.78001398575 - (0.5 * (`ADS_sca_2_OUT`.scaler_3 - -0.274004478095) * (`ADS_sca_2_OUT`.scaler_3 - -0.274004478095)) / 0.943779160207) + (-0.5 * 0.384626835567 - (0.5 * (`ADS_sca_2_OUT`.scaler_4 - -0.557656652453) * (`ADS_sca_2_OUT`.scaler_4 - -0.557656652453)) / 0.233809118168) + (-0.5 * -0.121277803879 - (0.5 * (`ADS_sca_2_OUT`.scaler_5 - -0.5295723198) * (`ADS_sca_2_OUT`.scaler_5 - -0.5295723198)) / 0.140977514875) + (-0.5 * 1.70713497405 - (0.5 * (`ADS_sca_2_OUT`.scaler_6 - -0.27157652403) * (`ADS_sca_2_OUT`.scaler_6 - -0.27157652403)) / 0.877444044737) + (-0.5 * 0.836113391702 - (0.5 * (`ADS_sca_2_OUT`.scaler_7 - -0.462165575414) * (`ADS_sca_2_OUT`.scaler_7 - -0.462165575414)) / 0.367231193323) + (-0.5 * 0.528468284835 - (0.5 * (`ADS_sca_2_OUT`.scaler_8 - -0.531704542798) * (`ADS_sca_2_OUT`.scaler_8 - -0.531704542798)) / 0.269979626139) + (-0.5 * 0.00658214406876 - (0.5 * (`ADS_sca_2_OUT`.scaler_9 - -0.59157910694) * (`ADS_sca_2_OUT`.scaler_9 - -0.59157910694)) / 0.160205979097) + (-0.5 * 1.6564615208 - (0.5 * (`ADS_sca_2_OUT`.scaler_10 - -0.244395372032) * (`ADS_sca_2_OUT`.scaler_10 - -0.244395372032)) / 0.834088684783) + (-0.5 * 1.73213041034 - (0.5 * (`ADS_sca_2_OUT`.scaler_11 - 0.00325960310621) * (`ADS_sca_2_OUT`.scaler_11 - 0.00325960310621)) / 0.899652540718) + (-0.5 * -0.0195372552721 - (0.5 * (`ADS_sca_2_OUT`.scaler_12 - -0.427445193972) * (`ADS_sca_2_OUT`.scaler_12 - -0.427445193972)) / 0.156075670555) + (-0.5 * 1.87378115255 - (0.5 * (`ADS_sca_2_OUT`.scaler_13 - -0.000490414409656) * (`ADS_sca_2_OUT`.scaler_13 - -0.000490414409656)) / 1.0365564216) + (-0.5 * -0.225681640635 - (0.5 * (`ADS_sca_2_OUT`.scaler_14 - -0.424367391613) * (`ADS_sca_2_OUT`.scaler_14 - -0.424367391613)) / 0.127001204662) + (-0.5 * -1.52542876306 - (0.5 * (`ADS_sca_2_OUT`.scaler_15 - -0.400683723508) * (`ADS_sca_2_OUT`.scaler_15 - -0.400683723508)) / 0.0346206196956) + (-0.5 * 1.9453229107 - (0.5 * (`ADS_sca_2_OUT`.scaler_16 - 0.0563653965193) * (`ADS_sca_2_OUT`.scaler_16 - 0.0563653965193)) / 1.11343056049) + (-0.5 * 1.71487541374 - (0.5 * (`ADS_sca_2_OUT`.scaler_17 - -0.221819558045) * (`ADS_sca_2_OUT`.scaler_17 - -0.221819558045)) / 0.884262201165) + (-0.5 * 2.01552271493 - (0.5 * (`ADS_sca_2_OUT`.scaler_18 - -0.18868296528) * (`ADS_sca_2_OUT`.scaler_18 - -0.18868296528)) / 1.19440200813) + (-0.5 * 1.69865784227 - (0.5 * (`ADS_sca_2_OUT`.scaler_19 - -0.309699356038) * (`ADS_sca_2_OUT`.scaler_19 - -0.309699356038)) / 0.870037274373) + (-0.5 * 1.39094123034 - (0.5 * (`ADS_sca_2_OUT`.scaler_20 - -0.0184437818161) * (`ADS_sca_2_OUT`.scaler_20 - -0.0184437818161)) / 0.639584945244) + (-0.5 * 2.08545368735 - (0.5 * (`ADS_sca_2_OUT`.scaler_21 - -0.0479996732203) * (`ADS_sca_2_OUT`.scaler_21 - -0.0479996732203)) / 1.28091750373) + (-0.5 * 0.0835523281657 - (0.5 * (`ADS_sca_2_OUT`.scaler_22 - -0.58437196137) * (`ADS_sca_2_OUT`.scaler_22 - -0.58437196137)) / 0.17302403937) + (-0.5 * 1.67383590621 - (0.5 * (`ADS_sca_2_OUT`.scaler_23 - -0.302106295981) * (`ADS_sca_2_OUT`.scaler_23 - -0.302106295981)) / 0.848707088204) + (-0.5 * 0.0293399270982 - (0.5 * (`ADS_sca_2_OUT`.scaler_24 - -0.589646568139) * (`ADS_sca_2_OUT`.scaler_24 - -0.589646568139)) / 0.163893715198) + (-0.5 * -0.628869253156 - (0.5 * (`ADS_sca_2_OUT`.scaler_25 - -0.551464293718) * (`ADS_sca_2_OUT`.scaler_25 - -0.551464293718)) / 0.0848605193144) + (-0.5 * 1.50632515694 - (0.5 * (`ADS_sca_2_OUT`.scaler_26 - -0.309903887842) * (`ADS_sca_2_OUT`.scaler_26 - -0.309903887842)) / 0.717808894172) + (-0.5 * 0.669006026134 - (0.5 * (`ADS_sca_2_OUT`.scaler_27 - -0.44901597923) * (`ADS_sca_2_OUT`.scaler_27 - -0.44901597923)) / 0.310717530906) + (-0.5 * 0.882062675623 - (0.5 * (`ADS_sca_2_OUT`.scaler_28 - -0.505538811491) * (`ADS_sca_2_OUT`.scaler_28 - -0.505538811491)) / 0.384498884663) + (-0.5 * 0.564554491443 - (0.5 * (`ADS_sca_2_OUT`.scaler_29 - -0.600796268242) * (`ADS_sca_2_OUT`.scaler_29 - -0.600796268242)) / 0.279900086068) + (-0.5 * 1.08880612479 - (0.5 * (`ADS_sca_2_OUT`.scaler_30 - -0.298524737721) * (`ADS_sca_2_OUT`.scaler_30 - -0.298524737721)) / 0.472805612772) + (-0.5 * 1.35170408838 - (0.5 * (`ADS_sca_2_OUT`.scaler_31 - -0.236769847064) * (`ADS_sca_2_OUT`.scaler_31 - -0.236769847064)) / 0.614975420879) AS `Score_1` 
FROM `ADS_sca_2_OUT`), 
orig_cte AS 
(SELECT `RawScores`.`KEY` AS `KEY`, `RawScores`.`Score_0` AS `Score_0`, `RawScores`.`Score_1` AS `Score_1`, `RawScores`.`Proba_0` AS `Proba_0`, `RawScores`.`Proba_1` AS `Proba_1`, `RawScores`.`LogProba_0` AS `LogProba_0`, `RawScores`.`LogProba_1` AS `LogProba_1`, NULL AS `Decision` 
FROM `RawScores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1` 
FROM score_soft_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM arg_max_cte