-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_35` <= 4.8230085372924805) THEN CASE WHEN (`ADS`.`Feature_94` <= -5.5347676277160645) THEN CASE WHEN (`ADS`.`Feature_87` <= 0.9442267417907715) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_49` <= -2.9106063842773438) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_6` <= 2.0146067142486572) THEN 9 ELSE 10 END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_35' AS feature, 4.8230085372924805 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03089305360817751 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_94' AS feature, -5.5347676277160645 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0923072938822171 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_87' AS feature, 0.9442267417907715 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5101517225112254 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9866451364765861 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.1269768032213685 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_49' AS feature, -2.9106063842773438 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.13458511959403763 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0701658333723914 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8991212654191829 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, 2.0146067142486572 AS threshold, 6 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5934850558445588 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.126976803221369 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9866451364765861 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_81` <= -1.0866494178771973) THEN CASE WHEN (`ADS`.`Feature_53` <= -1.532287836074829) THEN CASE WHEN (`ADS`.`Feature_92` <= -0.9264968037605286) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_61` <= -4.03700065612793) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_64` <= -1.4147629737854004) THEN CASE WHEN (`ADS`.`Feature_18` <= -7.043006896972656) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_85` <= 2.141869068145752) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_81' AS feature, -1.0866494178771973 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00876978404715952 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_53' AS feature, -1.532287836074829 AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25278413575537456 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_92' AS feature, -0.9264968037605286 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6404764872561727 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0031025973068524 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.0256433924437593 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_61' AS feature, -4.03700065612793 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.02016872485489564 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.972418916223311 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6560053244721419 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_64' AS feature, -1.4147629737854004 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.15475336719275992 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_18' AS feature, -7.043006896972656 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4976802492722213 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0031025973068524 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.972418916223311 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_85' AS feature, 2.141869068145752 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2216696355481426 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9966748770486277 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9724189162233112 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_0_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Estimator` AS `Estimator_0_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= 0.040844958275556564) THEN CASE WHEN (`ADS`.`Feature_10` <= -3.706557512283325) THEN CASE WHEN (`ADS`.`Feature_0` <= -0.2858046889305115) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_7` <= 6.140906810760498) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_61` <= 1.1508468389511108) THEN CASE WHEN (`ADS`.`Feature_88` <= 0.009112966246902943) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_21` <= 4.551142692565918) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.040844958275556564 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.024931671630264694 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_10' AS feature, -3.706557512283325 AS threshold, 39 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.15336192309031474 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -0.2858046889305115 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2367868146169477 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0097238252393619 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.774230392937149 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 6.140906810760498 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2242980572189079 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0065470906779048 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.796725189409914 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_61' AS feature, 1.1508468389511108 AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2732691785625004 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_88' AS feature, 0.009112966246902943 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0736074966311727 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0099074884265618 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5653077839632172 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_21' AS feature, 4.551142692565918 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6326602060388901 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.794207598622453 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.010090726794248 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_0_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Estimator` AS `Estimator_0_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 1.2561349868774414) THEN CASE WHEN (`ADS`.`Feature_39` <= 5.667253494262695) THEN CASE WHEN (`ADS`.`Feature_53` <= 6.802164554595947) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_85` <= -2.0444512367248535) THEN 7 ELSE 8 END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 1.2561349868774414 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.015181242076192649 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_39' AS feature, 5.667253494262695 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04222506520989525 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_53' AS feature, 6.802164554595947 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09523581365810711 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6850143398637154 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.7785253830720502 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.7415373469775557 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_85' AS feature, -2.0444512367248535 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7270194524236824 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.765884404632928 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.7428778809458674 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_0_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Estimator` AS `Estimator_0_3` 
FROM `DT_Output_3`), 
`RF_Join_CTE_0` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_0_1`.join_key_0_1 AS join_key_0_1, `RF_Tree_0_1`.`Estimator_0_1` AS `Estimator_0_1`, `RF_Tree_0_2`.join_key_0_2 AS join_key_0_2, `RF_Tree_0_2`.`Estimator_0_2` AS `Estimator_0_2`, `RF_Tree_0_3`.join_key_0_3 AS join_key_0_3, `RF_Tree_0_3`.`Estimator_0_3` AS `Estimator_0_3` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_0_1` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN `RF_Tree_0_2` ON `RF_Tree_0_2`.join_key_0_2 = `RF_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN `RF_Tree_0_3` ON `RF_Tree_0_3`.join_key_0_3 = `RF_Tree_0_2`.join_key_0_2), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_35` <= 4.8230085372924805) THEN CASE WHEN (`ADS`.`Feature_61` <= 9.457769393920898) THEN CASE WHEN (`ADS`.`Feature_92` <= -1.756042718887329) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_23` <= 0.49019792675971985) THEN CASE WHEN (`ADS`.`Feature_98` <= 0.2568145990371704) THEN 8 ELSE 9 END ELSE 10 END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_35' AS feature, 4.8230085372924805 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02790992018039236 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_61' AS feature, 9.457769393920898 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08287926788245396 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_92' AS feature, -1.756042718887329 AS threshold, 59 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.11018125354302506 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.6990120826838417 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5974528837941748 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.702988187974695 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_23' AS feature, 0.49019792675971985 AS threshold, 6 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5309451147905673 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'Feature_98' AS feature, 0.2568145990371704 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6847727798413538 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.3487601726683374 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.5095534395974566 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.984501595813006 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_1_0, `DT_Output_4`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_81` <= -1.0866494178771973) THEN CASE WHEN (`ADS`.`Feature_53` <= -1.532287836074829) THEN CASE WHEN (`ADS`.`Feature_49` <= 2.9903926849365234) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_61` <= -4.03700065612793) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_64` <= -1.4147629737854004) THEN CASE WHEN (`ADS`.`Feature_26` <= 6.427189826965332) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_85` <= 2.141869068145752) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_81' AS feature, -1.0866494178771973 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.00848784680712466 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_53' AS feature, -1.532287836074829 AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.23011145849230039 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_49' AS feature, 2.9903926849365234 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5764656186111353 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.3257213907991714 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9745844658189222 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_61' AS feature, -4.03700065612793 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.022298962420999373 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.3288078433657535 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6099962125244424 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_64' AS feature, -1.4147629737854004 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.1416595520905247 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_26' AS feature, 6.427189826965332 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4471545837442472 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2783745626787035 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9662900398140616 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_85' AS feature, 2.141869068145752 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.20205074550947563 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.968529122902201 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2783155577903855 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`RF_Tree_1_1` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_1_1, `DT_Output_5`.`Estimator` AS `Estimator_1_1` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= 0.040844958275556564) THEN CASE WHEN (`ADS`.`Feature_10` <= -3.706557512283325) THEN CASE WHEN (`ADS`.`Feature_0` <= -0.2858046889305115) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_47` <= 9.542867660522461) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_61` <= 1.1508468389511108) THEN CASE WHEN (`ADS`.`Feature_88` <= 0.009112966246902943) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_9` <= -5.602291107177734) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.040844958275556564 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.021951706654046246 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_10' AS feature, -3.706557512283325 AS threshold, 39 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.13816792939188302 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -0.2858046889305115 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21250339618001549 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9757549835089563 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.173396459340091 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_47' AS feature, 9.542867660522461 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2019263522231374 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.974576131396842 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.202459443360165 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_61' AS feature, 1.1508468389511108 AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.24497548543230493 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_88' AS feature, 0.009112966246902943 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.06528654337979772 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9820174917516943 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3065788792836328 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, -5.602291107177734 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.568415581126818 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.003097928832008 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.204104898530811 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`RF_Tree_1_2` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_1_2, `DT_Output_6`.`Estimator` AS `Estimator_1_2` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 1.2561349868774414) THEN CASE WHEN (`ADS`.`Feature_39` <= 5.667253494262695) THEN CASE WHEN (`ADS`.`Feature_53` <= 6.802164554595947) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_38` <= -1.215580701828003) THEN 7 ELSE 8 END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 1.2561349868774414 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.013993519337989285 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_39' AS feature, 5.667253494262695 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03735457474731701 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_53' AS feature, 6.802164554595947 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0847349919616988 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6472590630735789 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.485916357557153 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.140787288672109 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_38' AS feature, -1.215580701828003 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6507098859957875 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.171305969127317 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1412721083395247 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`RF_Tree_1_3` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_1_3, `DT_Output_7`.`Estimator` AS `Estimator_1_3` 
FROM `DT_Output_7`), 
`RF_Join_CTE_1` AS 
(SELECT `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_1_1`.join_key_1_1 AS join_key_1_1, `RF_Tree_1_1`.`Estimator_1_1` AS `Estimator_1_1`, `RF_Tree_1_2`.join_key_1_2 AS join_key_1_2, `RF_Tree_1_2`.`Estimator_1_2` AS `Estimator_1_2`, `RF_Tree_1_3`.join_key_1_3 AS join_key_1_3, `RF_Tree_1_3`.`Estimator_1_3` AS `Estimator_1_3` 
FROM `RF_Tree_1_0` LEFT OUTER JOIN `RF_Tree_1_1` ON `RF_Tree_1_0`.join_key_1_0 = `RF_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN `RF_Tree_1_2` ON `RF_Tree_1_2`.join_key_1_2 = `RF_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN `RF_Tree_1_3` ON `RF_Tree_1_3`.join_key_1_3 = `RF_Tree_1_2`.join_key_1_2), 
`DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_35` <= 4.8230085372924805) THEN CASE WHEN (`ADS`.`Feature_18` <= 0.7924848794937134) THEN CASE WHEN (`ADS`.`Feature_92` <= -1.6750538349151611) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_49` <= -2.9106063842773438) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_16` <= 8.959244728088379) THEN CASE WHEN (`ADS`.`Feature_35` <= 5.041923522949219) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_35' AS feature, 4.8230085372924805 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.024962958833232362 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_18' AS feature, 0.7924848794937134 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07412112960721087 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_92' AS feature, -1.6750538349151611 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.16438441427624842 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1238986021796125 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.943724403268798 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_49' AS feature, -2.9106063842773438 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.14150782821326768 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.4224580292087956 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.3022141760980536 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_16' AS feature, 8.959244728088379 AS threshold, 6 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.47481177736888275 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_35' AS feature, 5.041923522949219 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6169694423783716 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1427587085411743 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.9168247492399668 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9816452593453386 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_2_0, `DT_Output_8`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_81` <= -1.0866494178771973) THEN CASE WHEN (`ADS`.`Feature_53` <= -1.532287836074829) THEN CASE WHEN (`ADS`.`Feature_82` <= 0.09579089283943176) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_61` <= -4.03700065612793) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_64` <= -1.4147629737854004) THEN CASE WHEN (`ADS`.`Feature_28` <= -7.53217887878418) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_85` <= 2.141869068145752) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_81' AS feature, -1.0866494178771973 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.008092397860626878 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_53' AS feature, -1.532287836074829 AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.20824450407535378 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_82' AS feature, 0.09579089283943176 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5160901076213319 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9513864687631799 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.9114980119635654 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_61' AS feature, -4.03700065612793 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.023537141947766984 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.946385290551021 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5678145457738766 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_64' AS feature, -1.4147629737854004 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.12883857568536028 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_28' AS feature, -7.53217887878418 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.40016174214138145 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9368113928583017 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8751305232078725 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_85' AS feature, 2.141869068145752 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.18309501853938506 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9436998809516559 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8675694826467637 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`RF_Tree_2_1` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_2_1, `DT_Output_9`.`Estimator` AS `Estimator_2_1` 
FROM `DT_Output_9`), 
`DT_node_lookup_10` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= 0.040844958275556564) THEN CASE WHEN (`ADS`.`Feature_10` <= -3.706557512283325) THEN CASE WHEN (`ADS`.`Feature_32` <= 0.13915178179740906) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_6` <= -7.502074241638184) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_7` <= 1.4797532558441162) THEN CASE WHEN (`ADS`.`Feature_68` <= -0.9022246599197388) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_88` <= -1.6211676597595215) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_10` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.040844958275556564 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.019316251082066343 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_10' AS feature, -3.706557512283325 AS threshold, 39 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.12463564759782113 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_32' AS feature, 0.13915178179740906 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1888019386465681 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8037193144884403 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9472714718891297 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_6' AS feature, -7.502074241638184 AS threshold, 33 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.18162429964225557 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8352127262133855 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9480656801779402 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, 1.4797532558441162 AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21982068138619532 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_68' AS feature, -0.9022246599197388 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.02659625967984232 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.9818051969552706 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.43879818720514285 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_88' AS feature, -1.6211676597595215 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.47745324366133257 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.935511776187704 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.9403127016502664 AS `Estimator`) AS `Values`), 
`DT_Output_10` AS 
(SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.count AS count, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_10` LEFT OUTER JOIN `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id), 
`RF_Tree_2_2` AS 
(SELECT `DT_Output_10`.`KEY` AS join_key_2_2, `DT_Output_10`.`Estimator` AS `Estimator_2_2` 
FROM `DT_Output_10`), 
`DT_node_lookup_11` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_15` <= 1.2561349868774414) THEN CASE WHEN (`ADS`.`Feature_39` <= 5.667253494262695) THEN CASE WHEN (`ADS`.`Feature_8` <= -1.596189022064209) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_59` <= 1.374586582183838) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_49` <= 4.343476295471191) THEN CASE WHEN (`ADS`.`Feature_92` <= -0.5060311555862427) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_11` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_15' AS feature, 1.2561349868774414 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.013313962755995432 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_39' AS feature, 5.667253494262695 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.032469944007528735 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -1.596189022064209 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07456926202153787 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2354375858902342 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5007577268682246 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_59' AS feature, 1.374586582183838 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5779701671956041 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.7713178005201982 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.794782155849709 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_49' AS feature, 4.343476295471191 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5810344066236951 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_92' AS feature, -0.5060311555862427 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5821003805232563 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.804381626240322 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.7914837136169748 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.772088239449451 AS `Estimator`) AS `Values`), 
`DT_Output_11` AS 
(SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.count AS count, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_11` LEFT OUTER JOIN `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id), 
`RF_Tree_2_3` AS 
(SELECT `DT_Output_11`.`KEY` AS join_key_2_3, `DT_Output_11`.`Estimator` AS `Estimator_2_3` 
FROM `DT_Output_11`), 
`RF_Join_CTE_2` AS 
(SELECT `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_2_1`.join_key_2_1 AS join_key_2_1, `RF_Tree_2_1`.`Estimator_2_1` AS `Estimator_2_1`, `RF_Tree_2_2`.join_key_2_2 AS join_key_2_2, `RF_Tree_2_2`.`Estimator_2_2` AS `Estimator_2_2`, `RF_Tree_2_3`.join_key_2_3 AS join_key_2_3, `RF_Tree_2_3`.`Estimator_2_3` AS `Estimator_2_3` 
FROM `RF_Tree_2_0` LEFT OUTER JOIN `RF_Tree_2_1` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_2_1`.join_key_2_1 LEFT OUTER JOIN `RF_Tree_2_2` ON `RF_Tree_2_2`.join_key_2_2 = `RF_Tree_2_1`.join_key_2_1 LEFT OUTER JOIN `RF_Tree_2_3` ON `RF_Tree_2_3`.join_key_2_3 = `RF_Tree_2_2`.join_key_2_2), 
`DT_node_lookup_12` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_35` <= 4.8230085372924805) THEN CASE WHEN (`ADS`.`Feature_94` <= -5.5347676277160645) THEN CASE WHEN (`ADS`.`Feature_13` <= -0.8847488760948181) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_49` <= -2.9106063842773438) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_7` <= -5.369756698608398) THEN 9 ELSE CASE WHEN (`ADS`.`Feature_25` <= 9.712336540222168) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_12` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_35' AS feature, 4.8230085372924805 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02254239660804257 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_94' AS feature, -5.5347676277160645 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06626670766786782 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.8847488760948181 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4199519423606677 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.0025902614778532 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9100649840860678 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_49' AS feature, -2.9106063842773438 AS threshold, 57 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.10038731468741414 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7994296087323872 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.824979627478761 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, -5.369756698608398 AS threshold, 6 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4219880991668476 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.973390091767161 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'Feature_25' AS feature, 9.712336540222168 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5522851160983738 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.6457975709409922 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8045680730485607 AS `Estimator`) AS `Values`), 
`DT_Output_12` AS 
(SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.count AS count, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_12` LEFT OUTER JOIN `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_12`.`KEY` AS join_key_3_0, `DT_Output_12`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_12`), 
`DT_node_lookup_13` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_81` <= -1.0866494178771973) THEN CASE WHEN (`ADS`.`Feature_53` <= 5.647066116333008) THEN CASE WHEN (`ADS`.`Feature_39` <= 3.5503501892089844) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_55` <= -1.0164564847946167) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_64` <= -1.4147629737854004) THEN CASE WHEN (`ADS`.`Feature_95` <= 5.281040191650391) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_85` <= 2.141869068145752) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_13` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_81' AS feature, -1.0866494178771973 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.007475470072515572 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_53' AS feature, 5.647066116333008 AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.18937328405772189 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_39' AS feature, 3.5503501892089844 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3146360714348125 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4856437609591444 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9153700357614556 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_55' AS feature, -1.0164564847946167 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.18641507807354998 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.954918332785951 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9079743623114332 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_64' AS feature, -1.4147629737854004 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.11734454214520623 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_95' AS feature, 5.281040191650391 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3587129300141748 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.6205267681382272 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9109511190964499 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_85' AS feature, 2.141869068145752 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.16617094954616837 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9229353040333352 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.6252718942481368 AS `Estimator`) AS `Values`), 
`DT_Output_13` AS 
(SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.count AS count, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_13` LEFT OUTER JOIN `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id), 
`RF_Tree_3_1` AS 
(SELECT `DT_Output_13`.`KEY` AS join_key_3_1, `DT_Output_13`.`Estimator` AS `Estimator_3_1` 
FROM `DT_Output_13`), 
`DT_node_lookup_14` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` <= 0.040844958275556564) THEN CASE WHEN (`ADS`.`Feature_2` <= 1.0132877826690674) THEN CASE WHEN (`ADS`.`Feature_28` <= 4.744753360748291) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_19` <= -0.28118395805358887) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_57` <= -0.8617755174636841) THEN CASE WHEN (`ADS`.`Feature_99` <= 4.832531452178955) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_21` <= 2.2075154781341553) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_14` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.040844958275556564 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.016903151262517173 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 1.0132877826690674 AS threshold, 39 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.11275232842964296 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_28' AS feature, 4.744753360748291 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.18800693940729588 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9182365505692567 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.00227306915268 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_19' AS feature, -0.28118395805358887 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07880486314983716 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4196504666222418 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.574831252500312 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_57' AS feature, -0.8617755174636841 AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.19749471226231166 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_99' AS feature, 4.832531452178955 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.12177642303985563 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9761301177756302 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.7632242609441817 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_21' AS feature, 2.2075154781341553 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3252031663831784 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4835906753647796 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9788575950897119 AS `Estimator`) AS `Values`), 
`DT_Output_14` AS 
(SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.count AS count, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_14` LEFT OUTER JOIN `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id), 
`RF_Tree_3_2` AS 
(SELECT `DT_Output_14`.`KEY` AS join_key_3_2, `DT_Output_14`.`Estimator` AS `Estimator_3_2` 
FROM `DT_Output_14`), 
`DT_node_lookup_15` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_16` <= -7.503546237945557) THEN CASE WHEN (`ADS`.`Feature_94` <= 6.053500652313232) THEN CASE WHEN (`ADS`.`Feature_89` <= 1.2855547666549683) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_39` <= 5.667253494262695) THEN CASE WHEN (`ADS`.`Feature_15` <= 1.3106192350387573) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_86` <= -0.13641858100891113) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_15` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_16' AS feature, -7.503546237945557 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.012553992929113982 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_94' AS feature, 6.053500652313232 AS threshold, 4 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6030688163380031 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_89' AS feature, 1.2855547666549683 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5678272975805015 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8597007933216136 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5333082752148621 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.5754908352304304 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_39' AS feature, 5.667253494262695 AS threshold, 63 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.024939011731767866 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'Feature_15' AS feature, 1.3106192350387573 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07146271812718841 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4737729561807659 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5707892051677848 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'Feature_86' AS feature, -0.13641858100891113 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5147359824551099 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.536680497259722 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5590732495332804 AS `Estimator`) AS `Values`), 
`DT_Output_15` AS 
(SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.count AS count, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_15` LEFT OUTER JOIN `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id), 
`RF_Tree_3_3` AS 
(SELECT `DT_Output_15`.`KEY` AS join_key_3_3, `DT_Output_15`.`Estimator` AS `Estimator_3_3` 
FROM `DT_Output_15`), 
`RF_Join_CTE_3` AS 
(SELECT `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Tree_3_1`.join_key_3_1 AS join_key_3_1, `RF_Tree_3_1`.`Estimator_3_1` AS `Estimator_3_1`, `RF_Tree_3_2`.join_key_3_2 AS join_key_3_2, `RF_Tree_3_2`.`Estimator_3_2` AS `Estimator_3_2`, `RF_Tree_3_3`.join_key_3_3 AS join_key_3_3, `RF_Tree_3_3`.`Estimator_3_3` AS `Estimator_3_3` 
FROM `RF_Tree_3_0` LEFT OUTER JOIN `RF_Tree_3_1` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_3_1`.join_key_3_1 LEFT OUTER JOIN `RF_Tree_3_2` ON `RF_Tree_3_2`.join_key_3_2 = `RF_Tree_3_1`.join_key_3_1 LEFT OUTER JOIN `RF_Tree_3_3` ON `RF_Tree_3_3`.join_key_3_3 = `RF_Tree_3_2`.join_key_3_2), 
`RF_Join_CTE` AS 
(SELECT `RF_Join_CTE_0`.join_key_0_0 AS join_key_0_0, `RF_Join_CTE_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Join_CTE_0`.join_key_0_1 AS join_key_0_1, `RF_Join_CTE_0`.`Estimator_0_1` AS `Estimator_0_1`, `RF_Join_CTE_0`.join_key_0_2 AS join_key_0_2, `RF_Join_CTE_0`.`Estimator_0_2` AS `Estimator_0_2`, `RF_Join_CTE_0`.join_key_0_3 AS join_key_0_3, `RF_Join_CTE_0`.`Estimator_0_3` AS `Estimator_0_3`, `RF_Join_CTE_1`.join_key_1_0 AS join_key_1_0, `RF_Join_CTE_1`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Join_CTE_1`.join_key_1_1 AS join_key_1_1, `RF_Join_CTE_1`.`Estimator_1_1` AS `Estimator_1_1`, `RF_Join_CTE_1`.join_key_1_2 AS join_key_1_2, `RF_Join_CTE_1`.`Estimator_1_2` AS `Estimator_1_2`, `RF_Join_CTE_1`.join_key_1_3 AS join_key_1_3, `RF_Join_CTE_1`.`Estimator_1_3` AS `Estimator_1_3`, `RF_Join_CTE_2`.join_key_2_0 AS join_key_2_0, `RF_Join_CTE_2`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Join_CTE_2`.join_key_2_1 AS join_key_2_1, `RF_Join_CTE_2`.`Estimator_2_1` AS `Estimator_2_1`, `RF_Join_CTE_2`.join_key_2_2 AS join_key_2_2, `RF_Join_CTE_2`.`Estimator_2_2` AS `Estimator_2_2`, `RF_Join_CTE_2`.join_key_2_3 AS join_key_2_3, `RF_Join_CTE_2`.`Estimator_2_3` AS `Estimator_2_3`, `RF_Join_CTE_3`.join_key_3_0 AS join_key_3_0, `RF_Join_CTE_3`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Join_CTE_3`.join_key_3_1 AS join_key_3_1, `RF_Join_CTE_3`.`Estimator_3_1` AS `Estimator_3_1`, `RF_Join_CTE_3`.join_key_3_2 AS join_key_3_2, `RF_Join_CTE_3`.`Estimator_3_2` AS `Estimator_3_2`, `RF_Join_CTE_3`.join_key_3_3 AS join_key_3_3, `RF_Join_CTE_3`.`Estimator_3_3` AS `Estimator_3_3` 
FROM `RF_Join_CTE_0` LEFT OUTER JOIN `RF_Join_CTE_1` ON `RF_Join_CTE_0`.join_key_0_0 = `RF_Join_CTE_1`.join_key_1_0 LEFT OUTER JOIN `RF_Join_CTE_2` ON `RF_Join_CTE_2`.join_key_2_0 = `RF_Join_CTE_1`.join_key_1_0 LEFT OUTER JOIN `RF_Join_CTE_3` ON `RF_Join_CTE_3`.join_key_3_0 = `RF_Join_CTE_2`.join_key_2_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 0.208955223881 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, 0.238805970149 + 0.1 * `RF_Join_CTE`.`Estimator_0_1` + 0.1 * `RF_Join_CTE`.`Estimator_1_1` + 0.1 * `RF_Join_CTE`.`Estimator_2_1` + 0.1 * `RF_Join_CTE`.`Estimator_3_1` AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, 0.283582089552 + 0.1 * `RF_Join_CTE`.`Estimator_0_2` + 0.1 * `RF_Join_CTE`.`Estimator_1_2` + 0.1 * `RF_Join_CTE`.`Estimator_2_2` + 0.1 * `RF_Join_CTE`.`Estimator_3_2` AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, 0.268656716418 + 0.1 * `RF_Join_CTE`.`Estimator_0_3` + 0.1 * `RF_Join_CTE`.`Estimator_1_3` + 0.1 * `RF_Join_CTE`.`Estimator_2_3` + 0.1 * `RF_Join_CTE`.`Estimator_3_3` AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM `RF_Join_CTE`), 
orig_cte AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Score_2` AS `Score_2`, `RF_AVG_Scores`.`Score_3` AS `Score_3`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`Proba_2` AS `Proba_2`, `RF_AVG_Scores`.`Proba_3` AS `Proba_3`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `RF_AVG_Scores`.`LogProba_2` AS `LogProba_2`, `RF_AVG_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM `RF_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2`, exp(score_max.`Score_3` - score_max.`max_Score`) AS `exp_delta_Score_3` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 2 AS class, score_soft_max_comp.`LogProba_2` AS `LogProba`, score_soft_max_comp.`Proba_2` AS `Proba`, score_soft_max_comp.`Score_2` AS `Score`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 3 AS class, score_soft_max_comp.`LogProba_3` AS `LogProba`, score_soft_max_comp.`Proba_3` AS `Proba`, score_soft_max_comp.`Score_3` AS `Score`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Score_2` AS `Score_2`, score_soft_max_comp.`Score_3` AS `Score_3`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`Proba_2` AS `Proba_2`, score_soft_max_comp.`Proba_3` AS `Proba_3`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`LogProba_2` AS `LogProba_2`, score_soft_max_comp.`LogProba_3` AS `LogProba_3`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score_3`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3` 
FROM score_soft_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM arg_max_cte