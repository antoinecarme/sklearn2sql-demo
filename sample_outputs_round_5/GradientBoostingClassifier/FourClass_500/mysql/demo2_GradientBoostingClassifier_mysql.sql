-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_254` <= -1.284219741821289) THEN CASE WHEN (`ADS`.`Feature_141` <= 0.13482637703418732) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_492` <= 0.27332261204719543) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_388` <= -0.7157217264175415) THEN 7 ELSE 8 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_254' AS feature, -1.284219741821289 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.01955973427559774 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_141' AS feature, 0.13482637703418732 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4565596687094769 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.0808370824345683 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9913296082506404 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_492' AS feature, 0.27332261204719543 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.10308945409754082 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9913296082506404 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_388' AS feature, -0.7157217264175415 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.20100411315392133 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.0808370824345683 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.3126351598031056 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_226` <= -1.3151710033416748) THEN CASE WHEN (`ADS`.`Feature_492` <= 1.4107952117919922) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_295` <= 1.9987657070159912) THEN CASE WHEN (`ADS`.`Feature_162` <= -1.5075085163116455) THEN 6 ELSE 7 END ELSE CASE WHEN (`ADS`.`Feature_12` <= -0.07126536965370178) THEN 9 ELSE 10 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_226' AS feature, -1.3151710033416748 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0028076260487200073 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_492' AS feature, 1.4107952117919922 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7436855870545325 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9215292808432025 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.967824874819795 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_295' AS feature, 1.9987657070159912 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.12717096360142252 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_162' AS feature, -1.5075085163116455 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.17560379375899327 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9215292808432025 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.921033840583704 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, -0.07126536965370178 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7446199792348498 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.967824874819795 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.921529280843202 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_0_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Estimator` AS `Estimator_0_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_412` <= 5.239612579345703) THEN CASE WHEN (`ADS`.`Feature_269` <= -9.772222518920898) THEN CASE WHEN (`ADS`.`Feature_130` <= 0.9367061853408813) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_204` <= -1.537306785583496) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_204` <= -0.18815232813358307) THEN CASE WHEN (`ADS`.`Feature_16` <= -0.8903529644012451) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_412' AS feature, 5.239612579345703 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.019041960774544973 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_269' AS feature, -9.772222518920898 AS threshold, 58 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.10319947292582908 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_130' AS feature, 0.9367061853408813 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.46478019439564816 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9705594515662512 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.990419566441599 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_204' AS feature, -1.537306785583496 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.18115746647975736 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9657846682521205 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9028782966893625 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_204' AS feature, -0.18815232813358307 AS threshold, 9 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5233064508670632 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_16' AS feature, -0.8903529644012451 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2528897068300961 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0066076657918377 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0011428984562087 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9420623386843974 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_0_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Estimator` AS `Estimator_0_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_260` <= 0.09799090027809143) THEN CASE WHEN (`ADS`.`Feature_248` <= -0.5615462064743042) THEN CASE WHEN (`ADS`.`Feature_207` <= 0.45043396949768066) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_397` <= -0.7616263628005981) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_380` <= 1.8146476745605469) THEN CASE WHEN (`ADS`.`Feature_427` <= 1.5843701362609863) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_260' AS feature, 0.09799090027809143 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.03696993111920817 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_248' AS feature, -0.5615462064743042 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.23270848985762643 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_207' AS feature, 0.45043396949768066 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6389830268831231 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.6783876010315844 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.002599555775071 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_397' AS feature, -0.7616263628005981 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.011104196934628259 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.0973788758901186 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7632988385568453 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_380' AS feature, 1.8146476745605469 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.16470009909613192 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_427' AS feature, 1.5843701362609863 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.22172228171421635 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0043424429014323 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.670405057944232 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.670405057944232 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_0_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Estimator` AS `Estimator_0_3` 
FROM `DT_Output_3`), 
`RF_Join_CTE_0` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_0_1`.join_key_0_1 AS join_key_0_1, `RF_Tree_0_1`.`Estimator_0_1` AS `Estimator_0_1`, `RF_Tree_0_2`.join_key_0_2 AS join_key_0_2, `RF_Tree_0_2`.`Estimator_0_2` AS `Estimator_0_2`, `RF_Tree_0_3`.join_key_0_3 AS join_key_0_3, `RF_Tree_0_3`.`Estimator_0_3` AS `Estimator_0_3` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_0_1` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN `RF_Tree_0_2` ON `RF_Tree_0_2`.join_key_0_2 = `RF_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN `RF_Tree_0_3` ON `RF_Tree_0_3`.join_key_0_3 = `RF_Tree_0_2`.join_key_0_2), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_254` <= -1.284219741821289) THEN CASE WHEN (`ADS`.`Feature_88` <= 0.7006922960281372) THEN CASE WHEN (`ADS`.`Feature_455` <= 0.2920840084552765) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_162` <= -0.8693831562995911) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_250` <= -1.857525110244751) THEN CASE WHEN (`ADS`.`Feature_363` <= 0.02281177043914795) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_68` <= -13.176700592041016) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_254' AS feature, -1.284219741821289 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.018020417939276855 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_88' AS feature, 0.7006922960281372 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.40967469145038243 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_455' AS feature, 0.2920840084552765 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6759044668982314 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.3216384758630917 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.308534758148108 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_162' AS feature, -0.8693831562995911 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.21152811792793183 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9375007023227402 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9582121344054126 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_250' AS feature, -1.857525110244751 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09305464765676093 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_363' AS feature, 0.02281177043914795 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6989384133093578 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.938230762913194 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.315076960407898 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_68' AS feature, -13.176700592041016 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.13705426215487868 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.613314206563388 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7270459766968678 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_1_0, `DT_Output_4`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_226` <= -1.3151710033416748) THEN CASE WHEN (`ADS`.`Feature_156` <= 1.4264038801193237) THEN CASE WHEN (`ADS`.`Feature_6` <= 1.1844651699066162) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_162` <= -1.5075085163116455) THEN CASE WHEN (`ADS`.`Feature_452` <= -5.46024751663208) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_295` <= 1.9987657070159912) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_226' AS feature, -1.3151710033416748 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0021561641121550204 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_156' AS feature, 1.4264038801193237 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6650024680134454 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 1.1844651699066162 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6644591843695024 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2318785007453124 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.246903482224902 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.271983857639208 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_162' AS feature, -1.5075085163116455 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.11413266113368548 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'Feature_452' AS feature, -5.46024751663208 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6733969047342487 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.4170701087735207 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.240432936051586 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'Feature_295' AS feature, 1.9987657070159912 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.15788430368190406 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8854856932044332 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.242329768252198 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`RF_Tree_1_1` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_1_1, `DT_Output_5`.`Estimator` AS `Estimator_1_1` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_412` <= 5.239612579345703) THEN CASE WHEN (`ADS`.`Feature_269` <= -9.772222518920898) THEN CASE WHEN (`ADS`.`Feature_39` <= 0.42515817284584045) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_204` <= -1.537306785583496) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_308` <= 0.4221416711807251) THEN CASE WHEN (`ADS`.`Feature_122` <= 1.1434674263000488) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_71` <= -0.4232076108455658) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_412' AS feature, 5.239612579345703 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.01732172429737733 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_269' AS feature, -9.772222518920898 AS threshold, 58 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09259434245662154 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_39' AS feature, 0.42515817284584045 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4154132851104784 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.261287055422697 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9586657649551301 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_204' AS feature, -1.537306785583496 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.16232087957367447 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.265278453120557 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8683622384850381 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_308' AS feature, 0.4221416711807251 AS threshold, 9 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.46776848161775203 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_122' AS feature, 1.1434674263000488 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6663792011589181 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.243673916793753 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2591156804333945 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_71' AS feature, -0.4232076108455658 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2273690367763291 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9737440196106739 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.96769327918786 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`RF_Tree_1_2` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_1_2, `DT_Output_6`.`Estimator` AS `Estimator_1_2` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_123` <= 0.9263319969177246) THEN CASE WHEN (`ADS`.`Feature_31` <= -9.882083892822266) THEN CASE WHEN (`ADS`.`Feature_299` <= 0.600502610206604) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_192` <= -1.141883373260498) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_100` <= 0.25378745794296265) THEN CASE WHEN (`ADS`.`Feature_471` <= 1.8148159980773926) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_275` <= 0.8176750540733337) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_123' AS feature, 0.9263319969177246 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.03314004966434442 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_31' AS feature, -9.882083892822266 AS threshold, 50 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0721954522755904 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_299' AS feature, 0.600502610206604 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6495311011262753 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2167662257158085 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.103562511909566 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_192' AS feature, -1.141883373260498 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.11826310462039034 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2201504250952646 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7816603660883523 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_100' AS feature, 0.25378745794296265 AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3429503494876821 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_471' AS feature, 1.8148159980773926 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.654941178314213 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.130685689291057 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.658104620431549 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_275' AS feature, 0.8176750540733337 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.10275083455021898 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9707359849535766 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1024824559393096 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`RF_Tree_1_3` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_1_3, `DT_Output_7`.`Estimator` AS `Estimator_1_3` 
FROM `DT_Output_7`), 
`RF_Join_CTE_1` AS 
(SELECT `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_1_1`.join_key_1_1 AS join_key_1_1, `RF_Tree_1_1`.`Estimator_1_1` AS `Estimator_1_1`, `RF_Tree_1_2`.join_key_1_2 AS join_key_1_2, `RF_Tree_1_2`.`Estimator_1_2` AS `Estimator_1_2`, `RF_Tree_1_3`.join_key_1_3 AS join_key_1_3, `RF_Tree_1_3`.`Estimator_1_3` AS `Estimator_1_3` 
FROM `RF_Tree_1_0` LEFT OUTER JOIN `RF_Tree_1_1` ON `RF_Tree_1_0`.join_key_1_0 = `RF_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN `RF_Tree_1_2` ON `RF_Tree_1_2`.join_key_1_2 = `RF_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN `RF_Tree_1_3` ON `RF_Tree_1_3`.join_key_1_3 = `RF_Tree_1_2`.join_key_1_2), 
`DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_254` <= -1.284219741821289) THEN CASE WHEN (`ADS`.`Feature_141` <= 0.13482637703418732) THEN CASE WHEN (`ADS`.`Feature_238` <= -0.2233988344669342) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_316` <= -0.6951721906661987) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_492` <= 0.27332261204719543) THEN CASE WHEN (`ADS`.`Feature_309` <= 2.004683494567871) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_243` <= -0.00806444138288498) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_254' AS feature, -1.284219741821289 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.016410131058868127 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_141' AS feature, 0.13482637703418732 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.36705496471549254 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_238' AS feature, -0.2233988344669342 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6032955531687997 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8871053446295925 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8952240016237416 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_316' AS feature, -0.6951721906661987 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.1841730750088906 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9009763666004611 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9287651218851161 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_492' AS feature, 0.27332261204719543 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08368470926489631 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_309' AS feature, 2.004683494567871 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.20021956167019056 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9359946964506921 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9763076296557711 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_243' AS feature, -0.00806444138288498 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.16880747094657453 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1380318628603074 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2980367295863499 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_2_0, `DT_Output_8`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_226` <= -1.3151710033416748) THEN CASE WHEN (`ADS`.`Feature_101` <= 7.2786335945129395) THEN CASE WHEN (`ADS`.`Feature_100` <= 0.0014688223600387573) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_162` <= -1.5075085163116455) THEN CASE WHEN (`ADS`.`Feature_125` <= -0.8567850589752197) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_295` <= 1.9987657070159912) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_226' AS feature, -1.3151710033416748 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.001660326187831426 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_101' AS feature, 7.2786335945129395 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5930085998025435 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_100' AS feature, 0.0014688223600387573 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5919692882842457 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8426766879049228 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8324111167947863 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8861395565702743 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_162' AS feature, -1.5075085163116455 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.10208498497264436 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'Feature_125' AS feature, -0.8567850589752197 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.607979984284578 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.0699764113273025 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8433557331274208 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'Feature_295' AS feature, 1.9987657070159912 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.14153303882026777 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8535213925965446 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.85218688833609 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`RF_Tree_2_1` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_2_1, `DT_Output_9`.`Estimator` AS `Estimator_2_1` 
FROM `DT_Output_9`), 
`DT_node_lookup_10` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_412` <= 5.239612579345703) THEN CASE WHEN (`ADS`.`Feature_269` <= -9.772222518920898) THEN CASE WHEN (`ADS`.`Feature_234` <= -0.4877193570137024) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_204` <= -1.537306785583496) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_315` <= 0.6437453627586365) THEN CASE WHEN (`ADS`.`Feature_115` <= -0.3688845634460449) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_53` <= 6.161604881286621) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_10` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_412' AS feature, 5.239612579345703 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.01546993943494773 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_269' AS feature, -9.772222518920898 AS threshold, 58 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08259154550860072 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_234' AS feature, -0.4877193570137024 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3755085319386032 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9295807294524691 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.888493202046067 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_204' AS feature, -1.537306785583496 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.1454680267268444 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8712262831556996 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8379565018161959 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_315' AS feature, 0.6437453627586365 AS threshold, 9 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4170915219285939 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_115' AS feature, -0.3688845634460449 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5940685532461664 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8555743201288954 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.844438174909757 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_53' AS feature, 6.161604881286621 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.20232808768290977 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.938274758019322 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9422058405131599 AS `Estimator`) AS `Values`), 
`DT_Output_10` AS 
(SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.count AS count, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_10` LEFT OUTER JOIN `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id), 
`RF_Tree_2_2` AS 
(SELECT `DT_Output_10`.`KEY` AS join_key_2_2, `DT_Output_10`.`Estimator` AS `Estimator_2_2` 
FROM `DT_Output_10`), 
`DT_node_lookup_11` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_260` <= 0.09799090027809143) THEN CASE WHEN (`ADS`.`Feature_248` <= -0.5615462064743042) THEN CASE WHEN (`ADS`.`Feature_286` <= 1.0924699306488037) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_44` <= 0.7495584487915039) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_118` <= -1.6806426048278809) THEN CASE WHEN (`ADS`.`Feature_308` <= 1.3490508794784546) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_270` <= 12.667043685913086) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_11` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_260' AS feature, 0.09799090027809143 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.02981699037376855 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_248' AS feature, -0.5615462064743042 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.18884593660165258 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_286' AS feature, 1.0924699306488037 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5248373051625769 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.836419802657219 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9338138444177861 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_44' AS feature, 0.7495584487915039 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.005577917386602899 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.528173817514059 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8310762230950333 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_118' AS feature, -1.6806426048278809 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.134031014830718 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_308' AS feature, 1.3490508794784546 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5833424372277816 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.7548312779918778 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8476382800316575 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_270' AS feature, 12.667043685913086 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.18031317302804056 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9454061417706128 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.7548312779918778 AS `Estimator`) AS `Values`), 
`DT_Output_11` AS 
(SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.count AS count, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_11` LEFT OUTER JOIN `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id), 
`RF_Tree_2_3` AS 
(SELECT `DT_Output_11`.`KEY` AS join_key_2_3, `DT_Output_11`.`Estimator` AS `Estimator_2_3` 
FROM `DT_Output_11`), 
`RF_Join_CTE_2` AS 
(SELECT `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_2_1`.join_key_2_1 AS join_key_2_1, `RF_Tree_2_1`.`Estimator_2_1` AS `Estimator_2_1`, `RF_Tree_2_2`.join_key_2_2 AS join_key_2_2, `RF_Tree_2_2`.`Estimator_2_2` AS `Estimator_2_2`, `RF_Tree_2_3`.join_key_2_3 AS join_key_2_3, `RF_Tree_2_3`.`Estimator_2_3` AS `Estimator_2_3` 
FROM `RF_Tree_2_0` LEFT OUTER JOIN `RF_Tree_2_1` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_2_1`.join_key_2_1 LEFT OUTER JOIN `RF_Tree_2_2` ON `RF_Tree_2_2`.join_key_2_2 = `RF_Tree_2_1`.join_key_2_1 LEFT OUTER JOIN `RF_Tree_2_3` ON `RF_Tree_2_3`.join_key_2_3 = `RF_Tree_2_2`.join_key_2_2), 
`DT_node_lookup_12` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_254` <= -1.284219741821289) THEN CASE WHEN (`ADS`.`Feature_326` <= 0.07581237703561783) THEN CASE WHEN (`ADS`.`Feature_421` <= -0.05424267053604126) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_154` <= -3.7829651832580566) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_294` <= 1.7052586078643799) THEN CASE WHEN (`ADS`.`Feature_347` <= 2.226487159729004) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_467` <= -0.6779789924621582) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_12` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_254' AS feature, -1.284219741821289 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014831845933483613 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_326' AS feature, 0.07581237703561783 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3270628563780861 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_421' AS feature, -0.05424267053604126 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.53704428762517 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.6305570172791408 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.6122154873632752 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_154' AS feature, -3.7829651832580566 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.16289381653177648 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8797475769468291 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9042700155592852 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_294' AS feature, 1.7052586078643799 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07481337265481165 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_347' AS feature, 2.226487159729004 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.11085980355151633 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6749703117202157 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.021104152298078 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_467' AS feature, -0.6779789924621582 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.574022383485873 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5847283330026585 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8643472176912117 AS `Estimator`) AS `Values`), 
`DT_Output_12` AS 
(SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.count AS count, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_12` LEFT OUTER JOIN `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_12`.`KEY` AS join_key_3_0, `DT_Output_12`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_12`), 
`DT_node_lookup_13` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_226` <= -1.3151710033416748) THEN CASE WHEN (`ADS`.`Feature_399` <= 1.0722712278366089) THEN CASE WHEN (`ADS`.`Feature_278` <= 2.5186328887939453) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_58` <= -0.16696730256080627) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_162` <= -1.5075085163116455) THEN CASE WHEN (`ADS`.`Feature_110` <= -0.5434753894805908) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_295` <= 1.9987657070159912) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_13` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_226' AS feature, -1.3151710033416748 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0012273150351161807 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_399' AS feature, 1.0722712278366089 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5282494349621127 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_278' AS feature, 2.5186328887939453 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5254844520190399 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5777591936504167 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5843133258093511 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_58' AS feature, -0.16696730256080627 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5347010618292826 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.6294725593547559 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.603206106194654 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_162' AS feature, -1.5075085163116455 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09123270600470777 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_110' AS feature, -0.5434753894805908 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.543459443962354 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.7509787608400649 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5936147821997078 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_295' AS feature, 1.9987657070159912 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.12649338100287782 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8240259824482168 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5934300909567345 AS `Estimator`) AS `Values`), 
`DT_Output_13` AS 
(SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.count AS count, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_13` LEFT OUTER JOIN `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id), 
`RF_Tree_3_1` AS 
(SELECT `DT_Output_13`.`KEY` AS join_key_3_1, `DT_Output_13`.`Estimator` AS `Estimator_3_1` 
FROM `DT_Output_13`), 
`DT_node_lookup_14` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_208` <= -5.075196266174316) THEN CASE WHEN (`ADS`.`Feature_183` <= 0.6073745489120483) THEN CASE WHEN (`ADS`.`Feature_80` <= 0.651680588722229) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_153` <= -0.08283427357673645) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_155` <= -1.8045763969421387) THEN CASE WHEN (`ADS`.`Feature_52` <= 0.7309930324554443) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_272` <= -1.9301953315734863) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_14` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_208' AS feature, -5.075196266174316 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.013877712431875147 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_183' AS feature, 0.6073745489120483 AS threshold, 12 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.31119583307941817 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_80' AS feature, 0.651680588722229 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5575556179341721 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5958166063721033 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.0056889934334365 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_153' AS feature, -0.08283427357673645 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.18152373663008964 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9420030855630087 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9085377721262011 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_155' AS feature, -1.8045763969421387 AS threshold, 55 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08480284963433916 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_52' AS feature, 0.7309930324554443 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5412536289160387 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.664673636546911 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5788537171351749 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_272' AS feature, -1.9301953315734863 AS threshold, 52 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.12092149262763018 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.601636971336664 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7431946782446569 AS `Estimator`) AS `Values`), 
`DT_Output_14` AS 
(SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.count AS count, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_14` LEFT OUTER JOIN `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id), 
`RF_Tree_3_2` AS 
(SELECT `DT_Output_14`.`KEY` AS join_key_3_2, `DT_Output_14`.`Estimator` AS `Estimator_3_2` 
FROM `DT_Output_14`), 
`DT_node_lookup_15` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_353` <= -1.8005588054656982) THEN CASE WHEN (`ADS`.`Feature_268` <= -1.061464548110962) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_33` <= -0.8048855066299438) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS`.`Feature_130` <= 1.7306716442108154) THEN CASE WHEN (`ADS`.`Feature_43` <= 1.5847294330596924) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_394` <= 8.270544052124023) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_15` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_353' AS feature, -1.8005588054656982 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.02668016823772813 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_268' AS feature, -1.061464548110962 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5387528657120962 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.059206444242179 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_33' AS feature, -0.8048855066299438 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5144955757409322 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5657751742913806 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5243608705875857 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_130' AS feature, 1.7306716442108154 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.014616017042462844 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'Feature_43' AS feature, 1.5847294330596924 AS threshold, 55 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07099968248334851 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.486723507997977 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.6448680869576426 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'Feature_394' AS feature, 8.270544052124023 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.42839849713592465 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5971648085260812 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9112663322902683 AS `Estimator`) AS `Values`), 
`DT_Output_15` AS 
(SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.count AS count, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_15` LEFT OUTER JOIN `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id), 
`RF_Tree_3_3` AS 
(SELECT `DT_Output_15`.`KEY` AS join_key_3_3, `DT_Output_15`.`Estimator` AS `Estimator_3_3` 
FROM `DT_Output_15`), 
`RF_Join_CTE_3` AS 
(SELECT `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Tree_3_1`.join_key_3_1 AS join_key_3_1, `RF_Tree_3_1`.`Estimator_3_1` AS `Estimator_3_1`, `RF_Tree_3_2`.join_key_3_2 AS join_key_3_2, `RF_Tree_3_2`.`Estimator_3_2` AS `Estimator_3_2`, `RF_Tree_3_3`.join_key_3_3 AS join_key_3_3, `RF_Tree_3_3`.`Estimator_3_3` AS `Estimator_3_3` 
FROM `RF_Tree_3_0` LEFT OUTER JOIN `RF_Tree_3_1` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_3_1`.join_key_3_1 LEFT OUTER JOIN `RF_Tree_3_2` ON `RF_Tree_3_2`.join_key_3_2 = `RF_Tree_3_1`.join_key_3_1 LEFT OUTER JOIN `RF_Tree_3_3` ON `RF_Tree_3_3`.join_key_3_3 = `RF_Tree_3_2`.join_key_3_2), 
`RF_Join_CTE` AS 
(SELECT `RF_Join_CTE_0`.join_key_0_0 AS join_key_0_0, `RF_Join_CTE_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Join_CTE_0`.join_key_0_1 AS join_key_0_1, `RF_Join_CTE_0`.`Estimator_0_1` AS `Estimator_0_1`, `RF_Join_CTE_0`.join_key_0_2 AS join_key_0_2, `RF_Join_CTE_0`.`Estimator_0_2` AS `Estimator_0_2`, `RF_Join_CTE_0`.join_key_0_3 AS join_key_0_3, `RF_Join_CTE_0`.`Estimator_0_3` AS `Estimator_0_3`, `RF_Join_CTE_1`.join_key_1_0 AS join_key_1_0, `RF_Join_CTE_1`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Join_CTE_1`.join_key_1_1 AS join_key_1_1, `RF_Join_CTE_1`.`Estimator_1_1` AS `Estimator_1_1`, `RF_Join_CTE_1`.join_key_1_2 AS join_key_1_2, `RF_Join_CTE_1`.`Estimator_1_2` AS `Estimator_1_2`, `RF_Join_CTE_1`.join_key_1_3 AS join_key_1_3, `RF_Join_CTE_1`.`Estimator_1_3` AS `Estimator_1_3`, `RF_Join_CTE_2`.join_key_2_0 AS join_key_2_0, `RF_Join_CTE_2`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Join_CTE_2`.join_key_2_1 AS join_key_2_1, `RF_Join_CTE_2`.`Estimator_2_1` AS `Estimator_2_1`, `RF_Join_CTE_2`.join_key_2_2 AS join_key_2_2, `RF_Join_CTE_2`.`Estimator_2_2` AS `Estimator_2_2`, `RF_Join_CTE_2`.join_key_2_3 AS join_key_2_3, `RF_Join_CTE_2`.`Estimator_2_3` AS `Estimator_2_3`, `RF_Join_CTE_3`.join_key_3_0 AS join_key_3_0, `RF_Join_CTE_3`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Join_CTE_3`.join_key_3_1 AS join_key_3_1, `RF_Join_CTE_3`.`Estimator_3_1` AS `Estimator_3_1`, `RF_Join_CTE_3`.join_key_3_2 AS join_key_3_2, `RF_Join_CTE_3`.`Estimator_3_2` AS `Estimator_3_2`, `RF_Join_CTE_3`.join_key_3_3 AS join_key_3_3, `RF_Join_CTE_3`.`Estimator_3_3` AS `Estimator_3_3` 
FROM `RF_Join_CTE_0` LEFT OUTER JOIN `RF_Join_CTE_1` ON `RF_Join_CTE_0`.join_key_0_0 = `RF_Join_CTE_1`.join_key_1_0 LEFT OUTER JOIN `RF_Join_CTE_2` ON `RF_Join_CTE_2`.join_key_2_0 = `RF_Join_CTE_1`.join_key_1_0 LEFT OUTER JOIN `RF_Join_CTE_3` ON `RF_Join_CTE_3`.join_key_3_0 = `RF_Join_CTE_2`.join_key_2_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 0.223880597015 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, 0.253731343284 + 0.1 * `RF_Join_CTE`.`Estimator_0_1` + 0.1 * `RF_Join_CTE`.`Estimator_1_1` + 0.1 * `RF_Join_CTE`.`Estimator_2_1` + 0.1 * `RF_Join_CTE`.`Estimator_3_1` AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, 0.223880597015 + 0.1 * `RF_Join_CTE`.`Estimator_0_2` + 0.1 * `RF_Join_CTE`.`Estimator_1_2` + 0.1 * `RF_Join_CTE`.`Estimator_2_2` + 0.1 * `RF_Join_CTE`.`Estimator_3_2` AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, 0.298507462687 + 0.1 * `RF_Join_CTE`.`Estimator_0_3` + 0.1 * `RF_Join_CTE`.`Estimator_1_3` + 0.1 * `RF_Join_CTE`.`Estimator_2_3` + 0.1 * `RF_Join_CTE`.`Estimator_3_3` AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3` 
FROM `RF_Join_CTE`), 
orig_cte AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Score_2` AS `Score_2`, `RF_AVG_Scores`.`Score_3` AS `Score_3`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`Proba_2` AS `Proba_2`, `RF_AVG_Scores`.`Proba_3` AS `Proba_3`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `RF_AVG_Scores`.`LogProba_2` AS `LogProba_2`, `RF_AVG_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM `RF_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2`, exp(score_max.`Score_3` - score_max.`max_Score`) AS `exp_delta_Score_3` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 2 AS class, score_soft_max_comp.`LogProba_2` AS `LogProba`, score_soft_max_comp.`Proba_2` AS `Proba`, score_soft_max_comp.`Score_2` AS `Score`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 3 AS class, score_soft_max_comp.`LogProba_3` AS `LogProba`, score_soft_max_comp.`Proba_3` AS `Proba`, score_soft_max_comp.`Score_3` AS `Score`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Score_2` AS `Score_2`, score_soft_max_comp.`Score_3` AS `Score_3`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`Proba_2` AS `Proba_2`, score_soft_max_comp.`Proba_3` AS `Proba_3`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`LogProba_2` AS `LogProba_2`, score_soft_max_comp.`LogProba_3` AS `LogProba_3`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score_3`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3` 
FROM score_soft_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM arg_max_cte