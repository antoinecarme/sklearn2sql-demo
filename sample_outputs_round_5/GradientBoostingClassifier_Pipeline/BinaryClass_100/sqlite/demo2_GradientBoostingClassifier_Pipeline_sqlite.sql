-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0552609355382 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.0769076855516 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.233076053204 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0041552351922 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0944493732613 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0383840980854 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0528914288785 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.16751825735 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.225529345295 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0509142759732 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.143026317864 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.0140674829917 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.159452009165 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.0574625665163 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0425146651787 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.235315608982 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.168936873701 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.0810832936112 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.110002084498 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.0386795125919 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.0351427674424 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.213121160721 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN -0.00745633339278 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.116702984076 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.0103251520676 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.266114764736 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN -0.186271570489 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.170104621577 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.160206597137 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.212856222911 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.189274468215 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.245247788823 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.0349978448607 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.453825324345 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.0396795395363 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.051369675011 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.206519658029 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.147993020382 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.00771005831278 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.259860978336 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.0118146487664 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.032989564978 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.106908651269 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.0272293654772 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 0.128473201848 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.0852397435507 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.0434297237527 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.0312650519885 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.0729168411375 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.326952777383 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.119491395395 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.269510212608 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.065027198211 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.00480239639063 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.165623059945 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.0375222372097 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.125700766598 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.0124439752366 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.0193273490886 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN -0.227203569539 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.135245686209 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.039900102263 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.0751550786005 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.00806158584407 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN 0.128277446627 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.0856923762653 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.0530782169419 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.0361782387315 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.0271143778427 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.105543402403 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.00310449767659 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.0499872066282 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0665275551444 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.0186968132303 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.0754547552546 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.0422484880249 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.154112431734 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0168688535694 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.0672571105835 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.0191006751578 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.0486803223982 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0314948526479 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.274391896041 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.247193097789 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.0383185408495 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.164342067099 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.112164801902 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.016537270802 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.267687384217 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.18808897266 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -0.0833811596397 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -0.0957301301051 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.00876758778798 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.0184030374318 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.192794242798 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.0757617019344 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.136686907861 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.180178057613 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.0171906307283 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.118067769267 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "BinaryClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.0552609355382) / 0.920357019329 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.0769076855516) / 1.06793886386 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.233076053204) / 0.956915205458 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.0041552351922) / 0.980339244173 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0944493732613) / 0.946958230151 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.0383840980854) / 0.816302506149 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.0528914288785) / 0.905844722944 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.16751825735) / 0.923513232453 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.225529345295) / 0.986569755759 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.0509142759732) / 1.00315442933 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.143026317864) / 1.03148046059 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 0.0140674829917) / 0.250148816993 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.159452009165) / 0.945216305374 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.0574625665163) / 0.973410002381 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - -0.0425146651787) / 1.15428164877 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -0.235315608982) / 1.03937829741 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - -0.168936873701) / 0.944271267782 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - -0.0810832936112) / 1.02887460369 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.110002084498) / 1.05081543291 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.0386795125919) / 1.12466028022 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.0351427674424) / 0.934125217179 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.213121160721) / 0.969723142874 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - -0.00745633339278) / 1.07687081157 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - -0.116702984076) / 0.967235626176 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.0103251520676) / 0.955272264053 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - -0.266114764736) / 0.909502894353 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - -0.186271570489) / 0.999281134052 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.170104621577) / 1.06302152785 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.160206597137) / 0.835425836218 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.212856222911) / 1.13137337678 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.189274468215) / 0.970101977527 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.245247788823) / 0.85960460341 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - -0.0349978448607) / 1.06951054925 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.453825324345) / 1.93866372656 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 0.0396795395363) / 1.13761509312 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.051369675011) / 0.978302408797 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.206519658029) / 0.984765641217 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.147993020382) / 1.06004617498 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - -0.00771005831278) / 0.942688693073 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.259860978336) / 0.940116959677 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.0118146487664) / 0.878295547889 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.032989564978) / 0.936972220548 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 0.106908651269) / 0.937008032941 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 0.0272293654772) / 0.965213791902 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 0.128473201848) / 1.02144588319 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - -0.0852397435507) / 1.03283020673 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.0434297237527) / 1.03151134474 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.0312650519885) / 0.99064981047 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.0729168411375) / 1.06878806899 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.326952777383) / 0.972253530278 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 0.119491395395) / 1.11538282751 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.269510212608) / 1.03064161904 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 0.065027198211) / 1.00427549651 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - -0.00480239639063) / 1.00344398069 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 0.165623059945) / 0.966219133759 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.0375222372097) / 0.962041602445 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -0.125700766598) / 1.0729970219 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - -0.0124439752366) / 0.987917963373 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.0193273490886) / 1.0008254127 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - -0.227203569539) / 0.955431368175 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 0.135245686209) / 1.20367211242 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 0.039900102263) / 1.0393678552 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 0.0751550786005) / 1.16346950396 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - -0.00806158584407) / 0.875842620252 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - 0.128277446627) / 0.829793553631 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - 0.0856923762653) / 1.24512825442 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - 0.0530782169419) / 1.05279003741 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.0361782387315) / 1.02798560482 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.0271143778427) / 1.10315390026 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.105543402403) / 0.857283605613 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.00310449767659) / 0.9339529467 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.0499872066282) / 0.994498196075 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.0665275551444) / 1.01461349349 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - -0.0186968132303) / 0.96978544305 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.0754547552546) / 1.09667677193 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.0422484880249) / 1.05107729277 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.154112431734) / 1.13652213594 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.0168688535694) / 0.936531215593 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.0672571105835) / 0.993877956171 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.0191006751578) / 1.08907827555 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.0486803223982) / 1.02834082 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.0314948526479) / 0.916984634276 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.274391896041) / 1.50000139425 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - 0.247193097789) / 1.06977037063 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.0383185408495) / 1.27852441839 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.164342067099) / 1.13688123955 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.112164801902) / 0.960787519303 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - -0.016537270802) / 0.942776406241 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - 0.267687384217) / 1.31253848349 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.18808897266) / 0.933558434303 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -0.0833811596397) / 0.783281328003 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -0.0957301301051) / 0.925342021027 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.00876758778798) / 1.09518573714 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - 0.0184030374318) / 0.79606579905 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.192794242798) / 0.93772874372 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.0757617019344) / 0.98491462877 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.136686907861) / 0.894529902742 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.180178057613) / 1.02562257137 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.0171906307283) / 1.0331019718 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - 0.118067769267) / 0.914606506994 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.5114374160766602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.3126649260520935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -0.22889307141304016) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.6720985174179077) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 1.3428261280059814) THEN 9 ELSE 10 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_90' AS feature, 0.5114374160766602 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -8.782361239572133e-17 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.3126649260520935 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1883137503969515 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_32' AS feature, -0.22889307141304016 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3360341151385928 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3156353450471101 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.03030303030303 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_65' AS feature, 0.6720985174179077 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24253731343283572 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9705882352941175 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.0303030303030303 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_68' AS feature, 1.3428261280059814 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.44253731343283575 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.970588235294117 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.0303030303030303 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.5114374160766602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.3126649260520935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.5349588990211487) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.834690511226654) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 1.3428261280059814) THEN 9 ELSE 10 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_90' AS feature, 0.5114374160766602 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.03934576706984e-05 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.3126649260520935 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.16948744935896423 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_59' AS feature, 0.5349588990211487 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.30248849708668896 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.7371213450570189 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08755482389677799 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_40' AS feature, 0.834690511226654 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21843227318023276 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.796991084419592 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.8409884608262888 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_68' AS feature, 1.3428261280059814 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.39849782407676293 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.796991084419592 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.840988460826289 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.5114374160766602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -0.19118349254131317) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.694678544998169) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= -1.927927017211914) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -1.5396084785461426) THEN 9 ELSE 10 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_90' AS feature, 0.5114374160766602 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00014306894026813193 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_32' AS feature, -0.19118349254131317 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1526291724961638 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, 0.694678544998169 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08916180823346305 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3165080317414624 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.8391022523533225 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_64' AS feature, -1.927927017211914 AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3317336026662577 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.66590324610028 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.601975481428386 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_21' AS feature, -1.5396084785461426 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3591578363158827 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.6995792570796742 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6659032461002798 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.5114374160766602) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 0.3126649260520935) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= 1.1250224113464355) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_65 <= 0.6720985174179077) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -1.6209477186203003) THEN 9 ELSE 10 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_90' AS feature, 0.5114374160766602 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00015615377382035737 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.3126649260520935 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13761376094498734 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_70' AS feature, 1.1250224113464355 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2491078022074046 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 31 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.3159643037571038 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0852793532482599 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_65' AS feature, 0.6720985174179077 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18757719273706308 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.602526112449068 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.5960243636731397 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_60' AS feature, -1.6209477186203003 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3239154533630183 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.590235238826141 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.563717962115153 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 0.97014703685 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", 0.0298529631497 AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte