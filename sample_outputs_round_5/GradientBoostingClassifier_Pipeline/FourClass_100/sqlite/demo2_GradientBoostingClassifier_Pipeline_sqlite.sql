-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.52002120455 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.204237747065 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0411721634188 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.161588592809 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.159742218289 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0380285585225 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.225800253382 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0992845876558 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.802560366443 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.569958150953 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.94473978813 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.508470262205 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.146544960558 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.00887895046541 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0429059416909 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.491109857456 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.0377149837108 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.103021577529 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -2.0123545904 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.0317423342388 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.12723483767 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.0752801339778 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0871662037366 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.0621867123722 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.0446748369608 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.126689397994 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN -0.916726836509 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.0221476858175 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.903968607005 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.226706140602 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.0313033586375 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.0056174372927 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.93123199099 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.206335582936 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.0668606569843 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.110769092491 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.214127625393 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.549008592826 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN -0.00357426238187 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.012501763748 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.468017029976 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.250739894952 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.182285678966 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.470126750089 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0319767662794 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.448084929261 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.00648835269845 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.0312978839811 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.673336215375 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.172646396339 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.252844324214 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.0806639724435 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.150638305856 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.580688475678 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.0615004555133 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -1.31371664206 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.126830992387 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.2615606454 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.336167099619 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN -0.070587229787 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 0.042371276586 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.281827880348 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -0.0631772113225 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.270296564611 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN 0.21900816827 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.0764560939539 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.350967286271 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.0825132020017 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.123562038097 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.0279745479285 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.00458286380798 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.10611898774 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN -0.327577292053 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.0092836667335 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.0591325578066 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.351413361349 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN 1.1225157257 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.170352233964 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.935147093739 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN -0.373663455224 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.0881523368583 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.10962538209 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.0217728708397 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.171158546512 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.139263492117 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.122895560158 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.963906632739 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.454966745739 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.129693975417 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.295777483265 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.0939266828445 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.0783504098031 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.0505650351341 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.155532343257 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.0909710726113 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN 0.026769648265 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.019511988754 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN -0.253920003389 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.23961380689 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.150367646813 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.52002120455) / 4.43983294661 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.204237747065) / 3.87013179267 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.0411721634188) / 0.988843810288 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.161588592809) / 3.78229328686 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.159742218289) / 4.34136993831 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.0380285585225) / 1.0375733989 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.225800253382) / 4.09356683798 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.0992845876558) / 0.925084562609 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.802560366443) / 4.40112840719 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.569958150953) / 4.01476549902 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.94473978813) / 3.75659510077 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.508470262205) / 4.08583715549 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 0.146544960558) / 3.61334161311 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - -0.00887895046541) / 4.509656632 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - -0.0429059416909) / 1.05987065332 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -0.491109857456) / 3.7776222291 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - -0.0377149837108) / 0.945246422782 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.103021577529) / 0.990697088189 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - -2.0123545904) / 19.8347148814 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 0.0317423342388) / 1.03048238984 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.12723483767) / 0.915622588781 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - -0.0752801339778) / 0.829020895713 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.0871662037366) / 4.17665652736 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - -0.0621867123722) / 1.01313664488 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.0446748369608) / 4.5788892563 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - -0.126689397994) / 1.18912416883 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - -0.916726836509) / 4.26145333506 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.0221476858175) / 4.34644728116 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - -0.903968607005) / 4.8458101773 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.226706140602) / 1.14653300909 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.0313033586375) / 1.17782443748 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.0056174372927) / 0.891432348807 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.93123199099) / 4.34156634016 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 0.206335582936) / 1.00147780096 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 0.0668606569843) / 4.52416770292 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.110769092491) / 0.921611921579 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.214127625393) / 0.93503742853 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 0.549008592826) / 4.16401858447 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - -0.00357426238187) / 0.939528522912 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.012501763748) / 18.3188173002 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.468017029976) / 3.74188518371 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 0.250739894952) / 4.97283594994 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.182285678966) / 4.06245862301 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.470126750089) / 3.88273721007 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0319767662794) / 0.979967004761 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - -0.448084929261) / 4.68663014815 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.00648835269845) / 4.35116379184 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - -0.0312978839811) / 1.02905716407 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.673336215375) / 4.74856878372 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.172646396339) / 4.37849118099 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 0.252844324214) / 1.16809031178 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.0806639724435) / 1.16270340999 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 0.150638305856) / 1.07138933077 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - -0.580688475678) / 4.19422915617 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.0615004555133) / 0.859013483835 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -1.31371664206) / 5.12434188314 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -0.126830992387) / 1.01766645603 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.2615606454) / 3.93044908205 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 0.336167099619) / 4.12012579118 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - -0.070587229787) / 0.85100300666 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 0.042371276586) / 4.3523171801 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.281827880348) / 3.95964150547 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -0.0631772113225) / 0.876357840561 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.270296564611) / 4.09826228259 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - 0.21900816827) / 4.26137608611 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - 0.0764560939539) / 1.10182444171 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - 0.350967286271) / 3.73879549421 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.0825132020017) / 0.91536690827 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.123562038097) / 1.08985467364 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.0279745479285) / 3.99156102395 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.00458286380798) / 0.927717697067 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.10611898774) / 0.99914013183 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - -0.327577292053) / 4.36775066506 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - -0.0092836667335) / 0.911166535965 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.0591325578066) / 0.898257761337 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.351413361349) / 3.84327759664 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - 1.1225157257) / 4.67681168831 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.170352233964) / 0.909937201982 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - 0.935147093739) / 4.46270429672 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - -0.373663455224) / 3.82596577559 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.0881523368583) / 0.901248844226 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.10962538209) / 0.928947095964 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.0217728708397) / 0.968107705937 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.171158546512) / 4.89096580521 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.139263492117) / 1.04254062606 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - -0.122895560158) / 1.0648751328 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.963906632739) / 3.91050582455 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.454966745739) / 3.91517994986 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.129693975417) / 1.04437635419 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.295777483265) / 4.24560880377 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - 0.0939266828445) / 0.965458926376 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 0.0783504098031) / 0.938483084765 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - 0.0505650351341) / 1.01547376241 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.155532343257) / 4.06082254895 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.0909710726113) / 4.35254380978 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - 0.026769648265) / 1.02370402841 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.019511988754) / 1.06684784097 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - -0.253920003389) / 1.06548988365 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - -0.23961380689) / 5.02082275513 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - 0.150367646813) / 1.12584819585 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.5660216808319092) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.1412843018770218) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -0.17596915364265442) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_27' AS feature, 1.5660216808319092 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.019573135652821445 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, -0.1412843018770218 AS threshold, 64 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.05595373266774675 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9913471685540968 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_63' AS feature, -0.17596915364265442 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08987960066558665 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.751816894412454 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3661350032610176 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.080667491853828 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.3677719533443451) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.09107755869626999) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.9173477292060852) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 0.7878560423851013) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1326311826705933) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.4930099546909332) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 2.1029675006866455) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_88' AS feature, -0.3677719533443451 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.008557833162833069 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_89' AS feature, 0.09107755869626999 AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2531751149033092 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, 0.9173477292060852 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7509966979094274 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.9706872025572806 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.1431910836364363 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_40' AS feature, 0.7878560423851013 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03129436110018687 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9942824828924621 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.0411457455204314 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_9' AS feature, -1.1326311826705933 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13651616332850267 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_98' AS feature, -0.4930099546909332 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19788060429901405 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.008470110998567 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9927704237590335 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_5' AS feature, 2.1029675006866455 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.22011535523538187 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9973215025001485 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.9652929770781875 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_0_1, "DT_Output_1"."Estimator" AS "Estimator_0_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -1.3144460916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.23643817007541656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -1.5099575519561768) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.37846195697784424) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.69873046875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 1.477922797203064) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.13796782493591309) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_78' AS feature, -1.3144460916519165 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.008311928510387845 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_3' AS feature, 0.23643817007541656 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4968148696393048 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_82' AS feature, -1.5099575519561768 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7418229570424538 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.8942573309556514 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.910376164987134 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_42' AS feature, 0.37846195697784424 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.23820939257014212 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9922157307127075 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9769476689740635 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_42' AS feature, 0.69873046875 AS threshold, 59 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.07680369775102415 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_41' AS feature, 1.477922797203064 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1785116820386005 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9002581133635443 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.07215543761624 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_86' AS feature, -0.13796782493591309 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2501148231733283 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.9283184568639906 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.4875087264113584 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_0_2, "DT_Output_2"."Estimator" AS "Estimator_0_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -1.3583959341049194) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_37 <= -0.5874133110046387) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.25696903467178345) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 1.498873233795166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_18 <= -1.2426402568817139) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_90 <= 0.5957527756690979) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_56' AS feature, -1.3583959341049194 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.036574796351445726 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_37' AS feature, -0.5874133110046387 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.722287829897919 AS "Estimator" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.833138041150282 AS "Estimator" UNION ALL SELECT 3 AS node_id, 'scaler_14' AS feature, -0.25696903467178345 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.719040819597667 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.6656469219987873 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.6808315254565804 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_19' AS feature, 1.498873233795166 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.01872464183778598 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_18' AS feature, -1.2426402568817139 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06963214204797755 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.663027247009295 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5485829639918699 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_90' AS feature, 0.5957527756690979 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7194341112099919 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.6655498949555048 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.6808315254565804 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_0_3, "DT_Output_3"."Estimator" AS "Estimator_0_3" 
FROM "DT_Output_3"), 
"RF_Join_CTE_0" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_0_1".join_key_0_1 AS join_key_0_1, "RF_Tree_0_1"."Estimator_0_1" AS "Estimator_0_1", "RF_Tree_0_2".join_key_0_2 AS join_key_0_2, "RF_Tree_0_2"."Estimator_0_2" AS "Estimator_0_2", "RF_Tree_0_3".join_key_0_3 AS join_key_0_3, "RF_Tree_0_3"."Estimator_0_3" AS "Estimator_0_3" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_0_1" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_0_1".join_key_0_1 LEFT OUTER JOIN "RF_Tree_0_2" ON "RF_Tree_0_2".join_key_0_2 = "RF_Tree_0_1".join_key_0_1 LEFT OUTER JOIN "RF_Tree_0_3" ON "RF_Tree_0_3".join_key_0_3 = "RF_Tree_0_2".join_key_0_2), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 1.5660216808319092) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.9909712076187134) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= -0.13817477226257324) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -1.5596473217010498) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.08103429526090622) THEN 9 ELSE 10 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_27' AS feature, 1.5660216808319092 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.017295956906680808 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_52' AS feature, -0.9909712076187134 AS threshold, 64 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050251996223012796 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_66' AS feature, -0.13817477226257324 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.28808756550276765 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2942596537035962 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.667318127404173 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_33' AS feature, -1.5596473217010498 AS threshold, 53 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.12047341469440119 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6891649679619305 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6434486189493079 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_24' AS feature, 0.08103429526090622 AS threshold, 3 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6857662151750682 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.329763329788955 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.5095435260158996 AS "Estimator") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_1_0, "DT_Output_4"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.3677719533443451) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.09107755869626999) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 <= -0.07343859225511551) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 <= -0.8246555924415588) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1326311826705933) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.4930099546909332) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 2.1029675006866455) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_88' AS feature, -0.3677719533443451 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.008499609746368056 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_89' AS feature, 0.09107755869626999 AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2276259494889992 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, -0.07343859225511551 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.678298437564556 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.289926951138595 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.4038450713658155 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_60' AS feature, -0.8246555924415588 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.029901186554176055 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7225468454004542 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9724091141402371 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_9' AS feature, -1.1326311826705933 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1239387720392143 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_98' AS feature, -0.4930099546909332 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17745897165727165 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.3142639845945907 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9634450766864824 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_5' AS feature, 2.1029675006866455 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.19928820796333574 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9677152833687064 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2862416596543675 AS "Estimator") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_1_1, "DT_Output_5"."Estimator" AS "Estimator_1_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -1.3144460916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -1.4794433116912842) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.5481575727462769) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.9232033491134644) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.69873046875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -1.669131875038147) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.38963860273361206) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_78' AS feature, -1.3144460916519165 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00785868438774322 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_97' AS feature, -1.4794433116912842 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4472773034386176 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_59' AS feature, 0.5481575727462769 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2212845127777922 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9419144553017795 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9853118620668213 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_86' AS feature, 0.9232033491134644 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6701312421774208 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.25259258813357 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.385024428044558 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_42' AS feature, 0.69873046875 AS threshold, 59 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06957203866928363 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_85' AS feature, -1.669131875038147 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.16156772162239935 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.625756378042762 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8711192637205782 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_89' AS feature, 0.38963860273361206 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.22612837082287393 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.977377852321265 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.019325652967379 AS "Estimator") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_1_2" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_1_2, "DT_Output_6"."Estimator" AS "Estimator_1_2" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.6585918068885803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.9514647126197815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -1.4408138990402222) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_73 <= -0.922695517539978) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -1.289771318435669) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 1.9347662925720215) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 1.578751564025879) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_88' AS feature, 0.6585918068885803 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03327944628425653 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_20' AS feature, 0.9514647126197815 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06291296638125918 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_84' AS feature, -1.4408138990402222 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1554938650503315 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5069160848439378 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 39 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8864639376652905 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_73' AS feature, -0.922695517539978 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3794179939265308 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.977562966851296 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.3985280206125883 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_45' AS feature, -1.289771318435669 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3667464768580441 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_63' AS feature, 1.9347662925720215 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.23758419468651532 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9731361469425355 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0168948199280092 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_24' AS feature, 1.578751564025879 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5865030846924294 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.278169775486066 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.990968670935315 AS "Estimator") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_1_3" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_1_3, "DT_Output_7"."Estimator" AS "Estimator_1_3" 
FROM "DT_Output_7"), 
"RF_Join_CTE_1" AS 
(SELECT "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_1_1".join_key_1_1 AS join_key_1_1, "RF_Tree_1_1"."Estimator_1_1" AS "Estimator_1_1", "RF_Tree_1_2".join_key_1_2 AS join_key_1_2, "RF_Tree_1_2"."Estimator_1_2" AS "Estimator_1_2", "RF_Tree_1_3".join_key_1_3 AS join_key_1_3, "RF_Tree_1_3"."Estimator_1_3" AS "Estimator_1_3" 
FROM "RF_Tree_1_0" LEFT OUTER JOIN "RF_Tree_1_1" ON "RF_Tree_1_0".join_key_1_0 = "RF_Tree_1_1".join_key_1_1 LEFT OUTER JOIN "RF_Tree_1_2" ON "RF_Tree_1_2".join_key_1_2 = "RF_Tree_1_1".join_key_1_1 LEFT OUTER JOIN "RF_Tree_1_3" ON "RF_Tree_1_3".join_key_1_3 = "RF_Tree_1_2".join_key_1_2), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.1412843018770218) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_25 <= 1.8691737651824951) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.00188122084364295) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.28543415665626526) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.8337828516960144) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.08328752219676971) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_61' AS feature, -0.1412843018770218 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.015068683345394504 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_25' AS feature, 1.8691737651824951 AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.17687754241341166 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_41' AS feature, 0.00188122084364295 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.20551113032252183 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9575677448833261 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9376509604927353 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.999269168710394 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -0.28543415665626526 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10841702489072388 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_29' AS feature, 0.8337828516960144 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.39038455788410253 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.0287322601973505 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.942562992651857 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_61' AS feature, 0.08328752219676971 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.09665027183173334 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.5763654362875403 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7618080116966759 AS "Estimator") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_2_0, "DT_Output_8"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.3677719533443451) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.04674116522073746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 1.0753344297409058) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 1.4700632095336914) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1326311826705933) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.4930099546909332) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 1.999224066734314) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_88' AS feature, -0.3677719533443451 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00821994822647372 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_66' AS feature, 0.04674116522073746 AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2030340230932393 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_76' AS feature, 1.0753344297409058 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.48307410061124817 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.960707748958955 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9215275087691454 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_3' AS feature, 1.4700632095336914 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13301406992837125 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9562852333948819 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8664109613996602 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_9' AS feature, -1.1326311826705933 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.11149966753833343 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_98' AS feature, -0.4930099546909332 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15323169739443257 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8831222142338848 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9442697034665478 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_96' AS feature, 1.999224066734314 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.17768250877152492 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9384186589857942 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8639046535636101 AS "Estimator") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_2_1" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_2_1, "DT_Output_9"."Estimator" AS "Estimator_2_1" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -1.3144460916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 0.6763757467269897) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_94 <= -0.28876566886901855) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.18981564044952393) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.69873046875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 1.477922797203064) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.38963860273361206) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_78' AS feature, -1.3144460916519165 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00704216571991379 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_85' AS feature, 0.6763757467269897 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4013194281612941 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_94' AS feature, -0.28876566886901855 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.60103021348049 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.848541215253255 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9458953031211275 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_98' AS feature, -0.18981564044952393 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.19781292779629328 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9160081376574419 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9546793040649417 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_42' AS feature, 0.69873046875 AS threshold, 59 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0624132292970267 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_41' AS feature, 1.477922797203064 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.14443615888888517 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.83860758978796 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.0949162154169145 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_89' AS feature, 0.38963860273361206 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2012319015339469 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.947291281606556 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6508694539506268 AS "Estimator") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"RF_Tree_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_2_2, "DT_Output_10"."Estimator" AS "Estimator_2_2" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.6585918068885803) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.9514647126197815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= -1.7687218189239502) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= 0.3850197196006775) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 <= -1.289771318435669) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= -0.494975209236145) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 <= 1.7253916263580322) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_88' AS feature, 0.6585918068885803 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.029728757403435162 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_20' AS feature, 0.9514647126197815 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.05584053880514696 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_80' AS feature, -1.7687218189239502 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13820221027557408 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.015877984574077 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7647696281483033 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_89' AS feature, 0.3850197196006775 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.33766522488689393 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9387559083030077 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9474759353292078 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_45' AS feature, -1.289771318435669 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32636898425985306 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_68' AS feature, -0.494975209236145 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.21203920662390768 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9860122972820626 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9409516422180991 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_40' AS feature, 1.7253916263580322 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.522153780944857 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8652308894542589 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9589702412337344 AS "Estimator") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"RF_Tree_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_2_3, "DT_Output_11"."Estimator" AS "Estimator_2_3" 
FROM "DT_Output_11"), 
"RF_Join_CTE_2" AS 
(SELECT "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_2_1".join_key_2_1 AS join_key_2_1, "RF_Tree_2_1"."Estimator_2_1" AS "Estimator_2_1", "RF_Tree_2_2".join_key_2_2 AS join_key_2_2, "RF_Tree_2_2"."Estimator_2_2" AS "Estimator_2_2", "RF_Tree_2_3".join_key_2_3 AS join_key_2_3, "RF_Tree_2_3"."Estimator_2_3" AS "Estimator_2_3" 
FROM "RF_Tree_2_0" LEFT OUTER JOIN "RF_Tree_2_1" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_2_1".join_key_2_1 LEFT OUTER JOIN "RF_Tree_2_2" ON "RF_Tree_2_2".join_key_2_2 = "RF_Tree_2_1".join_key_2_1 LEFT OUTER JOIN "RF_Tree_2_3" ON "RF_Tree_2_3".join_key_2_3 = "RF_Tree_2_2".join_key_2_2), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= -0.1412843018770218) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 <= 2.1682662963867188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.00188122084364295) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.28543415665626526) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 0.5890238881111145) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_61 <= 0.08328752219676971) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_61' AS feature, -0.1412843018770218 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.013240193860536422 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_64' AS feature, 2.1682662963867188 AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.15723679450632674 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_41' AS feature, 0.00188122084364295 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1827037689369456 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9297091371540027 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9122054316674891 AS "Estimator" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.688574949328302 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -0.28543415665626526 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0966519487375667 AS "Estimator" UNION ALL SELECT 7 AS node_id, 'scaler_47' AS feature, 0.5890238881111145 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3502943937330323 AS "Estimator" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7206750137281883 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9303742443939996 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'scaler_61' AS feature, 0.08328752219676971 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08781528398640824 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.0473311265791057 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7296570188963099 AS "Estimator") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_12"."KEY" AS join_key_3_0, "DT_Output_12"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= -0.3677719533443451) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.04674116522073746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_76 <= 1.0753344297409058) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 1.2630774974822998) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1326311826705933) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= -0.4930099546909332) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 2.1029675006866455) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_88' AS feature, -0.3677719533443451 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00804969354437667 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_66' AS feature, 0.04674116522073746 AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1806986352872217 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_76' AS feature, 1.0753344297409058 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4305241949769443 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6684743934141884 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8990721229378943 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_57' AS feature, 1.2630774974822998 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.11909203634044538 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9291913420494825 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6022335074749479 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_9' AS feature, -1.1326311826705933 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.10032665430649147 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_98' AS feature, -0.4930099546909332 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13376043500910662 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6110170579319214 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9233724850419818 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_5' AS feature, 2.1029675006866455 AS threshold, 36 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.15884842663539098 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9146114619879205 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5950846833632293 AS "Estimator") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"RF_Tree_3_1" AS 
(SELECT "DT_Output_13"."KEY" AS join_key_3_1, "DT_Output_13"."Estimator" AS "Estimator_3_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -1.3144460916519165) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -1.4794433116912842) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= 1.0602564811706543) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.36854884028434753) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 0.69873046875) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -1.669131875038147) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= -0.13796782493591309) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_78' AS feature, -1.3144460916519165 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0061327140765937765 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_97' AS feature, -1.4794433116912842 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3569916105234924 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_82' AS feature, 1.0602564811706543 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.17608526955023815 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.927867037209701 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.89336338994547 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_62' AS feature, -0.36854884028434753 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5346839038814024 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.653584574529707 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.591774972808064 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_42' AS feature, 0.69873046875 AS threshold, 59 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.05536991063253766 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_85' AS feature, -1.669131875038147 AS threshold, 45 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.12875681423702132 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9279272406898607 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8134247656980581 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_86' AS feature, -0.13796782493591309 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18051656523901688 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.65658896507836 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.425937556914077 AS "Estimator") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"RF_Tree_3_2" AS 
(SELECT "DT_Output_14"."KEY" AS join_key_3_2, "DT_Output_14"."Estimator" AS "Estimator_3_2" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.9514647126197815) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_84 <= -1.739010214805603) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -0.5634580254554749) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.7226697206497192) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 0.992281436920166) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.3266715705394745) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= -0.2883763015270233) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_20' AS feature, 0.9514647126197815 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.02654547843209292 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_84' AS feature, -1.739010214805603 AS threshold, 56 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03595876468373761 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_32' AS feature, -0.5634580254554749 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5397939454086667 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9336926564091426 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5492296341153584 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_88' AS feature, 0.7226697206497192 AS threshold, 52 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08024743469084565 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7283153564499202 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7257278418933922 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_80' AS feature, 0.992281436920166 AS threshold, 11 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34474889793086666 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_79' AS feature, 0.3266715705394745 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5419131675771202 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7915584170278158 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5086784777169682 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_85' AS feature, -0.2883763015270233 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.18102248779247607 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9188314295778522 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9097350230801848 AS "Estimator") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"RF_Tree_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS join_key_3_3, "DT_Output_15"."Estimator" AS "Estimator_3_3" 
FROM "DT_Output_15"), 
"RF_Join_CTE_3" AS 
(SELECT "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0", "RF_Tree_3_1".join_key_3_1 AS join_key_3_1, "RF_Tree_3_1"."Estimator_3_1" AS "Estimator_3_1", "RF_Tree_3_2".join_key_3_2 AS join_key_3_2, "RF_Tree_3_2"."Estimator_3_2" AS "Estimator_3_2", "RF_Tree_3_3".join_key_3_3 AS join_key_3_3, "RF_Tree_3_3"."Estimator_3_3" AS "Estimator_3_3" 
FROM "RF_Tree_3_0" LEFT OUTER JOIN "RF_Tree_3_1" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_3_1".join_key_3_1 LEFT OUTER JOIN "RF_Tree_3_2" ON "RF_Tree_3_2".join_key_3_2 = "RF_Tree_3_1".join_key_3_1 LEFT OUTER JOIN "RF_Tree_3_3" ON "RF_Tree_3_3".join_key_3_3 = "RF_Tree_3_2".join_key_3_2), 
"RF_Join_CTE" AS 
(SELECT "RF_Join_CTE_0".join_key_0_0 AS join_key_0_0, "RF_Join_CTE_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Join_CTE_0".join_key_0_1 AS join_key_0_1, "RF_Join_CTE_0"."Estimator_0_1" AS "Estimator_0_1", "RF_Join_CTE_0".join_key_0_2 AS join_key_0_2, "RF_Join_CTE_0"."Estimator_0_2" AS "Estimator_0_2", "RF_Join_CTE_0".join_key_0_3 AS join_key_0_3, "RF_Join_CTE_0"."Estimator_0_3" AS "Estimator_0_3", "RF_Join_CTE_1".join_key_1_0 AS join_key_1_0, "RF_Join_CTE_1"."Estimator_1_0" AS "Estimator_1_0", "RF_Join_CTE_1".join_key_1_1 AS join_key_1_1, "RF_Join_CTE_1"."Estimator_1_1" AS "Estimator_1_1", "RF_Join_CTE_1".join_key_1_2 AS join_key_1_2, "RF_Join_CTE_1"."Estimator_1_2" AS "Estimator_1_2", "RF_Join_CTE_1".join_key_1_3 AS join_key_1_3, "RF_Join_CTE_1"."Estimator_1_3" AS "Estimator_1_3", "RF_Join_CTE_2".join_key_2_0 AS join_key_2_0, "RF_Join_CTE_2"."Estimator_2_0" AS "Estimator_2_0", "RF_Join_CTE_2".join_key_2_1 AS join_key_2_1, "RF_Join_CTE_2"."Estimator_2_1" AS "Estimator_2_1", "RF_Join_CTE_2".join_key_2_2 AS join_key_2_2, "RF_Join_CTE_2"."Estimator_2_2" AS "Estimator_2_2", "RF_Join_CTE_2".join_key_2_3 AS join_key_2_3, "RF_Join_CTE_2"."Estimator_2_3" AS "Estimator_2_3", "RF_Join_CTE_3".join_key_3_0 AS join_key_3_0, "RF_Join_CTE_3"."Estimator_3_0" AS "Estimator_3_0", "RF_Join_CTE_3".join_key_3_1 AS join_key_3_1, "RF_Join_CTE_3"."Estimator_3_1" AS "Estimator_3_1", "RF_Join_CTE_3".join_key_3_2 AS join_key_3_2, "RF_Join_CTE_3"."Estimator_3_2" AS "Estimator_3_2", "RF_Join_CTE_3".join_key_3_3 AS join_key_3_3, "RF_Join_CTE_3"."Estimator_3_3" AS "Estimator_3_3" 
FROM "RF_Join_CTE_0" LEFT OUTER JOIN "RF_Join_CTE_1" ON "RF_Join_CTE_0".join_key_0_0 = "RF_Join_CTE_1".join_key_1_0 LEFT OUTER JOIN "RF_Join_CTE_2" ON "RF_Join_CTE_2".join_key_2_0 = "RF_Join_CTE_1".join_key_1_0 LEFT OUTER JOIN "RF_Join_CTE_3" ON "RF_Join_CTE_3".join_key_3_0 = "RF_Join_CTE_2".join_key_2_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 0.223880597015 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", 0.238805970149 + 0.1 * "RF_Join_CTE"."Estimator_0_1" + 0.1 * "RF_Join_CTE"."Estimator_1_1" + 0.1 * "RF_Join_CTE"."Estimator_2_1" + 0.1 * "RF_Join_CTE"."Estimator_3_1" AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", 0.238805970149 + 0.1 * "RF_Join_CTE"."Estimator_0_2" + 0.1 * "RF_Join_CTE"."Estimator_1_2" + 0.1 * "RF_Join_CTE"."Estimator_2_2" + 0.1 * "RF_Join_CTE"."Estimator_3_2" AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", 0.298507462687 + 0.1 * "RF_Join_CTE"."Estimator_0_3" + 0.1 * "RF_Join_CTE"."Estimator_1_3" + 0.1 * "RF_Join_CTE"."Estimator_2_3" + 0.1 * "RF_Join_CTE"."Estimator_3_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte