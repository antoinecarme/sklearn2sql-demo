-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= 0.0007076415931805968) THEN CASE WHEN ("ADS"."Feature_2" <= 0.0061888848431408405) THEN CASE WHEN ("ADS"."Feature_5" <= 0.11267216503620148) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.02531522512435913) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.06870198249816895) THEN CASE WHEN ("ADS"."Feature_9" <= 0.03827231749892235) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.022485405206680298) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.0007076415931805968 AS threshold, 296 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.800964430811488e-16 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 156 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -38.02875952875955 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 0.11267216503620148 AS threshold, 125 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -49.21081081081083 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 124 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -50.43984306887534 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 103.1891891891892 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.02531522512435913 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.060156931124678 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -14.02133712660028 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 40.439189189189186 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.06870198249816895 AS threshold, 140 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 42.374903474903455 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.03827231749892235 AS threshold, 120 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 30.505855855855838 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 85 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.789189189189177 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 63.817760617760605 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_5' AS feature, 0.022485405206680298 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 113.58918918918918 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 132.49688149688149 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 78.47490347490347 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= -0.00016888421669136733) THEN CASE WHEN ("ADS"."Feature_2" <= 0.0061888848431408405) THEN CASE WHEN ("ADS"."Feature_8" <= -0.009431487880647182) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.02531522512435913) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.047145746648311615) THEN CASE WHEN ("ADS"."Feature_0" <= -0.012779632583260536) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.022485405206680298) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00016888421669136733 AS threshold, 296 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.264655812951812e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 155 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -34.480458137638095 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, -0.009431487880647182 AS threshold, 124 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -44.68910798155069 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 113 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -48.65499378910734 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.948644685741465 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.02531522512435913 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.354141238012216 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -12.619203413940248 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 36.39527027027031 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.047145746648311615 AS threshold, 141 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 37.90404972577238 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, -0.012779632583260536 AS threshold, 102 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.541167080607288 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -17.54011934011934 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.288520846307094 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_5' AS feature, 0.022485405206680298 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 80.69928125928122 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 109.09839057102215 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 53.72012741312742 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= -0.00016888421669136733) THEN CASE WHEN ("ADS"."Feature_2" <= 0.0061888848431408405) THEN CASE WHEN ("ADS"."Feature_5" <= 0.11267216503620148) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.02531522512435913) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.06870198249816895) THEN CASE WHEN ("ADS"."Feature_2" <= -0.021834230050444603) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.020144322887063026) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00016888421669136733 AS threshold, 296 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -9.313870995774286e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0061888848431408405 AS threshold, 155 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -31.032412323874297 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 0.11267216503620148 AS threshold, 124 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -40.2201971833956 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 123 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -41.34179040967672 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 97.73576964918101 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.02531522512435913 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.718727114210985 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -11.357283072546233 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.75574324324325 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.06870198249816895 AS threshold, 141 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 34.113644753195196 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, -0.021834230050444603 AS threshold, 121 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.337607452286253 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -15.680865328394795 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 96 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 34.75908473892193 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_4' AS feature, -0.020144322887063026 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 93.25867042369438 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 159.52966198239884 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 85.89522691717166 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_8" <= 0.0007076415931805968) THEN CASE WHEN ("ADS"."Feature_2" <= 0.024511689320206642) THEN CASE WHEN ("ADS"."Feature_6" <= 0.021027816459536552) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.02531522512435913) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.03851289674639702) THEN CASE WHEN ("ADS"."Feature_9" <= 0.03620126470923424) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.01319466345012188) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.0007076415931805968 AS threshold, 296 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.2482507520109868e-14 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.024511689320206642 AS threshold, 156 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -27.75957119386492 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.021027816459536552 AS threshold, 132 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -34.76817575583834 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 70 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -23.77480400922432 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 62 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -47.180047082660685 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.02531522512435913 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.787753896989093 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -14.611028449502134 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 53.1190578078078 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.03851289674639702 AS threshold, 140 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 30.932093616020868 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, 0.03620126470923424 AS threshold, 91 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.622622577183112 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5954512023303782 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 46.18375817060176 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.01319466345012188 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 61.221111259576624 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.702484246428927 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 80.09038186031134 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 149.810810811 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"