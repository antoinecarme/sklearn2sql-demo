-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.29469120502471924) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.4802059829235077) THEN CASE WHEN (`ADS`.`Feature_8` <= 0.6416537761688232) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.3785451054573059) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.503401517868042) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.4932486414909363) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.783379852771759) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman1 AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.29469120502471924 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.942295742911849e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.4802059829235077 AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.687383606106114 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.6416537761688232 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.975986660401708 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.034907619813232 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.3286842618728976 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.3785451054573059 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4833393300922797 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.64420424341125 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8713170613301361 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.503401517868042 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.0580745708499224 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.4932486414909363 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.3180682255192391 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.6695227200909555 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.47050930261528234 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.783379852771759 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.326210876475032 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.050142858327793 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.309329908232698 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.29469120502471924) THEN CASE WHEN (`ADS`.`Feature_1` <= 0.4802059829235077) THEN CASE WHEN (`ADS`.`Feature_8` <= 0.6416537761688232) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.6703925728797913) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.503401517868042) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.5593414306640625) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.7965967655181885) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman1 AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.29469120502471924 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.6771678564342e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.4802059829235077 AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.3186452454955013 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.6416537761688232 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.378387994361537 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -6.331416857831911 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.9958158356856077 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.6703925728797913 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4350053970830512 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1398531512409242 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.7972932195690143 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.503401517868042 AS threshold, 43 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.8522671137649296 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.5593414306640625 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.28626140296731556 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.5948879391022512 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4585739785459322 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.7965967655181885 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.893589788827527 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.0275433175441155 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.892260798720554 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1_0, `DT_Output_1`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.503401517868042) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.4932486414909363) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.6224978566169739) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_0` <= 0.6002689599990845) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.783379852771759) THEN CASE WHEN (`ADS`.`Feature_0` <= 0.927418053150177) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_9` <= 0.32482457160949707) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman1 AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.503401517868042 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0737679402344797e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.4932486414909363 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.0749322105645214 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 0.6224978566169739 AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.340538845497721 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.521681729242928 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.3157224733630755 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 0.6002689599990845 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.45721638141964127 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5558521981549043 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.314508777306308 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_3' AS feature, 0.783379852771759 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.4095986961394424 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.927418053150177 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8955530926915686 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3697750660649557 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.083777627728992 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_9' AS feature, 0.32482457160949707 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.762479806052077 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.664910196475801 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.461669675910836 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2_0, `DT_Output_2`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` <= 0.2905094027519226) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.013504854403436184) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.09211871773004532) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.4399290382862091) THEN CASE WHEN (`ADS`.`Feature_3` <= 0.4932486414909363) THEN 8 ELSE 9 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 0.7965967655181885) THEN 11 ELSE 12 END END END AS node_id_2 
FROM freidman1 AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.2905094027519226 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.96537744574711e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.013504854403436184 AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.926944490311398 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.796366763575172 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, 0.09211871773004532 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.2947212166869484 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -6.7821430526616195 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.7134842440245035 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_1' AS feature, 0.4399290382862091 AS threshold, 45 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4309506397077933 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, 0.4932486414909363 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6740319593951947 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.483462515972738 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2624448927973198 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'Feature_3' AS feature, 0.7965967655181885 AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.1149367189901835 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.838648209333844 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.396821458106487 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3_0, `DT_Output_3`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_3`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_1_0` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_2_0` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_3_0` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_2_0`.join_key_2_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 13.520224827 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` AS `Estimator` 
FROM `RF_Join_CTE`)
 SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `RF_AVG_Scores`