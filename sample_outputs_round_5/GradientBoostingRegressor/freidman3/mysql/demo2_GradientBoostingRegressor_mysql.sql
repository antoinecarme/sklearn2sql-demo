-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.041372209787368774) THEN CASE WHEN (`ADS`.`Feature_3` <= 7.298811435699463) THEN CASE WHEN (`ADS`.`Feature_0` <= 58.84786605834961) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.022014707326889038) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.44184577465057373) THEN CASE WHEN (`ADS`.`Feature_1` <= 1540.005615234375) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 351.22857666015625) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman3 AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.041372209787368774 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2262164749591282e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 7.298811435699463 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.2189653300004266 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 58.84786605834961 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.1474151529955021 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.110987553642715 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.1838427523482893 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.022014707326889038 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.2666654480037094 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.2759195481160528 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.2481572477790226 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.44184577465057373 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.09830365564519582 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 1540.005615234375 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.035509407892315256 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.055513520202320664 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0945173221227199 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_1' AS feature, 351.22857666015625 AS threshold, 47 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.14100995251886955 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08438865910393711 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.16197726522796793 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.041372209787368774) THEN CASE WHEN (`ADS`.`Feature_3` <= 7.298811435699463) THEN CASE WHEN (`ADS`.`Feature_1` <= 871.7626953125) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_3` <= 9.607440948486328) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 783.7642822265625) THEN CASE WHEN (`ADS`.`Feature_0` <= 25.231555938720703) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.32282161712646484) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman3 AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.041372209787368774 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2593574607688342e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 7.298811435699463 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0970687970003838 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 871.7626953125 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.032673637695952 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9998887982784435 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0654584771134603 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 9.607440948486328 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.1399989032033384 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.1233415230011203 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.1483275933044474 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 783.7642822265625 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.08847329008067623 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 25.231555938720703 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.001280000486819514 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1793512897884259 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.037406258541868596 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.32282161712646484 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.14515957886014721 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03455190311112819 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1723885912800375 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1_0, `DT_Output_1`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.041372209787368774) THEN CASE WHEN (`ADS`.`Feature_3` <= 7.298811435699463) THEN CASE WHEN (`ADS`.`Feature_2` <= 0.011143909767270088) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 215.7552490234375) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 783.7642822265625) THEN CASE WHEN (`ADS`.`Feature_0` <= 25.231555938720703) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.32282161712646484) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman3 AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.041372209787368774 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.279476026717726e-17 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 7.298811435699463 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9873619173003455 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.011143909767270088 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9294062739263567 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9589126294021142 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8998999184505991 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 215.7552490234375 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0259990128830045 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0110073707010083 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0334948339740027 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 783.7642822265625 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0796259610726086 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 25.231555938720703 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0011520004381376237 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.16141616080958338 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03366563268768182 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.32282161712646484 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13064362097413254 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.031096712800015337 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1551497321520338 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2_0, `DT_Output_2`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` <= 0.041372209787368774) THEN CASE WHEN (`ADS`.`Feature_3` <= 7.298811435699463) THEN CASE WHEN (`ADS`.`Feature_0` <= 58.84786605834961) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.022014707326889038) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS`.`Feature_1` <= 783.7642822265625) THEN CASE WHEN (`ADS`.`Feature_3` <= 4.599494934082031) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS`.`Feature_2` <= 0.32282161712646484) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman3 AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.041372209787368774 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2924984465785405e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 7.298811435699463 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8886257255703109 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 58.84786605834961 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.836465646533721 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8099099266055392 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8630213664619029 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.022014707326889038 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9233991115947041 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9301453505766024 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9099066336309076 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 783.7642822265625 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0716633649653478 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 4.599494934082031 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0010368003943238002 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13069970086845997 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.035704300726635316 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.32282161712646484 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.11757925887671931 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.027987041520013724 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 33 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.13963475893683036 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3_0, `DT_Output_3`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_3`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_1_0` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_2_0` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_3_0` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_2_0`.join_key_2_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 1.32840609679 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` AS `Estimator` 
FROM `RF_Join_CTE`)
 SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `RF_AVG_Scores`