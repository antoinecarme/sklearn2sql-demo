-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.11062738299369812) THEN CASE WHEN ("ADS"."Feature_2" <= 0.022056300193071365) THEN CASE WHEN ("ADS"."Feature_0" <= 47.39208221435547) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 54.24138641357422) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 460.1261291503906) THEN CASE WHEN ("ADS"."Feature_0" <= 19.26480484008789) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.13117879629135132) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman3 AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.11062738299369812 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.170734570535754e-16 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.022056300193071365 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5986197676518484 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 47.39208221435547 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.1333443809892405 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0618482101090165 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.2048405518694645 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 54.24138641357422 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.46493861431750044 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.28138272248306034 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5750721494181645 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 460.1261291503906 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10502101186874509 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 19.26480484008789 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.09393415628502916 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15177793598574418 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.20313953062759507 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.13117879629135132 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16380322064145114 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06618972356744973 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17475526560377977 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.11062738299369812) THEN CASE WHEN ("ADS"."Feature_2" <= 0.04534527286887169) THEN CASE WHEN ("ADS"."Feature_3" <= 6.75087308883667) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 88.97499084472656) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 460.1261291503906) THEN CASE WHEN ("ADS"."Feature_0" <= 19.26480484008789) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.13117879629135132) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman3 AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.11062738299369812 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.375350911102806e-16 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.04534527286887169 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5387577908866635 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 6.75087308883667 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9104464008149162 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6913193166641157 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0200099428903164 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 88.97499084472656 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3794626723459838 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2857706080061947 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6136928331954569 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 460.1261291503906 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09451891068187067 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 19.26480484008789 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08454074065652631 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13660014238716978 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1828255775648357 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.13117879629135132 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1474228985773061 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.05957075121070482 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15727973904340187 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.11062738299369812) THEN CASE WHEN ("ADS"."Feature_2" <= 0.04534527286887169) THEN CASE WHEN ("ADS"."Feature_2" <= 0.022056300193071365) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 88.97499084472656) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 460.1261291503906) THEN CASE WHEN ("ADS"."Feature_0" <= 19.26480484008789) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 44.34247589111328) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman3 AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.11062738299369812 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.462492232892702e-17 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.04534527286887169 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.4848820117979972 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.022056300193071365 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8194017607334246 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9180089486012849 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6221873849977041 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 88.97499084472656 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3415164051113854 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.25719354720557513 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5523235498759113 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 460.1261291503906 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08506701961368367 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 19.26480484008789 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.07608666659087364 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1229401281484529 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1645430198083521 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 44.34247589111328 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13268060871957557 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1817267859819255 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09180879433428402 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.11062738299369812) THEN CASE WHEN ("ADS"."Feature_2" <= 0.04534527286887169) THEN CASE WHEN ("ADS"."Feature_0" <= 67.14246368408203) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 88.97499084472656) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 460.1261291503906) THEN CASE WHEN ("ADS"."Feature_0" <= 19.26480484008789) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 94.54985046386719) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman3 AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.11062738299369812 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.1433640104348628e-16 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.04534527286887169 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.43639381061819754 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 67.14246368408203 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7374615846600822 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8262080537411564 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5599686464979338 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 88.97499084472656 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.307364764600247 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.23147419248501772 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.4970911948883202 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 460.1261291503906 AS threshold, 57 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07656031765231523 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 19.26480484008789 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06847799993178626 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11064611533360769 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1480887178275169 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 94.54985046386719 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11941254784761796 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 41 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13086908750077442 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03716016074551998 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 1.31510594986 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"