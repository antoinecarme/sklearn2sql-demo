-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.000388320004096 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN -0.000523121409649 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN -0.00059113583201 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.000699475650077 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.000639072638051 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.00167055436671 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN -0.000775937697276 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.000954484248167 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN -0.000573767437608 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.000881407121415 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM diabetes AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 0.000388320004096) / 0.0479877658692 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - -0.000523121409649) / 0.047529053468 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - -0.00059113583201) / 0.0456995777439 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.000699475650077) / 0.0478758790487 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.000639072638051) / 0.0480272670816 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 0.00167055436671) / 0.0485647246577 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - -0.000775937697276) / 0.0462775749119 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 0.000954484248167) / 0.0482818984956 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - -0.000573767437608) / 0.045893243625 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 0.000881407121415) / 0.047439004286 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 0.027921516448259354) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.14836068451404572) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 2.285642623901367) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.5141576528549194) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.5162749290466309) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= 0.788189172744751) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.4286001920700073) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_10' AS feature, 0.027921516448259354 AS threshold, 296 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.800964430811488e-16 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, 0.14836068451404572 AS threshold, 156 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -38.02875952875955 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 2.285642623901367 AS threshold, 125 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -49.21081081081083 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 124 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -50.43984306887534 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 103.1891891891892 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_5' AS feature, 0.5141576528549194 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.060156931124678 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -14.02133712660028 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 40.439189189189186 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_4' AS feature, 1.5162749290466309 AS threshold, 140 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 42.374903474903455 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_11' AS feature, 0.788189172744751 AS threshold, 120 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.505855855855838 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 85 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.789189189189177 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 63.817760617760605 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_7' AS feature, 0.4286001920700073 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 113.58918918918918 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 132.49688149688149 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 78.47490347490347 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 0.008822283707559109) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.14836068451404572) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= -0.19300708174705505) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.5141576528549194) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.0445802211761475) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= -0.2744022607803345) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.4286001920700073) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_10' AS feature, 0.008822283707559109 AS threshold, 296 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.264655812951812e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, 0.14836068451404572 AS threshold, 155 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -34.480458137638095 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, -0.19300708174705505 AS threshold, 124 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -44.68910798155069 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 113 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -48.65499378910734 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.948644685741465 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_5' AS feature, 0.5141576528549194 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.354141238012216 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -12.619203413940248 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 36.39527027027031 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_4' AS feature, 1.0445802211761475 AS threshold, 141 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 37.90404972577238 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_2' AS feature, -0.2744022607803345 AS threshold, 102 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.541167080607288 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -17.54011934011934 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.288520846307094 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_7' AS feature, 0.4286001920700073 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 80.69928125928122 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 109.09839057102215 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 53.72012741312742 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1_0, `DT_Output_1`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 0.008822283707559109) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.14836068451404572) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 2.285642623901367) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.5141576528549194) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 1.5162749290466309) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= -0.4648422300815582) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -0.43274158239364624) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_10' AS feature, 0.008822283707559109 AS threshold, 296 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.313870995774286e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, 0.14836068451404572 AS threshold, 155 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -31.032412323874297 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 2.285642623901367 AS threshold, 124 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -40.2201971833956 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 123 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -41.34179040967672 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 97.73576964918101 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_5' AS feature, 0.5141576528549194 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.718727114210985 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -11.357283072546233 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.75574324324325 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_4' AS feature, 1.5162749290466309 AS threshold, 141 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.113644753195196 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_4' AS feature, -0.4648422300815582 AS threshold, 121 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.337607452286253 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -15.680865328394795 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 96 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 34.75908473892193 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, -0.43274158239364624 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 93.25867042369438 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 159.52966198239884 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 85.89522691717166 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2_0, `DT_Output_2`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 0.027921516448259354) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.549301028251648) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= 0.4711516201496124) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.5141576528549194) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.789821982383728) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= 0.7445319890975952) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= 0.3016614019870758) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_10' AS feature, 0.027921516448259354 AS threshold, 296 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.2482507520109868e-14 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, 0.549301028251648 AS threshold, 156 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -27.75957119386492 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_8' AS feature, 0.4711516201496124 AS threshold, 132 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -34.76817575583834 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 70 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -23.77480400922432 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 62 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -47.180047082660685 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_5' AS feature, 0.5141576528549194 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.787753896989093 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -14.611028449502134 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 53.1190578078078 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_5' AS feature, 0.789821982383728 AS threshold, 140 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 30.932093616020868 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_11' AS feature, 0.7445319890975952 AS threshold, 91 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.622622577183112 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5954512023303782 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 46.18375817060176 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_4' AS feature, 0.3016614019870758 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 61.221111259576624 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.702484246428927 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 80.09038186031134 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3_0, `DT_Output_3`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_3`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_1_0` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_2_0` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_3_0` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_2_0`.join_key_2_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 149.810810811 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` AS `Estimator` 
FROM `RF_Join_CTE`)
 SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `RF_AVG_Scores`