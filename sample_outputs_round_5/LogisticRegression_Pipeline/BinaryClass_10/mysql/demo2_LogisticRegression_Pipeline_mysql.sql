-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.0908953632262 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.0273688759028 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN -0.00479809874647 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN -0.167589278041 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN -0.0470060135145 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN -0.0294287133961 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN -0.0893955469796 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN -0.126583757288 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN -0.25620019509 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN -0.166809335138 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM `BinaryClass_10` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 0.0908953632262) / 0.79581699017 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 0.0273688759028) / 0.589801712819 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - -0.00479809874647) / 0.879077444126 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - -0.167589278041) / 0.961548043121 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - -0.0470060135145) / 0.942826156518 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - -0.0294287133961) / 1.31514725397 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - -0.0893955469796) / 1.11275599088 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - -0.126583757288) / 1.18807951139 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - -0.25620019509) / 1.10348039517 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - -0.166809335138) / 0.875569606206 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
linear_model_cte AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, 0.15000558870203787 * `ADS_sca_2_OUT`.scaler_2 + -0.5131716862958119 * `ADS_sca_2_OUT`.scaler_3 + -0.34307580602435184 * `ADS_sca_2_OUT`.scaler_4 + -0.022049083098127396 * `ADS_sca_2_OUT`.scaler_5 + 0.2830180144788033 * `ADS_sca_2_OUT`.scaler_6 + 0.2236336914447478 * `ADS_sca_2_OUT`.scaler_7 + 0.9882398778098161 * `ADS_sca_2_OUT`.scaler_8 + 1.283040973363804 * `ADS_sca_2_OUT`.scaler_9 + -0.6259321150209538 * `ADS_sca_2_OUT`.scaler_10 + 0.132104784770231 * `ADS_sca_2_OUT`.scaler_11 + -0.43574586113 AS linear_combination 
FROM `ADS_sca_2_OUT`)
 SELECT linear_model_cte.`KEY` AS `KEY`, -linear_model_cte.linear_combination AS `Score_0`, linear_model_cte.linear_combination AS `Score_1`, 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) AS `Proba_0`, 1.0 - 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) AS `Proba_1`, CASE WHEN (1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) IS NULL OR 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) > 0.0) THEN ln(1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination)))) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (1.0 - 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) IS NULL OR 1.0 - 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) > 0.0) THEN ln(1.0 - 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination)))) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (linear_model_cte.linear_combination >= 0.0) THEN 1 ELSE 0 END AS `Decision` 
FROM linear_model_cte