-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9", "ADS"."Feature_10" AS "Feature_10", "ADS"."Feature_11" AS "Feature_11", "ADS"."Feature_12" AS "Feature_12", "ADS"."Feature_13" AS "Feature_13", "ADS"."Feature_14" AS "Feature_14", "ADS"."Feature_15" AS "Feature_15", "ADS"."Feature_16" AS "Feature_16", "ADS"."Feature_17" AS "Feature_17", "ADS"."Feature_18" AS "Feature_18", "ADS"."Feature_19" AS "Feature_19", "ADS"."Feature_20" AS "Feature_20", "ADS"."Feature_21" AS "Feature_21", "ADS"."Feature_22" AS "Feature_22", "ADS"."Feature_23" AS "Feature_23", "ADS"."Feature_24" AS "Feature_24", "ADS"."Feature_25" AS "Feature_25", "ADS"."Feature_26" AS "Feature_26", "ADS"."Feature_27" AS "Feature_27", "ADS"."Feature_28" AS "Feature_28", "ADS"."Feature_29" AS "Feature_29", "ADS"."Feature_30" AS "Feature_30", "ADS"."Feature_31" AS "Feature_31", "ADS"."Feature_32" AS "Feature_32", "ADS"."Feature_33" AS "Feature_33", "ADS"."Feature_34" AS "Feature_34", "ADS"."Feature_35" AS "Feature_35", "ADS"."Feature_36" AS "Feature_36", "ADS"."Feature_37" AS "Feature_37", "ADS"."Feature_38" AS "Feature_38", "ADS"."Feature_39" AS "Feature_39", "ADS"."Feature_40" AS "Feature_40", "ADS"."Feature_41" AS "Feature_41", "ADS"."Feature_42" AS "Feature_42", "ADS"."Feature_43" AS "Feature_43", "ADS"."Feature_44" AS "Feature_44", "ADS"."Feature_45" AS "Feature_45", "ADS"."Feature_46" AS "Feature_46", "ADS"."Feature_47" AS "Feature_47", "ADS"."Feature_48" AS "Feature_48", "ADS"."Feature_49" AS "Feature_49", "ADS"."Feature_50" AS "Feature_50", "ADS"."Feature_51" AS "Feature_51", "ADS"."Feature_52" AS "Feature_52", "ADS"."Feature_53" AS "Feature_53", "ADS"."Feature_54" AS "Feature_54", "ADS"."Feature_55" AS "Feature_55", "ADS"."Feature_56" AS "Feature_56", "ADS"."Feature_57" AS "Feature_57", "ADS"."Feature_58" AS "Feature_58", "ADS"."Feature_59" AS "Feature_59", "ADS"."Feature_60" AS "Feature_60", "ADS"."Feature_61" AS "Feature_61", "ADS"."Feature_62" AS "Feature_62", "ADS"."Feature_63" AS "Feature_63" 
FROM digits AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.0496626806951 * "IL"."Feature_0" + -0.0262197943273 * "IL"."Feature_1" + 0.0956466752267 * "IL"."Feature_2" + -0.182187019132 * "IL"."Feature_3" + 0.0618226326102 * "IL"."Feature_4" + -1.23952287441 * "IL"."Feature_5" + -0.944507909702 * "IL"."Feature_6" + -0.307062654704 * "IL"."Feature_7" + 0.246291352679 * "IL"."Feature_8" + 0.706598230207 * "IL"."Feature_9" + 1.29996434221 * "IL"."Feature_10" + -0.176647926554 * "IL"."Feature_11" + 0.655200236893 * "IL"."Feature_12" + 1.10078054473 * "IL"."Feature_13" + 0.803585767749 * "IL"."Feature_14" + -0.16677834706 * "IL"."Feature_15" + -0.108279431487 * "IL"."Feature_16" + 0.998920433139 * "IL"."Feature_17" + 0.698886038584 * "IL"."Feature_18" + -0.306054897242 * "IL"."Feature_19" + 0.588989955979 * "IL"."Feature_20" + 3.21132680149 * "IL"."Feature_21" + 1.29310920893 * "IL"."Feature_22" + -0.14606393474 * "IL"."Feature_23" + -0.215894629913 * "IL"."Feature_24" + -1.36626639077 * "IL"."Feature_25" + 0.194584181153 * "IL"."Feature_26" + 1.47292736732 * "IL"."Feature_27" + 0.238904182647 * "IL"."Feature_28" + 0.309620971911 * "IL"."Feature_29" + -1.21844137639 * "IL"."Feature_30" + 0.0082377972823 * "IL"."Feature_31" + 0.241424346983 * "IL"."Feature_32" + -1.83924852361 * "IL"."Feature_33" + -1.85900644827 * "IL"."Feature_34" + 0.828295465188 * "IL"."Feature_35" + -1.62769741766 * "IL"."Feature_36" + -2.09129498972 * "IL"."Feature_37" + -0.435195167301 * "IL"."Feature_38" + 0.253181971434 * "IL"."Feature_39" + -0.287353767984 * "IL"."Feature_40" + 0.0787892981659 * "IL"."Feature_41" + 0.0386322865574 * "IL"."Feature_42" + -2.07177398069 * "IL"."Feature_43" + -0.955841302417 * "IL"."Feature_44" + 0.736219663939 * "IL"."Feature_45" + 0.119994325922 * "IL"."Feature_46" + -0.183301400483 * "IL"."Feature_47" + -0.292213255332 * "IL"."Feature_48" + -0.045921650233 * "IL"."Feature_49" + 0.790357554597 * "IL"."Feature_50" + -0.476361229262 * "IL"."Feature_51" + 0.384650950947 * "IL"."Feature_52" + -0.0118596775592 * "IL"."Feature_53" + 0.381792760302 * "IL"."Feature_54" + -0.298989774643 * "IL"."Feature_55" + 0.0570967550252 * "IL"."Feature_56" + 0.22486524701 * "IL"."Feature_57" + -0.62619016349 * "IL"."Feature_58" + 0.336850494133 * "IL"."Feature_59" + 1.47736409961 * "IL"."Feature_60" + -0.602384309125 * "IL"."Feature_61" + 0.239223307108 * "IL"."Feature_62" + -0.25553759447 * "IL"."Feature_63" + -0.0146792386108 AS "NEUR_1_1", 0.131865140004 * "IL"."Feature_0" + -0.212564230407 * "IL"."Feature_1" + -0.129826446334 * "IL"."Feature_2" + -0.150039848454 * "IL"."Feature_3" + 0.0760142894434 * "IL"."Feature_4" + -0.134192552248 * "IL"."Feature_5" + -0.205514840571 * "IL"."Feature_6" + -0.113779888115 * "IL"."Feature_7" + 0.236164410725 * "IL"."Feature_8" + -0.205760658443 * "IL"."Feature_9" + -0.124876177575 * "IL"."Feature_10" + -0.0166679235254 * "IL"."Feature_11" + 0.065268412728 * "IL"."Feature_12" + 0.208371800365 * "IL"."Feature_13" + 0.129676738482 * "IL"."Feature_14" + 0.228398941621 * "IL"."Feature_15" + -0.221429462393 * "IL"."Feature_16" + -0.191595681763 * "IL"."Feature_17" + -0.362989166282 * "IL"."Feature_18" + -0.0658764697229 * "IL"."Feature_19" + -0.138034539246 * "IL"."Feature_20" + -0.339988468307 * "IL"."Feature_21" + -0.0397854575113 * "IL"."Feature_22" + 0.230438112981 * "IL"."Feature_23" + 0.183967560473 * "IL"."Feature_24" + 0.221045426266 * "IL"."Feature_25" + 0.00543714642951 * "IL"."Feature_26" + 0.0129523423987 * "IL"."Feature_27" + 0.100713528979 * "IL"."Feature_28" + -0.00623226236804 * "IL"."Feature_29" + 0.213683773093 * "IL"."Feature_30" + -0.0549881241049 * "IL"."Feature_31" + 0.0440974840049 * "IL"."Feature_32" + -0.148591912839 * "IL"."Feature_33" + -0.195467566961 * "IL"."Feature_34" + -0.411977365359 * "IL"."Feature_35" + 0.153056836958 * "IL"."Feature_36" + 0.134873969514 * "IL"."Feature_37" + 0.106942283325 * "IL"."Feature_38" + 0.126598461547 * "IL"."Feature_39" + -0.283664639776 * "IL"."Feature_40" + 0.203622520658 * "IL"."Feature_41" + 0.15311919814 * "IL"."Feature_42" + -0.0216365422273 * "IL"."Feature_43" + -0.388715958628 * "IL"."Feature_44" + 0.0744603404106 * "IL"."Feature_45" + 0.120400621015 * "IL"."Feature_46" + -0.263410424126 * "IL"."Feature_47" + -0.234915998949 * "IL"."Feature_48" + 0.0320341783013 * "IL"."Feature_49" + 0.232977610281 * "IL"."Feature_50" + -0.234296849001 * "IL"."Feature_51" + -0.0697616197371 * "IL"."Feature_52" + -0.246812418592 * "IL"."Feature_53" + 0.186228830004 * "IL"."Feature_54" + -0.257373578479 * "IL"."Feature_55" + 0.0412111666201 * "IL"."Feature_56" + 0.0466448505024 * "IL"."Feature_57" + 0.106469291368 * "IL"."Feature_58" + -0.364903498465 * "IL"."Feature_59" + -0.304440603703 * "IL"."Feature_60" + -0.197850248282 * "IL"."Feature_61" + 0.0780952185365 * "IL"."Feature_62" + -0.142977460698 * "IL"."Feature_63" + 0.151371891997 AS "NEUR_1_2", -0.299183658252 * "IL"."Feature_0" + -0.250235781464 * "IL"."Feature_1" + -0.154014645276 * "IL"."Feature_2" + -0.069201234031 * "IL"."Feature_3" + -0.462081400146 * "IL"."Feature_4" + -0.0759765197257 * "IL"."Feature_5" + 0.149281456532 * "IL"."Feature_6" + 0.113123301496 * "IL"."Feature_7" + -0.248446268809 * "IL"."Feature_8" + 0.190432718361 * "IL"."Feature_9" + 0.114950637217 * "IL"."Feature_10" + -0.288304305288 * "IL"."Feature_11" + -0.451242459978 * "IL"."Feature_12" + 0.0206425507349 * "IL"."Feature_13" + -0.269069726591 * "IL"."Feature_14" + -0.124754830334 * "IL"."Feature_15" + -0.287680791373 * "IL"."Feature_16" + -0.184299665424 * "IL"."Feature_17" + -0.0966374356383 * "IL"."Feature_18" + 0.00989496653052 * "IL"."Feature_19" + -0.00819332631655 * "IL"."Feature_20" + -0.0858715717637 * "IL"."Feature_21" + 0.244540362665 * "IL"."Feature_22" + -0.217350467888 * "IL"."Feature_23" + -0.0612462178689 * "IL"."Feature_24" + -0.130355658364 * "IL"."Feature_25" + 0.0997946634283 * "IL"."Feature_26" + -0.239816686247 * "IL"."Feature_27" + -0.210578457388 * "IL"."Feature_28" + -0.0330879465576 * "IL"."Feature_29" + -0.055482277613 * "IL"."Feature_30" + -0.157396065744 * "IL"."Feature_31" + -0.297534209211 * "IL"."Feature_32" + -0.00681120051682 * "IL"."Feature_33" + 0.151411466809 * "IL"."Feature_34" + 0.113559182652 * "IL"."Feature_35" + -0.357891218671 * "IL"."Feature_36" + 0.00641743217051 * "IL"."Feature_37" + 0.122315948421 * "IL"."Feature_38" + -0.224875416387 * "IL"."Feature_39" + -0.282354744675 * "IL"."Feature_40" + 0.0109979090647 * "IL"."Feature_41" + -0.291893259574 * "IL"."Feature_42" + 0.168719134375 * "IL"."Feature_43" + 0.0456290350664 * "IL"."Feature_44" + -0.171341365444 * "IL"."Feature_45" + 0.00492469099639 * "IL"."Feature_46" + -0.226626894102 * "IL"."Feature_47" + -0.164184160013 * "IL"."Feature_48" + -0.300476141268 * "IL"."Feature_49" + -0.0550921701755 * "IL"."Feature_50" + -0.0013898450452 * "IL"."Feature_51" + 0.119795040569 * "IL"."Feature_52" + -0.124125732574 * "IL"."Feature_53" + -0.244524852549 * "IL"."Feature_54" + -0.0121629346153 * "IL"."Feature_55" + -0.109315994616 * "IL"."Feature_56" + -0.0774681327865 * "IL"."Feature_57" + 0.00291712469419 * "IL"."Feature_58" + -0.261817002665 * "IL"."Feature_59" + -0.012648201408 * "IL"."Feature_60" + 0.0936778864678 * "IL"."Feature_61" + -0.0159087207731 * "IL"."Feature_62" + -0.269041979885 * "IL"."Feature_63" + 0.229238906792 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", 0.0987622207595 * "HL_1_relu"."NEUR_1_1" + 0.760372803459 * "HL_1_relu"."NEUR_1_2" + -0.0312822582453 * "HL_1_relu"."NEUR_1_3" + 0.275176774396 AS "NEUR_2_1", -0.869002596335 * "HL_1_relu"."NEUR_1_1" + 0.132869222994 * "HL_1_relu"."NEUR_1_2" + 0.231164227816 * "HL_1_relu"."NEUR_1_3" + 2.16503506807 AS "NEUR_2_2", -0.460287646868 * "HL_1_relu"."NEUR_1_1" + 0.633170914814 * "HL_1_relu"."NEUR_1_2" + -0.0798778249318 * "HL_1_relu"."NEUR_1_3" + -0.572930101102 AS "NEUR_2_3", 0.0887162961322 * "HL_1_relu"."NEUR_1_1" + 0.150583221817 * "HL_1_relu"."NEUR_1_2" + 0.550810504259 * "HL_1_relu"."NEUR_1_3" + -1.64180537792 AS "NEUR_2_4", 0.014181739306 * "HL_1_relu"."NEUR_1_1" + -0.232339794103 * "HL_1_relu"."NEUR_1_2" + 0.654386638536 * "HL_1_relu"."NEUR_1_3" + -1.24884738664 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 0.639301685924 * "HL_2_relu"."NEUR_2_1" + -1.31086435462 * "HL_2_relu"."NEUR_2_2" + 0.143734008492 * "HL_2_relu"."NEUR_2_3" + -0.438935828134 * "HL_2_relu"."NEUR_2_4" + 0.299681992246 * "HL_2_relu"."NEUR_2_5" + -0.873648925912 AS "NEUR_3_1", 0.214382644987 * "HL_2_relu"."NEUR_2_1" + 0.42821657591 * "HL_2_relu"."NEUR_2_2" + -0.59558860113 * "HL_2_relu"."NEUR_2_3" + -0.830056071122 * "HL_2_relu"."NEUR_2_4" + 0.237095388522 * "HL_2_relu"."NEUR_2_5" + 1.77324202111 AS "NEUR_3_2", 0.391462084559 * "HL_2_relu"."NEUR_2_1" + 0.322171526011 * "HL_2_relu"."NEUR_2_2" + 0.106504312297 * "HL_2_relu"."NEUR_2_3" + -0.364051764328 * "HL_2_relu"."NEUR_2_4" + -0.162048951147 * "HL_2_relu"."NEUR_2_5" + 0.364700579317 AS "NEUR_3_3", 0.149824899927 * "HL_2_relu"."NEUR_2_1" + -0.897788136461 * "HL_2_relu"."NEUR_2_2" + -0.0623465334984 * "HL_2_relu"."NEUR_2_3" + 0.460745325171 * "HL_2_relu"."NEUR_2_4" + 0.133391394704 * "HL_2_relu"."NEUR_2_5" + -1.38847082725 AS "NEUR_3_4", -0.86268057891 * "HL_2_relu"."NEUR_2_1" + 2.18701303079 * "HL_2_relu"."NEUR_2_2" + 0.415539207199 * "HL_2_relu"."NEUR_2_3" + 0.795541120323 * "HL_2_relu"."NEUR_2_4" + 0.263924865849 * "HL_2_relu"."NEUR_2_5" + 0.592704293915 AS "NEUR_3_5", 0.0735178144248 * "HL_2_relu"."NEUR_2_1" + 1.12356089731 * "HL_2_relu"."NEUR_2_2" + -0.218945818953 * "HL_2_relu"."NEUR_2_3" + -0.719563753926 * "HL_2_relu"."NEUR_2_4" + 0.304220789849 * "HL_2_relu"."NEUR_2_5" + 1.71530359567 AS "NEUR_3_6", -1.31907715765 * "HL_2_relu"."NEUR_2_1" + 1.8980650089 * "HL_2_relu"."NEUR_2_2" + 0.351856131873 * "HL_2_relu"."NEUR_2_3" + 0.201510448302 * "HL_2_relu"."NEUR_2_4" + -0.436939993795 * "HL_2_relu"."NEUR_2_5" + 1.53062567547 AS "NEUR_3_7", -0.410654975541 * "HL_2_relu"."NEUR_2_1" + 1.6573405117 * "HL_2_relu"."NEUR_2_2" + 0.122115708698 * "HL_2_relu"."NEUR_2_3" + -0.0698003256456 * "HL_2_relu"."NEUR_2_4" + 0.291790429247 * "HL_2_relu"."NEUR_2_5" + 1.37423941124 AS "NEUR_3_8", 0.224923978049 * "HL_2_relu"."NEUR_2_1" + -1.37158595296 * "HL_2_relu"."NEUR_2_2" + -0.3858156199 * "HL_2_relu"."NEUR_2_3" + 0.505882820915 * "HL_2_relu"."NEUR_2_4" + -0.104367065803 * "HL_2_relu"."NEUR_2_5" + -2.20754382108 AS "NEUR_3_9", -0.225787521067 * "HL_2_relu"."NEUR_2_1" + -1.84545560083 * "HL_2_relu"."NEUR_2_2" + 0.384899604089 * "HL_2_relu"."NEUR_2_3" + 1.23796947396 * "HL_2_relu"."NEUR_2_4" + 1.48803003458 * "HL_2_relu"."NEUR_2_5" + -2.90380646845 AS "NEUR_3_10" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1", "OL_BA"."NEUR_3_2" AS "NEUR_3_2", "OL_BA"."NEUR_3_3" AS "NEUR_3_3", "OL_BA"."NEUR_3_4" AS "NEUR_3_4", "OL_BA"."NEUR_3_5" AS "NEUR_3_5", "OL_BA"."NEUR_3_6" AS "NEUR_3_6", "OL_BA"."NEUR_3_7" AS "NEUR_3_7", "OL_BA"."NEUR_3_8" AS "NEUR_3_8", "OL_BA"."NEUR_3_9" AS "NEUR_3_9", "OL_BA"."NEUR_3_10" AS "NEUR_3_10" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "Score_0", "OL_softmax"."NEUR_3_2" AS "Score_1", "OL_softmax"."NEUR_3_3" AS "Score_2", "OL_softmax"."NEUR_3_4" AS "Score_3", "OL_softmax"."NEUR_3_5" AS "Score_4", "OL_softmax"."NEUR_3_6" AS "Score_5", "OL_softmax"."NEUR_3_7" AS "Score_6", "OL_softmax"."NEUR_3_8" AS "Score_7", "OL_softmax"."NEUR_3_9" AS "Score_8", "OL_softmax"."NEUR_3_10" AS "Score_9", CAST(NULL AS FLOAT(53)) AS "Proba_0", CAST(NULL AS FLOAT(53)) AS "Proba_1", CAST(NULL AS FLOAT(53)) AS "Proba_2", CAST(NULL AS FLOAT(53)) AS "Proba_3", CAST(NULL AS FLOAT(53)) AS "Proba_4", CAST(NULL AS FLOAT(53)) AS "Proba_5", CAST(NULL AS FLOAT(53)) AS "Proba_6", CAST(NULL AS FLOAT(53)) AS "Proba_7", CAST(NULL AS FLOAT(53)) AS "Proba_8", CAST(NULL AS FLOAT(53)) AS "Proba_9", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_2", CAST(NULL AS FLOAT(53)) AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "LogProba_4", CAST(NULL AS FLOAT(53)) AS "LogProba_5", CAST(NULL AS FLOAT(53)) AS "LogProba_6", CAST(NULL AS FLOAT(53)) AS "LogProba_7", CAST(NULL AS FLOAT(53)) AS "LogProba_8", CAST(NULL AS FLOAT(53)) AS "LogProba_9", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "OL_softmax"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3", exp(CASE WHEN (score_max."Score_4" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_4" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_4", exp(CASE WHEN (score_max."Score_5" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_5" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_5", exp(CASE WHEN (score_max."Score_6" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_6" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_6", exp(CASE WHEN (score_max."Score_7" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_7" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_7", exp(CASE WHEN (score_max."Score_8" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_8" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_8", exp(CASE WHEN (score_max."Score_9" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_9" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 4 AS class, score_soft_max_comp."LogProba_4" AS "LogProba", score_soft_max_comp."Proba_4" AS "Proba", score_soft_max_comp."Score_4" AS "Score", score_soft_max_comp."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 5 AS class, score_soft_max_comp."LogProba_5" AS "LogProba", score_soft_max_comp."Proba_5" AS "Proba", score_soft_max_comp."Score_5" AS "Score", score_soft_max_comp."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 6 AS class, score_soft_max_comp."LogProba_6" AS "LogProba", score_soft_max_comp."Proba_6" AS "Proba", score_soft_max_comp."Score_6" AS "Score", score_soft_max_comp."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 7 AS class, score_soft_max_comp."LogProba_7" AS "LogProba", score_soft_max_comp."Proba_7" AS "Proba", score_soft_max_comp."Score_7" AS "Score", score_soft_max_comp."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 8 AS class, score_soft_max_comp."LogProba_8" AS "LogProba", score_soft_max_comp."Proba_8" AS "Proba", score_soft_max_comp."Score_8" AS "Score", score_soft_max_comp."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 9 AS class, score_soft_max_comp."LogProba_9" AS "LogProba", score_soft_max_comp."Proba_9" AS "Proba", score_soft_max_comp."Score_9" AS "Score", score_soft_max_comp."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Score_4" AS "Score_4", score_soft_max_comp."Score_5" AS "Score_5", score_soft_max_comp."Score_6" AS "Score_6", score_soft_max_comp."Score_7" AS "Score_7", score_soft_max_comp."Score_8" AS "Score_8", score_soft_max_comp."Score_9" AS "Score_9", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."Proba_4" AS "Proba_4", score_soft_max_comp."Proba_5" AS "Proba_5", score_soft_max_comp."Proba_6" AS "Proba_6", score_soft_max_comp."Proba_7" AS "Proba_7", score_soft_max_comp."Proba_8" AS "Proba_8", score_soft_max_comp."Proba_9" AS "Proba_9", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."LogProba_4" AS "LogProba_4", score_soft_max_comp."LogProba_5" AS "LogProba_5", score_soft_max_comp."LogProba_6" AS "LogProba_6", score_soft_max_comp."LogProba_7" AS "LogProba_7", score_soft_max_comp."LogProba_8" AS "LogProba_8", score_soft_max_comp."LogProba_9" AS "LogProba_9", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_comp."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_comp."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_comp."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_comp."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_comp."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_comp."exp_delta_Score_9" AS "exp_delta_Score_9", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 0.0) THEN ln(arg_max_cte."SoftProba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 0.0) THEN ln(arg_max_cte."SoftProba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 0.0) THEN ln(arg_max_cte."SoftProba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 0.0) THEN ln(arg_max_cte."SoftProba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 0.0) THEN ln(arg_max_cte."SoftProba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 0.0) THEN ln(arg_max_cte."SoftProba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte