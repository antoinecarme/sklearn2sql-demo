-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.0313604732625 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN -0.231997198621 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -0.054069650654 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.0555145743983 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -0.0285996656 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN -0.305324581265 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.0431907430304 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.655707595755 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.105163647559 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -0.268123711577 ELSE [ADS].[Feature_9] END AS impter_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN -0.208877773829 ELSE [ADS].[Feature_10] END AS impter_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN -0.849666460482 ELSE [ADS].[Feature_11] END AS impter_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 0.624316583909 ELSE [ADS].[Feature_12] END AS impter_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.181944460188 ELSE [ADS].[Feature_13] END AS impter_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN -0.0242531964523 ELSE [ADS].[Feature_14] END AS impter_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN -0.612679106953 ELSE [ADS].[Feature_15] END AS impter_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN -0.114429111422 ELSE [ADS].[Feature_16] END AS impter_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN -0.187964538366 ELSE [ADS].[Feature_17] END AS impter_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN -0.212112137044 ELSE [ADS].[Feature_18] END AS impter_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN -0.543951417795 ELSE [ADS].[Feature_19] END AS impter_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN -0.120797858446 ELSE [ADS].[Feature_20] END AS impter_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN -0.0125565095358 ELSE [ADS].[Feature_21] END AS impter_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN 0.837576461303 ELSE [ADS].[Feature_22] END AS impter_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN -0.0209016537237 ELSE [ADS].[Feature_23] END AS impter_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN 0.609003546185 ELSE [ADS].[Feature_24] END AS impter_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN -0.0810738260191 ELSE [ADS].[Feature_25] END AS impter_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN 0.101305868564 ELSE [ADS].[Feature_26] END AS impter_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN 0.666060591854 ELSE [ADS].[Feature_27] END AS impter_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN -0.0519645211452 ELSE [ADS].[Feature_28] END AS impter_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.187674414197 ELSE [ADS].[Feature_29] END AS impter_31, CASE WHEN ([ADS].[Feature_30] IS NULL) THEN 1.00886799901 ELSE [ADS].[Feature_30] END AS impter_32, CASE WHEN ([ADS].[Feature_31] IS NULL) THEN -0.0551881680865 ELSE [ADS].[Feature_31] END AS impter_33, CASE WHEN ([ADS].[Feature_32] IS NULL) THEN -0.0893217512832 ELSE [ADS].[Feature_32] END AS impter_34, CASE WHEN ([ADS].[Feature_33] IS NULL) THEN 0.119469209609 ELSE [ADS].[Feature_33] END AS impter_35, CASE WHEN ([ADS].[Feature_34] IS NULL) THEN 0.153590338262 ELSE [ADS].[Feature_34] END AS impter_36, CASE WHEN ([ADS].[Feature_35] IS NULL) THEN 0.214061744258 ELSE [ADS].[Feature_35] END AS impter_37, CASE WHEN ([ADS].[Feature_36] IS NULL) THEN 0.0554955213479 ELSE [ADS].[Feature_36] END AS impter_38, CASE WHEN ([ADS].[Feature_37] IS NULL) THEN 0.0900494844846 ELSE [ADS].[Feature_37] END AS impter_39, CASE WHEN ([ADS].[Feature_38] IS NULL) THEN 0.0332265563351 ELSE [ADS].[Feature_38] END AS impter_40, CASE WHEN ([ADS].[Feature_39] IS NULL) THEN -0.0850710202368 ELSE [ADS].[Feature_39] END AS impter_41, CASE WHEN ([ADS].[Feature_40] IS NULL) THEN -0.221119939035 ELSE [ADS].[Feature_40] END AS impter_42, CASE WHEN ([ADS].[Feature_41] IS NULL) THEN -0.798645233124 ELSE [ADS].[Feature_41] END AS impter_43, CASE WHEN ([ADS].[Feature_42] IS NULL) THEN -0.0217221080381 ELSE [ADS].[Feature_42] END AS impter_44, CASE WHEN ([ADS].[Feature_43] IS NULL) THEN -0.323745224414 ELSE [ADS].[Feature_43] END AS impter_45, CASE WHEN ([ADS].[Feature_44] IS NULL) THEN 0.0955832336323 ELSE [ADS].[Feature_44] END AS impter_46, CASE WHEN ([ADS].[Feature_45] IS NULL) THEN 0.217138468326 ELSE [ADS].[Feature_45] END AS impter_47, CASE WHEN ([ADS].[Feature_46] IS NULL) THEN -1.22101358368 ELSE [ADS].[Feature_46] END AS impter_48, CASE WHEN ([ADS].[Feature_47] IS NULL) THEN -0.0633246562393 ELSE [ADS].[Feature_47] END AS impter_49, CASE WHEN ([ADS].[Feature_48] IS NULL) THEN -3.63171662218 ELSE [ADS].[Feature_48] END AS impter_50, CASE WHEN ([ADS].[Feature_49] IS NULL) THEN -0.452255059733 ELSE [ADS].[Feature_49] END AS impter_51, CASE WHEN ([ADS].[Feature_50] IS NULL) THEN 0.0461933128018 ELSE [ADS].[Feature_50] END AS impter_52, CASE WHEN ([ADS].[Feature_51] IS NULL) THEN 0.151823564071 ELSE [ADS].[Feature_51] END AS impter_53, CASE WHEN ([ADS].[Feature_52] IS NULL) THEN -0.0940495549332 ELSE [ADS].[Feature_52] END AS impter_54, CASE WHEN ([ADS].[Feature_53] IS NULL) THEN 0.0216536321968 ELSE [ADS].[Feature_53] END AS impter_55, CASE WHEN ([ADS].[Feature_54] IS NULL) THEN -0.102351792443 ELSE [ADS].[Feature_54] END AS impter_56, CASE WHEN ([ADS].[Feature_55] IS NULL) THEN 0.0528434789669 ELSE [ADS].[Feature_55] END AS impter_57, CASE WHEN ([ADS].[Feature_56] IS NULL) THEN 0.0720251759943 ELSE [ADS].[Feature_56] END AS impter_58, CASE WHEN ([ADS].[Feature_57] IS NULL) THEN 0.170534712723 ELSE [ADS].[Feature_57] END AS impter_59, CASE WHEN ([ADS].[Feature_58] IS NULL) THEN -0.00909420658349 ELSE [ADS].[Feature_58] END AS impter_60, CASE WHEN ([ADS].[Feature_59] IS NULL) THEN -0.0158787984917 ELSE [ADS].[Feature_59] END AS impter_61, CASE WHEN ([ADS].[Feature_60] IS NULL) THEN -0.0308612817476 ELSE [ADS].[Feature_60] END AS impter_62, CASE WHEN ([ADS].[Feature_61] IS NULL) THEN 0.107993323902 ELSE [ADS].[Feature_61] END AS impter_63, CASE WHEN ([ADS].[Feature_62] IS NULL) THEN -0.0817085928458 ELSE [ADS].[Feature_62] END AS impter_64, CASE WHEN ([ADS].[Feature_63] IS NULL) THEN -0.0740231331374 ELSE [ADS].[Feature_63] END AS impter_65, CASE WHEN ([ADS].[Feature_64] IS NULL) THEN -0.142635880853 ELSE [ADS].[Feature_64] END AS impter_66, CASE WHEN ([ADS].[Feature_65] IS NULL) THEN 0.115436254987 ELSE [ADS].[Feature_65] END AS impter_67, CASE WHEN ([ADS].[Feature_66] IS NULL) THEN 0.498942852826 ELSE [ADS].[Feature_66] END AS impter_68, CASE WHEN ([ADS].[Feature_67] IS NULL) THEN -0.0258432080158 ELSE [ADS].[Feature_67] END AS impter_69, CASE WHEN ([ADS].[Feature_68] IS NULL) THEN 0.257228532873 ELSE [ADS].[Feature_68] END AS impter_70, CASE WHEN ([ADS].[Feature_69] IS NULL) THEN -0.0510933944328 ELSE [ADS].[Feature_69] END AS impter_71, CASE WHEN ([ADS].[Feature_70] IS NULL) THEN -1.2967182628 ELSE [ADS].[Feature_70] END AS impter_72, CASE WHEN ([ADS].[Feature_71] IS NULL) THEN -0.476135190772 ELSE [ADS].[Feature_71] END AS impter_73, CASE WHEN ([ADS].[Feature_72] IS NULL) THEN -0.0256841911748 ELSE [ADS].[Feature_72] END AS impter_74, CASE WHEN ([ADS].[Feature_73] IS NULL) THEN 0.527224443702 ELSE [ADS].[Feature_73] END AS impter_75, CASE WHEN ([ADS].[Feature_74] IS NULL) THEN 0.11414693071 ELSE [ADS].[Feature_74] END AS impter_76, CASE WHEN ([ADS].[Feature_75] IS NULL) THEN 0.0393241099743 ELSE [ADS].[Feature_75] END AS impter_77, CASE WHEN ([ADS].[Feature_76] IS NULL) THEN 0.00136237972979 ELSE [ADS].[Feature_76] END AS impter_78, CASE WHEN ([ADS].[Feature_77] IS NULL) THEN 0.00944803353089 ELSE [ADS].[Feature_77] END AS impter_79, CASE WHEN ([ADS].[Feature_78] IS NULL) THEN -0.955371809966 ELSE [ADS].[Feature_78] END AS impter_80, CASE WHEN ([ADS].[Feature_79] IS NULL) THEN -0.847816042316 ELSE [ADS].[Feature_79] END AS impter_81, CASE WHEN ([ADS].[Feature_80] IS NULL) THEN -0.2536691449 ELSE [ADS].[Feature_80] END AS impter_82, CASE WHEN ([ADS].[Feature_81] IS NULL) THEN 3.49045428291 ELSE [ADS].[Feature_81] END AS impter_83, CASE WHEN ([ADS].[Feature_82] IS NULL) THEN -0.220811215267 ELSE [ADS].[Feature_82] END AS impter_84, CASE WHEN ([ADS].[Feature_83] IS NULL) THEN 1.03442509822 ELSE [ADS].[Feature_83] END AS impter_85, CASE WHEN ([ADS].[Feature_84] IS NULL) THEN 0.0754350749787 ELSE [ADS].[Feature_84] END AS impter_86, CASE WHEN ([ADS].[Feature_85] IS NULL) THEN -1.44734491605 ELSE [ADS].[Feature_85] END AS impter_87, CASE WHEN ([ADS].[Feature_86] IS NULL) THEN 0.0841091119366 ELSE [ADS].[Feature_86] END AS impter_88, CASE WHEN ([ADS].[Feature_87] IS NULL) THEN 0.0466394020766 ELSE [ADS].[Feature_87] END AS impter_89, CASE WHEN ([ADS].[Feature_88] IS NULL) THEN -0.63453043054 ELSE [ADS].[Feature_88] END AS impter_90, CASE WHEN ([ADS].[Feature_89] IS NULL) THEN -0.0684487525708 ELSE [ADS].[Feature_89] END AS impter_91, CASE WHEN ([ADS].[Feature_90] IS NULL) THEN 0.0341994122732 ELSE [ADS].[Feature_90] END AS impter_92, CASE WHEN ([ADS].[Feature_91] IS NULL) THEN 1.08065548968 ELSE [ADS].[Feature_91] END AS impter_93, CASE WHEN ([ADS].[Feature_92] IS NULL) THEN -0.00100282868465 ELSE [ADS].[Feature_92] END AS impter_94, CASE WHEN ([ADS].[Feature_93] IS NULL) THEN 0.121277339306 ELSE [ADS].[Feature_93] END AS impter_95, CASE WHEN ([ADS].[Feature_94] IS NULL) THEN -0.960181853261 ELSE [ADS].[Feature_94] END AS impter_96, CASE WHEN ([ADS].[Feature_95] IS NULL) THEN -0.230374063383 ELSE [ADS].[Feature_95] END AS impter_97, CASE WHEN ([ADS].[Feature_96] IS NULL) THEN -0.441088711933 ELSE [ADS].[Feature_96] END AS impter_98, CASE WHEN ([ADS].[Feature_97] IS NULL) THEN -0.197511946259 ELSE [ADS].[Feature_97] END AS impter_99, CASE WHEN ([ADS].[Feature_98] IS NULL) THEN -0.40734328772 ELSE [ADS].[Feature_98] END AS impter_100, CASE WHEN ([ADS].[Feature_99] IS NULL) THEN 0.64612507587 ELSE [ADS].[Feature_99] END AS impter_101 
FROM [FourClass_100] AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - 0.0313604732625) / 1.05390264523 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - -0.231997198621) / 3.88833649572 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - -0.054069650654) / 0.941395593001 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - 0.0555145743983) / 1.05063762604 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - -0.0285996656) / 4.39956794833 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - -0.305324581265) / 4.87499712512 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - -0.0431907430304) / 4.45641416957 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.655707595755) / 4.07430581787 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - 0.105163647559) / 1.01584437488 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - -0.268123711577) / 4.63537161459 AS scaler_11, (CAST([ADS_imp_1_OUT].impter_12 AS FLOAT) - -0.208877773829) / 0.902145855399 AS scaler_12, (CAST([ADS_imp_1_OUT].impter_13 AS FLOAT) - -0.849666460482) / 3.8470062841 AS scaler_13, (CAST([ADS_imp_1_OUT].impter_14 AS FLOAT) - 0.624316583909) / 3.45209557393 AS scaler_14, (CAST([ADS_imp_1_OUT].impter_15 AS FLOAT) - -0.181944460188) / 4.50834289472 AS scaler_15, (CAST([ADS_imp_1_OUT].impter_16 AS FLOAT) - -0.0242531964523) / 1.09412373376 AS scaler_16, (CAST([ADS_imp_1_OUT].impter_17 AS FLOAT) - -0.612679106953) / 3.89345906449 AS scaler_17, (CAST([ADS_imp_1_OUT].impter_18 AS FLOAT) - -0.114429111422) / 4.15464167077 AS scaler_18, (CAST([ADS_imp_1_OUT].impter_19 AS FLOAT) - -0.187964538366) / 4.82285047831 AS scaler_19, (CAST([ADS_imp_1_OUT].impter_20 AS FLOAT) - -0.212112137044) / 0.916984103275 AS scaler_20, (CAST([ADS_imp_1_OUT].impter_21 AS FLOAT) - -0.543951417795) / 3.72059409553 AS scaler_21, (CAST([ADS_imp_1_OUT].impter_22 AS FLOAT) - -0.120797858446) / 1.03247054735 AS scaler_22, (CAST([ADS_imp_1_OUT].impter_23 AS FLOAT) - -0.0125565095358) / 0.929155723075 AS scaler_23, (CAST([ADS_imp_1_OUT].impter_24 AS FLOAT) - 0.837576461303) / 4.41226187255 AS scaler_24, (CAST([ADS_imp_1_OUT].impter_25 AS FLOAT) - -0.0209016537237) / 3.85740700381 AS scaler_25, (CAST([ADS_imp_1_OUT].impter_26 AS FLOAT) - 0.609003546185) / 3.8907258925 AS scaler_26, (CAST([ADS_imp_1_OUT].impter_27 AS FLOAT) - -0.0810738260191) / 0.967530070525 AS scaler_27, (CAST([ADS_imp_1_OUT].impter_28 AS FLOAT) - 0.101305868564) / 3.98045010346 AS scaler_28, (CAST([ADS_imp_1_OUT].impter_29 AS FLOAT) - 0.666060591854) / 3.96240517564 AS scaler_29, (CAST([ADS_imp_1_OUT].impter_30 AS FLOAT) - -0.0519645211452) / 0.966915453256 AS scaler_30, (CAST([ADS_imp_1_OUT].impter_31 AS FLOAT) - 0.187674414197) / 0.996349269158 AS scaler_31, (CAST([ADS_imp_1_OUT].impter_32 AS FLOAT) - 1.00886799901) / 4.60095695053 AS scaler_32, (CAST([ADS_imp_1_OUT].impter_33 AS FLOAT) - -0.0551881680865) / 4.47259255746 AS scaler_33, (CAST([ADS_imp_1_OUT].impter_34 AS FLOAT) - -0.0893217512832) / 0.907903621375 AS scaler_34, (CAST([ADS_imp_1_OUT].impter_35 AS FLOAT) - 0.119469209609) / 4.3034935946 AS scaler_35, (CAST([ADS_imp_1_OUT].impter_36 AS FLOAT) - 0.153590338262) / 1.05251208749 AS scaler_36, (CAST([ADS_imp_1_OUT].impter_37 AS FLOAT) - 0.214061744258) / 0.933607308341 AS scaler_37, (CAST([ADS_imp_1_OUT].impter_38 AS FLOAT) - 0.0554955213479) / 0.962961595616 AS scaler_38, (CAST([ADS_imp_1_OUT].impter_39 AS FLOAT) - 0.0900494844846) / 4.46507146651 AS scaler_39, (CAST([ADS_imp_1_OUT].impter_40 AS FLOAT) - 0.0332265563351) / 1.08448386407 AS scaler_40, (CAST([ADS_imp_1_OUT].impter_41 AS FLOAT) - -0.0850710202368) / 1.09570419151 AS scaler_41, (CAST([ADS_imp_1_OUT].impter_42 AS FLOAT) - -0.221119939035) / 0.882516734885 AS scaler_42, (CAST([ADS_imp_1_OUT].impter_43 AS FLOAT) - -0.798645233124) / 4.33490030298 AS scaler_43, (CAST([ADS_imp_1_OUT].impter_44 AS FLOAT) - -0.0217221080381) / 0.963034682511 AS scaler_44, (CAST([ADS_imp_1_OUT].impter_45 AS FLOAT) - -0.323745224414) / 4.00824483792 AS scaler_45, (CAST([ADS_imp_1_OUT].impter_46 AS FLOAT) - 0.0955832336323) / 0.990524492054 AS scaler_46, (CAST([ADS_imp_1_OUT].impter_47 AS FLOAT) - 0.217138468326) / 0.865567360396 AS scaler_47, (CAST([ADS_imp_1_OUT].impter_48 AS FLOAT) - -1.22101358368) / 4.54930982326 AS scaler_48, (CAST([ADS_imp_1_OUT].impter_49 AS FLOAT) - -0.0633246562393) / 0.84932601861 AS scaler_49, (CAST([ADS_imp_1_OUT].impter_50 AS FLOAT) - -3.63171662218) / 14.2273407957 AS scaler_50, (CAST([ADS_imp_1_OUT].impter_51 AS FLOAT) - -0.452255059733) / 4.52391436843 AS scaler_51, (CAST([ADS_imp_1_OUT].impter_52 AS FLOAT) - 0.0461933128018) / 4.47657282763 AS scaler_52, (CAST([ADS_imp_1_OUT].impter_53 AS FLOAT) - 0.151823564071) / 4.08638806073 AS scaler_53, (CAST([ADS_imp_1_OUT].impter_54 AS FLOAT) - -0.0940495549332) / 1.10186047588 AS scaler_54, (CAST([ADS_imp_1_OUT].impter_55 AS FLOAT) - 0.0216536321968) / 0.963472860479 AS scaler_55, (CAST([ADS_imp_1_OUT].impter_56 AS FLOAT) - -0.102351792443) / 0.896516859942 AS scaler_56, (CAST([ADS_imp_1_OUT].impter_57 AS FLOAT) - 0.0528434789669) / 0.992373280329 AS scaler_57, (CAST([ADS_imp_1_OUT].impter_58 AS FLOAT) - 0.0720251759943) / 0.919550154975 AS scaler_58, (CAST([ADS_imp_1_OUT].impter_59 AS FLOAT) - 0.170534712723) / 1.02356595561 AS scaler_59, (CAST([ADS_imp_1_OUT].impter_60 AS FLOAT) - -0.00909420658349) / 1.15935077053 AS scaler_60, (CAST([ADS_imp_1_OUT].impter_61 AS FLOAT) - -0.0158787984917) / 1.17042643061 AS scaler_61, (CAST([ADS_imp_1_OUT].impter_62 AS FLOAT) - -0.0308612817476) / 1.14645453528 AS scaler_62, (CAST([ADS_imp_1_OUT].impter_63 AS FLOAT) - 0.107993323902) / 1.0928864269 AS scaler_63, (CAST([ADS_imp_1_OUT].impter_64 AS FLOAT) - -0.0817085928458) / 0.938619299786 AS scaler_64, (CAST([ADS_imp_1_OUT].impter_65 AS FLOAT) - -0.0740231331374) / 1.08892025527 AS scaler_65, (CAST([ADS_imp_1_OUT].impter_66 AS FLOAT) - -0.142635880853) / 4.1902684364 AS scaler_66, (CAST([ADS_imp_1_OUT].impter_67 AS FLOAT) - 0.115436254987) / 4.33273614163 AS scaler_67, (CAST([ADS_imp_1_OUT].impter_68 AS FLOAT) - 0.498942852826) / 3.83110123018 AS scaler_68, (CAST([ADS_imp_1_OUT].impter_69 AS FLOAT) - -0.0258432080158) / 0.943346130666 AS scaler_69, (CAST([ADS_imp_1_OUT].impter_70 AS FLOAT) - 0.257228532873) / 4.18315953508 AS scaler_70, (CAST([ADS_imp_1_OUT].impter_71 AS FLOAT) - -0.0510933944328) / 0.915694481837 AS scaler_71, (CAST([ADS_imp_1_OUT].impter_72 AS FLOAT) - -1.2967182628) / 4.3412107039 AS scaler_72, (CAST([ADS_imp_1_OUT].impter_73 AS FLOAT) - -0.476135190772) / 3.93086504111 AS scaler_73, (CAST([ADS_imp_1_OUT].impter_74 AS FLOAT) - -0.0256841911748) / 0.982228190938 AS scaler_74, (CAST([ADS_imp_1_OUT].impter_75 AS FLOAT) - 0.527224443702) / 4.47500160888 AS scaler_75, (CAST([ADS_imp_1_OUT].impter_76 AS FLOAT) - 0.11414693071) / 0.916679620236 AS scaler_76, (CAST([ADS_imp_1_OUT].impter_77 AS FLOAT) - 0.0393241099743) / 4.06872394657 AS scaler_77, (CAST([ADS_imp_1_OUT].impter_78 AS FLOAT) - 0.00136237972979) / 0.951831739238 AS scaler_78, (CAST([ADS_imp_1_OUT].impter_79 AS FLOAT) - 0.00944803353089) / 1.08396216649 AS scaler_79, (CAST([ADS_imp_1_OUT].impter_80 AS FLOAT) - -0.955371809966) / 3.89292588831 AS scaler_80, (CAST([ADS_imp_1_OUT].impter_81 AS FLOAT) - -0.847816042316) / 4.0500301171 AS scaler_81, (CAST([ADS_imp_1_OUT].impter_82 AS FLOAT) - -0.2536691449) / 4.34788190527 AS scaler_82, (CAST([ADS_imp_1_OUT].impter_83 AS FLOAT) - 3.49045428291) / 16.0376623748 AS scaler_83, (CAST([ADS_imp_1_OUT].impter_84 AS FLOAT) - -0.220811215267) / 1.12055173697 AS scaler_84, (CAST([ADS_imp_1_OUT].impter_85 AS FLOAT) - 1.03442509822) / 3.74627262363 AS scaler_85, (CAST([ADS_imp_1_OUT].impter_86 AS FLOAT) - 0.0754350749787) / 1.19949583683 AS scaler_86, (CAST([ADS_imp_1_OUT].impter_87 AS FLOAT) - -1.44734491605) / 4.56337119485 AS scaler_87, (CAST([ADS_imp_1_OUT].impter_88 AS FLOAT) - 0.0841091119366) / 4.12263550418 AS scaler_88, (CAST([ADS_imp_1_OUT].impter_89 AS FLOAT) - 0.0466394020766) / 0.947117395173 AS scaler_89, (CAST([ADS_imp_1_OUT].impter_90 AS FLOAT) - -0.63453043054) / 4.66709079544 AS scaler_90, (CAST([ADS_imp_1_OUT].impter_91 AS FLOAT) - -0.0684487525708) / 0.915057473502 AS scaler_91, (CAST([ADS_imp_1_OUT].impter_92 AS FLOAT) - 0.0341994122732) / 1.10260108053 AS scaler_92, (CAST([ADS_imp_1_OUT].impter_93 AS FLOAT) - 1.08065548968) / 4.38519214606 AS scaler_93, (CAST([ADS_imp_1_OUT].impter_94 AS FLOAT) - -0.00100282868465) / 3.92847081708 AS scaler_94, (CAST([ADS_imp_1_OUT].impter_95 AS FLOAT) - 0.121277339306) / 0.892491334121 AS scaler_95, (CAST([ADS_imp_1_OUT].impter_96 AS FLOAT) - -0.960181853261) / 4.67998060413 AS scaler_96, (CAST([ADS_imp_1_OUT].impter_97 AS FLOAT) - -0.230374063383) / 4.46310196988 AS scaler_97, (CAST([ADS_imp_1_OUT].impter_98 AS FLOAT) - -0.441088711933) / 4.29132880736 AS scaler_98, (CAST([ADS_imp_1_OUT].impter_99 AS FLOAT) - -0.197511946259) / 1.2163585778 AS scaler_99, (CAST([ADS_imp_1_OUT].impter_100 AS FLOAT) - -0.40734328772) / 4.07020030327 AS scaler_100, (CAST([ADS_imp_1_OUT].impter_101 AS FLOAT) - 0.64612507587) / 4.11926139791 AS scaler_101 
FROM [ADS_imp_1_OUT]), 
[IL] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], [ADS_sca_2_OUT].scaler_2 AS scaler_2, [ADS_sca_2_OUT].scaler_3 AS scaler_3, [ADS_sca_2_OUT].scaler_4 AS scaler_4, [ADS_sca_2_OUT].scaler_5 AS scaler_5, [ADS_sca_2_OUT].scaler_6 AS scaler_6, [ADS_sca_2_OUT].scaler_7 AS scaler_7, [ADS_sca_2_OUT].scaler_8 AS scaler_8, [ADS_sca_2_OUT].scaler_9 AS scaler_9, [ADS_sca_2_OUT].scaler_10 AS scaler_10, [ADS_sca_2_OUT].scaler_11 AS scaler_11, [ADS_sca_2_OUT].scaler_12 AS scaler_12, [ADS_sca_2_OUT].scaler_13 AS scaler_13, [ADS_sca_2_OUT].scaler_14 AS scaler_14, [ADS_sca_2_OUT].scaler_15 AS scaler_15, [ADS_sca_2_OUT].scaler_16 AS scaler_16, [ADS_sca_2_OUT].scaler_17 AS scaler_17, [ADS_sca_2_OUT].scaler_18 AS scaler_18, [ADS_sca_2_OUT].scaler_19 AS scaler_19, [ADS_sca_2_OUT].scaler_20 AS scaler_20, [ADS_sca_2_OUT].scaler_21 AS scaler_21, [ADS_sca_2_OUT].scaler_22 AS scaler_22, [ADS_sca_2_OUT].scaler_23 AS scaler_23, [ADS_sca_2_OUT].scaler_24 AS scaler_24, [ADS_sca_2_OUT].scaler_25 AS scaler_25, [ADS_sca_2_OUT].scaler_26 AS scaler_26, [ADS_sca_2_OUT].scaler_27 AS scaler_27, [ADS_sca_2_OUT].scaler_28 AS scaler_28, [ADS_sca_2_OUT].scaler_29 AS scaler_29, [ADS_sca_2_OUT].scaler_30 AS scaler_30, [ADS_sca_2_OUT].scaler_31 AS scaler_31, [ADS_sca_2_OUT].scaler_32 AS scaler_32, [ADS_sca_2_OUT].scaler_33 AS scaler_33, [ADS_sca_2_OUT].scaler_34 AS scaler_34, [ADS_sca_2_OUT].scaler_35 AS scaler_35, [ADS_sca_2_OUT].scaler_36 AS scaler_36, [ADS_sca_2_OUT].scaler_37 AS scaler_37, [ADS_sca_2_OUT].scaler_38 AS scaler_38, [ADS_sca_2_OUT].scaler_39 AS scaler_39, [ADS_sca_2_OUT].scaler_40 AS scaler_40, [ADS_sca_2_OUT].scaler_41 AS scaler_41, [ADS_sca_2_OUT].scaler_42 AS scaler_42, [ADS_sca_2_OUT].scaler_43 AS scaler_43, [ADS_sca_2_OUT].scaler_44 AS scaler_44, [ADS_sca_2_OUT].scaler_45 AS scaler_45, [ADS_sca_2_OUT].scaler_46 AS scaler_46, [ADS_sca_2_OUT].scaler_47 AS scaler_47, [ADS_sca_2_OUT].scaler_48 AS scaler_48, [ADS_sca_2_OUT].scaler_49 AS scaler_49, [ADS_sca_2_OUT].scaler_50 AS scaler_50, [ADS_sca_2_OUT].scaler_51 AS scaler_51, [ADS_sca_2_OUT].scaler_52 AS scaler_52, [ADS_sca_2_OUT].scaler_53 AS scaler_53, [ADS_sca_2_OUT].scaler_54 AS scaler_54, [ADS_sca_2_OUT].scaler_55 AS scaler_55, [ADS_sca_2_OUT].scaler_56 AS scaler_56, [ADS_sca_2_OUT].scaler_57 AS scaler_57, [ADS_sca_2_OUT].scaler_58 AS scaler_58, [ADS_sca_2_OUT].scaler_59 AS scaler_59, [ADS_sca_2_OUT].scaler_60 AS scaler_60, [ADS_sca_2_OUT].scaler_61 AS scaler_61, [ADS_sca_2_OUT].scaler_62 AS scaler_62, [ADS_sca_2_OUT].scaler_63 AS scaler_63, [ADS_sca_2_OUT].scaler_64 AS scaler_64, [ADS_sca_2_OUT].scaler_65 AS scaler_65, [ADS_sca_2_OUT].scaler_66 AS scaler_66, [ADS_sca_2_OUT].scaler_67 AS scaler_67, [ADS_sca_2_OUT].scaler_68 AS scaler_68, [ADS_sca_2_OUT].scaler_69 AS scaler_69, [ADS_sca_2_OUT].scaler_70 AS scaler_70, [ADS_sca_2_OUT].scaler_71 AS scaler_71, [ADS_sca_2_OUT].scaler_72 AS scaler_72, [ADS_sca_2_OUT].scaler_73 AS scaler_73, [ADS_sca_2_OUT].scaler_74 AS scaler_74, [ADS_sca_2_OUT].scaler_75 AS scaler_75, [ADS_sca_2_OUT].scaler_76 AS scaler_76, [ADS_sca_2_OUT].scaler_77 AS scaler_77, [ADS_sca_2_OUT].scaler_78 AS scaler_78, [ADS_sca_2_OUT].scaler_79 AS scaler_79, [ADS_sca_2_OUT].scaler_80 AS scaler_80, [ADS_sca_2_OUT].scaler_81 AS scaler_81, [ADS_sca_2_OUT].scaler_82 AS scaler_82, [ADS_sca_2_OUT].scaler_83 AS scaler_83, [ADS_sca_2_OUT].scaler_84 AS scaler_84, [ADS_sca_2_OUT].scaler_85 AS scaler_85, [ADS_sca_2_OUT].scaler_86 AS scaler_86, [ADS_sca_2_OUT].scaler_87 AS scaler_87, [ADS_sca_2_OUT].scaler_88 AS scaler_88, [ADS_sca_2_OUT].scaler_89 AS scaler_89, [ADS_sca_2_OUT].scaler_90 AS scaler_90, [ADS_sca_2_OUT].scaler_91 AS scaler_91, [ADS_sca_2_OUT].scaler_92 AS scaler_92, [ADS_sca_2_OUT].scaler_93 AS scaler_93, [ADS_sca_2_OUT].scaler_94 AS scaler_94, [ADS_sca_2_OUT].scaler_95 AS scaler_95, [ADS_sca_2_OUT].scaler_96 AS scaler_96, [ADS_sca_2_OUT].scaler_97 AS scaler_97, [ADS_sca_2_OUT].scaler_98 AS scaler_98, [ADS_sca_2_OUT].scaler_99 AS scaler_99, [ADS_sca_2_OUT].scaler_100 AS scaler_100, [ADS_sca_2_OUT].scaler_101 AS scaler_101 
FROM [ADS_sca_2_OUT]), 
[HL_BA_1] AS 
(SELECT [IL].[KEY] AS [KEY], 0.231334161184 * [IL].scaler_2 + -0.370306770716 * [IL].scaler_3 + 0.0409664176624 * [IL].scaler_4 + 0.0359639781117 * [IL].scaler_5 + -0.534269654435 * [IL].scaler_6 + 0.526570721305 * [IL].scaler_7 + -0.519956307954 * [IL].scaler_8 + 0.30798877362 * [IL].scaler_9 + -0.861415892961 * [IL].scaler_10 + -0.843390663731 * [IL].scaler_11 + -0.318864371048 * [IL].scaler_12 + -0.203127830827 * [IL].scaler_13 + -0.527324997037 * [IL].scaler_14 + -0.596505853466 * [IL].scaler_15 + 0.542559004473 * [IL].scaler_16 + -0.234280790149 * [IL].scaler_17 + -0.116246356389 * [IL].scaler_18 + 0.595196682932 * [IL].scaler_19 + -0.484751955175 * [IL].scaler_20 + -0.231739161556 * [IL].scaler_21 + 0.335254624907 * [IL].scaler_22 + -0.0673660839598 * [IL].scaler_23 + -0.0404057028301 * [IL].scaler_24 + 0.0601577628957 * [IL].scaler_25 + -0.375212073151 * [IL].scaler_26 + -0.793257259895 * [IL].scaler_27 + 0.409445573304 * [IL].scaler_28 + 0.0769629095268 * [IL].scaler_29 + 0.537480101818 * [IL].scaler_30 + 0.361967672094 * [IL].scaler_31 + -1.05380070827 * [IL].scaler_32 + -0.303799216831 * [IL].scaler_33 + 0.138008360956 * [IL].scaler_34 + -0.0887724708952 * [IL].scaler_35 + 0.622257810682 * [IL].scaler_36 + 0.050170199395 * [IL].scaler_37 + -0.321530832628 * [IL].scaler_38 + 0.0280763863456 * [IL].scaler_39 + -0.65595223311 * [IL].scaler_40 + -0.256110520653 * [IL].scaler_41 + -0.665006560804 * [IL].scaler_42 + -0.399696886898 * [IL].scaler_43 + -0.114409480807 * [IL].scaler_44 + -0.666582642777 * [IL].scaler_45 + 0.274607272923 * [IL].scaler_46 + 0.323262130894 * [IL].scaler_47 + 0.543709939058 * [IL].scaler_48 + -0.128692675729 * [IL].scaler_49 + -0.672803895211 * [IL].scaler_50 + 0.11295621689 * [IL].scaler_51 + -0.219906202552 * [IL].scaler_52 + 0.991071011846 * [IL].scaler_53 + -0.332393849669 * [IL].scaler_54 + -0.804354694472 * [IL].scaler_55 + -0.00318723110136 * [IL].scaler_56 + -0.596930455523 * [IL].scaler_57 + -0.0175211355598 * [IL].scaler_58 + 0.401336050438 * [IL].scaler_59 + -0.758260915161 * [IL].scaler_60 + -0.284544650892 * [IL].scaler_61 + 0.126336104077 * [IL].scaler_62 + 0.0536702979224 * [IL].scaler_63 + -0.158571211228 * [IL].scaler_64 + -0.0281196357658 * [IL].scaler_65 + -0.19214395266 * [IL].scaler_66 + 0.27075699038 * [IL].scaler_67 + 0.487158053838 * [IL].scaler_68 + -0.00609555061571 * [IL].scaler_69 + 0.00435063600757 * [IL].scaler_70 + -0.28546583731 * [IL].scaler_71 + 0.417531591362 * [IL].scaler_72 + 0.808931674436 * [IL].scaler_73 + -0.134546664553 * [IL].scaler_74 + -1.22181559816 * [IL].scaler_75 + -0.624126093776 * [IL].scaler_76 + -0.0926065837555 * [IL].scaler_77 + -0.5501966931 * [IL].scaler_78 + -0.204197479774 * [IL].scaler_79 + 0.156779564433 * [IL].scaler_80 + 0.614378366866 * [IL].scaler_81 + -0.0158734379893 * [IL].scaler_82 + 0.424349180499 * [IL].scaler_83 + 0.342852918189 * [IL].scaler_84 + -0.311364125589 * [IL].scaler_85 + 0.558607398922 * [IL].scaler_86 + -0.371723933018 * [IL].scaler_87 + -0.120791553696 * [IL].scaler_88 + 0.111502902399 * [IL].scaler_89 + 0.273902100906 * [IL].scaler_90 + 0.277376340104 * [IL].scaler_91 + 0.246738925982 * [IL].scaler_92 + 0.560689742255 * [IL].scaler_93 + -0.343718905948 * [IL].scaler_94 + -0.378533599181 * [IL].scaler_95 + -0.509938397554 * [IL].scaler_96 + 0.645303047083 * [IL].scaler_97 + -0.355548883456 * [IL].scaler_98 + 0.0610815742148 * [IL].scaler_99 + -0.766444365032 * [IL].scaler_100 + -0.347343753437 * [IL].scaler_101 + -0.543944140857 AS [NEUR_1_1], 0.120185621273 * [IL].scaler_2 + 0.163057604967 * [IL].scaler_3 + -0.267014191673 * [IL].scaler_4 + 0.680733744867 * [IL].scaler_5 + 0.381591893247 * [IL].scaler_6 + -0.630167549238 * [IL].scaler_7 + -0.193864398137 * [IL].scaler_8 + -1.359625906 * [IL].scaler_9 + 1.0351456704 * [IL].scaler_10 + 0.65207657209 * [IL].scaler_11 + 0.560387194737 * [IL].scaler_12 + 0.428848043804 * [IL].scaler_13 + 0.451798987366 * [IL].scaler_14 + 1.94446080125 * [IL].scaler_15 + -0.437522524451 * [IL].scaler_16 + 0.160413933817 * [IL].scaler_17 + 0.198341384129 * [IL].scaler_18 + -1.85080904749 * [IL].scaler_19 + 1.07441112257 * [IL].scaler_20 + 0.866078795702 * [IL].scaler_21 + -0.244474098145 * [IL].scaler_22 + 0.0993034228388 * [IL].scaler_23 + -0.918737622784 * [IL].scaler_24 + 0.793028519418 * [IL].scaler_25 + 1.69718428759 * [IL].scaler_26 + 1.64638282916 * [IL].scaler_27 + 1.23349226903 * [IL].scaler_28 + 0.56064802924 * [IL].scaler_29 + -1.26470095262 * [IL].scaler_30 + -0.536679553314 * [IL].scaler_31 + -0.208055720442 * [IL].scaler_32 + -0.428752469471 * [IL].scaler_33 + -0.532533615235 * [IL].scaler_34 + 2.20486474963 * [IL].scaler_35 + -1.63103706267 * [IL].scaler_36 + -1.94027467406 * [IL].scaler_37 + -0.459371410496 * [IL].scaler_38 + 0.74981122933 * [IL].scaler_39 + 0.416814088646 * [IL].scaler_40 + 0.465856199475 * [IL].scaler_41 + -0.926503618767 * [IL].scaler_42 + 0.958574173837 * [IL].scaler_43 + 0.541726262919 * [IL].scaler_44 + 0.360062720364 * [IL].scaler_45 + 0.229888017278 * [IL].scaler_46 + 1.01011665633 * [IL].scaler_47 + 0.172702671744 * [IL].scaler_48 + 0.525893858591 * [IL].scaler_49 + 0.822308961463 * [IL].scaler_50 + -0.968349685584 * [IL].scaler_51 + -0.548190992065 * [IL].scaler_52 + -0.0501985666764 * [IL].scaler_53 + -0.0105632633772 * [IL].scaler_54 + 0.2771215803 * [IL].scaler_55 + -0.173784344298 * [IL].scaler_56 + 0.530738323499 * [IL].scaler_57 + -0.845111900601 * [IL].scaler_58 + -0.359251216463 * [IL].scaler_59 + -0.344458642959 * [IL].scaler_60 + -0.524001547722 * [IL].scaler_61 + -1.30219094706 * [IL].scaler_62 + -0.513203359488 * [IL].scaler_63 + 1.51598864904 * [IL].scaler_64 + 0.347661991317 * [IL].scaler_65 + -0.547530222769 * [IL].scaler_66 + 0.08775767145 * [IL].scaler_67 + 1.08378233378 * [IL].scaler_68 + 0.972389165809 * [IL].scaler_69 + -1.2613636566 * [IL].scaler_70 + 0.663510950614 * [IL].scaler_71 + 0.530786239273 * [IL].scaler_72 + -0.807478537506 * [IL].scaler_73 + 0.637136422926 * [IL].scaler_74 + 0.948464199273 * [IL].scaler_75 + 0.871644457324 * [IL].scaler_76 + -0.487674560394 * [IL].scaler_77 + 1.13558042323 * [IL].scaler_78 + 0.57468608037 * [IL].scaler_79 + 0.731696285675 * [IL].scaler_80 + -0.456167637268 * [IL].scaler_81 + -0.262614710431 * [IL].scaler_82 + 0.531520981521 * [IL].scaler_83 + -0.256335084664 * [IL].scaler_84 + 0.077605234478 * [IL].scaler_85 + -1.05613301919 * [IL].scaler_86 + 0.660595998452 * [IL].scaler_87 + -0.113788807059 * [IL].scaler_88 + 0.516362285683 * [IL].scaler_89 + 0.0982439083284 * [IL].scaler_90 + -0.091616681626 * [IL].scaler_91 + 1.45590583086 * [IL].scaler_92 + -0.169516162397 * [IL].scaler_93 + 1.26552263406 * [IL].scaler_94 + -0.635274486052 * [IL].scaler_95 + 0.0764722132966 * [IL].scaler_96 + -0.0620677275524 * [IL].scaler_97 + -0.26307575684 * [IL].scaler_98 + 1.1079410729 * [IL].scaler_99 + 0.688883404 * [IL].scaler_100 + 0.591737678336 * [IL].scaler_101 + 0.402793991508 AS [NEUR_1_2], -0.694114862586 * [IL].scaler_2 + 0.169905240783 * [IL].scaler_3 + 1.32296052962 * [IL].scaler_4 + -0.606965370019 * [IL].scaler_5 + -1.14335956455 * [IL].scaler_6 + -0.361693379205 * [IL].scaler_7 + 1.85526679888 * [IL].scaler_8 + 0.0044059483243 * [IL].scaler_9 + 0.961831178399 * [IL].scaler_10 + 0.0430297762779 * [IL].scaler_11 + 1.0455085993 * [IL].scaler_12 + 0.109782413436 * [IL].scaler_13 + 0.329735960396 * [IL].scaler_14 + 0.428174340559 * [IL].scaler_15 + 0.129979668548 * [IL].scaler_16 + -0.403751577843 * [IL].scaler_17 + 0.537353614222 * [IL].scaler_18 + -0.833757340163 * [IL].scaler_19 + 0.584750514101 * [IL].scaler_20 + -0.1227684227 * [IL].scaler_21 + -0.852279501716 * [IL].scaler_22 + -0.0677181589016 * [IL].scaler_23 + 0.0299385290697 * [IL].scaler_24 + 0.686703585014 * [IL].scaler_25 + 0.287710679129 * [IL].scaler_26 + 0.560326615617 * [IL].scaler_27 + 0.0247182126269 * [IL].scaler_28 + -1.39382471621 * [IL].scaler_29 + -0.635666392196 * [IL].scaler_30 + -0.258734488794 * [IL].scaler_31 + 0.377249174067 * [IL].scaler_32 + -0.220037337364 * [IL].scaler_33 + 0.468695862395 * [IL].scaler_34 + 0.970275804157 * [IL].scaler_35 + -0.281113973949 * [IL].scaler_36 + 0.63925838252 * [IL].scaler_37 + -0.425436717892 * [IL].scaler_38 + -1.17770682051 * [IL].scaler_39 + -0.317926362227 * [IL].scaler_40 + 0.381957073142 * [IL].scaler_41 + -0.187992413106 * [IL].scaler_42 + 0.961316434724 * [IL].scaler_43 + -0.132811320134 * [IL].scaler_44 + 0.349974538937 * [IL].scaler_45 + 0.213507289197 * [IL].scaler_46 + -1.03380132712 * [IL].scaler_47 + -0.49767698904 * [IL].scaler_48 + -0.0759979031967 * [IL].scaler_49 + 0.674398037534 * [IL].scaler_50 + -1.66151704721 * [IL].scaler_51 + -0.163967381435 * [IL].scaler_52 + -0.12934336198 * [IL].scaler_53 + 1.22142982696 * [IL].scaler_54 + 1.21973996562 * [IL].scaler_55 + -0.0339754591181 * [IL].scaler_56 + 0.408337038473 * [IL].scaler_57 + -0.622477981887 * [IL].scaler_58 + 0.023323615489 * [IL].scaler_59 + 0.932845029584 * [IL].scaler_60 + -0.921036065696 * [IL].scaler_61 + 0.247203633831 * [IL].scaler_62 + 0.83308379157 * [IL].scaler_63 + 0.0666456416004 * [IL].scaler_64 + 0.362722442015 * [IL].scaler_65 + 0.495852934849 * [IL].scaler_66 + -1.16582280466 * [IL].scaler_67 + -0.421622081186 * [IL].scaler_68 + 0.041485476458 * [IL].scaler_69 + -0.448160828428 * [IL].scaler_70 + 0.77203518913 * [IL].scaler_71 + -1.20061975796 * [IL].scaler_72 + -0.0819437662327 * [IL].scaler_73 + 0.693702819878 * [IL].scaler_74 + 1.77153955959 * [IL].scaler_75 + 0.55194229256 * [IL].scaler_76 + 0.535609197288 * [IL].scaler_77 + 0.965873041777 * [IL].scaler_78 + -1.04131412939 * [IL].scaler_79 + -0.504400378282 * [IL].scaler_80 + 0.00231966390991 * [IL].scaler_81 + -0.469855208612 * [IL].scaler_82 + -0.698945257812 * [IL].scaler_83 + -0.689914550395 * [IL].scaler_84 + 0.578895935301 * [IL].scaler_85 + -1.08331182482 * [IL].scaler_86 + 0.955752157044 * [IL].scaler_87 + -1.21651552247 * [IL].scaler_88 + 0.499025835526 * [IL].scaler_89 + -0.125831927799 * [IL].scaler_90 + -0.860673415992 * [IL].scaler_91 + -0.0603298696906 * [IL].scaler_92 + 0.0135657465597 * [IL].scaler_93 + 0.90206505692 * [IL].scaler_94 + 0.465780623481 * [IL].scaler_95 + 1.04521235598 * [IL].scaler_96 + 0.113453238883 * [IL].scaler_97 + 0.661268927775 * [IL].scaler_98 + -0.251916360219 * [IL].scaler_99 + -0.385926194741 * [IL].scaler_100 + -0.491685677589 * [IL].scaler_101 + -0.0829838455333 AS [NEUR_1_3] 
FROM [IL]), 
[HL_1_relu] AS 
(SELECT [HL_BA_1].[KEY] AS [KEY], CASE WHEN ([HL_BA_1].[NEUR_1_1] >= 0.0) THEN [HL_BA_1].[NEUR_1_1] ELSE 0.0 END AS [NEUR_1_1], CASE WHEN ([HL_BA_1].[NEUR_1_2] >= 0.0) THEN [HL_BA_1].[NEUR_1_2] ELSE 0.0 END AS [NEUR_1_2], CASE WHEN ([HL_BA_1].[NEUR_1_3] >= 0.0) THEN [HL_BA_1].[NEUR_1_3] ELSE 0.0 END AS [NEUR_1_3] 
FROM [HL_BA_1]), 
[HL_BA_2] AS 
(SELECT [HL_1_relu].[KEY] AS [KEY], -0.323753853633 * [HL_1_relu].[NEUR_1_1] + -1.30931169735 * [HL_1_relu].[NEUR_1_2] + -0.673944962808 * [HL_1_relu].[NEUR_1_3] + -0.993034994145 AS [NEUR_2_1], -0.702012819822 * [HL_1_relu].[NEUR_1_1] + -0.270817505591 * [HL_1_relu].[NEUR_1_2] + -0.656996441193 * [HL_1_relu].[NEUR_1_3] + 2.94739266454 AS [NEUR_2_2], -0.440856492391 * [HL_1_relu].[NEUR_1_1] + 0.79579382171 * [HL_1_relu].[NEUR_1_2] + -1.26044878745 * [HL_1_relu].[NEUR_1_3] + -1.5620245994 AS [NEUR_2_3], -1.61651730261 * [HL_1_relu].[NEUR_1_1] + 5.47718907826 * [HL_1_relu].[NEUR_1_2] + 4.36344422933 * [HL_1_relu].[NEUR_1_3] + -1.7746446667 AS [NEUR_2_4], -0.476236937799 * [HL_1_relu].[NEUR_1_1] + -0.420676543024 * [HL_1_relu].[NEUR_1_2] + -0.505413753868 * [HL_1_relu].[NEUR_1_3] + -0.461303778614 AS [NEUR_2_5] 
FROM [HL_1_relu]), 
[HL_2_relu] AS 
(SELECT [HL_BA_2].[KEY] AS [KEY], CASE WHEN ([HL_BA_2].[NEUR_2_1] >= 0.0) THEN [HL_BA_2].[NEUR_2_1] ELSE 0.0 END AS [NEUR_2_1], CASE WHEN ([HL_BA_2].[NEUR_2_2] >= 0.0) THEN [HL_BA_2].[NEUR_2_2] ELSE 0.0 END AS [NEUR_2_2], CASE WHEN ([HL_BA_2].[NEUR_2_3] >= 0.0) THEN [HL_BA_2].[NEUR_2_3] ELSE 0.0 END AS [NEUR_2_3], CASE WHEN ([HL_BA_2].[NEUR_2_4] >= 0.0) THEN [HL_BA_2].[NEUR_2_4] ELSE 0.0 END AS [NEUR_2_4], CASE WHEN ([HL_BA_2].[NEUR_2_5] >= 0.0) THEN [HL_BA_2].[NEUR_2_5] ELSE 0.0 END AS [NEUR_2_5] 
FROM [HL_BA_2]), 
[OL_BA] AS 
(SELECT [HL_2_relu].[KEY] AS [KEY], -0.702501505105 * [HL_2_relu].[NEUR_2_1] + 1.82980912835 * [HL_2_relu].[NEUR_2_2] + -1.01918645934 * [HL_2_relu].[NEUR_2_3] + -3.53958211154 * [HL_2_relu].[NEUR_2_4] + 0.0627721933992 * [HL_2_relu].[NEUR_2_5] + 4.90520745104 AS [NEUR_3_1], 0.00802134438896 * [HL_2_relu].[NEUR_2_1] + 2.29325130904 * [HL_2_relu].[NEUR_2_2] + -1.06436458656 * [HL_2_relu].[NEUR_2_3] + -1.58045739977 * [HL_2_relu].[NEUR_2_4] + 0.59865896789 * [HL_2_relu].[NEUR_2_5] + 3.83973692676 AS [NEUR_3_2], -0.113471405649 * [HL_2_relu].[NEUR_2_1] + -1.66312701374 * [HL_2_relu].[NEUR_2_2] + -0.604723698995 * [HL_2_relu].[NEUR_2_3] + 2.60064259131 * [HL_2_relu].[NEUR_2_4] + 0.734518038761 * [HL_2_relu].[NEUR_2_5] + -2.6533679868 AS [NEUR_3_3], -0.420632031308 * [HL_2_relu].[NEUR_2_1] + -2.51790497324 * [HL_2_relu].[NEUR_2_2] + 3.14260649092 * [HL_2_relu].[NEUR_2_3] + 2.62443726969 * [HL_2_relu].[NEUR_2_4] + 0.533011636895 * [HL_2_relu].[NEUR_2_5] + -5.58913678364 AS [NEUR_3_4] 
FROM [HL_2_relu]), 
[OL_softmax] AS 
(SELECT [OL_BA].[KEY] AS [KEY], [OL_BA].[NEUR_3_1] AS [NEUR_3_1], [OL_BA].[NEUR_3_2] AS [NEUR_3_2], [OL_BA].[NEUR_3_3] AS [NEUR_3_3], [OL_BA].[NEUR_3_4] AS [NEUR_3_4] 
FROM [OL_BA]), 
orig_cte AS 
(SELECT [OL_softmax].[KEY] AS [KEY], [OL_softmax].[NEUR_3_1] AS [Score_0], [OL_softmax].[NEUR_3_2] AS [Score_1], [OL_softmax].[NEUR_3_3] AS [Score_2], [OL_softmax].[NEUR_3_4] AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Proba_0], CAST(NULL AS FLOAT(53)) AS [Proba_1], CAST(NULL AS FLOAT(53)) AS [Proba_2], CAST(NULL AS FLOAT(53)) AS [Proba_3], CAST(NULL AS FLOAT(53)) AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [OL_softmax]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], exp(score_max.[Score_0] - score_max.[max_Score]) AS [exp_delta_Score_0], exp(score_max.[Score_1] - score_max.[max_Score]) AS [exp_delta_Score_1], exp(score_max.[Score_2] - score_max.[max_Score]) AS [exp_delta_Score_2], exp(score_max.[Score_3] - score_max.[max_Score]) AS [exp_delta_Score_3] 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.[KEY] AS [KEY], soft_scu.class AS class, soft_scu.[LogProba] AS [LogProba], soft_scu.[Proba] AS [Proba], soft_scu.[Score] AS [Score], soft_scu.[exp_delta_Score] AS [exp_delta_Score] 
FROM (SELECT score_soft_max_comp.[KEY] AS [KEY], 0 AS class, score_soft_max_comp.[LogProba_0] AS [LogProba], score_soft_max_comp.[Proba_0] AS [Proba], score_soft_max_comp.[Score_0] AS [Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 1 AS class, score_soft_max_comp.[LogProba_1] AS [LogProba], score_soft_max_comp.[Proba_1] AS [Proba], score_soft_max_comp.[Score_1] AS [Score], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 2 AS class, score_soft_max_comp.[LogProba_2] AS [LogProba], score_soft_max_comp.[Proba_2] AS [Proba], score_soft_max_comp.[Score_2] AS [Score], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 3 AS class, score_soft_max_comp.[LogProba_3] AS [LogProba], score_soft_max_comp.[Proba_3] AS [Proba], score_soft_max_comp.[Score_3] AS [Score], score_soft_max_comp.[exp_delta_Score_3] AS [exp_delta_Score] 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.[KEY] AS [KEY], score_soft_max_comp.[Score_0] AS [Score_0], score_soft_max_comp.[Score_1] AS [Score_1], score_soft_max_comp.[Score_2] AS [Score_2], score_soft_max_comp.[Score_3] AS [Score_3], score_soft_max_comp.[Proba_0] AS [Proba_0], score_soft_max_comp.[Proba_1] AS [Proba_1], score_soft_max_comp.[Proba_2] AS [Proba_2], score_soft_max_comp.[Proba_3] AS [Proba_3], score_soft_max_comp.[LogProba_0] AS [LogProba_0], score_soft_max_comp.[LogProba_1] AS [LogProba_1], score_soft_max_comp.[LogProba_2] AS [LogProba_2], score_soft_max_comp.[LogProba_3] AS [LogProba_3], score_soft_max_comp.[Decision] AS [Decision], score_soft_max_comp.[max_LogProba] AS [max_LogProba], score_soft_max_comp.[max_Proba] AS [max_Proba], score_soft_max_comp.[max_Score] AS [max_Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max_comp.[exp_delta_Score_3] AS [exp_delta_Score_3], (SELECT sum(score_class_union_soft.[exp_delta_Score]) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.[KEY] = score_class_union_soft.[KEY]) AS [sum_ExpDeltaScore] 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Score_2] AS [Score_2], score_soft_max.[Score_3] AS [Score_3], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[Proba_2] AS [Proba_2], score_soft_max.[Proba_3] AS [Proba_3], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[LogProba_2] AS [LogProba_2], score_soft_max.[LogProba_3] AS [LogProba_3], score_soft_max.[Decision] AS [Decision], score_soft_max.[max_LogProba] AS [max_LogProba], score_soft_max.[max_Proba] AS [max_Proba], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max.[exp_delta_Score_3] AS [exp_delta_Score_3], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.[max_LogProba] = score_class_union.[LogProba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.[max_Proba] = score_class_union.[Proba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.[max_Score] = score_class_union.[Score] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score], score_soft_max.[exp_delta_Score_0] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_0], score_soft_max.[exp_delta_Score_1] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_1], score_soft_max.[exp_delta_Score_2] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_2], score_soft_max.[exp_delta_Score_3] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_3] 
FROM score_soft_max)
 SELECT arg_max_cte.[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], CAST(NULL AS FLOAT) AS [Score_2], CAST(NULL AS FLOAT) AS [Score_3], arg_max_cte.[SoftProba_0] AS [Proba_0], arg_max_cte.[SoftProba_1] AS [Proba_1], arg_max_cte.[SoftProba_2] AS [Proba_2], arg_max_cte.[SoftProba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[SoftProba_0] IS NULL OR arg_max_cte.[SoftProba_0] > 0.0) THEN log(arg_max_cte.[SoftProba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[SoftProba_1] IS NULL OR arg_max_cte.[SoftProba_1] > 0.0) THEN log(arg_max_cte.[SoftProba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[SoftProba_2] IS NULL OR arg_max_cte.[SoftProba_2] > 0.0) THEN log(arg_max_cte.[SoftProba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[SoftProba_3] IS NULL OR arg_max_cte.[SoftProba_3] > 0.0) THEN log(arg_max_cte.[SoftProba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte