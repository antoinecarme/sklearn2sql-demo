-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.293433083957 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 5.07398171239 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 11.8204488778 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 11.8071487947 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 5.80881130507 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 1.38570241064 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.131338320865 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.00581878636741 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 1.96674979219 ELSE `ADS`.`Feature_9` END AS impter_11, CASE WHEN (`ADS`.`Feature_10` IS NULL) THEN 10.3283458022 ELSE `ADS`.`Feature_10` END AS impter_12, CASE WHEN (`ADS`.`Feature_11` IS NULL) THEN 12.0656691604 ELSE `ADS`.`Feature_11` END AS impter_13, CASE WHEN (`ADS`.`Feature_12` IS NULL) THEN 10.1853699086 ELSE `ADS`.`Feature_12` END AS impter_14, CASE WHEN (`ADS`.`Feature_13` IS NULL) THEN 8.04156275977 ELSE `ADS`.`Feature_13` END AS impter_15, CASE WHEN (`ADS`.`Feature_14` IS NULL) THEN 1.90191188695 ELSE `ADS`.`Feature_14` END AS impter_16, CASE WHEN (`ADS`.`Feature_15` IS NULL) THEN 0.106400665004 ELSE `ADS`.`Feature_15` END AS impter_17, CASE WHEN (`ADS`.`Feature_16` IS NULL) THEN 0.00166251039069 ELSE `ADS`.`Feature_16` END AS impter_18, CASE WHEN (`ADS`.`Feature_17` IS NULL) THEN 2.5719035744 ELSE `ADS`.`Feature_17` END AS impter_19, CASE WHEN (`ADS`.`Feature_18` IS NULL) THEN 9.99168744805 ELSE `ADS`.`Feature_18` END AS impter_20, CASE WHEN (`ADS`.`Feature_19` IS NULL) THEN 7.13549459684 ELSE `ADS`.`Feature_19` END AS impter_21, CASE WHEN (`ADS`.`Feature_20` IS NULL) THEN 7.04987531172 ELSE `ADS`.`Feature_20` END AS impter_22, CASE WHEN (`ADS`.`Feature_21` IS NULL) THEN 7.6965918537 ELSE `ADS`.`Feature_21` END AS impter_23, CASE WHEN (`ADS`.`Feature_22` IS NULL) THEN 1.87364921031 ELSE `ADS`.`Feature_22` END AS impter_24, CASE WHEN (`ADS`.`Feature_23` IS NULL) THEN 0.0540315876974 ELSE `ADS`.`Feature_23` END AS impter_25, CASE WHEN (`ADS`.`Feature_24` IS NULL) THEN 0.000831255195345 ELSE `ADS`.`Feature_24` END AS impter_26, CASE WHEN (`ADS`.`Feature_25` IS NULL) THEN 2.5170407315 ELSE `ADS`.`Feature_25` END AS impter_27, CASE WHEN (`ADS`.`Feature_26` IS NULL) THEN 9.19950124688 ELSE `ADS`.`Feature_26` END AS impter_28, CASE WHEN (`ADS`.`Feature_27` IS NULL) THEN 9.02244389027 ELSE `ADS`.`Feature_27` END AS impter_29, CASE WHEN (`ADS`.`Feature_28` IS NULL) THEN 9.99418121363 ELSE `ADS`.`Feature_28` END AS impter_30, CASE WHEN (`ADS`.`Feature_29` IS NULL) THEN 7.60432252702 ELSE `ADS`.`Feature_29` END AS impter_31, CASE WHEN (`ADS`.`Feature_30` IS NULL) THEN 2.35245220283 ELSE `ADS`.`Feature_30` END AS impter_32, CASE WHEN (`ADS`.`Feature_31` IS NULL) THEN 0.000831255195345 ELSE `ADS`.`Feature_31` END AS impter_33, CASE WHEN (`ADS`.`Feature_32` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_32` END AS impter_34, CASE WHEN (`ADS`.`Feature_33` IS NULL) THEN 2.29925187032 ELSE `ADS`.`Feature_33` END AS impter_35, CASE WHEN (`ADS`.`Feature_34` IS NULL) THEN 7.56691604323 ELSE `ADS`.`Feature_34` END AS impter_36, CASE WHEN (`ADS`.`Feature_35` IS NULL) THEN 9.1604322527 ELSE `ADS`.`Feature_35` END AS impter_37, CASE WHEN (`ADS`.`Feature_36` IS NULL) THEN 10.3674147963 ELSE `ADS`.`Feature_36` END AS impter_38, CASE WHEN (`ADS`.`Feature_37` IS NULL) THEN 8.75727348296 ELSE `ADS`.`Feature_37` END AS impter_39, CASE WHEN (`ADS`.`Feature_38` IS NULL) THEN 2.79966749792 ELSE `ADS`.`Feature_38` END AS impter_40, CASE WHEN (`ADS`.`Feature_39` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_39` END AS impter_41, CASE WHEN (`ADS`.`Feature_40` IS NULL) THEN 0.00997506234414 ELSE `ADS`.`Feature_40` END AS impter_42, CASE WHEN (`ADS`.`Feature_41` IS NULL) THEN 1.55860349127 ELSE `ADS`.`Feature_41` END AS impter_43, CASE WHEN (`ADS`.`Feature_42` IS NULL) THEN 6.83790523691 ELSE `ADS`.`Feature_42` END AS impter_44, CASE WHEN (`ADS`.`Feature_43` IS NULL) THEN 7.30257689111 ELSE `ADS`.`Feature_43` END AS impter_45, CASE WHEN (`ADS`.`Feature_44` IS NULL) THEN 7.77306733167 ELSE `ADS`.`Feature_44` END AS impter_46, CASE WHEN (`ADS`.`Feature_45` IS NULL) THEN 8.29592684954 ELSE `ADS`.`Feature_45` END AS impter_47, CASE WHEN (`ADS`.`Feature_46` IS NULL) THEN 3.38819617623 ELSE `ADS`.`Feature_46` END AS impter_48, CASE WHEN (`ADS`.`Feature_47` IS NULL) THEN 0.0365752285952 ELSE `ADS`.`Feature_47` END AS impter_49, CASE WHEN (`ADS`.`Feature_48` IS NULL) THEN 0.00332502078138 ELSE `ADS`.`Feature_48` END AS impter_50, CASE WHEN (`ADS`.`Feature_49` IS NULL) THEN 0.715710723192 ELSE `ADS`.`Feature_49` END AS impter_51, CASE WHEN (`ADS`.`Feature_50` IS NULL) THEN 7.47714048213 ELSE `ADS`.`Feature_50` END AS impter_52, CASE WHEN (`ADS`.`Feature_51` IS NULL) THEN 9.5536159601 ELSE `ADS`.`Feature_51` END AS impter_53, CASE WHEN (`ADS`.`Feature_52` IS NULL) THEN 9.53948462178 ELSE `ADS`.`Feature_52` END AS impter_54, CASE WHEN (`ADS`.`Feature_53` IS NULL) THEN 8.83374896093 ELSE `ADS`.`Feature_53` END AS impter_55, CASE WHEN (`ADS`.`Feature_54` IS NULL) THEN 3.8029925187 ELSE `ADS`.`Feature_54` END AS impter_56, CASE WHEN (`ADS`.`Feature_55` IS NULL) THEN 0.243557772236 ELSE `ADS`.`Feature_55` END AS impter_57, CASE WHEN (`ADS`.`Feature_56` IS NULL) THEN 0.000831255195345 ELSE `ADS`.`Feature_56` END AS impter_58, CASE WHEN (`ADS`.`Feature_57` IS NULL) THEN 0.266832917706 ELSE `ADS`.`Feature_57` END AS impter_59, CASE WHEN (`ADS`.`Feature_58` IS NULL) THEN 5.43059019119 ELSE `ADS`.`Feature_58` END AS impter_60, CASE WHEN (`ADS`.`Feature_59` IS NULL) THEN 12.0864505403 ELSE `ADS`.`Feature_59` END AS impter_61, CASE WHEN (`ADS`.`Feature_60` IS NULL) THEN 11.8719866999 ELSE `ADS`.`Feature_60` END AS impter_62, CASE WHEN (`ADS`.`Feature_61` IS NULL) THEN 6.74812967581 ELSE `ADS`.`Feature_61` END AS impter_63, CASE WHEN (`ADS`.`Feature_62` IS NULL) THEN 2.15128844555 ELSE `ADS`.`Feature_62` END AS impter_64, CASE WHEN (`ADS`.`Feature_63` IS NULL) THEN 0.412302576891 ELSE `ADS`.`Feature_63` END AS impter_65 
FROM digits AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 0.0) / 1.0 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 0.293433083957) / 0.859845005927 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 5.07398171239) / 4.71696110342 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 11.8204488778) / 4.22115333284 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 11.8071487947) / 4.33559553334 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 5.80881130507) / 5.69478817014 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - 1.38570241064) / 3.36514752375 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 0.131338320865) / 1.03602946954 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.00581878636741) / 0.0954460521656 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 1.96674979219) / 3.17914416142 AS scaler_11, (CAST(`ADS_imp_1_OUT`.impter_12 AS DOUBLE) - 10.3283458022) / 5.41167293882 AS scaler_12, (CAST(`ADS_imp_1_OUT`.impter_13 AS DOUBLE) - 12.0656691604) / 3.94979003791 AS scaler_13, (CAST(`ADS_imp_1_OUT`.impter_14 AS DOUBLE) - 10.1853699086) / 4.76650673546 AS scaler_14, (CAST(`ADS_imp_1_OUT`.impter_15 AS DOUBLE) - 8.04156275977) / 6.0876066041 AS scaler_15, (CAST(`ADS_imp_1_OUT`.impter_16 AS DOUBLE) - 1.90191188695) / 3.64264316294 AS scaler_16, (CAST(`ADS_imp_1_OUT`.impter_17 AS DOUBLE) - 0.106400665004) / 0.822774695912 AS scaler_17, (CAST(`ADS_imp_1_OUT`.impter_18 AS DOUBLE) - 0.00166251039069) / 0.0407399858848 AS scaler_18, (CAST(`ADS_imp_1_OUT`.impter_19 AS DOUBLE) - 2.5719035744) / 3.56305629928 AS scaler_19, (CAST(`ADS_imp_1_OUT`.impter_20 AS DOUBLE) - 9.99168744805) / 5.64964316504 AS scaler_20, (CAST(`ADS_imp_1_OUT`.impter_21 AS DOUBLE) - 7.13549459684) / 5.81502871188 AS scaler_21, (CAST(`ADS_imp_1_OUT`.impter_22 AS DOUBLE) - 7.04987531172) / 6.15922069493 AS scaler_22, (CAST(`ADS_imp_1_OUT`.impter_23 AS DOUBLE) - 7.6965918537) / 6.25532232413 AS scaler_23, (CAST(`ADS_imp_1_OUT`.impter_24 AS DOUBLE) - 1.87364921031) / 3.41099813777 AS scaler_24, (CAST(`ADS_imp_1_OUT`.impter_25 AS DOUBLE) - 0.0540315876974) / 0.421263533813 AS scaler_25, (CAST(`ADS_imp_1_OUT`.impter_26 AS DOUBLE) - 0.000831255195345) / 0.0288195109283 AS scaler_26, (CAST(`ADS_imp_1_OUT`.impter_27 AS DOUBLE) - 2.5170407315) / 3.19163503844 AS scaler_27, (CAST(`ADS_imp_1_OUT`.impter_28 AS DOUBLE) - 9.19950124688) / 6.15403007807 AS scaler_28, (CAST(`ADS_imp_1_OUT`.impter_29 AS DOUBLE) - 9.02244389027) / 5.83981191231 AS scaler_29, (CAST(`ADS_imp_1_OUT`.impter_30 AS DOUBLE) - 9.99418121363) / 6.10390491835 AS scaler_30, (CAST(`ADS_imp_1_OUT`.impter_31 AS DOUBLE) - 7.60432252702) / 5.91977802282 AS scaler_31, (CAST(`ADS_imp_1_OUT`.impter_32 AS DOUBLE) - 2.35245220283) / 3.79378678582 AS scaler_32, (CAST(`ADS_imp_1_OUT`.impter_33 AS DOUBLE) - 0.000831255195345) / 0.0288195109283 AS scaler_33, (CAST(`ADS_imp_1_OUT`.impter_34 AS DOUBLE) - 0.0) / 1.0 AS scaler_34, (CAST(`ADS_imp_1_OUT`.impter_35 AS DOUBLE) - 2.29925187032) / 3.51156139729 AS scaler_35, (CAST(`ADS_imp_1_OUT`.impter_36 AS DOUBLE) - 7.56691604323) / 6.31701730353 AS scaler_36, (CAST(`ADS_imp_1_OUT`.impter_37 AS DOUBLE) - 9.1604322527) / 6.1997798861 AS scaler_37, (CAST(`ADS_imp_1_OUT`.impter_38 AS DOUBLE) - 10.3674147963) / 5.87749718139 AS scaler_38, (CAST(`ADS_imp_1_OUT`.impter_39 AS DOUBLE) - 8.75727348296) / 5.85464866041 AS scaler_39, (CAST(`ADS_imp_1_OUT`.impter_40 AS DOUBLE) - 2.79966749792) / 3.50284528298 AS scaler_40, (CAST(`ADS_imp_1_OUT`.impter_41 AS DOUBLE) - 0.0) / 1.0 AS scaler_41, (CAST(`ADS_imp_1_OUT`.impter_42 AS DOUBLE) - 0.00997506234414) / 0.162790246582 AS scaler_42, (CAST(`ADS_imp_1_OUT`.impter_43 AS DOUBLE) - 1.55860349127) / 2.98466828413 AS scaler_43, (CAST(`ADS_imp_1_OUT`.impter_44 AS DOUBLE) - 6.83790523691) / 6.54553660728 AS scaler_44, (CAST(`ADS_imp_1_OUT`.impter_45 AS DOUBLE) - 7.30257689111) / 6.44510433727 AS scaler_45, (CAST(`ADS_imp_1_OUT`.impter_46 AS DOUBLE) - 7.77306733167) / 6.2858645059 AS scaler_46, (CAST(`ADS_imp_1_OUT`.impter_47 AS DOUBLE) - 8.29592684954) / 5.69877340506 AS scaler_47, (CAST(`ADS_imp_1_OUT`.impter_48 AS DOUBLE) - 3.38819617623) / 4.31911912467 AS scaler_48, (CAST(`ADS_imp_1_OUT`.impter_49 AS DOUBLE) - 0.0365752285952) / 0.362854080738 AS scaler_49, (CAST(`ADS_imp_1_OUT`.impter_50 AS DOUBLE) - 0.00332502078138) / 0.0911125468322 AS scaler_50, (CAST(`ADS_imp_1_OUT`.impter_51 AS DOUBLE) - 0.715710723192) / 1.75156338368 AS scaler_51, (CAST(`ADS_imp_1_OUT`.impter_52 AS DOUBLE) - 7.47714048213) / 5.70412935863 AS scaler_52, (CAST(`ADS_imp_1_OUT`.impter_53 AS DOUBLE) - 9.5536159601) / 5.24014268924 AS scaler_53, (CAST(`ADS_imp_1_OUT`.impter_54 AS DOUBLE) - 9.53948462178) / 5.28717094725 AS scaler_54, (CAST(`ADS_imp_1_OUT`.impter_55 AS DOUBLE) - 8.83374896093) / 6.03665375205 AS scaler_55, (CAST(`ADS_imp_1_OUT`.impter_56 AS DOUBLE) - 3.8029925187) / 4.99145647696 AS scaler_56, (CAST(`ADS_imp_1_OUT`.impter_57 AS DOUBLE) - 0.243557772236) / 1.08937190592 AS scaler_57, (CAST(`ADS_imp_1_OUT`.impter_58 AS DOUBLE) - 0.000831255195345) / 0.0288195109283 AS scaler_58, (CAST(`ADS_imp_1_OUT`.impter_59 AS DOUBLE) - 0.266832917706) / 0.887404536173 AS scaler_59, (CAST(`ADS_imp_1_OUT`.impter_60 AS DOUBLE) - 5.43059019119) / 5.07966086609 AS scaler_60, (CAST(`ADS_imp_1_OUT`.impter_61 AS DOUBLE) - 12.0864505403) / 4.32751151319 AS scaler_61, (CAST(`ADS_imp_1_OUT`.impter_62 AS DOUBLE) - 11.8719866999) / 4.84971877494 AS scaler_62, (CAST(`ADS_imp_1_OUT`.impter_63 AS DOUBLE) - 6.74812967581) / 5.89691744232 AS scaler_63, (CAST(`ADS_imp_1_OUT`.impter_64 AS DOUBLE) - 2.15128844555) / 4.1936167999 AS scaler_64, (CAST(`ADS_imp_1_OUT`.impter_65 AS DOUBLE) - 0.412302576891) / 1.98487588299 AS scaler_65 
FROM `ADS_imp_1_OUT`), 
`IL` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, `ADS_sca_2_OUT`.scaler_2 AS scaler_2, `ADS_sca_2_OUT`.scaler_3 AS scaler_3, `ADS_sca_2_OUT`.scaler_4 AS scaler_4, `ADS_sca_2_OUT`.scaler_5 AS scaler_5, `ADS_sca_2_OUT`.scaler_6 AS scaler_6, `ADS_sca_2_OUT`.scaler_7 AS scaler_7, `ADS_sca_2_OUT`.scaler_8 AS scaler_8, `ADS_sca_2_OUT`.scaler_9 AS scaler_9, `ADS_sca_2_OUT`.scaler_10 AS scaler_10, `ADS_sca_2_OUT`.scaler_11 AS scaler_11, `ADS_sca_2_OUT`.scaler_12 AS scaler_12, `ADS_sca_2_OUT`.scaler_13 AS scaler_13, `ADS_sca_2_OUT`.scaler_14 AS scaler_14, `ADS_sca_2_OUT`.scaler_15 AS scaler_15, `ADS_sca_2_OUT`.scaler_16 AS scaler_16, `ADS_sca_2_OUT`.scaler_17 AS scaler_17, `ADS_sca_2_OUT`.scaler_18 AS scaler_18, `ADS_sca_2_OUT`.scaler_19 AS scaler_19, `ADS_sca_2_OUT`.scaler_20 AS scaler_20, `ADS_sca_2_OUT`.scaler_21 AS scaler_21, `ADS_sca_2_OUT`.scaler_22 AS scaler_22, `ADS_sca_2_OUT`.scaler_23 AS scaler_23, `ADS_sca_2_OUT`.scaler_24 AS scaler_24, `ADS_sca_2_OUT`.scaler_25 AS scaler_25, `ADS_sca_2_OUT`.scaler_26 AS scaler_26, `ADS_sca_2_OUT`.scaler_27 AS scaler_27, `ADS_sca_2_OUT`.scaler_28 AS scaler_28, `ADS_sca_2_OUT`.scaler_29 AS scaler_29, `ADS_sca_2_OUT`.scaler_30 AS scaler_30, `ADS_sca_2_OUT`.scaler_31 AS scaler_31, `ADS_sca_2_OUT`.scaler_32 AS scaler_32, `ADS_sca_2_OUT`.scaler_33 AS scaler_33, `ADS_sca_2_OUT`.scaler_34 AS scaler_34, `ADS_sca_2_OUT`.scaler_35 AS scaler_35, `ADS_sca_2_OUT`.scaler_36 AS scaler_36, `ADS_sca_2_OUT`.scaler_37 AS scaler_37, `ADS_sca_2_OUT`.scaler_38 AS scaler_38, `ADS_sca_2_OUT`.scaler_39 AS scaler_39, `ADS_sca_2_OUT`.scaler_40 AS scaler_40, `ADS_sca_2_OUT`.scaler_41 AS scaler_41, `ADS_sca_2_OUT`.scaler_42 AS scaler_42, `ADS_sca_2_OUT`.scaler_43 AS scaler_43, `ADS_sca_2_OUT`.scaler_44 AS scaler_44, `ADS_sca_2_OUT`.scaler_45 AS scaler_45, `ADS_sca_2_OUT`.scaler_46 AS scaler_46, `ADS_sca_2_OUT`.scaler_47 AS scaler_47, `ADS_sca_2_OUT`.scaler_48 AS scaler_48, `ADS_sca_2_OUT`.scaler_49 AS scaler_49, `ADS_sca_2_OUT`.scaler_50 AS scaler_50, `ADS_sca_2_OUT`.scaler_51 AS scaler_51, `ADS_sca_2_OUT`.scaler_52 AS scaler_52, `ADS_sca_2_OUT`.scaler_53 AS scaler_53, `ADS_sca_2_OUT`.scaler_54 AS scaler_54, `ADS_sca_2_OUT`.scaler_55 AS scaler_55, `ADS_sca_2_OUT`.scaler_56 AS scaler_56, `ADS_sca_2_OUT`.scaler_57 AS scaler_57, `ADS_sca_2_OUT`.scaler_58 AS scaler_58, `ADS_sca_2_OUT`.scaler_59 AS scaler_59, `ADS_sca_2_OUT`.scaler_60 AS scaler_60, `ADS_sca_2_OUT`.scaler_61 AS scaler_61, `ADS_sca_2_OUT`.scaler_62 AS scaler_62, `ADS_sca_2_OUT`.scaler_63 AS scaler_63, `ADS_sca_2_OUT`.scaler_64 AS scaler_64, `ADS_sca_2_OUT`.scaler_65 AS scaler_65 
FROM `ADS_sca_2_OUT`), 
`HL_BA_1` AS 
(SELECT `IL`.`KEY` AS `KEY`, -0.049662233916 * `IL`.scaler_2 + -0.373154921817 * `IL`.scaler_3 + 0.385416035178 * `IL`.scaler_4 + -0.998540269977 * `IL`.scaler_5 + 1.12900840722 * `IL`.scaler_6 + -0.0697183039703 * `IL`.scaler_7 + 0.257651286474 * `IL`.scaler_8 + -1.62001519661 * `IL`.scaler_9 + 0.180810158142 * `IL`.scaler_10 + 0.252296192915 * `IL`.scaler_11 + 0.213604401296 * `IL`.scaler_12 + 1.17784750765 * `IL`.scaler_13 + -1.91447112698 * `IL`.scaler_14 + 1.66829827805 * `IL`.scaler_15 + -0.232668439336 * `IL`.scaler_16 + -1.16482789128 * `IL`.scaler_17 + 0.154803610518 * `IL`.scaler_18 + 0.563320758699 * `IL`.scaler_19 + 0.564796634995 * `IL`.scaler_20 + -0.580638308804 * `IL`.scaler_21 + -0.935295888525 * `IL`.scaler_22 + -1.55285494732 * `IL`.scaler_23 + 0.46794675958 * `IL`.scaler_24 + -0.724565322633 * `IL`.scaler_25 + -0.270384283235 * `IL`.scaler_26 + -0.430995471603 * `IL`.scaler_27 + -0.847757519656 * `IL`.scaler_28 + 1.87717687976 * `IL`.scaler_29 + 0.359901772684 * `IL`.scaler_30 + -0.461416794358 * `IL`.scaler_31 + -2.49471324768 * `IL`.scaler_32 + -0.257938285568 * `IL`.scaler_33 + 0.241422175063 * `IL`.scaler_34 + -0.633256853026 * `IL`.scaler_35 + -1.34914081403 * `IL`.scaler_36 + 2.37609261063 * `IL`.scaler_37 + 0.206250615036 * `IL`.scaler_38 + -1.65088786402 * `IL`.scaler_39 + -1.50829256655 * `IL`.scaler_40 + 0.25317969374 * `IL`.scaler_41 + -0.403113975813 * `IL`.scaler_42 + -0.953386819691 * `IL`.scaler_43 + 1.37116518918 * `IL`.scaler_44 + -3.07706743121 * `IL`.scaler_45 + -0.0705556450287 * `IL`.scaler_46 + 0.831745242966 * `IL`.scaler_47 + 2.06593270788 * `IL`.scaler_48 + 0.998667563617 * `IL`.scaler_49 + -0.34152940395 * `IL`.scaler_50 + -0.458710198923 * `IL`.scaler_51 + 1.31969280478 * `IL`.scaler_52 + -1.05310454892 * `IL`.scaler_53 + -0.586038656165 * `IL`.scaler_54 + 1.31887559024 * `IL`.scaler_55 + 0.843519829156 * `IL`.scaler_56 + -0.184742136903 * `IL`.scaler_57 + 0.00914646386892 * `IL`.scaler_58 + 0.641892643828 * `IL`.scaler_59 + -0.233979772146 * `IL`.scaler_60 + 0.245858849347 * `IL`.scaler_61 + 0.167200571207 * `IL`.scaler_62 + -1.02712428437 * `IL`.scaler_63 + -1.32889494557 * `IL`.scaler_64 + -0.831332387622 * `IL`.scaler_65 + 2.0299180551 AS `NEUR_1_1`, 0.131863953709 * `IL`.scaler_2 + 0.1617588167 * `IL`.scaler_3 + -0.195161414251 * `IL`.scaler_4 + 0.735807964956 * `IL`.scaler_5 + 0.57038125363 * `IL`.scaler_6 + -1.75751789208 * `IL`.scaler_7 + -1.49189154786 * `IL`.scaler_8 + -0.276079631218 * `IL`.scaler_9 + -0.272377414947 * `IL`.scaler_10 + -0.3520989194 * `IL`.scaler_11 + 1.40040915694 * `IL`.scaler_12 + -0.432152813824 * `IL`.scaler_13 + 0.860758745591 * `IL`.scaler_14 + 1.02328875155 * `IL`.scaler_15 + 0.845565107252 * `IL`.scaler_16 + -0.179465919282 * `IL`.scaler_17 + 0.435949271942 * `IL`.scaler_18 + -0.144477938119 * `IL`.scaler_19 + -1.93232342014 * `IL`.scaler_20 + -1.25137996008 * `IL`.scaler_21 + 1.22887380155 * `IL`.scaler_22 + 1.49771409847 * `IL`.scaler_23 + 0.950108042079 * `IL`.scaler_24 + 0.151881212194 * `IL`.scaler_25 + 0.291968821553 * `IL`.scaler_26 + -0.107047902154 * `IL`.scaler_27 + -0.912380322511 * `IL`.scaler_28 + -1.80405013169 * `IL`.scaler_29 + -2.17673985043 * `IL`.scaler_30 + -0.945833858349 * `IL`.scaler_31 + -1.14714019311 * `IL`.scaler_32 + -0.0266280528836 * `IL`.scaler_33 + 0.0440970872918 * `IL`.scaler_34 + -1.19070345334 * `IL`.scaler_35 + 0.124810078375 * `IL`.scaler_36 + -1.98428750281 * `IL`.scaler_37 + 0.20555241129 * `IL`.scaler_38 + -0.824760237559 * `IL`.scaler_39 + -0.416542800815 * `IL`.scaler_40 + 0.126597322632 * `IL`.scaler_41 + -0.238977791056 * `IL`.scaler_42 + 0.667970538491 * `IL`.scaler_43 + -0.483818182525 * `IL`.scaler_44 + -1.92573506932 * `IL`.scaler_45 + -2.50252223814 * `IL`.scaler_46 + -0.940053884543 * `IL`.scaler_47 + 0.00404135092511 * `IL`.scaler_48 + -0.302555863504 * `IL`.scaler_49 + -0.209190547013 * `IL`.scaler_50 + 0.264464857177 * `IL`.scaler_51 + -0.435990954566 * `IL`.scaler_52 + 0.382604578556 * `IL`.scaler_53 + 2.3728426605 * `IL`.scaler_54 + 1.19736866333 * `IL`.scaler_55 + 1.50643762367 * `IL`.scaler_56 + -0.291817979977 * `IL`.scaler_57 + 0.0588653074217 * `IL`.scaler_58 + 0.224848791135 * `IL`.scaler_59 + 0.92469133643 * `IL`.scaler_60 + -0.332207216796 * `IL`.scaler_61 + 0.616646096557 * `IL`.scaler_62 + 0.520931499013 * `IL`.scaler_63 + 1.08432042149 * `IL`.scaler_64 + -0.640314277549 * `IL`.scaler_65 + -0.820060565638 AS `NEUR_1_2`, -0.299180966714 * `IL`.scaler_2 + -1.16622338491 * `IL`.scaler_3 + -1.20847420733 * `IL`.scaler_4 + -0.942638538068 * `IL`.scaler_5 + -0.603237741792 * `IL`.scaler_6 + -1.82801434688 * `IL`.scaler_7 + -1.60021382101 * `IL`.scaler_8 + 0.811140845716 * `IL`.scaler_9 + -0.129727559602 * `IL`.scaler_10 + -1.46315277572 * `IL`.scaler_11 + -0.135705591658 * `IL`.scaler_12 + -1.04515217771 * `IL`.scaler_13 + -0.288453897054 * `IL`.scaler_14 + -1.58702717273 * `IL`.scaler_15 + -0.53654889355 * `IL`.scaler_16 + -0.040121807955 * `IL`.scaler_17 + -0.20825512837 * `IL`.scaler_18 + 0.170345193186 * `IL`.scaler_19 + -0.0801307937091 * `IL`.scaler_20 + -0.268565569414 * `IL`.scaler_21 + -2.63608713823 * `IL`.scaler_22 + -0.738327942616 * `IL`.scaler_23 + 0.646278152175 * `IL`.scaler_24 + -0.0548066341215 * `IL`.scaler_25 + -0.363404642025 * `IL`.scaler_26 + 1.05963529809 * `IL`.scaler_27 + 0.557323352438 * `IL`.scaler_28 + -0.642294204444 * `IL`.scaler_29 + -1.24150608767 * `IL`.scaler_30 + -1.12757568227 * `IL`.scaler_31 + 1.45359560339 * `IL`.scaler_32 + 0.676016047651 * `IL`.scaler_33 + -0.297531532511 * `IL`.scaler_34 + 1.11135308543 * `IL`.scaler_35 + 1.11419171521 * `IL`.scaler_36 + -0.747069212046 * `IL`.scaler_37 + -1.09704280685 * `IL`.scaler_38 + 2.12161477665 * `IL`.scaler_39 + 1.03142022031 * `IL`.scaler_40 + -0.224873393346 * `IL`.scaler_41 + 0.210537865235 * `IL`.scaler_42 + 0.191258882772 * `IL`.scaler_43 + 1.18025089725 * `IL`.scaler_44 + 0.83050944953 * `IL`.scaler_45 + 1.44682933677 * `IL`.scaler_46 + -0.642615198771 * `IL`.scaler_47 + 1.21229115509 * `IL`.scaler_48 + 0.961997525618 * `IL`.scaler_49 + -0.000217164027919 * `IL`.scaler_50 + 0.241457226497 * `IL`.scaler_51 + 1.60824339694 * `IL`.scaler_52 + 0.133132959943 * `IL`.scaler_53 + -0.1324648809 * `IL`.scaler_54 + 0.324721881405 * `IL`.scaler_55 + -0.349247949931 * `IL`.scaler_56 + -0.684929949056 * `IL`.scaler_57 + -0.0531852125496 * `IL`.scaler_58 + 0.298713167123 * `IL`.scaler_59 + -0.65935773651 * `IL`.scaler_60 + -0.812685444823 * `IL`.scaler_61 + 0.912570587376 * `IL`.scaler_62 + 0.0632978020187 * `IL`.scaler_63 + -0.233740749001 * `IL`.scaler_64 + -1.32455764614 * `IL`.scaler_65 + -1.70171181596 AS `NEUR_1_3` 
FROM `IL`), 
`HL_1_relu` AS 
(SELECT `HL_BA_1`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_1`.`NEUR_1_1` >= 0.0) THEN `HL_BA_1`.`NEUR_1_1` ELSE 0.0 END AS `NEUR_1_1`, CASE WHEN (`HL_BA_1`.`NEUR_1_2` >= 0.0) THEN `HL_BA_1`.`NEUR_1_2` ELSE 0.0 END AS `NEUR_1_2`, CASE WHEN (`HL_BA_1`.`NEUR_1_3` >= 0.0) THEN `HL_BA_1`.`NEUR_1_3` ELSE 0.0 END AS `NEUR_1_3` 
FROM `HL_BA_1`), 
`HL_BA_2` AS 
(SELECT `HL_1_relu`.`KEY` AS `KEY`, 0.676702024027 * `HL_1_relu`.`NEUR_1_1` + 0.933016742425 * `HL_1_relu`.`NEUR_1_2` + -0.990569717984 * `HL_1_relu`.`NEUR_1_3` + -2.73175716995 AS `NEUR_2_1`, -2.74711167423 * `HL_1_relu`.`NEUR_1_1` + -0.00167070824427 * `HL_1_relu`.`NEUR_1_2` + 1.19263440926 * `HL_1_relu`.`NEUR_1_3` + 0.901280760212 AS `NEUR_2_2`, 0.0448410850912 * `HL_1_relu`.`NEUR_1_1` + 0.551018491693 * `HL_1_relu`.`NEUR_1_2` + 1.96086480738 * `HL_1_relu`.`NEUR_1_3` + -1.05281534619 AS `NEUR_2_3`, -1.07781415217 * `HL_1_relu`.`NEUR_1_1` + -2.27336175963 * `HL_1_relu`.`NEUR_1_2` + 1.70159704346 * `HL_1_relu`.`NEUR_1_3` + -2.19181785814 AS `NEUR_2_4`, 0.509094183376 * `HL_1_relu`.`NEUR_1_1` + -1.55234821058 * `HL_1_relu`.`NEUR_1_2` + 1.85207015011 * `HL_1_relu`.`NEUR_1_3` + -0.760021753329 AS `NEUR_2_5` 
FROM `HL_1_relu`), 
`HL_2_relu` AS 
(SELECT `HL_BA_2`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_2`.`NEUR_2_1` >= 0.0) THEN `HL_BA_2`.`NEUR_2_1` ELSE 0.0 END AS `NEUR_2_1`, CASE WHEN (`HL_BA_2`.`NEUR_2_2` >= 0.0) THEN `HL_BA_2`.`NEUR_2_2` ELSE 0.0 END AS `NEUR_2_2`, CASE WHEN (`HL_BA_2`.`NEUR_2_3` >= 0.0) THEN `HL_BA_2`.`NEUR_2_3` ELSE 0.0 END AS `NEUR_2_3`, CASE WHEN (`HL_BA_2`.`NEUR_2_4` >= 0.0) THEN `HL_BA_2`.`NEUR_2_4` ELSE 0.0 END AS `NEUR_2_4`, CASE WHEN (`HL_BA_2`.`NEUR_2_5` >= 0.0) THEN `HL_BA_2`.`NEUR_2_5` ELSE 0.0 END AS `NEUR_2_5` 
FROM `HL_BA_2`), 
`OL_BA` AS 
(SELECT `HL_2_relu`.`KEY` AS `KEY`, -1.97883454291 * `HL_2_relu`.`NEUR_2_1` + 0.503262073004 * `HL_2_relu`.`NEUR_2_2` + 2.04487746126 * `HL_2_relu`.`NEUR_2_3` + 0.152604844862 * `HL_2_relu`.`NEUR_2_4` + -0.286818667496 * `HL_2_relu`.`NEUR_2_5` + -2.6828805707 AS `NEUR_3_1`, -0.485928189415 * `HL_2_relu`.`NEUR_2_1` + -1.42116995853 * `HL_2_relu`.`NEUR_2_2` + 0.274633055632 * `HL_2_relu`.`NEUR_2_3` + -1.08964961038 * `HL_2_relu`.`NEUR_2_4` + -2.24097293534 * `HL_2_relu`.`NEUR_2_5` + 5.44257633504 AS `NEUR_3_2`, 1.56413224545 * `HL_2_relu`.`NEUR_2_1` + 2.54164900557 * `HL_2_relu`.`NEUR_2_2` + 0.553878977363 * `HL_2_relu`.`NEUR_2_3` + -0.192040342764 * `HL_2_relu`.`NEUR_2_4` + -1.73241058854 * `HL_2_relu`.`NEUR_2_5` + -1.7948537208 AS `NEUR_3_3`, 1.89279312092 * `HL_2_relu`.`NEUR_2_1` + -0.724431793875 * `HL_2_relu`.`NEUR_2_2` + 0.296893452936 * `HL_2_relu`.`NEUR_2_3` + -0.0897492406303 * `HL_2_relu`.`NEUR_2_4` + -0.0121701216933 * `HL_2_relu`.`NEUR_2_5` + -4.31443880112 AS `NEUR_3_4`, -0.829116142232 * `HL_2_relu`.`NEUR_2_1` + 1.41110267012 * `HL_2_relu`.`NEUR_2_2` + -1.33337477608 * `HL_2_relu`.`NEUR_2_3` + 2.19955803267 * `HL_2_relu`.`NEUR_2_4` + 0.883261345017 * `HL_2_relu`.`NEUR_2_5` + -0.116452903861 AS `NEUR_3_5`, 0.66711588111 * `HL_2_relu`.`NEUR_2_1` + 0.575626534929 * `HL_2_relu`.`NEUR_2_2` + -0.742701085806 * `HL_2_relu`.`NEUR_2_3` + 0.159020656138 * `HL_2_relu`.`NEUR_2_4` + 2.09293973052 * `HL_2_relu`.`NEUR_2_5` + 0.441006566569 AS `NEUR_3_6`, -1.90523959953 * `HL_2_relu`.`NEUR_2_1` + -1.2993138613 * `HL_2_relu`.`NEUR_2_2` + 0.36640037425 * `HL_2_relu`.`NEUR_2_3` + 1.41935496123 * `HL_2_relu`.`NEUR_2_4` + 1.5627124297 * `HL_2_relu`.`NEUR_2_5` + -2.50766785395 AS `NEUR_3_7`, -1.92664816533 * `HL_2_relu`.`NEUR_2_1` + 3.35822431799 * `HL_2_relu`.`NEUR_2_2` + -0.411088668044 * `HL_2_relu`.`NEUR_2_3` + -1.39347044939 * `HL_2_relu`.`NEUR_2_4` + 0.395098121063 * `HL_2_relu`.`NEUR_2_5` + 1.5884438383 AS `NEUR_3_8`, 1.0181975559 * `HL_2_relu`.`NEUR_2_1` + -0.300702572531 * `HL_2_relu`.`NEUR_2_2` + -1.70472428653 * `HL_2_relu`.`NEUR_2_3` + -0.208279219239 * `HL_2_relu`.`NEUR_2_4` + 1.79023832243 * `HL_2_relu`.`NEUR_2_5` + 0.371516715407 AS `NEUR_3_9`, 0.858750829631 * `HL_2_relu`.`NEUR_2_1` + -2.45359261754 * `HL_2_relu`.`NEUR_2_2` + 0.917155537578 * `HL_2_relu`.`NEUR_2_3` + -0.178115197256 * `HL_2_relu`.`NEUR_2_4` + -0.13711957579 * `HL_2_relu`.`NEUR_2_5` + 3.55009592915 AS `NEUR_3_10` 
FROM `HL_2_relu`), 
`OL_softmax` AS 
(SELECT `OL_BA`.`KEY` AS `KEY`, `OL_BA`.`NEUR_3_1` AS `NEUR_3_1`, `OL_BA`.`NEUR_3_2` AS `NEUR_3_2`, `OL_BA`.`NEUR_3_3` AS `NEUR_3_3`, `OL_BA`.`NEUR_3_4` AS `NEUR_3_4`, `OL_BA`.`NEUR_3_5` AS `NEUR_3_5`, `OL_BA`.`NEUR_3_6` AS `NEUR_3_6`, `OL_BA`.`NEUR_3_7` AS `NEUR_3_7`, `OL_BA`.`NEUR_3_8` AS `NEUR_3_8`, `OL_BA`.`NEUR_3_9` AS `NEUR_3_9`, `OL_BA`.`NEUR_3_10` AS `NEUR_3_10` 
FROM `OL_BA`), 
orig_cte AS 
(SELECT `OL_softmax`.`KEY` AS `KEY`, `OL_softmax`.`NEUR_3_1` AS `Score_0`, `OL_softmax`.`NEUR_3_2` AS `Score_1`, `OL_softmax`.`NEUR_3_3` AS `Score_2`, `OL_softmax`.`NEUR_3_4` AS `Score_3`, `OL_softmax`.`NEUR_3_5` AS `Score_4`, `OL_softmax`.`NEUR_3_6` AS `Score_5`, `OL_softmax`.`NEUR_3_7` AS `Score_6`, `OL_softmax`.`NEUR_3_8` AS `Score_7`, `OL_softmax`.`NEUR_3_9` AS `Score_8`, `OL_softmax`.`NEUR_3_10` AS `Score_9`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `Proba_2`, NULL AS `Proba_3`, NULL AS `Proba_4`, NULL AS `Proba_5`, NULL AS `Proba_6`, NULL AS `Proba_7`, NULL AS `Proba_8`, NULL AS `Proba_9`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `LogProba_2`, NULL AS `LogProba_3`, NULL AS `LogProba_4`, NULL AS `LogProba_5`, NULL AS `LogProba_6`, NULL AS `LogProba_7`, NULL AS `LogProba_8`, NULL AS `LogProba_9`, NULL AS `Decision` 
FROM `OL_softmax`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 4 AS class, orig_cte.`LogProba_4` AS `LogProba`, orig_cte.`Proba_4` AS `Proba`, orig_cte.`Score_4` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 5 AS class, orig_cte.`LogProba_5` AS `LogProba`, orig_cte.`Proba_5` AS `Proba`, orig_cte.`Score_5` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 6 AS class, orig_cte.`LogProba_6` AS `LogProba`, orig_cte.`Proba_6` AS `Proba`, orig_cte.`Score_6` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 7 AS class, orig_cte.`LogProba_7` AS `LogProba`, orig_cte.`Proba_7` AS `Proba`, orig_cte.`Score_7` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 8 AS class, orig_cte.`LogProba_8` AS `LogProba`, orig_cte.`Proba_8` AS `Proba`, orig_cte.`Score_8` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 9 AS class, orig_cte.`LogProba_9` AS `LogProba`, orig_cte.`Proba_9` AS `Proba`, orig_cte.`Score_9` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Score_4` AS `Score_4`, orig_cte.`Score_5` AS `Score_5`, orig_cte.`Score_6` AS `Score_6`, orig_cte.`Score_7` AS `Score_7`, orig_cte.`Score_8` AS `Score_8`, orig_cte.`Score_9` AS `Score_9`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`Proba_4` AS `Proba_4`, orig_cte.`Proba_5` AS `Proba_5`, orig_cte.`Proba_6` AS `Proba_6`, orig_cte.`Proba_7` AS `Proba_7`, orig_cte.`Proba_8` AS `Proba_8`, orig_cte.`Proba_9` AS `Proba_9`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`LogProba_4` AS `LogProba_4`, orig_cte.`LogProba_5` AS `LogProba_5`, orig_cte.`LogProba_6` AS `LogProba_6`, orig_cte.`LogProba_7` AS `LogProba_7`, orig_cte.`LogProba_8` AS `LogProba_8`, orig_cte.`LogProba_9` AS `LogProba_9`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2`, exp(score_max.`Score_3` - score_max.`max_Score`) AS `exp_delta_Score_3`, exp(score_max.`Score_4` - score_max.`max_Score`) AS `exp_delta_Score_4`, exp(score_max.`Score_5` - score_max.`max_Score`) AS `exp_delta_Score_5`, exp(score_max.`Score_6` - score_max.`max_Score`) AS `exp_delta_Score_6`, exp(score_max.`Score_7` - score_max.`max_Score`) AS `exp_delta_Score_7`, exp(score_max.`Score_8` - score_max.`max_Score`) AS `exp_delta_Score_8`, exp(score_max.`Score_9` - score_max.`max_Score`) AS `exp_delta_Score_9` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 2 AS class, score_soft_max_comp.`LogProba_2` AS `LogProba`, score_soft_max_comp.`Proba_2` AS `Proba`, score_soft_max_comp.`Score_2` AS `Score`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 3 AS class, score_soft_max_comp.`LogProba_3` AS `LogProba`, score_soft_max_comp.`Proba_3` AS `Proba`, score_soft_max_comp.`Score_3` AS `Score`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 4 AS class, score_soft_max_comp.`LogProba_4` AS `LogProba`, score_soft_max_comp.`Proba_4` AS `Proba`, score_soft_max_comp.`Score_4` AS `Score`, score_soft_max_comp.`exp_delta_Score_4` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 5 AS class, score_soft_max_comp.`LogProba_5` AS `LogProba`, score_soft_max_comp.`Proba_5` AS `Proba`, score_soft_max_comp.`Score_5` AS `Score`, score_soft_max_comp.`exp_delta_Score_5` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 6 AS class, score_soft_max_comp.`LogProba_6` AS `LogProba`, score_soft_max_comp.`Proba_6` AS `Proba`, score_soft_max_comp.`Score_6` AS `Score`, score_soft_max_comp.`exp_delta_Score_6` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 7 AS class, score_soft_max_comp.`LogProba_7` AS `LogProba`, score_soft_max_comp.`Proba_7` AS `Proba`, score_soft_max_comp.`Score_7` AS `Score`, score_soft_max_comp.`exp_delta_Score_7` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 8 AS class, score_soft_max_comp.`LogProba_8` AS `LogProba`, score_soft_max_comp.`Proba_8` AS `Proba`, score_soft_max_comp.`Score_8` AS `Score`, score_soft_max_comp.`exp_delta_Score_8` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 9 AS class, score_soft_max_comp.`LogProba_9` AS `LogProba`, score_soft_max_comp.`Proba_9` AS `Proba`, score_soft_max_comp.`Score_9` AS `Score`, score_soft_max_comp.`exp_delta_Score_9` AS `exp_delta_Score` 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Score_2` AS `Score_2`, score_soft_max_comp.`Score_3` AS `Score_3`, score_soft_max_comp.`Score_4` AS `Score_4`, score_soft_max_comp.`Score_5` AS `Score_5`, score_soft_max_comp.`Score_6` AS `Score_6`, score_soft_max_comp.`Score_7` AS `Score_7`, score_soft_max_comp.`Score_8` AS `Score_8`, score_soft_max_comp.`Score_9` AS `Score_9`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`Proba_2` AS `Proba_2`, score_soft_max_comp.`Proba_3` AS `Proba_3`, score_soft_max_comp.`Proba_4` AS `Proba_4`, score_soft_max_comp.`Proba_5` AS `Proba_5`, score_soft_max_comp.`Proba_6` AS `Proba_6`, score_soft_max_comp.`Proba_7` AS `Proba_7`, score_soft_max_comp.`Proba_8` AS `Proba_8`, score_soft_max_comp.`Proba_9` AS `Proba_9`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`LogProba_2` AS `LogProba_2`, score_soft_max_comp.`LogProba_3` AS `LogProba_3`, score_soft_max_comp.`LogProba_4` AS `LogProba_4`, score_soft_max_comp.`LogProba_5` AS `LogProba_5`, score_soft_max_comp.`LogProba_6` AS `LogProba_6`, score_soft_max_comp.`LogProba_7` AS `LogProba_7`, score_soft_max_comp.`LogProba_8` AS `LogProba_8`, score_soft_max_comp.`LogProba_9` AS `LogProba_9`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max_comp.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max_comp.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max_comp.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max_comp.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max_comp.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max_comp.`exp_delta_Score_9` AS `exp_delta_Score_9`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Score_4` AS `Score_4`, score_soft_max.`Score_5` AS `Score_5`, score_soft_max.`Score_6` AS `Score_6`, score_soft_max.`Score_7` AS `Score_7`, score_soft_max.`Score_8` AS `Score_8`, score_soft_max.`Score_9` AS `Score_9`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`Proba_4` AS `Proba_4`, score_soft_max.`Proba_5` AS `Proba_5`, score_soft_max.`Proba_6` AS `Proba_6`, score_soft_max.`Proba_7` AS `Proba_7`, score_soft_max.`Proba_8` AS `Proba_8`, score_soft_max.`Proba_9` AS `Proba_9`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`LogProba_4` AS `LogProba_4`, score_soft_max.`LogProba_5` AS `LogProba_5`, score_soft_max.`LogProba_6` AS `LogProba_6`, score_soft_max.`LogProba_7` AS `LogProba_7`, score_soft_max.`LogProba_8` AS `LogProba_8`, score_soft_max.`LogProba_9` AS `LogProba_9`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max.`exp_delta_Score_9` AS `exp_delta_Score_9`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3`, score_soft_max.`exp_delta_Score_4` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_4`, score_soft_max.`exp_delta_Score_5` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_5`, score_soft_max.`exp_delta_Score_6` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_6`, score_soft_max.`exp_delta_Score_7` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_7`, score_soft_max.`exp_delta_Score_8` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_8`, score_soft_max.`exp_delta_Score_9` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_9` 
FROM score_soft_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, NULL AS `Score_3`, NULL AS `Score_4`, NULL AS `Score_5`, NULL AS `Score_6`, NULL AS `Score_7`, NULL AS `Score_8`, NULL AS `Score_9`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, arg_max_cte.`SoftProba_4` AS `Proba_4`, arg_max_cte.`SoftProba_5` AS `Proba_5`, arg_max_cte.`SoftProba_6` AS `Proba_6`, arg_max_cte.`SoftProba_7` AS `Proba_7`, arg_max_cte.`SoftProba_8` AS `Proba_8`, arg_max_cte.`SoftProba_9` AS `Proba_9`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (arg_max_cte.`SoftProba_4` IS NULL OR arg_max_cte.`SoftProba_4` > 0.0) THEN ln(arg_max_cte.`SoftProba_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (arg_max_cte.`SoftProba_5` IS NULL OR arg_max_cte.`SoftProba_5` > 0.0) THEN ln(arg_max_cte.`SoftProba_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (arg_max_cte.`SoftProba_6` IS NULL OR arg_max_cte.`SoftProba_6` > 0.0) THEN ln(arg_max_cte.`SoftProba_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (arg_max_cte.`SoftProba_7` IS NULL OR arg_max_cte.`SoftProba_7` > 0.0) THEN ln(arg_max_cte.`SoftProba_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (arg_max_cte.`SoftProba_8` IS NULL OR arg_max_cte.`SoftProba_8` > 0.0) THEN ln(arg_max_cte.`SoftProba_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (arg_max_cte.`SoftProba_9` IS NULL OR arg_max_cte.`SoftProba_9` > 0.0) THEN ln(arg_max_cte.`SoftProba_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM arg_max_cte