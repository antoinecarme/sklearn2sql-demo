-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9" 
FROM "RandomReg_10" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -7.27594928979 * "IL"."Feature_0" + -8.45584551255 * "IL"."Feature_1" + -9.17933973573 * "IL"."Feature_2" + -4.46443168844 * "IL"."Feature_3" + -8.9670279363 * "IL"."Feature_4" + -2.10812495902 * "IL"."Feature_5" + -7.06160152221 * "IL"."Feature_6" + -3.5797698305 * "IL"."Feature_7" + -6.66598783254 * "IL"."Feature_8" + -7.55324890935 * "IL"."Feature_9" + 4.14448994429 AS "NEUR_1_1", 4.46307891215 * "IL"."Feature_0" + 5.12752118443 * "IL"."Feature_1" + 5.5483306315 * "IL"."Feature_2" + 2.75070478527 * "IL"."Feature_3" + 5.2243942098 * "IL"."Feature_4" + 1.28673101797 * "IL"."Feature_5" + 4.34568739492 * "IL"."Feature_6" + 2.04263663835 * "IL"."Feature_7" + 3.93867448446 * "IL"."Feature_8" + 4.58901305447 * "IL"."Feature_9" + -0.888836869159 AS "NEUR_1_2", 1.33881183601 * "IL"."Feature_0" + 2.34904653337 * "IL"."Feature_1" + 2.79072949459 * "IL"."Feature_2" + 0.661554941653 * "IL"."Feature_3" + 5.2987678703 * "IL"."Feature_4" + 0.476540367159 * "IL"."Feature_5" + 1.14536025252 * "IL"."Feature_6" + 2.69912557314 * "IL"."Feature_7" + 3.21662687958 * "IL"."Feature_8" + 2.0046688311 * "IL"."Feature_9" + 3.60269653669 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.109432338611 * "HL_1_relu"."NEUR_1_1" + -2.69629195221 * "HL_1_relu"."NEUR_1_2" + -1.02919864931 * "HL_1_relu"."NEUR_1_3" + -0.291501999913 AS "NEUR_2_1", -0.763196896394 * "HL_1_relu"."NEUR_1_1" + -1.88780180958 * "HL_1_relu"."NEUR_1_2" + -3.15193340519 * "HL_1_relu"."NEUR_1_3" + -0.17944595086 AS "NEUR_2_2", -4.41897089942 * "HL_1_relu"."NEUR_1_1" + 3.02924279184 * "HL_1_relu"."NEUR_1_2" + 0.227894347367 * "HL_1_relu"."NEUR_1_3" + -2.91220831338 AS "NEUR_2_3", -0.170769225131 * "HL_1_relu"."NEUR_1_1" + -0.244615764812 * "HL_1_relu"."NEUR_1_2" + -0.554324961767 * "HL_1_relu"."NEUR_1_3" + -0.0869250211373 AS "NEUR_2_4", 6.00254128819 * "HL_1_relu"."NEUR_1_1" + -0.8064141651 * "HL_1_relu"."NEUR_1_2" + 0.00955949652519 * "HL_1_relu"."NEUR_1_3" + -9.76354198121 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 0.520848897165 * "HL_2_relu"."NEUR_2_1" + -0.583086142184 * "HL_2_relu"."NEUR_2_2" + 5.52081561645 * "HL_2_relu"."NEUR_2_3" + -0.23198487893 * "HL_2_relu"."NEUR_2_4" + -1.7480943957 * "HL_2_relu"."NEUR_2_5" + 26.4445293394 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"