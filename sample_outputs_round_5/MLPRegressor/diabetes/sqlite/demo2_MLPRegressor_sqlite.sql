-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9" 
FROM diabetes AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.0663244904397 * "IL"."Feature_0" + 0.0609842359609 * "IL"."Feature_1" + -0.0848022796333 * "IL"."Feature_2" + -0.158371787484 * "IL"."Feature_3" + 0.0924543513301 * "IL"."Feature_4" + -0.560980806778 * "IL"."Feature_5" + 0.377940596041 * "IL"."Feature_6" + 0.406476440657 * "IL"."Feature_7" + -0.518662914052 * "IL"."Feature_8" + 0.604186074854 * "IL"."Feature_9" + -0.319905927879 AS "NEUR_1_1", 0.236358898688 * "IL"."Feature_0" + -0.088557296629 * "IL"."Feature_1" + 0.443317719731 * "IL"."Feature_2" + 0.277796815007 * "IL"."Feature_3" + 0.540702656704 * "IL"."Feature_4" + -0.641198932798 * "IL"."Feature_5" + 0.475709540502 * "IL"."Feature_6" + -0.0512124541339 * "IL"."Feature_7" + 0.111285911546 * "IL"."Feature_8" + -0.00590952515791 * "IL"."Feature_9" + -0.519593570977 AS "NEUR_1_2", 0.137186205234 * "IL"."Feature_0" + 0.199599997748 * "IL"."Feature_1" + 0.626752322623 * "IL"."Feature_2" + 0.0471376700127 * "IL"."Feature_3" + -0.582257944091 * "IL"."Feature_4" + 0.448008943328 * "IL"."Feature_5" + 0.655622488681 * "IL"."Feature_6" + 0.377688742012 * "IL"."Feature_7" + -0.478043933003 * "IL"."Feature_8" + -0.11630455718 * "IL"."Feature_9" + -0.196310164443 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", 0.118531074788 * "HL_1_relu"."NEUR_1_1" + -0.578910355051 * "HL_1_relu"."NEUR_1_2" + -0.765521719518 * "HL_1_relu"."NEUR_1_3" + -3.31182290647 AS "NEUR_2_1", -0.833480503405 * "HL_1_relu"."NEUR_1_1" + 0.314921991603 * "HL_1_relu"."NEUR_1_2" + 0.288848420227 * "HL_1_relu"."NEUR_1_3" + -0.236059869252 AS "NEUR_2_2", 0.203750654932 * "HL_1_relu"."NEUR_1_1" + -3.93567625396 * "HL_1_relu"."NEUR_1_2" + 0.290631064716 * "HL_1_relu"."NEUR_1_3" + -9.61146641312 AS "NEUR_2_3", 0.19415548442 * "HL_1_relu"."NEUR_1_1" + -0.109063853786 * "HL_1_relu"."NEUR_1_2" + -0.501632112141 * "HL_1_relu"."NEUR_1_3" + -0.106345298191 AS "NEUR_2_4", 0.202535620959 * "HL_1_relu"."NEUR_1_1" + -0.483205806175 * "HL_1_relu"."NEUR_1_2" + -0.634138216859 * "HL_1_relu"."NEUR_1_3" + 2.18272796886 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.70012829011 * "HL_2_relu"."NEUR_2_1" + -0.582246479875 * "HL_2_relu"."NEUR_2_2" + -0.254649142747 * "HL_2_relu"."NEUR_2_3" + 0.306216646757 * "HL_2_relu"."NEUR_2_4" + 41.2726702174 * "HL_2_relu"."NEUR_2_5" + 59.7237990048 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"