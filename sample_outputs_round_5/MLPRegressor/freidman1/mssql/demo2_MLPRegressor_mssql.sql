-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [IL] AS 
(SELECT [ADS].[KEY] AS [KEY], [ADS].[Feature_0] AS [Feature_0], [ADS].[Feature_1] AS [Feature_1], [ADS].[Feature_2] AS [Feature_2], [ADS].[Feature_3] AS [Feature_3], [ADS].[Feature_4] AS [Feature_4], [ADS].[Feature_5] AS [Feature_5], [ADS].[Feature_6] AS [Feature_6], [ADS].[Feature_7] AS [Feature_7], [ADS].[Feature_8] AS [Feature_8], [ADS].[Feature_9] AS [Feature_9] 
FROM freidman1 AS [ADS]), 
[HL_BA_1] AS 
(SELECT [IL].[KEY] AS [KEY], -0.637270998829 * [IL].[Feature_0] + -0.0590512983163 * [IL].[Feature_1] + -1.4079874455 * [IL].[Feature_2] + -2.33133396027 * [IL].[Feature_3] + -0.438215536084 * [IL].[Feature_4] + -0.855901832098 * [IL].[Feature_5] + -0.402621487669 * [IL].[Feature_6] + -1.34281239607 * [IL].[Feature_7] + 0.294484928342 * [IL].[Feature_8] + -0.0875286104412 * [IL].[Feature_9] + 6.88354038186 AS [NEUR_1_1], -0.680143325715 * [IL].[Feature_0] + -1.04740977046 * [IL].[Feature_1] + -0.144674264815 * [IL].[Feature_2] + -0.657032838102 * [IL].[Feature_3] + -0.468409155473 * [IL].[Feature_4] + -1.21524796283 * [IL].[Feature_5] + -0.362275714415 * [IL].[Feature_6] + -0.898957574599 * [IL].[Feature_7] + -0.877231785273 * [IL].[Feature_8] + -0.91116362585 * [IL].[Feature_9] + -1.46875485067 AS [NEUR_1_2], 4.78541761254 * [IL].[Feature_0] + 6.06570775269 * [IL].[Feature_1] + -1.34068187827 * [IL].[Feature_2] + 4.23375707906 * [IL].[Feature_3] + 3.62821031748 * [IL].[Feature_4] + -2.66440394417 * [IL].[Feature_5] + -1.33811385521 * [IL].[Feature_6] + -1.60105990675 * [IL].[Feature_7] + 1.05304758328 * [IL].[Feature_8] + 1.65410049566 * [IL].[Feature_9] + -1.89696667938 AS [NEUR_1_3] 
FROM [IL]), 
[HL_1_relu] AS 
(SELECT [HL_BA_1].[KEY] AS [KEY], CASE WHEN ([HL_BA_1].[NEUR_1_1] >= 0.0) THEN [HL_BA_1].[NEUR_1_1] ELSE 0.0 END AS [NEUR_1_1], CASE WHEN ([HL_BA_1].[NEUR_1_2] >= 0.0) THEN [HL_BA_1].[NEUR_1_2] ELSE 0.0 END AS [NEUR_1_2], CASE WHEN ([HL_BA_1].[NEUR_1_3] >= 0.0) THEN [HL_BA_1].[NEUR_1_3] ELSE 0.0 END AS [NEUR_1_3] 
FROM [HL_BA_1]), 
[HL_BA_2] AS 
(SELECT [HL_1_relu].[KEY] AS [KEY], -0.0873662528053 * [HL_1_relu].[NEUR_1_1] + -2.50933801606 * [HL_1_relu].[NEUR_1_2] + -1.85028949856 * [HL_1_relu].[NEUR_1_3] + -2.71691502089 AS [NEUR_2_1], -0.959273988985 * [HL_1_relu].[NEUR_1_1] + -2.33885684536 * [HL_1_relu].[NEUR_1_2] + -0.842688964263 * [HL_1_relu].[NEUR_1_3] + -2.23635305441 AS [NEUR_2_2], -0.332499557313 * [HL_1_relu].[NEUR_1_1] + -2.60835335377 * [HL_1_relu].[NEUR_1_2] + -4.42128240979 * [HL_1_relu].[NEUR_1_3] + -4.17353213488 AS [NEUR_2_3], -0.169696355898 * [HL_1_relu].[NEUR_1_1] + -0.109061227683 * [HL_1_relu].[NEUR_1_2] + -0.50162003355 * [HL_1_relu].[NEUR_1_3] + -0.711416259978 AS [NEUR_2_4], 1.7680098029 * [HL_1_relu].[NEUR_1_1] + -1.81845453356 * [HL_1_relu].[NEUR_1_2] + -1.19343580136 * [HL_1_relu].[NEUR_1_3] + 3.92301982894 AS [NEUR_2_5] 
FROM [HL_1_relu]), 
[HL_2_relu] AS 
(SELECT [HL_BA_2].[KEY] AS [KEY], CASE WHEN ([HL_BA_2].[NEUR_2_1] >= 0.0) THEN [HL_BA_2].[NEUR_2_1] ELSE 0.0 END AS [NEUR_2_1], CASE WHEN ([HL_BA_2].[NEUR_2_2] >= 0.0) THEN [HL_BA_2].[NEUR_2_2] ELSE 0.0 END AS [NEUR_2_2], CASE WHEN ([HL_BA_2].[NEUR_2_3] >= 0.0) THEN [HL_BA_2].[NEUR_2_3] ELSE 0.0 END AS [NEUR_2_3], CASE WHEN ([HL_BA_2].[NEUR_2_4] >= 0.0) THEN [HL_BA_2].[NEUR_2_4] ELSE 0.0 END AS [NEUR_2_4], CASE WHEN ([HL_BA_2].[NEUR_2_5] >= 0.0) THEN [HL_BA_2].[NEUR_2_5] ELSE 0.0 END AS [NEUR_2_5] 
FROM [HL_BA_2]), 
[OL_BA] AS 
(SELECT [HL_2_relu].[KEY] AS [KEY], 0.395509038444 * [HL_2_relu].[NEUR_2_1] + 0.423407606727 * [HL_2_relu].[NEUR_2_2] + 0.292597601346 * [HL_2_relu].[NEUR_2_3] + 0.285642912908 * [HL_2_relu].[NEUR_2_4] + -1.37711717852 * [HL_2_relu].[NEUR_2_5] + 19.4382918558 AS [NEUR_3_1] 
FROM [HL_2_relu]), 
[OL_identity] AS 
(SELECT [OL_BA].[KEY] AS [KEY], [OL_BA].[NEUR_3_1] AS [NEUR_3_1] 
FROM [OL_BA])
 SELECT [OL_identity].[KEY] AS [KEY], [OL_identity].[NEUR_3_1] AS [Estimator] 
FROM [OL_identity]