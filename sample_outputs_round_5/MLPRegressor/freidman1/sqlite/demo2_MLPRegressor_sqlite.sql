-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9" 
FROM freidman1 AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.113261288101 * "IL"."Feature_0" + 0.0745097285626 * "IL"."Feature_1" + -0.0396323294704 * "IL"."Feature_2" + -0.132681986658 * "IL"."Feature_3" + 0.124707111239 * "IL"."Feature_4" + -0.56751834505 * "IL"."Feature_5" + 0.415435150242 * "IL"."Feature_6" + 0.43111577645 * "IL"."Feature_7" + -0.485032373929 * "IL"."Feature_8" + 0.630142990824 * "IL"."Feature_9" + -0.265982947428 AS "NEUR_1_1", -0.213424148877 * "IL"."Feature_0" + -0.686630234765 * "IL"."Feature_1" + -0.171885485476 * "IL"."Feature_2" + -0.282557789376 * "IL"."Feature_3" + -0.160256258895 * "IL"."Feature_4" + -1.05835167363 * "IL"."Feature_5" + -0.054154157806 * "IL"."Feature_6" + -0.408395467333 * "IL"."Feature_7" + -0.539959882682 * "IL"."Feature_8" + -0.547484800691 * "IL"."Feature_9" + -0.798632899712 AS "NEUR_1_2", 0.242837821709 * "IL"."Feature_0" + 0.400083839577 * "IL"."Feature_1" + 0.94837230213 * "IL"."Feature_2" + 0.375513105481 * "IL"."Feature_3" + -0.323825982235 * "IL"."Feature_4" + 0.650531629806 * "IL"."Feature_5" + 0.977169810842 * "IL"."Feature_6" + 0.473771532262 * "IL"."Feature_7" + -0.260048288343 * "IL"."Feature_8" + 0.0822538936385 * "IL"."Feature_9" + 0.35019752583 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", 0.0653469443915 * "HL_1_relu"."NEUR_1_1" + -1.14711976219 * "HL_1_relu"."NEUR_1_2" + -1.41515089404 * "HL_1_relu"."NEUR_1_3" + -1.63570613072 AS "NEUR_2_1", -0.900911086892 * "HL_1_relu"."NEUR_1_1" + -1.62104676625 * "HL_1_relu"."NEUR_1_2" + -0.767364210926 * "HL_1_relu"."NEUR_1_3" + -1.71429082078 AS "NEUR_2_2", -0.0355725324502 * "HL_1_relu"."NEUR_1_1" + -1.67553765898 * "HL_1_relu"."NEUR_1_2" + -2.98042904154 * "HL_1_relu"."NEUR_1_3" + -2.41106102223 AS "NEUR_2_3", 0.194155399477 * "HL_1_relu"."NEUR_1_1" + -0.109063806071 * "HL_1_relu"."NEUR_1_2" + -0.501631892676 * "HL_1_relu"."NEUR_1_3" + -0.106345298191 AS "NEUR_2_4", 0.162451046487 * "HL_1_relu"."NEUR_1_1" + -1.06918261334 * "HL_1_relu"."NEUR_1_2" + -1.3407056598 * "HL_1_relu"."NEUR_1_3" + -0.0345611881826 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.0919823897558 * "HL_2_relu"."NEUR_2_1" + 0.293003601377 * "HL_2_relu"."NEUR_2_2" + -0.0771352500932 * "HL_2_relu"."NEUR_2_3" + 0.306216512786 * "HL_2_relu"."NEUR_2_4" + 0.722524679409 * "HL_2_relu"."NEUR_2_5" + 13.7809531626 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"