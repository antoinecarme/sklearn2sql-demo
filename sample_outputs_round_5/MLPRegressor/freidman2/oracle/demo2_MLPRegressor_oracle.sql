-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3" 
FROM freidman2 "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.15938808886 * "IL"."Feature_0" + 0.0353765365142 * "IL"."Feature_1" + 2.45303686649 * "IL"."Feature_2" + -4.32133597523 * "IL"."Feature_3" + 0.141717120877 AS "NEUR_1_1", -1.86116117195 * "IL"."Feature_0" + -7.4489594169 * "IL"."Feature_1" + 0.711429949126 * "IL"."Feature_2" + 0.380001292888 * "IL"."Feature_3" + 0.763590029149 AS "NEUR_1_2", 0.30559494614 * "IL"."Feature_0" + 0.102229884791 * "IL"."Feature_1" + 2.4498883215 * "IL"."Feature_2" + -2.33327179203 * "IL"."Feature_3" + -0.778004819406 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.73042507904 * "HL_1_relu"."NEUR_1_1" + 0.828993022131 * "HL_1_relu"."NEUR_1_2" + 0.191382379663 * "HL_1_relu"."NEUR_1_3" + -0.407646767965 AS "NEUR_2_1", -0.831006107923 * "HL_1_relu"."NEUR_1_1" + 0.518157830092 * "HL_1_relu"."NEUR_1_2" + -0.617730223401 * "HL_1_relu"."NEUR_1_3" + 0.474986683247 AS "NEUR_2_2", 0.725957223308 * "HL_1_relu"."NEUR_1_1" + -0.476306073767 * "HL_1_relu"."NEUR_1_2" + 1.53743384803 * "HL_1_relu"."NEUR_1_3" + -0.0671254353849 AS "NEUR_2_3", 0.757833680972 * "HL_1_relu"."NEUR_1_1" + -0.358015414296 * "HL_1_relu"."NEUR_1_2" + 1.59966593157 * "HL_1_relu"."NEUR_1_3" + 0.131574658738 AS "NEUR_2_4", 0.761793578591 * "HL_1_relu"."NEUR_1_1" + -0.989938135328 * "HL_1_relu"."NEUR_1_2" + 0.481374205919 * "HL_1_relu"."NEUR_1_3" + -0.826960779974 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 0.224096001999 * "HL_2_relu"."NEUR_2_1" + 0.224191444298 * "HL_2_relu"."NEUR_2_2" + 1.87189448604 * "HL_2_relu"."NEUR_2_3" + 1.04512292575 * "HL_2_relu"."NEUR_2_4" + 1.0329349632 * "HL_2_relu"."NEUR_2_5" + -0.267374378011 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"