-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3" 
FROM freidman3 AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.052817018826 * "IL"."Feature_0" + -0.748334123496 * "IL"."Feature_1" + -0.11588840625 * "IL"."Feature_2" + -0.219679222005 * "IL"."Feature_3" + 0.125345983251 AS "NEUR_1_1", 0.214788824047 * "IL"."Feature_0" + -0.445132281099 * "IL"."Feature_1" + 0.724799976014 * "IL"."Feature_2" + 0.521143560735 * "IL"."Feature_3" + 0.786081505055 AS "NEUR_1_2", 0.184495647788 * "IL"."Feature_0" + -0.0569253309628 * "IL"."Feature_1" + 0.839340236484 * "IL"."Feature_2" + 0.217973678289 * "IL"."Feature_3" + -0.75758843342 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.741857831301 * "HL_1_relu"."NEUR_1_1" + 0.819862898976 * "HL_1_relu"."NEUR_1_2" + 0.149627254805 * "HL_1_relu"."NEUR_1_3" + -0.710146017307 AS "NEUR_2_1", -0.830813562193 * "HL_1_relu"."NEUR_1_1" + 0.514364057899 * "HL_1_relu"."NEUR_1_2" + -0.622454994472 * "HL_1_relu"."NEUR_1_3" + 0.867976360903 AS "NEUR_2_2", 0.549230960537 * "HL_1_relu"."NEUR_1_1" + -0.0623808284843 * "HL_1_relu"."NEUR_1_2" + 0.653938103388 * "HL_1_relu"."NEUR_1_3" + 0.0149058905251 AS "NEUR_2_3", 0.380157421049 * "HL_1_relu"."NEUR_1_1" + 0.444007113761 * "HL_1_relu"."NEUR_1_2" + -0.339563894333 * "HL_1_relu"."NEUR_1_3" + 1.10342657458 AS "NEUR_2_4", 0.599201353261 * "HL_1_relu"."NEUR_1_1" + -0.661015452902 * "HL_1_relu"."NEUR_1_2" + -0.28203184462 * "HL_1_relu"."NEUR_1_3" + -0.8338542151 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 0.819022802968 * "HL_2_relu"."NEUR_2_1" + 0.84738674723 * "HL_2_relu"."NEUR_2_2" + 0.0500017233753 * "HL_2_relu"."NEUR_2_3" + 1.16757063163 * "HL_2_relu"."NEUR_2_4" + 0.345792727401 * "HL_2_relu"."NEUR_2_5" + -0.656215316035 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"