-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.52040694462 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.488817916378 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.476660767814 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.474946755464 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.457208905191 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 0.515605000352 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 0.489229141818 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.501541190264 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.530047564906 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.474404746343 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM freidman1 AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 0.52040694462) / 0.277952337281 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 0.488817916378) / 0.263695417862 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 0.476660767814) / 0.287407327172 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.474946755464) / 0.277247380425 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.457208905191) / 0.284960835303 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 0.515605000352) / 0.288908238828 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - 0.489229141818) / 0.273906464646 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 0.501541190264) / 0.303240173732 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.530047564906) / 0.27881629628 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 0.474404746343) / 0.252578507023 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
`IL` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, `ADS_sca_2_OUT`.scaler_2 AS scaler_2, `ADS_sca_2_OUT`.scaler_3 AS scaler_3, `ADS_sca_2_OUT`.scaler_4 AS scaler_4, `ADS_sca_2_OUT`.scaler_5 AS scaler_5, `ADS_sca_2_OUT`.scaler_6 AS scaler_6, `ADS_sca_2_OUT`.scaler_7 AS scaler_7, `ADS_sca_2_OUT`.scaler_8 AS scaler_8, `ADS_sca_2_OUT`.scaler_9 AS scaler_9, `ADS_sca_2_OUT`.scaler_10 AS scaler_10, `ADS_sca_2_OUT`.scaler_11 AS scaler_11 
FROM `ADS_sca_2_OUT`), 
`HL_BA_1` AS 
(SELECT `IL`.`KEY` AS `KEY`, 0.883153831486 * `IL`.scaler_2 + 0.810396262508 * `IL`.scaler_3 + -2.10441553758 * `IL`.scaler_4 + 1.28114986241 * `IL`.scaler_5 + -0.0321557476819 * `IL`.scaler_6 + 0.57945037094 * `IL`.scaler_7 + -0.335746721749 * `IL`.scaler_8 + -0.104466904547 * `IL`.scaler_9 + -0.589412526105 * `IL`.scaler_10 + -0.0146662379787 * `IL`.scaler_11 + 1.57019068861 AS `NEUR_1_1`, 0.456260505565 * `IL`.scaler_2 + 1.04059456366 * `IL`.scaler_3 + 2.07803659103 * `IL`.scaler_4 + 0.558864363137 * `IL`.scaler_5 + 0.83256679133 * `IL`.scaler_6 + -0.700290916746 * `IL`.scaler_7 + -0.239395627949 * `IL`.scaler_8 + -0.199302718823 * `IL`.scaler_9 + 0.00563674776657 * `IL`.scaler_10 + -0.0232025696207 * `IL`.scaler_11 + -0.413672970164 AS `NEUR_1_2`, -2.7466497014 * `IL`.scaler_2 + -0.547301631838 * `IL`.scaler_3 + -0.482747642143 * `IL`.scaler_4 + -1.64270288418 * `IL`.scaler_5 + -2.15161280043 * `IL`.scaler_6 + 0.615582382146 * `IL`.scaler_7 + -0.648303401332 * `IL`.scaler_8 + -0.689784465121 * `IL`.scaler_9 + -1.80437040833 * `IL`.scaler_10 + -0.152536469855 * `IL`.scaler_11 + 0.926451906259 AS `NEUR_1_3` 
FROM `IL`), 
`HL_1_relu` AS 
(SELECT `HL_BA_1`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_1`.`NEUR_1_1` >= 0.0) THEN `HL_BA_1`.`NEUR_1_1` ELSE 0.0 END AS `NEUR_1_1`, CASE WHEN (`HL_BA_1`.`NEUR_1_2` >= 0.0) THEN `HL_BA_1`.`NEUR_1_2` ELSE 0.0 END AS `NEUR_1_2`, CASE WHEN (`HL_BA_1`.`NEUR_1_3` >= 0.0) THEN `HL_BA_1`.`NEUR_1_3` ELSE 0.0 END AS `NEUR_1_3` 
FROM `HL_BA_1`), 
`HL_BA_2` AS 
(SELECT `HL_1_relu`.`KEY` AS `KEY`, -0.311407606308 * `HL_1_relu`.`NEUR_1_1` + -0.408608949976 * `HL_1_relu`.`NEUR_1_2` + -0.869196144403 * `HL_1_relu`.`NEUR_1_3` + -1.14555428124 AS `NEUR_2_1`, -0.868107376193 * `HL_1_relu`.`NEUR_1_1` + -0.291320447777 * `HL_1_relu`.`NEUR_1_2` + -0.228867428165 * `HL_1_relu`.`NEUR_1_3` + -0.883958796539 AS `NEUR_2_2`, -0.314575554974 * `HL_1_relu`.`NEUR_1_1` + -0.743411339355 * `HL_1_relu`.`NEUR_1_2` + -0.619425307217 * `HL_1_relu`.`NEUR_1_3` + -1.09768880846 AS `NEUR_2_3`, 0.484610685163 * `HL_1_relu`.`NEUR_1_1` + -0.173955853056 * `HL_1_relu`.`NEUR_1_2` + -1.19049742818 * `HL_1_relu`.`NEUR_1_3` + -0.00888726140255 AS `NEUR_2_4`, 0.405662180833 * `HL_1_relu`.`NEUR_1_1` + 0.689109339593 * `HL_1_relu`.`NEUR_1_2` + -0.190318317634 * `HL_1_relu`.`NEUR_1_3` + 1.61873665523 AS `NEUR_2_5` 
FROM `HL_1_relu`), 
`HL_2_relu` AS 
(SELECT `HL_BA_2`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_2`.`NEUR_2_1` >= 0.0) THEN `HL_BA_2`.`NEUR_2_1` ELSE 0.0 END AS `NEUR_2_1`, CASE WHEN (`HL_BA_2`.`NEUR_2_2` >= 0.0) THEN `HL_BA_2`.`NEUR_2_2` ELSE 0.0 END AS `NEUR_2_2`, CASE WHEN (`HL_BA_2`.`NEUR_2_3` >= 0.0) THEN `HL_BA_2`.`NEUR_2_3` ELSE 0.0 END AS `NEUR_2_3`, CASE WHEN (`HL_BA_2`.`NEUR_2_4` >= 0.0) THEN `HL_BA_2`.`NEUR_2_4` ELSE 0.0 END AS `NEUR_2_4`, CASE WHEN (`HL_BA_2`.`NEUR_2_5` >= 0.0) THEN `HL_BA_2`.`NEUR_2_5` ELSE 0.0 END AS `NEUR_2_5` 
FROM `HL_BA_2`), 
`OL_BA` AS 
(SELECT `HL_2_relu`.`KEY` AS `KEY`, -0.0843064614487 * `HL_2_relu`.`NEUR_2_1` + -0.334474183487 * `HL_2_relu`.`NEUR_2_2` + -0.133425805446 * `HL_2_relu`.`NEUR_2_3` + 1.09065160768 * `HL_2_relu`.`NEUR_2_4` + 2.91321697513 * `HL_2_relu`.`NEUR_2_5` + 6.03070995052 AS `NEUR_3_1` 
FROM `HL_2_relu`), 
`OL_identity` AS 
(SELECT `OL_BA`.`KEY` AS `KEY`, `OL_BA`.`NEUR_3_1` AS `NEUR_3_1` 
FROM `OL_BA`)
 SELECT `OL_identity`.`KEY` AS `KEY`, `OL_identity`.`NEUR_3_1` AS `Estimator` 
FROM `OL_identity`