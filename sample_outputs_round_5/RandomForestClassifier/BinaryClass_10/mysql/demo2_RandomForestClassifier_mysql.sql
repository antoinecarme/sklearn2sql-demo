-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` <= -0.0022217566147446632) THEN CASE WHEN (`ADS`.`Feature_5` <= 1.5288856029510498) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.6454437971115112) THEN CASE WHEN (`ADS`.`Feature_5` <= -0.29341667890548706) THEN CASE WHEN (`ADS`.`Feature_8` <= -0.4412670135498047) THEN 7 ELSE 8 END ELSE 9 END ELSE 10 END END AS node_id_2 
FROM `BinaryClass_10` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, -0.0022217566147446632 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5074626865671642 AS `Proba_0.0`, -0.678332094775 AS `LogProba_0.0`, 0.4925373134328358 AS `Proba_1.0`, -0.708185057924 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 1.5288856029510498 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9285714285714286 AS `Proba_0.0`, -0.0741079721537 AS `LogProba_0.0`, 0.07142857142857142 AS `Proba_1.0`, -2.63905732962 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_1' AS feature, 0.6454437971115112 AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.20512820512820512 AS `Proba_0.0`, -1.58412010445 AS `LogProba_0.0`, 0.7948717948717948 AS `Proba_1.0`, -0.229574441645 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, -0.29341667890548706 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8888888888888888 AS `Proba_0.0`, -0.117783035656 AS `LogProba_0.0`, 0.1111111111111111 AS `Proba_1.0`, -2.19722457734 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_8' AS feature, -0.4412670135498047 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0.0`, -0.69314718056 AS `LogProba_0.0`, 0.5 AS `Proba_1.0`, -0.69314718056 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data`.`Decision` AS `Decision` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0_0`, `DT_Output`.`Proba_0.0` AS `Proba_0_0`, `DT_Output`.`LogProba_0.0` AS `LogProba_0_0`, NULL AS `Score_0_1`, `DT_Output`.`Proba_1.0` AS `Proba_0_1`, `DT_Output`.`LogProba_1.0` AS `LogProba_0_1` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` <= -0.05296237766742706) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_0` <= 1.504436731338501) THEN CASE WHEN (`ADS`.`Feature_3` <= -1.579613208770752) THEN CASE WHEN (`ADS`.`Feature_7` <= 0.5281482934951782) THEN 5 ELSE 6 END ELSE 7 END ELSE CASE WHEN (`ADS`.`Feature_5` <= 0.13173967599868774) THEN 9 ELSE 10 END END END AS node_id_2 
FROM `BinaryClass_10` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, -0.05296237766742706 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.417910447761194 AS `Proba_0.0`, -0.872488109216 AS `LogProba_0.0`, 0.582089552238806 AS `Proba_1.0`, -0.541130973261 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, 1.504436731338501 AS threshold, 27 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.09302325581395349 AS `Proba_0.0`, -2.37490575457 AS `LogProba_0.0`, 0.9069767441860465 AS `Proba_1.0`, -0.0976384695639 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_3' AS feature, -1.579613208770752 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.05 AS `Proba_0.0`, -2.99573227355 AS `LogProba_0.0`, 0.95 AS `Proba_1.0`, -0.0512932943876 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_7' AS feature, 0.5281482934951782 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0.0`, -0.405465108108 AS `LogProba_0.0`, 0.3333333333333333 AS `Proba_1.0`, -1.09861228867 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 0.13173967599868774 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0.0`, -0.405465108108 AS `LogProba_0.0`, 0.3333333333333333 AS `Proba_1.0`, -1.09861228867 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_1`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_1`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_1`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1_0`, `DT_Output_1`.`Proba_0.0` AS `Proba_1_0`, `DT_Output_1`.`LogProba_0.0` AS `LogProba_1_0`, NULL AS `Score_1_1`, `DT_Output_1`.`Proba_1.0` AS `Proba_1_1`, `DT_Output_1`.`LogProba_1.0` AS `LogProba_1_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_1` <= 0.1233161985874176) THEN 1 ELSE 2 END AS node_id_2 
FROM `BinaryClass_10` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 0.1233161985874176 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.40298507462686567 AS `Proba_0.0`, -0.908855753387 AS `LogProba_0.0`, 0.5970149253731343 AS `Proba_1.0`, -0.515813165277 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_2`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_2`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_2`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2_0`, `DT_Output_2`.`Proba_0.0` AS `Proba_2_0`, `DT_Output_2`.`LogProba_0.0` AS `LogProba_2_0`, NULL AS `Score_2_1`, `DT_Output_2`.`Proba_1.0` AS `Proba_2_1`, `DT_Output_2`.`LogProba_1.0` AS `LogProba_2_1` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` <= -0.25603771209716797) THEN CASE WHEN (`ADS`.`Feature_7` <= -2.416085720062256) THEN 2 ELSE CASE WHEN (`ADS`.`Feature_9` <= -0.3215702474117279) THEN 4 ELSE CASE WHEN (`ADS`.`Feature_7` <= 1.4980183839797974) THEN 6 ELSE 7 END END END ELSE CASE WHEN (`ADS`.`Feature_9` <= 0.728748083114624) THEN CASE WHEN (`ADS`.`Feature_8` <= -0.7939950823783875) THEN CASE WHEN (`ADS`.`Feature_8` <= -0.9663035869598389) THEN CASE WHEN (`ADS`.`Feature_4` <= -0.6887667775154114) THEN 12 ELSE 13 END ELSE 14 END ELSE CASE WHEN (`ADS`.`Feature_1` <= 0.3407173156738281) THEN 16 ELSE 17 END END ELSE 18 END END AS node_id_2 
FROM `BinaryClass_10` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_0' AS feature, -0.25603771209716797 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.40298507462686567 AS `Proba_0.0`, -0.908855753387 AS `LogProba_0.0`, 0.5970149253731343 AS `Proba_1.0`, -0.515813165277 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, -2.416085720062256 AS threshold, 14 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15 AS `Proba_0.0`, -1.89711998489 AS `LogProba_0.0`, 0.85 AS `Proba_1.0`, -0.162518929498 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_9' AS feature, -0.3215702474117279 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.10526315789473684 AS `Proba_0.0`, -2.25129179861 AS `LogProba_0.0`, 0.8947368421052632 AS `Proba_1.0`, -0.11122563511 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 1.4980183839797974 AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.05555555555555555 AS `Proba_0.0`, -2.8903717579 AS `LogProba_0.0`, 0.9444444444444444 AS `Proba_1.0`, -0.0571584138399 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, 'Feature_9' AS feature, 0.728748083114624 AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5106382978723404 AS `Proba_0.0`, -0.672093771362 AS `LogProba_0.0`, 0.48936170212765956 AS `Proba_1.0`, -0.714653385781 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, -0.7939950823783875 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8 AS `Proba_0.0`, -0.223143551314 AS `LogProba_0.0`, 0.2 AS `Proba_1.0`, -1.60943791243 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 10 AS node_id, 'Feature_8' AS feature, -0.9663035869598389 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4 AS `Proba_0.0`, -0.916290731874 AS `LogProba_0.0`, 0.6 AS `Proba_1.0`, -0.510825623766 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 11 AS node_id, 'Feature_4' AS feature, -0.6887667775154114 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6666666666666666 AS `Proba_0.0`, -0.405465108108 AS `LogProba_0.0`, 0.3333333333333333 AS `Proba_1.0`, -1.09861228867 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 15 AS node_id, 'Feature_1' AS feature, 0.3407173156738281 AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.88 AS `Proba_0.0`, -0.12783337151 AS `LogProba_0.0`, 0.12 AS `Proba_1.0`, -2.1202635362 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0 AS `Decision` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision` UNION ALL SELECT 18 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 1 AS `Decision`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_3`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_3`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_3`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3_0`, `DT_Output_3`.`Proba_0.0` AS `Proba_3_0`, `DT_Output_3`.`LogProba_0.0` AS `LogProba_3_0`, NULL AS `Score_3_1`, `DT_Output_3`.`Proba_1.0` AS `Proba_3_1`, `DT_Output_3`.`LogProba_1.0` AS `LogProba_3_1` 
FROM `DT_Output_3`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0`.join_key_0 AS join_key_0, `RF_Tree_0`.`Score_0_0` AS `Score_0_0`, `RF_Tree_0`.`Proba_0_0` AS `Proba_0_0`, `RF_Tree_0`.`LogProba_0_0` AS `LogProba_0_0`, `RF_Tree_0`.`Score_0_1` AS `Score_0_1`, `RF_Tree_0`.`Proba_0_1` AS `Proba_0_1`, `RF_Tree_0`.`LogProba_0_1` AS `LogProba_0_1`, `RF_Tree_1`.join_key_1 AS join_key_1, `RF_Tree_1`.`Score_1_0` AS `Score_1_0`, `RF_Tree_1`.`Proba_1_0` AS `Proba_1_0`, `RF_Tree_1`.`LogProba_1_0` AS `LogProba_1_0`, `RF_Tree_1`.`Score_1_1` AS `Score_1_1`, `RF_Tree_1`.`Proba_1_1` AS `Proba_1_1`, `RF_Tree_1`.`LogProba_1_1` AS `LogProba_1_1`, `RF_Tree_2`.join_key_2 AS join_key_2, `RF_Tree_2`.`Score_2_0` AS `Score_2_0`, `RF_Tree_2`.`Proba_2_0` AS `Proba_2_0`, `RF_Tree_2`.`LogProba_2_0` AS `LogProba_2_0`, `RF_Tree_2`.`Score_2_1` AS `Score_2_1`, `RF_Tree_2`.`Proba_2_1` AS `Proba_2_1`, `RF_Tree_2`.`LogProba_2_1` AS `LogProba_2_1`, `RF_Tree_3`.join_key_3 AS join_key_3, `RF_Tree_3`.`Score_3_0` AS `Score_3_0`, `RF_Tree_3`.`Proba_3_0` AS `Proba_3_0`, `RF_Tree_3`.`LogProba_3_0` AS `LogProba_3_0`, `RF_Tree_3`.`Score_3_1` AS `Score_3_1`, `RF_Tree_3`.`Proba_3_1` AS `Proba_3_1`, `RF_Tree_3`.`LogProba_3_1` AS `LogProba_3_1` 
FROM `RF_Tree_0` LEFT OUTER JOIN `RF_Tree_1` ON `RF_Tree_0`.join_key_0 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN `RF_Tree_2` ON `RF_Tree_2`.join_key_2 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN `RF_Tree_3` ON `RF_Tree_3`.join_key_3 = `RF_Tree_2`.join_key_2), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0 AS `KEY`, `RF_Join_CTE`.`Score_0_0` / 4 + `RF_Join_CTE`.`Score_1_0` / 4 + `RF_Join_CTE`.`Score_2_0` / 4 + `RF_Join_CTE`.`Score_3_0` / 4 AS `Score_0`, `RF_Join_CTE`.`Proba_0_0` / 4 + `RF_Join_CTE`.`Proba_1_0` / 4 + `RF_Join_CTE`.`Proba_2_0` / 4 + `RF_Join_CTE`.`Proba_3_0` / 4 AS `Proba_0`, `RF_Join_CTE`.`LogProba_0_0` / 4 + `RF_Join_CTE`.`LogProba_1_0` / 4 + `RF_Join_CTE`.`LogProba_2_0` / 4 + `RF_Join_CTE`.`LogProba_3_0` / 4 AS `LogProba_0`, `RF_Join_CTE`.`Score_0_1` / 4 + `RF_Join_CTE`.`Score_1_1` / 4 + `RF_Join_CTE`.`Score_2_1` / 4 + `RF_Join_CTE`.`Score_3_1` / 4 AS `Score_1`, `RF_Join_CTE`.`Proba_0_1` / 4 + `RF_Join_CTE`.`Proba_1_1` / 4 + `RF_Join_CTE`.`Proba_2_1` / 4 + `RF_Join_CTE`.`Proba_3_1` / 4 AS `Proba_1`, `RF_Join_CTE`.`LogProba_0_1` / 4 + `RF_Join_CTE`.`LogProba_1_1` / 4 + `RF_Join_CTE`.`LogProba_2_1` / 4 + `RF_Join_CTE`.`LogProba_3_1` / 4 AS `LogProba_1` 
FROM `RF_Join_CTE`), 
orig_cte AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, NULL AS `Decision` 
FROM `RF_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.`max_LogProba` = score_class_union.`LogProba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.`max_Proba` = score_class_union.`Proba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.`max_Score` = score_class_union.`Score` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score` 
FROM score_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Proba` AS `Decision` 
FROM arg_max_cte