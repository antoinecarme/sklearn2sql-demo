-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_56] <= -0.3634084165096283) THEN CASE WHEN ([ADS].[Feature_73] <= -1.4914240837097168) THEN 2 ELSE CASE WHEN ([ADS].[Feature_27] <= 0.5469328761100769) THEN CASE WHEN ([ADS].[Feature_89] <= -1.8433681726455688) THEN 5 ELSE 6 END ELSE CASE WHEN ([ADS].[Feature_85] <= -0.14259792864322662) THEN 8 ELSE 9 END END END ELSE CASE WHEN ([ADS].[Feature_81] <= 1.331164836883545) THEN CASE WHEN ([ADS].[Feature_40] <= -0.13912303745746613) THEN CASE WHEN ([ADS].[Feature_86] <= 0.2732214331626892) THEN 13 ELSE 14 END ELSE CASE WHEN ([ADS].[Feature_81] <= -0.27679577469825745) THEN CASE WHEN ([ADS].[Feature_55] <= 0.5170613527297974) THEN 17 ELSE 18 END ELSE 19 END END ELSE 20 END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_56' AS feature, -0.3634084165096283 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5373134328358209 AS [Proba_0.0], -0.621173680935 AS [LogProba_0.0], 0.4626865671641791 AS [Proba_1.0], -0.770705414906 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_73' AS feature, -1.4914240837097168 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7567567567567568 AS [Proba_0.0], -0.278713402469 AS [LogProba_0.0], 0.24324324324324326 AS [Proba_1.0], -1.41369333531 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'Feature_27' AS feature, 0.5469328761100769 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8484848484848485 AS [Proba_0.0], -0.164303051291 AS [LogProba_0.0], 0.15151515151515152 AS [Proba_1.0], -1.88706964903 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, 'Feature_89' AS feature, -1.8433681726455688 AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9629629629629629 AS [Proba_0.0], -0.0377403279828 AS [LogProba_0.0], 0.037037037037037035 AS [Proba_1.0], -3.295836866 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, 'Feature_85' AS feature, -0.14259792864322662 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.6666666666666666 AS [Proba_1.0], -0.405465108108 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, 'Feature_81' AS feature, 1.331164836883545 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26666666666666666 AS [Proba_0.0], -1.32175583998 AS [LogProba_0.0], 0.7333333333333333 AS [Proba_1.0], -0.310154928304 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 11 AS node_id, 'Feature_40' AS feature, -0.13912303745746613 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15384615384615385 AS [Proba_0.0], -1.8718021769 AS [LogProba_0.0], 0.8461538461538461 AS [Proba_1.0], -0.167054084663 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, 'Feature_86' AS feature, 0.2732214331626892 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS [Proba_0.0], -0.287682072452 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 15 AS node_id, 'Feature_81' AS feature, -0.27679577469825745 AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.045454545454545456 AS [Proba_0.0], -3.09104245336 AS [LogProba_0.0], 0.9545454545454546 AS [Proba_1.0], -0.0465200156349 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 16 AS node_id, 'Feature_55' AS feature, 0.5170613527297974 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.6666666666666666 AS [Proba_1.0], -0.405465108108 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0.0] AS [Proba_0.0], [DT_node_data].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data].[Proba_1.0] AS [Proba_1.0], [DT_node_data].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0.0] AS [Proba_0_0], [DT_Output].[LogProba_0.0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1.0] AS [Proba_0_1], [DT_Output].[LogProba_1.0] AS [LogProba_0_1] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_41] <= 0.4432143568992615) THEN CASE WHEN ([ADS].[Feature_90] <= -2.069997787475586) THEN 2 ELSE CASE WHEN ([ADS].[Feature_34] <= 1.268689513206482) THEN 4 ELSE 5 END END ELSE 6 END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_41' AS feature, 0.4432143568992615 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5074626865671642 AS [Proba_0.0], -0.678332094775 AS [LogProba_0.0], 0.4925373134328358 AS [Proba_1.0], -0.708185057924 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_90' AS feature, -2.069997787475586 AS threshold, 21 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9444444444444444 AS [Proba_0.0], -0.0571584138399 AS [LogProba_0.0], 0.05555555555555555 AS [Proba_1.0], -2.8903717579 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'Feature_34' AS feature, 1.268689513206482 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9714285714285714 AS [Proba_0.0], -0.0289875368733 AS [LogProba_0.0], 0.02857142857142857 AS [Proba_1.0], -3.55534806149 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0.0] AS [Proba_0.0], [DT_node_data_1].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_1].[Proba_1.0] AS [Proba_1.0], [DT_node_data_1].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0.0] AS [Proba_1_0], [DT_Output_1].[LogProba_0.0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1.0] AS [Proba_1_1], [DT_Output_1].[LogProba_1.0] AS [LogProba_1_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_21] <= 0.8321206569671631) THEN CASE WHEN ([ADS].[Feature_40] <= -0.7300318479537964) THEN CASE WHEN ([ADS].[Feature_96] <= 0.7995353937149048) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_65] <= 0.04981013387441635) THEN CASE WHEN ([ADS].[Feature_93] <= 0.42717716097831726) THEN 7 ELSE 8 END ELSE 9 END END ELSE CASE WHEN ([ADS].[Feature_90] <= -0.4733259975910187) THEN CASE WHEN ([ADS].[Feature_61] <= -0.8893756866455078) THEN 12 ELSE 13 END ELSE CASE WHEN ([ADS].[Feature_41] <= 0.5545578002929688) THEN 15 ELSE 16 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_21' AS feature, 0.8321206569671631 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3880597014925373 AS [Proba_0.0], -0.946596081369 AS [LogProba_0.0], 0.6119402985074627 AS [Proba_1.0], -0.491120552687 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_40' AS feature, -0.7300318479537964 AS threshold, 26 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS [Proba_0.0], -1.50407739678 AS [LogProba_0.0], 0.7777777777777778 AS [Proba_1.0], -0.251314428281 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_96' AS feature, 0.7995353937149048 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS [Proba_0.0], -0.405465108108 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, 'Feature_65' AS feature, 0.04981013387441635 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15384615384615385 AS [Proba_0.0], -1.8718021769 AS [LogProba_0.0], 0.8461538461538461 AS [Proba_1.0], -0.167054084663 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, 'Feature_93' AS feature, 0.42717716097831726 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8571428571428571 AS [Proba_0.0], -0.154150679827 AS [LogProba_0.0], 0.14285714285714285 AS [Proba_1.0], -1.94591014906 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, 'Feature_90' AS feature, -0.4733259975910187 AS threshold, 14 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7272727272727273 AS [Proba_0.0], -0.318453731119 AS [LogProba_0.0], 0.2727272727272727 AS [Proba_1.0], -1.29928298413 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 11 AS node_id, 'Feature_61' AS feature, -0.8893756866455078 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS [Proba_0.0], -1.79175946923 AS [LogProba_0.0], 0.8333333333333334 AS [Proba_1.0], -0.182321556794 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 14 AS node_id, 'Feature_41' AS feature, 0.5545578002929688 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9375 AS [Proba_0.0], -0.0645385211376 AS [LogProba_0.0], 0.0625 AS [Proba_1.0], -2.77258872224 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0.0] AS [Proba_0.0], [DT_node_data_2].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_2].[Proba_1.0] AS [Proba_1.0], [DT_node_data_2].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0.0] AS [Proba_2_0], [DT_Output_2].[LogProba_0.0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1.0] AS [Proba_2_1], [DT_Output_2].[LogProba_1.0] AS [LogProba_2_1] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_40] <= 0.46859464049339294) THEN CASE WHEN ([ADS].[Feature_56] <= -0.3634084165096283) THEN CASE WHEN ([ADS].[Feature_12] <= 1.393284559249878) THEN 3 ELSE CASE WHEN ([ADS].[Feature_45] <= 0.4826982915401459) THEN 5 ELSE 6 END END ELSE CASE WHEN ([ADS].[Feature_97] <= -0.520592212677002) THEN CASE WHEN ([ADS].[Feature_6] <= -0.5716004967689514) THEN 9 ELSE 10 END ELSE CASE WHEN ([ADS].[Feature_8] <= -0.16949419677257538) THEN CASE WHEN ([ADS].[Feature_32] <= 0.35222575068473816) THEN 13 ELSE 14 END ELSE 15 END END END ELSE CASE WHEN ([ADS].[Feature_36] <= -0.9245842099189758) THEN 17 ELSE CASE WHEN ([ADS].[Feature_1] <= -1.6006793975830078) THEN 19 ELSE 20 END END END AS node_id_2 
FROM [BinaryClass_100] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'Feature_40' AS feature, 0.46859464049339294 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5671641791044776 AS [Proba_0.0], -0.567106459665 AS [LogProba_0.0], 0.43283582089552236 AS [Proba_1.0], -0.837396789404 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'Feature_56' AS feature, -0.3634084165096283 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7142857142857143 AS [Proba_0.0], -0.336472236621 AS [LogProba_0.0], 0.2857142857142857 AS [Proba_1.0], -1.2527629685 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'Feature_12' AS feature, 1.393284559249878 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.96 AS [Proba_0.0], -0.0408219945203 AS [LogProba_0.0], 0.04 AS [Proba_1.0], -3.21887582487 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, 'Feature_45' AS feature, 0.4826982915401459 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS [Proba_0.0], -0.405465108108 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 7 AS node_id, 'Feature_97' AS feature, -0.520592212677002 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4583333333333333 AS [Proba_0.0], -0.78015855755 AS [LogProba_0.0], 0.5416666666666666 AS [Proba_1.0], -0.613104472886 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, -0.5716004967689514 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8888888888888888 AS [Proba_0.0], -0.117783035656 AS [LogProba_0.0], 0.1111111111111111 AS [Proba_1.0], -2.19722457734 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 11 AS node_id, 'Feature_8' AS feature, -0.16949419677257538 AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS [Proba_0.0], -1.60943791243 AS [LogProba_0.0], 0.8 AS [Proba_1.0], -0.223143551314 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, 'Feature_32' AS feature, 0.35222575068473816 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS [Proba_0.0], -0.287682072452 AS [LogProba_0.0], 0.25 AS [Proba_1.0], -1.38629436112 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 16 AS node_id, 'Feature_36' AS feature, -0.9245842099189758 AS threshold, 11 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS [Proba_0.0], -1.79175946923 AS [LogProba_0.0], 0.8333333333333334 AS [Proba_1.0], -0.182321556794 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 18 AS node_id, 'Feature_1' AS feature, -1.6006793975830078 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0625 AS [Proba_0.0], -2.77258872224 AS [LogProba_0.0], 0.9375 AS [Proba_1.0], -0.0645385211376 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0.0] AS [Proba_0.0], [DT_node_data_3].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_3].[Proba_1.0] AS [Proba_1.0], [DT_node_data_3].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0.0] AS [Proba_3_0], [DT_Output_3].[LogProba_0.0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1.0] AS [Proba_3_1], [DT_Output_3].[LogProba_1.0] AS [LogProba_3_1] 
FROM [DT_Output_3]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Score_0_0] AS [Score_0_0], [RF_Tree_0].[Proba_0_0] AS [Proba_0_0], [RF_Tree_0].[LogProba_0_0] AS [LogProba_0_0], [RF_Tree_0].[Score_0_1] AS [Score_0_1], [RF_Tree_0].[Proba_0_1] AS [Proba_0_1], [RF_Tree_0].[LogProba_0_1] AS [LogProba_0_1], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Score_1_0] AS [Score_1_0], [RF_Tree_1].[Proba_1_0] AS [Proba_1_0], [RF_Tree_1].[LogProba_1_0] AS [LogProba_1_0], [RF_Tree_1].[Score_1_1] AS [Score_1_1], [RF_Tree_1].[Proba_1_1] AS [Proba_1_1], [RF_Tree_1].[LogProba_1_1] AS [LogProba_1_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Score_2_0] AS [Score_2_0], [RF_Tree_2].[Proba_2_0] AS [Proba_2_0], [RF_Tree_2].[LogProba_2_0] AS [LogProba_2_0], [RF_Tree_2].[Score_2_1] AS [Score_2_1], [RF_Tree_2].[Proba_2_1] AS [Proba_2_1], [RF_Tree_2].[LogProba_2_1] AS [LogProba_2_1], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Score_3_0] AS [Score_3_0], [RF_Tree_3].[Proba_3_0] AS [Proba_3_0], [RF_Tree_3].[LogProba_3_0] AS [LogProba_3_0], [RF_Tree_3].[Score_3_1] AS [Score_3_1], [RF_Tree_3].[Proba_3_1] AS [Proba_3_1], [RF_Tree_3].[LogProba_3_1] AS [LogProba_3_1] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Score_0_0] / 4 + [RF_Join_CTE].[Score_1_0] / 4 + [RF_Join_CTE].[Score_2_0] / 4 + [RF_Join_CTE].[Score_3_0] / 4 AS [Score_0], [RF_Join_CTE].[Proba_0_0] / 4 + [RF_Join_CTE].[Proba_1_0] / 4 + [RF_Join_CTE].[Proba_2_0] / 4 + [RF_Join_CTE].[Proba_3_0] / 4 AS [Proba_0], [RF_Join_CTE].[LogProba_0_0] / 4 + [RF_Join_CTE].[LogProba_1_0] / 4 + [RF_Join_CTE].[LogProba_2_0] / 4 + [RF_Join_CTE].[LogProba_3_0] / 4 AS [LogProba_0], [RF_Join_CTE].[Score_0_1] / 4 + [RF_Join_CTE].[Score_1_1] / 4 + [RF_Join_CTE].[Score_2_1] / 4 + [RF_Join_CTE].[Score_3_1] / 4 AS [Score_1], [RF_Join_CTE].[Proba_0_1] / 4 + [RF_Join_CTE].[Proba_1_1] / 4 + [RF_Join_CTE].[Proba_2_1] / 4 + [RF_Join_CTE].[Proba_3_1] / 4 AS [Proba_1], [RF_Join_CTE].[LogProba_0_1] / 4 + [RF_Join_CTE].[LogProba_1_1] / 4 + [RF_Join_CTE].[LogProba_2_1] / 4 + [RF_Join_CTE].[LogProba_3_1] / 4 AS [LogProba_1] 
FROM [RF_Join_CTE]), 
orig_cte AS 
(SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Score_0] AS [Score_0], [RF_AVG_Scores].[Score_1] AS [Score_1], [RF_AVG_Scores].[Proba_0] AS [Proba_0], [RF_AVG_Scores].[Proba_1] AS [Proba_1], [RF_AVG_Scores].[LogProba_0] AS [LogProba_0], [RF_AVG_Scores].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [RF_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], arg_max_cte.[arg_max_Proba] AS [Decision] 
FROM arg_max_cte