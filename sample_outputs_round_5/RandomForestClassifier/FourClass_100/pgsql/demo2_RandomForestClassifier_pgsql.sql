-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 0.5948313474655151) THEN CASE WHEN ("ADS"."Feature_24" <= 0.8956661224365234) THEN CASE WHEN ("ADS"."Feature_79" <= -0.8622198104858398) THEN CASE WHEN ("ADS"."Feature_26" <= 0.6354169249534607) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_77" <= -0.2284388393163681) THEN CASE WHEN ("ADS"."Feature_81" <= -0.2349315881729126) THEN CASE WHEN ("ADS"."Feature_54" <= 2.9407126903533936) THEN 9 ELSE 10 END ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_83" <= -6.1089887619018555) THEN 13 ELSE CASE WHEN ("ADS"."Feature_16" <= -0.8911592960357666) THEN 15 ELSE 16 END END END END ELSE CASE WHEN ("ADS"."Feature_53" <= -0.04300477355718613) THEN 18 ELSE CASE WHEN ("ADS"."Feature_48" <= -0.5738269686698914) THEN 20 ELSE CASE WHEN ("ADS"."Feature_73" <= 0.8713414669036865) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS"."Feature_99" <= 1.065717339515686) THEN CASE WHEN ("ADS"."Feature_94" <= 0.09203276038169861) THEN CASE WHEN ("ADS"."Feature_25" <= -2.341266632080078) THEN 27 ELSE CASE WHEN ("ADS"."Feature_55" <= 1.766242504119873) THEN 29 ELSE 30 END END ELSE 31 END ELSE 32 END END AS node_id_2 
FROM "FourClass_100" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_21' AS feature, 0.5948313474655151 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26865671641791045 AS "Proba_0.0", -1.31432086149 AS "LogProba_0.0", 0.13432835820895522 AS "Proba_1.0", -2.00746804205 AS "LogProba_1.0", 0.29850746268656714 AS "Proba_2.0", -1.20896034584 AS "LogProba_2.0", 0.29850746268656714 AS "Proba_3.0", -1.20896034584 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_24' AS feature, 0.8956661224365234 AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34782608695652173 AS "Proba_0.0", -1.05605267425 AS "LogProba_0.0", 0.15217391304347827 AS "Proba_1.0", -1.88273124743 AS "LogProba_1.0", 0.3695652173913043 AS "Proba_2.0", -0.995428052433 AS "LogProba_2.0", 0.13043478260869565 AS "Proba_3.0", -2.03688192726 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_79' AS feature, -0.8622198104858398 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5185185185185185 AS "Proba_0.0", -0.656779536389 AS "LogProba_0.0", 0.25925925925925924 AS "Proba_1.0", -1.34992671695 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, 'Feature_26' AS feature, 0.6354169249534607 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5714285714285714 AS "Proba_1.0", -0.559615787935 AS "LogProba_1.0", 0.42857142857142855 AS "Proba_2.0", -0.847297860387 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_77' AS feature, -0.2284388393163681 AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7 AS "Proba_0.0", -0.356674943939 AS "LogProba_0.0", 0.15 AS "Proba_1.0", -1.89711998489 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.15 AS "Proba_3.0", -1.89711998489 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, 'Feature_81' AS feature, -0.2349315881729126 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.6 AS "Proba_3.0", -0.510825623766 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_54' AS feature, 2.9407126903533936 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_83' AS feature, -6.1089887619018555 AS threshold, 10 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8666666666666667 AS "Proba_0.0", -0.143100843641 AS "LogProba_0.0", 0.13333333333333333 AS "Proba_1.0", -2.01490302054 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, 'Feature_16' AS feature, -0.8911592960357666 AS threshold, 9 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9285714285714286 AS "Proba_0.0", -0.0741079721537 AS "LogProba_0.0", 0.07142857142857142 AS "Proba_1.0", -2.63905732962 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 17 AS node_id, 'Feature_53' AS feature, -0.04300477355718613 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10526315789473684 AS "Proba_0.0", -2.25129179861 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.7368421052631579 AS "Proba_2.0", -0.305381649551 AS "LogProba_2.0", 0.15789473684210525 AS "Proba_3.0", -1.8458266905 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 19 AS node_id, 'Feature_48' AS feature, -0.5738269686698914 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.2857142857142857 AS "Proba_2.0", -1.2527629685 AS "LogProba_2.0", 0.42857142857142855 AS "Proba_3.0", -0.847297860387 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 21 AS node_id, 'Feature_73' AS feature, 0.8713414669036865 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 24 AS node_id, 'Feature_99' AS feature, 1.065717339515686 AS threshold, 12 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09523809523809523 AS "Proba_0.0", -2.35137525716 AS "LogProba_0.0", 0.09523809523809523 AS "Proba_1.0", -2.35137525716 AS "LogProba_1.0", 0.14285714285714285 AS "Proba_2.0", -1.94591014906 AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 25 AS node_id, 'Feature_94' AS feature, 0.09203276038169861 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.375 AS "Proba_2.0", -0.980829253012 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 26 AS node_id, 'Feature_25' AS feature, -2.341266632080078 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 28 AS node_id, 'Feature_55' AS feature, 1.766242504119873 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_88" <= -1.0567965507507324) THEN CASE WHEN ("ADS"."Feature_11" <= -9.583483695983887) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= -0.12367217242717743) THEN 4 ELSE CASE WHEN ("ADS"."Feature_18" <= 0.7317131757736206) THEN 6 ELSE 7 END END END ELSE CASE WHEN ("ADS"."Feature_12" <= -0.6619806289672852) THEN CASE WHEN ("ADS"."Feature_38" <= 0.4010554552078247) THEN CASE WHEN ("ADS"."Feature_54" <= -1.6887497901916504) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS"."Feature_51" <= -3.084624767303467) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_14" <= -1.1030290126800537) THEN CASE WHEN ("ADS"."Feature_89" <= 12.309261322021484) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.8683813810348511) THEN CASE WHEN ("ADS"."Feature_88" <= -0.4908520579338074) THEN 22 ELSE CASE WHEN ("ADS"."Feature_14" <= 3.99251127243042) THEN CASE WHEN ("ADS"."Feature_27" <= -1.973107933998108) THEN CASE WHEN ("ADS"."Feature_89" <= 5.706855773925781) THEN 26 ELSE 27 END ELSE 28 END ELSE CASE WHEN ("ADS"."Feature_49" <= 0.3523200750350952) THEN 30 ELSE 31 END END END ELSE CASE WHEN ("ADS"."Feature_33" <= 0.5167939066886902) THEN 33 ELSE 34 END END END END END AS node_id_2 
FROM "FourClass_100" AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_88' AS feature, -1.0567965507507324 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.31343283582089554 AS "Proba_0.0", -1.16017018167 AS "LogProba_0.0", 0.208955223880597 AS "Proba_1.0", -1.56563528978 AS "LogProba_1.0", 0.23880597014925373 AS "Proba_2.0", -1.43210389715 AS "LogProba_2.0", 0.23880597014925373 AS "Proba_3.0", -1.43210389715 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_11' AS feature, -9.583483695983887 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06666666666666667 AS "Proba_0.0", -2.7080502011 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.06666666666666667 AS "Proba_2.0", -2.7080502011 AS "LogProba_2.0", 0.8666666666666667 AS "Proba_3.0", -0.143100843641 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, -0.12367217242717743 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07142857142857142 AS "Proba_0.0", -2.63905732962 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.9285714285714286 AS "Proba_3.0", -0.0741079721537 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 5 AS node_id, 'Feature_18' AS feature, 0.7317131757736206 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, -0.6619806289672852 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.38461538461538464 AS "Proba_0.0", -0.955511445027 AS "LogProba_0.0", 0.2692307692307692 AS "Proba_1.0", -1.31218638897 AS "LogProba_1.0", 0.28846153846153844 AS "Proba_2.0", -1.24319351748 AS "LogProba_2.0", 0.057692307692307696 AS "Proba_3.0", -2.85263142991 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'Feature_38' AS feature, 0.4010554552078247 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.7692307692307693 AS "Proba_1.0", -0.262364264467 AS "LogProba_1.0", 0.07692307692307693 AS "Proba_2.0", -2.56494935746 AS "LogProba_2.0", 0.15384615384615385 AS "Proba_3.0", -1.8718021769 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, 'Feature_54' AS feature, -1.6887497901916504 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 13 AS node_id, 'Feature_51' AS feature, -3.084624767303467 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.9 AS "Proba_1.0", -0.105360515658 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 16 AS node_id, 'Feature_14' AS feature, -1.1030290126800537 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5128205128205128 AS "Proba_0.0", -0.667829372576 AS "LogProba_0.0", 0.10256410256410256 AS "Proba_1.0", -2.27726728501 AS "LogProba_1.0", 0.358974358974359 AS "Proba_2.0", -1.02450431651 AS "LogProba_2.0", 0.02564102564102564 AS "Proba_3.0", -3.66356164613 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 17 AS node_id, 'Feature_89' AS feature, 12.309261322021484 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3076923076923077 AS "Proba_0.0", -1.17865499634 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.6923076923076923 AS "Proba_2.0", -0.367724780125 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 20 AS node_id, 'Feature_2' AS feature, 0.8683813810348511 AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6153846153846154 AS "Proba_0.0", -0.485507815782 AS "LogProba_0.0", 0.15384615384615385 AS "Proba_1.0", -1.8718021769 AS "LogProba_1.0", 0.19230769230769232 AS "Proba_2.0", -1.64865862559 AS "LogProba_2.0", 0.038461538461538464 AS "Proba_3.0", -3.25809653802 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 21 AS node_id, 'Feature_88' AS feature, -0.4908520579338074 AS threshold, 14 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7619047619047619 AS "Proba_0.0", -0.271933715484 AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.047619047619047616 AS "Proba_2.0", -3.04452243772 AS "LogProba_2.0", 0.047619047619047616 AS "Proba_3.0", -3.04452243772 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 23 AS node_id, 'Feature_14' AS feature, 3.99251127243042 AS threshold, 12 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8421052631578947 AS "Proba_0.0", -0.171850256927 AS "LogProba_0.0", 0.05263157894736842 AS "Proba_1.0", -2.94443897917 AS "LogProba_1.0", 0.05263157894736842 AS "Proba_2.0", -2.94443897917 AS "LogProba_2.0", 0.05263157894736842 AS "Proba_3.0", -2.94443897917 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 24 AS node_id, 'Feature_27' AS feature, -1.973107933998108 AS threshold, 10 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9411764705882353 AS "Proba_0.0", -0.0606246218164 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.058823529411764705 AS "Proba_2.0", -2.83321334406 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 25 AS node_id, 'Feature_89' AS feature, 5.706855773925781 AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 29 AS node_id, 'Feature_49' AS feature, 0.3523200750350952 AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 32 AS node_id, 'Feature_33' AS feature, 0.5167939066886902 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.8 AS "Proba_2.0", -0.223143551314 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_21" <= 1.1002485752105713) THEN CASE WHEN ("ADS"."Feature_54" <= 2.199923038482666) THEN CASE WHEN ("ADS"."Feature_8" <= 0.12545718252658844) THEN CASE WHEN ("ADS"."Feature_17" <= 0.9690553545951843) THEN CASE WHEN ("ADS"."Feature_61" <= -1.0290346145629883) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_90" <= 0.9744538068771362) THEN CASE WHEN ("ADS"."Feature_34" <= -3.522141218185425) THEN 9 ELSE 10 END ELSE 11 END END ELSE CASE WHEN ("ADS"."Feature_45" <= -3.2515900135040283) THEN CASE WHEN ("ADS"."Feature_98" <= 7.322874546051025) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_59" <= 5.722567558288574) THEN 17 ELSE 18 END END END ELSE CASE WHEN ("ADS"."Feature_93" <= -0.6433895826339722) THEN 20 ELSE CASE WHEN ("ADS"."Feature_51" <= 0.3770860433578491) THEN CASE WHEN ("ADS"."Feature_24" <= 2.1721205711364746) THEN 23 ELSE 24 END ELSE 25 END END END ELSE CASE WHEN ("ADS"."Feature_67" <= -0.7184456586837769) THEN 27 ELSE 28 END END AS node_id_2 
FROM "FourClass_100" AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_21' AS feature, 1.1002485752105713 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2537313432835821 AS "Proba_0.0", -1.37147927533 AS "LogProba_0.0", 0.34328358208955223 AS "Proba_1.0", -1.06919840346 AS "LogProba_1.0", 0.19402985074626866 AS "Proba_2.0", -1.63974326193 AS "LogProba_2.0", 0.208955223880597 AS "Proba_3.0", -1.56563528978 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_54' AS feature, 2.199923038482666 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2711864406779661 AS "Proba_0.0", -1.30494872167 AS "LogProba_0.0", 0.3898305084745763 AS "Proba_1.0", -0.942043227977 AS "LogProba_1.0", 0.22033898305084745 AS "Proba_2.0", -1.51258808644 AS "LogProba_2.0", 0.11864406779661017 AS "Proba_3.0", -2.13162729485 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.12545718252658844 AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13043478260869565 AS "Proba_0.0", -2.03688192726 AS "LogProba_0.0", 0.4782608695652174 AS "Proba_1.0", -0.737598943131 AS "LogProba_1.0", 0.2826086956521739 AS "Proba_2.0", -1.26369203903 AS "LogProba_2.0", 0.10869565217391304 AS "Proba_3.0", -2.21920348405 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'Feature_17' AS feature, 0.9690553545951843 AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.09523809523809523 AS "Proba_1.0", -2.35137525716 AS "LogProba_1.0", 0.47619047619047616 AS "Proba_2.0", -0.741937344729 AS "LogProba_2.0", 0.14285714285714285 AS "Proba_3.0", -1.94591014906 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, 'Feature_61' AS feature, -1.0290346145629883 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.2222222222222222 AS "Proba_1.0", -1.50407739678 AS "LogProba_1.0", 0.7777777777777778 AS "Proba_2.0", -0.251314428281 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 7 AS node_id, 'Feature_90' AS feature, 0.9744538068771362 AS threshold, 8 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_34' AS feature, -3.522141218185425 AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_45' AS feature, -3.2515900135040283 AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.8 AS "Proba_1.0", -0.223143551314 AS "LogProba_1.0", 0.12 AS "Proba_2.0", -2.1202635362 AS "LogProba_2.0", 0.08 AS "Proba_3.0", -2.52572864431 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 13 AS node_id, 'Feature_98' AS feature, 7.322874546051025 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 16 AS node_id, 'Feature_59' AS feature, 5.722567558288574 AS threshold, 10 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.9523809523809523 AS "Proba_1.0", -0.0487901641694 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.047619047619047616 AS "Proba_3.0", -3.04452243772 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 19 AS node_id, 'Feature_93' AS feature, -0.6433895826339722 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7692307692307693 AS "Proba_0.0", -0.262364264467 AS "LogProba_0.0", 0.07692307692307693 AS "Proba_1.0", -2.56494935746 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.15384615384615385 AS "Proba_3.0", -1.8718021769 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 21 AS node_id, 'Feature_51' AS feature, 0.3770860433578491 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.4 AS "Proba_3.0", -0.916290731874 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 22 AS node_id, 'Feature_24' AS feature, 2.1721205711364746 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 26 AS node_id, 'Feature_67' AS feature, -0.7184456586837769 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.125 AS "Proba_0.0", -2.07944154168 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.875 AS "Proba_3.0", -0.133531392625 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_88" <= -1.0699963569641113) THEN CASE WHEN ("ADS"."Feature_46" <= 3.1851205825805664) THEN CASE WHEN ("ADS"."Feature_56" <= -0.6002726554870605) THEN CASE WHEN ("ADS"."Feature_18" <= 0.10793055593967438) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_93" <= 0.43050068616867065) THEN 7 ELSE CASE WHEN ("ADS"."Feature_67" <= 1.3059543371200562) THEN 9 ELSE 10 END END END ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_87" <= -3.83359432220459) THEN 13 ELSE CASE WHEN ("ADS"."Feature_97" <= -1.6424212455749512) THEN CASE WHEN ("ADS"."Feature_84" <= 5.298391819000244) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.5323775410652161) THEN CASE WHEN ("ADS"."Feature_20" <= 0.35509711503982544) THEN CASE WHEN ("ADS"."Feature_90" <= 0.32125240564346313) THEN CASE WHEN ("ADS"."Feature_31" <= 1.196311354637146) THEN 22 ELSE 23 END ELSE 24 END ELSE 25 END ELSE CASE WHEN ("ADS"."Feature_93" <= -0.6158954501152039) THEN CASE WHEN ("ADS"."Feature_83" <= -2.3118066787719727) THEN 28 ELSE 29 END ELSE 30 END END END END END AS node_id_2 
FROM "FourClass_100" AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_88' AS feature, -1.0699963569641113 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23880597014925373 AS "Proba_0.0", -1.43210389715 AS "LogProba_0.0", 0.31343283582089554 AS "Proba_1.0", -1.16017018167 AS "LogProba_1.0", 0.26865671641791045 AS "Proba_2.0", -1.31432086149 AS "LogProba_2.0", 0.1791044776119403 AS "Proba_3.0", -1.7197859696 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'Feature_46' AS feature, 3.1851205825805664 AS threshold, 12 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.3888888888888889 AS "Proba_3.0", -0.944461608841 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'Feature_56' AS feature, -0.6002726554870605 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15384615384615385 AS "Proba_0.0", -1.8718021769 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.3076923076923077 AS "Proba_2.0", -1.17865499634 AS "LogProba_2.0", 0.5384615384615384 AS "Proba_3.0", -0.619039208406 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 3 AS node_id, 'Feature_18' AS feature, 0.10793055593967438 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.6 AS "Proba_2.0", -0.510825623766 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'Feature_93' AS feature, 0.43050068616867065 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.125 AS "Proba_2.0", -2.07944154168 AS "LogProba_2.0", 0.875 AS "Proba_3.0", -0.133531392625 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, 'Feature_67' AS feature, 1.3059543371200562 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 12 AS node_id, 'Feature_87' AS feature, -3.83359432220459 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.42857142857142855 AS "Proba_1.0", -0.847297860387 AS "LogProba_1.0", 0.1836734693877551 AS "Proba_2.0", -1.69459572077 AS "LogProba_2.0", 0.10204081632653061 AS "Proba_3.0", -2.28238238568 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 14 AS node_id, 'Feature_97' AS feature, -1.6424212455749512 AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32558139534883723 AS "Proba_0.0", -1.12214278608 AS "LogProba_0.0", 0.4883720930232558 AS "Proba_1.0", -0.71667767797 AS "LogProba_1.0", 0.06976744186046512 AS "Proba_2.0", -2.66258782703 AS "LogProba_2.0", 0.11627906976744186 AS "Proba_3.0", -2.15176220326 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 15 AS node_id, 'Feature_84' AS feature, 5.298391819000244 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09090909090909091 AS "Proba_0.0", -2.3978952728 AS "LogProba_0.0", 0.9090909090909091 AS "Proba_1.0", -0.0953101798043 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 18 AS node_id, 'Feature_54' AS feature, 0.5323775410652161 AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.40625 AS "Proba_0.0", -0.900786545338 AS "LogProba_0.0", 0.34375 AS "Proba_1.0", -1.06784063 AS "LogProba_1.0", 0.09375 AS "Proba_2.0", -2.36712361413 AS "LogProba_2.0", 0.15625 AS "Proba_3.0", -1.85629799037 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 19 AS node_id, 'Feature_20' AS feature, 0.35509711503982544 AS threshold, 9 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17647058823529413 AS "Proba_0.0", -1.73460105539 AS "LogProba_0.0", 0.6470588235294118 AS "Proba_1.0", -0.435318071258 AS "LogProba_1.0", 0.17647058823529413 AS "Proba_2.0", -1.73460105539 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 20 AS node_id, 'Feature_90' AS feature, 0.32125240564346313 AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.375 AS "Proba_0.0", -0.980829253012 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.375 AS "Proba_2.0", -0.980829253012 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 21 AS node_id, 'Feature_31' AS feature, 1.196311354637146 AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0.6 AS "Proba_2.0", -0.510825623766 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 26 AS node_id, 'Feature_93' AS feature, -0.6158954501152039 AS threshold, 10 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 27 AS node_id, 'Feature_83' AS feature, -2.3118066787719727 AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.7142857142857143 AS "Proba_3.0", -0.336472236621 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 4 + "RF_Join_CTE"."Score_1_0" / 4 + "RF_Join_CTE"."Score_2_0" / 4 + "RF_Join_CTE"."Score_3_0" / 4 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 4 + "RF_Join_CTE"."Proba_1_0" / 4 + "RF_Join_CTE"."Proba_2_0" / 4 + "RF_Join_CTE"."Proba_3_0" / 4 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 4 + "RF_Join_CTE"."LogProba_1_0" / 4 + "RF_Join_CTE"."LogProba_2_0" / 4 + "RF_Join_CTE"."LogProba_3_0" / 4 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 4 + "RF_Join_CTE"."Score_1_1" / 4 + "RF_Join_CTE"."Score_2_1" / 4 + "RF_Join_CTE"."Score_3_1" / 4 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 4 + "RF_Join_CTE"."Proba_1_1" / 4 + "RF_Join_CTE"."Proba_2_1" / 4 + "RF_Join_CTE"."Proba_3_1" / 4 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 4 + "RF_Join_CTE"."LogProba_1_1" / 4 + "RF_Join_CTE"."LogProba_2_1" / 4 + "RF_Join_CTE"."LogProba_3_1" / 4 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 4 + "RF_Join_CTE"."Score_1_2" / 4 + "RF_Join_CTE"."Score_2_2" / 4 + "RF_Join_CTE"."Score_3_2" / 4 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 4 + "RF_Join_CTE"."Proba_1_2" / 4 + "RF_Join_CTE"."Proba_2_2" / 4 + "RF_Join_CTE"."Proba_3_2" / 4 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 4 + "RF_Join_CTE"."LogProba_1_2" / 4 + "RF_Join_CTE"."LogProba_2_2" / 4 + "RF_Join_CTE"."LogProba_3_2" / 4 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 4 + "RF_Join_CTE"."Score_1_3" / 4 + "RF_Join_CTE"."Score_2_3" / 4 + "RF_Join_CTE"."Score_3_3" / 4 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 4 + "RF_Join_CTE"."Proba_1_3" / 4 + "RF_Join_CTE"."Proba_2_3" / 4 + "RF_Join_CTE"."Proba_3_3" / 4 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 4 + "RF_Join_CTE"."LogProba_1_3" / 4 + "RF_Join_CTE"."LogProba_2_3" / 4 + "RF_Join_CTE"."LogProba_3_3" / 4 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte