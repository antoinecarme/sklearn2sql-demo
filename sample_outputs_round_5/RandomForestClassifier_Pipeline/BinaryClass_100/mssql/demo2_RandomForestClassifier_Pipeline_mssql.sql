-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.252356420551 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.104154492983 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -0.135196460066 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN -0.0616338436391 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN -0.0962149040957 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.019928833551 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.0481385158427 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.0560423498943 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.00574675612313 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -0.111720873603 ELSE [ADS].[Feature_9] END AS impter_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN -0.0871924512169 ELSE [ADS].[Feature_10] END AS impter_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN 0.0717046414672 ELSE [ADS].[Feature_11] END AS impter_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN 0.173799192171 ELSE [ADS].[Feature_12] END AS impter_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.0450470378305 ELSE [ADS].[Feature_13] END AS impter_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN 0.227685124346 ELSE [ADS].[Feature_14] END AS impter_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN 0.234055462492 ELSE [ADS].[Feature_15] END AS impter_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 0.011398509548 ELSE [ADS].[Feature_16] END AS impter_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN -0.0440364888646 ELSE [ADS].[Feature_17] END AS impter_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN -0.0383929156568 ELSE [ADS].[Feature_18] END AS impter_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN 0.144844693599 ELSE [ADS].[Feature_19] END AS impter_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN -0.0996560858303 ELSE [ADS].[Feature_20] END AS impter_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN -0.0494491917713 ELSE [ADS].[Feature_21] END AS impter_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN 0.0164061861283 ELSE [ADS].[Feature_22] END AS impter_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN -0.214265859704 ELSE [ADS].[Feature_23] END AS impter_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN 0.15919118402 ELSE [ADS].[Feature_24] END AS impter_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN -0.0463556770676 ELSE [ADS].[Feature_25] END AS impter_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN 0.0263783856229 ELSE [ADS].[Feature_26] END AS impter_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN 0.0562268505534 ELSE [ADS].[Feature_27] END AS impter_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN 0.135520249925 ELSE [ADS].[Feature_28] END AS impter_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.0683774359533 ELSE [ADS].[Feature_29] END AS impter_31, CASE WHEN ([ADS].[Feature_30] IS NULL) THEN -0.104808905647 ELSE [ADS].[Feature_30] END AS impter_32, CASE WHEN ([ADS].[Feature_31] IS NULL) THEN -0.0148151147563 ELSE [ADS].[Feature_31] END AS impter_33, CASE WHEN ([ADS].[Feature_32] IS NULL) THEN 0.0791150554568 ELSE [ADS].[Feature_32] END AS impter_34, CASE WHEN ([ADS].[Feature_33] IS NULL) THEN -0.0553708313825 ELSE [ADS].[Feature_33] END AS impter_35, CASE WHEN ([ADS].[Feature_34] IS NULL) THEN 0.199214338479 ELSE [ADS].[Feature_34] END AS impter_36, CASE WHEN ([ADS].[Feature_35] IS NULL) THEN 0.11760311485 ELSE [ADS].[Feature_35] END AS impter_37, CASE WHEN ([ADS].[Feature_36] IS NULL) THEN -0.267032456357 ELSE [ADS].[Feature_36] END AS impter_38, CASE WHEN ([ADS].[Feature_37] IS NULL) THEN -0.0214643054817 ELSE [ADS].[Feature_37] END AS impter_39, CASE WHEN ([ADS].[Feature_38] IS NULL) THEN -0.0715507838586 ELSE [ADS].[Feature_38] END AS impter_40, CASE WHEN ([ADS].[Feature_39] IS NULL) THEN 0.210389181197 ELSE [ADS].[Feature_39] END AS impter_41, CASE WHEN ([ADS].[Feature_40] IS NULL) THEN -0.130915521131 ELSE [ADS].[Feature_40] END AS impter_42, CASE WHEN ([ADS].[Feature_41] IS NULL) THEN -0.194663136547 ELSE [ADS].[Feature_41] END AS impter_43, CASE WHEN ([ADS].[Feature_42] IS NULL) THEN 0.0671950222297 ELSE [ADS].[Feature_42] END AS impter_44, CASE WHEN ([ADS].[Feature_43] IS NULL) THEN 0.0374241130269 ELSE [ADS].[Feature_43] END AS impter_45, CASE WHEN ([ADS].[Feature_44] IS NULL) THEN -0.0672476162963 ELSE [ADS].[Feature_44] END AS impter_46, CASE WHEN ([ADS].[Feature_45] IS NULL) THEN -0.161124135801 ELSE [ADS].[Feature_45] END AS impter_47, CASE WHEN ([ADS].[Feature_46] IS NULL) THEN 0.127248297057 ELSE [ADS].[Feature_46] END AS impter_48, CASE WHEN ([ADS].[Feature_47] IS NULL) THEN 0.108410039904 ELSE [ADS].[Feature_47] END AS impter_49, CASE WHEN ([ADS].[Feature_48] IS NULL) THEN -0.0695661311731 ELSE [ADS].[Feature_48] END AS impter_50, CASE WHEN ([ADS].[Feature_49] IS NULL) THEN 0.0786956091617 ELSE [ADS].[Feature_49] END AS impter_51, CASE WHEN ([ADS].[Feature_50] IS NULL) THEN 0.19480885869 ELSE [ADS].[Feature_50] END AS impter_52, CASE WHEN ([ADS].[Feature_51] IS NULL) THEN 0.0388271755974 ELSE [ADS].[Feature_51] END AS impter_53, CASE WHEN ([ADS].[Feature_52] IS NULL) THEN -0.0893952846654 ELSE [ADS].[Feature_52] END AS impter_54, CASE WHEN ([ADS].[Feature_53] IS NULL) THEN -0.171743465637 ELSE [ADS].[Feature_53] END AS impter_55, CASE WHEN ([ADS].[Feature_54] IS NULL) THEN 0.0350005931464 ELSE [ADS].[Feature_54] END AS impter_56, CASE WHEN ([ADS].[Feature_55] IS NULL) THEN 0.0740066672859 ELSE [ADS].[Feature_55] END AS impter_57, CASE WHEN ([ADS].[Feature_56] IS NULL) THEN 0.0991234062285 ELSE [ADS].[Feature_56] END AS impter_58, CASE WHEN ([ADS].[Feature_57] IS NULL) THEN -0.0656117121233 ELSE [ADS].[Feature_57] END AS impter_59, CASE WHEN ([ADS].[Feature_58] IS NULL) THEN -0.223224640605 ELSE [ADS].[Feature_58] END AS impter_60, CASE WHEN ([ADS].[Feature_59] IS NULL) THEN -0.0923185681367 ELSE [ADS].[Feature_59] END AS impter_61, CASE WHEN ([ADS].[Feature_60] IS NULL) THEN -0.187468476322 ELSE [ADS].[Feature_60] END AS impter_62, CASE WHEN ([ADS].[Feature_61] IS NULL) THEN 0.0473645905369 ELSE [ADS].[Feature_61] END AS impter_63, CASE WHEN ([ADS].[Feature_62] IS NULL) THEN -0.209028690131 ELSE [ADS].[Feature_62] END AS impter_64, CASE WHEN ([ADS].[Feature_63] IS NULL) THEN -0.0276342387461 ELSE [ADS].[Feature_63] END AS impter_65, CASE WHEN ([ADS].[Feature_64] IS NULL) THEN 0.0760415285825 ELSE [ADS].[Feature_64] END AS impter_66, CASE WHEN ([ADS].[Feature_65] IS NULL) THEN 0.0308133945748 ELSE [ADS].[Feature_65] END AS impter_67, CASE WHEN ([ADS].[Feature_66] IS NULL) THEN -0.0642008237231 ELSE [ADS].[Feature_66] END AS impter_68, CASE WHEN ([ADS].[Feature_67] IS NULL) THEN -0.0377631224946 ELSE [ADS].[Feature_67] END AS impter_69, CASE WHEN ([ADS].[Feature_68] IS NULL) THEN -0.0917930690857 ELSE [ADS].[Feature_68] END AS impter_70, CASE WHEN ([ADS].[Feature_69] IS NULL) THEN 0.0841606593556 ELSE [ADS].[Feature_69] END AS impter_71, CASE WHEN ([ADS].[Feature_70] IS NULL) THEN -0.0401022497274 ELSE [ADS].[Feature_70] END AS impter_72, CASE WHEN ([ADS].[Feature_71] IS NULL) THEN -0.257322617113 ELSE [ADS].[Feature_71] END AS impter_73, CASE WHEN ([ADS].[Feature_72] IS NULL) THEN 0.0841092550787 ELSE [ADS].[Feature_72] END AS impter_74, CASE WHEN ([ADS].[Feature_73] IS NULL) THEN 0.0336682266289 ELSE [ADS].[Feature_73] END AS impter_75, CASE WHEN ([ADS].[Feature_74] IS NULL) THEN -0.0627829224461 ELSE [ADS].[Feature_74] END AS impter_76, CASE WHEN ([ADS].[Feature_75] IS NULL) THEN 0.259824350587 ELSE [ADS].[Feature_75] END AS impter_77, CASE WHEN ([ADS].[Feature_76] IS NULL) THEN -0.121232946161 ELSE [ADS].[Feature_76] END AS impter_78, CASE WHEN ([ADS].[Feature_77] IS NULL) THEN -0.120001790233 ELSE [ADS].[Feature_77] END AS impter_79, CASE WHEN ([ADS].[Feature_78] IS NULL) THEN 0.035365794719 ELSE [ADS].[Feature_78] END AS impter_80, CASE WHEN ([ADS].[Feature_79] IS NULL) THEN 0.246257766597 ELSE [ADS].[Feature_79] END AS impter_81, CASE WHEN ([ADS].[Feature_80] IS NULL) THEN 0.0932284084741 ELSE [ADS].[Feature_80] END AS impter_82, CASE WHEN ([ADS].[Feature_81] IS NULL) THEN 0.0443178849176 ELSE [ADS].[Feature_81] END AS impter_83, CASE WHEN ([ADS].[Feature_82] IS NULL) THEN -0.28113217583 ELSE [ADS].[Feature_82] END AS impter_84, CASE WHEN ([ADS].[Feature_83] IS NULL) THEN 0.10314204036 ELSE [ADS].[Feature_83] END AS impter_85, CASE WHEN ([ADS].[Feature_84] IS NULL) THEN -0.183337993666 ELSE [ADS].[Feature_84] END AS impter_86, CASE WHEN ([ADS].[Feature_85] IS NULL) THEN -0.0707397514042 ELSE [ADS].[Feature_85] END AS impter_87, CASE WHEN ([ADS].[Feature_86] IS NULL) THEN -0.0182266184635 ELSE [ADS].[Feature_86] END AS impter_88, CASE WHEN ([ADS].[Feature_87] IS NULL) THEN -0.00495434892783 ELSE [ADS].[Feature_87] END AS impter_89, CASE WHEN ([ADS].[Feature_88] IS NULL) THEN -0.0236605386259 ELSE [ADS].[Feature_88] END AS impter_90, CASE WHEN ([ADS].[Feature_89] IS NULL) THEN 0.0103463229818 ELSE [ADS].[Feature_89] END AS impter_91, CASE WHEN ([ADS].[Feature_90] IS NULL) THEN 0.0163764049373 ELSE [ADS].[Feature_90] END AS impter_92, CASE WHEN ([ADS].[Feature_91] IS NULL) THEN -0.106275510619 ELSE [ADS].[Feature_91] END AS impter_93, CASE WHEN ([ADS].[Feature_92] IS NULL) THEN 0.0134609487363 ELSE [ADS].[Feature_92] END AS impter_94, CASE WHEN ([ADS].[Feature_93] IS NULL) THEN -0.020368938085 ELSE [ADS].[Feature_93] END AS impter_95, CASE WHEN ([ADS].[Feature_94] IS NULL) THEN -0.0734168162351 ELSE [ADS].[Feature_94] END AS impter_96, CASE WHEN ([ADS].[Feature_95] IS NULL) THEN -0.0724639987652 ELSE [ADS].[Feature_95] END AS impter_97, CASE WHEN ([ADS].[Feature_96] IS NULL) THEN 0.0742592419858 ELSE [ADS].[Feature_96] END AS impter_98, CASE WHEN ([ADS].[Feature_97] IS NULL) THEN -0.288231637828 ELSE [ADS].[Feature_97] END AS impter_99, CASE WHEN ([ADS].[Feature_98] IS NULL) THEN -0.0200000845524 ELSE [ADS].[Feature_98] END AS impter_100, CASE WHEN ([ADS].[Feature_99] IS NULL) THEN -0.155471009765 ELSE [ADS].[Feature_99] END AS impter_101 
FROM [BinaryClass_100] AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - -0.252356420551) / 0.975466518758 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - 0.104154492983) / 1.08611541458 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - -0.135196460066) / 0.949863332882 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - -0.0616338436391) / 1.02693845001 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - -0.0962149040957) / 1.0011898325 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - 0.019928833551) / 0.944196005291 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - -0.0481385158427) / 0.860597164812 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.0560423498943) / 1.01402677837 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - 0.00574675612313) / 0.854668914376 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - -0.111720873603) / 0.948217905169 AS scaler_11, (CAST([ADS_imp_1_OUT].impter_12 AS FLOAT) - -0.0871924512169) / 0.845930257599 AS scaler_12, (CAST([ADS_imp_1_OUT].impter_13 AS FLOAT) - 0.0717046414672) / 0.913341517447 AS scaler_13, (CAST([ADS_imp_1_OUT].impter_14 AS FLOAT) - 0.173799192171) / 1.05104506982 AS scaler_14, (CAST([ADS_imp_1_OUT].impter_15 AS FLOAT) - -0.0450470378305) / 1.06661558777 AS scaler_15, (CAST([ADS_imp_1_OUT].impter_16 AS FLOAT) - 0.227685124346) / 0.912605226848 AS scaler_16, (CAST([ADS_imp_1_OUT].impter_17 AS FLOAT) - 0.234055462492) / 1.08963314675 AS scaler_17, (CAST([ADS_imp_1_OUT].impter_18 AS FLOAT) - 0.011398509548) / 0.957641466029 AS scaler_18, (CAST([ADS_imp_1_OUT].impter_19 AS FLOAT) - -0.0440364888646) / 0.996625984679 AS scaler_19, (CAST([ADS_imp_1_OUT].impter_20 AS FLOAT) - -0.0383929156568) / 1.00086567916 AS scaler_20, (CAST([ADS_imp_1_OUT].impter_21 AS FLOAT) - 0.144844693599) / 1.13857198362 AS scaler_21, (CAST([ADS_imp_1_OUT].impter_22 AS FLOAT) - -0.0996560858303) / 0.818361287397 AS scaler_22, (CAST([ADS_imp_1_OUT].impter_23 AS FLOAT) - -0.0494491917713) / 0.997719495142 AS scaler_23, (CAST([ADS_imp_1_OUT].impter_24 AS FLOAT) - 0.0164061861283) / 0.989425569868 AS scaler_24, (CAST([ADS_imp_1_OUT].impter_25 AS FLOAT) - -0.214265859704) / 1.21533898786 AS scaler_25, (CAST([ADS_imp_1_OUT].impter_26 AS FLOAT) - 0.15919118402) / 0.844302705169 AS scaler_26, (CAST([ADS_imp_1_OUT].impter_27 AS FLOAT) - -0.0463556770676) / 0.936577725485 AS scaler_27, (CAST([ADS_imp_1_OUT].impter_28 AS FLOAT) - 0.0263783856229) / 0.881633824462 AS scaler_28, (CAST([ADS_imp_1_OUT].impter_29 AS FLOAT) - 0.0562268505534) / 1.03298016628 AS scaler_29, (CAST([ADS_imp_1_OUT].impter_30 AS FLOAT) - 0.135520249925) / 1.03624349356 AS scaler_30, (CAST([ADS_imp_1_OUT].impter_31 AS FLOAT) - 0.0683774359533) / 1.01016248584 AS scaler_31, (CAST([ADS_imp_1_OUT].impter_32 AS FLOAT) - -0.104808905647) / 1.16984804272 AS scaler_32, (CAST([ADS_imp_1_OUT].impter_33 AS FLOAT) - -0.0148151147563) / 1.0418773609 AS scaler_33, (CAST([ADS_imp_1_OUT].impter_34 AS FLOAT) - 0.0791150554568) / 0.950073223737 AS scaler_34, (CAST([ADS_imp_1_OUT].impter_35 AS FLOAT) - -0.0553708313825) / 0.966500094536 AS scaler_35, (CAST([ADS_imp_1_OUT].impter_36 AS FLOAT) - 0.199214338479) / 0.867761186257 AS scaler_36, (CAST([ADS_imp_1_OUT].impter_37 AS FLOAT) - 0.11760311485) / 1.22377391785 AS scaler_37, (CAST([ADS_imp_1_OUT].impter_38 AS FLOAT) - -0.267032456357) / 1.28959678857 AS scaler_38, (CAST([ADS_imp_1_OUT].impter_39 AS FLOAT) - -0.0214643054817) / 0.989875792493 AS scaler_39, (CAST([ADS_imp_1_OUT].impter_40 AS FLOAT) - -0.0715507838586) / 0.914323159197 AS scaler_40, (CAST([ADS_imp_1_OUT].impter_41 AS FLOAT) - 0.210389181197) / 0.899546408621 AS scaler_41, (CAST([ADS_imp_1_OUT].impter_42 AS FLOAT) - -0.130915521131) / 0.839183060211 AS scaler_42, (CAST([ADS_imp_1_OUT].impter_43 AS FLOAT) - -0.194663136547) / 0.818144922802 AS scaler_43, (CAST([ADS_imp_1_OUT].impter_44 AS FLOAT) - 0.0671950222297) / 0.99516335564 AS scaler_44, (CAST([ADS_imp_1_OUT].impter_45 AS FLOAT) - 0.0374241130269) / 0.944451328352 AS scaler_45, (CAST([ADS_imp_1_OUT].impter_46 AS FLOAT) - -0.0672476162963) / 1.03404894423 AS scaler_46, (CAST([ADS_imp_1_OUT].impter_47 AS FLOAT) - -0.161124135801) / 0.941840304773 AS scaler_47, (CAST([ADS_imp_1_OUT].impter_48 AS FLOAT) - 0.127248297057) / 1.04512094066 AS scaler_48, (CAST([ADS_imp_1_OUT].impter_49 AS FLOAT) - 0.108410039904) / 0.972823922224 AS scaler_49, (CAST([ADS_imp_1_OUT].impter_50 AS FLOAT) - -0.0695661311731) / 1.02079285006 AS scaler_50, (CAST([ADS_imp_1_OUT].impter_51 AS FLOAT) - 0.0786956091617) / 1.20407579769 AS scaler_51, (CAST([ADS_imp_1_OUT].impter_52 AS FLOAT) - 0.19480885869) / 1.06654649597 AS scaler_52, (CAST([ADS_imp_1_OUT].impter_53 AS FLOAT) - 0.0388271755974) / 1.20101314786 AS scaler_53, (CAST([ADS_imp_1_OUT].impter_54 AS FLOAT) - -0.0893952846654) / 1.05387375532 AS scaler_54, (CAST([ADS_imp_1_OUT].impter_55 AS FLOAT) - -0.171743465637) / 0.973019798813 AS scaler_55, (CAST([ADS_imp_1_OUT].impter_56 AS FLOAT) - 0.0350005931464) / 1.0338678567 AS scaler_56, (CAST([ADS_imp_1_OUT].impter_57 AS FLOAT) - 0.0740066672859) / 0.963489005155 AS scaler_57, (CAST([ADS_imp_1_OUT].impter_58 AS FLOAT) - 0.0991234062285) / 0.878804509449 AS scaler_58, (CAST([ADS_imp_1_OUT].impter_59 AS FLOAT) - -0.0656117121233) / 1.02489599343 AS scaler_59, (CAST([ADS_imp_1_OUT].impter_60 AS FLOAT) - -0.223224640605) / 0.839688927746 AS scaler_60, (CAST([ADS_imp_1_OUT].impter_61 AS FLOAT) - -0.0923185681367) / 1.24105836846 AS scaler_61, (CAST([ADS_imp_1_OUT].impter_62 AS FLOAT) - -0.187468476322) / 0.932470531446 AS scaler_62, (CAST([ADS_imp_1_OUT].impter_63 AS FLOAT) - 0.0473645905369) / 1.09827580093 AS scaler_63, (CAST([ADS_imp_1_OUT].impter_64 AS FLOAT) - -0.209028690131) / 0.945764262607 AS scaler_64, (CAST([ADS_imp_1_OUT].impter_65 AS FLOAT) - -0.0276342387461) / 0.989360528398 AS scaler_65, (CAST([ADS_imp_1_OUT].impter_66 AS FLOAT) - 0.0760415285825) / 1.06659166108 AS scaler_66, (CAST([ADS_imp_1_OUT].impter_67 AS FLOAT) - 0.0308133945748) / 0.933464525319 AS scaler_67, (CAST([ADS_imp_1_OUT].impter_68 AS FLOAT) - -0.0642008237231) / 0.973887991928 AS scaler_68, (CAST([ADS_imp_1_OUT].impter_69 AS FLOAT) - -0.0377631224946) / 1.10972406149 AS scaler_69, (CAST([ADS_imp_1_OUT].impter_70 AS FLOAT) - -0.0917930690857) / 1.04557657322 AS scaler_70, (CAST([ADS_imp_1_OUT].impter_71 AS FLOAT) - 0.0841606593556) / 1.16432387684 AS scaler_71, (CAST([ADS_imp_1_OUT].impter_72 AS FLOAT) - -0.0401022497274) / 1.03389441624 AS scaler_72, (CAST([ADS_imp_1_OUT].impter_73 AS FLOAT) - -0.257322617113) / 0.886741788538 AS scaler_73, (CAST([ADS_imp_1_OUT].impter_74 AS FLOAT) - 0.0841092550787) / 0.996903035393 AS scaler_74, (CAST([ADS_imp_1_OUT].impter_75 AS FLOAT) - 0.0336682266289) / 1.01531233851 AS scaler_75, (CAST([ADS_imp_1_OUT].impter_76 AS FLOAT) - -0.0627829224461) / 1.00723875222 AS scaler_76, (CAST([ADS_imp_1_OUT].impter_77 AS FLOAT) - 0.259824350587) / 0.869073512154 AS scaler_77, (CAST([ADS_imp_1_OUT].impter_78 AS FLOAT) - -0.121232946161) / 0.984275265263 AS scaler_78, (CAST([ADS_imp_1_OUT].impter_79 AS FLOAT) - -0.120001790233) / 0.976291562363 AS scaler_79, (CAST([ADS_imp_1_OUT].impter_80 AS FLOAT) - 0.035365794719) / 0.909928470967 AS scaler_80, (CAST([ADS_imp_1_OUT].impter_81 AS FLOAT) - 0.246257766597) / 1.05999388795 AS scaler_81, (CAST([ADS_imp_1_OUT].impter_82 AS FLOAT) - 0.0932284084741) / 1.06384177063 AS scaler_82, (CAST([ADS_imp_1_OUT].impter_83 AS FLOAT) - 0.0443178849176) / 0.94485938154 AS scaler_83, (CAST([ADS_imp_1_OUT].impter_84 AS FLOAT) - -0.28113217583) / 0.871165827414 AS scaler_84, (CAST([ADS_imp_1_OUT].impter_85 AS FLOAT) - 0.10314204036) / 0.923147918042 AS scaler_85, (CAST([ADS_imp_1_OUT].impter_86 AS FLOAT) - -0.183337993666) / 1.12221490366 AS scaler_86, (CAST([ADS_imp_1_OUT].impter_87 AS FLOAT) - -0.0707397514042) / 0.728389395972 AS scaler_87, (CAST([ADS_imp_1_OUT].impter_88 AS FLOAT) - -0.0182266184635) / 0.948625066799 AS scaler_88, (CAST([ADS_imp_1_OUT].impter_89 AS FLOAT) - -0.00495434892783) / 0.904170759156 AS scaler_89, (CAST([ADS_imp_1_OUT].impter_90 AS FLOAT) - -0.0236605386259) / 1.07123085398 AS scaler_90, (CAST([ADS_imp_1_OUT].impter_91 AS FLOAT) - 0.0103463229818) / 0.878619749822 AS scaler_91, (CAST([ADS_imp_1_OUT].impter_92 AS FLOAT) - 0.0163764049373) / 1.00153153474 AS scaler_92, (CAST([ADS_imp_1_OUT].impter_93 AS FLOAT) - -0.106275510619) / 0.992567681616 AS scaler_93, (CAST([ADS_imp_1_OUT].impter_94 AS FLOAT) - 0.0134609487363) / 1.0758480105 AS scaler_94, (CAST([ADS_imp_1_OUT].impter_95 AS FLOAT) - -0.020368938085) / 0.941689891595 AS scaler_95, (CAST([ADS_imp_1_OUT].impter_96 AS FLOAT) - -0.0734168162351) / 1.11840749728 AS scaler_96, (CAST([ADS_imp_1_OUT].impter_97 AS FLOAT) - -0.0724639987652) / 0.893774984068 AS scaler_97, (CAST([ADS_imp_1_OUT].impter_98 AS FLOAT) - 0.0742592419858) / 0.935380752478 AS scaler_98, (CAST([ADS_imp_1_OUT].impter_99 AS FLOAT) - -0.288231637828) / 1.0075486552 AS scaler_99, (CAST([ADS_imp_1_OUT].impter_100 AS FLOAT) - -0.0200000845524) / 0.913399145665 AS scaler_100, (CAST([ADS_imp_1_OUT].impter_101 AS FLOAT) - -0.155471009765) / 1.01287420965 AS scaler_101 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_58 <= -1.0405874252319336) THEN 1 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_17 <= 0.13938842713832855) THEN 3 ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_40 <= 2.216517686843872) THEN 5 ELSE 6 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'scaler_58' AS feature, -1.0405874252319336 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.47761194029850745 AS [Proba_0.0], -0.738956716591 AS [LogProba_0.0], 0.5223880597014925 AS [Proba_1.0], -0.649344557902 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, 'scaler_17' AS feature, 0.13938842713832855 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.375 AS [Proba_0.0], -0.980829253012 AS [LogProba_0.0], 0.625 AS [Proba_1.0], -0.470003629246 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, 'scaler_40' AS feature, 2.216517686843872 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.84 AS [Proba_0.0], -0.174353387145 AS [LogProba_0.0], 0.16 AS [Proba_1.0], -1.83258146375 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0.0] AS [Proba_0.0], [DT_node_data].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data].[Proba_1.0] AS [Proba_1.0], [DT_node_data].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0.0] AS [Proba_0_0], [DT_Output].[LogProba_0.0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1.0] AS [Proba_0_1], [DT_Output].[LogProba_1.0] AS [LogProba_0_1] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_86 <= 0.16481216251850128) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_95 <= 1.692216157913208) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_89 <= 0.7796933054924011) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_98 <= 0.723348081111908) THEN 4 ELSE 5 END ELSE 6 END ELSE 7 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_21 <= 0.9742872714996338) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_12 <= 0.3421834111213684) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_53 <= -1.3950995206832886) THEN 11 ELSE 12 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.3422366976737976) THEN 14 ELSE 15 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= 1.2864015102386475) THEN 17 ELSE 18 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'scaler_86' AS feature, 0.16481216251850128 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5970149253731343 AS [Proba_0.0], -0.515813165277 AS [LogProba_0.0], 0.40298507462686567 AS [Proba_1.0], -0.908855753387 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'scaler_95' AS feature, 1.692216157913208 AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS [Proba_0.0], -1.09861228867 AS [LogProba_0.0], 0.6666666666666666 AS [Proba_1.0], -0.405465108108 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'scaler_89' AS feature, 0.7796933054924011 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21739130434782608 AS [Proba_0.0], -1.5260563035 AS [LogProba_0.0], 0.782608695652174 AS [Proba_1.0], -0.245122458033 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 3 AS node_id, 'scaler_98' AS feature, 0.723348081111908 AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1 AS [Proba_0.0], -2.30258509299 AS [LogProba_0.0], 0.9 AS [Proba_1.0], -0.105360515658 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 8 AS node_id, 'scaler_21' AS feature, 0.9742872714996338 AS threshold, 23 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.775 AS [Proba_0.0], -0.254892249629 AS [LogProba_0.0], 0.225 AS [Proba_1.0], -1.49165487678 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 9 AS node_id, 'scaler_12' AS feature, 0.3421834111213684 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8823529411764706 AS [Proba_0.0], -0.125163142954 AS [LogProba_0.0], 0.11764705882352941 AS [Proba_1.0], -2.1400661635 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 10 AS node_id, 'scaler_53' AS feature, -1.3950995206832886 AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9655172413793104 AS [Proba_0.0], -0.0350913198113 AS [LogProba_0.0], 0.034482758620689655 AS [Proba_1.0], -3.36729582999 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 13 AS node_id, 'scaler_7' AS feature, -0.3422366976737976 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS [Proba_0.0], -0.916290731874 AS [LogProba_0.0], 0.6 AS [Proba_1.0], -0.510825623766 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 16 AS node_id, 'scaler_9' AS feature, 1.2864015102386475 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS [Proba_0.0], -1.79175946923 AS [LogProba_0.0], 0.8333333333333334 AS [Proba_1.0], -0.182321556794 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0.0] AS [Proba_0.0], [DT_node_data_1].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_1].[Proba_1.0] AS [Proba_1.0], [DT_node_data_1].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0.0] AS [Proba_1_0], [DT_Output_1].[LogProba_0.0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1.0] AS [Proba_1_1], [DT_Output_1].[LogProba_1.0] AS [LogProba_1_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_23 <= 0.4725245535373688) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_23 <= -0.503165602684021) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_57 <= -1.1968247890472412) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_67 <= 0.43018314242362976) THEN 4 ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_17 <= -0.5404203534126282) THEN 7 ELSE 8 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_40 <= -1.3986904621124268) THEN 10 ELSE 11 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_63 <= 0.6343497037887573) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_55 <= -0.8039091229438782) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_100 <= 1.1319339275360107) THEN 15 ELSE 16 END ELSE 17 END ELSE 18 END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, 0.4725245535373688 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5223880597014925 AS [Proba_0.0], -0.649344557902 AS [LogProba_0.0], 0.47761194029850745 AS [Proba_1.0], -0.738956716591 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.503165602684021 AS threshold, 27 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3695652173913043 AS [Proba_0.0], -0.995428052433 AS [LogProba_0.0], 0.6304347826086957 AS [Proba_1.0], -0.461345566503 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'scaler_57' AS feature, -1.1968247890472412 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6363636363636364 AS [Proba_0.0], -0.451985123743 AS [LogProba_0.0], 0.36363636363636365 AS [Proba_1.0], -1.01160091168 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, 'scaler_67' AS feature, 0.43018314242362976 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.125 AS [Proba_0.0], -2.07944154168 AS [LogProba_0.0], 0.875 AS [Proba_1.0], -0.133531392625 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 6 AS node_id, 'scaler_17' AS feature, -0.5404203534126282 AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9285714285714286 AS [Proba_0.0], -0.0741079721537 AS [LogProba_0.0], 0.07142857142857142 AS [Proba_1.0], -2.63905732962 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 9 AS node_id, 'scaler_40' AS feature, -1.3986904621124268 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.125 AS [Proba_0.0], -2.07944154168 AS [LogProba_0.0], 0.875 AS [Proba_1.0], -0.133531392625 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 12 AS node_id, 'scaler_63' AS feature, 0.6343497037887573 AS threshold, 13 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8571428571428571 AS [Proba_0.0], -0.154150679827 AS [LogProba_0.0], 0.14285714285714285 AS [Proba_1.0], -1.94591014906 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 13 AS node_id, 'scaler_55' AS feature, -0.8039091229438782 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9473684210526315 AS [Proba_0.0], -0.0540672212703 AS [LogProba_0.0], 0.05263157894736842 AS [Proba_1.0], -2.94443897917 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 14 AS node_id, 'scaler_100' AS feature, 1.1319339275360107 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS [Proba_0.0], -0.405465108108 AS [LogProba_0.0], 0.3333333333333333 AS [Proba_1.0], -1.09861228867 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0.0] AS [Proba_0.0], [DT_node_data_2].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_2].[Proba_1.0] AS [Proba_1.0], [DT_node_data_2].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0.0] AS [Proba_2_0], [DT_Output_2].[LogProba_0.0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1.0] AS [Proba_2_1], [DT_Output_2].[LogProba_1.0] AS [LogProba_2_1] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_13 <= -0.4370805025100708) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_83 <= -0.5100976824760437) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_44 <= 0.6201094388961792) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_64 <= 0.15100274980068207) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_99 <= 1.2738730907440186) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_69 <= 0.1269495189189911) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_100 <= -0.5318394899368286) THEN 12 ELSE 13 END ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0.0] AS [Proba_0.0], [Values].[LogProba_0.0] AS [LogProba_0.0], [Values].[Proba_1.0] AS [Proba_1.0], [Values].[LogProba_1.0] AS [LogProba_1.0], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'scaler_13' AS feature, -0.4370805025100708 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.44776119402985076 AS [Proba_0.0], -0.803495237729 AS [LogProba_0.0], 0.5522388059701493 AS [Proba_1.0], -0.593774706747 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 1 AS node_id, 'scaler_83' AS feature, -0.5100976824760437 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12 AS [Proba_0.0], -2.1202635362 AS [LogProba_0.0], 0.88 AS [Proba_1.0], -0.12783337151 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 2 AS node_id, 'scaler_44' AS feature, 0.6201094388961792 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6 AS [Proba_0.0], -0.510825623766 AS [LogProba_0.0], 0.4 AS [Proba_1.0], -0.916290731874 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 6 AS node_id, 'scaler_64' AS feature, 0.15100274980068207 AS threshold, 27 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6428571428571429 AS [Proba_0.0], -0.441832752279 AS [LogProba_0.0], 0.35714285714285715 AS [Proba_1.0], -1.02961941718 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 7 AS node_id, 'scaler_99' AS feature, 1.2738730907440186 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9090909090909091 AS [Proba_0.0], -0.0953101798043 AS [LogProba_0.0], 0.09090909090909091 AS [Proba_1.0], -2.3978952728 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 10 AS node_id, 'scaler_69' AS feature, 0.1269495189189911 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.35 AS [Proba_0.0], -1.0498221245 AS [LogProba_0.0], 0.65 AS [Proba_1.0], -0.430782916092 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 11 AS node_id, 'scaler_100' AS feature, -0.5318394899368286 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7777777777777778 AS [Proba_0.0], -0.251314428281 AS [LogProba_0.0], 0.2222222222222222 AS [Proba_1.0], -1.50407739678 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS [Proba_0.0], 0.0 AS [LogProba_0.0], 0.0 AS [Proba_1.0], -1.79769313486231e+308 AS [LogProba_1.0], 0 AS [Decision] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Proba_0.0], -1.79769313486231e+308 AS [LogProba_0.0], 1.0 AS [Proba_1.0], 0.0 AS [LogProba_1.0], 1 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0.0] AS [Proba_0.0], [DT_node_data_3].[LogProba_0.0] AS [LogProba_0.0], [DT_node_data_3].[Proba_1.0] AS [Proba_1.0], [DT_node_data_3].[LogProba_1.0] AS [LogProba_1.0], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0.0] AS [Proba_3_0], [DT_Output_3].[LogProba_0.0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1.0] AS [Proba_3_1], [DT_Output_3].[LogProba_1.0] AS [LogProba_3_1] 
FROM [DT_Output_3]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0].join_key_0 AS join_key_0, [RF_Tree_0].[Score_0_0] AS [Score_0_0], [RF_Tree_0].[Proba_0_0] AS [Proba_0_0], [RF_Tree_0].[LogProba_0_0] AS [LogProba_0_0], [RF_Tree_0].[Score_0_1] AS [Score_0_1], [RF_Tree_0].[Proba_0_1] AS [Proba_0_1], [RF_Tree_0].[LogProba_0_1] AS [LogProba_0_1], [RF_Tree_1].join_key_1 AS join_key_1, [RF_Tree_1].[Score_1_0] AS [Score_1_0], [RF_Tree_1].[Proba_1_0] AS [Proba_1_0], [RF_Tree_1].[LogProba_1_0] AS [LogProba_1_0], [RF_Tree_1].[Score_1_1] AS [Score_1_1], [RF_Tree_1].[Proba_1_1] AS [Proba_1_1], [RF_Tree_1].[LogProba_1_1] AS [LogProba_1_1], [RF_Tree_2].join_key_2 AS join_key_2, [RF_Tree_2].[Score_2_0] AS [Score_2_0], [RF_Tree_2].[Proba_2_0] AS [Proba_2_0], [RF_Tree_2].[LogProba_2_0] AS [LogProba_2_0], [RF_Tree_2].[Score_2_1] AS [Score_2_1], [RF_Tree_2].[Proba_2_1] AS [Proba_2_1], [RF_Tree_2].[LogProba_2_1] AS [LogProba_2_1], [RF_Tree_3].join_key_3 AS join_key_3, [RF_Tree_3].[Score_3_0] AS [Score_3_0], [RF_Tree_3].[Proba_3_0] AS [Proba_3_0], [RF_Tree_3].[LogProba_3_0] AS [LogProba_3_0], [RF_Tree_3].[Score_3_1] AS [Score_3_1], [RF_Tree_3].[Proba_3_1] AS [Proba_3_1], [RF_Tree_3].[LogProba_3_1] AS [LogProba_3_1] 
FROM [RF_Tree_0] LEFT OUTER JOIN [RF_Tree_1] ON [RF_Tree_0].join_key_0 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_2] ON [RF_Tree_2].join_key_2 = [RF_Tree_1].join_key_1 LEFT OUTER JOIN [RF_Tree_3] ON [RF_Tree_3].join_key_3 = [RF_Tree_2].join_key_2), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0 AS [KEY], [RF_Join_CTE].[Score_0_0] / 4 + [RF_Join_CTE].[Score_1_0] / 4 + [RF_Join_CTE].[Score_2_0] / 4 + [RF_Join_CTE].[Score_3_0] / 4 AS [Score_0], [RF_Join_CTE].[Proba_0_0] / 4 + [RF_Join_CTE].[Proba_1_0] / 4 + [RF_Join_CTE].[Proba_2_0] / 4 + [RF_Join_CTE].[Proba_3_0] / 4 AS [Proba_0], [RF_Join_CTE].[LogProba_0_0] / 4 + [RF_Join_CTE].[LogProba_1_0] / 4 + [RF_Join_CTE].[LogProba_2_0] / 4 + [RF_Join_CTE].[LogProba_3_0] / 4 AS [LogProba_0], [RF_Join_CTE].[Score_0_1] / 4 + [RF_Join_CTE].[Score_1_1] / 4 + [RF_Join_CTE].[Score_2_1] / 4 + [RF_Join_CTE].[Score_3_1] / 4 AS [Score_1], [RF_Join_CTE].[Proba_0_1] / 4 + [RF_Join_CTE].[Proba_1_1] / 4 + [RF_Join_CTE].[Proba_2_1] / 4 + [RF_Join_CTE].[Proba_3_1] / 4 AS [Proba_1], [RF_Join_CTE].[LogProba_0_1] / 4 + [RF_Join_CTE].[LogProba_1_1] / 4 + [RF_Join_CTE].[LogProba_2_1] / 4 + [RF_Join_CTE].[LogProba_3_1] / 4 AS [LogProba_1] 
FROM [RF_Join_CTE]), 
orig_cte AS 
(SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Score_0] AS [Score_0], [RF_AVG_Scores].[Score_1] AS [Score_1], [RF_AVG_Scores].[Proba_0] AS [Proba_0], [RF_AVG_Scores].[Proba_1] AS [Proba_1], [RF_AVG_Scores].[LogProba_0] AS [LogProba_0], [RF_AVG_Scores].[LogProba_1] AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [RF_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], arg_max_cte.[arg_max_Proba] AS [Decision] 
FROM arg_max_cte