-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 14.0831968504 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 19.0191076115 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 91.7118897638 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 652.424671916 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0968055380577 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.104805485564 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0876977427822 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0489006430446 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.18112335958 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0630376115486 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.410748293963 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 1.21939501312 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 2.90654488189 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 41.1231023622 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.00706835170604 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.025598015748 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0315339183727 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0119848766404 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.0207874829396 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.00389341286089 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 16.1808923885 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 25.2414435696 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 106.690393701 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 872.238582677 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.132393937008 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.251353989501 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.263815637795 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.114107792651 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.288911286089 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.0838917060367 ELSE "ADS"."Feature_29" END AS impter_31 
FROM "BreastCancer" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 14.0831968504) / 3.58372360357 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 19.0191076115) / 4.16872919973 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 91.7118897638) / 24.7405030131 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 652.424671916) / 361.406340946 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0968055380577) / 0.0142750282315 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.104805485564) / 0.052564640227 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.0876977427822) / 0.0789716395799 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.0489006430446) / 0.0390994514233 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.18112335958) / 0.0277256176537 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.0630376115486) / 0.00705628740437 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.410748293963) / 0.299028974585 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 1.21939501312) / 0.554118745057 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 2.90654488189) / 2.19671897682 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 41.1231023622) / 50.0238619245 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.00706835170604) / 0.00286192611154 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.025598015748) / 0.0177969043718 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.0315339183727) / 0.0294145736829 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.0119848766404) / 0.00634557179163 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.0207874829396) / 0.00846130427006 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 0.00389341286089) / 0.00282534669377 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 16.1808923885) / 4.8559275363 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 25.2414435696) / 6.00010024108 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 106.690393701) / 33.9442803133 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 872.238582677) / 572.065477877 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.132393937008) / 0.0230922755997 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.251353989501) / 0.15283768085 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.263815637795) / 0.197727633616 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.114107792651) / 0.0658849454932 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.288911286089) / 0.060405414696 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.0838917060367) / 0.0170341598582 AS scaler_31 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.08094985783100128) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= 0.30933526158332825) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.24326741695404053) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.3451420068740845) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.5339577198028564) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.4044005274772644) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.6393965482711792) THEN 12 ELSE 13 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.2045993059873581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.6798549890518188) THEN 16 ELSE 17 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -1.4860490560531616) THEN 19 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.03873090073466301) THEN 21 ELSE 22 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_8' AS feature, -0.08094985783100128 AS threshold, 241 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3753280839895013 AS "Proba_0.0", -0.979954744867 AS "LogProba_0.0", 0.6246719160104987 AS "Proba_1.0", -0.470528701455 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, 0.30933526158332825 AS threshold, 139 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06637168141592921 AS "Proba_0.0", -2.71248479817 AS "LogProba_0.0", 0.9336283185840708 AS "Proba_1.0", -0.0686768657962 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'scaler_2' AS feature, 0.24326741695404053 AS threshold, 133 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.027777777777777776 AS "Proba_0.0", -3.58351893846 AS "LogProba_0.0", 0.9722222222222222 AS "Proba_1.0", -0.0281708769667 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'scaler_19' AS feature, 0.3451420068740845 AS threshold, 130 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.014285714285714285 AS "Proba_0.0", -4.24849524205 AS "LogProba_0.0", 0.9857142857142858 AS "Proba_1.0", -0.0143887374521 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 115 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'scaler_14' AS feature, 0.5339577198028564 AS threshold, 15 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10344827586206896 AS "Proba_0.0", -2.26868354132 AS "LogProba_0.0", 0.896551724137931 AS "Proba_1.0", -0.109199291965 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'scaler_23' AS feature, -0.4044005274772644 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, 'scaler_23' AS feature, -0.6393965482711792 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9 AS "Proba_0.0", -0.105360515658 AS "LogProba_0.0", 0.1 AS "Proba_1.0", -2.30258509299 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 14 AS node_id, 'scaler_4' AS feature, -0.2045993059873581 AS threshold, 102 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8258064516129032 AS "Proba_0.0", -0.191394853 AS "LogProba_0.0", 0.17419354838709677 AS "Proba_1.0", -1.74758825091 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 15 AS node_id, 'scaler_29' AS feature, 0.6798549890518188 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.20833333333333334 AS "Proba_0.0", -1.56861591791 AS "LogProba_0.0", 0.7916666666666666 AS "Proba_1.0", -0.233614851182 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 18 AS node_id, 'scaler_23' AS feature, -1.4860490560531616 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9389312977099237 AS "Proba_0.0", -0.0630129678287 AS "LogProba_0.0", 0.061068702290076333 AS "Proba_1.0", -2.79575578152 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 20 AS node_id, 'scaler_9' AS feature, 0.03873090073466301 AS threshold, 83 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.968503937007874 AS "Proba_0.0", -0.0320027310862 AS "LogProba_0.0", 0.031496062992125984 AS "Proba_1.0", -3.45789272534 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 80 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.2738441526889801) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.5444279313087463) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.45249468088150024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.40891584753990173) THEN 4 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.4574275612831116) THEN 6 ELSE 7 END END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.2760838270187378) THEN 10 ELSE 11 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.758651852607727) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.0262222290039062) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= 0.5303518772125244) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.1708804965019226) THEN 18 ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.8813495635986328) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.5381900072097778) THEN 22 ELSE 23 END ELSE 24 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_29' AS feature, 0.2738441526889801 AS threshold, 239 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3858267716535433 AS "Proba_0.0", -0.952366788348 AS "LogProba_0.0", 0.6141732283464567 AS "Proba_1.0", -0.487478259769 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, 0.5444279313087463 AS threshold, 146 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05106382978723404 AS "Proba_0.0", -2.97467886436 AS "LogProba_0.0", 0.948936170212766 AS "Proba_1.0", -0.052413742684 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'scaler_24' AS feature, 0.45249468088150024 AS threshold, 141 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.022123893805309734 AS "Proba_0.0", -3.81109708684 AS "LogProba_0.0", 0.9778761061946902 AS "Proba_1.0", -0.0223722977545 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'scaler_7' AS feature, 0.40891584753990173 AS threshold, 137 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0045045045045045045 AS "Proba_0.0", -5.40267738187 AS "LogProba_0.0", 0.9954954954954955 AS "Proba_1.0", -0.00451468035453 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 0.4574275612831116 AS threshold, 8 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.9166666666666666 AS "Proba_1.0", -0.0870113769896 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 9 AS node_id, 'scaler_27' AS feature, 0.2760838270187378 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7777777777777778 AS "Proba_0.0", -0.251314428281 AS "LogProba_0.0", 0.2222222222222222 AS "Proba_1.0", -1.50407739678 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 12 AS node_id, 'scaler_14' AS feature, -0.758651852607727 AS threshold, 93 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9246575342465754 AS "Proba_0.0", -0.0783318432699 AS "LogProba_0.0", 0.07534246575342465 AS "Proba_1.0", -2.58571134891 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, 'scaler_2' AS feature, -1.0262222290039062 AS threshold, 90 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9507042253521126 AS "Proba_0.0", -0.0505522791628 AS "LogProba_0.0", 0.04929577464788732 AS "Proba_1.0", -3.00991690855 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 16 AS node_id, 'scaler_29' AS feature, 0.5303518772125244 AS threshold, 89 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9642857142857143 AS "Proba_0.0", -0.0363676441709 AS "LogProba_0.0", 0.03571428571428571 AS "Proba_1.0", -3.33220451018 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 17 AS node_id, 'scaler_15' AS feature, -0.1708804965019226 AS threshold, 11 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7333333333333333 AS "Proba_0.0", -0.310154928304 AS "LogProba_0.0", 0.26666666666666666 AS "Proba_1.0", -1.32175583998 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 20 AS node_id, 'scaler_3' AS feature, -0.8813495635986328 AS threshold, 78 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.992 AS "Proba_0.0", -0.00803217169726 AS "LogProba_0.0", 0.008 AS "Proba_1.0", -4.8283137373 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 21 AS node_id, 'scaler_19' AS feature, 0.5381900072097778 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 76 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.19666819274425507) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.6192381978034973) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -1.4154284000396729) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= -0.38577795028686523) THEN 4 ELSE 5 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 0.5344946384429932) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= -0.7998709678649902) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= -0.5049680471420288) THEN 9 ELSE 10 END ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -1.3176689147949219) THEN 13 ELSE 14 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 <= 1.9551891088485718) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.1111433207988739) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.5454651713371277) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 <= 0.29628902673721313) THEN 21 ELSE 22 END ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= -0.21538469195365906) THEN 25 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.31263023614883423) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_16 <= -0.3511102795600891) THEN 28 ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.028956428170204163) THEN 31 ELSE 32 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_15' AS feature, -0.19666819274425507 AS threshold, 237 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.33070866141732286 AS "Proba_0.0", -1.10651746818 AS "LogProba_0.0", 0.6692913385826772 AS "Proba_1.0", -0.401535829968 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'scaler_8' AS feature, 0.6192381978034973 AS threshold, 149 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08130081300813008 AS "Proba_0.0", -2.50959926238 AS "LogProba_0.0", 0.9186991869918699 AS "Proba_1.0", -0.0847965366601 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, -1.4154284000396729 AS threshold, 142 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.042735042735042736 AS "Proba_0.0", -3.15273602236 AS "LogProba_0.0", 0.9572649572649573 AS "Proba_1.0", -0.0436750635027 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'scaler_15' AS feature, -0.38577795028686523 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8571428571428571 AS "Proba_0.0", -0.154150679827 AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, 'scaler_28' AS feature, 0.5344946384429932 AS threshold, 138 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.01762114537444934 AS "Proba_0.0", -4.03865565636 AS "LogProba_0.0", 0.9823788546255506 AS "Proba_1.0", -0.0177782460213 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, 'scaler_21' AS feature, -0.7998709678649902 AS threshold, 134 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.004484304932735426 AS "Proba_0.0", -5.40717177146 AS "LogProba_0.0", 0.9955156950672646 AS "Proba_1.0", -0.00449438958784 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, 'scaler_31' AS feature, -0.5049680471420288 AS threshold, 14 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03333333333333333 AS "Proba_0.0", -3.40119738166 AS "LogProba_0.0", 0.9666666666666667 AS "Proba_1.0", -0.0339015516757 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 120 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 12 AS node_id, 'scaler_13' AS feature, -1.3176689147949219 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 15 AS node_id, 'scaler_21' AS feature, 1.9551891088485718 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8333333333333334 AS "Proba_0.0", -0.182321556794 AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 18 AS node_id, 'scaler_9' AS feature, -0.1111433207988739 AS threshold, 88 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7851851851851852 AS "Proba_0.0", -0.241835684326 AS "LogProba_0.0", 0.21481481481481482 AS "Proba_1.0", -1.53797894845 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 19 AS node_id, 'scaler_10' AS feature, -0.5454651713371277 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.043478260869565216 AS "Proba_0.0", -3.13549421593 AS "LogProba_0.0", 0.9565217391304348 AS "Proba_1.0", -0.0444517625708 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 20 AS node_id, 'scaler_19' AS feature, 0.29628902673721313 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 24 AS node_id, 'scaler_22' AS feature, -0.21538469195365906 AS threshold, 77 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9375 AS "Proba_0.0", -0.0645385211376 AS "LogProba_0.0", 0.0625 AS "Proba_1.0", -2.77258872224 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 26 AS node_id, 'scaler_28' AS feature, -0.31263023614883423 AS threshold, 74 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.963302752293578 AS "Proba_0.0", -0.0373875320716 AS "LogProba_0.0", 0.03669724770642202 AS "Proba_1.0", -3.30505352111 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 27 AS node_id, 'scaler_16' AS feature, -0.3511102795600891 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 30 AS node_id, 'scaler_29' AS feature, -0.028956428170204163 AS threshold, 70 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9904761904761905 AS "Proba_0.0", -0.00956945101615 AS "LogProba_0.0", 0.009523809523809525 AS "Proba_1.0", -4.65396035016 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 69 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.07261884212493896) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 <= 0.13467368483543396) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 <= 2.0405054092407227) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.5407357215881348) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 <= 0.5105322599411011) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= 0.1755702644586563) THEN 6 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.8839113116264343) THEN 8 ELSE 9 END END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -1.4274661540985107) THEN 12 ELSE 13 END END ELSE 14 END ELSE 15 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6537011861801147) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.8813495635986328) THEN 18 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.13965222239494324) THEN 20 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.6727293729782104) THEN 22 ELSE 23 END END END ELSE 24 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_9' AS feature, 0.07261884212493896 AS threshold, 246 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3884514435695538 AS "Proba_0.0", -0.945587101363 AS "LogProba_0.0", 0.6115485564304461 AS "Proba_1.0", -0.491760921561 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'scaler_15' AS feature, 0.13467368483543396 AS threshold, 151 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03879310344827586 AS "Proba_0.0", -3.24951279433 AS "LogProba_0.0", 0.9612068965517241 AS "Proba_1.0", -0.0395656002062 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'scaler_31' AS feature, 2.0405054092407227 AS threshold, 149 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.01762114537444934 AS "Proba_0.0", -4.03865565636 AS "LogProba_0.0", 0.9823788546255506 AS "Proba_1.0", -0.0177782460213 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'scaler_5' AS feature, 0.5407357215881348 AS threshold, 148 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.01327433628318584 AS "Proba_0.0", -4.3219227106 AS "LogProba_0.0", 0.9867256637168141 AS "Proba_1.0", -0.0133632278122 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, 'scaler_22' AS feature, 0.5105322599411011 AS threshold, 146 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.008928571428571428 AS "Proba_0.0", -4.7184988713 AS "LogProba_0.0", 0.9910714285714286 AS "Proba_1.0", -0.00896866998276 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'scaler_24' AS feature, 0.1755702644586563 AS threshold, 145 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.004484304932735426 AS "Proba_0.0", -5.40717177146 AS "LogProba_0.0", 0.9955156950672646 AS "Proba_1.0", -0.00449438958784 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 140 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, 'scaler_23' AS feature, 0.8839113116264343 AS threshold, 5 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1 AS "Proba_0.0", -2.30258509299 AS "LogProba_0.0", 0.9 AS "Proba_1.0", -0.105360515658 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, 'scaler_11' AS feature, -1.4274661540985107 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 16 AS node_id, 'scaler_9' AS feature, 0.6537011861801147 AS threshold, 95 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9328859060402684 AS "Proba_0.0", -0.0694723728148 AS "LogProba_0.0", 0.06711409395973154 AS "Proba_1.0", -2.70136121295 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 17 AS node_id, 'scaler_3' AS feature, -0.8813495635986328 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7727272727272727 AS "Proba_0.0", -0.257829109302 AS "LogProba_0.0", 0.22727272727272727 AS "Proba_1.0", -1.48160454092 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 19 AS node_id, 'scaler_24' AS feature, -0.13965222239494324 AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8717948717948718 AS "Proba_0.0", -0.137201121513 AS "LogProba_0.0", 0.1282051282051282 AS "Proba_1.0", -2.0541237337 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 21 AS node_id, 'scaler_23' AS feature, -0.6727293729782104 AS threshold, 21 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9714285714285714 AS "Proba_0.0", -0.0289875368733 AS "LogProba_0.0", 0.02857142857142857 AS "Proba_1.0", -3.55534806149 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 20 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 65 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 4 + "RF_Join_CTE"."Score_1_0" / 4 + "RF_Join_CTE"."Score_2_0" / 4 + "RF_Join_CTE"."Score_3_0" / 4 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 4 + "RF_Join_CTE"."Proba_1_0" / 4 + "RF_Join_CTE"."Proba_2_0" / 4 + "RF_Join_CTE"."Proba_3_0" / 4 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 4 + "RF_Join_CTE"."LogProba_1_0" / 4 + "RF_Join_CTE"."LogProba_2_0" / 4 + "RF_Join_CTE"."LogProba_3_0" / 4 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 4 + "RF_Join_CTE"."Score_1_1" / 4 + "RF_Join_CTE"."Score_2_1" / 4 + "RF_Join_CTE"."Score_3_1" / 4 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 4 + "RF_Join_CTE"."Proba_1_1" / 4 + "RF_Join_CTE"."Proba_2_1" / 4 + "RF_Join_CTE"."Proba_3_1" / 4 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 4 + "RF_Join_CTE"."LogProba_1_1" / 4 + "RF_Join_CTE"."LogProba_2_1" / 4 + "RF_Join_CTE"."LogProba_3_1" / 4 AS "LogProba_1" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte