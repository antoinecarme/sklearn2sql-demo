-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.144940284581 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.113321356297 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0281991599803 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.147094043282 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.308604350146 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.132656422629 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.74351742344 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.330914961946 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0568124780242 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.59289507703 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "FourClass_10" "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.144940284581) / 0.962499081632 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.113321356297) / 1.06075744815 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.0281991599803) / 1.08567929126 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.147094043282) / 0.941407382467 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.308604350146) / 1.50828143871 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.132656422629) / 1.56585446879 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.74351742344) / 1.5358791206 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.330914961946) / 1.46509312622 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0568124780242) / 1.35097571025 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.59289507703) / 1.55446768913 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.37165144085884094) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.29009923338890076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.07655936479568481) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.0760970264673233) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.06291310489177704) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 1.4014296531677246) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -0.3767615556716919) THEN 12 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 0.062201328575611115) THEN 14 ELSE 15 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.5321996808052063) THEN 17 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.9109338521957397) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 1.0748792886734009) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.9267144203186035) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.6891864538192749) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -1.2006282806396484) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.04837842285633087) THEN 27 ELSE 28 END ELSE 29 END END ELSE 30 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_11' AS feature, 0.37165144085884094 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26865671641791045 AS "Proba_0.0", -1.31432086149 AS "LogProba_0.0", 0.2835820895522388 AS "Proba_1.0", -1.26025364022 AS "LogProba_1.0", 0.208955223880597 AS "Proba_2.0", -1.56563528978 AS "LogProba_2.0", 0.23880597014925373 AS "Proba_3.0", -1.43210389715 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_9' AS feature, -0.29009923338890076 AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3611111111111111 AS "Proba_0.0", -1.01856958099 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.027777777777777776 AS "Proba_2.0", -3.58351893846 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, -0.07655936479568481 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7333333333333333 AS "Proba_0.0", -0.310154928304 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.06666666666666667 AS "Proba_2.0", -2.7080502011 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, -0.0760970264673233 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_3' AS feature, 0.06291310489177704 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09523809523809523 AS "Proba_0.0", -2.35137525716 AS "LogProba_0.0", 0.7142857142857143 AS "Proba_1.0", -0.336472236621 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.19047619047619047 AS "Proba_3.0", -1.6582280766 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'scaler_5' AS feature, 1.4014296531677246 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.9166666666666666 AS "Proba_1.0", -0.0870113769896 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_8' AS feature, -0.3767615556716919 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.4444444444444444 AS "Proba_1.0", -0.810930216216 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.4444444444444444 AS "Proba_3.0", -0.810930216216 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, 'scaler_8' AS feature, 0.062201328575611115 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8 AS "Proba_3.0", -0.223143551314 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_10' AS feature, -0.5321996808052063 AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16129032258064516 AS "Proba_0.0", -1.82454929205 AS "LogProba_0.0", 0.03225806451612903 AS "Proba_1.0", -3.43398720449 AS "LogProba_1.0", 0.41935483870967744 AS "Proba_2.0", -0.869037847024 AS "LogProba_2.0", 0.3870967741935484 AS "Proba_3.0", -0.949080554697 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_3' AS feature, -0.9109338521957397 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.038461538461538464 AS "Proba_1.0", -3.25809653802 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.46153846153846156 AS "Proba_3.0", -0.773189888233 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'scaler_10' AS feature, 1.0748792886734009 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.9 AS "Proba_2.0", -0.105360515658 AS "LogProba_2.0", 0.1 AS "Proba_3.0", -2.30258509299 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, 'scaler_3' AS feature, 0.9267144203186035 AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0625 AS "Proba_1.0", -2.77258872224 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.6875 AS "Proba_3.0", -0.374693449441 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, 'scaler_4' AS feature, -0.6891864538192749 AS threshold, 9 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.07142857142857142 AS "Proba_1.0", -2.63905732962 AS "LogProba_1.0", 0.14285714285714285 AS "Proba_2.0", -1.94591014906 AS "LogProba_2.0", 0.7857142857142857 AS "Proba_3.0", -0.241162056817 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, 'scaler_2' AS feature, -1.2006282806396484 AS threshold, 7 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.08333333333333333 AS "Proba_1.0", -2.48490664979 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.9166666666666666 AS "Proba_3.0", -0.0870113769896 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, 'scaler_6' AS feature, 0.04837842285633087 AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8 AS "Proba_3.0", -0.223143551314 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.6764326095581055) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.3094593286514282) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.6824132204055786) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.24287402629852295) THEN 4 ELSE 5 END ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.2272641658782959) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.144456386566162) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.5424538850784302) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.5040217638015747) THEN 11 ELSE 12 END ELSE 13 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= 0.9876327514648438) THEN 15 ELSE 16 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.04004952311515808) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.1757014989852905) THEN 19 ELSE 20 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 1.335758924484253) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.3513562083244324) THEN 23 ELSE 24 END ELSE 25 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.4492380619049072) THEN 27 ELSE 28 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_9' AS feature, 0.6764326095581055 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.31343283582089554 AS "Proba_0.0", -1.16017018167 AS "LogProba_0.0", 0.19402985074626866 AS "Proba_1.0", -1.63974326193 AS "LogProba_1.0", 0.29850746268656714 AS "Proba_2.0", -1.20896034584 AS "LogProba_2.0", 0.19402985074626866 AS "Proba_3.0", -1.63974326193 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, -0.3094593286514282 AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4117647058823529 AS "Proba_0.0", -0.887303195001 AS "LogProba_0.0", 0.0392156862745098 AS "Proba_1.0", -3.23867845216 AS "LogProba_1.0", 0.39215686274509803 AS "Proba_2.0", -0.93609335917 AS "LogProba_2.0", 0.1568627450980392 AS "Proba_3.0", -1.85238409104 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_6' AS feature, 0.6824132204055786 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9411764705882353 AS "Proba_0.0", -0.0606246218164 AS "LogProba_0.0", 0.058823529411764705 AS "Proba_1.0", -2.83321334406 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_9' AS feature, -0.24287402629852295 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8571428571428571 AS "Proba_0.0", -0.154150679827 AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_9' AS feature, -0.2272641658782959 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14705882352941177 AS "Proba_0.0", -1.91692261218 AS "LogProba_0.0", 0.029411764705882353 AS "Proba_1.0", -3.52636052462 AS "LogProba_1.0", 0.5882352941176471 AS "Proba_2.0", -0.530628251062 AS "LogProba_2.0", 0.23529411764705882 AS "Proba_3.0", -1.44691898294 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'scaler_7' AS feature, -1.144456386566162 AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.041666666666666664 AS "Proba_1.0", -3.17805383035 AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_11' AS feature, 1.5424538850784302 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.2857142857142857 AS "Proba_2.0", -1.2527629685 AS "LogProba_2.0", 0.42857142857142855 AS "Proba_3.0", -0.847297860387 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'scaler_7' AS feature, -1.5040217638015747 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_5' AS feature, 0.9876327514648438 AS threshold, 10 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.058823529411764705 AS "Proba_1.0", -2.83321334406 AS "LogProba_1.0", 0.9411764705882353 AS "Proba_2.0", -0.0606246218164 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_3' AS feature, -0.04004952311515808 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3 AS "Proba_0.0", -1.20397280433 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_3' AS feature, -1.1757014989852905 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.8 AS "Proba_3.0", -0.223143551314 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, 'scaler_8' AS feature, 1.335758924484253 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6 AS "Proba_0.0", -0.510825623766 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, 'scaler_3' AS feature, 0.3513562083244324 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, 'scaler_7' AS feature, 1.4492380619049072 AS threshold, 13 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.6875 AS "Proba_1.0", -0.374693449441 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.3125 AS "Proba_3.0", -1.16315080981 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.5673694610595703) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -0.29784250259399414) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -1.1073060035705566) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 1.1187106370925903) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7417247295379639) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -0.9410394430160522) THEN 7 ELSE 8 END ELSE 9 END ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.8652794361114502) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.05011267587542534) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.28471243381500244) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -1.4253685474395752) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -0.6453781127929688) THEN 17 ELSE 18 END ELSE 19 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= -0.6737507581710815) THEN 21 ELSE 22 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.6358613967895508) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.7917499542236328) THEN 26 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= -0.2674400806427002) THEN 28 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 <= -0.2550141513347626) THEN 30 ELSE 31 END END END END END END ELSE 32 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 1.5673694610595703 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.373134328358209 AS "Proba_0.0", -0.985816794523 AS "LogProba_0.0", 0.16417910447761194 AS "Proba_1.0", -1.80679734659 AS "LogProba_1.0", 0.26865671641791045 AS "Proba_2.0", -1.31432086149 AS "LogProba_2.0", 0.19402985074626866 AS "Proba_3.0", -1.63974326193 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, -0.29784250259399414 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4032258064516129 AS "Proba_0.0", -0.908258560177 AS "LogProba_0.0", 0.1774193548387097 AS "Proba_1.0", -1.72923911225 AS "LogProba_1.0", 0.2903225806451613 AS "Proba_2.0", -1.23676262715 AS "LogProba_2.0", 0.12903225806451613 AS "Proba_3.0", -2.04769284337 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_3' AS feature, -1.1073060035705566 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.21428571428571427 AS "Proba_1.0", -1.54044504095 AS "LogProba_1.0", 0.03571428571428571 AS "Proba_2.0", -3.33220451018 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_2' AS feature, 1.1187106370925903 AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7777777777777778 AS "Proba_0.0", -0.251314428281 AS "LogProba_0.0", 0.2222222222222222 AS "Proba_1.0", -1.50407739678 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 0.7417247295379639 AS threshold, 12 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8076923076923077 AS "Proba_0.0", -0.213574100298 AS "LogProba_0.0", 0.19230769230769232 AS "Proba_1.0", -1.64865862559 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_6' AS feature, -0.9410394430160522 AS threshold, 10 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9130434782608695 AS "Proba_0.0", -0.0909717782057 AS "LogProba_0.0", 0.08695652173913043 AS "Proba_1.0", -2.44234703537 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_11' AS feature, 0.8652794361114502 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11764705882352941 AS "Proba_0.0", -2.1400661635 AS "LogProba_0.0", 0.14705882352941177 AS "Proba_1.0", -1.91692261218 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.23529411764705882 AS "Proba_3.0", -1.44691898294 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'scaler_10' AS feature, -0.05011267587542534 AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_7' AS feature, 0.28471243381500244 AS threshold, 12 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.047619047619047616 AS "Proba_1.0", -3.04452243772 AS "LogProba_1.0", 0.7619047619047619 AS "Proba_2.0", -0.271933715484 AS "LogProba_2.0", 0.19047619047619047 AS "Proba_3.0", -1.6582280766 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, 'scaler_5' AS feature, -1.4253685474395752 AS threshold, 10 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.8888888888888888 AS "Proba_2.0", -0.117783035656 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_7' AS feature, -0.6453781127929688 AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, 'scaler_2' AS feature, -0.6737507581710815 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, 'scaler_10' AS feature, -0.6358613967895508 AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.1 AS "Proba_1.0", -2.30258509299 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.4 AS "Proba_3.0", -0.916290731874 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, 'scaler_9' AS feature, -1.7917499542236328 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.16666666666666666 AS "Proba_2.0", -1.79175946923 AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, 'scaler_3' AS feature, -0.2674400806427002 AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8 AS "Proba_3.0", -0.223143551314 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 29 AS node_id, 'scaler_5' AS feature, -0.2550141513347626 AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= 0.7338595390319824) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -0.29009923338890076) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.3146643340587616) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= -1.9383597373962402) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= -1.2970569133758545) THEN 7 ELSE 8 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.20316414535045624) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= -0.8974728584289551) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.2946691513061523) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.10358666628599167) THEN 16 ELSE 17 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.03187623992562294) THEN 19 ELSE 20 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_9' AS feature, 0.7338595390319824 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29850746268656714 AS "Proba_0.0", -1.20896034584 AS "LogProba_0.0", 0.208955223880597 AS "Proba_1.0", -1.56563528978 AS "LogProba_1.0", 0.26865671641791045 AS "Proba_2.0", -1.31432086149 AS "LogProba_2.0", 0.22388059701492538 AS "Proba_3.0", -1.49664241829 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_9' AS feature, -0.29009923338890076 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.04 AS "Proba_1.0", -3.21887582487 AS "LogProba_1.0", 0.36 AS "Proba_2.0", -1.02165124753 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, -0.3146643340587616 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.46875 AS "Proba_0.0", -0.757685701698 AS "LogProba_0.0", 0.03125 AS "Proba_1.0", -3.4657359028 AS "LogProba_1.0", 0.46875 AS "Proba_2.0", -0.757685701698 AS "LogProba_2.0", 0.03125 AS "Proba_3.0", -3.4657359028 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, -1.9383597373962402 AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.058823529411764705 AS "Proba_1.0", -2.83321334406 AS "LogProba_1.0", 0.8823529411764706 AS "Proba_2.0", -0.125163142954 AS "LogProba_2.0", 0.058823529411764705 AS "Proba_3.0", -2.83321334406 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_8' AS feature, -1.2970569133758545 AS threshold, 9 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0625 AS "Proba_1.0", -2.77258872224 AS "LogProba_1.0", 0.9375 AS "Proba_2.0", -0.0645385211376 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_10' AS feature, -0.20316414535045624 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2777777777777778 AS "Proba_0.0", -1.28093384546 AS "LogProba_0.0", 0.05555555555555555 AS "Proba_1.0", -2.8903717579 AS "LogProba_1.0", 0.16666666666666666 AS "Proba_2.0", -1.79175946923 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'scaler_10' AS feature, -0.8974728584289551 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8333333333333334 AS "Proba_0.0", -0.182321556794 AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, 'scaler_6' AS feature, -1.2946691513061523 AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.75 AS "Proba_3.0", -0.287682072452 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, 'scaler_10' AS feature, 0.10358666628599167 AS threshold, 8 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.9 AS "Proba_3.0", -0.105360515658 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'scaler_6' AS feature, 0.03187623992562294 AS threshold, 12 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.7058823529411765 AS "Proba_1.0", -0.348306694268 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.29411764705882354 AS "Proba_3.0", -1.22377543162 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 4 + "RF_Join_CTE"."Score_1_0" / 4 + "RF_Join_CTE"."Score_2_0" / 4 + "RF_Join_CTE"."Score_3_0" / 4 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 4 + "RF_Join_CTE"."Proba_1_0" / 4 + "RF_Join_CTE"."Proba_2_0" / 4 + "RF_Join_CTE"."Proba_3_0" / 4 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 4 + "RF_Join_CTE"."LogProba_1_0" / 4 + "RF_Join_CTE"."LogProba_2_0" / 4 + "RF_Join_CTE"."LogProba_3_0" / 4 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 4 + "RF_Join_CTE"."Score_1_1" / 4 + "RF_Join_CTE"."Score_2_1" / 4 + "RF_Join_CTE"."Score_3_1" / 4 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 4 + "RF_Join_CTE"."Proba_1_1" / 4 + "RF_Join_CTE"."Proba_2_1" / 4 + "RF_Join_CTE"."Proba_3_1" / 4 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 4 + "RF_Join_CTE"."LogProba_1_1" / 4 + "RF_Join_CTE"."LogProba_2_1" / 4 + "RF_Join_CTE"."LogProba_3_1" / 4 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 4 + "RF_Join_CTE"."Score_1_2" / 4 + "RF_Join_CTE"."Score_2_2" / 4 + "RF_Join_CTE"."Score_3_2" / 4 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 4 + "RF_Join_CTE"."Proba_1_2" / 4 + "RF_Join_CTE"."Proba_2_2" / 4 + "RF_Join_CTE"."Proba_3_2" / 4 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 4 + "RF_Join_CTE"."LogProba_1_2" / 4 + "RF_Join_CTE"."LogProba_2_2" / 4 + "RF_Join_CTE"."LogProba_3_2" / 4 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 4 + "RF_Join_CTE"."Score_1_3" / 4 + "RF_Join_CTE"."Score_2_3" / 4 + "RF_Join_CTE"."Score_3_3" / 4 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 4 + "RF_Join_CTE"."Proba_1_3" / 4 + "RF_Join_CTE"."Proba_2_3" / 4 + "RF_Join_CTE"."Proba_3_3" / 4 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 4 + "RF_Join_CTE"."LogProba_1_3" / 4 + "RF_Join_CTE"."LogProba_2_3" / 4 + "RF_Join_CTE"."LogProba_3_3" / 4 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte