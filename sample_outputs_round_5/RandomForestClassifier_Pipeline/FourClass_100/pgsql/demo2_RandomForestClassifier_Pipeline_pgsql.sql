-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0197858310562 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.22129244053 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.084210469062 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.306937165988 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.018530219162 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.144726958856 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.00937501678377 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.539824032307 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0796439895451 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.193680373073 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.381878913227 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.148860686766 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 0.32124784044 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0183778989254 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.115816143243 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.096599086376 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.13897346212 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.915692181959 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN -0.388802436995 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.034111729644 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.201448809883 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.087452893692 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN -1.47700237909 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.170539923415 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.207086692168 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.241704306847 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN -1.28247333805 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.100532936088 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.0306921044132 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN -0.00616370597579 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.487780373027 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.15476190062 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.140612576832 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0880984232872 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 0.0347576140713 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.948359158355 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.0648433874563 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.103475152393 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.501380650924 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.603023273291 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.0636011244747 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.0382174313847 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.231395776971 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.177247506343 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN -0.0627096349845 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 0.917149975554 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 1.11425624938 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN -0.0801520274001 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.520495419326 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.0591675913478 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.0739420150504 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.23662667005 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 1.18479695108 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.358521037071 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.386270970767 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.821136124456 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -0.187166293138 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.437890132681 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN -0.155116844757 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.0883670733574 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.16013281282 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.0825333534038 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.379854173837 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.230582755758 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.050737604317 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.0426471612245 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.259080282179 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.15290970079 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.566356340175 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -1.05847362113 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.362910743896 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.221109063852 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.026497387681 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.300712733876 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.6442960917 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.143433412446 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.214472235787 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.302066876382 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN -0.256369065524 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.147622008894 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.810849335937 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.0346001175641 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.0780280271945 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 0.152262145713 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.327600710563 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.145880136997 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.109838797892 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.882063330507 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.22594946844 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.0712801111507 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -0.260302135168 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 1.09714764527 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.837710238339 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.0937215137712 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.251746195636 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.433339883422 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.281157836625 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.0112856695263 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.744447259851 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.726703238458 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0197858310562) / 4.24400513173 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.22129244053) / 4.04551173315 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.084210469062) / 1.06206816243 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.306937165988) / 4.49534265853 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - -0.018530219162) / 1.00255521278 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.144726958856) / 3.89121864504 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.00937501678377) / 3.4319683044 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.539824032307) / 3.94616743518 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0796439895451) / 0.885097565823 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.193680373073) / 4.71466820874 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.381878913227) / 3.90391790109 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.148860686766) / 0.99095850857 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 0.32124784044) / 0.953825608609 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - -0.0183778989254) / 4.12192433774 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.115816143243) / 1.05427849946 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -0.096599086376) / 0.905861727596 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.13897346212) / 0.84575456102 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.915692181959) / 4.93420639072 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - -0.388802436995) / 4.44590625909 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.034111729644) / 0.884801020844 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.201448809883) / 0.801923111628 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.087452893692) / 0.980528084996 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - -1.47700237909) / 16.885453459 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - -0.170539923415) / 1.05400171365 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.207086692168) / 4.86895969692 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.241704306847) / 3.62270639524 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - -1.28247333805) / 4.01106072511 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.100532936088) / 0.879005134465 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.0306921044132) / 0.886188748635 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - -0.00616370597579) / 1.07598326474 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.487780373027) / 4.35262222458 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.15476190062) / 0.939601833805 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - -0.140612576832) / 0.906284665515 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.0880984232872) / 0.854179092768 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 0.0347576140713) / 0.939500393288 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - -0.948359158355) / 3.98537905671 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.0648433874563) / 0.983766987653 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 0.103475152393) / 1.00405873528 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.501380650924) / 4.6837307236 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.603023273291) / 4.36332576398 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.0636011244747) / 0.966891924729 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 0.0382174313847) / 1.2456105872 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 0.231395776971) / 1.04457268077 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 0.177247506343) / 3.74387156333 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - -0.0627096349845) / 0.843547615812 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 0.917149975554) / 4.18741496854 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 1.11425624938) / 4.93250303595 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - -0.0801520274001) / 0.826056568021 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.520495419326) / 4.61671733367 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - -0.0591675913478) / 1.02344805117 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 0.0739420150504) / 1.13579213422 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.23662667005) / 3.91910402417 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 1.18479695108) / 4.47647297152 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.358521037071) / 3.98650803866 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.386270970767) / 4.17516202192 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.821136124456) / 4.1504430265 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -0.187166293138) / 4.05018640676 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - -0.437890132681) / 4.23020013844 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - -0.155116844757) / 0.956943724931 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.0883670733574) / 1.12513063143 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.16013281282) / 4.3052719638 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 0.0825333534038) / 0.972407834909 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 0.379854173837) / 4.02741972335 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - -0.230582755758) / 1.16435002934 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.050737604317) / 1.06017796944 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - 0.0426471612245) / 0.991658007022 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.259080282179) / 3.93228031146 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - 0.15290970079) / 4.24931557904 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.566356340175) / 4.33606408556 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -1.05847362113) / 4.73654501208 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.362910743896) / 4.34804386224 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.221109063852) / 0.847392076243 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.026497387681) / 1.2231536406 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - -0.300712733876) / 4.0727624422 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - 0.6442960917) / 3.71799606618 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - -0.143433412446) / 1.12494879024 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.214472235787) / 0.975535235801 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.302066876382) / 4.49789343459 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - -0.256369065524) / 1.00565751785 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.147622008894) / 0.877044215772 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.810849335937) / 3.80112574001 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.0346001175641) / 0.840866034377 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.0780280271945) / 4.26905823892 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - 0.152262145713) / 1.00708552093 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.327600710563) / 3.9254952672 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.145880136997) / 0.969273371306 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.109838797892) / 0.894414687329 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - -0.882063330507) / 4.33585618073 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - 0.22594946844) / 4.44736606447 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.0712801111507) / 0.886485689898 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -0.260302135168) / 1.00980329293 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 1.09714764527) / 3.20228315181 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.837710238339) / 3.78075760509 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - 0.0937215137712) / 0.869360030151 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.251746195636) / 3.72133001397 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.433339883422) / 20.7778080326 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - -0.281157836625) / 3.14303868374 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.0112856695263) / 1.1366089611 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.744447259851) / 4.20544175811 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - 0.726703238458) / 3.74273228349 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= -0.2162056565284729) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= -0.22048555314540863) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= 0.39615488052368164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= -0.5845528841018677) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 <= -0.7762963771820068) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.10213372856378555) THEN 9 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 <= -0.6926074028015137) THEN 11 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_85 <= 0.20883244276046753) THEN 13 ELSE 14 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_81 <= 1.109431266784668) THEN 16 ELSE 17 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_17 <= 0.8675835132598877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_10 <= 0.42229121923446655) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -0.07696997374296188) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.48661860823631287) THEN 22 ELSE 23 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= 0.595242977142334) THEN 25 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.9320386648178101) THEN 27 ELSE 28 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_57 <= 0.24049408733844757) THEN 30 ELSE 31 END END ELSE 32 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_71' AS feature, -0.2162056565284729 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34328358208955223 AS "Proba_0.0", -1.06919840346 AS "LogProba_0.0", 0.208955223880597 AS "Proba_1.0", -1.56563528978 AS "LogProba_1.0", 0.22388059701492538 AS "Proba_2.0", -1.49664241829 AS "LogProba_2.0", 0.22388059701492538 AS "Proba_3.0", -1.49664241829 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 1 AS node_id, 'scaler_35' AS feature, -0.22048555314540863 AS threshold, 21 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5675675675675675 AS "Proba_0.0", -0.566395474921 AS "LogProba_0.0", 0.13513513513513514 AS "Proba_1.0", -2.00148000021 AS "LogProba_1.0", 0.08108108108108109 AS "Proba_2.0", -2.51230562398 AS "LogProba_2.0", 0.21621621621621623 AS "Proba_3.0", -1.53147637096 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 3 AS node_id, 'scaler_63' AS feature, 0.39615488052368164 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4074074074074074 AS "Proba_0.0", -0.897941593206 AS "LogProba_0.0", 0.18518518518518517 AS "Proba_1.0", -1.68639895357 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.2962962962962963 AS "Proba_3.0", -1.21639532432 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, 'scaler_23' AS feature, -0.5845528841018677 AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.55 AS "Proba_0.0", -0.597837000756 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.15 AS "Proba_2.0", -1.89711998489 AS "LogProba_2.0", 0.1 AS "Proba_3.0", -2.30258509299 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, 'scaler_62' AS feature, -0.7762963771820068 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9 AS "Proba_0.0", -0.105360515658 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 8 AS node_id, 'scaler_23' AS feature, 0.10213372856378555 AS threshold, 8 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, 'scaler_56' AS feature, -0.6926074028015137 AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, 'scaler_85' AS feature, 0.20883244276046753 AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 15 AS node_id, 'scaler_81' AS feature, 1.109431266784668 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.8571428571428571 AS "Proba_3.0", -0.154150679827 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 18 AS node_id, 'scaler_17' AS feature, 0.8675835132598877 AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.06666666666666667 AS "Proba_0.0", -2.7080502011 AS "LogProba_0.0", 0.3 AS "Proba_1.0", -1.20397280433 AS "LogProba_1.0", 0.4 AS "Proba_2.0", -0.916290731874 AS "LogProba_2.0", 0.23333333333333334 AS "Proba_3.0", -1.45528723261 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 19 AS node_id, 'scaler_10' AS feature, 0.42229121923446655 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08695652173913043 AS "Proba_0.0", -2.44234703537 AS "LogProba_0.0", 0.391304347826087 AS "Proba_1.0", -0.938269638593 AS "LogProba_1.0", 0.21739130434782608 AS "Proba_2.0", -1.5260563035 AS "LogProba_2.0", 0.30434782608695654 AS "Proba_3.0", -1.18958406687 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 20 AS node_id, 'scaler_20' AS feature, -0.07696997374296188 AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13333333333333333 AS "Proba_0.0", -2.01490302054 AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 21 AS node_id, 'scaler_42' AS feature, -0.48661860823631287 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.75 AS "Proba_2.0", -0.287682072452 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 24 AS node_id, 'scaler_79' AS feature, 0.595242977142334 AS threshold, 7 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09090909090909091 AS "Proba_0.0", -2.3978952728 AS "LogProba_0.0", 0.8181818181818182 AS "Proba_1.0", -0.200670695462 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.09090909090909091 AS "Proba_3.0", -2.3978952728 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 26 AS node_id, 'scaler_27' AS feature, 0.9320386648178101 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 29 AS node_id, 'scaler_57' AS feature, 0.24049408733844757 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.75 AS "Proba_3.0", -0.287682072452 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -1.1961562633514404) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_41 <= 0.3654816746711731) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.5425872206687927) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 2.013225555419922) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_87 <= -0.4258064031600952) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -1.8467350006103516) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_49 <= 0.2258176952600479) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 0.05416872724890709) THEN 13 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 <= 0.9689075946807861) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_59 <= 0.39112988114356995) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 <= -0.8403599262237549) THEN 18 ELSE 19 END END ELSE 20 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 <= -0.032927870750427246) THEN 22 ELSE 23 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= -0.16514036059379578) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 <= -0.289996474981308) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.37227779626846313) THEN 27 ELSE 28 END ELSE 29 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.9483273029327393) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 <= 0.9630659222602844) THEN 32 ELSE 33 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_50 <= 1.237933874130249) THEN 35 ELSE 36 END END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_99' AS feature, -1.1961562633514404 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23880597014925373 AS "Proba_0.0", -1.43210389715 AS "LogProba_0.0", 0.2537313432835821 AS "Proba_1.0", -1.37147927533 AS "LogProba_1.0", 0.26865671641791045 AS "Proba_2.0", -1.31432086149 AS "LogProba_2.0", 0.23880597014925373 AS "Proba_3.0", -1.43210389715 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'scaler_41' AS feature, 0.3654816746711731 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26229508196721313 AS "Proba_0.0", -1.33828514193 AS "LogProba_0.0", 0.18032786885245902 AS "Proba_1.0", -1.71297859137 AS "LogProba_1.0", 0.29508196721311475 AS "Proba_2.0", -1.22050210628 AS "LogProba_2.0", 0.26229508196721313 AS "Proba_3.0", -1.33828514193 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 3 AS node_id, 'scaler_4' AS feature, -0.5425872206687927 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.42424242424242425 AS "Proba_0.0", -0.857450231851 AS "LogProba_0.0", 0.21212121212121213 AS "Proba_1.0", -1.55059741241 AS "LogProba_1.0", 0.09090909090909091 AS "Proba_2.0", -2.3978952728 AS "LogProba_2.0", 0.2727272727272727 AS "Proba_3.0", -1.29928298413 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 4 AS node_id, 'scaler_20' AS feature, 2.013225555419922 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9 AS "Proba_0.0", -0.105360515658 AS "LogProba_0.0", 0.1 AS "Proba_1.0", -2.30258509299 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, 'scaler_87' AS feature, -0.4258064031600952 AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21739130434782608 AS "Proba_0.0", -1.5260563035 AS "LogProba_0.0", 0.2608695652173913 AS "Proba_1.0", -1.3437347467 AS "LogProba_1.0", 0.13043478260869565 AS "Proba_2.0", -2.03688192726 AS "LogProba_2.0", 0.391304347826087 AS "Proba_3.0", -0.938269638593 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, 'scaler_12' AS feature, -1.8467350006103516 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.8 AS "Proba_1.0", -0.223143551314 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 11 AS node_id, 'scaler_49' AS feature, 0.2258176952600479 AS threshold, 13 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2777777777777778 AS "Proba_0.0", -1.28093384546 AS "LogProba_0.0", 0.1111111111111111 AS "Proba_1.0", -2.19722457734 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, 'scaler_95' AS feature, 0.05416872724890709 AS threshold, 9 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07692307692307693 AS "Proba_0.0", -2.56494935746 AS "LogProba_0.0", 0.07692307692307693 AS "Proba_1.0", -2.56494935746 AS "LogProba_1.0", 0.15384615384615385 AS "Proba_2.0", -1.8718021769 AS "LogProba_2.0", 0.6923076923076923 AS "Proba_3.0", -0.367724780125 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 14 AS node_id, 'scaler_3' AS feature, 0.9689075946807861 AS threshold, 5 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.4 AS "Proba_2.0", -0.916290731874 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 15 AS node_id, 'scaler_59' AS feature, 0.39112988114356995 AS threshold, 3 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 17 AS node_id, 'scaler_24' AS feature, -0.8403599262237549 AS threshold, 2 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 9 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 21 AS node_id, 'scaler_29' AS feature, -0.032927870750427246 AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8 AS "Proba_0.0", -0.223143551314 AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 24 AS node_id, 'scaler_91' AS feature, -0.16514036059379578 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07142857142857142 AS "Proba_0.0", -2.63905732962 AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.5357142857142857 AS "Proba_2.0", -0.624154309073 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 25 AS node_id, 'scaler_4' AS feature, -0.289996474981308 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 26 AS node_id, 'scaler_99' AS feature, 0.37227779626846313 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.8 AS "Proba_1.0", -0.223143551314 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 30 AS node_id, 'scaler_89' AS feature, -0.9483273029327393 AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.7777777777777778 AS "Proba_2.0", -0.251314428281 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 31 AS node_id, 'scaler_35' AS feature, 0.9630659222602844 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 34 AS node_id, 'scaler_50' AS feature, 1.237933874130249 AS threshold, 7 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.9333333333333333 AS "Proba_2.0", -0.068992871487 AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 <= 0.33721473813056946) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 1.0557880401611328) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 <= 0.8463829755783081) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= 0.30500727891921997) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= -0.02903624251484871) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_8 <= 2.1705148220062256) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 <= -1.6526196002960205) THEN 7 ELSE 8 END ELSE 9 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_43 <= 0.2505095601081848) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_27 <= 0.22137296199798584) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 <= 0.7538454532623291) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.2757653295993805) THEN 17 ELSE 18 END ELSE 19 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= 1.0893163681030273) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_79 <= -1.0605199337005615) THEN 22 ELSE 23 END ELSE 24 END END ELSE 25 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= -0.6053955554962158) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_82 <= -0.11104558408260345) THEN 28 ELSE 29 END ELSE 30 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, 0.33721473813056946 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23880597014925373 AS "Proba_0.0", -1.43210389715 AS "LogProba_0.0", 0.2537313432835821 AS "Proba_1.0", -1.37147927533 AS "LogProba_1.0", 0.2537313432835821 AS "Proba_2.0", -1.37147927533 AS "LogProba_2.0", 0.2537313432835821 AS "Proba_3.0", -1.37147927533 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, 'scaler_11' AS feature, 1.0557880401611328 AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3 AS "Proba_0.0", -1.20397280433 AS "LogProba_0.0", 0.34 AS "Proba_1.0", -1.07880966137 AS "LogProba_1.0", 0.08 AS "Proba_2.0", -2.52572864431 AS "LogProba_2.0", 0.28 AS "Proba_3.0", -1.27296567581 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 2 AS node_id, 'scaler_47' AS feature, 0.8463829755783081 AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36585365853658536 AS "Proba_0.0", -1.0055218656 AS "LogProba_0.0", 0.4146341463414634 AS "Proba_1.0", -0.880358722648 AS "LogProba_1.0", 0.0975609756097561 AS "Proba_2.0", -2.32727770558 AS "LogProba_2.0", 0.12195121951219512 AS "Proba_3.0", -2.10413415427 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'scaler_11' AS feature, 0.30500727891921997 AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1724137931034483 AS "Proba_0.0", -1.75785791755 AS "LogProba_0.0", 0.5172413793103449 AS "Proba_1.0", -0.659245628884 AS "LogProba_1.0", 0.13793103448275862 AS "Proba_2.0", -1.98100146887 AS "LogProba_2.0", 0.1724137931034483 AS "Proba_3.0", -1.75785791755 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, 'scaler_95' AS feature, -0.02903624251484871 AS threshold, 13 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.7 AS "Proba_1.0", -0.356674943939 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 5 AS node_id, 'scaler_8' AS feature, 2.1705148220062256 AS threshold, 10 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.875 AS "Proba_1.0", -0.133531392625 AS "LogProba_1.0", 0.0625 AS "Proba_2.0", -2.77258872224 AS "LogProba_2.0", 0.0625 AS "Proba_3.0", -2.77258872224 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 6 AS node_id, 'scaler_63' AS feature, -1.6526196002960205 AS threshold, 9 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.9333333333333333 AS "Proba_1.0", -0.068992871487 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 10 AS node_id, 'scaler_43' AS feature, 0.2505095601081848 AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.75 AS "Proba_3.0", -0.287682072452 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 13 AS node_id, 'scaler_27' AS feature, 0.22137296199798584 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5555555555555556 AS "Proba_0.0", -0.587786664902 AS "LogProba_0.0", 0.1111111111111111 AS "Proba_1.0", -2.19722457734 AS "LogProba_1.0", 0.2222222222222222 AS "Proba_2.0", -1.50407739678 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 15 AS node_id, 'scaler_30' AS feature, 0.7538454532623291 AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 16 AS node_id, 'scaler_82' AS feature, -0.2757653295993805 AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 20 AS node_id, 'scaler_42' AS feature, 1.0893163681030273 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8333333333333334 AS "Proba_0.0", -0.182321556794 AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 21 AS node_id, 'scaler_79' AS feature, -1.0605199337005615 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9090909090909091 AS "Proba_0.0", -0.0953101798043 AS "LogProba_0.0", 0.09090909090909091 AS "Proba_1.0", -2.3978952728 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 26 AS node_id, 'scaler_69' AS feature, -0.6053955554962158 AS threshold, 11 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.058823529411764705 AS "Proba_0.0", -2.83321334406 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.7647058823529411 AS "Proba_2.0", -0.268263986595 AS "LogProba_2.0", 0.17647058823529413 AS "Proba_3.0", -1.73460105539 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 27 AS node_id, 'scaler_82' AS feature, -0.11104558408260345 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.75 AS "Proba_3.0", -0.287682072452 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= -1.1992785930633545) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_74 <= 0.13815942406654358) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_89 <= -0.520058274269104) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.556222677230835) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.9085593223571777) THEN 6 ELSE 7 END ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_70 <= -0.9461655616760254) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_72 <= 0.8894902467727661) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= -1.0347437858581543) THEN 14 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_11 <= -1.6350677013397217) THEN 16 ELSE 17 END END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.28456932306289673) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= -0.3913764953613281) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 0.9261128902435303) THEN 21 ELSE 22 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= -0.4044126272201538) THEN 24 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_42 <= -0.8082174062728882) THEN 26 ELSE 27 END END END ELSE 28 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_20' AS feature, -1.1992785930633545 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19402985074626866 AS "Proba_0.0", -1.63974326193 AS "LogProba_0.0", 0.34328358208955223 AS "Proba_1.0", -1.06919840346 AS "LogProba_1.0", 0.26865671641791045 AS "Proba_2.0", -1.31432086149 AS "LogProba_2.0", 0.19402985074626866 AS "Proba_3.0", -1.63974326193 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 2 AS node_id, 'scaler_74' AS feature, 0.13815942406654358 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21666666666666667 AS "Proba_0.0", -1.52939520476 AS "LogProba_0.0", 0.38333333333333336 AS "Proba_1.0", -0.958850346293 AS "LogProba_1.0", 0.18333333333333332 AS "Proba_2.0", -1.69644928942 AS "LogProba_2.0", 0.21666666666666667 AS "Proba_3.0", -1.52939520476 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 3 AS node_id, 'scaler_89' AS feature, -0.520058274269104 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.6111111111111112 AS "Proba_1.0", -0.492476485098 AS "LogProba_1.0", 0.1388888888888889 AS "Proba_2.0", -1.97408102602 AS "LogProba_2.0", 0.08333333333333333 AS "Proba_3.0", -2.48490664979 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 4 AS node_id, 'scaler_20' AS feature, 0.556222677230835 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 5 AS node_id, 'scaler_99' AS feature, -0.9085593223571777 AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 9 AS node_id, 'scaler_70' AS feature, -0.9461655616760254 AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14285714285714285 AS "Proba_0.0", -1.94591014906 AS "LogProba_0.0", 0.7857142857142857 AS "Proba_1.0", -0.241162056817 AS "LogProba_1.0", 0.03571428571428571 AS "Proba_2.0", -3.33220451018 AS "LogProba_2.0", 0.03571428571428571 AS "Proba_3.0", -3.33220451018 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 10 AS node_id, 'scaler_72' AS feature, 0.8894902467727661 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 13 AS node_id, 'scaler_6' AS feature, -1.0347437858581543 AS threshold, 13 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.041666666666666664 AS "Proba_0.0", -3.17805383035 AS "LogProba_0.0", 0.9166666666666666 AS "Proba_1.0", -0.0870113769896 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.041666666666666664 AS "Proba_3.0", -3.17805383035 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 15 AS node_id, 'scaler_11' AS feature, -1.6350677013397217 AS threshold, 12 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.9565217391304348 AS "Proba_1.0", -0.0444517625708 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.043478260869565216 AS "Proba_3.0", -3.13549421593 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 18 AS node_id, 'scaler_68' AS feature, 0.28456932306289673 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2916666666666667 AS "Proba_0.0", -1.23214368129 AS "LogProba_0.0", 0.041666666666666664 AS "Proba_1.0", -3.17805383035 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.4166666666666667 AS "Proba_3.0", -0.875468737354 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 19 AS node_id, 'scaler_12' AS feature, -0.3913764953613281 AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4666666666666667 AS "Proba_0.0", -0.762140052047 AS "LogProba_0.0", 0.06666666666666667 AS "Proba_1.0", -2.7080502011 AS "LogProba_1.0", 0.4 AS "Proba_2.0", -0.916290731874 AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 20 AS node_id, 'scaler_92' AS feature, 0.9261128902435303 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.8333333333333334 AS "Proba_2.0", -0.182321556794 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 1 AS "Decision" UNION ALL SELECT 23 AS node_id, 'scaler_33' AS feature, -0.4044126272201538 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7777777777777778 AS "Proba_0.0", -0.251314428281 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" UNION ALL SELECT 25 AS node_id, 'scaler_42' AS feature, -0.8082174062728882 AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.875 AS "Proba_0.0", -0.133531392625 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.125 AS "Proba_2.0", -2.07944154168 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 2 AS "Decision" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -1.79769313486231e+308 AS "LogProba_3.0", 0 AS "Decision" UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -1.79769313486231e+308 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -1.79769313486231e+308 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -1.79769313486231e+308 AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 4 + "RF_Join_CTE"."Score_1_0" / 4 + "RF_Join_CTE"."Score_2_0" / 4 + "RF_Join_CTE"."Score_3_0" / 4 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 4 + "RF_Join_CTE"."Proba_1_0" / 4 + "RF_Join_CTE"."Proba_2_0" / 4 + "RF_Join_CTE"."Proba_3_0" / 4 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 4 + "RF_Join_CTE"."LogProba_1_0" / 4 + "RF_Join_CTE"."LogProba_2_0" / 4 + "RF_Join_CTE"."LogProba_3_0" / 4 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 4 + "RF_Join_CTE"."Score_1_1" / 4 + "RF_Join_CTE"."Score_2_1" / 4 + "RF_Join_CTE"."Score_3_1" / 4 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 4 + "RF_Join_CTE"."Proba_1_1" / 4 + "RF_Join_CTE"."Proba_2_1" / 4 + "RF_Join_CTE"."Proba_3_1" / 4 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 4 + "RF_Join_CTE"."LogProba_1_1" / 4 + "RF_Join_CTE"."LogProba_2_1" / 4 + "RF_Join_CTE"."LogProba_3_1" / 4 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 4 + "RF_Join_CTE"."Score_1_2" / 4 + "RF_Join_CTE"."Score_2_2" / 4 + "RF_Join_CTE"."Score_3_2" / 4 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 4 + "RF_Join_CTE"."Proba_1_2" / 4 + "RF_Join_CTE"."Proba_2_2" / 4 + "RF_Join_CTE"."Proba_3_2" / 4 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 4 + "RF_Join_CTE"."LogProba_1_2" / 4 + "RF_Join_CTE"."LogProba_2_2" / 4 + "RF_Join_CTE"."LogProba_3_2" / 4 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 4 + "RF_Join_CTE"."Score_1_3" / 4 + "RF_Join_CTE"."Score_2_3" / 4 + "RF_Join_CTE"."Score_3_3" / 4 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 4 + "RF_Join_CTE"."Proba_1_3" / 4 + "RF_Join_CTE"."Proba_2_3" / 4 + "RF_Join_CTE"."Proba_3_3" / 4 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 4 + "RF_Join_CTE"."LogProba_1_3" / 4 + "RF_Join_CTE"."LogProba_2_3" / 4 + "RF_Join_CTE"."LogProba_3_3" / 4 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte