-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0915003194334 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.18675081158 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.234567301987 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.263109114769 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.0781424901851 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.0709904167468 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.24154518327 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0670819334434 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0477417796364 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.0480014919968 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "BinaryClass_10" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.0915003194334) / 1.2480414307 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.18675081158) / 0.954068864396 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.234567301987) / 1.07524228469 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.263109114769) / 1.21566885343 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - -0.0781424901851) / 1.03393490836 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.0709904167468) / 0.900907117767 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.24154518327) / 1.11933152325 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0670819334434) / 0.972107013165 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.0477417796364) / 1.00713917484 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.0480014919968) / 1.09660399089 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
linear_model_cte AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 71.19997717928175 * "ADS_sca_2_OUT".scaler_2 + 21.599556044011585 * "ADS_sca_2_OUT".scaler_3 + -28.984377423407633 * "ADS_sca_2_OUT".scaler_4 + -4.238231669478797 * "ADS_sca_2_OUT".scaler_5 + 27.002297799628124 * "ADS_sca_2_OUT".scaler_6 + -2.6757872882778257 * "ADS_sca_2_OUT".scaler_7 + -3.2420807827174776 * "ADS_sca_2_OUT".scaler_8 + 2.6619859290882726 * "ADS_sca_2_OUT".scaler_9 + 6.4640734500614565 * "ADS_sca_2_OUT".scaler_10 + -24.33019350150062 * "ADS_sca_2_OUT".scaler_11 + 14.8333340609 AS linear_combination 
FROM "ADS_sca_2_OUT")
 SELECT linear_model_cte."KEY" AS "KEY", -linear_model_cte.linear_combination AS "Score_0", linear_model_cte.linear_combination AS "Score_1", CAST(NULL AS FLOAT(53)) AS "Proba_0", CAST(NULL AS FLOAT(53)) AS "Proba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CASE WHEN (linear_model_cte.linear_combination >= 0.0) THEN 1 ELSE 0 END AS "Decision" 
FROM linear_model_cte