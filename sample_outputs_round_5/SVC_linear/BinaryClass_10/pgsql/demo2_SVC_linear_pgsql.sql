-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "SV_data" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3, "Values".sv_4 AS sv_4, "Values".sv_5 AS sv_5, "Values".sv_6 AS sv_6, "Values".sv_7 AS sv_7, "Values".sv_8 AS sv_8, "Values".sv_9 AS sv_9 
FROM (SELECT 0 AS sv_idx, -0.746720122238 AS dual_coeff, 0.307270260433 AS sv_0, 0.332093325357 AS sv_1, -0.566150704198 AS sv_2, -0.499670747475 AS sv_3, 2.04867204628 AS sv_4, 1.08796268538 AS sv_5, 0.00616995708427 AS sv_6, 0.40572998401 AS sv_7, -0.923415160876 AS sv_8, -1.90296360533 AS sv_9 UNION ALL SELECT 1 AS sv_idx, -0.395318211995 AS dual_coeff, 0.0360313207883 AS sv_0, -0.66123157931 AS sv_1, -1.72077891112 AS sv_2, -0.0746200357707 AS sv_3, 3.00474159694 AS sv_4, 0.555135410096 AS sv_5, 0.177931123825 AS sv_6, 0.485785427841 AS sv_7, -0.899903727639 AS sv_8, 2.62439946753 AS sv_9 UNION ALL SELECT 2 AS sv_idx, -1.0 AS dual_coeff, -0.471019854214 AS sv_0, 0.574000869198 AS sv_1, -0.133265970675 AS sv_2, 0.577848150595 AS sv_3, 1.44096031129 AS sv_4, -0.349591211987 AS sv_5, -0.38637030856 AS sv_6, 0.5146627145 AS sv_7, -0.695333678623 AS sv_8, 0.830581098984 AS sv_9 UNION ALL SELECT 3 AS sv_idx, -0.949463931273 AS dual_coeff, 0.873783191843 AS sv_0, 0.451141603506 AS sv_1, -0.354253920208 AS sv_2, 0.971891736204 AS sv_3, -1.80021216066 AS sv_4, -1.16090677101 AS sv_5, -0.235737472372 AS sv_6, 0.245226158243 AS sv_7, -0.0576692585211 AS sv_8, 0.18264340317 AS sv_9 UNION ALL SELECT 4 AS sv_idx, -1.0 AS dual_coeff, 1.14298534749 AS sv_0, 0.295292067282 AS sv_1, -1.18027777428 AS sv_2, -0.719318130733 AS sv_3, 0.134202078747 AS sv_4, 1.20286701408 AS sv_5, 1.97339304564 AS sv_6, 0.190630782284 AS sv_7, -0.624218400583 AS sv_8, -0.699286711546 AS sv_9 UNION ALL SELECT 5 AS sv_idx, -0.388108633108 AS dual_coeff, -1.00563734592 AS sv_0, 0.417330028862 AS sv_1, 0.321857324782 AS sv_2, -0.722887731348 AS sv_3, -0.835988598125 AS sv_4, 1.4562215248 AS sv_5, 0.135020767647 AS sv_6, 0.459458985686 AS sv_7, -1.10739505366 AS sv_8, -0.964928546108 AS sv_9 UNION ALL SELECT 6 AS sv_idx, 0.958662088059 AS dual_coeff, 0.461807090918 AS sv_0, 0.722869397611 AS sv_1, -0.0280739066546 AS sv_2, -0.886851305351 AS sv_3, 1.61181492977 AS sv_4, 1.12045913098 AS sv_5, 0.386583377833 AS sv_6, -0.157572301824 AS sv_7, -0.0660095090532 AS sv_8, -0.529031187844 AS sv_9 UNION ALL SELECT 7 AS sv_idx, 1.0 AS dual_coeff, 0.591397621818 AS sv_0, 1.56549467033 AS sv_1, -1.37331490498 AS sv_2, 0.598479481975 AS sv_3, -0.0992727280782 AS sv_4, -0.429810109098 AS sv_5, -0.105511745921 AS sv_6, 0.45968859638 AS sv_7, -0.588708057067 AS sv_8, 0.631400109422 AS sv_9 UNION ALL SELECT 8 AS sv_idx, 0.520948810555 AS dual_coeff, -0.298298657853 AS sv_0, -1.63994884195 AS sv_1, -0.702495134634 AS sv_2, 0.0595211118089 AS sv_3, -0.784856701148 AS sv_4, -0.168283978784 AS sv_5, -0.996046403227 AS sv_6, -0.090221188968 AS sv_7, 0.185070688115 AS sv_8, -0.446552537606 AS sv_9 UNION ALL SELECT 9 AS sv_idx, 1.0 AS dual_coeff, -0.79994524891 AS sv_0, -0.752018698784 AS sv_1, -0.788841515553 AS sv_2, -0.706245457972 AS sv_3, -0.00250588980189 AS sv_4, 1.13517110567 AS sv_5, 2.35583652998 AS sv_6, 0.137533303863 AS sv_7, -0.52392537157 AS sv_8, -0.591231629196 AS sv_9 UNION ALL SELECT 10 AS sv_idx, 1.0 AS dual_coeff, 0.682108428559 AS sv_0, 0.782579368893 AS sv_1, -0.105928030876 AS sv_2, 0.447693723911 AS sv_3, 1.38063283677 AS sv_4, -0.477695632396 AS sv_5, -0.546192425881 AS sv_6, 0.174755807319 AS sv_7, -0.137308367928 AS sv_8, 0.212669577883 AS sv_9) AS "Values"), 
kernel_cte AS 
(SELECT t."KEY" AS "KEY", t.dot_product AS dot_product 
FROM (SELECT full_join_data_sv."KEY" AS "KEY", sum(full_join_data_sv.dot_prod1) + 0.569329110369 AS dot_product 
FROM (SELECT "ADS"."KEY" AS "KEY", "SV_data".dual_coeff * ("ADS"."Feature_0" * "SV_data".sv_0 + "ADS"."Feature_1" * "SV_data".sv_1 + "ADS"."Feature_2" * "SV_data".sv_2 + "ADS"."Feature_3" * "SV_data".sv_3 + "ADS"."Feature_4" * "SV_data".sv_4 + "ADS"."Feature_5" * "SV_data".sv_5 + "ADS"."Feature_6" * "SV_data".sv_6 + "ADS"."Feature_7" * "SV_data".sv_7 + "ADS"."Feature_8" * "SV_data".sv_8 + "ADS"."Feature_9" * "SV_data".sv_9) AS dot_prod1 
FROM "BinaryClass_10" AS "ADS", "SV_data") AS full_join_data_sv GROUP BY full_join_data_sv."KEY") AS t)
 SELECT kernel_cte."KEY" AS "KEY", -kernel_cte.dot_product AS "Score_0", kernel_cte.dot_product AS "Score_1", CAST(NULL AS FLOAT(53)) AS "Proba_0", CAST(NULL AS FLOAT(53)) AS "Proba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CASE WHEN (kernel_cte.dot_product >= 0.0) THEN 1 ELSE 0 END AS "Decision" 
FROM kernel_cte