-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 5.877 ELSE "ADS"."Feature_0" END AS imputer_output_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 3.006 ELSE "ADS"."Feature_1" END AS imputer_output_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 3.967 ELSE "ADS"."Feature_2" END AS imputer_output_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 1.294 ELSE "ADS"."Feature_3" END AS imputer_output_5 
FROM iris AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".imputer_output_2 AS FLOAT) - 5.877) / 0.803349861517 AS scaler_output_2, (CAST("ADS_imp_1_OUT".imputer_output_3 AS FLOAT) - 3.006) / 0.434239565217 AS scaler_output_3, (CAST("ADS_imp_1_OUT".imputer_output_4 AS FLOAT) - 3.967) / 1.64469176443 AS scaler_output_4, (CAST("ADS_imp_1_OUT".imputer_output_5 AS FLOAT) - 1.294) / 0.729769826726 AS scaler_output_5 
FROM "ADS_imp_1_OUT"), 
"SV_data_0" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3 
FROM (SELECT 0 AS sv_idx, 0.321326121424 AS dual_coeff, -0.967200017353 AS sv_0, 0.677045629992 AS sv_1, -1.3783737774 AS sv_2, -1.08801429015 AS sv_3 UNION ALL SELECT 1 AS sv_idx, 0.5659461079 AS dual_coeff, -1.71407261763 AS sv_0, -1.6258306625 AS sv_1, -1.62158044302 AS sv_2, -1.3620733053 AS sv_3) AS "Values"), 
kernel_cte_0 AS 
(SELECT t_1."KEY" AS "KEY_0", t_1.dot_product AS "Score_0" 
FROM (SELECT full_join_data_sv_1."KEY" AS "KEY", sum(full_join_data_sv_1.dot_prod1) + -1.75145486449 AS dot_product 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "SV_data_0".dual_coeff * ("ADS_sca_2_OUT".scaler_output_2 * "SV_data_0".sv_0 + "ADS_sca_2_OUT".scaler_output_3 * "SV_data_0".sv_1 + "ADS_sca_2_OUT".scaler_output_4 * "SV_data_0".sv_2 + "ADS_sca_2_OUT".scaler_output_5 * "SV_data_0".sv_3) AS dot_prod1 
FROM "ADS_sca_2_OUT", "SV_data_0") AS full_join_data_sv_1 GROUP BY full_join_data_sv_1."KEY") AS t_1), 
"SV_data_1" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3 
FROM (SELECT 0 AS sv_idx, -0.0 AS dual_coeff, -0.344806183792 AS sv_0, -0.0138172577549 AS sv_1, 0.324072881938 AS sv_2, 0.282280785606 AS sv_3 UNION ALL SELECT 1 AS sv_idx, -0.0 AS dual_coeff, 0.526545183192 AS sv_0, 0.677045629992 AS sv_1, 0.445676214748 AS sv_2, 0.419310293182 AS sv_3 UNION ALL SELECT 2 AS sv_idx, -0.887272229325 AS dual_coeff, -0.967200017353 AS sv_0, -1.165255404 AS sv_1, -0.587952114135 AS sv_2, -0.265837244697 AS sv_3 UNION ALL SELECT 3 AS sv_idx, -0.0 AS dual_coeff, -0.469284950505 AS sv_0, -1.6258306625 AS sv_1, 0.0200645499136 AS sv_2, 0.00822177045455 AS sv_3 UNION ALL SELECT 4 AS sv_idx, -0.0 AS dual_coeff, 0.526545183192 AS sv_0, -1.6258306625 AS sv_1, 0.263271215533 AS sv_2, 0.00822177045455 AS sv_3 UNION ALL SELECT 5 AS sv_idx, -0.0 AS dual_coeff, 0.40206641648 AS sv_0, -1.85611829175 AS sv_1, 0.324072881938 AS sv_2, 0.282280785606 AS sv_3 UNION ALL SELECT 6 AS sv_idx, -0.0 AS dual_coeff, 0.0286301163438 AS sv_0, 0.446758000743 AS sv_1, 0.506477881153 AS sv_2, 0.693369308334 AS sv_3 UNION ALL SELECT 7 AS sv_idx, -0.0 AS dual_coeff, 0.526545183192 AS sv_0, -1.165255404 AS sv_1, 0.567279547557 AS sv_2, 0.282280785606 AS sv_3 UNION ALL SELECT 8 AS sv_idx, -0.0 AS dual_coeff, 0.277587649768 AS sv_0, -0.244104887004 AS sv_1, 0.445676214748 AS sv_2, 0.14525127803 AS sv_3 UNION ALL SELECT 9 AS sv_idx, -0.0 AS dual_coeff, -0.593763717217 AS sv_0, -0.0138172577549 AS sv_1, 0.324072881938 AS sv_2, 0.282280785606 AS sv_3 UNION ALL SELECT 10 AS sv_idx, -0.0 AS dual_coeff, 1.02446025004 AS sv_0, -0.0138172577549 AS sv_1, 0.628081213962 AS sv_2, 0.556339800758 AS sv_3 UNION ALL SELECT 11 AS sv_idx, -0.0 AS dual_coeff, 1.27341778346 AS sv_0, 0.216470371494 AS sv_1, 0.567279547557 AS sv_2, 0.282280785606 AS sv_3) AS "Values"), 
kernel_cte_1 AS 
(SELECT t_2."KEY" AS "KEY_1", t_2.dot_product AS "Score_1" 
FROM (SELECT full_join_data_sv_2."KEY" AS "KEY", sum(full_join_data_sv_2.dot_prod1) + -0.447295474648 AS dot_product 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "SV_data_1".dual_coeff * ("ADS_sca_2_OUT".scaler_output_2 * "SV_data_1".sv_0 + "ADS_sca_2_OUT".scaler_output_3 * "SV_data_1".sv_1 + "ADS_sca_2_OUT".scaler_output_4 * "SV_data_1".sv_2 + "ADS_sca_2_OUT".scaler_output_5 * "SV_data_1".sv_3) AS dot_prod1 
FROM "ADS_sca_2_OUT", "SV_data_1") AS full_join_data_sv_2 GROUP BY full_join_data_sv_2."KEY") AS t_2), 
"SV_data_2" AS 
(SELECT "Values".sv_idx AS sv_idx, "Values".dual_coeff AS dual_coeff, "Values".sv_0 AS sv_0, "Values".sv_1 AS sv_1, "Values".sv_2 AS sv_2, "Values".sv_3 AS sv_3 
FROM (SELECT 0 AS sv_idx, -0.0 AS dual_coeff, 0.277587649768 AS sv_0, -0.0138172577549 AS sv_1, 0.567279547557 AS sv_2, 0.693369308334 AS sv_3 UNION ALL SELECT 1 AS sv_idx, -0.288160573508 AS dual_coeff, -1.21615755078 AS sv_0, -1.165255404 AS sv_1, 0.324072881938 AS sv_2, 0.556339800758 AS sv_3 UNION ALL SELECT 2 AS sv_idx, -0.0 AS dual_coeff, 0.775502716616 AS sv_0, 0.446758000743 AS sv_1, 0.688882880367 AS sv_2, 0.967428323485 AS sv_3 UNION ALL SELECT 3 AS sv_idx, -0.0 AS dual_coeff, 0.526545183192 AS sv_0, -0.704680145502 AS sv_1, 0.567279547557 AS sv_2, 0.693369308334 AS sv_3 UNION ALL SELECT 4 AS sv_idx, -0.0 AS dual_coeff, 0.0286301163438 AS sv_0, -0.0138172577549 AS sv_1, 0.688882880367 AS sv_2, 0.693369308334 AS sv_3 UNION ALL SELECT 5 AS sv_idx, -0.0 AS dual_coeff, 0.153108883056 AS sv_0, -0.0138172577549 AS sv_1, 0.506477881153 AS sv_2, 0.693369308334 AS sv_3 UNION ALL SELECT 6 AS sv_idx, -0.0 AS dual_coeff, 0.277587649768 AS sv_0, -0.934967774751 AS sv_1, 0.992891212391 AS sv_2, 0.14525127803 AS sv_3 UNION ALL SELECT 7 AS sv_idx, -0.0 AS dual_coeff, 0.526545183192 AS sv_0, -0.474392516253 AS sv_1, 0.688882880367 AS sv_2, 0.282280785606 AS sv_3 UNION ALL SELECT 8 AS sv_idx, -0.0 AS dual_coeff, 1.6468540836 AS sv_0, -0.0138172577549 AS sv_1, 1.1144945452 AS sv_2, 0.419310293182 AS sv_3 UNION ALL SELECT 9 AS sv_idx, -0.0 AS dual_coeff, 0.153108883056 AS sv_0, -1.85611829175 AS sv_1, 0.628081213962 AS sv_2, 0.282280785606 AS sv_3) AS "Values"), 
kernel_cte_2 AS 
(SELECT t_3."KEY" AS "KEY_2", t_3.dot_product AS "Score_2" 
FROM (SELECT full_join_data_sv_3."KEY" AS "KEY", sum(full_join_data_sv_3.dot_prod1) + 2.35139831875 AS dot_product 
FROM (SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "SV_data_2".dual_coeff * ("ADS_sca_2_OUT".scaler_output_2 * "SV_data_2".sv_0 + "ADS_sca_2_OUT".scaler_output_3 * "SV_data_2".sv_1 + "ADS_sca_2_OUT".scaler_output_4 * "SV_data_2".sv_2 + "ADS_sca_2_OUT".scaler_output_5 * "SV_data_2".sv_3) AS dot_prod1 
FROM "ADS_sca_2_OUT", "SV_data_2") AS full_join_data_sv_3 GROUP BY full_join_data_sv_3."KEY") AS t_3), 
"OVR_Join_CTE" AS 
(SELECT kernel_cte_0."KEY_0" AS "KEY_0", kernel_cte_0."Score_0" AS "Score_0", kernel_cte_1."KEY_1" AS "KEY_1", kernel_cte_1."Score_1" AS "Score_1", kernel_cte_2."KEY_2" AS "KEY_2", kernel_cte_2."Score_2" AS "Score_2" 
FROM kernel_cte_0 LEFT OUTER JOIN kernel_cte_1 ON kernel_cte_0."KEY_0" = kernel_cte_1."KEY_1" LEFT OUTER JOIN kernel_cte_2 ON kernel_cte_2."KEY_2" = kernel_cte_1."KEY_1"), 
orig_cte AS 
(SELECT "OVR_Join_CTE"."KEY_0" AS "KEY", "OVR_Join_CTE"."Score_0" AS "Score_0", "OVR_Join_CTE"."Score_1" AS "Score_1", "OVR_Join_CTE"."Score_2" AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "Decision" 
FROM "OVR_Join_CTE"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte