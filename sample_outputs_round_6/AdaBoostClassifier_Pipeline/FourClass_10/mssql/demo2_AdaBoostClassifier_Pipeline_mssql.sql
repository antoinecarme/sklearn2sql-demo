-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.0621529258787 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN -0.134914352429 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.142715414747 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN -0.672030145735 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.00857240475991 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN -0.333563592303 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.252257114855 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.213736161191 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -0.156377033982 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.029763058312 ELSE [ADS].[Feature_9] END AS impter_11 
FROM [FourClass_10] AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - -0.0621529258787) / 0.994070995503 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - -0.134914352429) / 1.00266855649 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - 0.142715414747) / 1.51890359643 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - -0.672030145735) / 1.38882717551 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - 0.00857240475991) / 0.919016855533 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - -0.333563592303) / 1.72032681504 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - 0.252257114855) / 0.910811349041 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.213736161191) / 1.5427284266 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - -0.156377033982) / 1.00803889463 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - 0.029763058312) / 1.8153504719 AS scaler_11 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.10109038650989532) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'scaler_4' AS feature, -0.10109038650989532 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2835820895522388 AS [Proba_0], -1.26025364022 AS [LogProba_0], 0.23880597014925375 AS [Proba_1], -1.43210389715 AS [LogProba_1], 0.23880597014925375 AS [Proba_2], -1.43210389715 AS [LogProba_2], 0.23880597014925375 AS [Proba_3], -1.43210389715 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.53125 AS [Proba_0], -0.632522558744 AS [LogProba_0], 0.40625000000000006 AS [Proba_1], -0.900786545338 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.06250000000000003 AS [Proba_3], -2.77258872224 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05714285714285716 AS [Proba_0], -2.86220088093 AS [LogProba_0], 0.08571428571428573 AS [Proba_1], -2.45673577282 AS [LogProba_1], 0.45714285714285713 AS [Proba_2], -0.78275933925 AS [LogProba_2], 0.4 AS [Proba_3], -0.916290731874 AS [LogProba_3], 2 AS [Decision]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Proba_0] AS [Proba_0], [DT_node_data].[LogProba_0] AS [LogProba_0], [DT_node_data].[Proba_1] AS [Proba_1], [DT_node_data].[LogProba_1] AS [LogProba_1], [DT_node_data].[Proba_2] AS [Proba_2], [DT_node_data].[LogProba_2] AS [LogProba_2], [DT_node_data].[Proba_3] AS [Proba_3], [DT_node_data].[LogProba_3] AS [LogProba_3], [DT_node_data].[Decision] AS [Decision] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[AdaBoost_Estim_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0, CAST(NULL AS FLOAT) AS [Score_0_0], [DT_Output].[Proba_0] AS [Proba_0_0], [DT_Output].[LogProba_0] AS [LogProba_0_0], CAST(NULL AS FLOAT) AS [Score_0_1], [DT_Output].[Proba_1] AS [Proba_0_1], [DT_Output].[LogProba_1] AS [LogProba_0_1], CAST(NULL AS FLOAT) AS [Score_0_2], [DT_Output].[Proba_2] AS [Proba_0_2], [DT_Output].[LogProba_2] AS [LogProba_0_2], CAST(NULL AS FLOAT) AS [Score_0_3], [DT_Output].[Proba_3] AS [Proba_0_3], [DT_Output].[LogProba_3] AS [LogProba_0_3], [DT_Output].[Decision] AS [Decision_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.5326590538024902) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'scaler_11' AS feature, -0.5326590538024902 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.250013739208372 AS [Proba_0], -1.3862394058 AS [LogProba_0], 0.2500137392083722 AS [Proba_1], -1.3862394058 AS [LogProba_1], 0.24995878237488348 AS [Proba_2], -1.38645924521 AS [LogProba_2], 0.2500137392083723 AS [Proba_3], -1.3862394058 AS [LogProba_3], 3 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9410937604458649 AS [Proba_0], -0.0607125052043 AS [LogProba_0], 9.548561043293285e-05 AS [Proba_1], -9.25653499793 AS [LogProba_1], 0.058810753943702214 AS [Proba_2], -2.8334305506 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.081492787669414e-05 AS [Proba_0], -10.3875113141 AS [LogProba_0], 0.34041614406101856 AS [Proba_1], -1.07758645667 AS [LogProba_1], 0.31910235714081764 AS [Proba_2], -1.14224335888 AS [LogProba_2], 0.34045068387028704 AS [Proba_3], -1.07748499833 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Proba_0] AS [Proba_0], [DT_node_data_1].[LogProba_0] AS [LogProba_0], [DT_node_data_1].[Proba_1] AS [Proba_1], [DT_node_data_1].[LogProba_1] AS [LogProba_1], [DT_node_data_1].[Proba_2] AS [Proba_2], [DT_node_data_1].[LogProba_2] AS [LogProba_2], [DT_node_data_1].[Proba_3] AS [Proba_3], [DT_node_data_1].[LogProba_3] AS [LogProba_3], [DT_node_data_1].[Decision] AS [Decision] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[AdaBoost_Estim_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1, CAST(NULL AS FLOAT) AS [Score_1_0], [DT_Output_1].[Proba_0] AS [Proba_1_0], [DT_Output_1].[LogProba_0] AS [LogProba_1_0], CAST(NULL AS FLOAT) AS [Score_1_1], [DT_Output_1].[Proba_1] AS [Proba_1_1], [DT_Output_1].[LogProba_1] AS [LogProba_1_1], CAST(NULL AS FLOAT) AS [Score_1_2], [DT_Output_1].[Proba_2] AS [Proba_1_2], [DT_Output_1].[LogProba_2] AS [LogProba_1_2], CAST(NULL AS FLOAT) AS [Score_1_3], [DT_Output_1].[Proba_3] AS [Proba_1_3], [DT_Output_1].[LogProba_3] AS [LogProba_1_3], [DT_Output_1].[Decision] AS [Decision_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_4 <= -0.5493842363357544) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'scaler_4' AS feature, -0.5493842363357544 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25000404966394213 AS [Proba_0], -1.3862781626 AS [LogProba_0], 0.2500040496639423 AS [Proba_1], -1.3862781626 AS [LogProba_1], 0.25000404966394235 AS [Proba_2], -1.3862781626 AS [LogProba_2], 0.24998785100817317 AS [Proba_3], -1.38634295827 AS [LogProba_3], 2 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9997793002537868 AS [Proba_0], -0.000220724103986 AS [LogProba_0], 0.00011081637664062124 AS [Proba_1], -9.10763599096 AS [LogProba_1], 0.0 AS [Proba_2], -1.79769313486231e+308 AS [LogProba_2], 0.00010988336957246728 AS [Proba_3], -9.11609103128 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.1597491933962045e-05 AS [Proba_0], -10.7429333642 AS [LogProba_0], 0.3333209145367257 AS [Proba_1], -1.09864954575 AS [LogProba_1], 0.3333578618079936 AS [Proba_2], -1.09853870595 AS [LogProba_2], 0.3332996261633468 AS [Proba_3], -1.09871341529 AS [LogProba_3], 2 AS [Decision]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Proba_0] AS [Proba_0], [DT_node_data_2].[LogProba_0] AS [LogProba_0], [DT_node_data_2].[Proba_1] AS [Proba_1], [DT_node_data_2].[LogProba_1] AS [LogProba_1], [DT_node_data_2].[Proba_2] AS [Proba_2], [DT_node_data_2].[LogProba_2] AS [LogProba_2], [DT_node_data_2].[Proba_3] AS [Proba_3], [DT_node_data_2].[LogProba_3] AS [LogProba_3], [DT_node_data_2].[Decision] AS [Decision] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[AdaBoost_Estim_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2, CAST(NULL AS FLOAT) AS [Score_2_0], [DT_Output_2].[Proba_0] AS [Proba_2_0], [DT_Output_2].[LogProba_0] AS [LogProba_2_0], CAST(NULL AS FLOAT) AS [Score_2_1], [DT_Output_2].[Proba_1] AS [Proba_2_1], [DT_Output_2].[LogProba_1] AS [LogProba_2_1], CAST(NULL AS FLOAT) AS [Score_2_2], [DT_Output_2].[Proba_2] AS [Proba_2_2], [DT_Output_2].[LogProba_2] AS [LogProba_2_2], CAST(NULL AS FLOAT) AS [Score_2_3], [DT_Output_2].[Proba_3] AS [Proba_2_3], [DT_Output_2].[LogProba_3] AS [LogProba_2_3], [DT_Output_2].[Decision] AS [Decision_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_11 <= -0.5326590538024902) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Proba_0] AS [Proba_0], [Values].[LogProba_0] AS [LogProba_0], [Values].[Proba_1] AS [Proba_1], [Values].[LogProba_1] AS [LogProba_1], [Values].[Proba_2] AS [Proba_2], [Values].[LogProba_2] AS [LogProba_2], [Values].[Proba_3] AS [Proba_3], [Values].[LogProba_3] AS [LogProba_3], [Values].[Decision] AS [Decision] 
FROM (SELECT 0 AS node_id, 'scaler_11' AS feature, -0.5326590538024902 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25000089345153886 AS [Proba_0], -1.38629078732 AS [LogProba_0], 0.25000089345153875 AS [Proba_1], -1.38629078732 AS [LogProba_1], 0.24999731964538388 AS [Proba_2], -1.3863050826 AS [LogProba_2], 0.25000089345153853 AS [Proba_3], -1.38629078732 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.999908043227512 AS [Proba_0], -9.19610007712e-05 AS [LogProba_0], 2.7169157187532965e-05 AS [Proba_1], -10.513428155 AS [LogProba_1], 6.47876153003628e-05 AS [Proba_2], -9.64439609478 AS [LogProba_2], 0.0 AS [Proba_3], -1.79769313486231e+308 AS [LogProba_3], 0 AS [Decision] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.765203891246464e-06 AS [Proba_0], -12.2541702324 AS [LogProba_0], 0.3333344944925498 AS [Proba_1], -1.0986088052 AS [LogProba_1], 0.33331718844423175 AS [Proba_2], -1.09866072451 AS [LogProba_2], 0.3333435518593271 AS [Proba_3], -1.09858163356 AS [LogProba_3], 3 AS [Decision]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Proba_0] AS [Proba_0], [DT_node_data_3].[LogProba_0] AS [LogProba_0], [DT_node_data_3].[Proba_1] AS [Proba_1], [DT_node_data_3].[LogProba_1] AS [LogProba_1], [DT_node_data_3].[Proba_2] AS [Proba_2], [DT_node_data_3].[LogProba_2] AS [LogProba_2], [DT_node_data_3].[Proba_3] AS [Proba_3], [DT_node_data_3].[LogProba_3] AS [LogProba_3], [DT_node_data_3].[Decision] AS [Decision] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[AdaBoost_Estim_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3, CAST(NULL AS FLOAT) AS [Score_3_0], [DT_Output_3].[Proba_0] AS [Proba_3_0], [DT_Output_3].[LogProba_0] AS [LogProba_3_0], CAST(NULL AS FLOAT) AS [Score_3_1], [DT_Output_3].[Proba_1] AS [Proba_3_1], [DT_Output_3].[LogProba_1] AS [LogProba_3_1], CAST(NULL AS FLOAT) AS [Score_3_2], [DT_Output_3].[Proba_2] AS [Proba_3_2], [DT_Output_3].[LogProba_2] AS [LogProba_3_2], CAST(NULL AS FLOAT) AS [Score_3_3], [DT_Output_3].[Proba_3] AS [Proba_3_3], [DT_Output_3].[LogProba_3] AS [LogProba_3_3], [DT_Output_3].[Decision] AS [Decision_3] 
FROM [DT_Output_3]), 
[AdaBoost_Join_CTE] AS 
(SELECT [AdaBoost_Estim_0].join_key_0 AS join_key_0, [AdaBoost_Estim_0].[Score_0_0] AS [Score_0_0], [AdaBoost_Estim_0].[Proba_0_0] AS [Proba_0_0], [AdaBoost_Estim_0].[LogProba_0_0] AS [LogProba_0_0], [AdaBoost_Estim_0].[Score_0_1] AS [Score_0_1], [AdaBoost_Estim_0].[Proba_0_1] AS [Proba_0_1], [AdaBoost_Estim_0].[LogProba_0_1] AS [LogProba_0_1], [AdaBoost_Estim_0].[Score_0_2] AS [Score_0_2], [AdaBoost_Estim_0].[Proba_0_2] AS [Proba_0_2], [AdaBoost_Estim_0].[LogProba_0_2] AS [LogProba_0_2], [AdaBoost_Estim_0].[Score_0_3] AS [Score_0_3], [AdaBoost_Estim_0].[Proba_0_3] AS [Proba_0_3], [AdaBoost_Estim_0].[LogProba_0_3] AS [LogProba_0_3], [AdaBoost_Estim_0].[Decision_0] AS [Decision_0], [AdaBoost_Estim_1].join_key_1 AS join_key_1, [AdaBoost_Estim_1].[Score_1_0] AS [Score_1_0], [AdaBoost_Estim_1].[Proba_1_0] AS [Proba_1_0], [AdaBoost_Estim_1].[LogProba_1_0] AS [LogProba_1_0], [AdaBoost_Estim_1].[Score_1_1] AS [Score_1_1], [AdaBoost_Estim_1].[Proba_1_1] AS [Proba_1_1], [AdaBoost_Estim_1].[LogProba_1_1] AS [LogProba_1_1], [AdaBoost_Estim_1].[Score_1_2] AS [Score_1_2], [AdaBoost_Estim_1].[Proba_1_2] AS [Proba_1_2], [AdaBoost_Estim_1].[LogProba_1_2] AS [LogProba_1_2], [AdaBoost_Estim_1].[Score_1_3] AS [Score_1_3], [AdaBoost_Estim_1].[Proba_1_3] AS [Proba_1_3], [AdaBoost_Estim_1].[LogProba_1_3] AS [LogProba_1_3], [AdaBoost_Estim_1].[Decision_1] AS [Decision_1], [AdaBoost_Estim_2].join_key_2 AS join_key_2, [AdaBoost_Estim_2].[Score_2_0] AS [Score_2_0], [AdaBoost_Estim_2].[Proba_2_0] AS [Proba_2_0], [AdaBoost_Estim_2].[LogProba_2_0] AS [LogProba_2_0], [AdaBoost_Estim_2].[Score_2_1] AS [Score_2_1], [AdaBoost_Estim_2].[Proba_2_1] AS [Proba_2_1], [AdaBoost_Estim_2].[LogProba_2_1] AS [LogProba_2_1], [AdaBoost_Estim_2].[Score_2_2] AS [Score_2_2], [AdaBoost_Estim_2].[Proba_2_2] AS [Proba_2_2], [AdaBoost_Estim_2].[LogProba_2_2] AS [LogProba_2_2], [AdaBoost_Estim_2].[Score_2_3] AS [Score_2_3], [AdaBoost_Estim_2].[Proba_2_3] AS [Proba_2_3], [AdaBoost_Estim_2].[LogProba_2_3] AS [LogProba_2_3], [AdaBoost_Estim_2].[Decision_2] AS [Decision_2], [AdaBoost_Estim_3].join_key_3 AS join_key_3, [AdaBoost_Estim_3].[Score_3_0] AS [Score_3_0], [AdaBoost_Estim_3].[Proba_3_0] AS [Proba_3_0], [AdaBoost_Estim_3].[LogProba_3_0] AS [LogProba_3_0], [AdaBoost_Estim_3].[Score_3_1] AS [Score_3_1], [AdaBoost_Estim_3].[Proba_3_1] AS [Proba_3_1], [AdaBoost_Estim_3].[LogProba_3_1] AS [LogProba_3_1], [AdaBoost_Estim_3].[Score_3_2] AS [Score_3_2], [AdaBoost_Estim_3].[Proba_3_2] AS [Proba_3_2], [AdaBoost_Estim_3].[LogProba_3_2] AS [LogProba_3_2], [AdaBoost_Estim_3].[Score_3_3] AS [Score_3_3], [AdaBoost_Estim_3].[Proba_3_3] AS [Proba_3_3], [AdaBoost_Estim_3].[LogProba_3_3] AS [LogProba_3_3], [AdaBoost_Estim_3].[Decision_3] AS [Decision_3] 
FROM [AdaBoost_Estim_0] LEFT OUTER JOIN [AdaBoost_Estim_1] ON [AdaBoost_Estim_0].join_key_0 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_2] ON [AdaBoost_Estim_2].join_key_2 = [AdaBoost_Estim_1].join_key_1 LEFT OUTER JOIN [AdaBoost_Estim_3] ON [AdaBoost_Estim_3].join_key_3 = [AdaBoost_Estim_2].join_key_2), 
[AdaBoost_AVG_Scores_BN] AS 
(SELECT [AdaBoost_Join_CTE].join_key_0 AS [KEY], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 AS [Score_0], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_0], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 AS [Score_1], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_1], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 AS [Score_2], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_2], (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 + (3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4)) / 4.0 AS [Score_3], 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_0_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_0_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_0_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_1_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_1_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_1_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_2_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_2_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_2_3]) ELSE -1.79769313486231e+308 END END) / 4) + 3.0 * (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END - (CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_0] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_0] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_0]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_1] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_1] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_1]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_2] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_2] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_2]) ELSE -1.79769313486231e+308 END END + CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] <= 2.22044604925e-16) THEN -36.0436533891 ELSE CASE WHEN ([AdaBoost_Join_CTE].[Proba_3_3] IS NULL OR [AdaBoost_Join_CTE].[Proba_3_3] > 0.0) THEN log([AdaBoost_Join_CTE].[Proba_3_3]) ELSE -1.79769313486231e+308 END END) / 4) AS [Proba_3] 
FROM [AdaBoost_Join_CTE]), 
[AdaBoost_AVG_Scores] AS 
(SELECT [AdaBoost_AVG_Scores_BN].[KEY] AS [KEY], [AdaBoost_AVG_Scores_BN].[Score_0] AS [Score_0], exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 4.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 4.0) / 3)) AS [Proba_0], CAST(NULL AS FLOAT) AS [LogProba_0], [AdaBoost_AVG_Scores_BN].[Score_1] AS [Score_1], exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 4.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 4.0) / 3)) AS [Proba_1], CAST(NULL AS FLOAT) AS [LogProba_1], [AdaBoost_AVG_Scores_BN].[Score_2] AS [Score_2], exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 4.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 4.0) / 3)) AS [Proba_2], CAST(NULL AS FLOAT) AS [LogProba_2], [AdaBoost_AVG_Scores_BN].[Score_3] AS [Score_3], exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 4.0) / 3) / (exp(([AdaBoost_AVG_Scores_BN].[Proba_0] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_1] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_2] / 4.0) / 3) + exp(([AdaBoost_AVG_Scores_BN].[Proba_3] / 4.0) / 3)) AS [Proba_3], CAST(NULL AS FLOAT) AS [LogProba_3] 
FROM [AdaBoost_AVG_Scores_BN]), 
orig_cte AS 
(SELECT [AdaBoost_AVG_Scores].[KEY] AS [KEY], [AdaBoost_AVG_Scores].[Score_0] AS [Score_0], [AdaBoost_AVG_Scores].[Score_1] AS [Score_1], [AdaBoost_AVG_Scores].[Score_2] AS [Score_2], [AdaBoost_AVG_Scores].[Score_3] AS [Score_3], [AdaBoost_AVG_Scores].[Proba_0] AS [Proba_0], [AdaBoost_AVG_Scores].[Proba_1] AS [Proba_1], [AdaBoost_AVG_Scores].[Proba_2] AS [Proba_2], [AdaBoost_AVG_Scores].[Proba_3] AS [Proba_3], [AdaBoost_AVG_Scores].[LogProba_0] AS [LogProba_0], [AdaBoost_AVG_Scores].[LogProba_1] AS [LogProba_1], [AdaBoost_AVG_Scores].[LogProba_2] AS [LogProba_2], [AdaBoost_AVG_Scores].[LogProba_3] AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [AdaBoost_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.[max_LogProba] = score_class_union.[LogProba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.[max_Proba] = score_class_union.[Proba] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.[max_Score] = score_class_union.[Score] AND score_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score] 
FROM score_max)
 SELECT arg_max_cte.[KEY] AS [KEY], arg_max_cte.[Score_0] AS [Score_0], arg_max_cte.[Score_1] AS [Score_1], arg_max_cte.[Score_2] AS [Score_2], arg_max_cte.[Score_3] AS [Score_3], arg_max_cte.[Proba_0] AS [Proba_0], arg_max_cte.[Proba_1] AS [Proba_1], arg_max_cte.[Proba_2] AS [Proba_2], arg_max_cte.[Proba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[Proba_0] IS NULL OR arg_max_cte.[Proba_0] > 0.0) THEN log(arg_max_cte.[Proba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[Proba_1] IS NULL OR arg_max_cte.[Proba_1] > 0.0) THEN log(arg_max_cte.[Proba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[Proba_2] IS NULL OR arg_max_cte.[Proba_2] > 0.0) THEN log(arg_max_cte.[Proba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[Proba_3] IS NULL OR arg_max_cte.[Proba_3] > 0.0) THEN log(arg_max_cte.[Proba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte