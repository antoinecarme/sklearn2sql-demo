-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.945000171661377) THEN CASE WHEN ("ADS"."Feature_12" <= 14.239999771118164) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2910499572753906) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_7" <= 2.001199960708618) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.433000087738037) THEN CASE WHEN ("ADS"."Feature_0" <= 5.189024925231934) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 2.7422351837158203) THEN 13 ELSE 14 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.945000171661377 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.635693215339227 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 14.239999771118164 AS threshold, 278 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.454676258992812 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 1.2910499572753906 AS threshold, 173 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.235260115606927 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 170 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.76294117647058 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, 2.001199960708618 AS threshold, 105 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.873333333333338 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.060416666666663 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.2421052631579 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 7.433000087738037 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 38.1327868852459 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 5.189024925231934 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.13428571428571 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.115625 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.666666666666668 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 2.7422351837158203 AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 46.20769230769231 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 47.17999999999999 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.9 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, "DT_Output"."Estimator" AS "Estimator_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 9.015000343322754) THEN CASE WHEN ("ADS"."Feature_12" <= 3.934999942779541) THEN CASE WHEN ("ADS"."Feature_11" <= 396.2099914550781) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.470000267028809) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_12" <= 15.135000228881836) THEN CASE WHEN ("ADS"."Feature_7" <= 1.3007500171661377) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.16395999491214752) THEN 13 ELSE 14 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 9.015000343322754 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.509439528023602 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 3.934999942779541 AS threshold, 136 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.18970588235293 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_11' AS feature, 396.2099914550781 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.69047619047618 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 48.980000000000004 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.96666666666667 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_5' AS feature, 7.470000267028809 AS threshold, 115 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.906956521739115 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 103 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 28.399029126213595 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 42.85 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_12' AS feature, 15.135000228881836 AS threshold, 203 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.694088669950744 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_7' AS feature, 1.3007500171661377 AS threshold, 117 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.808547008547016 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 27.900000000000002 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.425225225225223 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.16395999491214752 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.456976744186049 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.342857142857145 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 79 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 12.669620253164558 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, "DT_Output_1"."Estimator" AS "Estimator_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_12" <= 5.724999904632568) THEN CASE WHEN ("ADS"."Feature_0" <= 0.2542850077152252) THEN CASE WHEN ("ADS"."Feature_5" <= 7.370500087738037) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_12" <= 5.184999942779541) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= 1.2271499633789062) THEN 9 ELSE CASE WHEN ("ADS"."Feature_12" <= 14.795000076293945) THEN 11 ELSE 12 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_12' AS feature, 5.724999904632568 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.573156342182894 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.2542850077152252 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 36.183333333333316 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 7.370500087738037 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 32.84313725490196 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 31.571739130434775 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.54 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_12' AS feature, 5.184999942779541 AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 42.4925925925926 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.65833333333334 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.166666666666668 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, 1.2271499633789062 AS threshold, 261 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.103448275862064 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 10 AS node_id, 'Feature_12' AS feature, 14.795000076293945 AS threshold, 257 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.65369649805447 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 153 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.11372549019608 AS "Estimator" UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 104 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.034615384615382 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, "DT_Output_2"."Estimator" AS "Estimator_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_5" <= 6.670000076293945) THEN CASE WHEN ("ADS"."Feature_12" <= 15.0) THEN CASE WHEN ("ADS"."Feature_7" <= 1.2271499633789062) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 6.516739845275879) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.659000039100647) THEN CASE WHEN ("ADS"."Feature_5" <= 7.470000267028809) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_5" <= 7.353000164031982) THEN 13 ELSE 14 END END END AS node_id_2 
FROM boston AS "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_5' AS feature, 6.670000076293945 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 25.358112094395313 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_12' AS feature, 15.0 AS threshold, 220 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.949999999999978 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_7' AS feature, 1.2271499633789062 AS threshold, 134 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.236567164179096 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 50.0 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 129 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 22.199224806201563 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 6.516739845275879 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.829069767441863 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.24651162790698 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.411627906976744 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, 0.659000039100647 AS threshold, 119 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 35.356302521008416 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'Feature_5' AS feature, 7.470000267028809 AS threshold, 107 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 37.682242990654224 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 73 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 33.57123287671234 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 46.50882352941176 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_5' AS feature, 7.353000164031982 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 14.616666666666667 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.4875 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.875 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, "DT_Output_3"."Estimator" AS "Estimator_3" 
FROM "DT_Output_3"), 
"AdaBoost_Join_CTE" AS 
(SELECT "AdaBoost_Estim_0".join_key_0 AS join_key_0, "AdaBoost_Estim_0"."Estimator_0" AS "Estimator_0", "AdaBoost_Estim_1".join_key_1 AS join_key_1, "AdaBoost_Estim_1"."Estimator_1" AS "Estimator_1", "AdaBoost_Estim_2".join_key_2 AS join_key_2, "AdaBoost_Estim_2"."Estimator_2" AS "Estimator_2", "AdaBoost_Estim_3".join_key_3 AS join_key_3, "AdaBoost_Estim_3"."Estimator_3" AS "Estimator_3" 
FROM "AdaBoost_Estim_0" LEFT OUTER JOIN "AdaBoost_Estim_1" ON "AdaBoost_Estim_0".join_key_0 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_2" ON "AdaBoost_Estim_2".join_key_2 = "AdaBoost_Estim_1".join_key_1 LEFT OUTER JOIN "AdaBoost_Estim_3" ON "AdaBoost_Estim_3".join_key_3 = "AdaBoost_Estim_2".join_key_2), 
"WeightedEstimators" AS 
(SELECT "Values"."Key" AS "Key", "Values".sub_estimator AS sub_estimator, "Values"."Weight" AS "Weight", "Values"."Value" AS "Value" 
FROM (SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 0 AS sub_estimator, 0.295326111043 AS "Weight", "AdaBoost_Join_CTE"."Estimator_0" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 1 AS sub_estimator, 0.226798329995 AS "Weight", "AdaBoost_Join_CTE"."Estimator_1" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 2 AS sub_estimator, 0.291473495236 AS "Weight", "AdaBoost_Join_CTE"."Estimator_2" AS "Value" 
FROM "AdaBoost_Join_CTE" UNION ALL SELECT "AdaBoost_Join_CTE".join_key_0 AS "Key", 3 AS sub_estimator, 0.186402063727 AS "Weight", "AdaBoost_Join_CTE"."Estimator_3" AS "Value" 
FROM "AdaBoost_Join_CTE") AS "Values"), 
"Cumulative_Frequencies" AS 
(SELECT u1."Key" AS "Key", u1.sub_estimator AS sub_estimator, u1."Weight" AS "Weight", u1."Value" AS "Value", (SELECT sum(u2."Weight") AS sum_1 
FROM "WeightedEstimators" AS u2 
WHERE u1."Key" = u2."Key" AND u1."Value" >= u2."Value") AS cum_weight 
FROM "WeightedEstimators" AS u1), 
"Quantiles" AS 
(SELECT "AdaBoost_Join_CTE".join_key_0 AS join_key_0, "AdaBoost_Join_CTE"."Estimator_0" AS "Estimator_0", "AdaBoost_Join_CTE".join_key_1 AS join_key_1, "AdaBoost_Join_CTE"."Estimator_1" AS "Estimator_1", "AdaBoost_Join_CTE".join_key_2 AS join_key_2, "AdaBoost_Join_CTE"."Estimator_2" AS "Estimator_2", "AdaBoost_Join_CTE".join_key_3 AS join_key_3, "AdaBoost_Join_CTE"."Estimator_3" AS "Estimator_3", (SELECT min("Cumulative_Frequencies"."Value") AS min_1 
FROM "Cumulative_Frequencies" 
WHERE "AdaBoost_Join_CTE".join_key_0 = "Cumulative_Frequencies"."Key" AND "Cumulative_Frequencies".cum_weight >= 0.5) AS "Median" 
FROM "AdaBoost_Join_CTE")
 SELECT "Quantiles".join_key_0 AS "KEY", "Quantiles"."Median" AS "Estimator" 
FROM "Quantiles"