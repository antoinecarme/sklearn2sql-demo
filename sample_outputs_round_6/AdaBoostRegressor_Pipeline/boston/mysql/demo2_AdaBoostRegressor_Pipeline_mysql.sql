-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 3.26981218289 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 11.814159292 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 10.9415929204 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.0796460176991 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.552612684366 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 6.31431563422 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 67.1421828909 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 3.83938820059 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 9.43362831858 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 404.619469027 ELSE `ADS`.`Feature_9` END AS impter_11, CASE WHEN (`ADS`.`Feature_10` IS NULL) THEN 18.3663716814 ELSE `ADS`.`Feature_10` END AS impter_12, CASE WHEN (`ADS`.`Feature_11` IS NULL) THEN 359.759587021 ELSE `ADS`.`Feature_11` END AS impter_13, CASE WHEN (`ADS`.`Feature_12` IS NULL) THEN 12.3942772861 ELSE `ADS`.`Feature_12` END AS impter_14 
FROM boston AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 3.26981218289) / 8.06435679573 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 11.814159292) / 23.6845226609 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 10.9415929204) / 6.91219450398 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.0796460176991) / 0.270744398952 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.552612684366) / 0.116521457827 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 6.31431563422) / 0.713158124818 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - 67.1421828909) / 28.1589507917 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 3.83938820059) / 2.09968835038 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 9.43362831858) / 8.61076650564 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 404.619469027) / 168.750972129 AS scaler_11, (CAST(`ADS_imp_1_OUT`.impter_12 AS DOUBLE) - 18.3663716814) / 2.15547367794 AS scaler_12, (CAST(`ADS_imp_1_OUT`.impter_13 AS DOUBLE) - 359.759587021) / 89.5754249699 AS scaler_13, (CAST(`ADS_imp_1_OUT`.impter_14 AS DOUBLE) - 12.3942772861) / 6.97945748877 AS scaler_14 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.8843541741371155) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.26445072889328003) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.213674545288086) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -0.8754576444625854) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.5686343908309937) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.23798708617687225) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= -0.06542086601257324) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.8843541741371155 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.635693215339227 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, 0.26445072889328003 AS threshold, 278 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.454676258992812 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -1.213674545288086 AS threshold, 173 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.235260115606927 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 50.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 170 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.76294117647058 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_9' AS feature, -0.8754576444625854 AS threshold, 105 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 15.873333333333338 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.060416666666663 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.2421052631579 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_7' AS feature, 1.5686343908309937 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 38.1327868852459 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_2' AS feature, 0.23798708617687225 AS threshold, 35 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.13428571428571 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 33.115625 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.666666666666668 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_2' AS feature, -0.06542086601257324 AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 46.20769230769231 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 47.17999999999999 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.9 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`AdaBoost_Estim_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.48417478799819946) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.2120250463485718) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_13 <= 0.4069242477416992) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.620516300201416) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.3926841914653778) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.209054708480835) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= -0.3851332664489746) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -0.48417478799819946 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.509439528023602 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, -1.2120250463485718 AS threshold, 136 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.18970588235293 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_13' AS feature, 0.4069242477416992 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 44.69047619047618 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 48.980000000000004 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 33.96666666666667 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 1.620516300201416 AS threshold, 115 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 29.906956521739115 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 103 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 28.399029126213595 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 42.85 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_14' AS feature, 0.3926841914653778 AS threshold, 203 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.694088669950744 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_9' AS feature, -1.209054708480835 AS threshold, 117 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.808547008547016 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 27.900000000000002 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 111 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.425225225225223 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_2' AS feature, -0.3851332664489746 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.456976744186049 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.342857142857145 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 79 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.669620253164558 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`AdaBoost_Estim_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -0.9555581212043762) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= -0.37393277883529663) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.4809961318969727) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.0329279899597168) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2441074848175049) THEN 9 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.34396982192993164) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -0.9555581212043762 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 24.573156342182894 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_2' AS feature, -0.37393277883529663 AS threshold, 78 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 36.183333333333316 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 1.4809961318969727 AS threshold, 51 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 32.84313725490196 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 46 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 31.571739130434775 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 44.54 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_14' AS feature, -1.0329279899597168 AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 42.4925925925926 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 44.65833333333334 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.166666666666668 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_9' AS feature, -1.2441074848175049 AS threshold, 261 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.103448275862064 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 50.0 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'scaler_14' AS feature, 0.34396982192993164 AS threshold, 257 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.65369649805447 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 153 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.11372549019608 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 104 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.034615384615382 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`AdaBoost_Estim_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.4987454414367676) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 0.37334173917770386) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= -1.2441074848175049) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.40262699127197266) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.9130276441574097) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.620516300201416) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 1.4564573764801025) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.4987454414367676 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 25.358112094395313 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, 0.37334173917770386 AS threshold, 220 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.949999999999978 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -1.2441074848175049 AS threshold, 134 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.236567164179096 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 50.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 129 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.199224806201563 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_2' AS feature, 0.40262699127197266 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.829069767441863 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.24651162790698 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.411627906976744 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_6' AS feature, 0.9130276441574097 AS threshold, 119 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 35.356302521008416 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_7' AS feature, 1.620516300201416 AS threshold, 107 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 37.682242990654224 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 73 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 33.57123287671234 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 34 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 46.50882352941176 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_7' AS feature, 1.4564573764801025 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.616666666666667 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.4875 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.875 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`AdaBoost_Estim_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM `DT_Output_3`), 
`AdaBoost_Join_CTE` AS 
(SELECT `AdaBoost_Estim_0`.join_key_0 AS join_key_0, `AdaBoost_Estim_0`.`Estimator_0` AS `Estimator_0`, `AdaBoost_Estim_1`.join_key_1 AS join_key_1, `AdaBoost_Estim_1`.`Estimator_1` AS `Estimator_1`, `AdaBoost_Estim_2`.join_key_2 AS join_key_2, `AdaBoost_Estim_2`.`Estimator_2` AS `Estimator_2`, `AdaBoost_Estim_3`.join_key_3 AS join_key_3, `AdaBoost_Estim_3`.`Estimator_3` AS `Estimator_3` 
FROM `AdaBoost_Estim_0` LEFT OUTER JOIN `AdaBoost_Estim_1` ON `AdaBoost_Estim_0`.join_key_0 = `AdaBoost_Estim_1`.join_key_1 LEFT OUTER JOIN `AdaBoost_Estim_2` ON `AdaBoost_Estim_2`.join_key_2 = `AdaBoost_Estim_1`.join_key_1 LEFT OUTER JOIN `AdaBoost_Estim_3` ON `AdaBoost_Estim_3`.join_key_3 = `AdaBoost_Estim_2`.join_key_2), 
`WeightedEstimators` AS 
(SELECT `Values`.`Key` AS `Key`, `Values`.sub_estimator AS sub_estimator, `Values`.`Weight` AS `Weight`, `Values`.`Value` AS `Value` 
FROM (SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 0 AS sub_estimator, 0.295326111043 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_0` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 1 AS sub_estimator, 0.226798329995 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_1` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 2 AS sub_estimator, 0.291473495236 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_2` AS `Value` 
FROM `AdaBoost_Join_CTE` UNION ALL SELECT `AdaBoost_Join_CTE`.join_key_0 AS `Key`, 3 AS sub_estimator, 0.186402063727 AS `Weight`, `AdaBoost_Join_CTE`.`Estimator_3` AS `Value` 
FROM `AdaBoost_Join_CTE`) AS `Values`), 
`Cumulative_Frequencies` AS 
(SELECT u1.`Key` AS `Key`, u1.sub_estimator AS sub_estimator, u1.`Weight` AS `Weight`, u1.`Value` AS `Value`, (SELECT sum(u2.`Weight`) AS sum_1 
FROM `WeightedEstimators` AS u2 
WHERE u1.`Key` = u2.`Key` AND u1.`Value` >= u2.`Value`) AS cum_weight 
FROM `WeightedEstimators` AS u1), 
`Quantiles` AS 
(SELECT `AdaBoost_Join_CTE`.join_key_0 AS join_key_0, `AdaBoost_Join_CTE`.`Estimator_0` AS `Estimator_0`, `AdaBoost_Join_CTE`.join_key_1 AS join_key_1, `AdaBoost_Join_CTE`.`Estimator_1` AS `Estimator_1`, `AdaBoost_Join_CTE`.join_key_2 AS join_key_2, `AdaBoost_Join_CTE`.`Estimator_2` AS `Estimator_2`, `AdaBoost_Join_CTE`.join_key_3 AS join_key_3, `AdaBoost_Join_CTE`.`Estimator_3` AS `Estimator_3`, (SELECT min(`Cumulative_Frequencies`.`Value`) AS min_1 
FROM `Cumulative_Frequencies` 
WHERE `AdaBoost_Join_CTE`.join_key_0 = `Cumulative_Frequencies`.`Key` AND `Cumulative_Frequencies`.cum_weight >= 0.5) AS `Median` 
FROM `AdaBoost_Join_CTE`)
 SELECT `Quantiles`.join_key_0 AS `KEY`, `Quantiles`.`Median` AS `Estimator` 
FROM `Quantiles`