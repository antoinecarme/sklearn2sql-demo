-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_27" <= 0.14544999599456787) THEN CASE WHEN ("ADS"."Feature_23" <= 961.550048828125) THEN CASE WHEN ("ADS"."Feature_18" <= 0.008710499852895737) THEN 3 ELSE CASE WHEN ("ADS"."Feature_27" <= 0.12229999899864197) THEN CASE WHEN ("ADS"."Feature_10" <= 0.6431000232696533) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_10" <= 0.40389999747276306) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_26" <= 0.1906999945640564) THEN CASE WHEN ("ADS"."Feature_25" <= 0.1615000069141388) THEN 13 ELSE 14 END ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_20" <= 12.130000114440918) THEN 17 ELSE CASE WHEN ("ADS"."Feature_26" <= 0.20340000092983246) THEN 19 ELSE CASE WHEN ("ADS"."Feature_7" <= 0.05634000152349472) THEN CASE WHEN ("ADS"."Feature_29" <= 0.07778000086545944) THEN 22 ELSE 23 END ELSE 24 END END END END AS node_id_2 
FROM "BreastCancer" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0" AS "Proba_0", "Values"."LogProba_0" AS "LogProba_0", "Values"."Proba_1" AS "Proba_1", "Values"."LogProba_1" AS "LogProba_1", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_27' AS feature, 0.14544999599456787 AS threshold, 381 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3569553805774278 AS "Proba_0", -1.03014448939 AS "LogProba_0", 0.6430446194225722 AS "Proba_1", -0.441541164582 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_23' AS feature, 961.550048828125 AS threshold, 260 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07307692307692308 AS "Proba_0", -2.61624265185 AS "LogProba_0", 0.926923076923077 AS "Proba_1", -0.0758846975249 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_18' AS feature, 0.008710499852895737 AS threshold, 245 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.024489795918367346 AS "Proba_0", -3.70949874132 AS "LogProba_0", 0.9755102040816327 AS "Proba_1", -0.0247946586132 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_27' AS feature, 0.12229999899864197 AS threshold, 244 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.020491803278688523 AS "Proba_0", -3.88773031286 AS "LogProba_0", 0.9795081967213115 AS "Proba_1", -0.0207046733617 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_10' AS feature, 0.6431000232696533 AS threshold, 223 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.004484304932735426 AS "Proba_0", -5.40717177146 AS "LogProba_0", 0.9955156950672646 AS "Proba_1", -0.00449438958784 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 220 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_10' AS feature, 0.40389999747276306 AS threshold, 21 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19047619047619047 AS "Proba_0", -1.6582280766 AS "LogProba_0", 0.8095238095238095 AS "Proba_1", -0.211309093667 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.058823529411764705 AS "Proba_0", -2.83321334406 AS "LogProba_0", 0.9411764705882353 AS "Proba_1", -0.0606246218164 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0", -0.287682072452 AS "LogProba_0", 0.25 AS "Proba_1", -1.38629436112 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'Feature_26' AS feature, 0.1906999945640564 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8666666666666667 AS "Proba_0", -0.143100843641 AS "LogProba_0", 0.13333333333333333 AS "Proba_1", -2.01490302054 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_25' AS feature, 0.1615000069141388 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0", -1.09861228867 AS "LogProba_0", 0.6666666666666666 AS "Proba_1", -0.405465108108 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_20' AS feature, 12.130000114440918 AS threshold, 121 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9669421487603306 AS "Proba_0", -0.033616610799 AS "LogProba_0", 0.03305785123966942 AS "Proba_1", -3.40949618448 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_26' AS feature, 0.20340000092983246 AS threshold, 119 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9831932773109243 AS "Proba_0", -0.0169495583138 AS "LogProba_0", 0.01680672268907563 AS "Proba_1", -4.08597631255 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, 'Feature_7' AS feature, 0.05634000152349472 AS threshold, 118 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9915254237288136 AS "Proba_0", -0.00851068966791 AS "LogProba_0", 0.00847457627118644 AS "Proba_1", -4.77068462447 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, 'Feature_29' AS feature, 0.07778000086545944 AS threshold, 7 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8571428571428571 AS "Proba_0", -0.154150679827 AS "LogProba_0", 0.14285714285714285 AS "Proba_1", -1.94591014906 AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0", -BINARY_FLOAT_INFINITY AS "LogProba_0", 1.0 AS "Proba_1", 0.0 AS "LogProba_1", 1 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 111 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0", 0.0 AS "LogProba_0", 0.0 AS "Proba_1", -BINARY_FLOAT_INFINITY AS "LogProba_1", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0" AS "Proba_0", "DT_node_data"."LogProba_0" AS "LogProba_0", "DT_node_data"."Proba_1" AS "Proba_1", "DT_node_data"."LogProba_1" AS "LogProba_1", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", "DT_Output"."Proba_0" AS "Proba_0", "DT_Output"."Proba_1" AS "Proba_1", "DT_Output"."LogProba_0" AS "LogProba_0", "DT_Output"."LogProba_1" AS "LogProba_1", "DT_Output"."Decision" AS "Decision" 
FROM "DT_Output"