-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_4" <= -0.7742739915847778) THEN CASE WHEN ("ADS"."Feature_6" <= 0.000509397592395544) THEN CASE WHEN ("ADS"."Feature_0" <= -1.4906485080718994) THEN 3 ELSE CASE WHEN ("ADS"."Feature_4" <= -1.0439451932907104) THEN CASE WHEN ("ADS"."Feature_8" <= -1.3940743207931519) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_4" <= -0.8898084759712219) THEN 9 ELSE 10 END END END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.7828669548034668) THEN CASE WHEN ("ADS"."Feature_5" <= 0.5103978514671326) THEN CASE WHEN ("ADS"."Feature_0" <= 1.309967279434204) THEN 14 ELSE 15 END ELSE CASE WHEN ("ADS"."Feature_5" <= 1.5131040811538696) THEN 17 ELSE 18 END END ELSE 19 END END ELSE CASE WHEN ("ADS"."Feature_8" <= -0.5591259002685547) THEN CASE WHEN ("ADS"."Feature_2" <= -0.461887001991272) THEN CASE WHEN ("ADS"."Feature_6" <= 0.5408638715744019) THEN CASE WHEN ("ADS"."Feature_6" <= -2.1511330604553223) THEN 24 ELSE 25 END ELSE CASE WHEN ("ADS"."Feature_4" <= 0.7703291773796082) THEN 27 ELSE 28 END END ELSE CASE WHEN ("ADS"."Feature_1" <= -0.4787316620349884) THEN CASE WHEN ("ADS"."Feature_8" <= -0.8064039945602417) THEN 31 ELSE 32 END ELSE CASE WHEN ("ADS"."Feature_7" <= -0.1285819411277771) THEN 34 ELSE 35 END END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.13706254959106445) THEN CASE WHEN ("ADS"."Feature_5" <= 0.2036825716495514) THEN CASE WHEN ("ADS"."Feature_7" <= 0.39660173654556274) THEN 39 ELSE 40 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.5072808861732483) THEN 42 ELSE 43 END END ELSE CASE WHEN ("ADS"."Feature_8" <= 1.644869089126587) THEN CASE WHEN ("ADS"."Feature_7" <= -0.7238290905952454) THEN 46 ELSE 47 END ELSE 48 END END END END AS node_id_2 
FROM "RandomReg_10" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_4' AS feature, -0.7742739915847778 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.633342033811616 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.000509397592395544 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -176.86623305612738 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_0' AS feature, -1.4906485080718994 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -278.3290486632466 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -47.46738054718544 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_4' AS feature, -1.0439451932907104 AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -307.18675717775426 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_8' AS feature, -1.3940743207931519 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -371.7738864602146 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -294.82660354435075 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -397.4229807655025 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_4' AS feature, -0.8898084759712219 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -242.599627895294 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -200.29077783037374 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -256.7025779169341 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, 'Feature_9' AS feature, 0.7828669548034668 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -24.672009645448494 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_5' AS feature, 0.5103978514671326 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -59.12599747045435 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_0' AS feature, 1.309967279434204 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -92.59572097741197 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -72.63602468631578 AS "Estimator" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -132.51511355960432 AS "Estimator" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_5' AS feature, 1.5131040811538696 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -8.921412210017948 AS "Estimator" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -10.583073625036434 AS "Estimator" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.259750794999462 AS "Estimator" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 147.5979294795808 AS "Estimator" FROM DUAL UNION ALL SELECT 20 AS node_id, 'Feature_8' AS feature, -0.5591259002685547 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 60.85437330975555 AS "Estimator" FROM DUAL UNION ALL SELECT 21 AS node_id, 'Feature_2' AS feature, -0.461887001991272 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -79.89986294625291 AS "Estimator" FROM DUAL UNION ALL SELECT 22 AS node_id, 'Feature_6' AS feature, 0.5408638715744019 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -149.8631009957428 AS "Estimator" FROM DUAL UNION ALL SELECT 23 AS node_id, 'Feature_6' AS feature, -2.1511330604553223 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -180.71671714981593 AS "Estimator" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -133.68164834968672 AS "Estimator" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -196.39507341652566 AS "Estimator" FROM DUAL UNION ALL SELECT 26 AS node_id, 'Feature_4' AS feature, 0.7703291773796082 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -88.15586868759647 AS "Estimator" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -109.27975085817155 AS "Estimator" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -67.03198651702138 AS "Estimator" FROM DUAL UNION ALL SELECT 29 AS node_id, 'Feature_1' AS feature, -0.4787316620349884 AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -27.42743440913549 AS "Estimator" FROM DUAL UNION ALL SELECT 30 AS node_id, 'Feature_8' AS feature, -0.8064039945602417 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.31059044863262386 AS "Estimator" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -22.498041832327104 AS "Estimator" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.9134678756192 AS "Estimator" FROM DUAL UNION ALL SELECT 33 AS node_id, 'Feature_7' AS feature, -0.1285819411277771 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -55.16545926690361 AS "Estimator" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -36.27224402421852 AS "Estimator" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -74.05867450958868 AS "Estimator" FROM DUAL UNION ALL SELECT 36 AS node_id, 'Feature_2' AS feature, 0.13706254959106445 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 112.71119719354814 AS "Estimator" FROM DUAL UNION ALL SELECT 37 AS node_id, 'Feature_5' AS feature, 0.2036825716495514 AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 45.379488746205105 AS "Estimator" FROM DUAL UNION ALL SELECT 38 AS node_id, 'Feature_7' AS feature, 0.39660173654556274 AS threshold, 10 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -26.642208235985713 AS "Estimator" FROM DUAL UNION ALL SELECT 39 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -56.112240830709275 AS "Estimator" FROM DUAL UNION ALL SELECT 40 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 91.23792214290847 AS "Estimator" FROM DUAL UNION ALL SELECT 41 AS node_id, 'Feature_3' AS feature, 0.5072808861732483 AS threshold, 11 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 110.85375873001495 AS "Estimator" FROM DUAL UNION ALL SELECT 42 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 44.10581530456046 AS "Estimator" FROM DUAL UNION ALL SELECT 43 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 227.66265972456029 AS "Estimator" FROM DUAL UNION ALL SELECT 44 AS node_id, 'Feature_8' AS feature, 1.644869089126587 AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 195.88566056967778 AS "Estimator" FROM DUAL UNION ALL SELECT 45 AS node_id, 'Feature_7' AS feature, -0.7238290905952454 AS threshold, 16 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 180.83018578765976 AS "Estimator" FROM DUAL UNION ALL SELECT 46 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 112.09203870867438 AS "Estimator" FROM DUAL UNION ALL SELECT 47 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 203.74290148065487 AS "Estimator" FROM DUAL UNION ALL SELECT 48 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 436.77325708196645 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"