-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.00976655076239 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0123099198121 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.00159214064279 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.0717914788854 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.133135732689 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0209464440155 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.109967461342 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.244992189802 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0443472948589 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.0587725256851 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "BinaryClass_10" "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.00976655076239) / 1.30386721878 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.0123099198121) / 1.14465237461 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.00159214064279) / 1.08361926355 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.0717914788854) / 1.0215450771 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - -0.133135732689) / 0.914839062885 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.0209464440155) / 1.19635104597 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.109967461342) / 0.952289567995 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.244992189802) / 1.00462187924 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0443472948589) / 1.06717546349 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.0587725256851) / 0.998182946812 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
random_number_cte AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", dbms_random.value AS uniform 
FROM "ADS_sca_2_OUT"), 
multinomial_cte AS 
(SELECT random_number_cte."KEY" AS "KEY", CASE WHEN (random_number_cte.uniform <= 0.477611940299) THEN 0 ELSE CASE WHEN (random_number_cte.uniform <= 1.0) THEN 1 END END AS multinomial_expr 
FROM random_number_cte), 
dummy_class_reg_cte AS 
(SELECT multinomial_cte."KEY" AS "KEY", 0.477611940299 AS "Proba_0", CASE WHEN (0.477611940299 IS NULL OR 0.477611940299 > 0.0) THEN ln(0.477611940299) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", 0.522388059701 AS "Proba_1", CASE WHEN (0.522388059701 IS NULL OR 0.522388059701 > 0.0) THEN ln(0.522388059701) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", multinomial_cte.multinomial_expr AS "Decision" 
FROM multinomial_cte)
 SELECT dummy_class_reg_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", dummy_class_reg_cte."Proba_0" AS "Proba_0", dummy_class_reg_cte."Proba_1" AS "Proba_1", dummy_class_reg_cte."LogProba_0" AS "LogProba_0", dummy_class_reg_cte."LogProba_1" AS "LogProba_1", dummy_class_reg_cte."Decision" AS "Decision" 
FROM dummy_class_reg_cte