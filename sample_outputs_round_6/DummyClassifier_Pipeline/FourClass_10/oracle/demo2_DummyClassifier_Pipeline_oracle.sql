-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0428608505329 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.221280166913 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0747961880631 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.151542895354 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.347954478607 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0383338909328 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.110268349541 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0818819976471 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.160227925113 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.00619794779472 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "FourClass_10" "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0428608505329) / 1.52116029865 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.221280166913) / 1.64652494408 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.0747961880631) / 1.00760896721 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.151542895354) / 1.13151267009 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.347954478607) / 1.61417475435 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.0383338909328) / 1.15757530687 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.110268349541) / 1.64475583597 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0818819976471) / 1.03215246281 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.160227925113) / 1.08440590829 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.00619794779472) / 0.927009673645 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
random_number_cte AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", dbms_random.value AS uniform 
FROM "ADS_sca_2_OUT"), 
multinomial_cte AS 
(SELECT random_number_cte."KEY" AS "KEY", CASE WHEN (random_number_cte.uniform <= 0.238805970149) THEN 0 ELSE CASE WHEN (random_number_cte.uniform <= 0.507462686567) THEN 1 ELSE CASE WHEN (random_number_cte.uniform <= 0.716417910448) THEN 2 ELSE CASE WHEN (random_number_cte.uniform <= 1.0) THEN 3 END END END END AS multinomial_expr 
FROM random_number_cte), 
dummy_class_reg_cte AS 
(SELECT multinomial_cte."KEY" AS "KEY", 0.238805970149 AS "Proba_0", CASE WHEN (0.238805970149 IS NULL OR 0.238805970149 > 0.0) THEN ln(0.238805970149) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", 0.268656716418 AS "Proba_1", CASE WHEN (0.268656716418 IS NULL OR 0.268656716418 > 0.0) THEN ln(0.268656716418) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", 0.208955223881 AS "Proba_2", CASE WHEN (0.208955223881 IS NULL OR 0.208955223881 > 0.0) THEN ln(0.208955223881) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", 0.283582089552 AS "Proba_3", CASE WHEN (0.283582089552 IS NULL OR 0.283582089552 > 0.0) THEN ln(0.283582089552) ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", multinomial_cte.multinomial_expr AS "Decision" 
FROM multinomial_cte)
 SELECT dummy_class_reg_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", dummy_class_reg_cte."Proba_0" AS "Proba_0", dummy_class_reg_cte."Proba_1" AS "Proba_1", dummy_class_reg_cte."Proba_2" AS "Proba_2", dummy_class_reg_cte."Proba_3" AS "Proba_3", dummy_class_reg_cte."LogProba_0" AS "LogProba_0", dummy_class_reg_cte."LogProba_1" AS "LogProba_1", dummy_class_reg_cte."LogProba_2" AS "LogProba_2", dummy_class_reg_cte."LogProba_3" AS "LogProba_3", dummy_class_reg_cte."Decision" AS "Decision" 
FROM dummy_class_reg_cte