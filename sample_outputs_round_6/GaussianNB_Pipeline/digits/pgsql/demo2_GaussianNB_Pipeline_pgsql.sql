-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.293433083957 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.07398171239 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 11.8204488778 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.8071487947 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.80881130507 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.38570241064 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.131338320865 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00581878636741 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.96674979219 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.3283458022 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.0656691604 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.1853699086 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.04156275977 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 1.90191188695 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.106400665004 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.00166251039069 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.5719035744 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.99168744805 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.13549459684 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.04987531172 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.6965918537 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.87364921031 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0540315876974 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.000831255195345 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.5170407315 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 9.19950124688 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 9.02244389027 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 9.99418121363 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.60432252702 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.35245220283 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.000831255195345 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 2.29925187032 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 7.56691604323 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.1604322527 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.3674147963 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.75727348296 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.79966749792 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.00997506234414 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.55860349127 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.83790523691 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.30257689111 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 7.77306733167 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 8.29592684954 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.38819617623 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.0365752285952 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.00332502078138 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.715710723192 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.47714048213 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.5536159601 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.53948462178 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.83374896093 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.8029925187 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.243557772236 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.000831255195345 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.266832917706 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.43059019119 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.0864505403 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.8719866999 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.74812967581 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.15128844555 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.412302576891 ELSE "ADS"."Feature_63" END AS impter_65 
FROM digits AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.293433083957) / 0.859845005927 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 5.07398171239) / 4.71696110342 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 11.8204488778) / 4.22115333284 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 11.8071487947) / 4.33559553334 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 5.80881130507) / 5.69478817014 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 1.38570241064) / 3.36514752375 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.131338320865) / 1.03602946954 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.00581878636741) / 0.0954460521656 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 1.96674979219) / 3.17914416142 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 10.3283458022) / 5.41167293882 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 12.0656691604) / 3.94979003791 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 10.1853699086) / 4.76650673546 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 8.04156275977) / 6.0876066041 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 1.90191188695) / 3.64264316294 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.106400665004) / 0.822774695912 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.00166251039069) / 0.0407399858848 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 2.5719035744) / 3.56305629928 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 9.99168744805) / 5.64964316504 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 7.13549459684) / 5.81502871188 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 7.04987531172) / 6.15922069493 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 7.6965918537) / 6.25532232413 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 1.87364921031) / 3.41099813777 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0540315876974) / 0.421263533813 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.000831255195345) / 0.0288195109283 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 2.5170407315) / 3.19163503844 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 9.19950124688) / 6.15403007807 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 9.02244389027) / 5.83981191231 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 9.99418121363) / 6.10390491835 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 7.60432252702) / 5.91977802282 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 2.35245220283) / 3.79378678582 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.000831255195345) / 0.0288195109283 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 2.29925187032) / 3.51156139729 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 7.56691604323) / 6.31701730353 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 9.1604322527) / 6.1997798861 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 10.3674147963) / 5.87749718139 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 8.75727348296) / 5.85464866041 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 2.79966749792) / 3.50284528298 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.00997506234414) / 0.162790246582 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 1.55860349127) / 2.98466828413 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 6.83790523691) / 6.54553660728 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 7.30257689111) / 6.44510433727 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 7.77306733167) / 6.2858645059 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 8.29592684954) / 5.69877340506 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 3.38819617623) / 4.31911912467 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.0365752285952) / 0.362854080738 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.00332502078138) / 0.0911125468322 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.715710723192) / 1.75156338368 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 7.47714048213) / 5.70412935863 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 9.5536159601) / 5.24014268924 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 9.53948462178) / 5.28717094725 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 8.83374896093) / 6.03665375205 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 3.8029925187) / 4.99145647696 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.243557772236) / 1.08937190592 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.000831255195345) / 0.0288195109283 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.266832917706) / 0.887404536173 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 5.43059019119) / 5.07966086609 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 12.0864505403) / 4.32751151319 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 11.8719866999) / 4.84971877494 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 6.74812967581) / 5.89691744232 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 2.15128844555) / 4.1936167999 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.412302576891) / 1.98487588299 AS scaler_65 
FROM "ADS_imp_1_OUT"), 
"RawScores" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "Proba_0", -2.38304351466 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * -0.508387638572 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - -0.299352843997) * ("ADS_sca_2_OUT".scaler_3 - -0.299352843997)) / 0.095726060317) + (-0.5 * 0.854456385414 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - -0.191396647422) * ("ADS_sca_2_OUT".scaler_4 - -0.191396647422)) / 0.374029472575) + (-0.5 * 0.493013949936 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - 0.332794437125) * ("ADS_sca_2_OUT".scaler_5 - 0.332794437125)) / 0.260575373895) + (-0.5 * 1.27512546596 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - -0.0947395565672) * ("ADS_sca_2_OUT".scaler_6 - -0.0947395565672)) / 0.569639485147) + (-0.5 * 0.590190135304 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - -0.523282409672) * ("ADS_sca_2_OUT".scaler_7 - -0.523282409672)) / 0.287168269227) + (-0.5 * -4.62363123895 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - -0.40642628086) * ("ADS_sca_2_OUT".scaler_8 - -0.40642628086)) / 0.00156243729969) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928) * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505) * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505)) / 1e-09) + (-0.5 * 0.861450847204 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - -0.323927699708) * ("ADS_sca_2_OUT".scaler_11 - -0.323927699708)) / 0.376654778026) + (-0.5 * 0.841937583662 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - 0.418770464892) * ("ADS_sca_2_OUT".scaler_12 - 0.418770464892)) / 0.36937625886) + (-0.5 * 1.48057335163 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - 0.254799091086) * ("ADS_sca_2_OUT".scaler_13 - 0.254799091086)) / 0.699559998759) + (-0.5 * 1.40302320556 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - 0.297541527528) * ("ADS_sca_2_OUT".scaler_14 - 0.297541527528)) / 0.6473592647) + (-0.5 * 0.665513246295 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - 0.571810892053) * ("ADS_sca_2_OUT".scaler_15 - 0.571810892053)) / 0.309634156074) + (-0.5 * 0.40286660941 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - -0.277276677917) * ("ADS_sca_2_OUT".scaler_16 - -0.277276677917)) / 0.238112874055) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991) * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325) * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325)) / 1e-09) + (-0.5 * 1.32622220135 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - 0.340123789127) * ("ADS_sca_2_OUT".scaler_19 - 0.340123789127)) / 0.599502661456) + (-0.5 * 0.300966768142 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - 0.757319125692) * ("ADS_sca_2_OUT".scaler_20 - 0.757319125692)) / 0.215044499411) + (-0.5 * 1.49032772177 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - -0.347096734983) * ("ADS_sca_2_OUT".scaler_21 - -0.347096734983)) / 0.706417155171) + (-0.5 * 0.582448108532 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - -0.781858828578) * ("ADS_sca_2_OUT".scaler_22 - -0.781858828578)) / 0.284953588918) + (-0.5 * 0.642285295932 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - 0.738366981315) * ("ADS_sca_2_OUT".scaler_23 - 0.738366981315)) / 0.302524875911) + (-0.5 * 1.25960108107 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - 0.509810715828) * ("ADS_sca_2_OUT".scaler_24 - 0.509810715828)) / 0.560864472108) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881) * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * 1.40433985719 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - 0.907802316997) * ("ADS_sca_2_OUT".scaler_27 - 0.907802316997)) / 0.648212172695) + (-0.5 * 0.457501496957 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - 0.569253222909) * ("ADS_sca_2_OUT".scaler_28 - 0.569253222909)) / 0.251484085581) + (-0.5 * 0.791124968796 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - -1.20405468615) * ("ADS_sca_2_OUT".scaler_29 - -1.20405468615)) / 0.351076160485) + (-0.5 * -3.16830569662 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - -1.61372714701) * ("ADS_sca_2_OUT".scaler_30 - -1.61372714701)) / 0.00669641638873) + (-0.5 * 0.859987206761 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - 0.293595436962) * ("ADS_sca_2_OUT".scaler_31 - 0.293595436962)) / 0.376103894106) + (-0.5 * 0.907508928059 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - 1.06118936114) * ("ADS_sca_2_OUT".scaler_32 - 1.06118936114)) / 0.394408486752) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * 0.949104808629 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - 0.971778492616) * ("ADS_sca_2_OUT".scaler_35 - 0.971778492616)) / 0.411160241785) + (-0.5 * 0.404420166617 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - 0.657557907143) * ("ADS_sca_2_OUT".scaler_36 - 0.657557907143)) / 0.238483083523) + (-0.5 * -0.268828898427 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - -1.33804224347) * ("ADS_sca_2_OUT".scaler_37 - -1.33804224347)) / 0.121637987037) + (-0.5 * -3.44743525052 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - -1.75165421718) * ("ADS_sca_2_OUT".scaler_38 - -1.75165421718)) / 0.00506544991535) + (-0.5 * 0.920245668295 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - 0.0476138824455) * ("ADS_sca_2_OUT".scaler_39 - 0.0476138824455)) / 0.399464092821) + (-0.5 * 1.33748505102 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - 1.15025386662) * ("ADS_sca_2_OUT".scaler_40 - 1.15025386662)) / 0.60629293696) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * 1.34057897764 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - 0.630836585821) * ("ADS_sca_2_OUT".scaler_43 - 0.630836585821)) / 0.608171667643) + (-0.5 * -0.192521050534 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - 1.00060278376) * ("ADS_sca_2_OUT".scaler_44 - 1.00060278376)) / 0.131283244659) + (-0.5 * 0.271300124 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - -0.884232898225) * ("ADS_sca_2_OUT".scaler_45 - -0.884232898225)) / 0.208758553256) + (-0.5 * 0.502635863889 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - -0.961417096451) * ("ADS_sca_2_OUT".scaler_46 - -0.961417096451)) / 0.263094708695) + (-0.5 * 0.870647672441 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - 0.593066013668) * ("ADS_sca_2_OUT".scaler_47 - 0.593066013668)) / 0.380134784169) + (-0.5 * 1.41609182962 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - 0.460784281403) * ("ADS_sca_2_OUT".scaler_48 - 0.460784281403)) / 0.655874882068) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713) * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465) * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465)) / 1e-09) + (-0.5 * 1.22812336966 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - 0.0697246333096) * ("ADS_sca_2_OUT".scaler_51 - 0.0697246333096)) / 0.54348471464) + (-0.5 * 0.345066992854 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - 0.977697597879) * ("ADS_sca_2_OUT".scaler_52 - 0.977697597879)) / 0.224740230796) + (-0.5 * 1.14077462816 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - 0.0817470147829) * ("ADS_sca_2_OUT".scaler_53 - 0.0817470147829)) / 0.498026277018) + (-0.5 * 1.2484043987 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - 0.197856466954) * ("ADS_sca_2_OUT".scaler_54 - 0.197856466954)) / 0.554619676496) + (-0.5 * 0.570624328034 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - 0.717021942787) * ("ADS_sca_2_OUT".scaler_55 - 0.717021942787)) / 0.281604200468) + (-0.5 * 0.665435352511 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - -0.335947313238) * ("ADS_sca_2_OUT".scaler_56 - -0.335947313238)) / 0.309610038437) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546) * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * -2.64179422563 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - -0.290537064199) * ("ADS_sca_2_OUT".scaler_59 - -0.290537064199)) / 0.0113371391501) + (-0.5 * 0.587447818124 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - -0.240839500162) * ("ADS_sca_2_OUT".scaler_60 - -0.240839500162)) / 0.286381841558) + (-0.5 * 0.202849020575 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - 0.342256057029) * ("ADS_sca_2_OUT".scaler_61 - 0.342256057029)) / 0.194946903774) + (-0.5 * 0.760349287301 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - 0.241881725429) * ("ADS_sca_2_OUT".scaler_62 - 0.241881725429)) / 0.340436119437) + (-0.5 * 0.990090593023 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - -0.308670040862) * ("ADS_sca_2_OUT".scaler_63 - -0.308670040862)) / 0.428362074151) + (-0.5 * -1.55295480885 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - -0.472174108618) * ("ADS_sca_2_OUT".scaler_64 - -0.472174108618)) / 0.0336806471455) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - -0.207722095081) * ("ADS_sca_2_OUT".scaler_65 - -0.207722095081)) / 1e-09) AS "Score_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "Proba_1", -2.31345022286 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * -2.64767894333 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - -0.331489652958) * ("ADS_sca_2_OUT".scaler_3 - -0.331489652958)) / 0.0112706192042) + (-0.5 * 1.1579645966 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - -0.555484800983) * ("ADS_sca_2_OUT".scaler_4 - -0.555484800983)) / 0.506661338589) + (-0.5 * 2.41859156769 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - -0.548723776299) * ("ADS_sca_2_OUT".scaler_5 - -0.548723776299)) / 1.7873150135) + (-0.5 * 2.02499636984 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - -0.335411273267) * ("ADS_sca_2_OUT".scaler_6 - -0.335411273267)) / 1.20577112911) + (-0.5 * 1.82973974501 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - 0.00553573345334) * ("ADS_sca_2_OUT".scaler_7 - 0.00553573345334)) / 0.991895696977) + (-0.5 * 0.980890194995 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - -0.109622441616) * ("ADS_sca_2_OUT".scaler_8 - -0.109622441616)) / 0.424439046948) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928) * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505) * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505)) / 1e-09) + (-0.5 * -2.27997036971 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - -0.584278661298) * ("ADS_sca_2_OUT".scaler_11 - -0.584278661298)) / 0.0162795194588) + (-0.5 * 1.43262428484 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - -1.16317678987) * ("ADS_sca_2_OUT".scaler_12 - -1.16317678987)) / 0.666808232723) + (-0.5 * 2.13833451231 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - 0.287613139163) * ("ADS_sca_2_OUT".scaler_13 - 0.287613139163)) / 1.35047643621) + (-0.5 * 1.68471824157 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - 0.789720886235) * ("ADS_sca_2_OUT".scaler_14 - 0.789720886235)) / 0.857993440317) + (-0.5 * 1.94716390092 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - 0.0221610621779) * ("ADS_sca_2_OUT".scaler_15 - 0.0221610621779)) / 1.11548226327) + (-0.5 * 1.10057518741 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - -0.173776100378) * ("ADS_sca_2_OUT".scaler_16 - -0.173776100378)) / 0.478402964822) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991) * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325) * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325)) / 1e-09) + (-0.5 * 0.910404085458 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - -0.471827310788) * ("ADS_sca_2_OUT".scaler_19 - -0.471827310788)) / 0.395552015951) + (-0.5 * 1.81316382659 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - -0.510199257964) * ("ADS_sca_2_OUT".scaler_20 - -0.510199257964)) / 0.975589632175) + (-0.5 * -0.491648058873 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - 1.36111547567) * ("ADS_sca_2_OUT".scaler_21 - 1.36111547567)) / 0.0973419613521) + (-0.5 * 0.847008311148 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - 1.14341765166) * ("ADS_sca_2_OUT".scaler_22 - 1.14341765166)) / 0.371254021997) + (-0.5 * 1.75144230908 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - -0.0952391398389) * ("ADS_sca_2_OUT".scaler_23 - -0.0952391398389)) / 0.917195387107) + (-0.5 * 0.594862766376 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - -0.362062275686) * ("ADS_sca_2_OUT".scaler_24 - -0.362062275686)) / 0.288513240435) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881) * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * 1.93757232801 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - -0.114605906658) * ("ADS_sca_2_OUT".scaler_27 - -0.114605906658)) / 1.10483418137) + (-0.5 * 1.65708441264 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - 0.0112781892942) * ("ADS_sca_2_OUT".scaler_28 - 0.0112781892942)) / 0.834608393657) + (-0.5 * 0.797403600242 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - 0.937248409921) * ("ADS_sca_2_OUT".scaler_29 - 0.937248409921)) / 0.353287372736) + (-0.5 * 0.648531899428 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - 0.648011178288) * ("ADS_sca_2_OUT".scaler_30 - 0.648011178288)) / 0.304420543436) + (-0.5 * 1.83261422014 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - -0.283786448181) * ("ADS_sca_2_OUT".scaler_31 - -0.283786448181)) / 0.99475097824) + (-0.5 * -0.323876644879 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - -0.527048866803) * ("ADS_sca_2_OUT".scaler_32 - -0.527048866803)) / 0.115123051309) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * 0.703610999796 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - -0.369992639549) * ("ADS_sca_2_OUT".scaler_35 - -0.369992639549)) / 0.32165811035) + (-0.5 * 1.70046673368 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - -0.156257939946) * ("ADS_sca_2_OUT".scaler_36 - -0.156257939946)) / 0.871612501606) + (-0.5 * 1.55550469577 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - 0.451233913457) * ("ADS_sca_2_OUT".scaler_37 - 0.451233913457)) / 0.753992867446) + (-0.5 * 0.713876565932 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - 0.586595135255) * ("ADS_sca_2_OUT".scaler_38 - 0.586595135255)) / 0.324977119562) + (-0.5 * 1.77221690186 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - -0.558509778236) * ("ADS_sca_2_OUT".scaler_39 - -0.558509778236)) / 0.936449048811) + (-0.5 * -0.160809831264 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - -0.708092869212) * ("ADS_sca_2_OUT".scaler_40 - -0.708092869212)) / 0.135513109038) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * -0.387171887642 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - -0.409582881954) * ("ADS_sca_2_OUT".scaler_43 - -0.409582881954)) / 0.108062128426) + (-0.5 * 1.69658261423 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - -0.255110942036) * ("ADS_sca_2_OUT".scaler_44 - -0.255110942036)) / 0.868233620776) + (-0.5 * 1.80648883678 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - 0.479803107951) * ("ADS_sca_2_OUT".scaler_45 - 0.479803107951)) / 0.969099266989) + (-0.5 * 0.602883272015 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - 0.941160645927) * ("ADS_sca_2_OUT".scaler_46 - 0.941160645927)) / 0.290836567179) + (-0.5 * 1.913241602 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - -0.417626793316) * ("ADS_sca_2_OUT".scaler_47 - -0.417626793316)) / 1.07827714965) + (-0.5 * -0.87891957966 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - -0.71636795371) * ("ADS_sca_2_OUT".scaler_48 - -0.71636795371)) / 0.0660861129272) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713) * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465) * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465)) / 1e-09) + (-0.5 * -0.760530989189 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - -0.360636169739) * ("ADS_sca_2_OUT".scaler_51 - -0.360636169739)) / 0.0743919117866) + (-0.5 * 1.56776611694 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - -0.475521228436) * ("ADS_sca_2_OUT".scaler_52 - -0.475521228436)) / 0.763294802489) + (-0.5 * 2.05217132955 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - 0.312903950915) * ("ADS_sca_2_OUT".scaler_53 - 0.312903950915)) / 1.23898718941) + (-0.5 * 0.733358674657 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - 0.80232472632) * ("ADS_sca_2_OUT".scaler_54 - 0.80232472632)) / 0.331370434553) + (-0.5 * 2.03015386522 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - -0.143682649682) * ("ADS_sca_2_OUT".scaler_55 - -0.143682649682)) / 1.21200595235) + (-0.5 * 1.34619850693 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - -0.325861186605) * ("ADS_sca_2_OUT".scaler_56 - -0.325861186605)) / 0.611598926919) + (-0.5 * 3.1465699189 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - 0.424395542232) * ("ADS_sca_2_OUT".scaler_57 - 0.424395542232)) / 3.70133236135) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - -0.300689152274) * ("ADS_sca_2_OUT".scaler_59 - -0.300689152274)) / 1e-09) + (-0.5 * 0.722569784757 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - -0.647234753461) * ("ADS_sca_2_OUT".scaler_60 - -0.647234753461)) / 0.32781453203) + (-0.5 * 2.34725182873 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - -0.660786175912) * ("ADS_sca_2_OUT".scaler_61 - -0.660786175912)) / 1.66425031757) + (-0.5 * 0.886934794479 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - 0.281110613006) * ("ADS_sca_2_OUT".scaler_62 - 0.281110613006)) / 0.386376779879) + (-0.5 * 1.90586302775 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - 0.322020643208) * ("ADS_sca_2_OUT".scaler_63 - 0.322020643208)) / 1.0703502821) + (-0.5 * 2.39995799866 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - 0.258489443318) * ("ADS_sca_2_OUT".scaler_64 - 0.258489443318)) / 1.75431932424) + (-0.5 * 3.3637520702 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - 0.634783434808) * ("ADS_sca_2_OUT".scaler_65 - 0.634783434808)) / 4.59916609696) AS "Score_1", CAST(NULL AS FLOAT(53)) AS "LogProba_2", CAST(NULL AS FLOAT(53)) AS "Proba_2", -2.24054345206 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * 2.70492521832 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - 0.730878137003) * ("ADS_sca_2_OUT".scaler_3 - 0.730878137003)) / 2.37987544413) + (-0.5 * 1.90948065906 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - 0.923413547857) * ("ADS_sca_2_OUT".scaler_4 - 0.923413547857)) / 1.07422942721) + (-0.5 * 1.45143355464 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - 0.492279824575) * ("ADS_sca_2_OUT".scaler_5 - 0.492279824575)) / 0.679469106295) + (-0.5 * 2.20572812295 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - -0.573585860479) * ("ADS_sca_2_OUT".scaler_6 - -0.573585860479)) / 1.44462685522) + (-0.5 * 1.23025118891 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - -0.597486895635) * ("ADS_sca_2_OUT".scaler_7 - -0.597486895635)) / 0.5446423831) + (-0.5 * -1.44879070747 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - -0.367670332997) * ("ADS_sca_2_OUT".scaler_8 - -0.367670332997)) / 0.0373781947044) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928) * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928)) / 1e-09) + (-0.5 * 3.06268616624 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - 0.102740903475) * ("ADS_sca_2_OUT".scaler_10 - 0.102740903475)) / 3.40351628894) + (-0.5 * 2.33929831504 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - 0.959023892284) * ("ADS_sca_2_OUT".scaler_11 - 0.959023892284)) / 1.6510661795) + (-0.5 * 1.26311423549 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - 0.58030192019) * ("ADS_sca_2_OUT".scaler_12 - 0.58030192019)) / 0.562838340831) + (-0.5 * 1.44010639386 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - 0.0249110303645) * ("ADS_sca_2_OUT".scaler_13 - 0.0249110303645)) / 0.671816075869) + (-0.5 * 1.37097817401 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - 0.469212615352) * ("ADS_sca_2_OUT".scaler_14 - 0.469212615352)) / 0.62694347596) + (-0.5 * 1.70392929533 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - -0.432898005925) * ("ADS_sca_2_OUT".scaler_15 - -0.432898005925)) / 0.874635744688) + (-0.5 * 0.500729117751 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - -0.387005897611) * ("ADS_sca_2_OUT".scaler_16 - -0.387005897611)) / 0.262593531836) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991) * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991)) / 1e-09) + (-0.5 * 3.37909405455 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - 0.150957087386) * ("ADS_sca_2_OUT".scaler_18 - 0.150957087386)) / 4.67027047771) + (-0.5 * 2.35813044519 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - 0.506053307652) * ("ADS_sca_2_OUT".scaler_19 - 0.506053307652)) / 1.68245389381) + (-0.5 * 1.5900854997 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - -0.424440513851) * ("ADS_sca_2_OUT".scaler_20 - -0.424440513851)) / 0.780522613224) + (-0.5 * 1.33222547512 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - -0.406198698902) * ("ADS_sca_2_OUT".scaler_21 - -0.406198698902)) / 0.603112464536) + (-0.5 * 1.2710736348 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - 0.707293163219) * ("ADS_sca_2_OUT".scaler_22 - 0.707293163219)) / 0.567336071807) + (-0.5 * 1.61695308383 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - -0.278717348741) * ("ADS_sca_2_OUT".scaler_23 - -0.278717348741)) / 0.801777627042) + (-0.5 * 0.754273639877 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - -0.395840647157) * ("ADS_sca_2_OUT".scaler_24 - -0.395840647157)) / 0.338374020242) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881) * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * 0.952638691628 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - -0.514482612118) * ("ADS_sca_2_OUT".scaler_27 - -0.514482612118)) / 0.412615804353) + (-0.5 * 0.332340486299 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - -1.18638740049) * ("ADS_sca_2_OUT".scaler_28 - -1.18638740049)) / 0.221898195724) + (-0.5 * 1.46942034367 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - -0.736957620364) * ("ADS_sca_2_OUT".scaler_29 - -0.736957620364)) / 0.691801148207) + (-0.5 * 1.05160884353 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - 0.310693533359) * ("ADS_sca_2_OUT".scaler_30 - 0.310693533359)) / 0.455541606999) + (-0.5 * 1.58141090222 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - -0.508561725695) * ("ADS_sca_2_OUT".scaler_31 - -0.508561725695)) / 0.773781175633) + (-0.5 * -0.560319043901 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - -0.548005151634) * ("ADS_sca_2_OUT".scaler_32 - -0.548005151634)) / 0.0908817461578) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * -2.60218946175 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - -0.639192688488) * ("ADS_sca_2_OUT".scaler_35 - -0.639192688488)) / 0.0117951537838) + (-0.5 * 0.0783418055065 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - -0.983906366657) * ("ADS_sca_2_OUT".scaler_36 - -0.983906366657)) / 0.17212483838) + (-0.5 * 1.74997741099 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - -0.109045363726) * ("ADS_sca_2_OUT".scaler_37 - -0.109045363726)) / 0.915852772979) + (-0.5 * 1.28044518985 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - 0.00261977218914) * ("ADS_sca_2_OUT".scaler_38 - 0.00261977218914)) / 0.572677884486) + (-0.5 * 1.13376726426 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - -1.07544215685) * ("ADS_sca_2_OUT".scaler_39 - -1.07544215685)) / 0.494548624484) + (-0.5 * -2.0441591233 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - -0.779182286807) * ("ADS_sca_2_OUT".scaler_40 - -0.779182286807)) / 0.0206088189649) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * 0.929824292243 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - -0.281389223632) * ("ADS_sca_2_OUT".scaler_43 - -0.281389223632)) / 0.40330879322) + (-0.5 * 1.59213081565 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - -0.181721959294) * ("ADS_sca_2_OUT".scaler_44 - -0.181721959294)) / 0.782120662268) + (-0.5 * 1.0635043489 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - 0.681561597614) * ("ADS_sca_2_OUT".scaler_45 - 0.681561597614)) / 0.460992863074) + (-0.5 * 1.67100491003 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - -0.0620845122107) * ("ADS_sca_2_OUT".scaler_46 - -0.0620845122107)) / 0.846307799471) + (-0.5 * 0.845851065209 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - -1.06228813102) * ("ADS_sca_2_OUT".scaler_47 - -1.06228813102)) / 0.370824638287) + (-0.5 * 0.449932089027 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - -0.54931830027) * ("ADS_sca_2_OUT".scaler_48 - -0.54931830027)) / 0.249587686314) + (-0.5 * 0.0882515842346 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.0362066441928) * ("ADS_sca_2_OUT".scaler_49 - -0.0362066441928)) / 0.173839037078) + (-0.5 * 3.96654771902 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - 0.220743244678) * ("ADS_sca_2_OUT".scaler_50 - 0.220743244678)) / 8.40368796217) + (-0.5 * 2.61942429446 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - 0.443304983446) * ("ADS_sca_2_OUT".scaler_51 - 0.443304983446)) / 2.18485011305) + (-0.5 * 1.47549018905 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - 0.669643740125) * ("ADS_sca_2_OUT".scaler_52 - 0.669643740125)) / 0.696013044062) + (-0.5 * 0.397648259631 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - 0.912631930752) * ("ADS_sca_2_OUT".scaler_53 - 0.912631930752)) / 0.236873554206) + (-0.5 * 1.23788739504 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - 0.53482342569) * ("ADS_sca_2_OUT".scaler_54 - 0.53482342569)) / 0.548817304596) + (-0.5 * 1.1020282649 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - 0.336848628825) * ("ADS_sca_2_OUT".scaler_55 - 0.336848628825)) / 0.4790986267) + (-0.5 * 1.77315865552 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - 0.756318821715) * ("ADS_sca_2_OUT".scaler_56 - 0.756318821715)) / 0.93733136853) + (-0.5 * 2.77611255331 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - 0.558124112124) * ("ADS_sca_2_OUT".scaler_57 - 0.558124112124)) / 2.55546828049) + (-0.5 * 4.07140894199 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - 0.242240224757) * ("ADS_sca_2_OUT".scaler_58 - 0.242240224757)) / 9.33277012168) + (-0.5 * 2.92203244418 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - 0.729351221356) * ("ADS_sca_2_OUT".scaler_59 - 0.729351221356)) / 2.95694126541) + (-0.5 * 1.9004015084 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - 0.856486274084) * ("ADS_sca_2_OUT".scaler_60 - 0.856486274084)) / 1.0645204776) + (-0.5 * 1.51252812398 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - 0.342890355153) * ("ADS_sca_2_OUT".scaler_61 - 0.342890355153)) / 0.722275277174) + (-0.5 * 0.9557429563 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - 0.214873449048) * ("ADS_sca_2_OUT".scaler_62 - 0.214873449048)) / 0.413898663154) + (-0.5 * 1.09594860318 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - 0.862791089405) * ("ADS_sca_2_OUT".scaler_63 - 0.862791089405)) / 0.476194705494) + (-0.5 * 2.44062005406 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - 1.45055851421) * ("ADS_sca_2_OUT".scaler_64 - 1.45055851421)) / 1.82712371082) + (-0.5 * 3.10006780062 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - 0.823513670108) * ("ADS_sca_2_OUT".scaler_65 - 0.823513670108)) / 3.53315321481) AS "Score_2", CAST(NULL AS FLOAT(53)) AS "LogProba_3", CAST(NULL AS FLOAT(53)) AS "Proba_3", -2.32188909151 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * 2.19036834073 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - 0.437356080311) * ("ADS_sca_2_OUT".scaler_3 - 0.437356080311)) / 1.42260724248) + (-0.5 * 1.40897775847 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - 0.679606898229) * ("ADS_sca_2_OUT".scaler_4 - 0.679606898229)) / 0.651225499117) + (-0.5 * 0.644835640302 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - 0.528386060385) * ("ADS_sca_2_OUT".scaler_5 - 0.528386060385)) / 0.303297403211) + (-0.5 * 0.542477854528 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - 0.611329701671) * ("ADS_sca_2_OUT".scaler_6 - 0.611329701671)) / 0.273788542872) + (-0.5 * 1.45244117557 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - 0.344591418852) * ("ADS_sca_2_OUT".scaler_7 - 0.344591418852)) / 0.680154098638) + (-0.5 * 0.61418782614 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - -0.220386954449) * ("ADS_sca_2_OUT".scaler_8 - -0.220386954449)) / 0.294142998549) + (-0.5 * -3.01210929786 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - -0.118590974683) * ("ADS_sca_2_OUT".scaler_9 - -0.118590974683)) / 0.00782848429557) + (-0.5 * 1.75706993316 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - 0.0278250366936) * ("ADS_sca_2_OUT".scaler_10 - 0.0278250366936)) / 0.922371569098) + (-0.5 * 2.21610057107 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - 0.722195017164) * ("ADS_sca_2_OUT".scaler_11 - 0.722195017164)) / 1.45968915374) + (-0.5 * 0.926482346424 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - 0.470193890602) * ("ADS_sca_2_OUT".scaler_12 - 0.470193890602)) / 0.401963206776) + (-0.5 * 1.67339459262 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - -0.763286573177) * ("ADS_sca_2_OUT".scaler_13 - -0.763286573177)) / 0.848332624874) + (-0.5 * 1.41165083877 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - 0.201132179446) * ("ADS_sca_2_OUT".scaler_14 - 0.201132179446)) / 0.652968605865) + (-0.5 * 1.17526444422 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - 0.686439925417) * ("ADS_sca_2_OUT".scaler_15 - 0.686439925417)) / 0.515502759651) + (-0.5 * 1.77012198183 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - 0.0501926396806) * ("ADS_sca_2_OUT".scaler_16 - 0.0501926396806)) / 0.934489316397) + (-0.5 * -2.55117241654 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - -0.119019324755) * ("ADS_sca_2_OUT".scaler_17 - -0.119019324755)) / 0.0124125219287) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325) * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325)) / 1e-09) + (-0.5 * 1.68545782642 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - -0.0986693899328) * ("ADS_sca_2_OUT".scaler_19 - -0.0986693899328)) / 0.858628233984) + (-0.5 * 1.46131468878 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - -1.0860429704) * ("ADS_sca_2_OUT".scaler_20 - -1.0860429704)) / 0.686216311802) + (-0.5 * 1.09775057284 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - -0.625189449093) * ("ADS_sca_2_OUT".scaler_21 - -0.625189449093)) / 0.477053567494) + (-0.5 * 1.08421178222 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - 0.810572930719) * ("ADS_sca_2_OUT".scaler_22 - 0.810572930719)) / 0.470638364171) + (-0.5 * 1.34054279016 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - 0.205658306175) * ("ADS_sca_2_OUT".scaler_23 - 0.205658306175)) / 0.608149659843) + (-0.5 * 0.758549542021 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - -0.298363401506) * ("ADS_sca_2_OUT".scaler_24 - -0.298363401506)) / 0.339823972158) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881) * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * -0.0401827931589 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - -0.70101364586) * ("ADS_sca_2_OUT".scaler_27 - -0.70101364586)) / 0.152886439362) + (-0.5 * 0.61672665639 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - -1.23185247438) * ("ADS_sca_2_OUT".scaler_28 - -1.23185247438)) / 0.294890726467) + (-0.5 * 1.66578281577 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - 0.0121196452508) * ("ADS_sca_2_OUT".scaler_29 - 0.0121196452508)) / 0.841899819834) + (-0.5 * 0.534626404271 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - 0.692369528351) * ("ADS_sca_2_OUT".scaler_30 - 0.692369528351)) / 0.271647322589) + (-0.5 * 1.08667016181 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - -0.344020655673) * ("ADS_sca_2_OUT".scaler_31 - -0.344020655673)) / 0.471796795267) + (-0.5 * -2.88136845911 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - -0.597742194842) * ("ADS_sca_2_OUT".scaler_32 - -0.597742194842)) / 0.00892190736115) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * -1.90938848628 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - -0.63304622428) * ("ADS_sca_2_OUT".scaler_35 - -0.63304622428)) / 0.0235821418966) + (-0.5 * -0.214760000763 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - -1.04895043954) * ("ADS_sca_2_OUT".scaler_36 - -1.04895043954)) / 0.128395868226) + (-0.5 * 1.4845267462 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - -0.589046344148) * ("ADS_sca_2_OUT".scaler_37 - -0.589046344148)) / 0.702331109496) + (-0.5 * 1.03856104845 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - 0.322466691106) * ("ADS_sca_2_OUT".scaler_38 - 0.322466691106)) / 0.449636402188) + (-0.5 * 1.44362501776 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - 0.427940005758) * ("ADS_sca_2_OUT".scaler_39 - 0.427940005758)) / 0.67418410763) + (-0.5 * 1.2869755819 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - -0.211355456555) * ("ADS_sca_2_OUT".scaler_40 - -0.211355456555)) / 0.576429933428) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * 0.719377658955 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - -0.351841080827) * ("ADS_sca_2_OUT".scaler_43 - -0.351841080827)) / 0.326769775189) + (-0.5 * 0.523019487948 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - -0.816797786637) * ("ADS_sca_2_OUT".scaler_44 - -0.816797786637)) / 0.268512562489) + (-0.5 * 0.235006158122 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - -0.984460365641) * ("ADS_sca_2_OUT".scaler_45 - -0.984460365641)) / 0.201317722839) + (-0.5 * 1.51072825875 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - -0.520702813209) * ("ADS_sca_2_OUT".scaler_46 - -0.520702813209)) / 0.720976448229) + (-0.5 * 0.859630202739 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - 0.667822318104) * ("ADS_sca_2_OUT".scaler_47 - 0.667822318104)) / 0.375969647468) + (-0.5 * 1.94711995631 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - 0.712623437754) * ("ADS_sca_2_OUT".scaler_48 - 0.712623437754)) / 1.11543324491) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713) * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465) * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465)) / 1e-09) + (-0.5 * 2.31399865662 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - 0.13811455395) * ("ADS_sca_2_OUT".scaler_51 - 0.13811455395)) / 1.60981874227) + (-0.5 * 1.64086493482 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - -0.0435345882242) * ("ADS_sca_2_OUT".scaler_52 - -0.0435345882242)) / 0.821180671025) + (-0.5 * 1.17409909433 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - -0.629635272859) * ("ADS_sca_2_OUT".scaler_53 - -0.629635272859)) / 0.514902368467) + (-0.5 * 1.7519055362 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - -0.24148505318) * ("ADS_sca_2_OUT".scaler_54 - -0.24148505318)) / 0.917620355304) + (-0.5 * 1.02649324986 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - 0.653658834528) * ("ADS_sca_2_OUT".scaler_55 - 0.653658834528)) / 0.444242890012) + (-0.5 * 1.73930825739 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - 0.443549221366) * ("ADS_sca_2_OUT".scaler_56 - 0.443549221366)) / 0.90613334032) + (-0.5 * 0.532906741846 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - -0.138003773033) * ("ADS_sca_2_OUT".scaler_57 - -0.138003773033)) / 0.271180582328) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * 2.32528730043 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - 0.310500963674) * ("ADS_sca_2_OUT".scaler_59 - 0.310500963674)) / 1.6280943721) + (-0.5 * 1.51082221112 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - 0.764415033445) * ("ADS_sca_2_OUT".scaler_60 - 0.764415033445)) / 0.721044188851) + (-0.5 * 0.271376941963 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - 0.618429625418) * ("ADS_sca_2_OUT".scaler_61 - 0.618429625418)) / 0.208774590279) + (-0.5 * 0.799951506302 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - 0.440538508623) * ("ADS_sca_2_OUT".scaler_62 - 0.440538508623)) / 0.354188663488) + (-0.5 * 1.35635875233 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - 0.305705107703) * ("ADS_sca_2_OUT".scaler_63 - 0.305705107703)) / 0.617844597143) + (-0.5 * 1.14076350384 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - -0.153283883567) * ("ADS_sca_2_OUT".scaler_64 - -0.153283883567)) / 0.498020736846) + (-0.5 * -0.016483786582 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - -0.156487196151) * ("ADS_sca_2_OUT".scaler_65 - -0.156487196151)) / 0.156552971068) AS "Score_3", CAST(NULL AS FLOAT(53)) AS "LogProba_4", CAST(NULL AS FLOAT(53)) AS "Proba_4", -2.24054345206 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - -0.341262764724) * ("ADS_sca_2_OUT".scaler_3 - -0.341262764724)) / 1e-09) + (-0.5 * -0.453766394369 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - -0.974657011492) * ("ADS_sca_2_OUT".scaler_4 - -0.974657011492)) / 0.101100171079) + (-0.5 * 2.15565555555 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - -1.030926511) * ("ADS_sca_2_OUT".scaler_5 - -1.030926511)) / 1.37407185568) + (-0.5 * 1.72999234682 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - -0.0996746101791) * ("ADS_sca_2_OUT".scaler_6 - -0.0996746101791)) / 0.897731081274) + (-0.5 * 0.675606749189 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - -0.681170868728) * ("ADS_sca_2_OUT".scaler_7 - -0.681170868728)) / 0.312775275104) + (-0.5 * -0.274571263345 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - -0.349097595975) * ("ADS_sca_2_OUT".scaler_8 - -0.349097595975)) / 0.120941498986) + (-0.5 * 2.46361479631 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - 0.0466677643414) * ("ADS_sca_2_OUT".scaler_9 - 0.0466677643414)) / 1.86962472685) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505) * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505)) / 1e-09) + (-0.5 * -1.74234033649 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - -0.591609627211) * ("ADS_sca_2_OUT".scaler_11 - -0.591609627211)) / 0.0278696386563) + (-0.5 * 1.23084366095 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - -1.24445728304) * ("ADS_sca_2_OUT".scaler_12 - -1.24445728304)) / 0.544965164093) + (-0.5 * 1.52149252368 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - 0.289956764429) * ("ADS_sca_2_OUT".scaler_13 - 0.289956764429)) / 0.728779149554) + (-0.5 * 2.06844386979 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - -0.422425692506) * ("ADS_sca_2_OUT".scaler_14 - -0.422425692506)) / 1.25931359087) + (-0.5 * 0.836480197651 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - -1.0014198775) * ("ADS_sca_2_OUT".scaler_15 - -1.0014198775)) / 0.367365920617) + (-0.5 * 1.60275724128 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - -0.155374644628) * ("ADS_sca_2_OUT".scaler_16 - -0.155374644628)) / 0.790476125048) + (-0.5 * 2.78004146061 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - 0.22200711313) * ("ADS_sca_2_OUT".scaler_17 - 0.22200711313)) / 2.56552822785) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325) * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325)) / 1e-09) + (-0.5 * 0.576769587582 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - -0.504753762875) * ("ADS_sca_2_OUT".scaler_19 - -0.504753762875)) / 0.283340059559) + (-0.5 * 1.55729306367 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - 0.112097796879) * ("ADS_sca_2_OUT".scaler_20 - 0.112097796879)) / 0.755342490537) + (-0.5 * 1.12612575761 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - 0.730403599639) * ("ADS_sca_2_OUT".scaler_21 - 0.730403599639)) / 0.490783930169) + (-0.5 * 1.5367564761 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - -0.351840422524) * ("ADS_sca_2_OUT".scaler_22 - -0.351840422524)) / 0.739988531918) + (-0.5 * 1.44977660354 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - -0.32118118773) * ("ADS_sca_2_OUT".scaler_23 - -0.32118118773)) / 0.678344191434) + (-0.5 * 2.84926539689 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - 0.639413509359) * ("ADS_sca_2_OUT".scaler_24 - 0.639413509359)) / 2.74941546383) + (-0.5 * 3.51777196755 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - 0.632100552099) * ("ADS_sca_2_OUT".scaler_25 - 0.632100552099)) / 5.36499208692) + (-0.5 * 4.07140894199 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - 0.242240224757) * ("ADS_sca_2_OUT".scaler_26 - 0.242240224757)) / 9.33277012168) + (-0.5 * 1.77979726121 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - 0.687389611302) * ("ADS_sca_2_OUT".scaler_27 - 0.687389611302)) / 0.943574642267) + (-0.5 * -0.0609143587755 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - 0.865113784882) * ("ADS_sca_2_OUT".scaler_28 - 0.865113784882)) / 0.149749493367) + (-0.5 * 1.41995046582 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - -0.379765037569) * ("ADS_sca_2_OUT".scaler_29 - -0.379765037569)) / 0.658410553596) + (-0.5 * 1.81584420582 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - -0.422699689485) * ("ADS_sca_2_OUT".scaler_30 - -0.422699689485)) / 0.978208090031) + (-0.5 * 1.49206571786 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - 0.518187077482) * ("ADS_sca_2_OUT".scaler_31 - 0.518187077482)) / 0.707645972957) + (-0.5 * 2.40631348288 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - 1.05000241765) * ("ADS_sca_2_OUT".scaler_32 - 1.05000241765)) / 1.7655043786) + (-0.5 * 4.07140894199 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - 0.242240224757) * ("ADS_sca_2_OUT".scaler_33 - 0.242240224757)) / 9.33277012168) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * 1.89721905584 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - 1.81030527747) * ("ADS_sca_2_OUT".scaler_35 - 1.81030527747)) / 1.06113807671) + (-0.5 * -0.110346444523 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - 1.11731274708) * ("ADS_sca_2_OUT".scaler_36 - 1.11731274708)) / 0.142527044555) + (-0.5 * 1.4848287607 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - 0.177003098087) * ("ADS_sca_2_OUT".scaler_37 - 0.177003098087)) / 0.70254325571) + (-0.5 * 1.05034114653 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - 0.510382669881) * ("ADS_sca_2_OUT".scaler_38 - 0.510382669881)) / 0.454964484154) + (-0.5 * 0.778641930172 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - 0.882136882434) * ("ADS_sca_2_OUT".scaler_39 - 0.882136882434)) / 0.346720903192) + (-0.5 * 1.89680144087 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - 0.708447648013) * ("ADS_sca_2_OUT".scaler_40 - 0.708447648013)) / 1.06069502207) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * 4.04637907282 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - 0.514618900178) * ("ADS_sca_2_OUT".scaler_42 - 0.514618900178)) / 9.10207133101) + (-0.5 * 2.95321703823 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - 1.52471600711) * ("ADS_sca_2_OUT".scaler_43 - 1.52471600711)) / 3.05060512269) + (-0.5 * 1.57922492704 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - 0.613189949717) * ("ADS_sca_2_OUT".scaler_44 - 0.613189949717)) / 0.772091556587) + (-0.5 * 1.18947599453 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - 0.751866898551) * ("ADS_sca_2_OUT".scaler_45 - 0.751866898551)) / 0.522881158113) + (-0.5 * 0.161474351912 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - 1.07141112603) * ("ADS_sca_2_OUT".scaler_46 - 1.07141112603)) / 0.187045623771) + (-0.5 * 1.58065289181 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - 0.333297275651) * ("ADS_sca_2_OUT".scaler_47 - 0.333297275651)) / 0.773194863691) + (-0.5 * 0.376894441188 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - -0.438980408157) * ("ADS_sca_2_OUT".scaler_48 - -0.438980408157)) / 0.23200818559) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713) * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713)) / 1e-09) + (-0.5 * 1.76932314264 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - 0.0492520445827) * ("ADS_sca_2_OUT".scaler_50 - 0.0492520445827)) / 0.933743107797) + (-0.5 * 2.23622744989 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - 0.108782404669) * ("ADS_sca_2_OUT".scaler_51 - 0.108782404669)) / 1.48936578766) + (-0.5 * 1.24759932408 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - -0.871180800731) * ("ADS_sca_2_OUT".scaler_52 - -0.871180800731)) / 0.55417334596) + (-0.5 * 1.91692490892 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - -0.33822856842) * ("ADS_sca_2_OUT".scaler_53 - -0.33822856842)) / 1.08225609869) + (-0.5 * 1.09571583506 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - 0.700318358373) * ("ADS_sca_2_OUT".scaler_54 - 0.700318358373)) / 0.476083875447) + (-0.5 * 1.38175789875 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - -0.786497231072) * ("ADS_sca_2_OUT".scaler_55 - -0.786497231072)) / 0.633738311484) + (-0.5 * -6.23744865344 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - -0.760335191987) * ("ADS_sca_2_OUT".scaler_56 - -0.760335191987)) / 0.000311121912854) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546) * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * -2.78308761679 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - -0.291885388397) * ("ADS_sca_2_OUT".scaler_59 - -0.291885388397)) / 0.00984329581744) + (-0.5 * -0.136750059404 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - -0.949121470563) * ("ADS_sca_2_OUT".scaler_60 - -0.949121470563)) / 0.138813062402) + (-0.5 * 2.25560042671 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - -0.91541074547) * ("ADS_sca_2_OUT".scaler_61 - -0.91541074547)) / 1.51850053876) + (-0.5 * 1.58236630191 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - 0.0167305165203) * ("ADS_sca_2_OUT".scaler_62 - 0.0167305165203)) / 0.774520799185) + (-0.5 * 0.570127378943 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - -0.798564202717) * ("ADS_sca_2_OUT".scaler_63 - -0.798564202717)) / 0.281464292283) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - -0.512991183554) * ("ADS_sca_2_OUT".scaler_64 - -0.512991183554)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - -0.207722095081) * ("ADS_sca_2_OUT".scaler_65 - -0.207722095081)) / 1e-09) AS "Score_4", CAST(NULL AS FLOAT(53)) AS "LogProba_5", CAST(NULL AS FLOAT(53)) AS "Proba_5", -2.31345022286 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * 3.07485311766 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - 0.675140858962) * ("ADS_sca_2_OUT".scaler_3 - 0.675140858962)) / 3.44517965036) + (-0.5 * 1.52479464485 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - 0.964151903608) * ("ADS_sca_2_OUT".scaler_4 - 0.964151903608)) / 0.731189644296) + (-0.5 * 0.94606363234 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - 0.299345850768) * ("ADS_sca_2_OUT".scaler_5 - 0.299345850768)) / 0.409911730441) + (-0.5 * 0.744144775371 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - 0.540666603122) * ("ADS_sca_2_OUT".scaler_6 - 0.540666603122)) / 0.334963974737) + (-0.5 * 1.06809946007 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - 1.1638999181) * ("ADS_sca_2_OUT".scaler_7 - 1.1638999181)) / 0.463116050935) + (-0.5 * 2.40619249259 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - 0.8442983036) * ("ADS_sca_2_OUT".scaler_8 - 0.8442983036)) / 1.76529078263) + (-0.5 * -0.949545604975 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - -0.0943263472315) * ("ADS_sca_2_OUT".scaler_9 - -0.0943263472315)) / 0.0615797207416) + (-0.5 * 1.74870288555 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - 0.0270789091689) * ("ADS_sca_2_OUT".scaler_10 - 0.0270789091689)) / 0.914686238859) + (-0.5 * 2.03435388541 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - 0.552330814297) * ("ADS_sca_2_OUT".scaler_11 - 0.552330814297)) / 1.21710710679) + (-0.5 * 0.17346934309 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - 0.794930947844) * ("ADS_sca_2_OUT".scaler_12 - 0.794930947844)) / 0.189302744387) + (-0.5 * 1.67785263005 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - -0.0208810803434) * ("ADS_sca_2_OUT".scaler_13 - -0.0208810803434)) / 0.852122965932) + (-0.5 * 1.28975409358 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - -0.479640619762) * ("ADS_sca_2_OUT".scaler_14 - -0.479640619762)) / 0.57803377785) + (-0.5 * 0.951245764983 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - -0.35606985157) * ("ADS_sca_2_OUT".scaler_15 - -0.35606985157)) / 0.412041460907) + (-0.5 * 1.46162359061 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - 0.0361554927391) * ("ADS_sca_2_OUT".scaler_16 - 0.0361554927391)) / 0.686428318022) + (-0.5 * -0.488608682478 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - -0.0884655544072) * ("ADS_sca_2_OUT".scaler_17 - -0.0884655544072)) / 0.0976382702808) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325) * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325)) / 1e-09) + (-0.5 * 2.19491273708 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - 0.844198942066) * ("ADS_sca_2_OUT".scaler_19 - 0.844198942066)) / 1.42908684543) + (-0.5 * 0.0312881401982 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - 0.77492689772) * ("ADS_sca_2_OUT".scaler_20 - 0.77492689772)) / 0.164213326315) + (-0.5 * 1.4236338841 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - -0.306542496812) * ("ADS_sca_2_OUT".scaler_21 - -0.306542496812)) / 0.660840227074) + (-0.5 * 0.355128770068 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - -0.886742055225) * ("ADS_sca_2_OUT".scaler_22 - -0.886742055225)) / 0.22701293146) + (-0.5 * -1.91299330795 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - -1.19279188976) * ("ADS_sca_2_OUT".scaler_23 - -1.19279188976)) / 0.0234972855185) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - -0.549296462393) * ("ADS_sca_2_OUT".scaler_24 - -0.549296462393)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881) * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * 2.22330110901 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - 0.970162505847) * ("ADS_sca_2_OUT".scaler_27 - 0.970162505847)) / 1.47023763267) + (-0.5 * 0.246590165383 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - 0.831946938715) * ("ADS_sca_2_OUT".scaler_28 - 0.831946938715)) / 0.203663348445) + (-0.5 * 1.0840565169 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - 0.50123805109) * ("ADS_sca_2_OUT".scaler_29 - 0.50123805109)) / 0.470565296028) + (-0.5 * 1.68837374293 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - -0.17802016954) * ("ADS_sca_2_OUT".scaler_30 - -0.17802016954)) / 0.861135576044) + (-0.5 * 1.51047651143 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - -0.603182934879) * ("ADS_sca_2_OUT".scaler_31 - -0.603182934879)) / 0.720794967184) + (-0.5 * -1.0959164856 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - -0.540339062302) * ("ADS_sca_2_OUT".scaler_32 - -0.540339062302)) / 0.0531948574376) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * 1.26684203121 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - -0.0876120895696) * ("ADS_sca_2_OUT".scaler_35 - -0.0876120895696)) / 0.564940402784) + (-0.5 * 1.52930450919 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - 0.0180079015485) * ("ADS_sca_2_OUT".scaler_36 - 0.0180079015485)) / 0.734494657376) + (-0.5 * 1.76339926279 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - -0.059762813055) * ("ADS_sca_2_OUT".scaler_37 - -0.059762813055)) / 0.928228077136) + (-0.5 * 1.73040602185 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - -0.235512068541) * ("ADS_sca_2_OUT".scaler_38 - -0.235512068541)) / 0.898102527027) + (-0.5 * 1.9496801029 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - -0.140828326607) * ("ADS_sca_2_OUT".scaler_39 - -0.140828326607)) / 1.11829257613) + (-0.5 * 1.44093697588 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - -0.288266095121) * ("ADS_sca_2_OUT".scaler_40 - -0.288266095121)) / 0.672374306015) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * -0.312833392757 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - -0.432106956442) * ("ADS_sca_2_OUT".scaler_43 - -0.432106956442)) / 0.116401429927) + (-0.5 * 0.200062446959 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - -0.861079068501) * ("ADS_sca_2_OUT".scaler_44 - -0.861079068501)) / 0.194404426053) + (-0.5 * 1.41933376446 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - -0.575000502973) * ("ADS_sca_2_OUT".scaler_45 - -0.575000502973)) / 0.658004636093) + (-0.5 * 1.68515618945 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - -0.122985045406) * ("ADS_sca_2_OUT".scaler_46 - -0.122985045406)) / 0.858369279021) + (-0.5 * 1.91340694692 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - -0.00326665474303) * ("ADS_sca_2_OUT".scaler_47 - -0.00326665474303)) / 1.07845545203) + (-0.5 * 1.59174745793 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - -0.214398185266) * ("ADS_sca_2_OUT".scaler_48 - -0.214398185266)) / 0.781820887744) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713) * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465) * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465)) / 1e-09) + (-0.5 * 1.97986976888 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - 0.104734400355) * ("ADS_sca_2_OUT".scaler_51 - 0.104734400355)) / 1.15256823761) + (-0.5 * 1.41540516478 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - -0.345879042604) * ("ADS_sca_2_OUT".scaler_52 - -0.345879042604)) / 0.655424670432) + (-0.5 * 1.78905539947 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - -0.331763849341) * ("ADS_sca_2_OUT".scaler_53 - -0.331763849341)) / 0.952350950219) + (-0.5 * 1.63473109125 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - 0.196768237943) * ("ADS_sca_2_OUT".scaler_54 - 0.196768237943)) / 0.816159093775) + (-0.5 * 1.72597269123 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - -0.229990134716) * ("ADS_sca_2_OUT".scaler_55 - -0.229990134716)) / 0.894129754413) + (-0.5 * 0.793597570609 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - -0.489165435411) * ("ADS_sca_2_OUT".scaler_56 - -0.489165435411)) / 0.351945306119) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546) * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * 2.98500783561 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - 0.684148702625) * ("ADS_sca_2_OUT".scaler_59 - 0.684148702625)) / 3.14914431279) + (-0.5 * 1.47113134017 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - 0.954142581749) * ("ADS_sca_2_OUT".scaler_60 - 0.954142581749)) / 0.69298583076) + (-0.5 * 0.173614237426 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - 0.61694855636) * ("ADS_sca_2_OUT".scaler_61 - 0.61694855636)) / 0.189330175269) + (-0.5 * 2.01373709721 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - -0.505558929594) * ("ADS_sca_2_OUT".scaler_62 - -0.505558929594)) / 1.19227116573) + (-0.5 * 1.06668658408 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - -0.716835755935) * ("ADS_sca_2_OUT".scaler_63 - -0.716835755935)) / 0.462462187407) + (-0.5 * -1.62947156372 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - -0.470910422088) * ("ADS_sca_2_OUT".scaler_64 - -0.470910422088)) / 0.031199642888) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - -0.207722095081) * ("ADS_sca_2_OUT".scaler_65 - -0.207722095081)) / 1e-09) AS "Score_5", CAST(NULL AS FLOAT(53)) AS "LogProba_6", CAST(NULL AS FLOAT(53)) AS "Proba_6", -2.2803893606 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - -0.341262764724) * ("ADS_sca_2_OUT".scaler_3 - -0.341262764724)) / 1e-09) + (-0.5 * -0.0933355620499 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - -0.829216099224) * ("ADS_sca_2_OUT".scaler_4 - -0.829216099224)) / 0.144972294322) + (-0.5 * 1.24547626251 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - -0.111546618837) * ("ADS_sca_2_OUT".scaler_5 - -0.111546618837)) / 0.55299804988) + (-0.5 * 2.24947800823 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - -0.484323711786) * ("ADS_sca_2_OUT".scaler_6 - -0.484323711786)) / 1.50923204474) + (-0.5 * 0.304202730456 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - -0.750199271963) * ("ADS_sca_2_OUT".scaler_7 - -0.750199271963)) / 0.215741502436) + (-0.5 * -4.72449681578 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - -0.406948651842) * ("ADS_sca_2_OUT".scaler_8 - -0.406948651842)) / 0.00141252855081) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928) * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505) * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505)) / 1e-09) + (-0.5 * -4.21361124602 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - -0.610969320566) * ("ADS_sca_2_OUT".scaler_11 - -0.610969320566)) / 0.00235435538128) + (-0.5 * 1.19782582652 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - -0.57897509446) * ("ADS_sca_2_OUT".scaler_12 - -0.57897509446)) / 0.527265406328) + (-0.5 * 0.530350074233 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - 0.646165237629) * ("ADS_sca_2_OUT".scaler_13 - 0.646165237629)) / 0.270488149254) + (-0.5 * 1.78239051674 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - -0.792795657963) * ("ADS_sca_2_OUT".scaler_14 - -0.792795657963)) / 0.946024747933) + (-0.5 * -0.162910626927 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - -1.17540182264) * ("ADS_sca_2_OUT".scaler_15 - -1.17540182264)) / 0.13522872251) + (-0.5 * -1.86234656323 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - -0.502036865386) * ("ADS_sca_2_OUT".scaler_16 - -0.502036865386)) / 0.0247179981753) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991) * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325) * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325)) / 1e-09) + (-0.5 * -0.392355268813 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - -0.525592756675) * ("ADS_sca_2_OUT".scaler_19 - -0.525592756675)) / 0.107503450396) + (-0.5 * 1.00422402691 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - 0.46052616261) * ("ADS_sca_2_OUT".scaler_20 - 0.46052616261)) / 0.434459286987) + (-0.5 * 1.56314915418 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - 0.466039635008) * ("ADS_sca_2_OUT".scaler_21 - 0.466039635008)) / 0.75977882163) + (-0.5 * -0.364668408292 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - -0.990166792456) * ("ADS_sca_2_OUT".scaler_22 - -0.990166792456)) / 0.110521470393) + (-0.5 * -2.12026810119 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - -1.20961161725) * ("ADS_sca_2_OUT".scaler_23 - -1.20961161725)) / 0.0190985059863) + (-0.5 * -5.43647907176 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - -0.546912971997) * ("ADS_sca_2_OUT".scaler_24 - -0.546912971997)) / 0.000693086228845) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881) * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * 1.27368547311 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - -0.103410589748) * ("ADS_sca_2_OUT".scaler_27 - -0.103410589748)) / 0.568819798677) + (-0.5 * 0.337562799424 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - 0.744388067637) * ("ADS_sca_2_OUT".scaler_28 - 0.744388067637)) / 0.223060048723) + (-0.5 * 1.7461298941 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - -0.0595305375459) * ("ADS_sca_2_OUT".scaler_29 - -0.0595305375459)) / 0.912335784141) + (-0.5 * 1.4762127667 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - -0.960712853699) * ("ADS_sca_2_OUT".scaler_30 - -0.960712853699)) / 0.696516149272) + (-0.5 * 0.842698756502 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - -0.921990831846) * ("ADS_sca_2_OUT".scaler_31 - -0.921990831846)) / 0.369657525068) + (-0.5 * -1.49134194815 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - -0.57507725623) * ("ADS_sca_2_OUT".scaler_32 - -0.57507725623)) / 0.0358210698802) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * 1.47701492861 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - 0.310685734544) * ("ADS_sca_2_OUT".scaler_35 - 0.310685734544)) / 0.697075092152) + (-0.5 * -0.409571516075 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - 1.15479699107) * ("ADS_sca_2_OUT".scaler_36 - 1.15479699107)) / 0.105668485342) + (-0.5 * 0.858481881843 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - 0.572098507629) * ("ADS_sca_2_OUT".scaler_37 - 0.572098507629)) / 0.375538161455) + (-0.5 * 1.26555652166 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - 0.252870174902) * ("ADS_sca_2_OUT".scaler_38 - 0.252870174902)) / 0.564214633094) + (-0.5 * 1.54083986412 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - 0.259477445938) * ("ADS_sca_2_OUT".scaler_39 - 0.259477445938)) / 0.743016369934) + (-0.5 * 1.77093540751 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - 0.0386234163208) * ("ADS_sca_2_OUT".scaler_40 - 0.0386234163208)) / 0.935249763245) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * 0.887067408984 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - 0.0906850529588) * ("ADS_sca_2_OUT".scaler_43 - 0.0906850529588)) / 0.386428022442) + (-0.5 * -0.521959872762 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - 1.19480369871) * ("ADS_sca_2_OUT".scaler_44 - 1.19480369871)) / 0.0944356206915) + (-0.5 * 1.24482822193 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - 0.557280668246) * ("ADS_sca_2_OUT".scaler_45 - 0.557280668246)) / 0.552639800796) + (-0.5 * 1.56624576181 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - -0.337687970464) * ("ADS_sca_2_OUT".scaler_46 - -0.337687970464)) / 0.762135205037) + (-0.5 * 1.42498066793 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - 0.333263838845) * ("ADS_sca_2_OUT".scaler_47 - 0.333263838845)) / 0.661730835597) + (-0.5 * 1.75604998722 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - 1.37082278639) * ("ADS_sca_2_OUT".scaler_48 - 1.37082278639)) / 0.921431279561) + (-0.5 * 3.91973504921 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - 0.728220498436) * ("ADS_sca_2_OUT".scaler_49 - 0.728220498436)) / 8.01935490453) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465) * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465)) / 1e-09) + (-0.5 * -0.287037597553 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - -0.28328893644) * ("ADS_sca_2_OUT".scaler_51 - -0.28328893644)) / 0.119443160638) + (-0.5 * 0.664538175858 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - 0.503574311382) * ("ADS_sca_2_OUT".scaler_52 - 0.503574311382)) / 0.309332388109) + (-0.5 * 0.779337354062 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - 0.578562469259) * ("ADS_sca_2_OUT".scaler_53 - 0.578562469259)) / 0.34696210505) + (-0.5 * 1.34338524609 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - -0.730955725163) * ("ADS_sca_2_OUT".scaler_54 - -0.730955725163)) / 0.609880757568) + (-0.5 * 0.977323173076 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - 0.457165026748) * ("ADS_sca_2_OUT".scaler_55 - 0.457165026748)) / 0.422927760562) + (-0.5 * 1.55368318604 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - 1.41906202644) * ("ADS_sca_2_OUT".scaler_56 - 1.41906202644)) / 0.752620712181) + (-0.5 * 2.58147026798 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - 0.343618560927) * ("ADS_sca_2_OUT".scaler_57 - 0.343618560927)) / 2.1034801799) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - -0.300689152274) * ("ADS_sca_2_OUT".scaler_59 - -0.300689152274)) / 1e-09) + (-0.5 * -0.412438949933 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - -0.78419324137) * ("ADS_sca_2_OUT".scaler_60 - -0.78419324137)) / 0.105365921947) + (-0.5 * 1.11652998212 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - -0.262328829088) * ("ADS_sca_2_OUT".scaler_61 - -0.262328829088)) / 0.486097001084) + (-0.5 * -0.615381722998 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - 0.665105426806) * ("ADS_sca_2_OUT".scaler_62 - 0.665105426806)) / 0.0860128315828) + (-0.5 * 0.504472308382 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - 1.03537635053) * ("ADS_sca_2_OUT".scaler_63 - 1.03537635053)) / 0.263578311443) + (-0.5 * 1.72621389412 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - 0.551344173518) * ("ADS_sca_2_OUT".scaler_64 - 0.551344173518)) / 0.894345447106) + (-0.5 * -0.552034100836 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - -0.150377885709) * ("ADS_sca_2_OUT".scaler_65 - -0.150377885709)) / 0.0916378239563) AS "Score_6", CAST(NULL AS FLOAT(53)) AS "LogProba_7", CAST(NULL AS FLOAT(53)) AS "Proba_7", -2.34764158761 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * 0.7102433165 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - -0.209793165573) * ("ADS_sca_2_OUT".scaler_3 - -0.209793165573)) / 0.323798538962) + (-0.5 * 1.3555203325 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - -0.0617713418332) * ("ADS_sca_2_OUT".scaler_4 - -0.0617713418332)) / 0.617326801076) + (-0.5 * 1.36904044087 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - 0.217637570715) * ("ADS_sca_2_OUT".scaler_5 - 0.217637570715)) / 0.625729803073) + (-0.5 * 1.10758997234 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - 0.521823681502) * ("ADS_sca_2_OUT".scaler_6 - 0.521823681502)) / 0.481770656734) + (-0.5 * 1.70320190575 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - 0.981808019524) * ("ADS_sca_2_OUT".scaler_7 - 0.981808019524)) / 0.873999775087) + (-0.5 * 2.99406164907 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - 1.26525681866) * ("ADS_sca_2_OUT".scaler_8 - 1.26525681866)) / 3.17778553847) + (-0.5 * 3.57739932182 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - 0.813272930339) * ("ADS_sca_2_OUT".scaler_9 - 0.813272930339)) / 5.69462219774) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505) * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505)) / 1e-09) + (-0.5 * 0.973167517824 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - -0.339649042516) * ("ADS_sca_2_OUT".scaler_11 - -0.339649042516)) / 0.421173865408) + (-0.5 * 1.23104981065 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - 0.00199284634221) * ("ADS_sca_2_OUT".scaler_12 - 0.00199284634221)) / 0.545077520077) + (-0.5 * 1.65142756612 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - -0.111292549652) * ("ADS_sca_2_OUT".scaler_13 - -0.111292549652)) / 0.82990047063) + (-0.5 * 1.25855020332 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - 0.163609856447) * ("ADS_sca_2_OUT".scaler_14 - 0.163609856447)) / 0.560275381699) + (-0.5 * 1.06117905659 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - 0.757376659354) * ("ADS_sca_2_OUT".scaler_15 - 0.757376659354)) / 0.459922165238) + (-0.5 * 2.74580993248 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - 1.08922371832) * ("ADS_sca_2_OUT".scaler_16 - 1.08922371832)) / 2.47919241014) + (-0.5 * 3.54545932338 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - 0.610489104327) * ("ADS_sca_2_OUT".scaler_17 - 0.610489104327)) / 5.51561001626) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325) * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325)) / 1e-09) + (-0.5 * 0.361441687156 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - -0.521703823908) * ("ADS_sca_2_OUT".scaler_19 - -0.521703823908)) / 0.228450578372) + (-0.5 * 1.88900679869 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - -0.840444086196) * ("ADS_sca_2_OUT".scaler_20 - -0.840444086196)) / 1.05245942239) + (-0.5 * 0.811961133163 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - -0.782951577159) * ("ADS_sca_2_OUT".scaler_21 - -0.782951577159)) / 0.358467982252) + (-0.5 * 1.69916898847 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - -0.0730409468995) * ("ADS_sca_2_OUT".scaler_22 - -0.0730409468995)) / 0.870482104305) + (-0.5 * 1.21776050287 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - 0.598991740636) * ("ADS_sca_2_OUT".scaler_23 - 0.598991740636)) / 0.537881736542) + (-0.5 * 2.37889596459 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - 0.518859576897) * ("ADS_sca_2_OUT".scaler_24 - 0.518859576897)) / 1.71775618949) + (-0.5 * 2.92436602566 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - 0.222650411751) * ("ADS_sca_2_OUT".scaler_25 - 0.222650411751)) / 2.96384958622) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * 0.644461350209 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - -0.532532512861) * ("ADS_sca_2_OUT".scaler_27 - -0.532532512861)) / 0.30318390324) + (-0.5 * 1.36882347561 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - -0.726201595959) * ("ADS_sca_2_OUT".scaler_28 - -0.726201595959)) / 0.625594056174) + (-0.5 * 1.62547342809 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - -0.413326366387) * ("ADS_sca_2_OUT".scaler_29 - -0.413326366387)) / 0.808638234303) + (-0.5 * 1.16259038871 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - 0.324338576096) * ("ADS_sca_2_OUT".scaler_30 - 0.324338576096)) / 0.509010477735) + (-0.5 * 1.24099827804 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - 0.821862352207) * ("ADS_sca_2_OUT".scaler_31 - 0.821862352207)) / 0.550527269391) + (-0.5 * 2.44335393376 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - 0.842265015018) * ("ADS_sca_2_OUT".scaler_32 - 0.842265015018)) / 1.83212568153) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * 1.25005659023 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - -0.253606905133) * ("ADS_sca_2_OUT".scaler_35 - -0.253606905133)) / 0.555536771832) + (-0.5 * 1.59793777581 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - 0.123620057728) * ("ADS_sca_2_OUT".scaler_36 - 0.123620057728)) / 0.78667561822) + (-0.5 * 1.15855991255 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - 0.679617803887) * ("ADS_sca_2_OUT".scaler_37 - 0.679617803887)) / 0.506963051965) + (-0.5 * 0.158108343441 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - 0.709777565126) * ("ADS_sca_2_OUT".scaler_38 - 0.709777565126)) / 0.186417085044) + (-0.5 * 1.46940164643 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - 0.387523420304) * ("ADS_sca_2_OUT".scaler_39 - 0.387523420304)) / 0.691788213557) + (-0.5 * 1.6720662938 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - 0.322813939337) * ("ADS_sca_2_OUT".scaler_40 - 0.322813939337)) / 0.8472065337) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * 1.33801267629 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - -0.210465166934) * ("ADS_sca_2_OUT".scaler_43 - -0.210465166934)) / 0.60661291684) + (-0.5 * 1.25897516123 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - -0.288758472124) * ("ADS_sca_2_OUT".scaler_44 - -0.288758472124)) / 0.560513525751) + (-0.5 * 1.25712661794 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - 0.646535433444) * ("ADS_sca_2_OUT".scaler_45 - 0.646535433444)) / 0.559478349313) + (-0.5 * 1.29804913633 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - 0.481545961656) * ("ADS_sca_2_OUT".scaler_46 - 0.481545961656)) / 0.582848534445) + (-0.5 * 1.49891663019 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - -0.730945375585) * ("ADS_sca_2_OUT".scaler_47 - -0.730945375585)) / 0.712510638144) + (-0.5 * -0.904015736866 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - -0.653600584619) * ("ADS_sca_2_OUT".scaler_48 - -0.653600584619)) / 0.0644482435243) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713) * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465) * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465)) / 1e-09) + (-0.5 * -2.11371072107 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - -0.383789972196) * ("ADS_sca_2_OUT".scaler_51 - -0.383789972196)) / 0.0192241536593) + (-0.5 * 1.19186715913 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - -0.757454551142) * ("ADS_sca_2_OUT".scaler_52 - -0.757454551142)) / 0.524132949052) + (-0.5 * 1.3650205598 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - 0.46685447038) * ("ADS_sca_2_OUT".scaler_53 - 0.46685447038)) / 0.623219492637) + (-0.5 * 1.74685586454 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - -0.644777684168) * ("ADS_sca_2_OUT".scaler_54 - -0.644777684168)) / 0.912998353418) + (-0.5 * -1.75186682095 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - -1.42157814583) * ("ADS_sca_2_OUT".scaler_55 - -1.42157814583)) / 0.0276053996099) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - -0.761900366408) * ("ADS_sca_2_OUT".scaler_56 - -0.761900366408)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546) * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * 0.139683555949 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - -0.2320963485) * ("ADS_sca_2_OUT".scaler_59 - -0.2320963485)) / 0.183013838193) + (-0.5 * 1.79920691277 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - 0.120655312596) * ("ADS_sca_2_OUT".scaler_60 - 0.120655312596)) / 0.962067991446) + (-0.5 * 1.67529690905 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - -0.124465169351) * ("ADS_sca_2_OUT".scaler_61 - -0.124465169351)) / 0.849947957911) + (-0.5 * 1.09165990936 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - -1.92261882506) * ("ADS_sca_2_OUT".scaler_62 - -1.92261882506)) / 0.474156825248) + (-0.5 * -5.78030965012 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - -1.14139945782) * ("ADS_sca_2_OUT".scaler_63 - -1.14139945782)) / 0.000491432129444) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - -0.512991183554) * ("ADS_sca_2_OUT".scaler_64 - -0.512991183554)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - -0.207722095081) * ("ADS_sca_2_OUT".scaler_65 - -0.207722095081)) / 1e-09) AS "Score_7", CAST(NULL AS FLOAT(53)) AS "LogProba_8", CAST(NULL AS FLOAT(53)) AS "Proba_8", -2.30508197319 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * 0.632989473747 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - -0.176504388865) * ("ADS_sca_2_OUT".scaler_3 - -0.176504388865)) / 0.299725688987) + (-0.5 * 1.52021151105 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - -0.052784347152) * ("ADS_sca_2_OUT".scaler_4 - -0.052784347152)) / 0.727846171965) + (-0.5 * 1.34636573153 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - -0.0699924533674) * ("ADS_sca_2_OUT".scaler_5 - -0.0699924533674)) / 0.611701209853) + (-0.5 * 1.56672755725 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - 0.163649460963) * ("ADS_sca_2_OUT".scaler_6 - 0.163649460963)) / 0.762502486779) + (-0.5 * 1.39771235825 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - 0.118445499308) * ("ADS_sca_2_OUT".scaler_7 - 0.118445499308)) / 0.643930351763) + (-0.5 * -0.281786100289 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - -0.238435037883) * ("ADS_sca_2_OUT".scaler_8 - -0.238435037883)) / 0.120072065971) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928) * ("ADS_sca_2_OUT".scaler_9 - -0.126770834928)) / 1e-09) + (-0.5 * 3.34309777827 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - 0.20096392881) * ("ADS_sca_2_OUT".scaler_10 - 0.20096392881)) / 4.50514786015) + (-0.5 * 1.64989579554 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - 0.00783760446691) * ("ADS_sca_2_OUT".scaler_11 - 0.00783760446691)) / 0.82863022661) + (-0.5 * 1.30758989041 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - 0.367413346479) * ("ADS_sca_2_OUT".scaler_12 - 0.367413346479)) / 0.588435960725) + (-0.5 * 1.87883314757 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - -0.0461634227007) * ("ADS_sca_2_OUT".scaler_13 - -0.0461634227007)) / 1.04180634962) + (-0.5 * 1.79949874686 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - -0.2591772082) * ("ADS_sca_2_OUT".scaler_14 - -0.2591772082)) / 0.96234879665) + (-0.5 * 1.24062619532 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - 0.580431271274) * ("ADS_sca_2_OUT".scaler_15 - 0.580431271274)) / 0.550322465808) + (-0.5 * 1.57970854905 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - 0.168766127292) * ("ADS_sca_2_OUT".scaler_16 - 0.168766127292)) / 0.77246504737) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991) * ("ADS_sca_2_OUT".scaler_17 - -0.129319320991)) / 1e-09) + (-0.5 * 3.44310750347 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - 0.163741415167) * ("ADS_sca_2_OUT".scaler_18 - 0.163741415167)) / 4.97900681824) + (-0.5 * 1.8708992078 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - 0.103776943503) * ("ADS_sca_2_OUT".scaler_19 - 0.103776943503)) / 1.03357342375) + (-0.5 * 1.3536174502 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - 0.266974835028) * ("ADS_sca_2_OUT".scaler_20 - 0.266974835028)) / 0.616153217784) + (-0.5 * 1.77695623797 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - 0.10137618099) * ("ADS_sca_2_OUT".scaler_21 - 0.10137618099)) / 0.940897729164) + (-0.5 * 1.51488648815 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - 0.0798463603279) * ("ADS_sca_2_OUT".scaler_22 - 0.0798463603279)) / 0.723980675497) + (-0.5 * 0.898483214596 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - 0.663979876829) * ("ADS_sca_2_OUT".scaler_23 - 0.663979876829)) / 0.390864685489) + (-0.5 * 1.38455855406 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - 0.139651436457) * ("ADS_sca_2_OUT".scaler_24 - 0.139651436457)) / 0.635515681796) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881) * ("ADS_sca_2_OUT".scaler_25 - -0.128260775881)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * 0.976135759992 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - -0.40743194293) * ("ADS_sca_2_OUT".scaler_27 - -0.40743194293)) / 0.422425868641) + (-0.5 * 1.50042253279 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - -0.128560943563) * ("ADS_sca_2_OUT".scaler_28 - -0.128560943563)) / 0.713584418071) + (-0.5 * 0.576703556364 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - 0.726773882467) * ("ADS_sca_2_OUT".scaler_29 - 0.726773882467)) / 0.283321350887) + (-0.5 * 0.561818764927 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - 0.575721962696) * ("ADS_sca_2_OUT".scaler_30 - 0.575721962696)) / 0.27913540244) + (-0.5 * 1.59939430775 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - -0.0443692076522) * ("ADS_sca_2_OUT".scaler_31 - -0.0443692076522)) / 0.787822271256) + (-0.5 * -0.566701700504 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - -0.492678944553) * ("ADS_sca_2_OUT".scaler_32 - -0.492678944553)) / 0.0903035264325) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * -0.0185972810808 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - -0.536110576084) * ("ADS_sca_2_OUT".scaler_35 - -0.536110576084)) / 0.156222446629) + (-0.5 * 1.35453563021 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - -0.137235027477) * ("ADS_sca_2_OUT".scaler_36 - -0.137235027477)) / 0.616719217154) + (-0.5 * 0.244218889255 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - 0.794044493687) * ("ADS_sca_2_OUT".scaler_37 - 0.794044493687)) / 0.203180978551) + (-0.5 * 1.01195943749 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - 0.449327061416) * ("ADS_sca_2_OUT".scaler_38 - 0.449327061416)) / 0.437833039811) + (-0.5 * 1.41692040017 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - -0.727161223482) * ("ADS_sca_2_OUT".scaler_39 - -0.727161223482)) / 0.656418545876) + (-0.5 * -2.56685705927 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - -0.773086052192) * ("ADS_sca_2_OUT".scaler_40 - -0.773086052192)) / 0.0122193547956) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * 0.979668075239 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - -0.159237179041) * ("ADS_sca_2_OUT".scaler_43 - -0.159237179041)) / 0.42392064844) + (-0.5 * 1.40101792315 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - 0.550567760288) * ("ADS_sca_2_OUT".scaler_44 - 0.550567760288)) / 0.646062427247) + (-0.5 * 1.28274007134 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - 0.216819315215) * ("ADS_sca_2_OUT".scaler_45 - 0.216819315215)) / 0.573993621516) + (-0.5 * 1.34968405524 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - 0.273406996505) * ("ADS_sca_2_OUT".scaler_46 - 0.273406996505)) / 0.613734404018) + (-0.5 * 1.87139678903 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - 0.0679806786925) * ("ADS_sca_2_OUT".scaler_47 - 0.0679806786925)) / 1.03408783844) + (-0.5 * 0.522863445738 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - -0.493124357402) * ("ADS_sca_2_OUT".scaler_48 - -0.493124357402)) / 0.268470666464) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713) * ("ADS_sca_2_OUT".scaler_49 - -0.100798724713)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465) * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465)) / 1e-09) + (-0.5 * 1.80392395107 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - 0.0861835460143) * ("ADS_sca_2_OUT".scaler_51 - 0.0861835460143)) / 0.966616823072) + (-0.5 * 1.44068520961 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - 0.592762302294) * ("ADS_sca_2_OUT".scaler_52 - 0.592762302294)) / 0.672205046152) + (-0.5 * 1.59009779219 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - -0.24400403499) * ("ADS_sca_2_OUT".scaler_53 - -0.24400403499)) / 0.780532207844) + (-0.5 * 1.82673271841 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - -0.182419791492) * ("ADS_sca_2_OUT".scaler_54 - -0.182419791492)) / 0.988917520209) + (-0.5 * 1.66562310659 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - 0.136596267779) * ("ADS_sca_2_OUT".scaler_55 - 0.136596267779)) / 0.841765371437) + (-0.5 * 0.922670609453 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - -0.321147249526) * ("ADS_sca_2_OUT".scaler_56 - -0.321147249526)) / 0.400433945183) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546) * ("ADS_sca_2_OUT".scaler_57 - -0.223576329546)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * 0.406875091115 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - -0.141047567301) * ("ADS_sca_2_OUT".scaler_59 - -0.141047567301)) / 0.239069260703) + (-0.5 * 1.4830544251 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - -0.0978917433592) * ("ADS_sca_2_OUT".scaler_60 - -0.0978917433592)) / 0.701297813441) + (-0.5 * 1.25289088397 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - 0.174515105055) * ("ADS_sca_2_OUT".scaler_61 - 0.174515105055)) / 0.557113559711) + (-0.5 * 1.09950829718 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - 0.241185112175) * ("ADS_sca_2_OUT".scaler_62 - 0.241185112175)) / 0.477892833545) + (-0.5 * 1.6409639211 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - -0.0265330167285) * ("ADS_sca_2_OUT".scaler_63 - -0.0265330167285)) / 0.821261960667) + (-0.5 * 1.00849201386 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - -0.264597799902) * ("ADS_sca_2_OUT".scaler_64 - -0.264597799902)) / 0.436317516185) + (-0.5 * -2.94280121518 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - -0.199325264423) * ("ADS_sca_2_OUT".scaler_65 - -0.199325264423)) / 0.00839030604685) AS "Score_8", CAST(NULL AS FLOAT(53)) AS "LogProba_9", CAST(NULL AS FLOAT(53)) AS "Proba_9", -2.28855267124 + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_2 - 0.0) * ("ADS_sca_2_OUT".scaler_2 - 0.0)) / 1e-09) + (-0.5 * 0.260697068924 - (0.5 * ("ADS_sca_2_OUT".scaler_3 - -0.179205345847) * ("ADS_sca_2_OUT".scaler_3 - -0.179205345847)) / 0.20655676827) + (-0.5 * 1.50011321128 - (0.5 * ("ADS_sca_2_OUT".scaler_4 - 0.118119657208) * ("ADS_sca_2_OUT".scaler_4 - 0.118119657208)) / 0.713363725197) + (-0.5 * 1.93259527962 - (0.5 * ("ADS_sca_2_OUT".scaler_5 - -0.0293113176836) * ("ADS_sca_2_OUT".scaler_5 - -0.0293113176836)) / 1.09934902944) + (-0.5 * 1.51640810363 - (0.5 * ("ADS_sca_2_OUT".scaler_6 - -0.163481148897) * ("ADS_sca_2_OUT".scaler_6 - -0.163481148897)) / 0.725083134242) + (-0.5 * 1.7413933451 - (0.5 * ("ADS_sca_2_OUT".scaler_7 - 0.058041308535) * ("ADS_sca_2_OUT".scaler_7 - 0.058041308535)) / 0.908024678932) + (-0.5 * 2.05853482949 - (0.5 * ("ADS_sca_2_OUT".scaler_8 - 0.0705016369588) * ("ADS_sca_2_OUT".scaler_8 - 0.0705016369588)) / 1.24689662348) + (-0.5 * 2.38953028701 - (0.5 * ("ADS_sca_2_OUT".scaler_9 - 0.0156391909867) * ("ADS_sca_2_OUT".scaler_9 - 0.0156391909867)) / 1.73612083737) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505) * ("ADS_sca_2_OUT".scaler_10 - -0.0609641387505)) / 1e-09) + (-0.5 * 1.67573999771 - (0.5 * ("ADS_sca_2_OUT".scaler_11 - 0.170312166304) * ("ADS_sca_2_OUT".scaler_11 - 0.170312166304)) / 0.850324643663) + (-0.5 * 1.26111539993 - (0.5 * ("ADS_sca_2_OUT".scaler_12 - 0.440671300519) * ("ADS_sca_2_OUT".scaler_12 - 0.440671300519)) / 0.561714443156) + (-0.5 * 1.96560827053 - (0.5 * ("ADS_sca_2_OUT".scaler_13 - -0.585238905762) * ("ADS_sca_2_OUT".scaler_13 - -0.585238905762)) / 1.13624754299) + (-0.5 * 1.52231292106 - (0.5 * ("ADS_sca_2_OUT".scaler_14 - 0.0832050234194) * ("ADS_sca_2_OUT".scaler_14 - 0.0832050234194)) / 0.729377283382) + (-0.5 * 1.11683187101 - (0.5 * ("ADS_sca_2_OUT".scaler_15 - 0.546567791849) * ("ADS_sca_2_OUT".scaler_15 - 0.546567791849)) / 0.486243770523) + (-0.5 * 2.334284081 - (0.5 * ("ADS_sca_2_OUT".scaler_16 - 0.220446008549) * ("ADS_sca_2_OUT".scaler_16 - 0.220446008549)) / 1.64280806861) + (-0.5 * 2.14162203832 - (0.5 * ("ADS_sca_2_OUT".scaler_17 - 0.0300773420748) * ("ADS_sca_2_OUT".scaler_17 - 0.0300773420748)) / 1.35492346849) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325) * ("ADS_sca_2_OUT".scaler_18 - -0.040807829325)) / 1e-09) + (-0.5 * 1.91227438217 - (0.5 * ("ADS_sca_2_OUT".scaler_19 - 0.340994239061) * ("ADS_sca_2_OUT".scaler_19 - 0.340994239061)) / 1.07723472282) + (-0.5 * 0.763513024252 - (0.5 * ("ADS_sca_2_OUT".scaler_20 - 0.496207359876) * ("ADS_sca_2_OUT".scaler_20 - 0.496207359876)) / 0.341514875318) + (-0.5 * 1.6580766999 - (0.5 * ("ADS_sca_2_OUT".scaler_21 - -0.279843480774) * ("ADS_sca_2_OUT".scaler_21 - -0.279843480774)) / 0.835436975962) + (-0.5 * 1.28077756462 - (0.5 * ("ADS_sca_2_OUT".scaler_22 - 0.292664249904) * ("ADS_sca_2_OUT".scaler_22 - 0.292664249904)) / 0.5728682598) + (-0.5 * 0.285288550653 - (0.5 * ("ADS_sca_2_OUT".scaler_23 - 1.01685970217) * ("ADS_sca_2_OUT".scaler_23 - 1.01685970217)) / 0.211699277064) + (-0.5 * 2.01707178334 - (0.5 * ("ADS_sca_2_OUT".scaler_24 - 0.383078092032) * ("ADS_sca_2_OUT".scaler_24 - 0.383078092032)) / 1.19625365233) + (-0.5 * 1.68592280306 - (0.5 * ("ADS_sca_2_OUT".scaler_25 - 0.00794149318509) * ("ADS_sca_2_OUT".scaler_25 - 0.00794149318509)) / 0.859027568884) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_26 - -0.0288434872269)) / 1e-09) + (-0.5 * 1.18043716365 - (0.5 * ("ADS_sca_2_OUT".scaler_27 - -0.156862323809) * ("ADS_sca_2_OUT".scaler_27 - -0.156862323809)) / 0.518176219363) + (-0.5 * 1.31684056723 - (0.5 * ("ADS_sca_2_OUT".scaler_28 - 0.248618698711) * ("ADS_sca_2_OUT".scaler_28 - 0.248618698711)) / 0.593904647156) + (-0.5 * 0.857031294621 - (0.5 * ("ADS_sca_2_OUT".scaler_29 - 0.587069555207) * ("ADS_sca_2_OUT".scaler_29 - 0.587069555207)) / 0.37499380551) + (-0.5 * 0.524779197595 - (0.5 * ("ADS_sca_2_OUT".scaler_30 - 0.554213738901) * ("ADS_sca_2_OUT".scaler_30 - 0.554213738901)) / 0.268985482614) + (-0.5 * 0.412213861634 - (0.5 * ("ADS_sca_2_OUT".scaler_31 - 1.11916116519) * ("ADS_sca_2_OUT".scaler_31 - 1.11916116519)) / 0.240349009728) + (-0.5 * 1.5269092465 - (0.5 * ("ADS_sca_2_OUT".scaler_32 - 0.397545676662) * ("ADS_sca_2_OUT".scaler_32 - 0.397545676662)) / 0.73273745505) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_33 - -0.0288434872269)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_34 - 0.0) * ("ADS_sca_2_OUT".scaler_34 - 0.0)) / 1e-09) + (-0.5 * -1.4770613551 - (0.5 * ("ADS_sca_2_OUT".scaler_35 - -0.601079417774) * ("ADS_sca_2_OUT".scaler_35 - -0.601079417774)) / 0.0363362860421) + (-0.5 * 1.02538079619 - (0.5 * ("ADS_sca_2_OUT".scaler_36 - -0.734632550783) * ("ADS_sca_2_OUT".scaler_36 - -0.734632550783)) / 0.443748965166) + (-0.5 * 1.3861148191 - (0.5 * ("ADS_sca_2_OUT".scaler_37 - -0.664450790484) * ("ADS_sca_2_OUT".scaler_37 - -0.664450790484)) / 0.636505482629) + (-0.5 * 1.55111635897 - (0.5 * ("ADS_sca_2_OUT".scaler_38 - -0.964814326551) * ("ADS_sca_2_OUT".scaler_38 - -0.964814326551)) / 0.750691342198) + (-0.5 * 0.877783119445 - (0.5 * ("ADS_sca_2_OUT".scaler_39 - 0.516071111502) * ("ADS_sca_2_OUT".scaler_39 - 0.516071111502)) / 0.38285691604) + (-0.5 * 1.85902582741 - (0.5 * ("ADS_sca_2_OUT".scaler_40 - 0.621135723213) * ("ADS_sca_2_OUT".scaler_40 - 0.621135723213)) / 1.02137398095) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_41 - 0.0) * ("ADS_sca_2_OUT".scaler_41 - 0.0)) / 1e-09) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654) * ("ADS_sca_2_OUT".scaler_42 - -0.0612755527654)) / 1e-09) + (-0.5 * -0.13004989077 - (0.5 * ("ADS_sca_2_OUT".scaler_43 - -0.453546367508) * ("ADS_sca_2_OUT".scaler_43 - -0.453546367508)) / 0.139746256115) + (-0.5 * -1.17862934009 - (0.5 * ("ADS_sca_2_OUT".scaler_44 - -0.958260848994) * ("ADS_sca_2_OUT".scaler_44 - -0.958260848994)) / 0.0489720081425) + (-0.5 * -0.479949580984 - (0.5 * ("ADS_sca_2_OUT".scaler_45 - -1.0389311272) * ("ADS_sca_2_OUT".scaler_45 - -1.0389311272)) / 0.0984874010218) + (-0.5 * 1.0580563929 - (0.5 * ("ADS_sca_2_OUT".scaler_46 - -0.861044903034) * ("ADS_sca_2_OUT".scaler_46 - -0.861044903034)) / 0.458488223018) + (-0.5 * 1.2808458831 - (0.5 * ("ADS_sca_2_OUT".scaler_47 - 0.276011256752) * ("ADS_sca_2_OUT".scaler_47 - 0.276011256752)) / 0.572907398625) + (-0.5 * 1.84338702383 - (0.5 * ("ADS_sca_2_OUT".scaler_48 - 0.555365341969) * ("ADS_sca_2_OUT".scaler_48 - 0.555365341969)) / 1.00552516515) + (-0.5 * 1.82572325973 - (0.5 * ("ADS_sca_2_OUT".scaler_49 - -0.0104404044225) * ("ADS_sca_2_OUT".scaler_49 - -0.0104404044225)) / 0.987919752523) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465) * ("ADS_sca_2_OUT".scaler_50 - -0.036493555465)) / 1e-09) + (-0.5 * 1.89683673889 - (0.5 * ("ADS_sca_2_OUT".scaler_51 - 0.0359551940768) * ("ADS_sca_2_OUT".scaler_51 - 0.0359551940768)) / 1.06073246317) + (-0.5 * 1.87413031942 - (0.5 * ("ADS_sca_2_OUT".scaler_52 - -0.21153950112) * ("ADS_sca_2_OUT".scaler_52 - -0.21153950112)) / 1.03691841595) + (-0.5 * 1.61646940048 - (0.5 * ("ADS_sca_2_OUT".scaler_53 - -0.833010020681) * ("ADS_sca_2_OUT".scaler_53 - -0.833010020681)) / 0.801389914323) + (-0.5 * 1.62741809121 - (0.5 * ("ADS_sca_2_OUT".scaler_54 - -0.692702293531) * ("ADS_sca_2_OUT".scaler_54 - -0.692702293531)) / 0.810212293267) + (-0.5 * 1.52292086875 - (0.5 * ("ADS_sca_2_OUT".scaler_55 - 0.296389677498) * ("ADS_sca_2_OUT".scaler_55 - 0.296389677498)) / 0.729820841433) + (-0.5 * 1.87014886548 - (0.5 * ("ADS_sca_2_OUT".scaler_56 - 0.279222867956) * ("ADS_sca_2_OUT".scaler_56 - 0.279222867956)) / 1.03279818074) + (-0.5 * 0.591108201263 - (0.5 * ("ADS_sca_2_OUT".scaler_57 - -0.125760903547) * ("ADS_sca_2_OUT".scaler_57 - -0.125760903547)) / 0.287432029696) + (-0.5 * -18.8853887705 - (0.5 * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269) * ("ADS_sca_2_OUT".scaler_58 - -0.0288434872269)) / 1e-09) + (-0.5 * -0.313079519473 - (0.5 * ("ADS_sca_2_OUT".scaler_59 - -0.208321793562) * ("ADS_sca_2_OUT".scaler_59 - -0.208321793562)) / 0.11637278395) + (-0.5 * 1.43218494607 - (0.5 * ("ADS_sca_2_OUT".scaler_60 - 0.0507778778495) * ("ADS_sca_2_OUT".scaler_60 - 0.0507778778495)) / 0.666515342358) + (-0.5 * 1.92392513413 - (0.5 * ("ADS_sca_2_OUT".scaler_61 - -0.0559647835704) * ("ADS_sca_2_OUT".scaler_61 - -0.0559647835704)) / 1.08985871407) + (-0.5 * 1.5626321588 - (0.5 * ("ADS_sca_2_OUT".scaler_62 - 0.234283692338) * ("ADS_sca_2_OUT".scaler_62 - 0.234283692338)) / 0.759386121011) + (-0.5 * 1.66339840328 - (0.5 * ("ADS_sca_2_OUT".scaler_63 - 0.36102243678) * ("ADS_sca_2_OUT".scaler_63 - 0.36102243678)) / 0.839894774765) + (-0.5 * 1.54299592092 - (0.5 * ("ADS_sca_2_OUT".scaler_64 - -0.0106664654016) * ("ADS_sca_2_OUT".scaler_64 - -0.0106664654016)) / 0.744620083663) + (-0.5 * -1.80369001081 - (0.5 * ("ADS_sca_2_OUT".scaler_65 - -0.178814973144) * ("ADS_sca_2_OUT".scaler_65 - -0.178814973144)) / 0.0262112367329) AS "Score_9" 
FROM "ADS_sca_2_OUT"), 
orig_cte AS 
(SELECT "RawScores"."KEY" AS "KEY", "RawScores"."Score_0" AS "Score_0", "RawScores"."Score_1" AS "Score_1", "RawScores"."Score_2" AS "Score_2", "RawScores"."Score_3" AS "Score_3", "RawScores"."Score_4" AS "Score_4", "RawScores"."Score_5" AS "Score_5", "RawScores"."Score_6" AS "Score_6", "RawScores"."Score_7" AS "Score_7", "RawScores"."Score_8" AS "Score_8", "RawScores"."Score_9" AS "Score_9", "RawScores"."Proba_0" AS "Proba_0", "RawScores"."Proba_1" AS "Proba_1", "RawScores"."Proba_2" AS "Proba_2", "RawScores"."Proba_3" AS "Proba_3", "RawScores"."Proba_4" AS "Proba_4", "RawScores"."Proba_5" AS "Proba_5", "RawScores"."Proba_6" AS "Proba_6", "RawScores"."Proba_7" AS "Proba_7", "RawScores"."Proba_8" AS "Proba_8", "RawScores"."Proba_9" AS "Proba_9", "RawScores"."LogProba_0" AS "LogProba_0", "RawScores"."LogProba_1" AS "LogProba_1", "RawScores"."LogProba_2" AS "LogProba_2", "RawScores"."LogProba_3" AS "LogProba_3", "RawScores"."LogProba_4" AS "LogProba_4", "RawScores"."LogProba_5" AS "LogProba_5", "RawScores"."LogProba_6" AS "LogProba_6", "RawScores"."LogProba_7" AS "LogProba_7", "RawScores"."LogProba_8" AS "LogProba_8", "RawScores"."LogProba_9" AS "LogProba_9", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "RawScores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3", exp(CASE WHEN (score_max."Score_4" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_4" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_4", exp(CASE WHEN (score_max."Score_5" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_5" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_5", exp(CASE WHEN (score_max."Score_6" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_6" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_6", exp(CASE WHEN (score_max."Score_7" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_7" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_7", exp(CASE WHEN (score_max."Score_8" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_8" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_8", exp(CASE WHEN (score_max."Score_9" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_9" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 4 AS class, score_soft_max_comp."LogProba_4" AS "LogProba", score_soft_max_comp."Proba_4" AS "Proba", score_soft_max_comp."Score_4" AS "Score", score_soft_max_comp."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 5 AS class, score_soft_max_comp."LogProba_5" AS "LogProba", score_soft_max_comp."Proba_5" AS "Proba", score_soft_max_comp."Score_5" AS "Score", score_soft_max_comp."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 6 AS class, score_soft_max_comp."LogProba_6" AS "LogProba", score_soft_max_comp."Proba_6" AS "Proba", score_soft_max_comp."Score_6" AS "Score", score_soft_max_comp."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 7 AS class, score_soft_max_comp."LogProba_7" AS "LogProba", score_soft_max_comp."Proba_7" AS "Proba", score_soft_max_comp."Score_7" AS "Score", score_soft_max_comp."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 8 AS class, score_soft_max_comp."LogProba_8" AS "LogProba", score_soft_max_comp."Proba_8" AS "Proba", score_soft_max_comp."Score_8" AS "Score", score_soft_max_comp."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 9 AS class, score_soft_max_comp."LogProba_9" AS "LogProba", score_soft_max_comp."Proba_9" AS "Proba", score_soft_max_comp."Score_9" AS "Score", score_soft_max_comp."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Score_4" AS "Score_4", score_soft_max_comp."Score_5" AS "Score_5", score_soft_max_comp."Score_6" AS "Score_6", score_soft_max_comp."Score_7" AS "Score_7", score_soft_max_comp."Score_8" AS "Score_8", score_soft_max_comp."Score_9" AS "Score_9", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."Proba_4" AS "Proba_4", score_soft_max_comp."Proba_5" AS "Proba_5", score_soft_max_comp."Proba_6" AS "Proba_6", score_soft_max_comp."Proba_7" AS "Proba_7", score_soft_max_comp."Proba_8" AS "Proba_8", score_soft_max_comp."Proba_9" AS "Proba_9", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."LogProba_4" AS "LogProba_4", score_soft_max_comp."LogProba_5" AS "LogProba_5", score_soft_max_comp."LogProba_6" AS "LogProba_6", score_soft_max_comp."LogProba_7" AS "LogProba_7", score_soft_max_comp."LogProba_8" AS "LogProba_8", score_soft_max_comp."LogProba_9" AS "LogProba_9", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_comp."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_comp."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_comp."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_comp."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_comp."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_comp."exp_delta_Score_9" AS "exp_delta_Score_9", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT(53)) AS "Score_0", CAST(NULL AS FLOAT(53)) AS "Score_1", CAST(NULL AS FLOAT(53)) AS "Score_2", CAST(NULL AS FLOAT(53)) AS "Score_3", CAST(NULL AS FLOAT(53)) AS "Score_4", CAST(NULL AS FLOAT(53)) AS "Score_5", CAST(NULL AS FLOAT(53)) AS "Score_6", CAST(NULL AS FLOAT(53)) AS "Score_7", CAST(NULL AS FLOAT(53)) AS "Score_8", CAST(NULL AS FLOAT(53)) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 0.0) THEN ln(arg_max_cte."SoftProba_4") ELSE -1.79769313486231e+308 END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 0.0) THEN ln(arg_max_cte."SoftProba_5") ELSE -1.79769313486231e+308 END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 0.0) THEN ln(arg_max_cte."SoftProba_6") ELSE -1.79769313486231e+308 END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 0.0) THEN ln(arg_max_cte."SoftProba_7") ELSE -1.79769313486231e+308 END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 0.0) THEN ln(arg_max_cte."SoftProba_8") ELSE -1.79769313486231e+308 END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 0.0) THEN ln(arg_max_cte."SoftProba_9") ELSE -1.79769313486231e+308 END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte