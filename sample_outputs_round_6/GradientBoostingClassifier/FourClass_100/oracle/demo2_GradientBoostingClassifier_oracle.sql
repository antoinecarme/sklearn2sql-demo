-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_80" <= -1.3775088787078857) THEN 1 ELSE CASE WHEN ("ADS"."Feature_82" <= 5.5614519119262695) THEN CASE WHEN ("ADS"."Feature_33" <= 3.6717662811279297) THEN 4 ELSE 5 END ELSE 6 END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_80' AS feature, -1.3775088787078857 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03627642015339725 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.860073287872207 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_82' AS feature, 5.5614519119262695 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.020295558662202128 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_33' AS feature, 3.6717662811279297 AS threshold, 59 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.05884121202469531 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 48 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5319969552034458 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.097958875884855 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.8600732878722064 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_58" <= -1.2684895992279053) THEN CASE WHEN ("ADS"."Feature_47" <= -8.071157455444336) THEN 2 ELSE CASE WHEN ("ADS"."Feature_60" <= -1.0995787382125854) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 5.859363555908203) THEN CASE WHEN ("ADS"."Feature_49" <= 1.0968865156173706) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_64" <= 0.10499979555606842) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_58' AS feature, -1.2684895992279053 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.041118762825898644 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_47' AS feature, -8.071157455444336 AS threshold, 6 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5955684340047892 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9861541913712927 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_60' AS feature, -1.0995787382125854 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7625760898092978 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.2716778962115196 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.1319183421377907 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_16' AS feature, 5.859363555908203 AS threshold, 61 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.10374373300596644 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_49' AS feature, 1.0968865156173706 AS threshold, 54 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1795307899616852 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9800235185952053 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7787340372754574 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_64' AS feature, 0.10499979555606842 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4808992777952929 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.1868091061212547 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.972691185803797 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_0_1, "DT_Output_1"."Estimator" AS "Estimator_0_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_17" <= 0.9906941652297974) THEN CASE WHEN ("ADS"."Feature_85" <= 1.0601714849472046) THEN CASE WHEN ("ADS"."Feature_79" <= -7.058499336242676) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_34" <= -0.3545045852661133) THEN CASE WHEN ("ADS"."Feature_61" <= 2.017336845397949) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_84" <= 0.01860959827899933) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_17' AS feature, 0.9906941652297974 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0077131903264127475 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_85' AS feature, 1.0601714849472046 AS threshold, 49 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.12213348357848067 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_79' AS feature, -7.058499336242676 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1786098426886661 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.927827370196383 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8992334325516887 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.927827370196383 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_34' AS feature, -0.3545045852661133 AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.30376427463754996 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_61' AS feature, 2.017336845397949 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0504615021062214 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0009507374858992 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.9936545983349743 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_84' AS feature, 0.01860959827899933 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7465464955672643 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.057157498390768 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.9278273701963835 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_0_2, "DT_Output_2"."Estimator" AS "Estimator_0_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_23" <= 3.931978464126587) THEN CASE WHEN ("ADS"."Feature_61" <= -4.659310817718506) THEN 2 ELSE CASE WHEN ("ADS"."Feature_99" <= -7.344902515411377) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 2.463648796081543) THEN CASE WHEN ("ADS"."Feature_62" <= 1.166974663734436) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_55" <= -0.13955152034759521) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_23' AS feature, 3.931978464126587 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.01508934014009438 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_61' AS feature, -4.659310817718506 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.09707356044206877 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.7791189279809307 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_99' AS feature, -7.344902515411377 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1477186945644755 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8854132611514896 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 45 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8202170656521743 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_42' AS feature, 2.463648796081543 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.40392072882492663 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_62' AS feature, 1.166974663734436 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5679379869728947 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.7777318332102086 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9899029681457462 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_55' AS feature, -0.13955152034759521 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.25214830376694525 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9907116502561393 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0281368743822796 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_0_3, "DT_Output_3"."Estimator" AS "Estimator_0_3" 
FROM "DT_Output_3"), 
"RF_Join_CTE_0" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_0_1".join_key_0_1 AS join_key_0_1, "RF_Tree_0_1"."Estimator_0_1" AS "Estimator_0_1", "RF_Tree_0_2".join_key_0_2 AS join_key_0_2, "RF_Tree_0_2"."Estimator_0_2" AS "Estimator_0_2", "RF_Tree_0_3".join_key_0_3 AS join_key_0_3, "RF_Tree_0_3"."Estimator_0_3" AS "Estimator_0_3" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_0_1" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_0_1".join_key_0_1 LEFT OUTER JOIN "RF_Tree_0_2" ON "RF_Tree_0_2".join_key_0_2 = "RF_Tree_0_1".join_key_0_1 LEFT OUTER JOIN "RF_Tree_0_3" ON "RF_Tree_0_3".join_key_0_3 = "RF_Tree_0_2".join_key_0_2), 
"DT_node_lookup_4" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_80" <= -0.9145025014877319) THEN CASE WHEN ("ADS"."Feature_24" <= 0.07689715921878815) THEN CASE WHEN ("ADS"."Feature_15" <= 0.1494266390800476) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_33" <= 0.767530083656311) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_82" <= 4.266226291656494) THEN CASE WHEN ("ADS"."Feature_2" <= 7.693243980407715) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_61" <= 1.1568704843521118) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_80' AS feature, -0.9145025014877319 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.033108257967160284 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_24' AS feature, 0.07689715921878815 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3712099507672641 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.1494266390800476 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00790620829869415 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.1991141628862674 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0039415205528186 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_33' AS feature, 0.767530083656311 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6891007254272628 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.195834870647482 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.6829239035020493 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_82' AS feature, 4.266226291656494 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06442107649440812 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, 7.693243980407715 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.12126601661402757 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6374297230241559 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.625990852410407 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_61' AS feature, 1.1568704843521118 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3713901310893413 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.3329697791030415 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9891934736721469 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".count AS count, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_1_0, "DT_Output_4"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= -0.6179365515708923) THEN CASE WHEN ("ADS"."Feature_58" <= -0.7389776706695557) THEN CASE WHEN ("ADS"."Feature_93" <= 0.5716096758842468) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= -2.7988710403442383) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 5.81638240814209) THEN CASE WHEN ("ADS"."Feature_36" <= 1.615927815437317) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= 0.5476093888282776) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_36' AS feature, -0.6179365515708923 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03726849335527155 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_58' AS feature, -0.7389776706695557 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2432592087661897 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_93' AS feature, 0.5716096758842468 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6970965245277442 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.422738524221656 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.78709994711111 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, -2.7988710403442383 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.048757502011237706 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9988258011116289 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9570884684240756 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_16' AS feature, 5.81638240814209 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.15664198361972312 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_36' AS feature, 1.615927815437317 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1941438450318838 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9562684561522791 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.3412408420806057 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_18' AS feature, 0.5476093888282776 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3933853170919666 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9308550392188722 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.398302202078252 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".count AS count, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"RF_Tree_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_1_1, "DT_Output_5"."Estimator" AS "Estimator_1_1" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_17" <= 0.9906941652297974) THEN CASE WHEN ("ADS"."Feature_85" <= 1.0601714849472046) THEN CASE WHEN ("ADS"."Feature_79" <= -7.058499336242676) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_4" <= 3.643472194671631) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_34" <= -0.3545045852661133) THEN CASE WHEN ("ADS"."Feature_48" <= 0.553907036781311) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_50" <= -0.18365168571472168) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_17' AS feature, 0.9906941652297974 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.007383431963124822 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_85' AS feature, 1.0601714849472046 AS threshold, 49 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.10912859170309364 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_79' AS feature, -7.058499336242676 AS threshold, 46 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.15966809191478623 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2506228573143066 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8634501359262006 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_4' AS feature, 3.643472194671631 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6658104115428591 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2316032575602276 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2506047796000463 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_34' AS feature, -0.3545045852661133 AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2695895028845682 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_48' AS feature, 0.553907036781311 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.04998730782665928 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9759623865771626 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2867676551277047 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_50' AS feature, -0.18365168571472168 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6690605162736025 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.319364185736755 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2491187652067315 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".count AS count, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"RF_Tree_1_2" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_1_2, "DT_Output_6"."Estimator" AS "Estimator_1_2" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_23" <= 3.931978464126587) THEN CASE WHEN ("ADS"."Feature_61" <= -4.659310817718506) THEN 2 ELSE CASE WHEN ("ADS"."Feature_99" <= -3.7758827209472656) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_42" <= 2.463648796081543) THEN CASE WHEN ("ADS"."Feature_62" <= 1.166974663734436) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_83" <= 0.22337141633033752) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_23' AS feature, 3.931978464126587 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.013541990593463052 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_61' AS feature, -4.659310817718506 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08645798958525643 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.167239788253699 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_99' AS feature, -3.7758827209472656 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13178833752534322 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7608601114863695 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 38 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9704036864689294 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_42' AS feature, 2.463648796081543 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3602085885463573 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_62' AS feature, 1.166974663734436 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.508564204682479 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.1617528620124506 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9540737684194607 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_83' AS feature, 0.22337141633033752 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.23321387599812918 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.95705946742927 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0231144646988588 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".count AS count, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"RF_Tree_1_3" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_1_3, "DT_Output_7"."Estimator" AS "Estimator_1_3" 
FROM "DT_Output_7"), 
"RF_Join_CTE_1" AS 
(SELECT "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_1_1".join_key_1_1 AS join_key_1_1, "RF_Tree_1_1"."Estimator_1_1" AS "Estimator_1_1", "RF_Tree_1_2".join_key_1_2 AS join_key_1_2, "RF_Tree_1_2"."Estimator_1_2" AS "Estimator_1_2", "RF_Tree_1_3".join_key_1_3 AS join_key_1_3, "RF_Tree_1_3"."Estimator_1_3" AS "Estimator_1_3" 
FROM "RF_Tree_1_0" LEFT OUTER JOIN "RF_Tree_1_1" ON "RF_Tree_1_0".join_key_1_0 = "RF_Tree_1_1".join_key_1_1 LEFT OUTER JOIN "RF_Tree_1_2" ON "RF_Tree_1_2".join_key_1_2 = "RF_Tree_1_1".join_key_1_1 LEFT OUTER JOIN "RF_Tree_1_3" ON "RF_Tree_1_3".join_key_1_3 = "RF_Tree_1_2".join_key_1_2), 
"DT_node_lookup_8" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_80" <= -0.9145025014877319) THEN CASE WHEN ("ADS"."Feature_24" <= 0.07689715921878815) THEN CASE WHEN ("ADS"."Feature_15" <= 0.1494266390800476) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_49" <= 1.1337907314300537) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_8" <= -7.067619323730469) THEN CASE WHEN ("ADS"."Feature_39" <= -29.65390396118164) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_18" <= -0.6818496584892273) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_80' AS feature, -0.9145025014877319 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.02983221965716746 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_24' AS feature, 0.07689715921878815 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.33066301695639844 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_15' AS feature, 0.1494266390800476 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0018692435150800188 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8097590059497373 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9773608468556462 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_49' AS feature, 1.1337907314300537 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6183575687175521 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8862019369382674 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.253786769146416 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_8' AS feature, -7.067619323730469 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.05694589494837994 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_39' AS feature, -29.65390396118164 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.44042784553457065 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9905525171682856 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2784167932991504 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_18' AS feature, -0.6818496584892273 AS threshold, 48 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.09839370665529244 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.741291406146186 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7692961834533152 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".count AS count, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_2_0, "DT_Output_8"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= -0.6179365515708923) THEN CASE WHEN ("ADS"."Feature_58" <= -0.7389776706695557) THEN CASE WHEN ("ADS"."Feature_55" <= 1.6801717281341553) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= -2.7988710403442383) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 5.81638240814209) THEN CASE WHEN ("ADS"."Feature_96" <= -6.923903942108154) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_17" <= 0.512668251991272) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_36' AS feature, -0.6179365515708923 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03396810866800094 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_58' AS feature, -0.7389776706695557 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.21651092708674452 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_55' AS feature, 1.6801717281341553 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6250682374537774 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9357966759723126 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.1441892496022756 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, -2.7988710403442383 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.04141493692944476 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6196390068829944 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9350860502176093 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_16' AS feature, 5.81638240814209 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1405549323934245 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_96' AS feature, -6.923903942108154 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.17409355019170952 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9667864499470689 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9307902023977742 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_17' AS feature, 0.512668251991272 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3513447953147546 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.939533927267335 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9062650612844173 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".count AS count, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"RF_Tree_2_1" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_2_1, "DT_Output_9"."Estimator" AS "Estimator_2_1" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 1.3743497133255005) THEN CASE WHEN ("ADS"."Feature_35" <= 2.176605224609375) THEN CASE WHEN ("ADS"."Feature_99" <= -3.402523994445801) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_90" <= -2.7823948860168457) THEN CASE WHEN ("ADS"."Feature_45" <= 4.60737943649292) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_67" <= -0.23878230154514313) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_44' AS feature, 1.3743497133255005 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0066064043591794325 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_35' AS feature, 2.176605224609375 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.17589099835671038 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_99' AS feature, -3.402523994445801 AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.20285440115312367 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9729957779663083 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9327171301881314 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9037836995476671 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_90' AS feature, -2.7823948860168457 AS threshold, 37 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.13065137455773757 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_45' AS feature, 4.60737943649292 AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.07007128424242541 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6902367360371126 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8826628289667848 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_67' AS feature, -0.23878230154514313 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34252529218013184 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.3085752818520254 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8117094468323736 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".count AS count, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"RF_Tree_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_2_2, "DT_Output_10"."Estimator" AS "Estimator_2_2" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_23" <= 3.931978464126587) THEN CASE WHEN ("ADS"."Feature_61" <= -4.659310817718506) THEN CASE WHEN ("ADS"."Feature_47" <= -2.1169095039367676) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_59" <= 7.620166301727295) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 1.2395431995391846) THEN CASE WHEN ("ADS"."Feature_70" <= -3.5010857582092285) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_38" <= 1.0049742460250854) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_23' AS feature, 3.931978464126587 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.012075900450999034 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_61' AS feature, -4.659310817718506 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.07715136429471087 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_47' AS feature, -2.1169095039367676 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.583007378258422 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7958278686850053 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.804148811131795 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_59' AS feature, 7.620166301727295 AS threshold, 49 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.11756924649184142 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6774415684978885 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2377253659461847 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_58' AS feature, 1.2395431995391846 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3213970849027934 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_70' AS feature, -3.5010857582092285 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.456615411324888 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9249120465101663 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8108230170850816 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_38' AS feature, 1.0049742460250854 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2194762207855854 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9412264102580427 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.003857040554426 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".count AS count, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"RF_Tree_2_3" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_2_3, "DT_Output_11"."Estimator" AS "Estimator_2_3" 
FROM "DT_Output_11"), 
"RF_Join_CTE_2" AS 
(SELECT "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_2_1".join_key_2_1 AS join_key_2_1, "RF_Tree_2_1"."Estimator_2_1" AS "Estimator_2_1", "RF_Tree_2_2".join_key_2_2 AS join_key_2_2, "RF_Tree_2_2"."Estimator_2_2" AS "Estimator_2_2", "RF_Tree_2_3".join_key_2_3 AS join_key_2_3, "RF_Tree_2_3"."Estimator_2_3" AS "Estimator_2_3" 
FROM "RF_Tree_2_0" LEFT OUTER JOIN "RF_Tree_2_1" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_2_1".join_key_2_1 LEFT OUTER JOIN "RF_Tree_2_2" ON "RF_Tree_2_2".join_key_2_2 = "RF_Tree_2_1".join_key_2_1 LEFT OUTER JOIN "RF_Tree_2_3" ON "RF_Tree_2_3".join_key_2_3 = "RF_Tree_2_2".join_key_2_2), 
"DT_node_lookup_12" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_80" <= -1.3775088787078857) THEN CASE WHEN ("ADS"."Feature_53" <= -0.5338664054870605) THEN CASE WHEN ("ADS"."Feature_77" <= 0.5006187558174133) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_55" <= -2.9021213054656982) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_7" <= -3.910767078399658) THEN CASE WHEN ("ADS"."Feature_13" <= -0.2876189947128296) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_23" <= -2.4319491386413574) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_80' AS feature, -1.3775088787078857 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.027197665508979518 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_53' AS feature, -0.5338664054870605 AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5383281125542303 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_77' AS feature, 0.5006187558174133 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5187993378432905 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5694943802354326 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.547858476283562 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_55' AS feature, -2.9021213054656982 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5513472956948569 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7428999660998072 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6382516986156843 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_7' AS feature, -3.910767078399658 AS threshold, 62 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.014022531833379401 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_13' AS feature, -0.2876189947128296 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25817748099145493 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9394069310318708 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8302571401504137 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_23' AS feature, -2.4319491386413574 AS threshold, 50 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.07935053491133966 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6196952202504247 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.7314913006730928 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".count AS count, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_12"."KEY" AS join_key_3_0, "DT_Output_12"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_36" <= -0.6179365515708923) THEN CASE WHEN ("ADS"."Feature_58" <= -0.7389776706695557) THEN CASE WHEN ("ADS"."Feature_2" <= -2.689152479171753) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_49" <= 1.0127943754196167) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_16" <= 5.81638240814209) THEN CASE WHEN ("ADS"."Feature_52" <= 2.3813886642456055) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_54" <= -0.4809497594833374) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_36' AS feature, -0.6179365515708923 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03083020258991806 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_58' AS feature, -0.7389776706695557 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1936934939632841 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -2.689152479171753 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5586952853400046 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7951396515928093 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6557792405880916 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_49' AS feature, 1.0127943754196167 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0372641548018325 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5487353913198221 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8685440321652294 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_16' AS feature, 5.81638240814209 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.12637220112319555 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_52' AS feature, 2.3813886642456055 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.15697052433592146 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9102708347790134 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6748608937371356 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_54' AS feature, -0.4809497594833374 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3224032059967841 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7039308970743268 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.884696916531921 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".count AS count, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"RF_Tree_3_1" AS 
(SELECT "DT_Output_13"."KEY" AS join_key_3_1, "DT_Output_13"."Estimator" AS "Estimator_3_1" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_44" <= 1.3743497133255005) THEN CASE WHEN ("ADS"."Feature_35" <= 2.176605224609375) THEN CASE WHEN ("ADS"."Feature_99" <= -3.402523994445801) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ("ADS"."Feature_90" <= -2.7823948860168457) THEN CASE WHEN ("ADS"."Feature_24" <= 1.5409051179885864) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_67" <= -0.23878230154514313) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_44' AS feature, 1.3743497133255005 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0060891966424775745 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_35' AS feature, 2.176605224609375 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.158689048950635 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_99' AS feature, -3.402523994445801 AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.1828140383089079 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9533282086585996 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9095626313479709 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6337578547487084 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_90' AS feature, -2.7823948860168457 AS threshold, 37 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.11764041333710956 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_24' AS feature, 1.5409051179885864 AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06294697650184448 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6738771579361943 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7342871624785934 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_67' AS feature, -0.23878230154514313 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3082604359448944 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.2732655319328009 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5552275499906072 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".count AS count, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"RF_Tree_3_2" AS 
(SELECT "DT_Output_14"."KEY" AS join_key_3_2, "DT_Output_14"."Estimator" AS "Estimator_3_2" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_23" <= 3.931978464126587) THEN CASE WHEN ("ADS"."Feature_68" <= 0.9529111385345459) THEN CASE WHEN ("ADS"."Feature_59" <= 7.620166301727295) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.06931543350219727) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_58" <= 1.2395431995391846) THEN CASE WHEN ("ADS"."Feature_70" <= -3.5010857582092285) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_88" <= 0.18548817932605743) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_23' AS feature, 3.931978464126587 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.010708843720666307 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_68' AS feature, 0.9529111385345459 AS threshold, 52 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.06890845435614067 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_59' AS feature, 7.620166301727295 AS threshold, 44 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.13487643532155094 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 42 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8283500040820443 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.8456267928135406 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_54' AS feature, 0.06931543350219727 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29391544095361566 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.9316464556852493 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9654667870667379 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_58' AS feature, 1.2395431995391846 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2867154770535972 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_70' AS feature, -3.5010857582092285 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4072802880281028 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.89956800000342 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5693053736456128 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_88' AS feature, 0.18548817932605743 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.19554376684442534 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9729471830010308 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9137870526990616 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".count AS count, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"RF_Tree_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS join_key_3_3, "DT_Output_15"."Estimator" AS "Estimator_3_3" 
FROM "DT_Output_15"), 
"RF_Join_CTE_3" AS 
(SELECT "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0", "RF_Tree_3_1".join_key_3_1 AS join_key_3_1, "RF_Tree_3_1"."Estimator_3_1" AS "Estimator_3_1", "RF_Tree_3_2".join_key_3_2 AS join_key_3_2, "RF_Tree_3_2"."Estimator_3_2" AS "Estimator_3_2", "RF_Tree_3_3".join_key_3_3 AS join_key_3_3, "RF_Tree_3_3"."Estimator_3_3" AS "Estimator_3_3" 
FROM "RF_Tree_3_0" LEFT OUTER JOIN "RF_Tree_3_1" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_3_1".join_key_3_1 LEFT OUTER JOIN "RF_Tree_3_2" ON "RF_Tree_3_2".join_key_3_2 = "RF_Tree_3_1".join_key_3_1 LEFT OUTER JOIN "RF_Tree_3_3" ON "RF_Tree_3_3".join_key_3_3 = "RF_Tree_3_2".join_key_3_2), 
"RF_Join_CTE" AS 
(SELECT "RF_Join_CTE_0".join_key_0_0 AS join_key_0_0, "RF_Join_CTE_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Join_CTE_0".join_key_0_1 AS join_key_0_1, "RF_Join_CTE_0"."Estimator_0_1" AS "Estimator_0_1", "RF_Join_CTE_0".join_key_0_2 AS join_key_0_2, "RF_Join_CTE_0"."Estimator_0_2" AS "Estimator_0_2", "RF_Join_CTE_0".join_key_0_3 AS join_key_0_3, "RF_Join_CTE_0"."Estimator_0_3" AS "Estimator_0_3", "RF_Join_CTE_1".join_key_1_0 AS join_key_1_0, "RF_Join_CTE_1"."Estimator_1_0" AS "Estimator_1_0", "RF_Join_CTE_1".join_key_1_1 AS join_key_1_1, "RF_Join_CTE_1"."Estimator_1_1" AS "Estimator_1_1", "RF_Join_CTE_1".join_key_1_2 AS join_key_1_2, "RF_Join_CTE_1"."Estimator_1_2" AS "Estimator_1_2", "RF_Join_CTE_1".join_key_1_3 AS join_key_1_3, "RF_Join_CTE_1"."Estimator_1_3" AS "Estimator_1_3", "RF_Join_CTE_2".join_key_2_0 AS join_key_2_0, "RF_Join_CTE_2"."Estimator_2_0" AS "Estimator_2_0", "RF_Join_CTE_2".join_key_2_1 AS join_key_2_1, "RF_Join_CTE_2"."Estimator_2_1" AS "Estimator_2_1", "RF_Join_CTE_2".join_key_2_2 AS join_key_2_2, "RF_Join_CTE_2"."Estimator_2_2" AS "Estimator_2_2", "RF_Join_CTE_2".join_key_2_3 AS join_key_2_3, "RF_Join_CTE_2"."Estimator_2_3" AS "Estimator_2_3", "RF_Join_CTE_3".join_key_3_0 AS join_key_3_0, "RF_Join_CTE_3"."Estimator_3_0" AS "Estimator_3_0", "RF_Join_CTE_3".join_key_3_1 AS join_key_3_1, "RF_Join_CTE_3"."Estimator_3_1" AS "Estimator_3_1", "RF_Join_CTE_3".join_key_3_2 AS join_key_3_2, "RF_Join_CTE_3"."Estimator_3_2" AS "Estimator_3_2", "RF_Join_CTE_3".join_key_3_3 AS join_key_3_3, "RF_Join_CTE_3"."Estimator_3_3" AS "Estimator_3_3" 
FROM "RF_Join_CTE_0" LEFT OUTER JOIN "RF_Join_CTE_1" ON "RF_Join_CTE_0".join_key_0_0 = "RF_Join_CTE_1".join_key_1_0 LEFT OUTER JOIN "RF_Join_CTE_2" ON "RF_Join_CTE_2".join_key_2_0 = "RF_Join_CTE_1".join_key_1_0 LEFT OUTER JOIN "RF_Join_CTE_3" ON "RF_Join_CTE_3".join_key_3_0 = "RF_Join_CTE_2".join_key_2_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 0.298507462687 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" AS "Score_0", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "LogProba_0", 0.194029850746 + 0.1 * "RF_Join_CTE"."Estimator_0_1" + 0.1 * "RF_Join_CTE"."Estimator_1_1" + 0.1 * "RF_Join_CTE"."Estimator_2_1" + 0.1 * "RF_Join_CTE"."Estimator_3_1" AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_1", 0.238805970149 + 0.1 * "RF_Join_CTE"."Estimator_0_2" + 0.1 * "RF_Join_CTE"."Estimator_1_2" + 0.1 * "RF_Join_CTE"."Estimator_2_2" + 0.1 * "RF_Join_CTE"."Estimator_3_2" AS "Score_2", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "LogProba_2", 0.268656716418 + 0.1 * "RF_Join_CTE"."Estimator_0_3" + 0.1 * "RF_Join_CTE"."Estimator_1_3" + 0.1 * "RF_Join_CTE"."Estimator_2_3" + 0.1 * "RF_Join_CTE"."Estimator_3_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp) soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte