-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.293433083957 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 5.07398171239 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 11.8204488778 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 11.8071487947 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 5.80881130507 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 1.38570241064 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 0.131338320865 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.00581878636741 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 1.96674979219 ELSE `ADS`.`Feature_9` END AS impter_11, CASE WHEN (`ADS`.`Feature_10` IS NULL) THEN 10.3283458022 ELSE `ADS`.`Feature_10` END AS impter_12, CASE WHEN (`ADS`.`Feature_11` IS NULL) THEN 12.0656691604 ELSE `ADS`.`Feature_11` END AS impter_13, CASE WHEN (`ADS`.`Feature_12` IS NULL) THEN 10.1853699086 ELSE `ADS`.`Feature_12` END AS impter_14, CASE WHEN (`ADS`.`Feature_13` IS NULL) THEN 8.04156275977 ELSE `ADS`.`Feature_13` END AS impter_15, CASE WHEN (`ADS`.`Feature_14` IS NULL) THEN 1.90191188695 ELSE `ADS`.`Feature_14` END AS impter_16, CASE WHEN (`ADS`.`Feature_15` IS NULL) THEN 0.106400665004 ELSE `ADS`.`Feature_15` END AS impter_17, CASE WHEN (`ADS`.`Feature_16` IS NULL) THEN 0.00166251039069 ELSE `ADS`.`Feature_16` END AS impter_18, CASE WHEN (`ADS`.`Feature_17` IS NULL) THEN 2.5719035744 ELSE `ADS`.`Feature_17` END AS impter_19, CASE WHEN (`ADS`.`Feature_18` IS NULL) THEN 9.99168744805 ELSE `ADS`.`Feature_18` END AS impter_20, CASE WHEN (`ADS`.`Feature_19` IS NULL) THEN 7.13549459684 ELSE `ADS`.`Feature_19` END AS impter_21, CASE WHEN (`ADS`.`Feature_20` IS NULL) THEN 7.04987531172 ELSE `ADS`.`Feature_20` END AS impter_22, CASE WHEN (`ADS`.`Feature_21` IS NULL) THEN 7.6965918537 ELSE `ADS`.`Feature_21` END AS impter_23, CASE WHEN (`ADS`.`Feature_22` IS NULL) THEN 1.87364921031 ELSE `ADS`.`Feature_22` END AS impter_24, CASE WHEN (`ADS`.`Feature_23` IS NULL) THEN 0.0540315876974 ELSE `ADS`.`Feature_23` END AS impter_25, CASE WHEN (`ADS`.`Feature_24` IS NULL) THEN 0.000831255195345 ELSE `ADS`.`Feature_24` END AS impter_26, CASE WHEN (`ADS`.`Feature_25` IS NULL) THEN 2.5170407315 ELSE `ADS`.`Feature_25` END AS impter_27, CASE WHEN (`ADS`.`Feature_26` IS NULL) THEN 9.19950124688 ELSE `ADS`.`Feature_26` END AS impter_28, CASE WHEN (`ADS`.`Feature_27` IS NULL) THEN 9.02244389027 ELSE `ADS`.`Feature_27` END AS impter_29, CASE WHEN (`ADS`.`Feature_28` IS NULL) THEN 9.99418121363 ELSE `ADS`.`Feature_28` END AS impter_30, CASE WHEN (`ADS`.`Feature_29` IS NULL) THEN 7.60432252702 ELSE `ADS`.`Feature_29` END AS impter_31, CASE WHEN (`ADS`.`Feature_30` IS NULL) THEN 2.35245220283 ELSE `ADS`.`Feature_30` END AS impter_32, CASE WHEN (`ADS`.`Feature_31` IS NULL) THEN 0.000831255195345 ELSE `ADS`.`Feature_31` END AS impter_33, CASE WHEN (`ADS`.`Feature_32` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_32` END AS impter_34, CASE WHEN (`ADS`.`Feature_33` IS NULL) THEN 2.29925187032 ELSE `ADS`.`Feature_33` END AS impter_35, CASE WHEN (`ADS`.`Feature_34` IS NULL) THEN 7.56691604323 ELSE `ADS`.`Feature_34` END AS impter_36, CASE WHEN (`ADS`.`Feature_35` IS NULL) THEN 9.1604322527 ELSE `ADS`.`Feature_35` END AS impter_37, CASE WHEN (`ADS`.`Feature_36` IS NULL) THEN 10.3674147963 ELSE `ADS`.`Feature_36` END AS impter_38, CASE WHEN (`ADS`.`Feature_37` IS NULL) THEN 8.75727348296 ELSE `ADS`.`Feature_37` END AS impter_39, CASE WHEN (`ADS`.`Feature_38` IS NULL) THEN 2.79966749792 ELSE `ADS`.`Feature_38` END AS impter_40, CASE WHEN (`ADS`.`Feature_39` IS NULL) THEN 0.0 ELSE `ADS`.`Feature_39` END AS impter_41, CASE WHEN (`ADS`.`Feature_40` IS NULL) THEN 0.00997506234414 ELSE `ADS`.`Feature_40` END AS impter_42, CASE WHEN (`ADS`.`Feature_41` IS NULL) THEN 1.55860349127 ELSE `ADS`.`Feature_41` END AS impter_43, CASE WHEN (`ADS`.`Feature_42` IS NULL) THEN 6.83790523691 ELSE `ADS`.`Feature_42` END AS impter_44, CASE WHEN (`ADS`.`Feature_43` IS NULL) THEN 7.30257689111 ELSE `ADS`.`Feature_43` END AS impter_45, CASE WHEN (`ADS`.`Feature_44` IS NULL) THEN 7.77306733167 ELSE `ADS`.`Feature_44` END AS impter_46, CASE WHEN (`ADS`.`Feature_45` IS NULL) THEN 8.29592684954 ELSE `ADS`.`Feature_45` END AS impter_47, CASE WHEN (`ADS`.`Feature_46` IS NULL) THEN 3.38819617623 ELSE `ADS`.`Feature_46` END AS impter_48, CASE WHEN (`ADS`.`Feature_47` IS NULL) THEN 0.0365752285952 ELSE `ADS`.`Feature_47` END AS impter_49, CASE WHEN (`ADS`.`Feature_48` IS NULL) THEN 0.00332502078138 ELSE `ADS`.`Feature_48` END AS impter_50, CASE WHEN (`ADS`.`Feature_49` IS NULL) THEN 0.715710723192 ELSE `ADS`.`Feature_49` END AS impter_51, CASE WHEN (`ADS`.`Feature_50` IS NULL) THEN 7.47714048213 ELSE `ADS`.`Feature_50` END AS impter_52, CASE WHEN (`ADS`.`Feature_51` IS NULL) THEN 9.5536159601 ELSE `ADS`.`Feature_51` END AS impter_53, CASE WHEN (`ADS`.`Feature_52` IS NULL) THEN 9.53948462178 ELSE `ADS`.`Feature_52` END AS impter_54, CASE WHEN (`ADS`.`Feature_53` IS NULL) THEN 8.83374896093 ELSE `ADS`.`Feature_53` END AS impter_55, CASE WHEN (`ADS`.`Feature_54` IS NULL) THEN 3.8029925187 ELSE `ADS`.`Feature_54` END AS impter_56, CASE WHEN (`ADS`.`Feature_55` IS NULL) THEN 0.243557772236 ELSE `ADS`.`Feature_55` END AS impter_57, CASE WHEN (`ADS`.`Feature_56` IS NULL) THEN 0.000831255195345 ELSE `ADS`.`Feature_56` END AS impter_58, CASE WHEN (`ADS`.`Feature_57` IS NULL) THEN 0.266832917706 ELSE `ADS`.`Feature_57` END AS impter_59, CASE WHEN (`ADS`.`Feature_58` IS NULL) THEN 5.43059019119 ELSE `ADS`.`Feature_58` END AS impter_60, CASE WHEN (`ADS`.`Feature_59` IS NULL) THEN 12.0864505403 ELSE `ADS`.`Feature_59` END AS impter_61, CASE WHEN (`ADS`.`Feature_60` IS NULL) THEN 11.8719866999 ELSE `ADS`.`Feature_60` END AS impter_62, CASE WHEN (`ADS`.`Feature_61` IS NULL) THEN 6.74812967581 ELSE `ADS`.`Feature_61` END AS impter_63, CASE WHEN (`ADS`.`Feature_62` IS NULL) THEN 2.15128844555 ELSE `ADS`.`Feature_62` END AS impter_64, CASE WHEN (`ADS`.`Feature_63` IS NULL) THEN 0.412302576891 ELSE `ADS`.`Feature_63` END AS impter_65 
FROM digits AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 0.0) / 1.0 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 0.293433083957) / 0.859845005927 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 5.07398171239) / 4.71696110342 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 11.8204488778) / 4.22115333284 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 11.8071487947) / 4.33559553334 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 5.80881130507) / 5.69478817014 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - 1.38570241064) / 3.36514752375 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 0.131338320865) / 1.03602946954 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.00581878636741) / 0.0954460521656 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 1.96674979219) / 3.17914416142 AS scaler_11, (CAST(`ADS_imp_1_OUT`.impter_12 AS DOUBLE) - 10.3283458022) / 5.41167293882 AS scaler_12, (CAST(`ADS_imp_1_OUT`.impter_13 AS DOUBLE) - 12.0656691604) / 3.94979003791 AS scaler_13, (CAST(`ADS_imp_1_OUT`.impter_14 AS DOUBLE) - 10.1853699086) / 4.76650673546 AS scaler_14, (CAST(`ADS_imp_1_OUT`.impter_15 AS DOUBLE) - 8.04156275977) / 6.0876066041 AS scaler_15, (CAST(`ADS_imp_1_OUT`.impter_16 AS DOUBLE) - 1.90191188695) / 3.64264316294 AS scaler_16, (CAST(`ADS_imp_1_OUT`.impter_17 AS DOUBLE) - 0.106400665004) / 0.822774695912 AS scaler_17, (CAST(`ADS_imp_1_OUT`.impter_18 AS DOUBLE) - 0.00166251039069) / 0.0407399858848 AS scaler_18, (CAST(`ADS_imp_1_OUT`.impter_19 AS DOUBLE) - 2.5719035744) / 3.56305629928 AS scaler_19, (CAST(`ADS_imp_1_OUT`.impter_20 AS DOUBLE) - 9.99168744805) / 5.64964316504 AS scaler_20, (CAST(`ADS_imp_1_OUT`.impter_21 AS DOUBLE) - 7.13549459684) / 5.81502871188 AS scaler_21, (CAST(`ADS_imp_1_OUT`.impter_22 AS DOUBLE) - 7.04987531172) / 6.15922069493 AS scaler_22, (CAST(`ADS_imp_1_OUT`.impter_23 AS DOUBLE) - 7.6965918537) / 6.25532232413 AS scaler_23, (CAST(`ADS_imp_1_OUT`.impter_24 AS DOUBLE) - 1.87364921031) / 3.41099813777 AS scaler_24, (CAST(`ADS_imp_1_OUT`.impter_25 AS DOUBLE) - 0.0540315876974) / 0.421263533813 AS scaler_25, (CAST(`ADS_imp_1_OUT`.impter_26 AS DOUBLE) - 0.000831255195345) / 0.0288195109283 AS scaler_26, (CAST(`ADS_imp_1_OUT`.impter_27 AS DOUBLE) - 2.5170407315) / 3.19163503844 AS scaler_27, (CAST(`ADS_imp_1_OUT`.impter_28 AS DOUBLE) - 9.19950124688) / 6.15403007807 AS scaler_28, (CAST(`ADS_imp_1_OUT`.impter_29 AS DOUBLE) - 9.02244389027) / 5.83981191231 AS scaler_29, (CAST(`ADS_imp_1_OUT`.impter_30 AS DOUBLE) - 9.99418121363) / 6.10390491835 AS scaler_30, (CAST(`ADS_imp_1_OUT`.impter_31 AS DOUBLE) - 7.60432252702) / 5.91977802282 AS scaler_31, (CAST(`ADS_imp_1_OUT`.impter_32 AS DOUBLE) - 2.35245220283) / 3.79378678582 AS scaler_32, (CAST(`ADS_imp_1_OUT`.impter_33 AS DOUBLE) - 0.000831255195345) / 0.0288195109283 AS scaler_33, (CAST(`ADS_imp_1_OUT`.impter_34 AS DOUBLE) - 0.0) / 1.0 AS scaler_34, (CAST(`ADS_imp_1_OUT`.impter_35 AS DOUBLE) - 2.29925187032) / 3.51156139729 AS scaler_35, (CAST(`ADS_imp_1_OUT`.impter_36 AS DOUBLE) - 7.56691604323) / 6.31701730353 AS scaler_36, (CAST(`ADS_imp_1_OUT`.impter_37 AS DOUBLE) - 9.1604322527) / 6.1997798861 AS scaler_37, (CAST(`ADS_imp_1_OUT`.impter_38 AS DOUBLE) - 10.3674147963) / 5.87749718139 AS scaler_38, (CAST(`ADS_imp_1_OUT`.impter_39 AS DOUBLE) - 8.75727348296) / 5.85464866041 AS scaler_39, (CAST(`ADS_imp_1_OUT`.impter_40 AS DOUBLE) - 2.79966749792) / 3.50284528298 AS scaler_40, (CAST(`ADS_imp_1_OUT`.impter_41 AS DOUBLE) - 0.0) / 1.0 AS scaler_41, (CAST(`ADS_imp_1_OUT`.impter_42 AS DOUBLE) - 0.00997506234414) / 0.162790246582 AS scaler_42, (CAST(`ADS_imp_1_OUT`.impter_43 AS DOUBLE) - 1.55860349127) / 2.98466828413 AS scaler_43, (CAST(`ADS_imp_1_OUT`.impter_44 AS DOUBLE) - 6.83790523691) / 6.54553660728 AS scaler_44, (CAST(`ADS_imp_1_OUT`.impter_45 AS DOUBLE) - 7.30257689111) / 6.44510433727 AS scaler_45, (CAST(`ADS_imp_1_OUT`.impter_46 AS DOUBLE) - 7.77306733167) / 6.2858645059 AS scaler_46, (CAST(`ADS_imp_1_OUT`.impter_47 AS DOUBLE) - 8.29592684954) / 5.69877340506 AS scaler_47, (CAST(`ADS_imp_1_OUT`.impter_48 AS DOUBLE) - 3.38819617623) / 4.31911912467 AS scaler_48, (CAST(`ADS_imp_1_OUT`.impter_49 AS DOUBLE) - 0.0365752285952) / 0.362854080738 AS scaler_49, (CAST(`ADS_imp_1_OUT`.impter_50 AS DOUBLE) - 0.00332502078138) / 0.0911125468322 AS scaler_50, (CAST(`ADS_imp_1_OUT`.impter_51 AS DOUBLE) - 0.715710723192) / 1.75156338368 AS scaler_51, (CAST(`ADS_imp_1_OUT`.impter_52 AS DOUBLE) - 7.47714048213) / 5.70412935863 AS scaler_52, (CAST(`ADS_imp_1_OUT`.impter_53 AS DOUBLE) - 9.5536159601) / 5.24014268924 AS scaler_53, (CAST(`ADS_imp_1_OUT`.impter_54 AS DOUBLE) - 9.53948462178) / 5.28717094725 AS scaler_54, (CAST(`ADS_imp_1_OUT`.impter_55 AS DOUBLE) - 8.83374896093) / 6.03665375205 AS scaler_55, (CAST(`ADS_imp_1_OUT`.impter_56 AS DOUBLE) - 3.8029925187) / 4.99145647696 AS scaler_56, (CAST(`ADS_imp_1_OUT`.impter_57 AS DOUBLE) - 0.243557772236) / 1.08937190592 AS scaler_57, (CAST(`ADS_imp_1_OUT`.impter_58 AS DOUBLE) - 0.000831255195345) / 0.0288195109283 AS scaler_58, (CAST(`ADS_imp_1_OUT`.impter_59 AS DOUBLE) - 0.266832917706) / 0.887404536173 AS scaler_59, (CAST(`ADS_imp_1_OUT`.impter_60 AS DOUBLE) - 5.43059019119) / 5.07966086609 AS scaler_60, (CAST(`ADS_imp_1_OUT`.impter_61 AS DOUBLE) - 12.0864505403) / 4.32751151319 AS scaler_61, (CAST(`ADS_imp_1_OUT`.impter_62 AS DOUBLE) - 11.8719866999) / 4.84971877494 AS scaler_62, (CAST(`ADS_imp_1_OUT`.impter_63 AS DOUBLE) - 6.74812967581) / 5.89691744232 AS scaler_63, (CAST(`ADS_imp_1_OUT`.impter_64 AS DOUBLE) - 2.15128844555) / 4.1936167999 AS scaler_64, (CAST(`ADS_imp_1_OUT`.impter_65 AS DOUBLE) - 0.412302576891) / 1.98487588299 AS scaler_65 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -1.6788463592529297) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_30 <= -1.2277683019638062) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -1.150475025177002) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= -1.2025120258331299) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -1.1684250831604004) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= -0.2607008218765259) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.6788463592529297 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.006959722220765252 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_30' AS feature, -1.2277683019638062 AS threshold, 176 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5087254965504907 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -1.150475025177002 AS threshold, 118 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7990760358417078 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08377422950251517 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 107 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.881717790207066 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_29' AS feature, -1.2025120258331299 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08198766959371216 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.069924683750587 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9991441208278254 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_38' AS feature, -1.1684250831604004 AS threshold, 1027 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09533420956617708 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_29' AS feature, -0.2607008218765259 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03952755636674352 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.03539028146138 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 61 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8340774191134253 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 960 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9991441208278259 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_21 <= 1.4384288787841797) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -1.8161382675170898) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_22 <= 1.2095887660980225) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= -2.4449357986450195) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= -0.6687003374099731) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= 0.9379678964614868) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= 1.3337793350219727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.4384288787841797 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0006788620807775244 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.8161382675170898 AS threshold, 1031 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06451484587120469 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 1.2095887660980225 AS threshold, 68 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3113581267823129 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.25084074909646 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.861757626460168 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_5' AS feature, -2.4449357986450195 AS threshold, 963 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0910562395788263 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9704540660759817 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 958 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9364739319812765 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_48' AS feature, -0.6687003374099731 AS threshold, 172 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3819659012211354 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_29' AS feature, 0.9379678964614868 AS threshold, 112 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6045290851390851 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.572535910776178 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 85 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.408052157792626 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_31' AS feature, 1.3337793350219727 AS threshold, 60 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03348537542570346 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0001765910455993 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.672020943599123 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_0_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Estimator` AS `Estimator_0_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_64 <= 0.08315293490886688) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_39 <= -1.4103789329528809) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_56 <= -0.3612157106399536) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_51 <= 7.869706153869629) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= -0.43717160820961) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= 0.25301432609558105) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_54 <= 0.7490803003311157) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.08315293490886688 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.006343432313822584 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.4103789329528809 AS threshold, 925 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0727142880452254 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_56' AS feature, -0.3612157106399536 AS threshold, 138 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.03789488408951495 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 119 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8307032993695945 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.796003142803665 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_51' AS feature, 7.869706153869629 AS threshold, 787 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09210954313365542 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 786 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9362130442744468 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.778423137816574 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_48' AS feature, -0.43717160820961 AS threshold, 278 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2693951996955499 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_29' AS feature, 0.25301432609558105 AS threshold, 133 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.599186192966629 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 84 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.340204304953259 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 49 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.745413431228564 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_54' AS feature, 0.7490803003311157 AS threshold, 145 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03310274585654359 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 133 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.92853117260762 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.369122401629557 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_0_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Estimator` AS `Estimator_0_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -1.4136266708374023) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -0.745151162147522) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_65 <= 0.5479927062988281) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 1.5308222770690918) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -0.6011509895324707) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 0.4889431893825531) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_51 <= 6.442409992218018) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.4136266708374023 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0007358117240310953 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151162147522 AS threshold, 212 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2885965229809426 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_65' AS feature, 0.5479927062988281 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7935503622314395 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.411378640363305 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9915948227677527 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_48' AS feature, 1.5308222770690918 AS threshold, 126 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05605451015828516 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 125 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.662675428936189 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.770591750641332 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_28' AS feature, -0.6011509895324707 AS threshold, 991 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06263132631278476 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_48' AS feature, 0.4889431893825531 AS threshold, 185 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.03645888975779096 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 145 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.43569183395743605 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.195333642149121 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_51' AS feature, 6.442409992218018 AS threshold, 806 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08537535853741995 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 804 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.873775062670061 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.204792043544632 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_0_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Estimator` AS `Estimator_0_3` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 1.765809416770935) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_24 <= 3.7016587257385254) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= -0.9696882963180542) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= -0.5817660689353943) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_60 <= -0.9706534147262573) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_13 <= -0.3963930010795593) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.192775011062622) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.765809416770935 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.007038889866207114 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_24' AS feature, 3.7016587257385254 AS threshold, 1108 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05300007309236062 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_4' AS feature, -0.9696882963180542 AS threshold, 1092 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06232707617597317 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 217 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5319078263325273 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 875 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9183688206987641 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_15' AS feature, -0.5817660689353943 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5835678873642001 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.637041256164144 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0037548058172865 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_60' AS feature, -0.9706534147262573 AS threshold, 95 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7072827946882372 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_13' AS feature, -0.3963930010795593 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8959359869793921 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.72777908192658 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.631453622588646 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_14' AS feature, -1.192775011062622 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2558626559915484 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.102245528269894 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.000304518376481 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.count AS count, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`RF_Tree_0_4` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Estimator` AS `Estimator_0_4` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.9906110763549805) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.12137214839458466) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= -0.25322967767715454) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.25392794609069824) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.6708834171295166) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.4725704789161682) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.4025721549987793) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.9906110763549805 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0006868807826705586 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.12137214839458466 AS threshold, 366 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.20825172840092354 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_15' AS feature, -0.25322967767715454 AS threshold, 247 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.050543988987660333 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 242 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6656777606317655 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.688595125793743 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_44' AS feature, 0.25392794609069824 AS threshold, 119 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7454159485268075 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 100 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.352219795638227 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1263130581548506 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_23' AS feature, -0.6708834171295166 AS threshold, 837 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09007624254860883 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_7' AS feature, 0.4725704789161682 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03537933402624278 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9941846710796256 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.0461534499885854 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_14' AS feature, -1.4025721549987793 AS threshold, 770 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0948355839395158 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6600122635905448 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 710 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9975605323179211 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.count AS count, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`RF_Tree_0_5` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Estimator` AS `Estimator_0_5` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -1.150475025177002) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.25392794609069824) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 2.5727014541625977) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_56 <= -0.3612157106399536) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 2.5727014541625977) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -1.9160341024398804) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_47 <= -1.0170481204986572) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.150475025177002 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.004069537794441453 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.25392794609069824 AS threshold, 338 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2540695433132608 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, 2.5727014541625977 AS threshold, 179 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08349390344046022 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 178 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9353052052678118 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.646274808505742 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_56' AS feature, -0.3612157106399536 AS threshold, 159 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6340938009794023 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1251218040576044 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 122 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.982292492794495 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_48' AS feature, 2.5727014541625977 AS threshold, 865 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09361832563372176 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_6' AS feature, -1.9160341024398804 AS threshold, 858 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09476019577617652 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.27750274616839143 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 830 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9862982258749466 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_47' AS feature, -1.0170481204986572 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.046342328970034284 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.031574040337626 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9959033254614333 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.count AS count, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`RF_Tree_0_6` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Estimator` AS `Estimator_0_6` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_62 <= -1.9324804544448853) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_19 <= -0.3008382320404053) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= -1.2000994682312012) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= 0.0488295778632164) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_62 <= -0.9014928340911865) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= 0.48915302753448486) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 <= 1.3210644721984863) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -1.9324804544448853 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0014930346271612184 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_19' AS feature, -0.3008382320404053 AS threshold, 107 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5975280365286277 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_31' AS feature, -1.2000994682312012 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8494436114399886 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9995351575002251 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 65 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.345600210795432 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_28' AS feature, 0.0488295778632164 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.17556944855209838 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.6512446736407815 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9976688287528477 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_62' AS feature, -0.9014928340911865 AS threshold, 1096 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05997410635496181 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_31' AS feature, 0.48915302753448486 AS threshold, 107 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1814637199153666 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 52 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5976949964958294 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.0233912256410065 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_9' AS feature, 1.3210644721984863 AS threshold, 989 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08609528675023495 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 982 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9329853939949162 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.883858926782968 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.count AS count, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`RF_Tree_0_7` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Estimator` AS `Estimator_0_7` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.6565141677856445) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.10115209966897964) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_37 <= 0.37736302614212036) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_53 <= 0.5622717142105103) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.3710319399833679) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_24 <= 1.3563041687011719) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= -0.017622709274291992) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.6565141677856445 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.002591139862784083 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.10115209966897964 AS threshold, 578 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.09635116902741347 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_37' AS feature, 0.37736302614212036 AS threshold, 341 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02927498581195717 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 205 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8445359306456647 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 136 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.506393304500098 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_53' AS feature, 0.5622717142105103 AS threshold, 237 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2771044129102209 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 118 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.506141367638324 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 119 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02742116452026568 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_40' AS feature, -0.3710319399833679 AS threshold, 625 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08411813510866518 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_24' AS feature, 1.3563041687011719 AS threshold, 85 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.026777907190630685 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 72 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7116828914780522 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.101788612001222 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_31' AS feature, -0.017622709274291992 AS threshold, 540 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09314391172539283 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 164 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.866402455582885 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 376 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.998016306097937 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.count AS count, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`RF_Tree_0_8` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Estimator` AS `Estimator_0_8` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= 0.9959287643432617) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= 1.2474830150604248) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= -0.5099513530731201) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= -0.12801168859004974) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -1.055464267730713) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 0.34194138646125793) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 0.9520005583763123) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_31' AS feature, 0.9959287643432617 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.004309162435353069 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 1.2474830150604248 AS threshold, 905 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06518268271475969 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_44' AS feature, -0.5099513530731201 AS threshold, 834 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07910267182926502 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 335 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5680122317853823 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 499 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9948558906514101 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_44' AS feature, -0.12801168859004974 AS threshold, 71 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.09832817533450146 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.8775563710623557 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 43 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9960455049459852 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_45' AS feature, -1.055464267730713 AS threshold, 298 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.21534983310935332 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_35' AS feature, 0.34194138646125793 AS threshold, 114 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5984070755050395 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 97 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.817093872167758 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.38334482960658556 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_48' AS feature, 0.9520005583763123 AS threshold, 184 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.021979110548843692 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 176 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5340422852050697 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.217804580397225 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.count AS count, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`RF_Tree_0_9` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Estimator` AS `Estimator_0_9` 
FROM `DT_Output_9`), 
`RF_Join_CTE_0` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_0_1`.join_key_0_1 AS join_key_0_1, `RF_Tree_0_1`.`Estimator_0_1` AS `Estimator_0_1`, `RF_Tree_0_2`.join_key_0_2 AS join_key_0_2, `RF_Tree_0_2`.`Estimator_0_2` AS `Estimator_0_2`, `RF_Tree_0_3`.join_key_0_3 AS join_key_0_3, `RF_Tree_0_3`.`Estimator_0_3` AS `Estimator_0_3`, `RF_Tree_0_4`.join_key_0_4 AS join_key_0_4, `RF_Tree_0_4`.`Estimator_0_4` AS `Estimator_0_4`, `RF_Tree_0_5`.join_key_0_5 AS join_key_0_5, `RF_Tree_0_5`.`Estimator_0_5` AS `Estimator_0_5`, `RF_Tree_0_6`.join_key_0_6 AS join_key_0_6, `RF_Tree_0_6`.`Estimator_0_6` AS `Estimator_0_6`, `RF_Tree_0_7`.join_key_0_7 AS join_key_0_7, `RF_Tree_0_7`.`Estimator_0_7` AS `Estimator_0_7`, `RF_Tree_0_8`.join_key_0_8 AS join_key_0_8, `RF_Tree_0_8`.`Estimator_0_8` AS `Estimator_0_8`, `RF_Tree_0_9`.join_key_0_9 AS join_key_0_9, `RF_Tree_0_9`.`Estimator_0_9` AS `Estimator_0_9` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_0_1` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN `RF_Tree_0_2` ON `RF_Tree_0_2`.join_key_0_2 = `RF_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN `RF_Tree_0_3` ON `RF_Tree_0_3`.join_key_0_3 = `RF_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN `RF_Tree_0_4` ON `RF_Tree_0_4`.join_key_0_4 = `RF_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN `RF_Tree_0_5` ON `RF_Tree_0_5`.join_key_0_5 = `RF_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN `RF_Tree_0_6` ON `RF_Tree_0_6`.join_key_0_6 = `RF_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN `RF_Tree_0_7` ON `RF_Tree_0_7`.join_key_0_7 = `RF_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN `RF_Tree_0_8` ON `RF_Tree_0_8`.join_key_0_8 = `RF_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN `RF_Tree_0_9` ON `RF_Tree_0_9`.join_key_0_9 = `RF_Tree_0_8`.join_key_0_8), 
`DT_node_lookup_10` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -1.6788463592529297) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_30 <= -1.2277683019638062) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -1.150475025177002) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= -1.2025120258331299) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -1.1684250831604004) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= -0.2607008218765259) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_64 <= 0.08315293490886688) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_10` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.6788463592529297 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.007632233974638453 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_30' AS feature, -1.2277683019638062 AS threshold, 176 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.43498837730565704 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -1.150475025177002 AS threshold, 118 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6848116733314754 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05840929891667941 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 107 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.8951677447499113 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_29' AS feature, -1.2025120258331299 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07327281116066231 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.254843025910401 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9876481922721931 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_38' AS feature, -1.1684250831604004 AS threshold, 1027 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08348542539170951 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_29' AS feature, -0.2607008218765259 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.032858154929577305 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.6204185037892036 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 61 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8021713241678434 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_64' AS feature, 0.08315293490886688 AS threshold, 960 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08701878697604586 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 713 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9868027980051287 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 247 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9839759233574252 AS `Estimator`) AS `Values`), 
`DT_Output_10` AS 
(SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.count AS count, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_10` LEFT OUTER JOIN `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_10`.`KEY` AS join_key_1_0, `DT_Output_10`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_10`), 
`DT_node_lookup_11` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_21 <= 1.4384288787841797) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -1.8161382675170898) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_22 <= 1.2095887660980225) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_65 <= 6.845615386962891) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= -0.6687003374099731) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_32 <= -0.48828577995300293) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= 1.2251838445663452) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_11` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.4384288787841797 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0008435282723171445 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.8161382675170898 AS threshold, 1031 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05664970677638179 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 1.2095887660980225 AS threshold, 68 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.27232194842866614 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.20300447918296438 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.818928950647392 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_65' AS feature, 6.845615386962891 AS threshold, 963 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07987927329138038 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 958 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9174762742302808 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.454964746038778 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_48' AS feature, -0.6687003374099731 AS threshold, 172 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.33366908822588526 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_32' AS feature, -0.48828577995300293 AS threshold, 112 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5274324768575477 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 97 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.7311552446946337 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5353926055954105 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_15' AS feature, 1.2251838445663452 AS threshold, 60 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02802257055321837 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9933632426965825 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.822580890133921 AS `Estimator`) AS `Values`), 
`DT_Output_11` AS 
(SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.count AS count, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_11` LEFT OUTER JOIN `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id), 
`RF_Tree_1_1` AS 
(SELECT `DT_Output_11`.`KEY` AS join_key_1_1, `DT_Output_11`.`Estimator` AS `Estimator_1_1` 
FROM `DT_Output_11`), 
`DT_node_lookup_12` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_64 <= 0.08315293490886688) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_39 <= -1.0687700510025024) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= -0.2056429088115692) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_47 <= -1.368000864982605) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_47 <= -0.6660953760147095) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.0855497419834137) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_63 <= 0.6362426280975342) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_12` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.08315293490886688 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.004823038292030616 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.0687700510025024 AS threshold, 925 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06428646802347243 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, -0.2056429088115692 AS threshold, 184 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.01698095803618158 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 169 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4987377043481474 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.298535620557179 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_47' AS feature, -1.368000864982605 AS threshold, 741 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08446623373868997 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.34916942672180323 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 690 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9878297853995277 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_47' AS feature, -0.6660953760147095 AS threshold, 278 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2347737337662759 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_40' AS feature, -0.0855497419834137 AS threshold, 111 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5807450934866379 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 94 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.135436746165833 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9873689860101602 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_63' AS feature, 0.6362426280975342 AS threshold, 167 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0048167222156157395 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.115563075919592 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 154 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5031702957095181 AS `Estimator`) AS `Values`), 
`DT_Output_12` AS 
(SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.count AS count, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_12` LEFT OUTER JOIN `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id), 
`RF_Tree_1_2` AS 
(SELECT `DT_Output_12`.`KEY` AS join_key_1_2, `DT_Output_12`.`Estimator` AS `Estimator_1_2` 
FROM `DT_Output_12`), 
`DT_node_lookup_13` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -1.4136266708374023) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -0.745151162147522) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_65 <= 0.5479927062988281) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 1.5308222770690918) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_20 <= -1.1490437984466553) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_61 <= 0.788801908493042) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -0.4386558532714844) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_13` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.4136266708374023 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.001122357566203468 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151162147522 AS threshold, 212 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.24798358637401546 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_65' AS feature, 0.5479927062988281 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6834459662481818 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 80 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.8674395718036623 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9827570877689377 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_48' AS feature, 1.5308222770690918 AS threshold, 126 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04923676814327283 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 125 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.627557066267228 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.8911503380805272 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_20' AS feature, -1.1490437984466553 AS threshold, 991 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05441242831829865 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_61' AS feature, 0.788801908493042 AS threshold, 120 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.06331518821694594 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 91 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7479041129396771 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.354987689616852 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_28' AS feature, -0.4386558532714844 AS threshold, 871 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0706320769798708 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 150 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.19931451944733078 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 721 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.909949014879953 AS `Estimator`) AS `Values`), 
`DT_Output_13` AS 
(SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.count AS count, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_13` LEFT OUTER JOIN `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id), 
`RF_Tree_1_3` AS 
(SELECT `DT_Output_13`.`KEY` AS join_key_1_3, `DT_Output_13`.`Estimator` AS `Estimator_1_3` 
FROM `DT_Output_13`), 
`DT_node_lookup_14` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 1.765809416770935) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_24 <= 3.7016587257385254) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_36 <= 0.9392223358154297) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.29697132110595703) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_60 <= -0.9706534147262573) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.6565141677856445) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -0.7627899646759033) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_14` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.765809416770935 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.005660204314837554 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_24' AS feature, 3.7016587257385254 AS threshold, 1108 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04611965564238178 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, 0.9392223358154297 AS threshold, 1092 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05417192853398496 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 839 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9235477156415401 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 253 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.45020156787508087 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 0.29697132110595703 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5034479692095359 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.9819944535230234 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.990825671026284 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_60' AS feature, -0.9706534147262573 AS threshold, 95 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6095768867632474 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_40' AS feature, -0.6565141677856445 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.77114992250387 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.112656217513412 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 61 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.916377623008618 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, -0.7627899646759033 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2229556940981882 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.7670652363719643 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9951001635327414 AS `Estimator`) AS `Values`), 
`DT_Output_14` AS 
(SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.count AS count, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_14` LEFT OUTER JOIN `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id), 
`RF_Tree_1_4` AS 
(SELECT `DT_Output_14`.`KEY` AS join_key_1_4, `DT_Output_14`.`Estimator` AS `Estimator_1_4` 
FROM `DT_Output_14`), 
`DT_node_lookup_15` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.9906110763549805) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.12137214839458466) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= 0.23957481980323792) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.25392794609069824) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.6708834171295166) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_37 <= -1.2355973720550537) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.4025721549987793) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_15` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.9906110763549805 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0006595859403463984 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.12137214839458466 AS threshold, 366 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1811253098925432 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_15' AS feature, 0.23957481980323792 AS threshold, 247 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.042322471333994006 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 244 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5826989605378318 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.558658633837419 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_44' AS feature, 0.25392794609069824 AS threshold, 119 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6449202843711539 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 100 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.895594203186329 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.97560258783137 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_23' AS feature, -0.6708834171295166 AS threshold, 837 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08014975544433395 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_37' AS feature, -1.2355973720550537 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03018173938710447 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.5430766072570496 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9860163685155525 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_14' AS feature, -1.4025721549987793 AS threshold, 770 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08449762177658635 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6243415944899631 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 710 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9865043136491104 AS `Estimator`) AS `Values`), 
`DT_Output_15` AS 
(SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.count AS count, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_15` LEFT OUTER JOIN `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id), 
`RF_Tree_1_5` AS 
(SELECT `DT_Output_15`.`KEY` AS join_key_1_5, `DT_Output_15`.`Estimator` AS `Estimator_1_5` 
FROM `DT_Output_15`), 
`DT_node_lookup_16` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -1.150475025177002) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.25392794609069824) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_49 <= 1.2771656513214111) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_56 <= -0.6617292165756226) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 2.5727014541625977) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -1.9160341024398804) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_53 <= -0.29648351669311523) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_16` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.150475025177002 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0020360537075846544 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.25392794609069824 AS threshold, 338 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.22005711484940135 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_49' AS feature, 1.2771656513214111 AS threshold, 179 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0737539088407203 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 178 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.917911420472857 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.8953063072739225 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_56' AS feature, -0.6617292165756226 AS threshold, 159 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.550825500009978 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.09241438439090296 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 124 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.8454677503803074 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_48' AS feature, 2.5727014541625977 AS threshold, 865 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08315599099291707 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_6' AS feature, -1.9160341024398804 AS threshold, 858 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0841716787855556 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2344576842239627 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 830 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9736489888467335 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_53' AS feature, -0.29648351669311523 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.04133831273334482 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9821062228215722 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.24891305748512 AS `Estimator`) AS `Values`), 
`DT_Output_16` AS 
(SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.count AS count, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_16` LEFT OUTER JOIN `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id), 
`RF_Tree_1_6` AS 
(SELECT `DT_Output_16`.`KEY` AS join_key_1_6, `DT_Output_16`.`Estimator` AS `Estimator_1_6` 
FROM `DT_Output_16`), 
`DT_node_lookup_17` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_62 <= -1.9324804544448853) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_20 <= 0.4439771771430969) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= -1.2000994682312012) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -0.032417990267276764) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_16 <= 1.8113462924957275) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_62 <= -0.6952953338623047) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_55 <= -1.3805246353149414) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_17` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -1.9324804544448853 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0024868123337762945 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_20' AS feature, 0.4439771771430969 AS threshold, 107 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5153251094261664 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_31' AS feature, -1.2000994682312012 AS threshold, 64 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7477466526917228 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0046628059940166 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.963004850647656 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_28' AS feature, -0.032417990267276764 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.16939537061231463 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.3761394690676965 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6376689508553394 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_16' AS feature, 1.8113462924957275 AS threshold, 1096 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05303961856398962 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_62' AS feature, -0.6952953338623047 AS threshold, 1021 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07293750014705054 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 110 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.15348477285117604 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 911 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9603642795566383 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_55' AS feature, -1.3805246353149414 AS threshold, 75 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.217836876053412 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.554835197222225 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.18248862564464408 AS `Estimator`) AS `Values`), 
`DT_Output_17` AS 
(SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.count AS count, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_17` LEFT OUTER JOIN `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id), 
`RF_Tree_1_7` AS 
(SELECT `DT_Output_17`.`KEY` AS join_key_1_7, `DT_Output_17`.`Estimator` AS `Estimator_1_7` 
FROM `DT_Output_17`), 
`DT_node_lookup_18` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.6565141677856445) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.5110195279121399) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= 4.099609851837158) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.10115209966897964) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.3710319399833679) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_55 <= 0.6073316335678101) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= 0.19993247091770172) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_18` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.6565141677856445 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.002502632335067172 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.5110195279121399 AS threshold, 578 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.08578044529704802 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_11' AS feature, 4.099609851837158 AS threshold, 252 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07554603019723756 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 251 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8322652901465157 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.439454383693928 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_44' AS feature, 0.10115209966897964 AS threshold, 326 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2104868005871092 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 181 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.17100125458405088 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 145 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.294971062864824 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_40' AS feature, -0.3710319399833679 AS threshold, 625 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07451268909217271 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_55' AS feature, 0.6073316335678101 AS threshold, 85 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02374320733405843 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9949173318796186 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 30 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.087135562700303 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_40' AS feature, 0.19993247091770172 AS threshold, 540 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.08250418159113522 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 129 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8093803750209658 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 411 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9856694061310832 AS `Estimator`) AS `Values`), 
`DT_Output_18` AS 
(SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.count AS count, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_18` LEFT OUTER JOIN `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id), 
`RF_Tree_1_8` AS 
(SELECT `DT_Output_18`.`KEY` AS join_key_1_8, `DT_Output_18`.`Estimator` AS `Estimator_1_8` 
FROM `DT_Output_18`), 
`DT_node_lookup_19` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= 0.9959287643432617) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= 1.2474830150604248) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_54 <= -1.3314274549484253) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= -0.9682789444923401) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -0.745151162147522) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 0.34194138646125793) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_19 <= 0.5411355495452881) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_19` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_31' AS feature, 0.9959287643432617 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.003072793622726536 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 1.2474830150604248 AS threshold, 905 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.057382163987830394 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_54' AS feature, -1.3314274549484253 AS threshold, 834 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06964393225135442 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 105 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.2394740219352893 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 729 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8760886791397824 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_44' AS feature, -0.9682789444923401 AS threshold, 71 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.08665043786821255 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.941103390241768 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5699758512262314 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_45' AS feature, -0.745151162147522 AS threshold, 298 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1866692252923709 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_35' AS feature, 0.34194138646125793 AS threshold, 140 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4677054932549387 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 113 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.533189280421386 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5761772492702434 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_19' AS feature, 0.5411355495452881 AS threshold, 158 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.062350252649145205 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 145 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.920868822101091 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.9235166508797559 AS `Estimator`) AS `Values`), 
`DT_Output_19` AS 
(SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.count AS count, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_19` LEFT OUTER JOIN `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id), 
`RF_Tree_1_9` AS 
(SELECT `DT_Output_19`.`KEY` AS join_key_1_9, `DT_Output_19`.`Estimator` AS `Estimator_1_9` 
FROM `DT_Output_19`), 
`RF_Join_CTE_1` AS 
(SELECT `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_1_1`.join_key_1_1 AS join_key_1_1, `RF_Tree_1_1`.`Estimator_1_1` AS `Estimator_1_1`, `RF_Tree_1_2`.join_key_1_2 AS join_key_1_2, `RF_Tree_1_2`.`Estimator_1_2` AS `Estimator_1_2`, `RF_Tree_1_3`.join_key_1_3 AS join_key_1_3, `RF_Tree_1_3`.`Estimator_1_3` AS `Estimator_1_3`, `RF_Tree_1_4`.join_key_1_4 AS join_key_1_4, `RF_Tree_1_4`.`Estimator_1_4` AS `Estimator_1_4`, `RF_Tree_1_5`.join_key_1_5 AS join_key_1_5, `RF_Tree_1_5`.`Estimator_1_5` AS `Estimator_1_5`, `RF_Tree_1_6`.join_key_1_6 AS join_key_1_6, `RF_Tree_1_6`.`Estimator_1_6` AS `Estimator_1_6`, `RF_Tree_1_7`.join_key_1_7 AS join_key_1_7, `RF_Tree_1_7`.`Estimator_1_7` AS `Estimator_1_7`, `RF_Tree_1_8`.join_key_1_8 AS join_key_1_8, `RF_Tree_1_8`.`Estimator_1_8` AS `Estimator_1_8`, `RF_Tree_1_9`.join_key_1_9 AS join_key_1_9, `RF_Tree_1_9`.`Estimator_1_9` AS `Estimator_1_9` 
FROM `RF_Tree_1_0` LEFT OUTER JOIN `RF_Tree_1_1` ON `RF_Tree_1_0`.join_key_1_0 = `RF_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN `RF_Tree_1_2` ON `RF_Tree_1_2`.join_key_1_2 = `RF_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN `RF_Tree_1_3` ON `RF_Tree_1_3`.join_key_1_3 = `RF_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN `RF_Tree_1_4` ON `RF_Tree_1_4`.join_key_1_4 = `RF_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN `RF_Tree_1_5` ON `RF_Tree_1_5`.join_key_1_5 = `RF_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN `RF_Tree_1_6` ON `RF_Tree_1_6`.join_key_1_6 = `RF_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN `RF_Tree_1_7` ON `RF_Tree_1_7`.join_key_1_7 = `RF_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN `RF_Tree_1_8` ON `RF_Tree_1_8`.join_key_1_8 = `RF_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN `RF_Tree_1_9` ON `RF_Tree_1_9`.join_key_1_9 = `RF_Tree_1_8`.join_key_1_8), 
`DT_node_lookup_20` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -1.6788463592529297) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_30 <= -1.2277683019638062) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= -0.9103024005889893) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= -1.2025120258331299) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -1.1684250831604004) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_36 <= 0.7809197902679443) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_64 <= 0.08315293490886688) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_20` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.6788463592529297 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0075072128387964655 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_30' AS feature, -1.2277683019638062 AS threshold, 176 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.38117859203417837 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_15' AS feature, -0.9103024005889893 AS threshold, 118 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6011108881396272 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.3112626961295513 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 108 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.7874434167853006 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_29' AS feature, -1.2025120258331299 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06626987245621796 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.0944539327079705 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9790627327769678 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_38' AS feature, -1.1684250831604004 AS threshold, 1027 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0741174384061222 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_36' AS feature, 0.7809197902679443 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0286575293945879 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 54 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9875946057486944 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.9086459552746233 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_64' AS feature, 0.08315293490886688 AS threshold, 960 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07729016122255228 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 713 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9773199373303434 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 247 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9729564716723772 AS `Estimator`) AS `Values`), 
`DT_Output_20` AS 
(SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.count AS count, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_20` LEFT OUTER JOIN `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_20`.`KEY` AS join_key_2_0, `DT_Output_20`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_20`), 
`DT_node_lookup_21` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_21 <= 1.4384288787841797) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -1.8161382675170898) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_22 <= 0.3977978229522705) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= -2.4449357986450195) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= -0.6687003374099731) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_32 <= -0.48828577995300293) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= 1.2251838445663452) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_21` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.4384288787841797 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.000750887980007744 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.8161382675170898 AS threshold, 1031 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05031476092307928 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 0.3977978229522705 AS threshold, 68 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.24141346263576063 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9899809033675845 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.7196819314897946 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_5' AS feature, -2.4449357986450195 AS threshold, 963 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0709144693363723 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.552071162734569 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 958 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9008841377701622 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_48' AS feature, -0.6687003374099731 AS threshold, 172 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.29634418762642706 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_32' AS feature, -0.48828577995300293 AS threshold, 112 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.46843822230761384 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 97 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.647151796668885 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5125792578993899 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_15' AS feature, 1.2251838445663452 AS threshold, 60 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02489801044512165 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9838738356661403 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.6453676135899182 AS `Estimator`) AS `Values`), 
`DT_Output_21` AS 
(SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.count AS count, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_21` LEFT OUTER JOIN `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id), 
`RF_Tree_2_1` AS 
(SELECT `DT_Output_21`.`KEY` AS join_key_2_1, `DT_Output_21`.`Estimator` AS `Estimator_2_1` 
FROM `DT_Output_21`), 
`DT_node_lookup_22` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_64 <= 0.08315293490886688) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_39 <= -1.0687700510025024) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_56 <= -0.3612157106399536) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_47 <= -1.368000864982605) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_47 <= -0.6660953760147095) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.0855497419834137) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_54 <= 1.0327858924865723) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_22` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.08315293490886688 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0041268060728830635 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.0687700510025024 AS threshold, 925 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.057213426526408984 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_56' AS feature, -0.3612157106399536 AS threshold, 184 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.015035792768291695 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 157 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7647132708671611 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.695132620899156 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_47' AS feature, -1.368000864982605 AS threshold, 741 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07515385344978952 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.30677566911930587 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 690 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9781489995255881 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_47' AS feature, -0.6660953760147095 AS threshold, 278 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.20822650087268585 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_40' AS feature, -0.0855497419834137 AS threshold, 111 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5141428215039356 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 94 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.8932091988882114 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9766147878848287 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_54' AS feature, 1.0327858924865723 AS threshold, 167 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.004892898536944843 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 141 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7716053847096784 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.4682180294590275 AS `Estimator`) AS `Values`), 
`DT_Output_22` AS 
(SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.count AS count, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_22` LEFT OUTER JOIN `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id), 
`RF_Tree_2_2` AS 
(SELECT `DT_Output_22`.`KEY` AS join_key_2_2, `DT_Output_22`.`Estimator` AS `Estimator_2_2` 
FROM `DT_Output_22`), 
`DT_node_lookup_23` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -1.4136266708374023) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -0.745151162147522) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_21 <= 0.7505561113357544) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 1.5308222770690918) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_20 <= -1.1490437984466553) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 0.25741448998451233) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_36 <= -1.1187108755111694) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_23` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.4136266708374023 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0011628798279034668 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151162147522 AS threshold, 212 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2182244685086285 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_21' AS feature, 0.7505561113357544 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6014185300284277 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 81 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.8009421573482736 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.1422293092488263 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_48' AS feature, 1.5308222770690918 AS threshold, 126 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04332068459218678 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 125 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5938080282328768 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.746876601461552 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_20' AS feature, -1.1490437984466553 AS threshold, 991 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04809539026922002 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_48' AS feature, 0.25741448998451233 AS threshold, 120 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.05630318669056309 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 100 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4429316892524285 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.6610994909050727 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_36' AS feature, -1.1187108755111694 AS threshold, 871 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06247866149215231 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 166 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.20541245605020675 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 705 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8927688661616764 AS `Estimator`) AS `Values`), 
`DT_Output_23` AS 
(SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.count AS count, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_23` LEFT OUTER JOIN `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id), 
`RF_Tree_2_3` AS 
(SELECT `DT_Output_23`.`KEY` AS join_key_2_3, `DT_Output_23`.`Estimator` AS `Estimator_2_3` 
FROM `DT_Output_23`), 
`DT_node_lookup_24` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 1.765809416770935) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_32 <= 1.6204252243041992) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -1.2617809772491455) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= -0.8281682729721069) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_60 <= -0.9706534147262573) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.6565141677856445) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= -0.932222843170166) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_24` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.765809416770935 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0050854046661735946 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_32' AS feature, 1.6204252243041992 AS threshold, 1108 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04043358542576485 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_12' AS feature, -1.2617809772491455 AS threshold, 1037 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05637840225101507 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 142 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5724221668527221 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 895 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8784999748266914 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_15' AS feature, -0.8281682729721069 AS threshold, 71 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1924505701768321 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.501697620415019 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 51 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.30451510081505323 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_60' AS feature, -0.9706534147262573 AS threshold, 95 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5359805733174129 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_40' AS feature, -0.6565141677856445 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6775326986942086 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9151283067100167 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 61 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.7804351953352904 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_7' AS feature, -0.932222843170166 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1972665590229382 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.6633108659790747 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9839068485392936 AS `Estimator`) AS `Values`), 
`DT_Output_24` AS 
(SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.count AS count, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_24` LEFT OUTER JOIN `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id), 
`RF_Tree_2_4` AS 
(SELECT `DT_Output_24`.`KEY` AS join_key_2_4, `DT_Output_24`.`Estimator` AS `Estimator_2_4` 
FROM `DT_Output_24`), 
`DT_node_lookup_25` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.9906110763549805) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.12137214839458466) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= -0.25322967767715454) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 1.0178072452545166) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_60 <= 0.8011183738708496) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 0.05716777220368385) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= 1.0238004922866821) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_25` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.9906110763549805 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0009080592131339942 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.12137214839458466 AS threshold, 366 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.16023217416220994 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_15' AS feature, -0.25322967767715454 AS threshold, 247 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03634136582811305 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 242 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5834271012410546 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.6754315570486282 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_44' AS feature, 1.0178072452545166 AS threshold, 119 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5682461605286787 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 106 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.7763983507894467 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.3245399776537639 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_60' AS feature, 0.8011183738708496 AS threshold, 837 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07137081359231656 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_35' AS feature, 0.05716777220368385 AS threshold, 657 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07850280977203382 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 435 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9811393454588324 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 222 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9736838323068128 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_28' AS feature, 1.0238004922866821 AS threshold, 180 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04533902753634855 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 168 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.89875955011156 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.666233124524149 AS `Estimator`) AS `Values`), 
`DT_Output_25` AS 
(SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.count AS count, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_25` LEFT OUTER JOIN `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id), 
`RF_Tree_2_5` AS 
(SELECT `DT_Output_25`.`KEY` AS join_key_2_5, `DT_Output_25`.`Estimator` AS `Estimator_2_5` 
FROM `DT_Output_25`), 
`DT_node_lookup_26` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -1.150475025177002) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.25392794609069824) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 2.5727014541625977) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_56 <= -0.6617292165756226) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 2.5727014541625977) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -1.9160341024398804) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_53 <= -0.29648351669311523) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_26` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.150475025177002 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0012971141954958765 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.25392794609069824 AS threshold, 338 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.19375926285424358 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, 2.5727014541625977 AS threshold, 179 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06526099488538176 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 178 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9019159257761596 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.7940981023138867 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_56' AS feature, -0.6617292165756226 AS threshold, 159 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4853606850894194 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06989171653680513 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 124 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.71138216279834 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_48' AS feature, 2.5727014541625977 AS threshold, 865 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07390774851740207 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_6' AS feature, -1.9160341024398804 AS threshold, 858 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07483017771097489 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.20149701988283575 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 830 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9626433471127592 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_53' AS feature, -0.29648351669311523 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.03915571549481218 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9709424878236596 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.0855106583096514 AS `Estimator`) AS `Values`), 
`DT_Output_26` AS 
(SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.count AS count, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_26` LEFT OUTER JOIN `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id), 
`RF_Tree_2_6` AS 
(SELECT `DT_Output_26`.`KEY` AS join_key_2_6, `DT_Output_26`.`Estimator` AS `Estimator_2_6` 
FROM `DT_Output_26`), 
`DT_node_lookup_27` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_62 <= -1.9324804544448853) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_19 <= -0.3008382320404053) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= -1.2000994682312012) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= 0.0488295778632164) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_8 <= 3.0056028366088867) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_62 <= -0.9014928340911865) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= 0.4242527186870575) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_27` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -1.9324804544448853 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0024415816437431816 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_19' AS feature, -0.3008382320404053 AS threshold, 107 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.45351770226556865 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_31' AS feature, -1.2000994682312012 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6468873745821626 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9881624707055083 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 65 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.796778145564128 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_28' AS feature, 0.0488295778632164 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.12962350113527382 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.4738064999060403 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9867754629857906 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_8' AS feature, 3.0056028366088867 AS threshold, 1096 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04695585479912296 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_62' AS feature, -0.9014928340911865 AS threshold, 1067 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05797864642425734 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 91 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7749591247994829 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 976 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9123678865179775 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_29' AS feature, 0.4242527186870575 AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.35860685775323636 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.650983086623422 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9969838855537714 AS `Estimator`) AS `Values`), 
`DT_Output_27` AS 
(SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.count AS count, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_27` LEFT OUTER JOIN `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id), 
`RF_Tree_2_7` AS 
(SELECT `DT_Output_27`.`KEY` AS join_key_2_7, `DT_Output_27`.`Estimator` AS `Estimator_2_7` 
FROM `DT_Output_27`), 
`DT_node_lookup_28` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.6565141677856445) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_24 <= -0.40271180868148804) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= 0.23957481980323792) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_37 <= 0.05477093905210495) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.3710319399833679) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= 0.5954911112785339) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= -0.017622709274291992) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_28` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.6565141677856445 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0025553369003624765 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_24' AS feature, -0.40271180868148804 AS threshold, 578 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07674427108979447 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_15' AS feature, 0.23957481980323792 AS threshold, 421 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0018094510691298068 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 277 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7257398728051625 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 144 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0243894637929614 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_37' AS feature, 0.05477093905210495 AS threshold, 157 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.28738832859875724 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 54 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6346758820360766 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 103 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.9632538040987635 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_40' AS feature, -0.3710319399833679 AS threshold, 625 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06605458943802425 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_29' AS feature, 0.5954911112785339 AS threshold, 85 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02071176714428401 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 56 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9871929940000919 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.046330214724334 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_31' AS feature, -0.017622709274291992 AS threshold, 540 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07319188553981666 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 164 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8176095500198363 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 376 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9772190154372098 AS `Estimator`) AS `Values`), 
`DT_Output_28` AS 
(SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.count AS count, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_28` LEFT OUTER JOIN `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id), 
`RF_Tree_2_8` AS 
(SELECT `DT_Output_28`.`KEY` AS join_key_2_8, `DT_Output_28`.`Estimator` AS `Estimator_2_8` 
FROM `DT_Output_28`), 
`DT_node_lookup_29` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -1.055464267730713) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= 0.8270035982131958) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_54 <= -1.3314274549484253) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 0.34194138646125793) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -0.5899946093559265) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_19 <= 0.8217934370040894) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= 2.912013530731201) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_29` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -1.055464267730713 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.002741701831546924 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.8270035982131958 AS threshold, 364 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.14390243672243583 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_54' AS feature, -1.3314274549484253 AS threshold, 236 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.013170371291850173 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4537104240031475 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 200 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5057026599829673 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_35' AS feature, 0.34194138646125793 AS threshold, 128 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4335054264987754 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 106 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.504324650089392 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4422724443428788 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_45' AS feature, -0.5899946093559265 AS threshold, 839 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05850085776354664 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_19' AS feature, 0.8217934370040894 AS threshold, 123 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.01851484324693379 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 103 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4371533350503004 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.416496553519877 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_40' AS feature, 2.912013530731201 AS threshold, 716 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.07173120863545884 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 713 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8955994269151146 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.237077007910607 AS `Estimator`) AS `Values`), 
`DT_Output_29` AS 
(SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.count AS count, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_29` LEFT OUTER JOIN `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id), 
`RF_Tree_2_9` AS 
(SELECT `DT_Output_29`.`KEY` AS join_key_2_9, `DT_Output_29`.`Estimator` AS `Estimator_2_9` 
FROM `DT_Output_29`), 
`RF_Join_CTE_2` AS 
(SELECT `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_2_1`.join_key_2_1 AS join_key_2_1, `RF_Tree_2_1`.`Estimator_2_1` AS `Estimator_2_1`, `RF_Tree_2_2`.join_key_2_2 AS join_key_2_2, `RF_Tree_2_2`.`Estimator_2_2` AS `Estimator_2_2`, `RF_Tree_2_3`.join_key_2_3 AS join_key_2_3, `RF_Tree_2_3`.`Estimator_2_3` AS `Estimator_2_3`, `RF_Tree_2_4`.join_key_2_4 AS join_key_2_4, `RF_Tree_2_4`.`Estimator_2_4` AS `Estimator_2_4`, `RF_Tree_2_5`.join_key_2_5 AS join_key_2_5, `RF_Tree_2_5`.`Estimator_2_5` AS `Estimator_2_5`, `RF_Tree_2_6`.join_key_2_6 AS join_key_2_6, `RF_Tree_2_6`.`Estimator_2_6` AS `Estimator_2_6`, `RF_Tree_2_7`.join_key_2_7 AS join_key_2_7, `RF_Tree_2_7`.`Estimator_2_7` AS `Estimator_2_7`, `RF_Tree_2_8`.join_key_2_8 AS join_key_2_8, `RF_Tree_2_8`.`Estimator_2_8` AS `Estimator_2_8`, `RF_Tree_2_9`.join_key_2_9 AS join_key_2_9, `RF_Tree_2_9`.`Estimator_2_9` AS `Estimator_2_9` 
FROM `RF_Tree_2_0` LEFT OUTER JOIN `RF_Tree_2_1` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_2_1`.join_key_2_1 LEFT OUTER JOIN `RF_Tree_2_2` ON `RF_Tree_2_2`.join_key_2_2 = `RF_Tree_2_1`.join_key_2_1 LEFT OUTER JOIN `RF_Tree_2_3` ON `RF_Tree_2_3`.join_key_2_3 = `RF_Tree_2_2`.join_key_2_2 LEFT OUTER JOIN `RF_Tree_2_4` ON `RF_Tree_2_4`.join_key_2_4 = `RF_Tree_2_3`.join_key_2_3 LEFT OUTER JOIN `RF_Tree_2_5` ON `RF_Tree_2_5`.join_key_2_5 = `RF_Tree_2_4`.join_key_2_4 LEFT OUTER JOIN `RF_Tree_2_6` ON `RF_Tree_2_6`.join_key_2_6 = `RF_Tree_2_5`.join_key_2_5 LEFT OUTER JOIN `RF_Tree_2_7` ON `RF_Tree_2_7`.join_key_2_7 = `RF_Tree_2_6`.join_key_2_6 LEFT OUTER JOIN `RF_Tree_2_8` ON `RF_Tree_2_8`.join_key_2_8 = `RF_Tree_2_7`.join_key_2_7 LEFT OUTER JOIN `RF_Tree_2_9` ON `RF_Tree_2_9`.join_key_2_9 = `RF_Tree_2_8`.join_key_2_8), 
`DT_node_lookup_30` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -1.6788463592529297) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_30 <= -1.2277683019638062) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_15 <= -1.0745705366134644) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= -1.2025120258331299) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_30 <= -1.5554274320602417) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= 0.7678914070129395) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.3511556386947632) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_30` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.6788463592529297 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.007403301288062114 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_30' AS feature, -1.2277683019638062 AS threshold, 176 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3335967550572208 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_15' AS feature, -1.0745705366134644 AS threshold, 118 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5272583808262182 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.083139486733531 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 110 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2002534299986656 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_29' AS feature, -1.2025120258331299 AS threshold, 58 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06040448357625752 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.4575661539989344 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9720620909968058 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_30' AS feature, -1.5554274320602417 AS threshold, 1027 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0658414803696297 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_23' AS feature, 0.7678914070129395 AS threshold, 96 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0315285921582664 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 91 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9651915638079167 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.4556404546634374 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_23' AS feature, -0.3511556386947632 AS threshold, 931 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06937965144190765 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 381 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9663276998915151 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 550 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9706290877191673 AS `Estimator`) AS `Values`), 
`DT_Output_30` AS 
(SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.count AS count, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_30` LEFT OUTER JOIN `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_30`.`KEY` AS join_key_3_0, `DT_Output_30`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_30`), 
`DT_node_lookup_31` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_21 <= 1.4384288787841797) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_12 <= -1.8161382675170898) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_22 <= 0.3977978229522705) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_65 <= 6.845615386962891) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= -0.6687003374099731) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_11 <= 0.32500889897346497) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= 1.3337793350219727) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_31` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.4384288787841797 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0004207821140650005 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.8161382675170898 AS threshold, 1031 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04457811439152191 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 0.3977978229522705 AS threshold, 68 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2160080572874749 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 32 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9799064216360144 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 36 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1490116428097332 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_65' AS feature, 6.845615386962891 AS threshold, 963 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0629787994114304 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 958 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8854038611575913 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.646773086861562 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_48' AS feature, -0.6687003374099731 AS threshold, 172 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.26426648287464527 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_11' AS feature, 0.32500889897346497 AS threshold, 112 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.41746943218459115 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 102 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1490725069592322 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.159700684843135 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_31' AS feature, 1.3337793350219727 AS threshold, 60 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02171235583725382 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9794457359804312 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2014978656588022 AS `Estimator`) AS `Values`), 
`DT_Output_31` AS 
(SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.count AS count, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_31` LEFT OUTER JOIN `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id), 
`RF_Tree_3_1` AS 
(SELECT `DT_Output_31`.`KEY` AS join_key_3_1, `DT_Output_31`.`Estimator` AS `Estimator_3_1` 
FROM `DT_Output_31`), 
`DT_node_lookup_32` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_64 <= 0.08315293490886688) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -1.251131534576416) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_39 <= -1.4103789329528809) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_58 <= 17.320514678955078) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_47 <= -0.6660953760147095) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.0855497419834137) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_54 <= 1.0327858924865723) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_32` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.08315293490886688 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.003537824437696575 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, -1.251131534576416 AS threshold, 925 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.050923200925031616 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_39' AS feature, -1.4103789329528809 AS threshold, 161 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.02245621168364225 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.275592243331791 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 137 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5791374324227214 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_58' AS feature, 17.320514678955078 AS threshold, 764 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0663866635297391 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 763 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8942956222257228 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.4370433272231224 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_47' AS feature, -0.6660953760147095 AS threshold, 278 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1847480706985728 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_40' AS feature, -0.0855497419834137 AS threshold, 111 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4547052646139792 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 94 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2702255600343477 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.967360222056086 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_54' AS feature, 1.0327858924865723 AS threshold, 167 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.005315444802703914 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 141 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7423923012485919 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.9538691575721967 AS `Estimator`) AS `Values`), 
`DT_Output_32` AS 
(SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.count AS count, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_32` LEFT OUTER JOIN `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id), 
`RF_Tree_3_2` AS 
(SELECT `DT_Output_32`.`KEY` AS join_key_3_2, `DT_Output_32`.`Estimator` AS `Estimator_3_2` 
FROM `DT_Output_32`), 
`DT_node_lookup_33` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -1.4136266708374023) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -0.745151162147522) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_21 <= 0.7505561113357544) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_47 <= 0.9131917953491211) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -0.6011509895324707) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_45 <= -0.9003076553344727) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= 1.114994764328003) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_33` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.4136266708374023 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0009410511302721855 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151162147522 AS threshold, 212 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1928443938219374 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_21' AS feature, 0.7505561113357544 AS threshold, 86 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5311197795847451 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 81 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2321708645893956 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.1087585505257027 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_47' AS feature, 0.9131917953491211 AS threshold, 126 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03804198058759801 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 121 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6520590243004919 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.0743957981663286 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_28' AS feature, -0.6011509895324707 AS threshold, 991 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04239666599391341 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_45' AS feature, -0.9003076553344727 AS threshold, 185 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.030693371627600118 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 56 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5982521917396733 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 129 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5485940382804646 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_14' AS feature, 1.114994764328003 AS threshold, 806 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0591729153239134 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 660 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9112133693385538 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 146 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.270075835580387 AS `Estimator`) AS `Values`), 
`DT_Output_33` AS 
(SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.count AS count, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_33` LEFT OUTER JOIN `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id), 
`RF_Tree_3_3` AS 
(SELECT `DT_Output_33`.`KEY` AS join_key_3_3, `DT_Output_33`.`Estimator` AS `Estimator_3_3` 
FROM `DT_Output_33`), 
`DT_node_lookup_34` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 1.765809416770935) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_52 <= -1.2231736183166504) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= -0.932222843170166) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_61 <= -2.2152340412139893) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_60 <= -0.9706534147262573) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.29697132110595703) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 <= -1.192775011062622) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_34` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.765809416770935 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0045031455076761815 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_52' AS feature, -1.2231736183166504 AS threshold, 1108 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.035503758712651406 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, -0.932222843170166 AS threshold, 216 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.07785277911896368 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 40 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.6101616088284034 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 176 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.3554476828400665 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_61' AS feature, -2.2152340412139893 AS threshold, 892 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06295332392748203 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.4612576541972735 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 878 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9172395416987235 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_60' AS feature, -0.9706534147262573 AS threshold, 95 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.47110998630897083 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_7' AS feature, 0.29697132110595703 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5948517466712615 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 60 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.211786610656995 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.3228367479979557 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_14' AS feature, -1.192775011062622 AS threshold, 28 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.17501363115634622 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.1028354746240203 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.974598621215135 AS `Estimator`) AS `Values`), 
`DT_Output_34` AS 
(SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.count AS count, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_34` LEFT OUTER JOIN `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id), 
`RF_Tree_3_4` AS 
(SELECT `DT_Output_34`.`KEY` AS join_key_3_4, `DT_Output_34`.`Estimator` AS `Estimator_3_4` 
FROM `DT_Output_34`), 
`DT_node_lookup_35` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.9906110763549805) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.12137214839458466) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= -0.9682789444923401) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_4 <= -0.9696882963180542) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -0.6708834171295166) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= 0.4725704789161682) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -1.6788463592529297) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_35` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.9906110763549805 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0009333537641866733 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.12137214839458466 AS threshold, 366 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1420380892612471 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_44' AS feature, -0.9682789444923401 AS threshold, 247 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03132949129312871 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 45 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4451654239229454 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 202 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9115810630306473 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_4' AS feature, -0.9696882963180542 AS threshold, 119 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5018850841934388 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.0455228795188243 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 109 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.223658727146391 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_23' AS feature, -0.6708834171295166 AS threshold, 837 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06345133243480645 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_7' AS feature, 0.4725704789161682 AS threshold, 67 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02124820024846132 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9685328776371758 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.7207284446757296 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_38' AS feature, -1.6788463592529297 AS threshold, 770 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0671235530276443 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 150 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7656254117079934 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 620 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9713500839907699 AS `Estimator`) AS `Values`), 
`DT_Output_35` AS 
(SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.count AS count, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_35` LEFT OUTER JOIN `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id), 
`RF_Tree_3_5` AS 
(SELECT `DT_Output_35`.`KEY` AS join_key_3_5, `DT_Output_35`.`Estimator` AS `Estimator_3_5` 
FROM `DT_Output_35`), 
`DT_node_lookup_36` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= -1.150475025177002) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.25392794609069824) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_61 <= -2.2152340412139893) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_56 <= 0.33998242020606995) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_35 <= 1.196262240409851) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_48 <= 2.5727014541625977) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= -2.607980728149414) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_36` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.150475025177002 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0005520006791050008 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.25392794609069824 AS threshold, 338 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.16985951793544188 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_61' AS feature, -2.2152340412139893 AS threshold, 179 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05741245272709949 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.490082315492254 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 177 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8980796572332863 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_56' AS feature, 0.33998242020606995 AS threshold, 159 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4257191578637114 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 53 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6827827647482334 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 106 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.258282894539046 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_35' AS feature, 1.196262240409851 AS threshold, 865 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06560515635285087 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_48' AS feature, 2.5727014541625977 AS threshold, 729 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06984331081407405 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 722 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9711769750703086 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.39869046219899945 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, -2.607980728149414 AS threshold, 136 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04288740192467641 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.064913394338362 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 134 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7408281670963173 AS `Estimator`) AS `Values`), 
`DT_Output_36` AS 
(SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.count AS count, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_36` LEFT OUTER JOIN `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id), 
`RF_Tree_3_6` AS 
(SELECT `DT_Output_36`.`KEY` AS join_key_3_6, `DT_Output_36`.`Estimator` AS `Estimator_3_6` 
FROM `DT_Output_36`), 
`DT_node_lookup_37` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_62 <= -1.9324804544448853) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_20 <= 0.4439771771430969) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_54 <= 0.18166907131671906) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_28 <= -0.032417990267276764) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_16 <= 1.8113462924957275) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_55 <= -1.3805246353149414) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_55 <= -1.3805246353149414) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_37` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -1.9324804544448853 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.002296721347371767 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_20' AS feature, 0.4439771771430969 AS threshold, 107 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.3981955654898673 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_54' AS feature, 0.18166907131671906 AS threshold, 64 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5812450429335683 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 63 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2478905732130037 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9942388239215479 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_28' AS feature, -0.032417990267276764 AS threshold, 43 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.12574983162017264 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.859604336886226 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.6123973649835674 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_16' AS feature, 1.8113462924957275 AS threshold, 1096 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.04139587708786862 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_55' AS feature, -1.3805246353149414 AS threshold, 1021 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.057459505663620195 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 116 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2005803130449264 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 905 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9398675211171943 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_55' AS feature, -1.3805246353149414 AS threshold, 75 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.17728365325669626 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 25 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.3267498775194264 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 50 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.20111731528224544 AS `Estimator`) AS `Values`), 
`DT_Output_37` AS 
(SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.count AS count, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_37` LEFT OUTER JOIN `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id), 
`RF_Tree_3_7` AS 
(SELECT `DT_Output_37`.`KEY` AS join_key_3_7, `DT_Output_37`.`Estimator` AS `Estimator_3_7` 
FROM `DT_Output_37`), 
`DT_node_lookup_38` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.6565141677856445) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= 0.2882997989654541) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_24 <= -0.10954248905181885) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_37 <= 0.37736302614212036) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_29 <= 0.5954911112785339) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= 0.5594796538352966) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_40 <= -0.3710319399833679) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_38` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.6565141677856445 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.002641624841531907 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.2882997989654541 AS threshold, 578 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.06851995653853518 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_24' AS feature, -0.10954248905181885 AS threshold, 346 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.02521516043978597 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 328 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.4953387204129671 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.067035639976174 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_37' AS feature, 0.37736302614212036 AS threshold, 232 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.20831457065275572 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 104 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.544096914020768 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 128 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.256956833533221 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_29' AS feature, 0.5954911112785339 AS threshold, 625 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.058282656311856806 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_44' AS feature, 0.5594796538352966 AS threshold, 452 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.06831777246778221 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 227 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9727405907890642 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 225 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.9634709496731065 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_40' AS feature, -0.3710319399833679 AS threshold, 173 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03206374011256034 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 29 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8630718652789726 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 144 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.7826758253723496 AS `Estimator`) AS `Values`), 
`DT_Output_38` AS 
(SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.count AS count, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_38` LEFT OUTER JOIN `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id), 
`RF_Tree_3_8` AS 
(SELECT `DT_Output_38`.`KEY` AS join_key_3_8, `DT_Output_38`.`Estimator` AS `Estimator_3_8` 
FROM `DT_Output_38`), 
`DT_node_lookup_39` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_31 <= 1.1648540496826172) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_23 <= 1.2474830150604248) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_46 <= -1.1570513248443604) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_54 <= -1.3314274549484253) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_46 <= -0.36161571741104126) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_44 <= -0.35717546939849854) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_38 <= -0.4878632426261902) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_39` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_31' AS feature, 1.1648540496826172 AS threshold, 1203 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.002693278676282322 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 1.2474830150604248 AS threshold, 959 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.03915794210742842 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_46' AS feature, -1.1570513248443604 AS threshold, 871 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.05342261326179853 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 191 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.16545097422176588 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 680 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.8756251342653864 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_54' AS feature, -1.3314274549484253 AS threshold, 88 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.10202988261366665 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.763694483603284 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 73 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.1708786872148845 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_46' AS feature, -0.36161571741104126 AS threshold, 244 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.16718229806799795 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_44' AS feature, -0.35717546939849854 AS threshold, 103 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.4222554311242674 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 82 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.380201888975379 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5429826891021828 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_38' AS feature, -0.4878632426261902 AS threshold, 141 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.019147721114950438 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4401116876994837 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 126 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.5785096565305125 AS `Estimator`) AS `Values`), 
`DT_Output_39` AS 
(SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.count AS count, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_39` LEFT OUTER JOIN `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id), 
`RF_Tree_3_9` AS 
(SELECT `DT_Output_39`.`KEY` AS join_key_3_9, `DT_Output_39`.`Estimator` AS `Estimator_3_9` 
FROM `DT_Output_39`), 
`RF_Join_CTE_3` AS 
(SELECT `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Tree_3_1`.join_key_3_1 AS join_key_3_1, `RF_Tree_3_1`.`Estimator_3_1` AS `Estimator_3_1`, `RF_Tree_3_2`.join_key_3_2 AS join_key_3_2, `RF_Tree_3_2`.`Estimator_3_2` AS `Estimator_3_2`, `RF_Tree_3_3`.join_key_3_3 AS join_key_3_3, `RF_Tree_3_3`.`Estimator_3_3` AS `Estimator_3_3`, `RF_Tree_3_4`.join_key_3_4 AS join_key_3_4, `RF_Tree_3_4`.`Estimator_3_4` AS `Estimator_3_4`, `RF_Tree_3_5`.join_key_3_5 AS join_key_3_5, `RF_Tree_3_5`.`Estimator_3_5` AS `Estimator_3_5`, `RF_Tree_3_6`.join_key_3_6 AS join_key_3_6, `RF_Tree_3_6`.`Estimator_3_6` AS `Estimator_3_6`, `RF_Tree_3_7`.join_key_3_7 AS join_key_3_7, `RF_Tree_3_7`.`Estimator_3_7` AS `Estimator_3_7`, `RF_Tree_3_8`.join_key_3_8 AS join_key_3_8, `RF_Tree_3_8`.`Estimator_3_8` AS `Estimator_3_8`, `RF_Tree_3_9`.join_key_3_9 AS join_key_3_9, `RF_Tree_3_9`.`Estimator_3_9` AS `Estimator_3_9` 
FROM `RF_Tree_3_0` LEFT OUTER JOIN `RF_Tree_3_1` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_3_1`.join_key_3_1 LEFT OUTER JOIN `RF_Tree_3_2` ON `RF_Tree_3_2`.join_key_3_2 = `RF_Tree_3_1`.join_key_3_1 LEFT OUTER JOIN `RF_Tree_3_3` ON `RF_Tree_3_3`.join_key_3_3 = `RF_Tree_3_2`.join_key_3_2 LEFT OUTER JOIN `RF_Tree_3_4` ON `RF_Tree_3_4`.join_key_3_4 = `RF_Tree_3_3`.join_key_3_3 LEFT OUTER JOIN `RF_Tree_3_5` ON `RF_Tree_3_5`.join_key_3_5 = `RF_Tree_3_4`.join_key_3_4 LEFT OUTER JOIN `RF_Tree_3_6` ON `RF_Tree_3_6`.join_key_3_6 = `RF_Tree_3_5`.join_key_3_5 LEFT OUTER JOIN `RF_Tree_3_7` ON `RF_Tree_3_7`.join_key_3_7 = `RF_Tree_3_6`.join_key_3_6 LEFT OUTER JOIN `RF_Tree_3_8` ON `RF_Tree_3_8`.join_key_3_8 = `RF_Tree_3_7`.join_key_3_7 LEFT OUTER JOIN `RF_Tree_3_9` ON `RF_Tree_3_9`.join_key_3_9 = `RF_Tree_3_8`.join_key_3_8), 
`RF_Join_CTE` AS 
(SELECT `RF_Join_CTE_0`.join_key_0_0 AS join_key_0_0, `RF_Join_CTE_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Join_CTE_0`.join_key_0_1 AS join_key_0_1, `RF_Join_CTE_0`.`Estimator_0_1` AS `Estimator_0_1`, `RF_Join_CTE_0`.join_key_0_2 AS join_key_0_2, `RF_Join_CTE_0`.`Estimator_0_2` AS `Estimator_0_2`, `RF_Join_CTE_0`.join_key_0_3 AS join_key_0_3, `RF_Join_CTE_0`.`Estimator_0_3` AS `Estimator_0_3`, `RF_Join_CTE_0`.join_key_0_4 AS join_key_0_4, `RF_Join_CTE_0`.`Estimator_0_4` AS `Estimator_0_4`, `RF_Join_CTE_0`.join_key_0_5 AS join_key_0_5, `RF_Join_CTE_0`.`Estimator_0_5` AS `Estimator_0_5`, `RF_Join_CTE_0`.join_key_0_6 AS join_key_0_6, `RF_Join_CTE_0`.`Estimator_0_6` AS `Estimator_0_6`, `RF_Join_CTE_0`.join_key_0_7 AS join_key_0_7, `RF_Join_CTE_0`.`Estimator_0_7` AS `Estimator_0_7`, `RF_Join_CTE_0`.join_key_0_8 AS join_key_0_8, `RF_Join_CTE_0`.`Estimator_0_8` AS `Estimator_0_8`, `RF_Join_CTE_0`.join_key_0_9 AS join_key_0_9, `RF_Join_CTE_0`.`Estimator_0_9` AS `Estimator_0_9`, `RF_Join_CTE_1`.join_key_1_0 AS join_key_1_0, `RF_Join_CTE_1`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Join_CTE_1`.join_key_1_1 AS join_key_1_1, `RF_Join_CTE_1`.`Estimator_1_1` AS `Estimator_1_1`, `RF_Join_CTE_1`.join_key_1_2 AS join_key_1_2, `RF_Join_CTE_1`.`Estimator_1_2` AS `Estimator_1_2`, `RF_Join_CTE_1`.join_key_1_3 AS join_key_1_3, `RF_Join_CTE_1`.`Estimator_1_3` AS `Estimator_1_3`, `RF_Join_CTE_1`.join_key_1_4 AS join_key_1_4, `RF_Join_CTE_1`.`Estimator_1_4` AS `Estimator_1_4`, `RF_Join_CTE_1`.join_key_1_5 AS join_key_1_5, `RF_Join_CTE_1`.`Estimator_1_5` AS `Estimator_1_5`, `RF_Join_CTE_1`.join_key_1_6 AS join_key_1_6, `RF_Join_CTE_1`.`Estimator_1_6` AS `Estimator_1_6`, `RF_Join_CTE_1`.join_key_1_7 AS join_key_1_7, `RF_Join_CTE_1`.`Estimator_1_7` AS `Estimator_1_7`, `RF_Join_CTE_1`.join_key_1_8 AS join_key_1_8, `RF_Join_CTE_1`.`Estimator_1_8` AS `Estimator_1_8`, `RF_Join_CTE_1`.join_key_1_9 AS join_key_1_9, `RF_Join_CTE_1`.`Estimator_1_9` AS `Estimator_1_9`, `RF_Join_CTE_2`.join_key_2_0 AS join_key_2_0, `RF_Join_CTE_2`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Join_CTE_2`.join_key_2_1 AS join_key_2_1, `RF_Join_CTE_2`.`Estimator_2_1` AS `Estimator_2_1`, `RF_Join_CTE_2`.join_key_2_2 AS join_key_2_2, `RF_Join_CTE_2`.`Estimator_2_2` AS `Estimator_2_2`, `RF_Join_CTE_2`.join_key_2_3 AS join_key_2_3, `RF_Join_CTE_2`.`Estimator_2_3` AS `Estimator_2_3`, `RF_Join_CTE_2`.join_key_2_4 AS join_key_2_4, `RF_Join_CTE_2`.`Estimator_2_4` AS `Estimator_2_4`, `RF_Join_CTE_2`.join_key_2_5 AS join_key_2_5, `RF_Join_CTE_2`.`Estimator_2_5` AS `Estimator_2_5`, `RF_Join_CTE_2`.join_key_2_6 AS join_key_2_6, `RF_Join_CTE_2`.`Estimator_2_6` AS `Estimator_2_6`, `RF_Join_CTE_2`.join_key_2_7 AS join_key_2_7, `RF_Join_CTE_2`.`Estimator_2_7` AS `Estimator_2_7`, `RF_Join_CTE_2`.join_key_2_8 AS join_key_2_8, `RF_Join_CTE_2`.`Estimator_2_8` AS `Estimator_2_8`, `RF_Join_CTE_2`.join_key_2_9 AS join_key_2_9, `RF_Join_CTE_2`.`Estimator_2_9` AS `Estimator_2_9`, `RF_Join_CTE_3`.join_key_3_0 AS join_key_3_0, `RF_Join_CTE_3`.`Estimator_3_0` AS `Estimator_3_0`, `RF_Join_CTE_3`.join_key_3_1 AS join_key_3_1, `RF_Join_CTE_3`.`Estimator_3_1` AS `Estimator_3_1`, `RF_Join_CTE_3`.join_key_3_2 AS join_key_3_2, `RF_Join_CTE_3`.`Estimator_3_2` AS `Estimator_3_2`, `RF_Join_CTE_3`.join_key_3_3 AS join_key_3_3, `RF_Join_CTE_3`.`Estimator_3_3` AS `Estimator_3_3`, `RF_Join_CTE_3`.join_key_3_4 AS join_key_3_4, `RF_Join_CTE_3`.`Estimator_3_4` AS `Estimator_3_4`, `RF_Join_CTE_3`.join_key_3_5 AS join_key_3_5, `RF_Join_CTE_3`.`Estimator_3_5` AS `Estimator_3_5`, `RF_Join_CTE_3`.join_key_3_6 AS join_key_3_6, `RF_Join_CTE_3`.`Estimator_3_6` AS `Estimator_3_6`, `RF_Join_CTE_3`.join_key_3_7 AS join_key_3_7, `RF_Join_CTE_3`.`Estimator_3_7` AS `Estimator_3_7`, `RF_Join_CTE_3`.join_key_3_8 AS join_key_3_8, `RF_Join_CTE_3`.`Estimator_3_8` AS `Estimator_3_8`, `RF_Join_CTE_3`.join_key_3_9 AS join_key_3_9, `RF_Join_CTE_3`.`Estimator_3_9` AS `Estimator_3_9` 
FROM `RF_Join_CTE_0` LEFT OUTER JOIN `RF_Join_CTE_1` ON `RF_Join_CTE_0`.join_key_0_0 = `RF_Join_CTE_1`.join_key_1_0 LEFT OUTER JOIN `RF_Join_CTE_2` ON `RF_Join_CTE_2`.join_key_2_0 = `RF_Join_CTE_1`.join_key_1_0 LEFT OUTER JOIN `RF_Join_CTE_3` ON `RF_Join_CTE_3`.join_key_3_0 = `RF_Join_CTE_2`.join_key_2_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 0.0922693266833 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` AS `Score_0`, NULL AS `Proba_0`, NULL AS `LogProba_0`, 0.0989193682461 + 0.1 * `RF_Join_CTE`.`Estimator_0_1` + 0.1 * `RF_Join_CTE`.`Estimator_1_1` + 0.1 * `RF_Join_CTE`.`Estimator_2_1` + 0.1 * `RF_Join_CTE`.`Estimator_3_1` AS `Score_1`, NULL AS `Proba_1`, NULL AS `LogProba_1`, 0.106400665004 + 0.1 * `RF_Join_CTE`.`Estimator_0_2` + 0.1 * `RF_Join_CTE`.`Estimator_1_2` + 0.1 * `RF_Join_CTE`.`Estimator_2_2` + 0.1 * `RF_Join_CTE`.`Estimator_3_2` AS `Score_2`, NULL AS `Proba_2`, NULL AS `LogProba_2`, 0.0980881130507 + 0.1 * `RF_Join_CTE`.`Estimator_0_3` + 0.1 * `RF_Join_CTE`.`Estimator_1_3` + 0.1 * `RF_Join_CTE`.`Estimator_2_3` + 0.1 * `RF_Join_CTE`.`Estimator_3_3` AS `Score_3`, NULL AS `Proba_3`, NULL AS `LogProba_3`, 0.106400665004 + 0.1 * `RF_Join_CTE`.`Estimator_0_4` + 0.1 * `RF_Join_CTE`.`Estimator_1_4` + 0.1 * `RF_Join_CTE`.`Estimator_2_4` + 0.1 * `RF_Join_CTE`.`Estimator_3_4` AS `Score_4`, NULL AS `Proba_4`, NULL AS `LogProba_4`, 0.0989193682461 + 0.1 * `RF_Join_CTE`.`Estimator_0_5` + 0.1 * `RF_Join_CTE`.`Estimator_1_5` + 0.1 * `RF_Join_CTE`.`Estimator_2_5` + 0.1 * `RF_Join_CTE`.`Estimator_3_5` AS `Score_5`, NULL AS `Proba_5`, NULL AS `LogProba_5`, 0.102244389027 + 0.1 * `RF_Join_CTE`.`Estimator_0_6` + 0.1 * `RF_Join_CTE`.`Estimator_1_6` + 0.1 * `RF_Join_CTE`.`Estimator_2_6` + 0.1 * `RF_Join_CTE`.`Estimator_3_6` AS `Score_6`, NULL AS `Proba_6`, NULL AS `LogProba_6`, 0.0955943474647 + 0.1 * `RF_Join_CTE`.`Estimator_0_7` + 0.1 * `RF_Join_CTE`.`Estimator_1_7` + 0.1 * `RF_Join_CTE`.`Estimator_2_7` + 0.1 * `RF_Join_CTE`.`Estimator_3_7` AS `Score_7`, NULL AS `Proba_7`, NULL AS `LogProba_7`, 0.0997506234414 + 0.1 * `RF_Join_CTE`.`Estimator_0_8` + 0.1 * `RF_Join_CTE`.`Estimator_1_8` + 0.1 * `RF_Join_CTE`.`Estimator_2_8` + 0.1 * `RF_Join_CTE`.`Estimator_3_8` AS `Score_8`, NULL AS `Proba_8`, NULL AS `LogProba_8`, 0.101413133832 + 0.1 * `RF_Join_CTE`.`Estimator_0_9` + 0.1 * `RF_Join_CTE`.`Estimator_1_9` + 0.1 * `RF_Join_CTE`.`Estimator_2_9` + 0.1 * `RF_Join_CTE`.`Estimator_3_9` AS `Score_9`, NULL AS `Proba_9`, NULL AS `LogProba_9` 
FROM `RF_Join_CTE`), 
orig_cte AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Score_2` AS `Score_2`, `RF_AVG_Scores`.`Score_3` AS `Score_3`, `RF_AVG_Scores`.`Score_4` AS `Score_4`, `RF_AVG_Scores`.`Score_5` AS `Score_5`, `RF_AVG_Scores`.`Score_6` AS `Score_6`, `RF_AVG_Scores`.`Score_7` AS `Score_7`, `RF_AVG_Scores`.`Score_8` AS `Score_8`, `RF_AVG_Scores`.`Score_9` AS `Score_9`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`Proba_2` AS `Proba_2`, `RF_AVG_Scores`.`Proba_3` AS `Proba_3`, `RF_AVG_Scores`.`Proba_4` AS `Proba_4`, `RF_AVG_Scores`.`Proba_5` AS `Proba_5`, `RF_AVG_Scores`.`Proba_6` AS `Proba_6`, `RF_AVG_Scores`.`Proba_7` AS `Proba_7`, `RF_AVG_Scores`.`Proba_8` AS `Proba_8`, `RF_AVG_Scores`.`Proba_9` AS `Proba_9`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `RF_AVG_Scores`.`LogProba_2` AS `LogProba_2`, `RF_AVG_Scores`.`LogProba_3` AS `LogProba_3`, `RF_AVG_Scores`.`LogProba_4` AS `LogProba_4`, `RF_AVG_Scores`.`LogProba_5` AS `LogProba_5`, `RF_AVG_Scores`.`LogProba_6` AS `LogProba_6`, `RF_AVG_Scores`.`LogProba_7` AS `LogProba_7`, `RF_AVG_Scores`.`LogProba_8` AS `LogProba_8`, `RF_AVG_Scores`.`LogProba_9` AS `LogProba_9`, NULL AS `Decision` 
FROM `RF_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 4 AS class, orig_cte.`LogProba_4` AS `LogProba`, orig_cte.`Proba_4` AS `Proba`, orig_cte.`Score_4` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 5 AS class, orig_cte.`LogProba_5` AS `LogProba`, orig_cte.`Proba_5` AS `Proba`, orig_cte.`Score_5` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 6 AS class, orig_cte.`LogProba_6` AS `LogProba`, orig_cte.`Proba_6` AS `Proba`, orig_cte.`Score_6` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 7 AS class, orig_cte.`LogProba_7` AS `LogProba`, orig_cte.`Proba_7` AS `Proba`, orig_cte.`Score_7` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 8 AS class, orig_cte.`LogProba_8` AS `LogProba`, orig_cte.`Proba_8` AS `Proba`, orig_cte.`Score_8` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 9 AS class, orig_cte.`LogProba_9` AS `LogProba`, orig_cte.`Proba_9` AS `Proba`, orig_cte.`Score_9` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Score_4` AS `Score_4`, orig_cte.`Score_5` AS `Score_5`, orig_cte.`Score_6` AS `Score_6`, orig_cte.`Score_7` AS `Score_7`, orig_cte.`Score_8` AS `Score_8`, orig_cte.`Score_9` AS `Score_9`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`Proba_4` AS `Proba_4`, orig_cte.`Proba_5` AS `Proba_5`, orig_cte.`Proba_6` AS `Proba_6`, orig_cte.`Proba_7` AS `Proba_7`, orig_cte.`Proba_8` AS `Proba_8`, orig_cte.`Proba_9` AS `Proba_9`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`LogProba_4` AS `LogProba_4`, orig_cte.`LogProba_5` AS `LogProba_5`, orig_cte.`LogProba_6` AS `LogProba_6`, orig_cte.`LogProba_7` AS `LogProba_7`, orig_cte.`LogProba_8` AS `LogProba_8`, orig_cte.`LogProba_9` AS `LogProba_9`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Score_4` AS `Score_4`, score_max.`Score_5` AS `Score_5`, score_max.`Score_6` AS `Score_6`, score_max.`Score_7` AS `Score_7`, score_max.`Score_8` AS `Score_8`, score_max.`Score_9` AS `Score_9`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`Proba_4` AS `Proba_4`, score_max.`Proba_5` AS `Proba_5`, score_max.`Proba_6` AS `Proba_6`, score_max.`Proba_7` AS `Proba_7`, score_max.`Proba_8` AS `Proba_8`, score_max.`Proba_9` AS `Proba_9`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`LogProba_4` AS `LogProba_4`, score_max.`LogProba_5` AS `LogProba_5`, score_max.`LogProba_6` AS `LogProba_6`, score_max.`LogProba_7` AS `LogProba_7`, score_max.`LogProba_8` AS `LogProba_8`, score_max.`LogProba_9` AS `LogProba_9`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2`, exp(score_max.`Score_3` - score_max.`max_Score`) AS `exp_delta_Score_3`, exp(score_max.`Score_4` - score_max.`max_Score`) AS `exp_delta_Score_4`, exp(score_max.`Score_5` - score_max.`max_Score`) AS `exp_delta_Score_5`, exp(score_max.`Score_6` - score_max.`max_Score`) AS `exp_delta_Score_6`, exp(score_max.`Score_7` - score_max.`max_Score`) AS `exp_delta_Score_7`, exp(score_max.`Score_8` - score_max.`max_Score`) AS `exp_delta_Score_8`, exp(score_max.`Score_9` - score_max.`max_Score`) AS `exp_delta_Score_9` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 2 AS class, score_soft_max_comp.`LogProba_2` AS `LogProba`, score_soft_max_comp.`Proba_2` AS `Proba`, score_soft_max_comp.`Score_2` AS `Score`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 3 AS class, score_soft_max_comp.`LogProba_3` AS `LogProba`, score_soft_max_comp.`Proba_3` AS `Proba`, score_soft_max_comp.`Score_3` AS `Score`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 4 AS class, score_soft_max_comp.`LogProba_4` AS `LogProba`, score_soft_max_comp.`Proba_4` AS `Proba`, score_soft_max_comp.`Score_4` AS `Score`, score_soft_max_comp.`exp_delta_Score_4` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 5 AS class, score_soft_max_comp.`LogProba_5` AS `LogProba`, score_soft_max_comp.`Proba_5` AS `Proba`, score_soft_max_comp.`Score_5` AS `Score`, score_soft_max_comp.`exp_delta_Score_5` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 6 AS class, score_soft_max_comp.`LogProba_6` AS `LogProba`, score_soft_max_comp.`Proba_6` AS `Proba`, score_soft_max_comp.`Score_6` AS `Score`, score_soft_max_comp.`exp_delta_Score_6` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 7 AS class, score_soft_max_comp.`LogProba_7` AS `LogProba`, score_soft_max_comp.`Proba_7` AS `Proba`, score_soft_max_comp.`Score_7` AS `Score`, score_soft_max_comp.`exp_delta_Score_7` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 8 AS class, score_soft_max_comp.`LogProba_8` AS `LogProba`, score_soft_max_comp.`Proba_8` AS `Proba`, score_soft_max_comp.`Score_8` AS `Score`, score_soft_max_comp.`exp_delta_Score_8` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 9 AS class, score_soft_max_comp.`LogProba_9` AS `LogProba`, score_soft_max_comp.`Proba_9` AS `Proba`, score_soft_max_comp.`Score_9` AS `Score`, score_soft_max_comp.`exp_delta_Score_9` AS `exp_delta_Score` 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Score_2` AS `Score_2`, score_soft_max_comp.`Score_3` AS `Score_3`, score_soft_max_comp.`Score_4` AS `Score_4`, score_soft_max_comp.`Score_5` AS `Score_5`, score_soft_max_comp.`Score_6` AS `Score_6`, score_soft_max_comp.`Score_7` AS `Score_7`, score_soft_max_comp.`Score_8` AS `Score_8`, score_soft_max_comp.`Score_9` AS `Score_9`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`Proba_2` AS `Proba_2`, score_soft_max_comp.`Proba_3` AS `Proba_3`, score_soft_max_comp.`Proba_4` AS `Proba_4`, score_soft_max_comp.`Proba_5` AS `Proba_5`, score_soft_max_comp.`Proba_6` AS `Proba_6`, score_soft_max_comp.`Proba_7` AS `Proba_7`, score_soft_max_comp.`Proba_8` AS `Proba_8`, score_soft_max_comp.`Proba_9` AS `Proba_9`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`LogProba_2` AS `LogProba_2`, score_soft_max_comp.`LogProba_3` AS `LogProba_3`, score_soft_max_comp.`LogProba_4` AS `LogProba_4`, score_soft_max_comp.`LogProba_5` AS `LogProba_5`, score_soft_max_comp.`LogProba_6` AS `LogProba_6`, score_soft_max_comp.`LogProba_7` AS `LogProba_7`, score_soft_max_comp.`LogProba_8` AS `LogProba_8`, score_soft_max_comp.`LogProba_9` AS `LogProba_9`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max_comp.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max_comp.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max_comp.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max_comp.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max_comp.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max_comp.`exp_delta_Score_9` AS `exp_delta_Score_9`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Score_4` AS `Score_4`, score_soft_max.`Score_5` AS `Score_5`, score_soft_max.`Score_6` AS `Score_6`, score_soft_max.`Score_7` AS `Score_7`, score_soft_max.`Score_8` AS `Score_8`, score_soft_max.`Score_9` AS `Score_9`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`Proba_4` AS `Proba_4`, score_soft_max.`Proba_5` AS `Proba_5`, score_soft_max.`Proba_6` AS `Proba_6`, score_soft_max.`Proba_7` AS `Proba_7`, score_soft_max.`Proba_8` AS `Proba_8`, score_soft_max.`Proba_9` AS `Proba_9`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`LogProba_4` AS `LogProba_4`, score_soft_max.`LogProba_5` AS `LogProba_5`, score_soft_max.`LogProba_6` AS `LogProba_6`, score_soft_max.`LogProba_7` AS `LogProba_7`, score_soft_max.`LogProba_8` AS `LogProba_8`, score_soft_max.`LogProba_9` AS `LogProba_9`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`exp_delta_Score_4` AS `exp_delta_Score_4`, score_soft_max.`exp_delta_Score_5` AS `exp_delta_Score_5`, score_soft_max.`exp_delta_Score_6` AS `exp_delta_Score_6`, score_soft_max.`exp_delta_Score_7` AS `exp_delta_Score_7`, score_soft_max.`exp_delta_Score_8` AS `exp_delta_Score_8`, score_soft_max.`exp_delta_Score_9` AS `exp_delta_Score_9`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3`, score_soft_max.`exp_delta_Score_4` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_4`, score_soft_max.`exp_delta_Score_5` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_5`, score_soft_max.`exp_delta_Score_6` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_6`, score_soft_max.`exp_delta_Score_7` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_7`, score_soft_max.`exp_delta_Score_8` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_8`, score_soft_max.`exp_delta_Score_9` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_9` 
FROM score_soft_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`Score_4` AS `Score_4`, arg_max_cte.`Score_5` AS `Score_5`, arg_max_cte.`Score_6` AS `Score_6`, arg_max_cte.`Score_7` AS `Score_7`, arg_max_cte.`Score_8` AS `Score_8`, arg_max_cte.`Score_9` AS `Score_9`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, arg_max_cte.`SoftProba_4` AS `Proba_4`, arg_max_cte.`SoftProba_5` AS `Proba_5`, arg_max_cte.`SoftProba_6` AS `Proba_6`, arg_max_cte.`SoftProba_7` AS `Proba_7`, arg_max_cte.`SoftProba_8` AS `Proba_8`, arg_max_cte.`SoftProba_9` AS `Proba_9`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, CASE WHEN (arg_max_cte.`SoftProba_4` IS NULL OR arg_max_cte.`SoftProba_4` > 0.0) THEN ln(arg_max_cte.`SoftProba_4`) ELSE -1.79769313486231e+308 END AS `LogProba_4`, CASE WHEN (arg_max_cte.`SoftProba_5` IS NULL OR arg_max_cte.`SoftProba_5` > 0.0) THEN ln(arg_max_cte.`SoftProba_5`) ELSE -1.79769313486231e+308 END AS `LogProba_5`, CASE WHEN (arg_max_cte.`SoftProba_6` IS NULL OR arg_max_cte.`SoftProba_6` > 0.0) THEN ln(arg_max_cte.`SoftProba_6`) ELSE -1.79769313486231e+308 END AS `LogProba_6`, CASE WHEN (arg_max_cte.`SoftProba_7` IS NULL OR arg_max_cte.`SoftProba_7` > 0.0) THEN ln(arg_max_cte.`SoftProba_7`) ELSE -1.79769313486231e+308 END AS `LogProba_7`, CASE WHEN (arg_max_cte.`SoftProba_8` IS NULL OR arg_max_cte.`SoftProba_8` > 0.0) THEN ln(arg_max_cte.`SoftProba_8`) ELSE -1.79769313486231e+308 END AS `LogProba_8`, CASE WHEN (arg_max_cte.`SoftProba_9` IS NULL OR arg_max_cte.`SoftProba_9` > 0.0) THEN ln(arg_max_cte.`SoftProba_9`) ELSE -1.79769313486231e+308 END AS `LogProba_9`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM arg_max_cte