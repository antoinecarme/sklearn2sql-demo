-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [DT_node_lookup] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_73] <= -1.6012554168701172) THEN CASE WHEN ([ADS].[Feature_19] <= 1.505834698677063) THEN CASE WHEN ([ADS].[Feature_34] <= 1.6384737491607666) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_56] <= -0.7191939353942871) THEN CASE WHEN ([ADS].[Feature_91] <= 0.5873987674713135) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_56] <= 1.5195062160491943) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [RandomReg_100] AS [ADS]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_73' AS feature, -1.6012554168701172 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.5452277101854334e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_19' AS feature, 1.505834698677063 AS threshold, 4 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -415.52186211156493 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_34' AS feature, 1.6384737491607666 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -520.9778726639111 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -499.819785581176 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -563.294046829381 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -99.15383045452681 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'Feature_56' AS feature, -0.7191939353942871 AS threshold, 63 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 26.382340451527945 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'Feature_91' AS feature, 0.5873987674713135 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -163.64413082298265 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -260.8927639238627 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -17.771181171662676 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_56' AS feature, 1.5195062160491943 AS threshold, 53 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 62.23639163539784 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 38.816729442821824 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 245.69041214391015 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0_0, [DT_Output].[Estimator] AS [Estimator_0_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_73] <= -1.6012554168701172) THEN CASE WHEN ([ADS].[Feature_72] <= 0.5195522904396057) THEN CASE WHEN ([ADS].[Feature_62] <= 0.021608248353004456) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN ([ADS].[Feature_41] <= -0.05291593074798584) THEN CASE WHEN ([ADS].[Feature_91] <= -1.1368257999420166) THEN 8 ELSE 9 END ELSE CASE WHEN ([ADS].[Feature_56] <= 1.5195062160491943) THEN 11 ELSE 12 END END END AS node_id_2 
FROM [RandomReg_100] AS [ADS]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_73' AS feature, -1.6012554168701172 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.6968184734569556e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_72' AS feature, 0.5195522904396057 AS threshold, 4 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -373.96967590040845 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_62' AS feature, 0.021608248353004456 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -468.8800853975199 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -506.964642146443 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -449.8378070230584 AS [Estimator] UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -89.23844740907413 AS [Estimator] UNION ALL SELECT 6 AS node_id, 'Feature_41' AS feature, -0.05291593074798584 AS threshold, 63 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.744106406375142 AS [Estimator] UNION ALL SELECT 7 AS node_id, 'Feature_91' AS feature, -1.1368257999420166 AS threshold, 32 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -49.68723502445455 AS [Estimator] UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -244.22677692020412 AS [Estimator] UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.793494586973864 AS [Estimator] UNION ALL SELECT 10 AS node_id, 'Feature_56' AS feature, 1.5195062160491943 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 99.54420078658644 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 78.51443396403559 AS [Estimator] UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 241.49512683880454 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1_0] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1_0, [DT_Output_1].[Estimator] AS [Estimator_1_0] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_56] <= -0.018595654517412186) THEN CASE WHEN ([ADS].[Feature_35] <= -1.1754920482635498) THEN CASE WHEN ([ADS].[Feature_16] <= 0.9789656400680542) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_47] <= -1.4404315948486328) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_56] <= 1.5195062160491943) THEN CASE WHEN ([ADS].[Feature_67] <= 1.632889986038208) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_20] <= 0.33545634150505066) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [RandomReg_100] AS [ADS]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_56' AS feature, -0.018595654517412186 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.81784156527815e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_35' AS feature, -1.1754920482635498 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -93.5487776990434 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, 0.9789656400680542 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -304.36117193049023 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -254.11474473535907 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -404.8540263207526 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_47' AS feature, -1.4404315948486328 AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -42.953803083496126 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -456.2681779317987 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -25.732370798150196 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_56' AS feature, 1.5195062160491943 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 80.55589190750958 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_67' AS feature, 1.632889986038208 AS threshold, 30 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 55.63077449704523 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 28 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 41.44895106805556 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 254.17630250290063 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_20' AS feature, 0.33545634150505066 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 205.1814789598313 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 168.95002379050555 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 277.64438929848274 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2_0] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2_0, [DT_Output_2].[Estimator] AS [Estimator_2_0] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_41] <= -0.05291593074798584) THEN CASE WHEN ([ADS].[Feature_73] <= 0.5026388764381409) THEN CASE WHEN ([ADS].[Feature_82] <= 0.17678678035736084) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS].[Feature_15] <= 1.2316322326660156) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS].[Feature_37] <= 0.10617920756340027) THEN CASE WHEN ([ADS].[Feature_4] <= 0.5437902212142944) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS].[Feature_40] <= -0.7843367457389832) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [RandomReg_100] AS [ADS]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'Feature_41' AS feature, -0.05291593074798584 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6968184734569556e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'Feature_73' AS feature, 0.5026388764381409 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -72.94755673697534 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'Feature_82' AS feature, 0.17678678035736084 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -135.871266849411 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -241.253680375421 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -30.48885332340102 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'Feature_15' AS feature, 1.2316322326660156 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 52.89986348789605 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 11.950515320627908 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 257.6466043242367 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'Feature_37' AS feature, 0.10617920756340027 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 84.71329169455201 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'Feature_4' AS feature, 0.5437902212142944 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 120.4563210026245 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 148.939609205363 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 29.309798753861134 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'Feature_40' AS feature, -0.7843367457389832 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.652930147599784 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 135.30350101025078 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -21.759712568062966 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3_0] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3_0, [DT_Output_3].[Estimator] AS [Estimator_3_0] 
FROM [DT_Output_3]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0_0].join_key_0_0 AS join_key_0_0, [RF_Tree_0_0].[Estimator_0_0] AS [Estimator_0_0], [RF_Tree_1_0].join_key_1_0 AS join_key_1_0, [RF_Tree_1_0].[Estimator_1_0] AS [Estimator_1_0], [RF_Tree_2_0].join_key_2_0 AS join_key_2_0, [RF_Tree_2_0].[Estimator_2_0] AS [Estimator_2_0], [RF_Tree_3_0].join_key_3_0 AS join_key_3_0, [RF_Tree_3_0].[Estimator_3_0] AS [Estimator_3_0] 
FROM [RF_Tree_0_0] LEFT OUTER JOIN [RF_Tree_1_0] ON [RF_Tree_0_0].join_key_0_0 = [RF_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [RF_Tree_2_0] ON [RF_Tree_2_0].join_key_2_0 = [RF_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [RF_Tree_3_0] ON [RF_Tree_3_0].join_key_3_0 = [RF_Tree_2_0].join_key_2_0), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0_0 AS [KEY], 27.2422666345 + 0.1 * [RF_Join_CTE].[Estimator_0_0] + 0.1 * [RF_Join_CTE].[Estimator_1_0] + 0.1 * [RF_Join_CTE].[Estimator_2_0] + 0.1 * [RF_Join_CTE].[Estimator_3_0] AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]