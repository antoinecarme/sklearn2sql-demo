-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.5138210654258728) THEN CASE WHEN ("ADS"."Feature_0" <= 0.48955199122428894) THEN CASE WHEN ("ADS"."Feature_3" <= 0.22364000976085663) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.27906447649002075) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.525227963924408) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5795091390609741) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.8181159496307373) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.5138210654258728 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0074859686150674e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.48955199122428894 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.430818095786845 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.22364000976085663 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.690270677256793 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -8.670040228240923 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.427676904703503 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.27906447649002075 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.1026376804511682 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.580779762153423 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.04895719063887296 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.525227963924408 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.984175853171823 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.5795091390609741 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6073757725376063 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.216137807244525 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.092668570852784 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_3' AS feature, 0.8181159496307373 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.700753689185422 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.27421354296011 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.553833981636048 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.5138210654258728) THEN CASE WHEN ("ADS"."Feature_0" <= 0.48955199122428894) THEN CASE WHEN ("ADS"."Feature_5" <= 0.21892334520816803) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.27906447649002075) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.44151514768600464) THEN CASE WHEN ("ADS"."Feature_3" <= 0.5795091390609741) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.3853793144226074) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.5138210654258728 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0605115459105972e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.48955199122428894 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.087736286208161 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 0.21892334520816803 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.021243609531113 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.0741197911482776 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.0080245641268215 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.27906447649002075 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9923739124060516 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.0227017859380805 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.04406147157498599 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.44151514768600464 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.5857582678546405 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_3' AS feature, 0.5795091390609741 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9249344141734859 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.7945240265200724 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.449318685361659 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.3853793144226074 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.852817245798047 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4412270063890038 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.918939195613373 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.5138210654258728) THEN CASE WHEN ("ADS"."Feature_0" <= 0.48955199122428894) THEN CASE WHEN ("ADS"."Feature_3" <= 0.22364000976085663) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.27906447649002075) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.44151514768600464) THEN CASE WHEN ("ADS"."Feature_8" <= 0.04803880304098129) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.3853793144226074) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.5138210654258728 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.809731799673026e-16 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.48955199122428894 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.778962657587345 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.22364000976085663 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.419119248578002 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.102233749004149 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.49555981951955 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.27906447649002075 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8931365211654468 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.520431607344273 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.03965532441748789 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.44151514768600464 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.2271824410691776 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.04803880304098129 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8324409727561377 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.415071623868066 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3043868168254937 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.3853793144226074 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.367535521218244 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.2971043057501028 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.327045276052038 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.5138210654258728) THEN CASE WHEN ("ADS"."Feature_0" <= 0.48955199122428894) THEN CASE WHEN ("ADS"."Feature_5" <= 0.19180643558502197) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.27906447649002075) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 0.44151514768600464) THEN CASE WHEN ("ADS"."Feature_8" <= 0.04803880304098129) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.3853793144226074) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman1 "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.5138210654258728 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.037429843075337e-16 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 0.48955199122428894 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.5010663918286102 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_5' AS feature, 0.19180643558502197 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.877207323720201 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.51929704741391 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.547655058536554 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_1' AS feature, 0.27906447649002075 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8038228690489027 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.068388446609846 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.035689791975739425 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 0.44151514768600464 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.9044641969622598 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_8' AS feature, 0.04803880304098129 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7491968754805232 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.0735644614812596 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1739481351429435 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_0' AS feature, 0.3853793144226074 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.930781969096419 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1673938751750932 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.794340748446832 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 15.2298395762 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"