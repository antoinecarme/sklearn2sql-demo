-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.4641575813293457) THEN CASE WHEN ("ADS"."Feature_1" <= 1509.479736328125) THEN CASE WHEN ("ADS"."Feature_2" <= 0.2601949870586395) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.30759525299072266) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 1129.07958984375) THEN CASE WHEN ("ADS"."Feature_1" <= 592.6135864257812) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.6511233448982239) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman2 "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.4641575813293457 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.3936369469139113e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 1509.479736328125 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -265.71949997131406 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.2601949870586395 AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -310.09051709089704 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -372.7653349218697 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -232.95227976046905 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.30759525299072266 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -8.367600677733321 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -84.70013391026419 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 106.13119917106297 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 1129.07958984375 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 273.7716060310509 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 592.6135864257812 AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 63.72072492236311 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -223.87839805361068 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 117.6455604803582 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.6511233448982239 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 558.84065896427 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 343.0479853049694 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 720.6851642087454 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.4641575813293457) THEN CASE WHEN ("ADS"."Feature_1" <= 1509.479736328125) THEN CASE WHEN ("ADS"."Feature_2" <= 0.2601949870586395) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 33.32176208496094) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 1129.07958984375) THEN CASE WHEN ("ADS"."Feature_1" <= 612.0657958984375) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.6511233448982239) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman2 "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.4641575813293457 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.3936369469139113e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 1509.479736328125 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -239.1475499741826 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.2601949870586395 AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -279.0814653818072 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -335.4888014296826 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -209.6570517844221 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 33.32176208496094 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.530840609959978 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -76.23012051923774 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 95.51807925395667 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 1129.07958984375 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 246.39444542794575 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 612.0657958984375 AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 57.348652430126776 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -134.10824079574272 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 125.72611429650874 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.6511233448982239 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 502.956593067843 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 308.74318677447246 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 648.6166477878709 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.4641575813293457) THEN CASE WHEN ("ADS"."Feature_1" <= 1509.479736328125) THEN CASE WHEN ("ADS"."Feature_1" <= 744.3511352539062) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 33.32176208496094) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 1129.07958984375) THEN CASE WHEN ("ADS"."Feature_1" <= 850.8544311523438) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.6511233448982239) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman2 "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.4641575813293457 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -9.332501604013256e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 1509.479736328125 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -215.23279497676444 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 744.3511352539062 AS threshold, 29 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -251.17331884362656 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -309.7635301156619 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -196.48912165639345 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 33.32176208496094 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.777756548963998 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -68.60710846731399 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 85.96627132856099 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 1129.07958984375 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 221.7550008851512 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 850.8544311523438 AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 51.61378718711411 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -29.34262935135203 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 190.39621553877035 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.6511233448982239 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 452.6609337610586 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 277.86886809702526 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 583.7549830090836 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.4641575813293457) THEN CASE WHEN ("ADS"."Feature_1" <= 1377.284912109375) THEN CASE WHEN ("ADS"."Feature_2" <= 0.18521495163440704) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.24112889170646667) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 1126.68408203125) THEN CASE WHEN ("ADS"."Feature_1" <= 456.26495361328125) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.6709882616996765) THEN 13 ELSE 14 END END END AS node_id_2 
FROM freidman2 "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.4641575813293457 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.3936369469139113e-15 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 1377.284912109375 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -193.70951547908797 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.18521495163440704 AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -236.93039793315614 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -298.8771136153651 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -198.21370063177557 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.24112889170646667 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -53.2416475033664 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -212.56450406488935 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 42.35206643354737 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 1126.68408203125 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 199.57950079663604 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 456.26495361328125 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 36.44846541947095 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -248.12249713157587 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 72.01983573835182 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_2' AS feature, 0.6709882616996765 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 395.33674324923425 AS "Estimator" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 246.71646729615873 AS "Estimator" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 525.3794847081753 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 474.345265115 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"