-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 3.26981218289 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 11.814159292 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 10.9415929204 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0796460176991 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.552612684366 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 6.31431563422 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 67.1421828909 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 3.83938820059 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 9.43362831858 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 404.619469027 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 18.3663716814 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 359.759587021 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 12.3942772861 ELSE "ADS"."Feature_12" END AS impter_14 
FROM boston AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 3.26981218289) / 8.06435679573 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 11.814159292) / 23.6845226609 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 10.9415929204) / 6.91219450398 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.0796460176991) / 0.270744398952 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.552612684366) / 0.116521457827 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 6.31431563422) / 0.713158124818 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 67.1421828909) / 28.1589507917 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 3.83938820059) / 2.09968835038 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 9.43362831858) / 8.61076650564 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 404.619469027) / 168.750972129 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 18.3663716814) / 2.15547367794 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 359.759587021) / 89.5754249699 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 12.3942772861) / 6.97945748877 AS scaler_14 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.9215128421783447) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.27304738759994507) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1690012216567993) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.46675795316696167) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.5742433071136475) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.23798708617687225) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 3.4188551902770996) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.9215128421783447 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.8759166622574917e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, 0.27304738759994507 AS threshold, 292 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.4321523821069255 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -1.1690012216567993 AS threshold, 178 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8105250074574907 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.51305309734513 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 174 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.33460482148306203 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_6' AS feature, 0.46675795316696167 AS threshold, 114 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.495280235988201 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 47 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.366202221803804 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 67 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -9.690305111610096 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_7' AS feature, 1.5742433071136475 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 15.110393522877049 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_2' AS feature, 0.23798708617687225 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 8.546386430678465 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.295195954487987 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.695280235988202 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_7' AS feature, 3.4188551902770996 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 21.959792227779918 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 23.006234915526953 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0619469026548707 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Estimator" AS "Estimator_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.38244765996932983) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.5742433071136475) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1213274002075195) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 3.4188551902770996) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 1.0682381391525269) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.3454025983810425) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.4324294924736023) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -0.38244765996932983 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.567595431581483e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 1.5742433071136475 AS threshold, 143 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.486288132323368 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -1.1213274002075195 AS threshold, 120 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.941429198393321 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 24.886747787610616 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 117 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.404369747387751 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 3.4188551902770996 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 19.76381300500192 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.705611423974258 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.9557522123893847 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_14' AS feature, 1.0682381391525269 AS threshold, 196 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.732342872052263 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_14' AS feature, 0.3454025983810425 AS threshold, 148 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.2557965025256097 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 93 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.0616959261241914 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 55 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.27491202262255 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, 0.4324294924736023 AS threshold, 48 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -9.285027511426113 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.509942065089874 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -10.687202105779575 AS "Estimator") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1_0, "DT_Output_1"."Estimator" AS "Estimator_1_0" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 0.7160885334014893) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 0.3418206572532654) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1690012216567993) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_2 <= 0.3639376163482666) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.5742433071136475) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.9130276441574097) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 3.4188551902770996) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.7160885334014893 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.6985951984989056e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, 0.3418206572532654 AS threshold, 276 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.433061139828047 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -1.1690012216567993 AS threshold, 175 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.08978612705996036 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.546784101692925 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 171 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.5023374774401445 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_2' AS feature, 0.3639376163482666 AS threshold, 101 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.493191112446026 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 57 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.5314075477992555 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 44 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -9.03459254846571 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_7' AS feature, 1.5742433071136475 AS threshold, 63 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 10.659124993532394 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_6' AS feature, 0.9130276441574097 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 6.560348634725029 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 37 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 7.706231014634332 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.572200717489676 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_7' AS feature, 3.4188551902770996 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 17.78743170450173 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 18.635050281576827 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.8601769911504462 AS "Estimator") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2_0, "DT_Output_2"."Estimator" AS "Estimator_2_0" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= -0.38244765996932983) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.1591880321502686) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_9 <= -1.1213274002075195) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 <= 1.5742433071136475) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 <= 1.0682381391525269) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_13 <= -2.0702619552612305) THEN 10 ELSE 11 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 <= 0.4324294924736023) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -0.38244765996932983 AS threshold, 339 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.79291503067945e-15 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 1.1591880321502686 AS threshold, 143 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 5.377908675802622 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -1.1213274002075195 AS threshold, 109 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.7309073089353584 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 20.64339459868026 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 106 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.2239501214897484 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 1.5742433071136475 AS threshold, 34 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 13.863883646053562 AS "Estimator" UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.379291607512302 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 16.008688534051554 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'scaler_14' AS feature, 1.0682381391525269 AS threshold, 196 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.923678268570285 AS "Estimator" UNION ALL SELECT 9 AS node_id, 'scaler_13' AS feature, -2.0702619552612305 AS threshold, 148 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.7181582863342597 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.365139185171475 AS "Estimator" UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 136 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.308130559966271 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, 0.4324294924736023 AS threshold, 48 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.640698213798033 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.367247565318914 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 35 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -8.856551311804564 AS "Estimator") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3_0, "DT_Output_3"."Estimator" AS "Estimator_3_0" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0_0".join_key_0_0 AS join_key_0_0, "RF_Tree_0_0"."Estimator_0_0" AS "Estimator_0_0", "RF_Tree_1_0".join_key_1_0 AS join_key_1_0, "RF_Tree_1_0"."Estimator_1_0" AS "Estimator_1_0", "RF_Tree_2_0".join_key_2_0 AS join_key_2_0, "RF_Tree_2_0"."Estimator_2_0" AS "Estimator_2_0", "RF_Tree_3_0".join_key_3_0 AS join_key_3_0, "RF_Tree_3_0"."Estimator_3_0" AS "Estimator_3_0" 
FROM "RF_Tree_0_0" LEFT OUTER JOIN "RF_Tree_1_0" ON "RF_Tree_0_0".join_key_0_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_2_0" ON "RF_Tree_2_0".join_key_2_0 = "RF_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "RF_Tree_3_0" ON "RF_Tree_3_0".join_key_3_0 = "RF_Tree_2_0".join_key_2_0), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0_0 AS "KEY", 22.9619469027 + 0.1 * "RF_Join_CTE"."Estimator_0_0" + 0.1 * "RF_Join_CTE"."Estimator_1_0" + 0.1 * "RF_Join_CTE"."Estimator_2_0" + 0.1 * "RF_Join_CTE"."Estimator_3_0" AS "Estimator" 
FROM "RF_Join_CTE")
 SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Estimator" AS "Estimator" 
FROM "RF_AVG_Scores"