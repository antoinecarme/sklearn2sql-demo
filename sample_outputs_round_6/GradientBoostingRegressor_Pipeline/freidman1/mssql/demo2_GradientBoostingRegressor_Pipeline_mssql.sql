-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.51803380086 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.532983414708 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.451231668345 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.559039372363 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.525844918385 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.563775393796 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN 0.514001906083 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.485088644355 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.549850076025 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.542990718041 ELSE [ADS].[Feature_9] END AS impter_11 
FROM freidman1 AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - 0.51803380086) / 0.274202637767 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - 0.532983414708) / 0.284458871643 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - 0.451231668345) / 0.28953863686 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - 0.559039372363) / 0.302497317401 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - 0.525844918385) / 0.289354950306 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - 0.563775393796) / 0.295253712727 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - 0.514001906083) / 0.326009311391 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.485088644355) / 0.307087777528 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - 0.549850076025) / 0.278171537674 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - 0.542990718041) / 0.251079847329 AS scaler_11 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5905929803848267) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.48725855350494385) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_7 <= -0.40529200434684753) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.4321434497833252) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -1.1062633991241455) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.7407588958740234) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.02150590345263481) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, -0.5905929803848267 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -9.279476026717725e-16 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, -0.48725855350494385 AS threshold, 19 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.4550552286962555 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, -0.40529200434684753 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.866529996067414 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -8.094110161231818 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.9458448721941135 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_3' AS feature, -1.4321434497833252 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.048361614396411 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.208666493818399 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.4239347832056282 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_6' AS feature, -1.1062633991241455 AS threshold, 48 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.7634593613589329 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_9' AS feature, -0.7407588958740234 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.51601163348663 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -8.35531470872982 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.4420246012395481 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_5' AS feature, 0.02150590345263481 AS threshold, 38 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.152793833686713 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7011189127126928 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 24 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.582937537588223 AS [Estimator]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].count AS count, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Estimator] AS [Estimator] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[RF_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0_0, [DT_Output].[Estimator] AS [Estimator_0_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5513520240783691) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.3903476595878601) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -1.2094061374664307) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.4321434497833252) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -1.1062633991241455) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_9 <= -0.7407588958740234) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.04537712410092354) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, -0.5513520240783691 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.193075489149422e-15 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, -0.3903476595878601 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.876972238934274 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, -1.2094061374664307 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.763339210101897 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.467699542786008 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.419236257906438 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_3' AS feature, -1.4321434497833252 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.3335810807062187 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.5807369990727125 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.294284482067474 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_6' AS feature, -1.1062633991241455 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.6497754208230935 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_9' AS feature, -0.7407588958740234 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.1644104701379674 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.519783237856839 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.2978221411155932 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_5' AS feature, 0.04537712410092354 AS threshold, 37 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.9509067427044617 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 15 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7419031800508087 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 22 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.4570455354228615 AS [Estimator]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].count AS count, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[RF_Tree_1_0] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_1_0, [DT_Output_1].[Estimator] AS [Estimator_1_0] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5513520240783691) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.3903476595878601) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= 1.1116266250610352) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.4321434497833252) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.8398951292037964) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.6260753273963928) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= 0.04537712410092354) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, -0.5513520240783691 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.386150978298844e-16 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, -0.3903476595878601 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.489275015040845 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_2' AS feature, 1.1116266250610352 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.187005289091707 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.586494410456881 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.9910923181703097 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_3' AS feature, -1.4321434497833252 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.1002229726355965 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.222663299165441 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.1648560338607263 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_2' AS feature, -0.8398951292037964 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4847978787407843 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_5' AS feature, 0.6260753273963928 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.574618974578569 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.520634113115128 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.6286038360420112 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_5' AS feature, 0.04537712410092354 AS threshold, 39 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.5226269768575755 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3581369799889397 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 4.377904117030694 AS [Estimator]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].count AS count, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[RF_Tree_2_0] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_2_0, [DT_Output_2].[Estimator] AS [Estimator_2_0] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -0.5513520240783691) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -0.3903476595878601) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_10 <= -1.2094061374664307) THEN 3 ELSE 4 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_3 <= -1.4321434497833252) THEN 6 ELSE 7 END END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_5 <= -1.2373387813568115) THEN CASE WHEN ([ADS_sca_2_OUT].scaler_2 <= -0.4243467450141907) THEN 10 ELSE 11 END ELSE CASE WHEN ([ADS_sca_2_OUT].scaler_6 <= -0.4350528120994568) THEN 13 ELSE 14 END END END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].count AS count, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Estimator] AS [Estimator] 
FROM (SELECT 0 AS node_id, 'scaler_3' AS feature, -0.5513520240783691 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.3256394323882465e-16 AS [Estimator] UNION ALL SELECT 1 AS node_id, 'scaler_5' AS feature, -0.3903476595878601 AS threshold, 20 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.140347513536761 AS [Estimator] UNION ALL SELECT 2 AS node_id, 'scaler_10' AS feature, -1.2094061374664307 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -4.6683047601825365 AS [Estimator] UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.742050252076047 AS [Estimator] UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -5.218663191070105 AS [Estimator] UNION ALL SELECT 5 AS node_id, 'scaler_3' AS feature, -1.4321434497833252 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.890200675372037 AS [Estimator] UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -2.9003969692488965 AS [Estimator] UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.0483704304746535 AS [Estimator] UNION ALL SELECT 8 AS node_id, 'scaler_5' AS feature, -1.2373387813568115 AS threshold, 47 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3363180908667067 AS [Estimator] UNION ALL SELECT 9 AS node_id, 'scaler_2' AS feature, -0.4243467450141907 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -3.714552803300602 AS [Estimator] UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -6.618597104779553 AS [Estimator] UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -1.536519577191389 AS [Estimator] UNION ALL SELECT 12 AS node_id, 'scaler_6' AS feature, -0.4350528120994568 AS threshold, 40 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 2.220220497345986 AS [Estimator] UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.12007997986868159 AS [Estimator] UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 27 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 3.3470318382271222 AS [Estimator]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].count AS count, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Estimator] AS [Estimator] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[RF_Tree_3_0] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_3_0, [DT_Output_3].[Estimator] AS [Estimator_3_0] 
FROM [DT_Output_3]), 
[RF_Join_CTE] AS 
(SELECT [RF_Tree_0_0].join_key_0_0 AS join_key_0_0, [RF_Tree_0_0].[Estimator_0_0] AS [Estimator_0_0], [RF_Tree_1_0].join_key_1_0 AS join_key_1_0, [RF_Tree_1_0].[Estimator_1_0] AS [Estimator_1_0], [RF_Tree_2_0].join_key_2_0 AS join_key_2_0, [RF_Tree_2_0].[Estimator_2_0] AS [Estimator_2_0], [RF_Tree_3_0].join_key_3_0 AS join_key_3_0, [RF_Tree_3_0].[Estimator_3_0] AS [Estimator_3_0] 
FROM [RF_Tree_0_0] LEFT OUTER JOIN [RF_Tree_1_0] ON [RF_Tree_0_0].join_key_0_0 = [RF_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [RF_Tree_2_0] ON [RF_Tree_2_0].join_key_2_0 = [RF_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [RF_Tree_3_0] ON [RF_Tree_3_0].join_key_3_0 = [RF_Tree_2_0].join_key_2_0), 
[RF_AVG_Scores] AS 
(SELECT [RF_Join_CTE].join_key_0_0 AS [KEY], 15.9244627357 + 0.1 * [RF_Join_CTE].[Estimator_0_0] + 0.1 * [RF_Join_CTE].[Estimator_1_0] + 0.1 * [RF_Join_CTE].[Estimator_2_0] + 0.1 * [RF_Join_CTE].[Estimator_3_0] AS [Estimator] 
FROM [RF_Join_CTE])
 SELECT [RF_AVG_Scores].[KEY] AS [KEY], [RF_AVG_Scores].[Estimator] AS [Estimator] 
FROM [RF_AVG_Scores]