-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 45.0831148151 ELSE `ADS`.`Feature_0` END AS imputer_output_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 962.400775275 ELSE `ADS`.`Feature_1` END AS imputer_output_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.491644677626 ELSE `ADS`.`Feature_2` END AS imputer_output_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 6.19711509685 ELSE `ADS`.`Feature_3` END AS imputer_output_5 
FROM freidman2 AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.imputer_output_2 AS DOUBLE) - 45.0831148151) / 26.1337514036 AS scaler_output_2, (CAST(`ADS_imp_1_OUT`.imputer_output_3 AS DOUBLE) - 962.400775275) / 447.294455104 AS scaler_output_3, (CAST(`ADS_imp_1_OUT`.imputer_output_4 AS DOUBLE) - 0.491644677626) / 0.261690966997 AS scaler_output_4, (CAST(`ADS_imp_1_OUT`.imputer_output_5 AS DOUBLE) - 6.19711509685) / 3.19254050683 AS scaler_output_5 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.10517534613609314) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.877271294593811) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 1.175551176071167) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -1.0688142776489258) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.22563636302947998) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.37536054849624634) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.7367847561836243) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, -0.10517534613609314 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.6968184734569555e-14 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, -0.877271294593811 AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -255.50554459169035 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, 1.175551176071167 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -396.6525551355106 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -411.4348569303343 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -352.3056497510394 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, -1.0688142776489258 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -201.73525486071114 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -282.70444864058766 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -128.12689687900533 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, 0.22563636302947998 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 194.99107350418473 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, -0.37536054849624634 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -63.0035617167314 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -212.6721900769204 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 119.92476183461076 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_output_4' AS feature, 0.7367847561836243 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 481.6517793052026 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 325.15618011833976 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 638.1473784920654 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Estimator` AS `Estimator_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.06197809427976608) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.05804578959941864) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.877271294593811) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.7788232564926147) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.22172249853610992) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.9967910051345825) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.7786504030227661) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, 0.06197809427976608 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.52713662611126e-14 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, 0.05804578959941864 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -210.72342977782222 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -0.877271294593811 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -290.41257256646037 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -356.9872996219596 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -231.2350374060167 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, -0.7788232564926147 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -120.40906795069895 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -204.24335986382306 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.342369918987231 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, 0.22172249853610992 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 192.66142151115173 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, -0.9967910051345825 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -57.314034217915804 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -290.7372104031515 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 59.39755387470206 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_output_2' AS feature, 0.7786504030227661 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 457.3413158125174 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 14 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 397.9446232546194 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 734.5258810827077 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1_0` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1_0, `DT_Output_1`.`Estimator` AS `Estimator_1_0` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.06197809427976608) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.6867729425430298) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.877271294593811) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -1.0688142776489258) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.22172249853610992) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.9967910051345825) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 1.384124994277954) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, 0.06197809427976608 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.090455420370867e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, -0.6867729425430298 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -189.65108680003996 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -0.877271294593811 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -311.7180329620767 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -321.2885696597636 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -235.1537393805812 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, -1.0688142776489258 AS threshold, 23 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -141.88576004098218 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -232.93000068845876 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -71.85172877369247 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, 0.22172249853610992 AS threshold, 35 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 173.39527936003657 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, -0.9967910051345825 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -51.582630796124214 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -261.66348936283634 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 53.45779848723186 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_output_4' AS feature, 1.384124994277954 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 411.6071842312656 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 323.90911268976356 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 572.3869820573526 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2_0` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2_0, `DT_Output_2`.`Estimator` AS `Estimator_2_0` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.10517534613609314) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.05804578959941864) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.877271294593811) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.768304169178009) THEN 6 ELSE 7 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.22563636302947998) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.37536054849624634) THEN 10 ELSE 11 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.7367847561836243) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_output_3' AS feature, -0.10517534613609314 AS threshold, 67 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.7872738938278225e-15 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, 0.05804578959941864 AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -187.2795451442369 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -0.877271294593811 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -246.6482703124594 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -289.15971269378724 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -204.13682793113148 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, -0.768304169178009 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -114.21034493719387 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -147.67708126074305 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 69.8567048423266 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, 0.22563636302947998 AS threshold, 38 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 142.92386339954916 AS `Estimator` UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, -0.37536054849624634 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -45.05452506862256 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -162.62252056624743 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 98.63969165069676 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_output_4' AS feature, 0.7367847561836243 AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 351.7887394752956 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 229.21477845427964 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 474.3627004963116 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3_0` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3_0, `DT_Output_3`.`Estimator` AS `Estimator_3_0` 
FROM `DT_Output_3`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0_0`.join_key_0_0 AS join_key_0_0, `RF_Tree_0_0`.`Estimator_0_0` AS `Estimator_0_0`, `RF_Tree_1_0`.join_key_1_0 AS join_key_1_0, `RF_Tree_1_0`.`Estimator_1_0` AS `Estimator_1_0`, `RF_Tree_2_0`.join_key_2_0 AS join_key_2_0, `RF_Tree_2_0`.`Estimator_2_0` AS `Estimator_2_0`, `RF_Tree_3_0`.join_key_3_0 AS join_key_3_0, `RF_Tree_3_0`.`Estimator_3_0` AS `Estimator_3_0` 
FROM `RF_Tree_0_0` LEFT OUTER JOIN `RF_Tree_1_0` ON `RF_Tree_0_0`.join_key_0_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_2_0` ON `RF_Tree_2_0`.join_key_2_0 = `RF_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `RF_Tree_3_0` ON `RF_Tree_3_0`.join_key_3_0 = `RF_Tree_2_0`.join_key_2_0), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0_0 AS `KEY`, 480.649887808 + 0.1 * `RF_Join_CTE`.`Estimator_0_0` + 0.1 * `RF_Join_CTE`.`Estimator_1_0` + 0.1 * `RF_Join_CTE`.`Estimator_2_0` + 0.1 * `RF_Join_CTE`.`Estimator_3_0` AS `Estimator` 
FROM `RF_Join_CTE`)
 SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `RF_AVG_Scores`