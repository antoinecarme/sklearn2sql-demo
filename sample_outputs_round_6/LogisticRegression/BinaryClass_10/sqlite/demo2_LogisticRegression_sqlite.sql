-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH linear_model_cte AS 
(SELECT "ADS"."KEY" AS "KEY", 0.010604119341249899 * "ADS"."Feature_0" + 0.21928286971191802 * "ADS"."Feature_1" + 2.8290851936221184 * "ADS"."Feature_2" + 0.13562745685411468 * "ADS"."Feature_3" + 0.7403783196182175 * "ADS"."Feature_4" + 0.17979766979872192 * "ADS"."Feature_5" + 0.10890477335253095 * "ADS"."Feature_6" + -0.29787611831223837 * "ADS"."Feature_7" + 0.3755184442778413 * "ADS"."Feature_8" + -0.2592136067010768 * "ADS"."Feature_9" + 0.159175205789 AS linear_combination 
FROM "BinaryClass_10" AS "ADS")
 SELECT linear_model_cte."KEY" AS "KEY", -linear_model_cte.linear_combination AS "Score_0", linear_model_cte.linear_combination AS "Score_1", 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) AS "Proba_0", 1.0 - 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) AS "Proba_1", CASE WHEN (1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) IS NULL OR 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) > 0.0) THEN ln(1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination)))) ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (1.0 - 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) IS NULL OR 1.0 - 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination))) > 0.0) THEN ln(1.0 - 1.0 / (1.0 + exp(-(-linear_model_cte.linear_combination)))) ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (linear_model_cte.linear_combination >= 0.0) THEN 1 ELSE 0 END AS "Decision" 
FROM linear_model_cte