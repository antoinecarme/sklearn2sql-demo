-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `IL` AS 
(SELECT `ADS`.`KEY` AS `KEY`, `ADS`.`Feature_0` AS `Feature_0`, `ADS`.`Feature_1` AS `Feature_1`, `ADS`.`Feature_2` AS `Feature_2`, `ADS`.`Feature_3` AS `Feature_3`, `ADS`.`Feature_4` AS `Feature_4`, `ADS`.`Feature_5` AS `Feature_5`, `ADS`.`Feature_6` AS `Feature_6`, `ADS`.`Feature_7` AS `Feature_7`, `ADS`.`Feature_8` AS `Feature_8`, `ADS`.`Feature_9` AS `Feature_9`, `ADS`.`Feature_10` AS `Feature_10`, `ADS`.`Feature_11` AS `Feature_11`, `ADS`.`Feature_12` AS `Feature_12`, `ADS`.`Feature_13` AS `Feature_13`, `ADS`.`Feature_14` AS `Feature_14`, `ADS`.`Feature_15` AS `Feature_15`, `ADS`.`Feature_16` AS `Feature_16`, `ADS`.`Feature_17` AS `Feature_17`, `ADS`.`Feature_18` AS `Feature_18`, `ADS`.`Feature_19` AS `Feature_19`, `ADS`.`Feature_20` AS `Feature_20`, `ADS`.`Feature_21` AS `Feature_21`, `ADS`.`Feature_22` AS `Feature_22`, `ADS`.`Feature_23` AS `Feature_23`, `ADS`.`Feature_24` AS `Feature_24`, `ADS`.`Feature_25` AS `Feature_25`, `ADS`.`Feature_26` AS `Feature_26`, `ADS`.`Feature_27` AS `Feature_27`, `ADS`.`Feature_28` AS `Feature_28`, `ADS`.`Feature_29` AS `Feature_29` 
FROM `BreastCancer` AS `ADS`), 
`HL_BA_1` AS 
(SELECT `IL`.`KEY` AS `KEY`, -0.0619825999904 * `IL`.`Feature_0` + -0.272340220343 * `IL`.`Feature_1` + -0.337302781864 * `IL`.`Feature_2` + -0.377223184862 * `IL`.`Feature_3` + 0.160089929978 * `IL`.`Feature_4` + 0.331261769019 * `IL`.`Feature_5` + -0.16806085103 * `IL`.`Feature_6` + -0.03416787379 * `IL`.`Feature_7` + -0.0135855516356 * `IL`.`Feature_8` + -0.148225702891 * `IL`.`Feature_9` + -0.199566697048 * `IL`.`Feature_10` + -0.364660067281 * `IL`.`Feature_11` + 0.0546968262136 * `IL`.`Feature_12` + 0.327512552587 * `IL`.`Feature_13` + 0.213299129583 * `IL`.`Feature_14` + 0.171956400826 * `IL`.`Feature_15` + -0.105823849226 * `IL`.`Feature_16` + -0.392136389314 * `IL`.`Feature_17` + -0.33927875679 * `IL`.`Feature_18` + -0.106163209287 * `IL`.`Feature_19` + -0.413591075671 * `IL`.`Feature_20` + 0.325176956185 * `IL`.`Feature_21` + 0.214457560658 * `IL`.`Feature_22` + -0.353817627781 * `IL`.`Feature_23` + 0.24817489621 * `IL`.`Feature_24` + -0.00754946993423 * `IL`.`Feature_25` + 0.226456980426 * `IL`.`Feature_26` + 0.00151597565049 * `IL`.`Feature_27` + -0.249205707331 * `IL`.`Feature_28` + 0.203360656625 * `IL`.`Feature_29` + 0.259260350984 AS `NEUR_1_1`, 0.0848270848002 * `IL`.`Feature_0` + 0.00866554115886 * `IL`.`Feature_1` + -0.251282867744 * `IL`.`Feature_2` + 0.305436782612 * `IL`.`Feature_3` + 0.119101812543 * `IL`.`Feature_4` + 0.319479959295 * `IL`.`Feature_5` + -0.190426578046 * `IL`.`Feature_6` + -0.407355295561 * `IL`.`Feature_7` + 0.359471617653 * `IL`.`Feature_8` + -0.060219194052 * `IL`.`Feature_9` + -0.260557591701 * `IL`.`Feature_10` + -0.0733277652387 * `IL`.`Feature_11` + -0.306003594105 * `IL`.`Feature_12` + 0.228410273644 * `IL`.`Feature_13` + 0.0391666107887 * `IL`.`Feature_14` + -0.20020678531 * `IL`.`Feature_15` + 0.123439020967 * `IL`.`Feature_16` + -0.272666320099 * `IL`.`Feature_17` + 0.0680980149754 * `IL`.`Feature_18` + 0.263594453096 * `IL`.`Feature_19` + -0.423442445664 * `IL`.`Feature_20` + -0.00354375214595 * `IL`.`Feature_21` + -0.298523814176 * `IL`.`Feature_22` + 0.091113597676 * `IL`.`Feature_23` + 0.194638787635 * `IL`.`Feature_24` + -0.0666471853072 * `IL`.`Feature_25` + 0.0916576990449 * `IL`.`Feature_26` + 0.250496242186 * `IL`.`Feature_27` + -0.0488263381774 * `IL`.`Feature_28` + -0.372721261734 * `IL`.`Feature_29` + -0.0432445569564 AS `NEUR_1_2`, 0.402632418826 * `IL`.`Feature_0` + -0.278915057988 * `IL`.`Feature_1` + 0.216780113976 * `IL`.`Feature_2` + 0.00995208867832 * `IL`.`Feature_3` + -0.272902313277 * `IL`.`Feature_4` + -0.148073832464 * `IL`.`Feature_5` + 0.272651545926 * `IL`.`Feature_6` + -0.255492131065 * `IL`.`Feature_7` + -0.318057424873 * `IL`.`Feature_8` + 0.357095851356 * `IL`.`Feature_9` + -0.00514779094749 * `IL`.`Feature_10` + 0.00150098907756 * `IL`.`Feature_11` + 0.291010056284 * `IL`.`Feature_12` + -0.250448457163 * `IL`.`Feature_13` + -0.379023153766 * `IL`.`Feature_14` + -0.32441052629 * `IL`.`Feature_15` + 0.0854067842346 * `IL`.`Feature_16` + -0.0423840845151 * `IL`.`Feature_17` + 0.298835964126 * `IL`.`Feature_18` + -0.0489637073137 * `IL`.`Feature_19` + -0.137668152703 * `IL`.`Feature_20` + 0.193201443209 * `IL`.`Feature_21` + -0.435234906838 * `IL`.`Feature_22` + 0.1752641387 * `IL`.`Feature_23` + 0.414755424875 * `IL`.`Feature_24` + 0.0933008584154 * `IL`.`Feature_25` + 0.166992505262 * `IL`.`Feature_26` + 0.398993030306 * `IL`.`Feature_27` + 0.141533407528 * `IL`.`Feature_28` + 0.134249811198 * `IL`.`Feature_29` + -0.369974602401 AS `NEUR_1_3` 
FROM `IL`), 
`HL_1_relu` AS 
(SELECT `HL_BA_1`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_1`.`NEUR_1_1` >= 0.0) THEN `HL_BA_1`.`NEUR_1_1` ELSE 0.0 END AS `NEUR_1_1`, CASE WHEN (`HL_BA_1`.`NEUR_1_2` >= 0.0) THEN `HL_BA_1`.`NEUR_1_2` ELSE 0.0 END AS `NEUR_1_2`, CASE WHEN (`HL_BA_1`.`NEUR_1_3` >= 0.0) THEN `HL_BA_1`.`NEUR_1_3` ELSE 0.0 END AS `NEUR_1_3` 
FROM `HL_BA_1`), 
`HL_BA_2` AS 
(SELECT `HL_1_relu`.`KEY` AS `KEY`, 0.557001767001 * `HL_1_relu`.`NEUR_1_1` + -0.631851175705 * `HL_1_relu`.`NEUR_1_2` + -0.60279418365 * `HL_1_relu`.`NEUR_1_3` + -0.088584894897 AS `NEUR_2_1`, -0.611714718115 * `HL_1_relu`.`NEUR_1_1` + -0.780145522617 * `HL_1_relu`.`NEUR_1_2` + -0.2035282017 * `HL_1_relu`.`NEUR_1_3` + 0.726167810184 AS `NEUR_2_2`, 0.318166539173 * `HL_1_relu`.`NEUR_1_1` + 0.24520743269 * `HL_1_relu`.`NEUR_1_2` + -0.855166163713 * `HL_1_relu`.`NEUR_1_3` + 0.56392377333 AS `NEUR_2_3`, -0.842190178962 * `HL_1_relu`.`NEUR_1_1` + -0.422301188001 * `HL_1_relu`.`NEUR_1_2` + 0.198858112578 * `HL_1_relu`.`NEUR_1_3` + 0.703327735397 AS `NEUR_2_4`, -0.694808340332 * `HL_1_relu`.`NEUR_1_1` + -0.269531633431 * `HL_1_relu`.`NEUR_1_2` + -0.661736474117 * `HL_1_relu`.`NEUR_1_3` + -0.815750113658 AS `NEUR_2_5` 
FROM `HL_1_relu`), 
`HL_2_relu` AS 
(SELECT `HL_BA_2`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_2`.`NEUR_2_1` >= 0.0) THEN `HL_BA_2`.`NEUR_2_1` ELSE 0.0 END AS `NEUR_2_1`, CASE WHEN (`HL_BA_2`.`NEUR_2_2` >= 0.0) THEN `HL_BA_2`.`NEUR_2_2` ELSE 0.0 END AS `NEUR_2_2`, CASE WHEN (`HL_BA_2`.`NEUR_2_3` >= 0.0) THEN `HL_BA_2`.`NEUR_2_3` ELSE 0.0 END AS `NEUR_2_3`, CASE WHEN (`HL_BA_2`.`NEUR_2_4` >= 0.0) THEN `HL_BA_2`.`NEUR_2_4` ELSE 0.0 END AS `NEUR_2_4`, CASE WHEN (`HL_BA_2`.`NEUR_2_5` >= 0.0) THEN `HL_BA_2`.`NEUR_2_5` ELSE 0.0 END AS `NEUR_2_5` 
FROM `HL_BA_2`), 
`OL_BA` AS 
(SELECT `HL_2_relu`.`KEY` AS `KEY`, 0.178018536799 * `HL_2_relu`.`NEUR_2_1` + -0.137536222071 * `HL_2_relu`.`NEUR_2_2` + 0.811744071277 * `HL_2_relu`.`NEUR_2_3` + -0.0152761595601 * `HL_2_relu`.`NEUR_2_4` + 0.379375834741 * `HL_2_relu`.`NEUR_2_5` + 0.588596796439 AS `NEUR_3_1` 
FROM `HL_2_relu`), 
`OL_logistic` AS 
(SELECT `OL_BA`.`KEY` AS `KEY`, 1.0 / (1.0 + exp(-`OL_BA`.`NEUR_3_1`)) AS `NEUR_3_1` 
FROM `OL_BA`), 
orig_cte AS 
(SELECT `OL_logistic`.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, 1.0 - `OL_logistic`.`NEUR_3_1` AS `Proba_0`, `OL_logistic`.`NEUR_3_1` AS `Proba_1`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `Decision` 
FROM `OL_logistic`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.`max_LogProba` = score_class_union.`LogProba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.`max_Proba` = score_class_union.`Proba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.`max_Score` = score_class_union.`Score` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score` 
FROM score_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, arg_max_cte.`arg_max_Proba` AS `Decision` 
FROM arg_max_cte