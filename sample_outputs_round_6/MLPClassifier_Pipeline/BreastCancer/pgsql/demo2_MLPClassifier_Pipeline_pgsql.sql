-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 14.0831968504 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 19.0191076115 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 91.7118897638 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 652.424671916 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0968055380577 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.104805485564 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0876977427822 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.0489006430446 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.18112335958 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0630376115486 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.410748293963 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 1.21939501312 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 2.90654488189 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 41.1231023622 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.00706835170604 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.025598015748 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.0315339183727 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 0.0119848766404 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.0207874829396 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.00389341286089 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 16.1808923885 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 25.2414435696 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 106.690393701 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 872.238582677 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.132393937008 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.251353989501 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.263815637795 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.114107792651 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.288911286089 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.0838917060367 ELSE "ADS"."Feature_29" END AS impter_31 
FROM "BreastCancer" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 14.0831968504) / 3.58372360357 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 19.0191076115) / 4.16872919973 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 91.7118897638) / 24.7405030131 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 652.424671916) / 361.406340946 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0968055380577) / 0.0142750282315 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.104805485564) / 0.052564640227 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.0876977427822) / 0.0789716395799 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.0489006430446) / 0.0390994514233 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.18112335958) / 0.0277256176537 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.0630376115486) / 0.00705628740437 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.410748293963) / 0.299028974585 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 1.21939501312) / 0.554118745057 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 2.90654488189) / 2.19671897682 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 41.1231023622) / 50.0238619245 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.00706835170604) / 0.00286192611154 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.025598015748) / 0.0177969043718 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.0315339183727) / 0.0294145736829 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 0.0119848766404) / 0.00634557179163 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.0207874829396) / 0.00846130427006 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 0.00389341286089) / 0.00282534669377 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 16.1808923885) / 4.8559275363 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 25.2414435696) / 6.00010024108 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 106.690393701) / 33.9442803133 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 872.238582677) / 572.065477877 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.132393937008) / 0.0230922755997 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.251353989501) / 0.15283768085 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.263815637795) / 0.197727633616 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.114107792651) / 0.0658849454932 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.288911286089) / 0.060405414696 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.0838917060367) / 0.0170341598582 AS scaler_31 
FROM "ADS_imp_1_OUT"), 
"IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", "ADS_sca_2_OUT".scaler_2 AS scaler_2, "ADS_sca_2_OUT".scaler_3 AS scaler_3, "ADS_sca_2_OUT".scaler_4 AS scaler_4, "ADS_sca_2_OUT".scaler_5 AS scaler_5, "ADS_sca_2_OUT".scaler_6 AS scaler_6, "ADS_sca_2_OUT".scaler_7 AS scaler_7, "ADS_sca_2_OUT".scaler_8 AS scaler_8, "ADS_sca_2_OUT".scaler_9 AS scaler_9, "ADS_sca_2_OUT".scaler_10 AS scaler_10, "ADS_sca_2_OUT".scaler_11 AS scaler_11, "ADS_sca_2_OUT".scaler_12 AS scaler_12, "ADS_sca_2_OUT".scaler_13 AS scaler_13, "ADS_sca_2_OUT".scaler_14 AS scaler_14, "ADS_sca_2_OUT".scaler_15 AS scaler_15, "ADS_sca_2_OUT".scaler_16 AS scaler_16, "ADS_sca_2_OUT".scaler_17 AS scaler_17, "ADS_sca_2_OUT".scaler_18 AS scaler_18, "ADS_sca_2_OUT".scaler_19 AS scaler_19, "ADS_sca_2_OUT".scaler_20 AS scaler_20, "ADS_sca_2_OUT".scaler_21 AS scaler_21, "ADS_sca_2_OUT".scaler_22 AS scaler_22, "ADS_sca_2_OUT".scaler_23 AS scaler_23, "ADS_sca_2_OUT".scaler_24 AS scaler_24, "ADS_sca_2_OUT".scaler_25 AS scaler_25, "ADS_sca_2_OUT".scaler_26 AS scaler_26, "ADS_sca_2_OUT".scaler_27 AS scaler_27, "ADS_sca_2_OUT".scaler_28 AS scaler_28, "ADS_sca_2_OUT".scaler_29 AS scaler_29, "ADS_sca_2_OUT".scaler_30 AS scaler_30, "ADS_sca_2_OUT".scaler_31 AS scaler_31 
FROM "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.435570788863 * "IL".scaler_2 + -0.47064744302 * "IL".scaler_3 + 0.168585466476 * "IL".scaler_4 + -0.0809633623269 * "IL".scaler_5 + 0.388620726919 * "IL".scaler_6 + 1.24684883714 * "IL".scaler_7 + -0.968189201176 * "IL".scaler_8 + -0.591716583003 * "IL".scaler_9 + -0.622512179774 * "IL".scaler_10 + -0.496206076497 * "IL".scaler_11 + -2.29637517844 * "IL".scaler_12 + 0.87298374493 * "IL".scaler_13 + -1.34495538467 * "IL".scaler_14 + -0.663501828082 * "IL".scaler_15 + 3.42726587411 * "IL".scaler_16 + 1.98256040372 * "IL".scaler_17 + 0.146973627709 * "IL".scaler_18 + -0.681472611953 * "IL".scaler_19 + 2.4064163325 * "IL".scaler_20 + 0.942868938827 * "IL".scaler_21 + -1.02386278723 * "IL".scaler_22 + -1.38047376793 * "IL".scaler_23 + -0.318549519109 * "IL".scaler_24 + -0.93460092143 * "IL".scaler_25 + -0.406735470767 * "IL".scaler_26 + -0.657422343197 * "IL".scaler_27 + -1.87950483237 * "IL".scaler_28 + -1.886439561 * "IL".scaler_29 + -1.68788918981 * "IL".scaler_30 + -0.894394231525 * "IL".scaler_31 + 0.874468583377 AS "NEUR_1_1", 0.00366317811214 * "IL".scaler_2 + 0.467309450502 * "IL".scaler_3 + -0.309369099028 * "IL".scaler_4 + -0.444403206358 * "IL".scaler_5 + -0.138478405855 * "IL".scaler_6 + 0.880977362111 * "IL".scaler_7 + -1.52250375107 * "IL".scaler_8 + -1.69047531453 * "IL".scaler_9 + 1.13092090625 * "IL".scaler_10 + -0.804892267744 * "IL".scaler_11 + -3.45644300753 * "IL".scaler_12 + -0.93002648482 * "IL".scaler_13 + -2.09016169188 * "IL".scaler_14 + -1.86323016593 * "IL".scaler_15 + 1.89263245704 * "IL".scaler_16 + 2.00215687972 * "IL".scaler_17 + 0.450142508467 * "IL".scaler_18 + 0.412860355419 * "IL".scaler_19 + 0.451788332059 * "IL".scaler_20 + 1.97981486657 * "IL".scaler_21 + -1.55970988848 * "IL".scaler_22 + -1.43236478921 * "IL".scaler_23 + -1.08892163758 * "IL".scaler_24 + -1.52725021486 * "IL".scaler_25 + -0.343813415245 * "IL".scaler_26 + 0.570423233219 * "IL".scaler_27 + -1.20017767894 * "IL".scaler_28 + -0.617023602202 * "IL".scaler_29 + -0.42308074969 * "IL".scaler_30 + 0.106636796123 * "IL".scaler_31 + 4.26213812554 AS "NEUR_1_2", 1.2721421736 * "IL".scaler_2 + 2.35257499837 * "IL".scaler_3 + 1.10016231554 * "IL".scaler_4 + 1.23099800245 * "IL".scaler_5 + 0.317608525491 * "IL".scaler_6 + 0.437315254913 * "IL".scaler_7 + 3.2858162773 * "IL".scaler_8 + 2.72640836764 * "IL".scaler_9 + 1.23298620905 * "IL".scaler_10 + -0.228207877309 * "IL".scaler_11 + 2.72906636415 * "IL".scaler_12 + -0.77388714576 * "IL".scaler_13 + 2.04190690846 * "IL".scaler_14 + 2.15514403256 * "IL".scaler_15 + -0.450606746152 * "IL".scaler_16 + -1.00425380811 * "IL".scaler_17 + 0.828455058041 * "IL".scaler_18 + 1.49030227556 * "IL".scaler_19 + 1.79259453375 * "IL".scaler_20 + -1.49155759292 * "IL".scaler_21 + 1.76407895031 * "IL".scaler_22 + 2.81578326591 * "IL".scaler_23 + 1.20887606484 * "IL".scaler_24 + 2.26058278851 * "IL".scaler_25 + 1.95132380558 * "IL".scaler_26 + -0.0360434926183 * "IL".scaler_27 + 2.63636277746 * "IL".scaler_28 + 3.51921660682 * "IL".scaler_29 + 2.71421656196 * "IL".scaler_30 + -0.593665339987 * "IL".scaler_31 + -0.304483184459 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", 0.498240934253 * "HL_1_relu"."NEUR_1_1" + -0.570714258285 * "HL_1_relu"."NEUR_1_2" + -0.646959017393 * "HL_1_relu"."NEUR_1_3" + 0.299670381658 AS "NEUR_2_1", -1.05886824343 * "HL_1_relu"."NEUR_1_1" + -1.00948777672 * "HL_1_relu"."NEUR_1_2" + 0.575047429666 * "HL_1_relu"."NEUR_1_3" + 0.229643526312 AS "NEUR_2_2", -1.07539721194 * "HL_1_relu"."NEUR_1_1" + 5.65413219236 * "HL_1_relu"."NEUR_1_2" + -1.29447841102 * "HL_1_relu"."NEUR_1_3" + 1.06731899571 AS "NEUR_2_3", -0.95316607227 * "HL_1_relu"."NEUR_1_1" + -0.0743750457649 * "HL_1_relu"."NEUR_1_2" + 4.47169204113 * "HL_1_relu"."NEUR_1_3" + 0.235445726452 AS "NEUR_2_4", -0.694749212379 * "HL_1_relu"."NEUR_1_1" + -0.269508696381 * "HL_1_relu"."NEUR_1_2" + -0.661680160569 * "HL_1_relu"."NEUR_1_3" + -0.815750113658 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -2.18254387321 * "HL_2_relu"."NEUR_2_1" + -1.53872983124 * "HL_2_relu"."NEUR_2_2" + 3.66898042009 * "HL_2_relu"."NEUR_2_3" + -4.79040446977 * "HL_2_relu"."NEUR_2_4" + 0.379343549987 * "HL_2_relu"."NEUR_2_5" + -2.4680591673 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_logistic" AS 
(SELECT "OL_BA"."KEY" AS "KEY", 1.0 / (1.0 + exp(-"OL_BA"."NEUR_3_1")) AS "NEUR_3_1" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL_logistic"."KEY" AS "KEY", CAST(NULL AS FLOAT(53)) AS "Score_0", CAST(NULL AS FLOAT(53)) AS "Score_1", 1.0 - "OL_logistic"."NEUR_3_1" AS "Proba_0", "OL_logistic"."NEUR_3_1" AS "Proba_1", CAST(NULL AS FLOAT(53)) AS "LogProba_0", CAST(NULL AS FLOAT(53)) AS "LogProba_1", CAST(NULL AS FLOAT(53)) AS "Decision" 
FROM "OL_logistic"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte