-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9" 
FROM "RandomReg_10" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -5.22932728214 * "IL"."Feature_0" + 3.74775294468 * "IL"."Feature_1" + -1.69144340836 * "IL"."Feature_2" + -6.6269259208 * "IL"."Feature_3" + -2.6973046903 * "IL"."Feature_4" + -4.25438282243 * "IL"."Feature_5" + -1.66642490708 * "IL"."Feature_6" + -9.44582363186 * "IL"."Feature_7" + -2.4943391429 * "IL"."Feature_8" + -4.04145139959 * "IL"."Feature_9" + -12.4576917341 AS "NEUR_1_1", -35.6344756763 * "IL"."Feature_0" + -35.2608115197 * "IL"."Feature_1" + -15.1239551992 * "IL"."Feature_2" + -19.3573753607 * "IL"."Feature_3" + -37.7408733231 * "IL"."Feature_4" + -15.7302407972 * "IL"."Feature_5" + -35.3721887129 * "IL"."Feature_6" + -45.1953502878 * "IL"."Feature_7" + 2.20626061551 * "IL"."Feature_8" + -22.2170798576 * "IL"."Feature_9" + 40.0237015361 AS "NEUR_1_2", 12.53486824 * "IL"."Feature_0" + -0.356988034441 * "IL"."Feature_1" + 0.565320283948 * "IL"."Feature_2" + -3.68755773638 * "IL"."Feature_3" + 19.4519108583 * "IL"."Feature_4" + 9.01116228587 * "IL"."Feature_5" + 6.94906850148 * "IL"."Feature_6" + 1.11848298525 * "IL"."Feature_7" + 5.91718162519 * "IL"."Feature_8" + -15.6400355724 * "IL"."Feature_9" + 2.89448923726 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -2.34620086957 * "HL_1_relu"."NEUR_1_1" + 10.1217498531 * "HL_1_relu"."NEUR_1_2" + -10.2989979697 * "HL_1_relu"."NEUR_1_3" + 0.562023116044 AS "NEUR_2_1", -5.78827350628 * "HL_1_relu"."NEUR_1_1" + 22.1471253993 * "HL_1_relu"."NEUR_1_2" + -21.0991923435 * "HL_1_relu"."NEUR_1_3" + -28.8428322446 AS "NEUR_2_2", -6.27498593675 * "HL_1_relu"."NEUR_1_1" + -0.19792330097 * "HL_1_relu"."NEUR_1_2" + -20.2143762295 * "HL_1_relu"."NEUR_1_3" + -3.01252503096 AS "NEUR_2_3", 0.111089757123 * "HL_1_relu"."NEUR_1_1" + -0.504739932532 * "HL_1_relu"."NEUR_1_2" + -0.406629488142 * "HL_1_relu"."NEUR_1_3" + -0.796433042434 AS "NEUR_2_4", -0.897000034236 * "HL_1_relu"."NEUR_1_1" + 4.36185873815 * "HL_1_relu"."NEUR_1_2" + -0.0259740018805 * "HL_1_relu"."NEUR_1_3" + 1.03181598371 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -8.63008036029 * "HL_2_relu"."NEUR_2_1" + 4.22003962422 * "HL_2_relu"."NEUR_2_2" + -0.649687217954 * "HL_2_relu"."NEUR_2_3" + 0.700838090492 * "HL_2_relu"."NEUR_2_4" + -1.80778559401 * "HL_2_relu"."NEUR_2_5" + 184.776831142 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"