-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9" 
FROM diabetes AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.098753247436 * "IL"."Feature_0" + -0.433903727343 * "IL"."Feature_1" + -0.537404773007 * "IL"."Feature_2" + -0.601007613734 * "IL"."Feature_3" + 0.255061912046 * "IL"."Feature_4" + 0.527779980948 * "IL"."Feature_5" + -0.267761513854 * "IL"."Feature_6" + -0.0544376727544 * "IL"."Feature_7" + -0.0216450639765 * "IL"."Feature_8" + -0.236159333688 * "IL"."Feature_9" + -0.317960748727 AS "NEUR_1_1", 0.13157877384 * "IL"."Feature_0" + 0.00842809429513 * "IL"."Feature_1" + -0.423189756963 * "IL"."Feature_2" + 0.360299035827 * "IL"."Feature_3" + 0.1897298252 * "IL"."Feature_4" + 0.508986608608 * "IL"."Feature_5" + -0.303405017943 * "IL"."Feature_6" + -0.649020864926 * "IL"."Feature_7" + 0.572672444306 * "IL"."Feature_8" + -0.0959630244379 * "IL"."Feature_9" + -0.415209573684 AS "NEUR_1_2", 8.57909910625 * "IL"."Feature_0" + -31.8547368226 * "IL"."Feature_1" + 86.7622597303 * "IL"."Feature_2" + 47.1565079552 * "IL"."Feature_3" + -50.1395016148 * "IL"."Feature_4" + 21.1494990661 * "IL"."Feature_5" + -25.8869090075 * "IL"."Feature_6" + 2.04120198088 * "IL"."Feature_7" + 104.083051386 * "IL"."Feature_8" + 34.9360050332 * "IL"."Feature_9" + 9.48560933434 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.740621792366 * "HL_1_relu"."NEUR_1_1" + 0.591458598385 * "HL_1_relu"."NEUR_1_2" + -1.9506960995 * "HL_1_relu"."NEUR_1_3" + -1.05783919205 AS "NEUR_2_1", -0.149391903894 * "HL_1_relu"."NEUR_1_1" + 0.665175475693 * "HL_1_relu"."NEUR_1_2" + -1.24391751044 * "HL_1_relu"."NEUR_1_3" + -22.0914539975 AS "NEUR_2_2", 0.00334509593953 * "HL_1_relu"."NEUR_1_1" + 0.457765066932 * "HL_1_relu"."NEUR_1_2" + 0.293241855329 * "HL_1_relu"."NEUR_1_3" + 0.734021344702 AS "NEUR_2_3", 0.111088833414 * "HL_1_relu"."NEUR_1_1" + -0.504735735633 * "HL_1_relu"."NEUR_1_2" + -0.406626107028 * "HL_1_relu"."NEUR_1_3" + -0.796433042434 AS "NEUR_2_4", -0.622146760084 * "HL_1_relu"."NEUR_1_1" + 0.433208891887 * "HL_1_relu"."NEUR_1_2" + -0.658870381714 * "HL_1_relu"."NEUR_1_3" + -0.553791628092 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 5.61015420487 * "HL_2_relu"."NEUR_2_1" + 5.78498337475 * "HL_2_relu"."NEUR_2_2" + 20.7718634948 * "HL_2_relu"."NEUR_2_3" + 0.700832263042 * "HL_2_relu"."NEUR_2_4" + -0.248972675294 * "HL_2_relu"."NEUR_2_5" + 72.0937094691 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"