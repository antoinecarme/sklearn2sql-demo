-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9" 
FROM freidman1 "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.0987489012744 * "IL"."Feature_0" + -0.433884631103 * "IL"."Feature_1" + -0.537381121654 * "IL"."Feature_2" + -0.6009811632 * "IL"."Feature_3" + 0.255050686691 * "IL"."Feature_4" + 0.527756753184 * "IL"."Feature_5" + -0.267749729586 * "IL"."Feature_6" + -0.0544352769353 * "IL"."Feature_7" + -0.0216441113704 * "IL"."Feature_8" + -0.236148940241 * "IL"."Feature_9" + -0.317960748727 AS "NEUR_1_1", 1.04655157819 * "IL"."Feature_0" + 0.615050152404 * "IL"."Feature_1" + -3.87730560074 * "IL"."Feature_2" + 1.08670305909 * "IL"."Feature_3" + -1.38380322036 * "IL"."Feature_4" + -0.123810536904 * "IL"."Feature_5" + -0.706657215577 * "IL"."Feature_6" + 0.143294308834 * "IL"."Feature_7" + -1.42736703002 * "IL"."Feature_8" + -0.12405411459 * "IL"."Feature_9" + 1.03448534265 AS "NEUR_1_2", 2.17034865513 * "IL"."Feature_0" + 2.36406141032 * "IL"."Feature_1" + 0.547023482257 * "IL"."Feature_2" + 2.59219000519 * "IL"."Feature_3" + 1.58656619167 * "IL"."Feature_4" + -0.00321128730705 * "IL"."Feature_5" + 0.147457182734 * "IL"."Feature_6" + 0.085295498276 * "IL"."Feature_7" + -0.0554816137396 * "IL"."Feature_8" + -0.519351944944 * "IL"."Feature_9" + -0.417961204681 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.740589197368 * "HL_1_relu"."NEUR_1_1" + 0.577653376864 * "HL_1_relu"."NEUR_1_2" + -0.182561261738 * "HL_1_relu"."NEUR_1_3" + -0.315527123664 AS "NEUR_2_1", -0.14938532911 * "HL_1_relu"."NEUR_1_1" + 0.612104794133 * "HL_1_relu"."NEUR_1_2" + -0.840319254258 * "HL_1_relu"."NEUR_1_3" + -0.719962358603 AS "NEUR_2_2", 0.0033449487208 * "HL_1_relu"."NEUR_1_1" + 2.67392920124 * "HL_1_relu"."NEUR_1_2" + 2.87741480909 * "HL_1_relu"."NEUR_1_3" + -0.454586423964 AS "NEUR_2_3", 0.11108394436 * "HL_1_relu"."NEUR_1_1" + -0.504713522054 * "HL_1_relu"."NEUR_1_2" + -0.406608211285 * "HL_1_relu"."NEUR_1_3" + -0.796433042434 AS "NEUR_2_4", -0.622119379209 * "HL_1_relu"."NEUR_1_1" + 0.433189826227 * "HL_1_relu"."NEUR_1_2" + -0.658841384621 * "HL_1_relu"."NEUR_1_3" + -0.553791628092 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.122778242994 * "HL_2_relu"."NEUR_2_1" + -0.513747940309 * "HL_2_relu"."NEUR_2_2" + 1.37737259417 * "HL_2_relu"."NEUR_2_3" + 0.700801419193 * "HL_2_relu"."NEUR_2_4" + -0.248961717928 * "HL_2_relu"."NEUR_2_5" + -1.22631497171 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"