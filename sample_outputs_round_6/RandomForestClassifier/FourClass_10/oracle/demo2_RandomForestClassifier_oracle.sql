-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_7" <= -1.1592856645584106) THEN CASE WHEN ("ADS"."Feature_6" <= -0.6080532073974609) THEN 2 ELSE CASE WHEN ("ADS"."Feature_1" <= -0.5051789283752441) THEN 4 ELSE CASE WHEN ("ADS"."Feature_9" <= -0.19985118508338928) THEN 6 ELSE 7 END END END ELSE CASE WHEN ("ADS"."Feature_5" <= 0.04685312137007713) THEN CASE WHEN ("ADS"."Feature_2" <= -0.6128267049789429) THEN CASE WHEN ("ADS"."Feature_8" <= -1.0031431913375854) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.7060255408287048) THEN CASE WHEN ("ADS"."Feature_2" <= -0.4222528636455536) THEN 15 ELSE CASE WHEN ("ADS"."Feature_1" <= -0.16651779413223267) THEN CASE WHEN ("ADS"."Feature_9" <= 0.22792434692382812) THEN 18 ELSE CASE WHEN ("ADS"."Feature_9" <= 0.38241636753082275) THEN 20 ELSE 21 END END ELSE 22 END END ELSE CASE WHEN ("ADS"."Feature_3" <= -0.3177856206893921) THEN CASE WHEN ("ADS"."Feature_5" <= -1.128724217414856) THEN 25 ELSE 26 END ELSE 27 END END END ELSE CASE WHEN ("ADS"."Feature_6" <= -0.3561704456806183) THEN 29 ELSE CASE WHEN ("ADS"."Feature_4" <= -0.3362274765968323) THEN 31 ELSE CASE WHEN ("ADS"."Feature_3" <= 1.7484111785888672) THEN 33 ELSE CASE WHEN ("ADS"."Feature_2" <= -0.574722170829773) THEN 35 ELSE 36 END END END END END END AS node_id_2 
FROM "FourClass_10" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_7' AS feature, -1.1592856645584106 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29850746268656714 AS "Proba_0.0", -1.20896034584 AS "LogProba_0.0", 0.208955223880597 AS "Proba_1.0", -1.56563528978 AS "LogProba_1.0", 0.26865671641791045 AS "Proba_2.0", -1.31432086149 AS "LogProba_2.0", 0.22388059701492538 AS "Proba_3.0", -1.49664241829 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, -0.6080532073974609 AS threshold, 9 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.058823529411764705 AS "Proba_1.0", -2.83321334406 AS "LogProba_1.0", 0.5882352941176471 AS "Proba_2.0", -0.530628251062 AS "LogProba_2.0", 0.35294117647058826 AS "Proba_3.0", -1.04145387483 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, -0.5051789283752441 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.1111111111111111 AS "Proba_1.0", -2.19722457734 AS "LogProba_1.0", 0.2222222222222222 AS "Proba_2.0", -1.50407739678 AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, -0.19985118508338928 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8571428571428571 AS "Proba_3.0", -0.154150679827 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_5' AS feature, 0.04685312137007713 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.26 AS "Proba_1.0", -1.34707364797 AS "LogProba_1.0", 0.16 AS "Proba_2.0", -1.83258146375 AS "LogProba_2.0", 0.18 AS "Proba_3.0", -1.71479842809 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_2' AS feature, -0.6128267049789429 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.48148148148148145 AS "Proba_1.0", -0.730887508543 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.18518518518518517 AS "Proba_3.0", -1.68639895357 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_8' AS feature, -1.0031431913375854 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.8333333333333334 AS "Proba_1.0", -0.182321556794 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_3' AS feature, -0.7060255408287048 AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.38095238095238093 AS "Proba_1.0", -0.965080896044 AS "LogProba_1.0", 0.14285714285714285 AS "Proba_2.0", -1.94591014906 AS "LogProba_2.0", 0.19047619047619047 AS "Proba_3.0", -1.6582280766 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_2' AS feature, -0.4222528636455536 AS threshold, 12 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3125 AS "Proba_0.0", -1.16315080981 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.1875 AS "Proba_2.0", -1.67397643357 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_1' AS feature, -0.16651779413223267 AS threshold, 11 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15384615384615385 AS "Proba_0.0", -1.8718021769 AS "LogProba_0.0", 0.6153846153846154 AS "Proba_1.0", -0.485507815782 AS "LogProba_1.0", 0.23076923076923078 AS "Proba_2.0", -1.46633706879 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, 'Feature_9' AS feature, 0.22792434692382812 AS threshold, 6 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.2857142857142857 AS "Proba_1.0", -1.2527629685 AS "LogProba_1.0", 0.42857142857142855 AS "Proba_2.0", -0.847297860387 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_9' AS feature, 0.38241636753082275 AS threshold, 3 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, 'Feature_3' AS feature, -0.3177856206893921 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8 AS "Proba_3.0", -0.223143551314 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, 'Feature_5' AS feature, -1.128724217414856 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, 'Feature_6' AS feature, -0.3561704456806183 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6086956521739131 AS "Proba_0.0", -0.496436886314 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.21739130434782608 AS "Proba_2.0", -1.5260563035 AS "LogProba_2.0", 0.17391304347826086 AS "Proba_3.0", -1.74919985481 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 30 AS node_id, 'Feature_4' AS feature, -0.3362274765968323 AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7777777777777778 AS "Proba_0.0", -0.251314428281 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.2222222222222222 AS "Proba_3.0", -1.50407739678 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 32 AS node_id, 'Feature_3' AS feature, 1.7484111785888672 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9333333333333333 AS "Proba_0.0", -0.068992871487 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.06666666666666667 AS "Proba_3.0", -2.7080502011 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 34 AS node_id, 'Feature_2' AS feature, -0.574722170829773 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8 AS "Proba_0.0", -0.223143551314 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 35 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 36 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_9" <= -0.059608813375234604) THEN CASE WHEN ("ADS"."Feature_5" <= -2.021918773651123) THEN 2 ELSE CASE WHEN ("ADS"."Feature_1" <= -0.33259639143943787) THEN CASE WHEN ("ADS"."Feature_0" <= 0.9464053511619568) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS"."Feature_1" <= 1.5746397972106934) THEN CASE WHEN ("ADS"."Feature_6" <= 0.2595399022102356) THEN CASE WHEN ("ADS"."Feature_0" <= 0.7845326066017151) THEN 10 ELSE 11 END ELSE 12 END ELSE 13 END END END ELSE CASE WHEN ("ADS"."Feature_7" <= -1.881371021270752) THEN 15 ELSE CASE WHEN ("ADS"."Feature_6" <= 0.7435321807861328) THEN CASE WHEN ("ADS"."Feature_6" <= -0.37018007040023804) THEN CASE WHEN ("ADS"."Feature_2" <= 2.3683910369873047) THEN CASE WHEN ("ADS"."Feature_3" <= -1.2540040016174316) THEN 20 ELSE CASE WHEN ("ADS"."Feature_2" <= -0.06280006468296051) THEN 22 ELSE CASE WHEN ("ADS"."Feature_8" <= -2.392098903656006) THEN 24 ELSE 25 END END END ELSE 26 END ELSE 27 END ELSE CASE WHEN ("ADS"."Feature_8" <= -0.42973336577415466) THEN 29 ELSE CASE WHEN ("ADS"."Feature_2" <= 2.1068685054779053) THEN 31 ELSE 32 END END END END END AS node_id_2 
FROM "FourClass_10" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, -0.059608813375234604 AS threshold, 39 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29850746268656714 AS "Proba_0.0", -1.20896034584 AS "LogProba_0.0", 0.1791044776119403 AS "Proba_1.0", -1.7197859696 AS "LogProba_1.0", 0.22388059701492538 AS "Proba_2.0", -1.49664241829 AS "LogProba_2.0", 0.29850746268656714 AS "Proba_3.0", -1.20896034584 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, -2.021918773651123 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3225806451612903 AS "Proba_0.0", -1.13140211149 AS "LogProba_0.0", 0.03225806451612903 AS "Proba_1.0", -3.43398720449 AS "LogProba_1.0", 0.45161290322580644 AS "Proba_2.0", -0.79492987487 AS "LogProba_2.0", 0.1935483870967742 AS "Proba_3.0", -1.64222773526 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, -0.33259639143943787 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16 AS "Proba_0.0", -1.83258146375 AS "LogProba_0.0", 0.04 AS "Proba_1.0", -3.21887582487 AS "LogProba_1.0", 0.56 AS "Proba_2.0", -0.579818495253 AS "LogProba_2.0", 0.24 AS "Proba_3.0", -1.42711635564 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_0' AS feature, 0.9464053511619568 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.8125 AS "Proba_2.0", -0.207639364778 AS "LogProba_2.0", 0.1875 AS "Proba_3.0", -1.67397643357 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_1' AS feature, 1.5746397972106934 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4444444444444444 AS "Proba_0.0", -0.810930216216 AS "LogProba_0.0", 0.1111111111111111 AS "Proba_1.0", -2.19722457734 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_6' AS feature, 0.2595399022102356 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.16666666666666666 AS "Proba_2.0", -1.79175946923 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_0' AS feature, 0.7845326066017151 AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8 AS "Proba_0.0", -0.223143551314 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_7' AS feature, -1.881371021270752 AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2777777777777778 AS "Proba_0.0", -1.28093384546 AS "LogProba_0.0", 0.3055555555555556 AS "Proba_1.0", -1.18562366566 AS "LogProba_1.0", 0.027777777777777776 AS "Proba_2.0", -3.58351893846 AS "LogProba_2.0", 0.3888888888888889 AS "Proba_3.0", -0.944461608841 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_6' AS feature, 0.7435321807861328 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.36666666666666664 AS "Proba_1.0", -1.00330210886 AS "LogProba_1.0", 0.03333333333333333 AS "Proba_2.0", -3.40119738166 AS "LogProba_2.0", 0.26666666666666666 AS "Proba_3.0", -1.32175583998 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, 'Feature_6' AS feature, -0.37018007040023804 AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.625 AS "Proba_0.0", -0.470003629246 AS "LogProba_0.0", 0.3125 AS "Proba_1.0", -1.16315080981 AS "LogProba_1.0", 0.0625 AS "Proba_2.0", -2.77258872224 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_2' AS feature, 2.3683910369873047 AS threshold, 7 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.5555555555555556 AS "Proba_1.0", -0.587786664902 AS "LogProba_1.0", 0.1111111111111111 AS "Proba_2.0", -2.19722457734 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_3' AS feature, -1.2540040016174316 AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.375 AS "Proba_0.0", -0.980829253012 AS "LogProba_0.0", 0.625 AS "Proba_1.0", -0.470003629246 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, 'Feature_2' AS feature, -0.06280006468296051 AS threshold, 5 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2857142857142857 AS "Proba_0.0", -1.2527629685 AS "LogProba_0.0", 0.7142857142857143 AS "Proba_1.0", -0.336472236621 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, 'Feature_8' AS feature, -2.392098903656006 AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, 'Feature_8' AS feature, -0.42973336577415466 AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.42857142857142855 AS "Proba_1.0", -0.847297860387 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5714285714285714 AS "Proba_3.0", -0.559615787935 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 30 AS node_id, 'Feature_2' AS feature, 2.1068685054779053 AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.8571428571428571 AS "Proba_1.0", -0.154150679827 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.14285714285714285 AS "Proba_3.0", -1.94591014906 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_6" <= 1.3193914890289307) THEN CASE WHEN ("ADS"."Feature_6" <= 0.9018278121948242) THEN CASE WHEN ("ADS"."Feature_8" <= 0.08182048797607422) THEN CASE WHEN ("ADS"."Feature_6" <= -1.564490556716919) THEN 4 ELSE CASE WHEN ("ADS"."Feature_7" <= -1.1592856645584106) THEN CASE WHEN ("ADS"."Feature_6" <= -0.4476900100708008) THEN 7 ELSE CASE WHEN ("ADS"."Feature_2" <= 0.9091527462005615) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS"."Feature_2" <= -0.022701367735862732) THEN CASE WHEN ("ADS"."Feature_6" <= -0.08224329352378845) THEN CASE WHEN ("ADS"."Feature_8" <= -0.7651300430297852) THEN 14 ELSE 15 END ELSE 16 END ELSE 17 END END END ELSE CASE WHEN ("ADS"."Feature_7" <= 0.027909651398658752) THEN CASE WHEN ("ADS"."Feature_8" <= 1.570443868637085) THEN 20 ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_5" <= 2.4741735458374023) THEN 23 ELSE CASE WHEN ("ADS"."Feature_0" <= 0.19222775101661682) THEN 25 ELSE 26 END END END END ELSE 27 END ELSE 28 END AS node_id_2 
FROM "FourClass_10" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_6' AS feature, 1.3193914890289307 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2835820895522388 AS "Proba_0.0", -1.26025364022 AS "LogProba_0.0", 0.31343283582089554 AS "Proba_1.0", -1.16017018167 AS "LogProba_1.0", 0.22388059701492538 AS "Proba_2.0", -1.49664241829 AS "LogProba_2.0", 0.1791044776119403 AS "Proba_3.0", -1.7197859696 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_6' AS feature, 0.9018278121948242 AS threshold, 36 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3114754098360656 AS "Proba_0.0", -1.16643488501 AS "LogProba_0.0", 0.3442622950819672 AS "Proba_1.0", -1.06635142645 AS "LogProba_1.0", 0.2459016393442623 AS "Proba_2.0", -1.40282366307 AS "LogProba_2.0", 0.09836065573770492 AS "Proba_3.0", -2.31911439495 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_8' AS feature, 0.08182048797607422 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36538461538461536 AS "Proba_0.0", -1.00680473941 AS "LogProba_0.0", 0.23076923076923078 AS "Proba_1.0", -1.46633706879 AS "LogProba_1.0", 0.28846153846153844 AS "Proba_2.0", -1.24319351748 AS "LogProba_2.0", 0.11538461538461539 AS "Proba_3.0", -2.15948424935 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_6' AS feature, -1.564490556716919 AS threshold, 20 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.3235294117647059 AS "Proba_1.0", -1.12846525182 AS "LogProba_1.0", 0.14705882352941177 AS "Proba_2.0", -1.91692261218 AS "LogProba_2.0", 0.029411764705882353 AS "Proba_3.0", -3.52636052462 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_7' AS feature, -1.1592856645584106 AS threshold, 17 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6071428571428571 AS "Proba_0.0", -0.498991166119 AS "LogProba_0.0", 0.17857142857142858 AS "Proba_1.0", -1.72276659774 AS "LogProba_1.0", 0.17857142857142858 AS "Proba_2.0", -1.72276659774 AS "LogProba_2.0", 0.03571428571428571 AS "Proba_3.0", -3.33220451018 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_6' AS feature, -0.4476900100708008 AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.14285714285714285 AS "Proba_0.0", -1.94591014906 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.7142857142857143 AS "Proba_2.0", -0.336472236621 AS "LogProba_2.0", 0.14285714285714285 AS "Proba_3.0", -1.94591014906 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_2' AS feature, 0.9091527462005615 AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'Feature_2' AS feature, -0.022701367735862732 AS threshold, 11 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7619047619047619 AS "Proba_0.0", -0.271933715484 AS "LogProba_0.0", 0.23809523809523808 AS "Proba_1.0", -1.43508452529 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_6' AS feature, -0.08224329352378845 AS threshold, 8 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5454545454545454 AS "Proba_0.0", -0.60613580357 AS "LogProba_0.0", 0.45454545454545453 AS "Proba_1.0", -0.788457360364 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_8' AS feature, -0.7651300430297852 AS threshold, 4 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.8333333333333334 AS "Proba_1.0", -0.182321556794 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_7' AS feature, 0.027909651398658752 AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1111111111111111 AS "Proba_0.0", -2.19722457734 AS "LogProba_0.0", 0.05555555555555555 AS "Proba_1.0", -2.8903717579 AS "LogProba_1.0", 0.5555555555555556 AS "Proba_2.0", -0.587786664902 AS "LogProba_2.0", 0.2777777777777778 AS "Proba_3.0", -1.28093384546 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_8' AS feature, 1.570443868637085 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8 AS "Proba_3.0", -0.223143551314 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, 'Feature_5' AS feature, 2.4741735458374023 AS threshold, 8 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15384615384615385 AS "Proba_0.0", -1.8718021769 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.7692307692307693 AS "Proba_2.0", -0.262364264467 AS "LogProba_2.0", 0.07692307692307693 AS "Proba_3.0", -2.56494935746 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, 'Feature_0' AS feature, 0.19222775101661682 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 0.821287214756012) THEN CASE WHEN ("ADS"."Feature_5" <= 0.04685312137007713) THEN CASE WHEN ("ADS"."Feature_1" <= 0.4548678994178772) THEN CASE WHEN ("ADS"."Feature_4" <= 0.8951152563095093) THEN CASE WHEN ("ADS"."Feature_8" <= 0.6220083236694336) THEN CASE WHEN ("ADS"."Feature_0" <= -0.6676319241523743) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_0" <= 0.342771977186203) THEN CASE WHEN ("ADS"."Feature_9" <= -0.2564159631729126) THEN 10 ELSE 11 END ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_9" <= 0.8693553805351257) THEN 14 ELSE 15 END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.8730559945106506) THEN 17 ELSE CASE WHEN ("ADS"."Feature_4" <= -0.5880721807479858) THEN 19 ELSE 20 END END END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.2550237774848938) THEN CASE WHEN ("ADS"."Feature_4" <= -1.7154760360717773) THEN 23 ELSE 24 END ELSE CASE WHEN ("ADS"."Feature_6" <= 0.4672295153141022) THEN 26 ELSE 27 END END END ELSE CASE WHEN ("ADS"."Feature_3" <= 1.4899908304214478) THEN CASE WHEN ("ADS"."Feature_8" <= -2.434347629547119) THEN 30 ELSE CASE WHEN ("ADS"."Feature_8" <= -1.047502040863037) THEN 32 ELSE 33 END END ELSE 34 END END AS node_id_2 
FROM "FourClass_10" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.821287214756012 AS threshold, 39 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.23880597014925373 AS "Proba_0.0", -1.43210389715 AS "LogProba_0.0", 0.2537313432835821 AS "Proba_1.0", -1.37147927533 AS "LogProba_1.0", 0.23880597014925373 AS "Proba_2.0", -1.43210389715 AS "LogProba_2.0", 0.26865671641791045 AS "Proba_3.0", -1.31432086149 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, 0.04685312137007713 AS threshold, 31 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2545454545454545 AS "Proba_0.0", -1.36827585562 AS "LogProba_0.0", 0.3090909090909091 AS "Proba_1.0", -1.17411984118 AS "LogProba_1.0", 0.2909090909090909 AS "Proba_2.0", -1.23474446299 AS "LogProba_2.0", 0.14545454545454545 AS "Proba_3.0", -1.92789164355 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_1' AS feature, 0.4548678994178772 AS threshold, 22 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2564102564102564 AS "Proba_0.0", -1.36097655314 AS "LogProba_0.0", 0.4358974358974359 AS "Proba_1.0", -0.830348302073 AS "LogProba_1.0", 0.1282051282051282 AS "Proba_2.0", -2.0541237337 AS "LogProba_2.0", 0.1794871794871795 AS "Proba_3.0", -1.71765149707 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_4' AS feature, 0.8951152563095093 AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07142857142857142 AS "Proba_0.0", -2.63905732962 AS "LogProba_0.0", 0.5714285714285714 AS "Proba_1.0", -0.559615787935 AS "LogProba_1.0", 0.17857142857142858 AS "Proba_2.0", -1.72276659774 AS "LogProba_2.0", 0.17857142857142858 AS "Proba_3.0", -1.72276659774 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_8' AS feature, 0.6220083236694336 AS threshold, 13 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09090909090909091 AS "Proba_0.0", -2.3978952728 AS "LogProba_0.0", 0.7272727272727273 AS "Proba_1.0", -0.318453731119 AS "LogProba_1.0", 0.045454545454545456 AS "Proba_2.0", -3.09104245336 AS "LogProba_2.0", 0.13636363636363635 AS "Proba_3.0", -1.99243016469 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.6676319241523743 AS threshold, 9 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.125 AS "Proba_0.0", -2.07944154168 AS "LogProba_0.0", 0.875 AS "Proba_1.0", -0.133531392625 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_0' AS feature, 0.342771977186203 AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.16666666666666666 AS "Proba_2.0", -1.79175946923 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_9' AS feature, -0.2564159631729126 AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_9' AS feature, 0.8693553805351257 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'Feature_6' AS feature, 0.8730559945106506 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7272727272727273 AS "Proba_0.0", -0.318453731119 AS "LogProba_0.0", 0.09090909090909091 AS "Proba_1.0", -2.3978952728 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.18181818181818182 AS "Proba_3.0", -1.70474809224 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_4' AS feature, -0.5880721807479858 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.6666666666666666 AS "Proba_3.0", -0.405465108108 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, 'Feature_6' AS feature, 0.2550237774848938 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.6875 AS "Proba_2.0", -0.374693449441 AS "LogProba_2.0", 0.0625 AS "Proba_3.0", -2.77258872224 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, 'Feature_4' AS feature, -1.7154760360717773 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.9166666666666666 AS "Proba_2.0", -0.0870113769896 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, 'Feature_6' AS feature, 0.4672295153141022 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, 'Feature_3' AS feature, 1.4899908304214478 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8333333333333334 AS "Proba_3.0", -0.182321556794 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 29 AS node_id, 'Feature_8' AS feature, -2.434347629547119 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 31 AS node_id, 'Feature_8' AS feature, -1.047502040863037 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 33 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 34 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 4 + "RF_Join_CTE"."Score_1_0" / 4 + "RF_Join_CTE"."Score_2_0" / 4 + "RF_Join_CTE"."Score_3_0" / 4 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 4 + "RF_Join_CTE"."Proba_1_0" / 4 + "RF_Join_CTE"."Proba_2_0" / 4 + "RF_Join_CTE"."Proba_3_0" / 4 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 4 + "RF_Join_CTE"."LogProba_1_0" / 4 + "RF_Join_CTE"."LogProba_2_0" / 4 + "RF_Join_CTE"."LogProba_3_0" / 4 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 4 + "RF_Join_CTE"."Score_1_1" / 4 + "RF_Join_CTE"."Score_2_1" / 4 + "RF_Join_CTE"."Score_3_1" / 4 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 4 + "RF_Join_CTE"."Proba_1_1" / 4 + "RF_Join_CTE"."Proba_2_1" / 4 + "RF_Join_CTE"."Proba_3_1" / 4 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 4 + "RF_Join_CTE"."LogProba_1_1" / 4 + "RF_Join_CTE"."LogProba_2_1" / 4 + "RF_Join_CTE"."LogProba_3_1" / 4 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 4 + "RF_Join_CTE"."Score_1_2" / 4 + "RF_Join_CTE"."Score_2_2" / 4 + "RF_Join_CTE"."Score_3_2" / 4 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 4 + "RF_Join_CTE"."Proba_1_2" / 4 + "RF_Join_CTE"."Proba_2_2" / 4 + "RF_Join_CTE"."Proba_3_2" / 4 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 4 + "RF_Join_CTE"."LogProba_1_2" / 4 + "RF_Join_CTE"."LogProba_2_2" / 4 + "RF_Join_CTE"."LogProba_3_2" / 4 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 4 + "RF_Join_CTE"."Score_1_3" / 4 + "RF_Join_CTE"."Score_2_3" / 4 + "RF_Join_CTE"."Score_3_3" / 4 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 4 + "RF_Join_CTE"."Proba_1_3" / 4 + "RF_Join_CTE"."Proba_2_3" / 4 + "RF_Join_CTE"."Proba_3_3" / 4 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 4 + "RF_Join_CTE"."LogProba_1_3" / 4 + "RF_Join_CTE"."LogProba_2_3" / 4 + "RF_Join_CTE"."LogProba_3_3" / 4 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte