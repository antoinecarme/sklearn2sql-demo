-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_40" <= 0.6228643655776978) THEN CASE WHEN ("ADS"."Feature_60" <= 1.5083184242248535) THEN CASE WHEN ("ADS"."Feature_95" <= -3.157158613204956) THEN 3 ELSE CASE WHEN ("ADS"."Feature_74" <= 4.75907039642334) THEN CASE WHEN ("ADS"."Feature_83" <= 3.953022003173828) THEN CASE WHEN ("ADS"."Feature_83" <= -0.32357531785964966) THEN CASE WHEN ("ADS"."Feature_4" <= 2.9057905673980713) THEN CASE WHEN ("ADS"."Feature_35" <= -0.39698851108551025) THEN 9 ELSE 10 END ELSE 11 END ELSE CASE WHEN ("ADS"."Feature_14" <= 4.174234390258789) THEN 13 ELSE 14 END END ELSE CASE WHEN ("ADS"."Feature_4" <= -2.0067081451416016) THEN 16 ELSE 17 END END ELSE CASE WHEN ("ADS"."Feature_37" <= 0.6473130583763123) THEN 19 ELSE 20 END END END ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.6645140647888184) THEN 23 ELSE CASE WHEN ("ADS"."Feature_44" <= 1.396997332572937) THEN 25 ELSE 26 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_40' AS feature, 0.6228643655776978 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3582089552238806 AS "Proba_0.0", -1.02663878904 AS "LogProba_0.0", 0.19402985074626866 AS "Proba_1.0", -1.63974326193 AS "LogProba_1.0", 0.2537313432835821 AS "Proba_2.0", -1.37147927533 AS "LogProba_2.0", 0.19402985074626866 AS "Proba_3.0", -1.63974326193 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_60' AS feature, 1.5083184242248535 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.22641509433962265 AS "Proba_0.0", -1.48538526376 AS "LogProba_0.0", 0.20754716981132076 AS "Proba_1.0", -1.57239664075 AS "LogProba_1.0", 0.32075471698113206 AS "Proba_2.0", -1.1370785695 AS "LogProba_2.0", 0.24528301886792453 AS "Proba_3.0", -1.40534255609 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_95' AS feature, -3.157158613204956 AS threshold, 31 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1276595744680851 AS "Proba_0.0", -2.05838813248 AS "LogProba_0.0", 0.23404255319148937 AS "Proba_1.0", -1.45225232891 AS "LogProba_1.0", 0.3617021276595745 AS "Proba_2.0", -1.01693425765 AS "LogProba_2.0", 0.2765957446808511 AS "Proba_3.0", -1.28519824425 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_74' AS feature, 4.75907039642334 AS threshold, 26 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15 AS "Proba_0.0", -1.89711998489 AS "LogProba_0.0", 0.275 AS "Proba_1.0", -1.29098418132 AS "LogProba_1.0", 0.425 AS "Proba_2.0", -0.855666110058 AS "LogProba_2.0", 0.15 AS "Proba_3.0", -1.89711998489 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_83' AS feature, 3.953022003173828 AS threshold, 20 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.36666666666666664 AS "Proba_1.0", -1.00330210886 AS "LogProba_1.0", 0.26666666666666666 AS "Proba_2.0", -1.32175583998 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_83' AS feature, -0.32357531785964966 AS threshold, 13 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.55 AS "Proba_1.0", -0.597837000756 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.1 AS "Proba_3.0", -2.30258509299 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_4' AS feature, 2.9057905673980713 AS threshold, 7 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_35' AS feature, -0.39698851108551025 AS threshold, 5 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_14' AS feature, 4.174234390258789 AS threshold, 6 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.08333333333333333 AS "Proba_0.0", -2.48490664979 AS "LogProba_0.0", 0.9166666666666666 AS "Proba_1.0", -0.0870113769896 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, 'Feature_4' AS feature, -2.0067081451416016 AS threshold, 7 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.6 AS "Proba_2.0", -0.510825623766 AS "LogProba_2.0", 0.4 AS "Proba_3.0", -0.916290731874 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_37' AS feature, 0.6473130583763123 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1 AS "Proba_0.0", -2.30258509299 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.9 AS "Proba_2.0", -0.105360515658 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, 'Feature_2' AS feature, 0.6645140647888184 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8571428571428571 AS "Proba_0.0", -0.154150679827 AS "LogProba_0.0", 0.14285714285714285 AS "Proba_1.0", -1.94591014906 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, 'Feature_44' AS feature, 1.396997332572937 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Proba_2.0" AS "Proba_2.0", "DT_node_data"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data"."Proba_3.0" AS "Proba_3.0", "DT_node_data"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1", CAST(NULL AS FLOAT) AS "Score_0_2", "DT_Output"."Proba_2.0" AS "Proba_0_2", "DT_Output"."LogProba_2.0" AS "LogProba_0_2", CAST(NULL AS FLOAT) AS "Score_0_3", "DT_Output"."Proba_3.0" AS "Proba_0_3", "DT_Output"."LogProba_3.0" AS "LogProba_0_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_42" <= -6.389725208282471) THEN CASE WHEN ("ADS"."Feature_89" <= 0.6500455141067505) THEN 2 ELSE CASE WHEN ("ADS"."Feature_16" <= -1.023338794708252) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_31" <= 0.4997972846031189) THEN CASE WHEN ("ADS"."Feature_97" <= 2.257655620574951) THEN CASE WHEN ("ADS"."Feature_53" <= 4.628584861755371) THEN CASE WHEN ("ADS"."Feature_71" <= 4.037548065185547) THEN CASE WHEN ("ADS"."Feature_61" <= -1.1529433727264404) THEN 11 ELSE CASE WHEN ("ADS"."Feature_98" <= -1.2996609210968018) THEN 13 ELSE CASE WHEN ("ADS"."Feature_88" <= -1.9119775295257568) THEN 15 ELSE 16 END END END ELSE 17 END ELSE CASE WHEN ("ADS"."Feature_56" <= -4.234421253204346) THEN 19 ELSE CASE WHEN ("ADS"."Feature_79" <= 2.6305198669433594) THEN 21 ELSE 22 END END END ELSE CASE WHEN ("ADS"."Feature_37" <= 1.2051082849502563) THEN 24 ELSE 25 END END ELSE CASE WHEN ("ADS"."Feature_18" <= -0.009220883250236511) THEN 27 ELSE 28 END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_42' AS feature, -6.389725208282471 AS threshold, 39 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.26865671641791045 AS "Proba_0.0", -1.31432086149 AS "LogProba_0.0", 0.208955223880597 AS "Proba_1.0", -1.56563528978 AS "LogProba_1.0", 0.22388059701492538 AS "Proba_2.0", -1.49664241829 AS "LogProba_2.0", 0.29850746268656714 AS "Proba_3.0", -1.20896034584 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_89' AS feature, 0.6500455141067505 AS threshold, 6 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07142857142857142 AS "Proba_0.0", -2.63905732962 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.07142857142857142 AS "Proba_2.0", -2.63905732962 AS "LogProba_2.0", 0.8571428571428571 AS "Proba_3.0", -0.154150679827 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_16' AS feature, -1.023338794708252 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_31' AS feature, 0.4997972846031189 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.32075471698113206 AS "Proba_0.0", -1.1370785695 AS "LogProba_0.0", 0.2641509433962264 AS "Proba_1.0", -1.33123458394 AS "LogProba_1.0", 0.2641509433962264 AS "Proba_2.0", -1.33123458394 AS "LogProba_2.0", 0.1509433962264151 AS "Proba_3.0", -1.89085037187 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_97' AS feature, 2.257655620574951 AS threshold, 26 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.425 AS "Proba_0.0", -0.855666110058 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.125 AS "Proba_2.0", -2.07944154168 AS "LogProba_2.0", 0.2 AS "Proba_3.0", -1.60943791243 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_53' AS feature, 4.628584861755371 AS threshold, 21 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.53125 AS "Proba_0.0", -0.632522558744 AS "LogProba_0.0", 0.125 AS "Proba_1.0", -2.07944154168 AS "LogProba_1.0", 0.09375 AS "Proba_2.0", -2.36712361413 AS "LogProba_2.0", 0.25 AS "Proba_3.0", -1.38629436112 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_71' AS feature, 4.037548065185547 AS threshold, 15 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7083333333333334 AS "Proba_0.0", -0.344840486292 AS "LogProba_0.0", 0.041666666666666664 AS "Proba_1.0", -3.17805383035 AS "LogProba_1.0", 0.08333333333333333 AS "Proba_2.0", -2.48490664979 AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_61' AS feature, -1.1529433727264404 AS threshold, 13 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8095238095238095 AS "Proba_0.0", -0.211309093667 AS "LogProba_0.0", 0.047619047619047616 AS "Proba_1.0", -3.04452243772 AS "LogProba_1.0", 0.09523809523809523 AS "Proba_2.0", -2.35137525716 AS "LogProba_2.0", 0.047619047619047616 AS "Proba_3.0", -3.04452243772 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_98' AS feature, -1.2996609210968018 AS threshold, 12 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8947368421052632 AS "Proba_0.0", -0.11122563511 AS "LogProba_0.0", 0.05263157894736842 AS "Proba_1.0", -2.94443897917 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.05263157894736842 AS "Proba_3.0", -2.94443897917 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_88' AS feature, -1.9119775295257568 AS threshold, 11 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9444444444444444 AS "Proba_0.0", -0.0571584138399 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.05555555555555555 AS "Proba_3.0", -2.8903717579 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 8 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, 'Feature_56' AS feature, -4.234421253204346 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.375 AS "Proba_1.0", -0.980829253012 AS "LogProba_1.0", 0.125 AS "Proba_2.0", -2.07944154168 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, 'Feature_79' AS feature, 2.6305198669433594 AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, 'Feature_37' AS feature, 1.2051082849502563 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, 'Feature_18' AS feature, -0.009220883250236511 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3076923076923077 AS "Proba_1.0", -1.17865499634 AS "LogProba_1.0", 0.6923076923076923 AS "Proba_2.0", -0.367724780125 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Proba_2.0" AS "Proba_2.0", "DT_node_data_1"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_1"."Proba_3.0" AS "Proba_3.0", "DT_node_data_1"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1", CAST(NULL AS FLOAT) AS "Score_1_2", "DT_Output_1"."Proba_2.0" AS "Proba_1_2", "DT_Output_1"."LogProba_2.0" AS "LogProba_1_2", CAST(NULL AS FLOAT) AS "Score_1_3", "DT_Output_1"."Proba_3.0" AS "Proba_1_3", "DT_Output_1"."LogProba_3.0" AS "LogProba_1_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_78" <= 0.45257335901260376) THEN CASE WHEN ("ADS"."Feature_5" <= -0.4226241707801819) THEN CASE WHEN ("ADS"."Feature_45" <= 0.2626127600669861) THEN 3 ELSE CASE WHEN ("ADS"."Feature_74" <= 6.349123954772949) THEN 5 ELSE 6 END END ELSE CASE WHEN ("ADS"."Feature_94" <= -0.1131686419248581) THEN CASE WHEN ("ADS"."Feature_84" <= -1.0757579803466797) THEN 9 ELSE CASE WHEN ("ADS"."Feature_42" <= -6.018792629241943) THEN 11 ELSE 12 END END ELSE CASE WHEN ("ADS"."Feature_45" <= -0.458545982837677) THEN CASE WHEN ("ADS"."Feature_63" <= 6.041639804840088) THEN 15 ELSE 16 END ELSE CASE WHEN ("ADS"."Feature_53" <= -3.1140341758728027) THEN 18 ELSE CASE WHEN ("ADS"."Feature_2" <= -0.6226908564567566) THEN 20 ELSE 21 END END END END END ELSE CASE WHEN ("ADS"."Feature_47" <= -0.27190521359443665) THEN CASE WHEN ("ADS"."Feature_28" <= 0.17964617908000946) THEN CASE WHEN ("ADS"."Feature_24" <= 1.2457525730133057) THEN 25 ELSE 26 END ELSE 27 END ELSE 28 END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_78' AS feature, 0.45257335901260376 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.34328358208955223 AS "Proba_0.0", -1.06919840346 AS "LogProba_0.0", 0.11940298507462686 AS "Proba_1.0", -2.12525107771 AS "LogProba_1.0", 0.3283582089552239 AS "Proba_2.0", -1.11365016603 AS "LogProba_2.0", 0.208955223880597 AS "Proba_3.0", -1.56563528978 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, -0.4226241707801819 AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.46511627906976744 AS "Proba_0.0", -0.76546784214 AS "LogProba_0.0", 0.16279069767441862 AS "Proba_1.0", -1.81528996664 AS "LogProba_1.0", 0.13953488372093023 AS "Proba_2.0", -1.96944064647 AS "LogProba_2.0", 0.23255813953488372 AS "Proba_3.0", -1.4586150227 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_45' AS feature, 0.2626127600669861 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7777777777777778 AS "Proba_0.0", -0.251314428281 AS "LogProba_0.0", 0.16666666666666666 AS "Proba_1.0", -1.79175946923 AS "LogProba_1.0", 0.05555555555555555 AS "Proba_2.0", -2.8903717579 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'Feature_74' AS feature, 6.349123954772949 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 0.25 AS "Proba_2.0", -1.38629436112 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_94' AS feature, -0.1131686419248581 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24 AS "Proba_0.0", -1.42711635564 AS "LogProba_0.0", 0.16 AS "Proba_1.0", -1.83258146375 AS "LogProba_1.0", 0.2 AS "Proba_2.0", -1.60943791243 AS "LogProba_2.0", 0.4 AS "Proba_3.0", -0.916290731874 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_84' AS feature, -1.0757579803466797 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.09090909090909091 AS "Proba_1.0", -2.3978952728 AS "LogProba_1.0", 0.09090909090909091 AS "Proba_2.0", -2.3978952728 AS "LogProba_2.0", 0.8181818181818182 AS "Proba_3.0", -0.200670695462 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_42' AS feature, -6.018792629241943 AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.1 AS "Proba_1.0", -2.30258509299 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.9 AS "Proba_3.0", -0.105360515658 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, 'Feature_45' AS feature, -0.458545982837677 AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.42857142857142855 AS "Proba_0.0", -0.847297860387 AS "LogProba_0.0", 0.21428571428571427 AS "Proba_1.0", -1.54044504095 AS "LogProba_1.0", 0.2857142857142857 AS "Proba_2.0", -1.2527629685 AS "LogProba_2.0", 0.07142857142857142 AS "Proba_3.0", -2.63905732962 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_63' AS feature, 6.041639804840088 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.8 AS "Proba_2.0", -0.223143551314 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, 'Feature_53' AS feature, -3.1140341758728027 AS threshold, 7 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.2222222222222222 AS "Proba_1.0", -1.50407739678 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.1111111111111111 AS "Proba_3.0", -2.19722457734 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_2' AS feature, -0.6226908564567566 AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8571428571428571 AS "Proba_0.0", -0.154150679827 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.14285714285714285 AS "Proba_3.0", -1.94591014906 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, 'Feature_47' AS feature, -0.27190521359443665 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.125 AS "Proba_0.0", -2.07944154168 AS "LogProba_0.0", 0.041666666666666664 AS "Proba_1.0", -3.17805383035 AS "LogProba_1.0", 0.6666666666666666 AS "Proba_2.0", -0.405465108108 AS "LogProba_2.0", 0.16666666666666666 AS "Proba_3.0", -1.79175946923 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, 'Feature_28' AS feature, 0.17964617908000946 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.375 AS "Proba_0.0", -0.980829253012 AS "LogProba_0.0", 0.125 AS "Proba_1.0", -2.07944154168 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, 'Feature_24' AS feature, 1.2457525730133057 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.2 AS "Proba_1.0", -1.60943791243 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.8 AS "Proba_3.0", -0.223143551314 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Proba_2.0" AS "Proba_2.0", "DT_node_data_2"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_2"."Proba_3.0" AS "Proba_3.0", "DT_node_data_2"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1", CAST(NULL AS FLOAT) AS "Score_2_2", "DT_Output_2"."Proba_2.0" AS "Proba_2_2", "DT_Output_2"."LogProba_2.0" AS "LogProba_2_2", CAST(NULL AS FLOAT) AS "Score_2_3", "DT_Output_2"."Proba_3.0" AS "Proba_2_3", "DT_Output_2"."LogProba_3.0" AS "LogProba_2_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_19" <= -1.8277283906936646) THEN CASE WHEN ("ADS"."Feature_89" <= 0.6457098722457886) THEN CASE WHEN ("ADS"."Feature_99" <= 2.222661018371582) THEN CASE WHEN ("ADS"."Feature_50" <= -0.5146664381027222) THEN 4 ELSE 5 END ELSE 6 END ELSE 7 END ELSE CASE WHEN ("ADS"."Feature_78" <= 1.3610906600952148) THEN CASE WHEN ("ADS"."Feature_97" <= 2.326995372772217) THEN CASE WHEN ("ADS"."Feature_80" <= -16.255441665649414) THEN 11 ELSE CASE WHEN ("ADS"."Feature_7" <= -9.484196662902832) THEN 13 ELSE CASE WHEN ("ADS"."Feature_73" <= 1.2031230926513672) THEN CASE WHEN ("ADS"."Feature_19" <= -1.5096231698989868) THEN 16 ELSE 17 END ELSE 18 END END END ELSE CASE WHEN ("ADS"."Feature_57" <= -0.19590339064598083) THEN 20 ELSE CASE WHEN ("ADS"."Feature_12" <= 1.0197715759277344) THEN 22 ELSE 23 END END END ELSE CASE WHEN ("ADS"."Feature_69" <= 0.5651825666427612) THEN 25 ELSE CASE WHEN ("ADS"."Feature_55" <= 0.07374114543199539) THEN CASE WHEN ("ADS"."Feature_26" <= -0.7225246429443359) THEN 28 ELSE 29 END ELSE 30 END END END END AS node_id_2 
FROM "FourClass_100" "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Proba_2.0" AS "Proba_2.0", "Values"."LogProba_2.0" AS "LogProba_2.0", "Values"."Proba_3.0" AS "Proba_3.0", "Values"."LogProba_3.0" AS "LogProba_3.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'Feature_19' AS feature, -1.8277283906936646 AS threshold, 39 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.29850746268656714 AS "Proba_0.0", -1.20896034584 AS "LogProba_0.0", 0.208955223880597 AS "Proba_1.0", -1.56563528978 AS "LogProba_1.0", 0.29850746268656714 AS "Proba_2.0", -1.20896034584 AS "LogProba_2.0", 0.19402985074626866 AS "Proba_3.0", -1.63974326193 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_89' AS feature, 0.6457098722457886 AS threshold, 11 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10526315789473684 AS "Proba_0.0", -2.25129179861 AS "LogProba_0.0", 0.5263157894736842 AS "Proba_1.0", -0.641853886172 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.3684210526315789 AS "Proba_3.0", -0.998528830111 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_99' AS feature, 2.222661018371582 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18181818181818182 AS "Proba_0.0", -1.70474809224 AS "LogProba_0.0", 0.18181818181818182 AS "Proba_1.0", -1.70474809224 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.6363636363636364 AS "Proba_3.0", -0.451985123743 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_50' AS feature, -0.5146664381027222 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2222222222222222 AS "Proba_0.0", -1.50407739678 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.7777777777777778 AS "Proba_3.0", -0.251314428281 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_78' AS feature, 1.3610906600952148 AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.375 AS "Proba_0.0", -0.980829253012 AS "LogProba_0.0", 0.08333333333333333 AS "Proba_1.0", -2.48490664979 AS "LogProba_1.0", 0.4166666666666667 AS "Proba_2.0", -0.875468737354 AS "LogProba_2.0", 0.125 AS "Proba_3.0", -2.07944154168 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_97' AS feature, 2.326995372772217 AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6071428571428571 AS "Proba_0.0", -0.498991166119 AS "LogProba_0.0", 0.10714285714285714 AS "Proba_1.0", -2.23359222151 AS "LogProba_1.0", 0.14285714285714285 AS "Proba_2.0", -1.94591014906 AS "LogProba_2.0", 0.14285714285714285 AS "Proba_3.0", -1.94591014906 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_80' AS feature, -16.255441665649414 AS threshold, 12 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7727272727272727 AS "Proba_0.0", -0.257829109302 AS "LogProba_0.0", 0.045454545454545456 AS "Proba_1.0", -3.09104245336 AS "LogProba_1.0", 0.09090909090909091 AS "Proba_2.0", -2.3978952728 AS "LogProba_2.0", 0.09090909090909091 AS "Proba_3.0", -2.3978952728 AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, 'Feature_7' AS feature, -9.484196662902832 AS threshold, 11 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.85 AS "Proba_0.0", -0.162518929498 AS "LogProba_0.0", 0.05 AS "Proba_1.0", -2.99573227355 AS "LogProba_1.0", 0.1 AS "Proba_2.0", -2.30258509299 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'Feature_73' AS feature, 1.2031230926513672 AS threshold, 10 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8947368421052632 AS "Proba_0.0", -0.11122563511 AS "LogProba_0.0", 0.05263157894736842 AS "Proba_1.0", -2.94443897917 AS "LogProba_1.0", 0.05263157894736842 AS "Proba_2.0", -2.94443897917 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, 'Feature_19' AS feature, -1.5096231698989868 AS threshold, 9 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9444444444444444 AS "Proba_0.0", -0.0571584138399 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.05555555555555555 AS "Proba_2.0", -2.8903717579 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, 'Feature_57' AS feature, -0.19590339064598083 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0.3333333333333333 AS "Proba_2.0", -1.09861228867 AS "LogProba_2.0", 0.3333333333333333 AS "Proba_3.0", -1.09861228867 AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 21 AS node_id, 'Feature_12' AS feature, 1.0197715759277344 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.5 AS "Proba_2.0", -0.69314718056 AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 22 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 23 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 24 AS node_id, 'Feature_69' AS feature, 0.5651825666427612 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05 AS "Proba_0.0", -2.99573227355 AS "LogProba_0.0", 0.05 AS "Proba_1.0", -2.99573227355 AS "LogProba_1.0", 0.8 AS "Proba_2.0", -0.223143551314 AS "LogProba_2.0", 0.1 AS "Proba_3.0", -2.30258509299 AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 25 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 1.0 AS "Proba_2.0", 0.0 AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 2 AS "Decision" FROM DUAL UNION ALL SELECT 26 AS node_id, 'Feature_55' AS feature, 0.07374114543199539 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.5 AS "Proba_3.0", -0.69314718056 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL UNION ALL SELECT 27 AS node_id, 'Feature_26' AS feature, -0.7225246429443359 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 28 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 29 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 0.0 AS "Proba_3.0", -BINARY_FLOAT_INFINITY AS "LogProba_3.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0.0 AS "Proba_2.0", -BINARY_FLOAT_INFINITY AS "LogProba_2.0", 1.0 AS "Proba_3.0", 0.0 AS "LogProba_3.0", 3 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Proba_2.0" AS "Proba_2.0", "DT_node_data_3"."LogProba_2.0" AS "LogProba_2.0", "DT_node_data_3"."Proba_3.0" AS "Proba_3.0", "DT_node_data_3"."LogProba_3.0" AS "LogProba_3.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1", CAST(NULL AS FLOAT) AS "Score_3_2", "DT_Output_3"."Proba_2.0" AS "Proba_3_2", "DT_Output_3"."LogProba_2.0" AS "LogProba_3_2", CAST(NULL AS FLOAT) AS "Score_3_3", "DT_Output_3"."Proba_3.0" AS "Proba_3_3", "DT_Output_3"."LogProba_3.0" AS "LogProba_3_3" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_0"."Score_0_2" AS "Score_0_2", "RF_Tree_0"."Proba_0_2" AS "Proba_0_2", "RF_Tree_0"."LogProba_0_2" AS "LogProba_0_2", "RF_Tree_0"."Score_0_3" AS "Score_0_3", "RF_Tree_0"."Proba_0_3" AS "Proba_0_3", "RF_Tree_0"."LogProba_0_3" AS "LogProba_0_3", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_1"."Score_1_2" AS "Score_1_2", "RF_Tree_1"."Proba_1_2" AS "Proba_1_2", "RF_Tree_1"."LogProba_1_2" AS "LogProba_1_2", "RF_Tree_1"."Score_1_3" AS "Score_1_3", "RF_Tree_1"."Proba_1_3" AS "Proba_1_3", "RF_Tree_1"."LogProba_1_3" AS "LogProba_1_3", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_2"."Score_2_2" AS "Score_2_2", "RF_Tree_2"."Proba_2_2" AS "Proba_2_2", "RF_Tree_2"."LogProba_2_2" AS "LogProba_2_2", "RF_Tree_2"."Score_2_3" AS "Score_2_3", "RF_Tree_2"."Proba_2_3" AS "Proba_2_3", "RF_Tree_2"."LogProba_2_3" AS "LogProba_2_3", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1", "RF_Tree_3"."Score_3_2" AS "Score_3_2", "RF_Tree_3"."Proba_3_2" AS "Proba_3_2", "RF_Tree_3"."LogProba_3_2" AS "LogProba_3_2", "RF_Tree_3"."Score_3_3" AS "Score_3_3", "RF_Tree_3"."Proba_3_3" AS "Proba_3_3", "RF_Tree_3"."LogProba_3_3" AS "LogProba_3_3" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 4 + "RF_Join_CTE"."Score_1_0" / 4 + "RF_Join_CTE"."Score_2_0" / 4 + "RF_Join_CTE"."Score_3_0" / 4 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 4 + "RF_Join_CTE"."Proba_1_0" / 4 + "RF_Join_CTE"."Proba_2_0" / 4 + "RF_Join_CTE"."Proba_3_0" / 4 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 4 + "RF_Join_CTE"."LogProba_1_0" / 4 + "RF_Join_CTE"."LogProba_2_0" / 4 + "RF_Join_CTE"."LogProba_3_0" / 4 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 4 + "RF_Join_CTE"."Score_1_1" / 4 + "RF_Join_CTE"."Score_2_1" / 4 + "RF_Join_CTE"."Score_3_1" / 4 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 4 + "RF_Join_CTE"."Proba_1_1" / 4 + "RF_Join_CTE"."Proba_2_1" / 4 + "RF_Join_CTE"."Proba_3_1" / 4 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 4 + "RF_Join_CTE"."LogProba_1_1" / 4 + "RF_Join_CTE"."LogProba_2_1" / 4 + "RF_Join_CTE"."LogProba_3_1" / 4 AS "LogProba_1", "RF_Join_CTE"."Score_0_2" / 4 + "RF_Join_CTE"."Score_1_2" / 4 + "RF_Join_CTE"."Score_2_2" / 4 + "RF_Join_CTE"."Score_3_2" / 4 AS "Score_2", "RF_Join_CTE"."Proba_0_2" / 4 + "RF_Join_CTE"."Proba_1_2" / 4 + "RF_Join_CTE"."Proba_2_2" / 4 + "RF_Join_CTE"."Proba_3_2" / 4 AS "Proba_2", "RF_Join_CTE"."LogProba_0_2" / 4 + "RF_Join_CTE"."LogProba_1_2" / 4 + "RF_Join_CTE"."LogProba_2_2" / 4 + "RF_Join_CTE"."LogProba_3_2" / 4 AS "LogProba_2", "RF_Join_CTE"."Score_0_3" / 4 + "RF_Join_CTE"."Score_1_3" / 4 + "RF_Join_CTE"."Score_2_3" / 4 + "RF_Join_CTE"."Score_3_3" / 4 AS "Score_3", "RF_Join_CTE"."Proba_0_3" / 4 + "RF_Join_CTE"."Proba_1_3" / 4 + "RF_Join_CTE"."Proba_2_3" / 4 + "RF_Join_CTE"."Proba_3_3" / 4 AS "Proba_3", "RF_Join_CTE"."LogProba_0_3" / 4 + "RF_Join_CTE"."LogProba_1_3" / 4 + "RF_Join_CTE"."LogProba_2_3" / 4 + "RF_Join_CTE"."LogProba_3_3" / 4 AS "LogProba_3" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Score_2" AS "Score_2", "RF_AVG_Scores"."Score_3" AS "Score_3", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."Proba_2" AS "Proba_2", "RF_AVG_Scores"."Proba_3" AS "Proba_3", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", "RF_AVG_Scores"."LogProba_2" AS "LogProba_2", "RF_AVG_Scores"."LogProba_3" AS "LogProba_3", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Score_2" AS "Score_2", arg_max_cte."Score_3" AS "Score_3", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", arg_max_cte."Proba_2" AS "Proba_2", arg_max_cte."Proba_3" AS "Proba_3", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."Proba_2" IS NULL OR arg_max_cte."Proba_2" > 0.0) THEN ln(arg_max_cte."Proba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."Proba_3" IS NULL OR arg_max_cte."Proba_3" > 0.0) THEN ln(arg_max_cte."Proba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte