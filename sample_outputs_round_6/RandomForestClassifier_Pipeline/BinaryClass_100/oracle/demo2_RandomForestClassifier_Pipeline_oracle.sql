-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.237464364817 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.0756085624259 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.050696969262 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.158837132787 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.0290455073623 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.103991017764 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.121405125309 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.169335873901 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0388099156432 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0484479925864 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 0.0639887104815 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN -0.159594044231 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.192727509211 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN -0.0610772068834 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.107419117781 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -0.114983990949 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.0888522501193 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.118779996425 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.0160826509547 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN -0.104664107614 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.0033504534642 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 0.120884039528 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN -0.294871995527 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.18274123596 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.229807540313 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 0.0746742381751 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.034659710535 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 0.140653393296 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.0840434436969 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.0665798694109 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -0.065798657464 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN -0.0630493243043 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.117774115201 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 0.13744268126 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.226413534182 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.0981170916776 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 0.0345207130395 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.0319288576964 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.0797626934468 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.21331430116 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.210582366278 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN -0.0953768228977 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 0.092014277041 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN -0.241794727306 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 0.0576995029369 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.0694353590247 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 0.0338634964745 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.149118761924 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN -0.169485413865 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.0854270333461 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.118589021331 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.0275082666516 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN -0.201127321708 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.0462112817786 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.113185598355 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN -0.0145327801628 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.267753764198 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.100027287593 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.128559570916 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.144649719236 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0192460234408 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.00656383536553 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.0678854084677 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.0808242795387 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN 0.0174483421874 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.00137858908282 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN -0.121199922387 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.0327880891069 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.0729318193074 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -0.00371929631226 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.009380706539 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN -0.0869059828677 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.0536133989905 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.0453853093997 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -0.104206321743 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.00777691665395 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.0586947796092 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.14402767368 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.0508026532693 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.0437844299094 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.0411687235912 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN -0.0287169624256 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN -0.0420817535017 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.185953976791 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN 0.191190511324 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.199934072594 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.159325445434 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.136543354312 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.087417117915 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.133632797014 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.0438008688849 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -0.134211333154 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN -0.151975711753 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN -0.0640465301734 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN 0.145952684235 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.00736146048019 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN 0.189094414843 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.113555186667 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 0.148277032545 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -0.118749598617 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "BinaryClass_100" "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.237464364817) / 1.06006578296 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.0756085624259) / 0.853721952234 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.050696969262) / 1.0925580514 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.158837132787) / 1.08586572287 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.0290455073623) / 0.967854525958 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.103991017764) / 1.06030065309 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.121405125309) / 0.990244804002 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.169335873901) / 0.931877862945 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.0388099156432) / 1.22382449237 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.0484479925864) / 0.870025813903 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 0.0639887104815) / 0.97023803391 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - -0.159594044231) / 0.89496041952 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.192727509211) / 1.06396985014 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - -0.0610772068834) / 0.967579699255 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - -0.107419117781) / 1.16346780231 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -0.114983990949) / 1.02720929938 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - -0.0888522501193) / 0.985537266137 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - -0.118779996425) / 0.874176616059 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.0160826509547) / 1.00170631261 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - -0.104664107614) / 1.04160444416 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.0033504534642) / 1.24089322586 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 0.120884039528) / 1.09144023978 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - -0.294871995527) / 0.855266555442 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.18274123596) / 0.93337228304 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.229807540313) / 0.939414809253 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 0.0746742381751) / 1.04513437777 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.034659710535) / 0.96814310762 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 0.140653393296) / 0.965945869243 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.0840434436969) / 1.08050624983 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.0665798694109) / 1.12378135545 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -0.065798657464) / 1.01208782739 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - -0.0630493243043) / 1.01136005361 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - -0.117774115201) / 0.94230986656 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 0.13744268126) / 1.09034373218 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.226413534182) / 1.14657279609 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - -0.0981170916776) / 0.973811656357 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 0.0345207130395) / 0.812367121511 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 0.0319288576964) / 0.942268388349 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.0797626934468) / 0.90190303791 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.21331430116) / 0.964988617024 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.210582366278) / 1.09815304432 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - -0.0953768228977) / 0.939823754022 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 0.092014277041) / 0.973637648522 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - -0.241794727306) / 0.92869142863 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 0.0576995029369) / 0.985303144441 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - -0.0694353590247) / 0.963384327628 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 0.0338634964745) / 0.979617701231 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.149118761924) / 0.957385796106 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - -0.169485413865) / 0.984779406383 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - -0.0854270333461) / 1.01396642775 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 0.118589021331) / 1.04891773158 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.0275082666516) / 0.873692434011 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - -0.201127321708) / 0.943580461433 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.0462112817786) / 0.875213411295 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.113185598355) / 0.801697038696 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - -0.0145327801628) / 1.02830105077 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.267753764198) / 1.02186237773 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.100027287593) / 1.0601281659 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 0.128559570916) / 0.867181218678 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.144649719236) / 0.962233111779 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.0192460234408) / 0.974719868796 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.00656383536553) / 1.07253120804 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 0.0678854084677) / 0.980972845032 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.0808242795387) / 0.993137587691 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - 0.0174483421874) / 1.13499957702 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - 0.00137858908282) / 0.963049708448 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - -0.121199922387) / 1.04203366027 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - 0.0327880891069) / 0.826979885984 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.0729318193074) / 0.956909224453 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -0.00371929631226) / 1.08111452272 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - 0.009380706539) / 1.14950868707 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - -0.0869059828677) / 0.759837687576 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.0536133989905) / 1.16606634071 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - -0.0453853093997) / 1.00977302789 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -0.104206321743) / 0.828673448277 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.00777691665395) / 1.15627726592 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.0586947796092) / 0.986692312663 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.14402767368) / 1.05086953678 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - 0.0508026532693) / 0.891623247909 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.0437844299094) / 0.942877926462 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.0411687235912) / 1.05110549577 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - -0.0287169624256) / 1.03496889556 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - -0.0420817535017) / 0.928331407185 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.185953976791) / 0.943534808058 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - 0.191190511324) / 0.926766643484 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - -0.199934072594) / 1.07544628705 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - -0.159325445434) / 1.18761413116 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.136543354312) / 0.928317381933 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.087417117915) / 1.05139697923 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.133632797014) / 0.970914661511 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - 0.0438008688849) / 0.976164645037 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -0.134211333154) / 1.13467222777 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - -0.151975711753) / 0.851979907174 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - -0.0640465301734) / 0.966578478509 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - 0.145952684235) / 1.07731860848 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.00736146048019) / 0.953957325666 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - 0.189094414843) / 0.993551421699 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.113555186667) / 1.03098095076 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 0.148277032545) / 0.807544099926 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -0.118749598617) / 1.16690554075 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= 1.028564453125) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -0.6811950206756592) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_71 <= 1.0291194915771484) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_86 <= 0.21481341123580933) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_95 <= 1.355106234550476) THEN 6 ELSE 7 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_66 <= 0.03334866091609001) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_20 <= 0.11106355488300323) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= 0.5639435052871704) THEN 12 ELSE 13 END END ELSE 14 END END ELSE 15 END END ELSE 16 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, 1.028564453125 AS threshold, 42 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5223880597014925 AS "Proba_0.0", -0.649344557902 AS "LogProba_0.0", 0.47761194029850745 AS "Proba_1.0", -0.738956716591 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_100' AS feature, -0.6811950206756592 AS threshold, 37 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.603448275862069 AS "Proba_0.0", -0.505094949057 AS "LogProba_0.0", 0.39655172413793105 AS "Proba_1.0", -0.924948794617 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_71' AS feature, 1.0291194915771484 AS threshold, 27 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.425 AS "Proba_0.0", -0.855666110058 AS "LogProba_0.0", 0.575 AS "Proba_1.0", -0.553385238185 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_86' AS feature, 0.21481341123580933 AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3235294117647059 AS "Proba_0.0", -1.12846525182 AS "LogProba_0.0", 0.6764705882352942 AS "Proba_1.0", -0.390866308687 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_95' AS feature, 1.355106234550476 AS threshold, 12 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.05555555555555555 AS "Proba_0.0", -2.8903717579 AS "LogProba_0.0", 0.9444444444444444 AS "Proba_1.0", -0.0571584138399 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, 'scaler_66' AS feature, 0.03334866091609001 AS threshold, 11 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.625 AS "Proba_0.0", -0.470003629246 AS "LogProba_0.0", 0.375 AS "Proba_1.0", -0.980829253012 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_20' AS feature, 0.11106355488300323 AS threshold, 8 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.3333333333333333 AS "Proba_0.0", -1.09861228867 AS "LogProba_0.0", 0.6666666666666666 AS "Proba_1.0", -0.405465108108 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_100' AS feature, 0.5639435052871704 AS threshold, 5 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6 AS "Proba_0.0", -0.510825623766 AS "LogProba_0.0", 0.4 AS "Proba_1.0", -0.916290731874 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 7 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Proba_0.0" AS "Proba_0.0", "DT_node_data"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data"."Proba_1.0" AS "Proba_1.0", "DT_node_data"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data"."Decision" AS "Decision" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"RF_Tree_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0, CAST(NULL AS FLOAT) AS "Score_0_0", "DT_Output"."Proba_0.0" AS "Proba_0_0", "DT_Output"."LogProba_0.0" AS "LogProba_0_0", CAST(NULL AS FLOAT) AS "Score_0_1", "DT_Output"."Proba_1.0" AS "Proba_0_1", "DT_Output"."LogProba_1.0" AS "LogProba_0_1" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_33 <= 0.6876060366630554) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_91 <= -0.5869699716567993) THEN 2 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_67 <= 1.4220516681671143) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_92 <= 1.2382826805114746) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 <= -0.8562198877334595) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= 0.026352809742093086) THEN 7 ELSE 8 END ELSE 9 END ELSE 10 END ELSE 11 END END ELSE 12 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_33' AS feature, 0.6876060366630554 AS threshold, 39 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6268656716417911 AS "Proba_0.0", -0.467023001108 AS "LogProba_0.0", 0.373134328358209 AS "Proba_1.0", -0.985816794523 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_91' AS feature, -0.5869699716567993 AS threshold, 27 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4186046511627907 AS "Proba_0.0", -0.870828357797 AS "LogProba_0.0", 0.5813953488372093 AS "Proba_1.0", -0.542324290825 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_67' AS feature, 1.4220516681671143 AS threshold, 21 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2647058823529412 AS "Proba_0.0", -1.32913594728 AS "LogProba_0.0", 0.7352941176470589 AS "Proba_1.0", -0.307484699748 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_92' AS feature, 1.2382826805114746 AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16666666666666666 AS "Proba_0.0", -1.79175946923 AS "LogProba_0.0", 0.8333333333333334 AS "Proba_1.0", -0.182321556794 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_28' AS feature, -0.8562198877334595 AS threshold, 17 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10714285714285714 AS "Proba_0.0", -2.23359222151 AS "LogProba_0.0", 0.8928571428571429 AS "Proba_1.0", -0.113328685307 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_78' AS feature, 0.026352809742093086 AS threshold, 5 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.42857142857142855 AS "Proba_0.0", -0.847297860387 AS "LogProba_0.0", 0.5714285714285714 AS "Proba_1.0", -0.559615787935 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 12 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Proba_0.0" AS "Proba_0.0", "DT_node_data_1"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_1"."Proba_1.0" AS "Proba_1.0", "DT_node_data_1"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_1"."Decision" AS "Decision" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"RF_Tree_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_1, CAST(NULL AS FLOAT) AS "Score_1_0", "DT_Output_1"."Proba_0.0" AS "Proba_1_0", "DT_Output_1"."LogProba_0.0" AS "LogProba_1_0", CAST(NULL AS FLOAT) AS "Score_1_1", "DT_Output_1"."Proba_1.0" AS "Proba_1_1", "DT_Output_1"."LogProba_1.0" AS "LogProba_1_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_100 <= -0.9356319904327393) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= 0.3265376389026642) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_78 <= -0.12167581915855408) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_69 <= 0.35159391164779663) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_96 <= 0.027228325605392456) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 <= 0.07051140069961548) THEN 10 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 <= 1.0455701351165771) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_93 <= -1.0326292514801025) THEN 15 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 <= -1.126850962638855) THEN 17 ELSE 18 END END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_100' AS feature, -0.9356319904327393 AS threshold, 40 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7313432835820896 AS "Proba_0.0", -0.31287232128 AS "LogProba_0.0", 0.26865671641791045 AS "Proba_1.0", -1.31432086149 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_99' AS feature, 0.3265376389026642 AS threshold, 30 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.625 AS "Proba_0.0", -0.470003629246 AS "LogProba_0.0", 0.375 AS "Proba_1.0", -0.980829253012 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_78' AS feature, -0.12167581915855408 AS threshold, 17 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.4 AS "Proba_0.0", -0.916290731874 AS "LogProba_0.0", 0.6 AS "Proba_1.0", -0.510825623766 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_69' AS feature, 0.35159391164779663 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.75 AS "Proba_0.0", -0.287682072452 AS "LogProba_0.0", 0.25 AS "Proba_1.0", -1.38629436112 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_96' AS feature, 0.027228325605392456 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.25 AS "Proba_0.0", -1.38629436112 AS "LogProba_0.0", 0.75 AS "Proba_1.0", -0.287682072452 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, 'scaler_53' AS feature, 0.07051140069961548 AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07692307692307693 AS "Proba_0.0", -2.56494935746 AS "LogProba_0.0", 0.9230769230769231 AS "Proba_1.0", -0.0800427076735 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 8 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_44' AS feature, 1.0455701351165771 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5 AS "Proba_0.0", -0.69314718056 AS "LogProba_0.0", 0.5 AS "Proba_1.0", -0.69314718056 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_93' AS feature, -1.0326292514801025 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8695652173913043 AS "Proba_0.0", -0.139761942375 AS "LogProba_0.0", 0.13043478260869565 AS "Proba_1.0", -2.03688192726 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, 'scaler_32' AS feature, -1.126850962638855 AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9523809523809523 AS "Proba_0.0", -0.0487901641694 AS "LogProba_0.0", 0.047619047619047616 AS "Proba_1.0", -3.04452243772 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Proba_0.0" AS "Proba_0.0", "DT_node_data_2"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_2"."Proba_1.0" AS "Proba_1.0", "DT_node_data_2"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_2"."Decision" AS "Decision" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"RF_Tree_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_2, CAST(NULL AS FLOAT) AS "Score_2_0", "DT_Output_2"."Proba_0.0" AS "Proba_2_0", "DT_Output_2"."LogProba_0.0" AS "LogProba_2_0", CAST(NULL AS FLOAT) AS "Score_2_1", "DT_Output_2"."Proba_1.0" AS "Proba_2_1", "DT_Output_2"."LogProba_1.0" AS "LogProba_2_1" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_98 <= 0.6819064617156982) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_97 <= -0.2478710561990738) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_52 <= -0.6211395859718323) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.0478847026824951) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_80 <= 0.7231045365333557) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_88 <= 0.1744689792394638) THEN 8 ELSE 9 END ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 <= 1.6211700439453125) THEN 12 ELSE 13 END END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_101 <= 1.278600811958313) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_68 <= 0.8887251615524292) THEN 16 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_99 <= -0.02145715057849884) THEN 18 ELSE 19 END END ELSE 20 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Proba_0.0" AS "Proba_0.0", "Values"."LogProba_0.0" AS "LogProba_0.0", "Values"."Proba_1.0" AS "Proba_1.0", "Values"."LogProba_1.0" AS "LogProba_1.0", "Values"."Decision" AS "Decision" 
FROM (SELECT 0 AS node_id, 'scaler_98' AS feature, 0.6819064617156982 AS threshold, 39 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.5223880597014925 AS "Proba_0.0", -0.649344557902 AS "LogProba_0.0", 0.47761194029850745 AS "Proba_1.0", -0.738956716591 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_97' AS feature, -0.2478710561990738 AS threshold, 25 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.7045454545454546 AS "Proba_0.0", -0.350202429433 AS "LogProba_0.0", 0.29545454545454547 AS "Proba_1.0", -1.21924027646 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_52' AS feature, -0.6211395859718323 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.36363636363636365 AS "Proba_0.0", -1.01160091168 AS "LogProba_0.0", 0.6363636363636364 AS "Proba_1.0", -0.451985123743 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_12' AS feature, 1.0478847026824951 AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8181818181818182 AS "Proba_0.0", -0.200670695462 AS "LogProba_0.0", 0.18181818181818182 AS "Proba_1.0", -1.70474809224 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_80' AS feature, 0.7231045365333557 AS threshold, 16 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9285714285714286 AS "Proba_0.0", -0.0741079721537 AS "LogProba_0.0", 0.07142857142857142 AS "Proba_1.0", -2.63905732962 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 7 AS node_id, 'scaler_88' AS feature, 0.1744689792394638 AS threshold, 15 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.9629629629629629 AS "Proba_0.0", -0.0377403279828 AS "LogProba_0.0", 0.037037037037037035 AS "Proba_1.0", -3.295836866 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 14 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 11 AS node_id, 'scaler_12' AS feature, 1.6211700439453125 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2 AS "Proba_0.0", -1.60943791243 AS "LogProba_0.0", 0.8 AS "Proba_1.0", -0.223143551314 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 14 AS node_id, 'scaler_101' AS feature, 1.278600811958313 AS threshold, 14 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17391304347826086 AS "Proba_0.0", -1.74919985481 AS "LogProba_0.0", 0.8260869565217391 AS "Proba_1.0", -0.191055236763 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 15 AS node_id, 'scaler_68' AS feature, 0.8887251615524292 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.09523809523809523 AS "Proba_0.0", -2.35137525716 AS "LogProba_0.0", 0.9047619047619048 AS "Proba_1.0", -0.100083458557 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 16 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 10 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 17 AS node_id, 'scaler_99' AS feature, -0.02145715057849884 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.6666666666666666 AS "Proba_0.0", -0.405465108108 AS "LogProba_0.0", 0.3333333333333333 AS "Proba_1.0", -1.09861228867 AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 18 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Proba_0.0", -BINARY_FLOAT_INFINITY AS "LogProba_0.0", 1.0 AS "Proba_1.0", 0.0 AS "LogProba_1.0", 1 AS "Decision" FROM DUAL UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0 AS "Proba_0.0", 0.0 AS "LogProba_0.0", 0.0 AS "Proba_1.0", -BINARY_FLOAT_INFINITY AS "LogProba_1.0", 0 AS "Decision" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Proba_0.0" AS "Proba_0.0", "DT_node_data_3"."LogProba_0.0" AS "LogProba_0.0", "DT_node_data_3"."Proba_1.0" AS "Proba_1.0", "DT_node_data_3"."LogProba_1.0" AS "LogProba_1.0", "DT_node_data_3"."Decision" AS "Decision" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"RF_Tree_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_3, CAST(NULL AS FLOAT) AS "Score_3_0", "DT_Output_3"."Proba_0.0" AS "Proba_3_0", "DT_Output_3"."LogProba_0.0" AS "LogProba_3_0", CAST(NULL AS FLOAT) AS "Score_3_1", "DT_Output_3"."Proba_1.0" AS "Proba_3_1", "DT_Output_3"."LogProba_1.0" AS "LogProba_3_1" 
FROM "DT_Output_3"), 
"RF_Join_CTE" AS 
(SELECT "RF_Tree_0".join_key_0 AS join_key_0, "RF_Tree_0"."Score_0_0" AS "Score_0_0", "RF_Tree_0"."Proba_0_0" AS "Proba_0_0", "RF_Tree_0"."LogProba_0_0" AS "LogProba_0_0", "RF_Tree_0"."Score_0_1" AS "Score_0_1", "RF_Tree_0"."Proba_0_1" AS "Proba_0_1", "RF_Tree_0"."LogProba_0_1" AS "LogProba_0_1", "RF_Tree_1".join_key_1 AS join_key_1, "RF_Tree_1"."Score_1_0" AS "Score_1_0", "RF_Tree_1"."Proba_1_0" AS "Proba_1_0", "RF_Tree_1"."LogProba_1_0" AS "LogProba_1_0", "RF_Tree_1"."Score_1_1" AS "Score_1_1", "RF_Tree_1"."Proba_1_1" AS "Proba_1_1", "RF_Tree_1"."LogProba_1_1" AS "LogProba_1_1", "RF_Tree_2".join_key_2 AS join_key_2, "RF_Tree_2"."Score_2_0" AS "Score_2_0", "RF_Tree_2"."Proba_2_0" AS "Proba_2_0", "RF_Tree_2"."LogProba_2_0" AS "LogProba_2_0", "RF_Tree_2"."Score_2_1" AS "Score_2_1", "RF_Tree_2"."Proba_2_1" AS "Proba_2_1", "RF_Tree_2"."LogProba_2_1" AS "LogProba_2_1", "RF_Tree_3".join_key_3 AS join_key_3, "RF_Tree_3"."Score_3_0" AS "Score_3_0", "RF_Tree_3"."Proba_3_0" AS "Proba_3_0", "RF_Tree_3"."LogProba_3_0" AS "LogProba_3_0", "RF_Tree_3"."Score_3_1" AS "Score_3_1", "RF_Tree_3"."Proba_3_1" AS "Proba_3_1", "RF_Tree_3"."LogProba_3_1" AS "LogProba_3_1" 
FROM "RF_Tree_0" LEFT OUTER JOIN "RF_Tree_1" ON "RF_Tree_0".join_key_0 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_2" ON "RF_Tree_2".join_key_2 = "RF_Tree_1".join_key_1 LEFT OUTER JOIN "RF_Tree_3" ON "RF_Tree_3".join_key_3 = "RF_Tree_2".join_key_2), 
"RF_AVG_Scores" AS 
(SELECT "RF_Join_CTE".join_key_0 AS "KEY", "RF_Join_CTE"."Score_0_0" / 4 + "RF_Join_CTE"."Score_1_0" / 4 + "RF_Join_CTE"."Score_2_0" / 4 + "RF_Join_CTE"."Score_3_0" / 4 AS "Score_0", "RF_Join_CTE"."Proba_0_0" / 4 + "RF_Join_CTE"."Proba_1_0" / 4 + "RF_Join_CTE"."Proba_2_0" / 4 + "RF_Join_CTE"."Proba_3_0" / 4 AS "Proba_0", "RF_Join_CTE"."LogProba_0_0" / 4 + "RF_Join_CTE"."LogProba_1_0" / 4 + "RF_Join_CTE"."LogProba_2_0" / 4 + "RF_Join_CTE"."LogProba_3_0" / 4 AS "LogProba_0", "RF_Join_CTE"."Score_0_1" / 4 + "RF_Join_CTE"."Score_1_1" / 4 + "RF_Join_CTE"."Score_2_1" / 4 + "RF_Join_CTE"."Score_3_1" / 4 AS "Score_1", "RF_Join_CTE"."Proba_0_1" / 4 + "RF_Join_CTE"."Proba_1_1" / 4 + "RF_Join_CTE"."Proba_2_1" / 4 + "RF_Join_CTE"."Proba_3_1" / 4 AS "Proba_1", "RF_Join_CTE"."LogProba_0_1" / 4 + "RF_Join_CTE"."LogProba_1_1" / 4 + "RF_Join_CTE"."LogProba_2_1" / 4 + "RF_Join_CTE"."LogProba_3_1" / 4 AS "LogProba_1" 
FROM "RF_Join_CTE"), 
orig_cte AS 
(SELECT "RF_AVG_Scores"."KEY" AS "KEY", "RF_AVG_Scores"."Score_0" AS "Score_0", "RF_AVG_Scores"."Score_1" AS "Score_1", "RF_AVG_Scores"."Proba_0" AS "Proba_0", "RF_AVG_Scores"."Proba_1" AS "Proba_1", "RF_AVG_Scores"."LogProba_0" AS "LogProba_0", "RF_AVG_Scores"."LogProba_1" AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "RF_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max."max_LogProba" = score_class_union."LogProba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max."max_Proba" = score_class_union."Proba" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max."max_Score" = score_class_union."Score" AND score_max."KEY" = score_class_union."KEY") AS "arg_max_Score" 
FROM score_max)
 SELECT arg_max_cte."KEY" AS "KEY", arg_max_cte."Score_0" AS "Score_0", arg_max_cte."Score_1" AS "Score_1", arg_max_cte."Proba_0" AS "Proba_0", arg_max_cte."Proba_1" AS "Proba_1", CASE WHEN (arg_max_cte."Proba_0" IS NULL OR arg_max_cte."Proba_0" > 0.0) THEN ln(arg_max_cte."Proba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."Proba_1" IS NULL OR arg_max_cte."Proba_1" > 0.0) THEN ln(arg_max_cte."Proba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", arg_max_cte."arg_max_Proba" AS "Decision" 
FROM arg_max_cte