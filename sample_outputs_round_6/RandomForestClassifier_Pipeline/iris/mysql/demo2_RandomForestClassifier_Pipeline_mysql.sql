-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 5.877 ELSE `ADS`.`Feature_0` END AS imputer_output_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 3.006 ELSE `ADS`.`Feature_1` END AS imputer_output_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 3.967 ELSE `ADS`.`Feature_2` END AS imputer_output_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 1.294 ELSE `ADS`.`Feature_3` END AS imputer_output_5 
FROM iris AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.imputer_output_2 AS DOUBLE) - 5.877) / 0.803349861517 AS scaler_output_2, (CAST(`ADS_imp_1_OUT`.imputer_output_3 AS DOUBLE) - 3.006) / 0.434239565217 AS scaler_output_3, (CAST(`ADS_imp_1_OUT`.imputer_output_4 AS DOUBLE) - 3.967) / 1.64469176443 AS scaler_output_4, (CAST(`ADS_imp_1_OUT`.imputer_output_5 AS DOUBLE) - 1.294) / 0.729769826726 AS scaler_output_5 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -0.15808802843093872) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.7454404830932617) THEN 2 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.4193102717399597) THEN 4 ELSE 5 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.624854564666748) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.07673652470111847) THEN 8 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8104861974716187) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.09086950123310089) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.597680389881134) THEN 14 ELSE 15 END ELSE 16 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'scaler_output_2' AS feature, -0.15808802843093872 AS threshold, 61 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.32 AS `Proba_0.0`, -1.13943428319 AS `LogProba_0.0`, 0.3 AS `Proba_1.0`, -1.20397280433 AS `LogProba_1.0`, 0.38 AS `Proba_2.0`, -0.967584026262 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 1 AS node_id, 'scaler_output_5' AS feature, -0.7454404830932617 AS threshold, 29 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.7272727272727273 AS `Proba_0.0`, -0.318453731119 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.022727272727272728 AS `Proba_2.0`, -3.78418963392 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'scaler_output_5' AS feature, 0.4193102717399597 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9166666666666666 AS `Proba_1.0`, -0.0870113769896 AS `LogProba_1.0`, 0.08333333333333333 AS `Proba_2.0`, -2.48490664979 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 6 AS node_id, 'scaler_output_5' AS feature, 0.624854564666748 AS threshold, 32 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.3392857142857143 AS `Proba_1.0`, -1.08091271157 AS `LogProba_1.0`, 0.6607142857142857 AS `Proba_2.0`, -0.414433778091 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 7 AS node_id, 'scaler_output_5' AS feature, 0.07673652470111847 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9 AS `Proba_1.0`, -0.105360515658 AS `LogProba_1.0`, 0.1 AS `Proba_2.0`, -2.30258509299 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 9 AS node_id, 'scaler_output_4' AS feature, 0.8104861974716187 AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8571428571428571 AS `Proba_1.0`, -0.154150679827 AS `LogProba_1.0`, 0.14285714285714285 AS `Proba_2.0`, -1.94591014906 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 12 AS node_id, 'scaler_output_2' AS feature, 0.09086950123310089 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.027777777777777776 AS `Proba_1.0`, -3.58351893846 AS `LogProba_1.0`, 0.9722222222222222 AS `Proba_2.0`, -0.0281708769667 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 13 AS node_id, 'scaler_output_4' AS feature, 0.597680389881134 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.3333333333333333 AS `Proba_1.0`, -1.09861228867 AS `LogProba_1.0`, 0.6666666666666666 AS `Proba_2.0`, -0.405465108108 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data`.`Decision` AS `Decision` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0_0`, `DT_Output`.`Proba_0.0` AS `Proba_0_0`, `DT_Output`.`LogProba_0.0` AS `LogProba_0_0`, NULL AS `Score_0_1`, `DT_Output`.`Proba_1.0` AS `Proba_0_1`, `DT_Output`.`LogProba_1.0` AS `LogProba_0_1`, NULL AS `Score_0_2`, `DT_Output`.`Proba_2.0` AS `Proba_0_2`, `DT_Output`.`LogProba_2.0` AS `LogProba_0_2` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.48782503604888916) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.8311588168144226) THEN 2 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.21376602351665497) THEN 4 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.10132655501365662) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.35079553723335266) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.24410487711429596) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.628081202507019) THEN 9 ELSE 10 END ELSE 11 END ELSE 12 END ELSE 13 END END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.6584820747375488) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.2164703756570816) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.567279577255249) THEN 17 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.7618840932846069) THEN 19 ELSE 20 END END ELSE 21 END ELSE 22 END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, 0.48782503604888916 AS threshold, 57 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0.0`, -1.38629436112 AS `LogProba_0.0`, 0.31 AS `Proba_1.0`, -1.1711829815 AS `LogProba_1.0`, 0.44 AS `Proba_2.0`, -0.82098055207 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, -0.8311588168144226 AS threshold, 33 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.43859649122807015 AS `Proba_0.0`, -0.824175442966 AS `LogProba_0.0`, 0.5087719298245614 AS `Proba_1.0`, -0.675755437848 AS `LogProba_1.0`, 0.05263157894736842 AS `Proba_2.0`, -2.94443897917 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, 'scaler_output_5' AS feature, 0.21376602351665497 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.90625 AS `Proba_1.0`, -0.0984400728133 AS `LogProba_1.0`, 0.09375 AS `Proba_2.0`, -2.36712361413 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, 0.10132655501365662 AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8 AS `Proba_1.0`, -0.223143551314 AS `LogProba_1.0`, 0.2 AS `Proba_2.0`, -1.60943791243 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, 'scaler_output_5' AS feature, 0.35079553723335266 AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.625 AS `Proba_1.0`, -0.470003629246 AS `LogProba_1.0`, 0.375 AS `Proba_2.0`, -0.980829253012 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 7 AS node_id, 'scaler_output_3' AS feature, -0.24410487711429596 AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.7142857142857143 AS `Proba_1.0`, -0.336472236621 AS `LogProba_1.0`, 0.2857142857142857 AS `Proba_2.0`, -1.2527629685 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, 0.628081202507019 AS threshold, 3 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.5 AS `Proba_1.0`, -0.69314718056 AS `LogProba_1.0`, 0.5 AS `Proba_2.0`, -0.69314718056 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 7 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 14 AS node_id, 'scaler_output_4' AS feature, 0.6584820747375488 AS threshold, 24 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.046511627906976744 AS `Proba_1.0`, -3.06805293513 AS `LogProba_1.0`, 0.9534883720930233 AS `Proba_2.0`, -0.0476280489893 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 15 AS node_id, 'scaler_output_3' AS feature, 0.2164703756570816 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.75 AS `Proba_2.0`, -0.287682072452 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 16 AS node_id, 'scaler_output_4' AS feature, 0.567279577255249 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.14285714285714285 AS `Proba_1.0`, -1.94591014906 AS `LogProba_1.0`, 0.8571428571428571 AS `Proba_2.0`, -0.154150679827 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 18 AS node_id, 'scaler_output_5' AS feature, 0.7618840932846069 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.5 AS `Proba_1.0`, -0.69314718056 AS `LogProba_1.0`, 0.5 AS `Proba_2.0`, -0.69314718056 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 19 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 20 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 21 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 22 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 19 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_1`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_1`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_1`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_1`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_1`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1_0`, `DT_Output_1`.`Proba_0.0` AS `Proba_1_0`, `DT_Output_1`.`LogProba_0.0` AS `LogProba_1_0`, NULL AS `Score_1_1`, `DT_Output_1`.`Proba_1.0` AS `Proba_1_1`, `DT_Output_1`.`LogProba_1.0` AS `LogProba_1_1`, NULL AS `Score_1_2`, `DT_Output_1`.`Proba_2.0` AS `Proba_1_2`, `DT_Output_1`.`LogProba_2.0` AS `LogProba_1_2` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.7454404830932617) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.48782503604888916) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.8198239803314209) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.09086950123310089) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.7800853848457336) THEN 7 ELSE 8 END END ELSE 9 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.5368787050247192) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -0.5937637090682983) THEN 12 ELSE 13 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.624854564666748) THEN 15 ELSE 16 END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, -0.7454404830932617 AS threshold, 60 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0.0`, -1.38629436112 AS `LogProba_0.0`, 0.46 AS `Proba_1.0`, -0.776528789499 AS `LogProba_1.0`, 0.29 AS `Proba_2.0`, -1.237874356 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'scaler_output_5' AS feature, 0.48782503604888916 AS threshold, 44 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.6133333333333333 AS `Proba_1.0`, -0.488846717047 AS `LogProba_1.0`, 0.38666666666666666 AS `Proba_2.0`, -0.95019228355 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS node_id, 'scaler_output_3' AS feature, -0.8198239803314209 AS threshold, 24 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.975609756097561 AS `Proba_1.0`, -0.0246926125904 AS `LogProba_1.0`, 0.024390243902439025 AS `Proba_2.0`, -3.7135720667 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'scaler_output_2' AS feature, 0.09086950123310089 AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9230769230769231 AS `Proba_1.0`, -0.0800427076735 AS `LogProba_1.0`, 0.07692307692307693 AS `Proba_2.0`, -2.56494935746 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, 'scaler_output_4' AS feature, 0.7800853848457336 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.75 AS `Proba_1.0`, -0.287682072452 AS `LogProba_1.0`, 0.25 AS `Proba_2.0`, -1.38629436112 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 13 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 10 AS node_id, 'scaler_output_4' AS feature, 0.5368787050247192 AS threshold, 20 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.17647058823529413 AS `Proba_1.0`, -1.73460105539 AS `LogProba_1.0`, 0.8235294117647058 AS `Proba_2.0`, -0.194156014441 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 11 AS node_id, 'scaler_output_2' AS feature, -0.5937637090682983 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.6666666666666666 AS `Proba_1.0`, -0.405465108108 AS `LogProba_1.0`, 0.3333333333333333 AS `Proba_2.0`, -1.09861228867 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 14 AS node_id, 'scaler_output_5' AS feature, 0.624854564666748 AS threshold, 18 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.07142857142857142 AS `Proba_1.0`, -2.63905732962 AS `LogProba_1.0`, 0.9285714285714286 AS `Proba_2.0`, -0.0741079721537 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 17 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_2`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_2`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_2`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_2`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_2`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2_0`, `DT_Output_2`.`Proba_0.0` AS `Proba_2_0`, `DT_Output_2`.`LogProba_0.0` AS `LogProba_2_0`, NULL AS `Score_2_1`, `DT_Output_2`.`Proba_1.0` AS `Proba_2_1`, `DT_Output_2`.`LogProba_1.0` AS `LogProba_2_1`, NULL AS `Score_2_2`, `DT_Output_2`.`Proba_2.0` AS `Proba_2_2`, `DT_Output_2`.`LogProba_2.0` AS `LogProba_2_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.35079553723335266) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.9223613142967224) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.624854564666748) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.47607702016830444) THEN 6 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.8712878823280334) THEN 8 ELSE 9 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.5368787050247192) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.2164703756570816) THEN 12 ELSE 13 END ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'scaler_output_5' AS feature, 0.35079553723335266 AS threshold, 62 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0.0`, -1.38629436112 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.5 AS `Proba_2.0`, -0.69314718056 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 1 AS node_id, 'scaler_output_4' AS feature, -0.9223613142967224 AS threshold, 34 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5208333333333334 AS `Proba_0.0`, -0.65232518604 AS `LogProba_0.0`, 0.4791666666666667 AS `Proba_1.0`, -0.735706794979 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 16 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 18 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'scaler_output_5' AS feature, 0.624854564666748 AS threshold, 28 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.038461538461538464 AS `Proba_1.0`, -3.25809653802 AS `LogProba_1.0`, 0.9615384615384616 AS `Proba_2.0`, -0.0392207131533 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 5 AS node_id, 'scaler_output_4' AS feature, 0.47607702016830444 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.3333333333333333 AS `Proba_1.0`, -1.09861228867 AS `LogProba_1.0`, 0.6666666666666666 AS `Proba_2.0`, -0.405465108108 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 7 AS node_id, 'scaler_output_4' AS feature, 0.8712878823280334 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.5 AS `Proba_1.0`, -0.69314718056 AS `LogProba_1.0`, 0.5 AS `Proba_2.0`, -0.69314718056 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 10 AS node_id, 'scaler_output_4' AS feature, 0.5368787050247192 AS threshold, 25 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.02040816326530612 AS `Proba_1.0`, -3.89182029811 AS `LogProba_1.0`, 0.9795918367346939 AS `Proba_2.0`, -0.0206192872027 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 11 AS node_id, 'scaler_output_3' AS feature, 0.2164703756570816 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.75 AS `Proba_2.0`, -0.287682072452 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 23 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_3`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_3`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_3`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_3`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_3`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3_0`, `DT_Output_3`.`Proba_0.0` AS `Proba_3_0`, `DT_Output_3`.`LogProba_0.0` AS `LogProba_3_0`, NULL AS `Score_3_1`, `DT_Output_3`.`Proba_1.0` AS `Proba_3_1`, `DT_Output_3`.`LogProba_1.0` AS `LogProba_3_1`, NULL AS `Score_3_2`, `DT_Output_3`.`Proba_2.0` AS `Proba_3_2`, `DT_Output_3`.`LogProba_2.0` AS `LogProba_3_2` 
FROM `DT_Output_3`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0`.join_key_0 AS join_key_0, `RF_Tree_0`.`Score_0_0` AS `Score_0_0`, `RF_Tree_0`.`Proba_0_0` AS `Proba_0_0`, `RF_Tree_0`.`LogProba_0_0` AS `LogProba_0_0`, `RF_Tree_0`.`Score_0_1` AS `Score_0_1`, `RF_Tree_0`.`Proba_0_1` AS `Proba_0_1`, `RF_Tree_0`.`LogProba_0_1` AS `LogProba_0_1`, `RF_Tree_0`.`Score_0_2` AS `Score_0_2`, `RF_Tree_0`.`Proba_0_2` AS `Proba_0_2`, `RF_Tree_0`.`LogProba_0_2` AS `LogProba_0_2`, `RF_Tree_1`.join_key_1 AS join_key_1, `RF_Tree_1`.`Score_1_0` AS `Score_1_0`, `RF_Tree_1`.`Proba_1_0` AS `Proba_1_0`, `RF_Tree_1`.`LogProba_1_0` AS `LogProba_1_0`, `RF_Tree_1`.`Score_1_1` AS `Score_1_1`, `RF_Tree_1`.`Proba_1_1` AS `Proba_1_1`, `RF_Tree_1`.`LogProba_1_1` AS `LogProba_1_1`, `RF_Tree_1`.`Score_1_2` AS `Score_1_2`, `RF_Tree_1`.`Proba_1_2` AS `Proba_1_2`, `RF_Tree_1`.`LogProba_1_2` AS `LogProba_1_2`, `RF_Tree_2`.join_key_2 AS join_key_2, `RF_Tree_2`.`Score_2_0` AS `Score_2_0`, `RF_Tree_2`.`Proba_2_0` AS `Proba_2_0`, `RF_Tree_2`.`LogProba_2_0` AS `LogProba_2_0`, `RF_Tree_2`.`Score_2_1` AS `Score_2_1`, `RF_Tree_2`.`Proba_2_1` AS `Proba_2_1`, `RF_Tree_2`.`LogProba_2_1` AS `LogProba_2_1`, `RF_Tree_2`.`Score_2_2` AS `Score_2_2`, `RF_Tree_2`.`Proba_2_2` AS `Proba_2_2`, `RF_Tree_2`.`LogProba_2_2` AS `LogProba_2_2`, `RF_Tree_3`.join_key_3 AS join_key_3, `RF_Tree_3`.`Score_3_0` AS `Score_3_0`, `RF_Tree_3`.`Proba_3_0` AS `Proba_3_0`, `RF_Tree_3`.`LogProba_3_0` AS `LogProba_3_0`, `RF_Tree_3`.`Score_3_1` AS `Score_3_1`, `RF_Tree_3`.`Proba_3_1` AS `Proba_3_1`, `RF_Tree_3`.`LogProba_3_1` AS `LogProba_3_1`, `RF_Tree_3`.`Score_3_2` AS `Score_3_2`, `RF_Tree_3`.`Proba_3_2` AS `Proba_3_2`, `RF_Tree_3`.`LogProba_3_2` AS `LogProba_3_2` 
FROM `RF_Tree_0` LEFT OUTER JOIN `RF_Tree_1` ON `RF_Tree_0`.join_key_0 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN `RF_Tree_2` ON `RF_Tree_2`.join_key_2 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN `RF_Tree_3` ON `RF_Tree_3`.join_key_3 = `RF_Tree_2`.join_key_2), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0 AS `KEY`, `RF_Join_CTE`.`Score_0_0` / 4 + `RF_Join_CTE`.`Score_1_0` / 4 + `RF_Join_CTE`.`Score_2_0` / 4 + `RF_Join_CTE`.`Score_3_0` / 4 AS `Score_0`, `RF_Join_CTE`.`Proba_0_0` / 4 + `RF_Join_CTE`.`Proba_1_0` / 4 + `RF_Join_CTE`.`Proba_2_0` / 4 + `RF_Join_CTE`.`Proba_3_0` / 4 AS `Proba_0`, `RF_Join_CTE`.`LogProba_0_0` / 4 + `RF_Join_CTE`.`LogProba_1_0` / 4 + `RF_Join_CTE`.`LogProba_2_0` / 4 + `RF_Join_CTE`.`LogProba_3_0` / 4 AS `LogProba_0`, `RF_Join_CTE`.`Score_0_1` / 4 + `RF_Join_CTE`.`Score_1_1` / 4 + `RF_Join_CTE`.`Score_2_1` / 4 + `RF_Join_CTE`.`Score_3_1` / 4 AS `Score_1`, `RF_Join_CTE`.`Proba_0_1` / 4 + `RF_Join_CTE`.`Proba_1_1` / 4 + `RF_Join_CTE`.`Proba_2_1` / 4 + `RF_Join_CTE`.`Proba_3_1` / 4 AS `Proba_1`, `RF_Join_CTE`.`LogProba_0_1` / 4 + `RF_Join_CTE`.`LogProba_1_1` / 4 + `RF_Join_CTE`.`LogProba_2_1` / 4 + `RF_Join_CTE`.`LogProba_3_1` / 4 AS `LogProba_1`, `RF_Join_CTE`.`Score_0_2` / 4 + `RF_Join_CTE`.`Score_1_2` / 4 + `RF_Join_CTE`.`Score_2_2` / 4 + `RF_Join_CTE`.`Score_3_2` / 4 AS `Score_2`, `RF_Join_CTE`.`Proba_0_2` / 4 + `RF_Join_CTE`.`Proba_1_2` / 4 + `RF_Join_CTE`.`Proba_2_2` / 4 + `RF_Join_CTE`.`Proba_3_2` / 4 AS `Proba_2`, `RF_Join_CTE`.`LogProba_0_2` / 4 + `RF_Join_CTE`.`LogProba_1_2` / 4 + `RF_Join_CTE`.`LogProba_2_2` / 4 + `RF_Join_CTE`.`LogProba_3_2` / 4 AS `LogProba_2` 
FROM `RF_Join_CTE`), 
orig_cte AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Score_2` AS `Score_2`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`Proba_2` AS `Proba_2`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `RF_AVG_Scores`.`LogProba_2` AS `LogProba_2`, NULL AS `Decision` 
FROM `RF_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_max.`max_LogProba` = score_class_union.`LogProba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_max.`max_Proba` = score_class_union.`Proba` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_max.`max_Score` = score_class_union.`Score` AND score_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score` 
FROM score_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, arg_max_cte.`arg_max_Proba` AS `Decision` 
FROM arg_max_cte