-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 0.398883591756 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.142714794024 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN -0.0944955342476 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN -0.141407369458 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.0805681732052 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.215090130588 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.136797882719 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.0641965485187 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN -0.181004374792 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN 0.337520607143 ELSE [ADS].[Feature_9] END AS impter_11 
FROM [BinaryClass_10] AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - 0.398883591756) / 1.22831239609 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - 0.142714794024) / 0.962266040691 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - -0.0944955342476) / 0.886317237953 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - -0.141407369458) / 1.05794674624 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - 0.0805681732052) / 1.2143763026 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - 0.215090130588) / 1.07911723212 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - -0.136797882719) / 1.00924833141 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.0641965485187) / 0.980163199383 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - -0.181004374792) / 1.03449713309 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - 0.337520607143) / 1.03961612619 AS scaler_11 
FROM [ADS_imp_1_OUT]), 
linear_model_cte AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], -0.06652004361907664 * [ADS_sca_2_OUT].scaler_2 + 0.12510029303888962 * [ADS_sca_2_OUT].scaler_3 + 0.0029129468899816214 * [ADS_sca_2_OUT].scaler_4 + -0.12310025286394982 * [ADS_sca_2_OUT].scaler_5 + 0.2182671663893421 * [ADS_sca_2_OUT].scaler_6 + 0.1816109394604143 * [ADS_sca_2_OUT].scaler_7 + -0.014016868583714037 * [ADS_sca_2_OUT].scaler_8 + -0.030431925445204223 * [ADS_sca_2_OUT].scaler_9 + -0.19184192078048018 * [ADS_sca_2_OUT].scaler_10 + 0.08112067472890543 * [ADS_sca_2_OUT].scaler_11 + 0.0746268656716 AS linear_combination 
FROM [ADS_sca_2_OUT])
 SELECT linear_model_cte.[KEY] AS [KEY], -linear_model_cte.linear_combination AS [Score_0], linear_model_cte.linear_combination AS [Score_1], CAST(NULL AS FLOAT(53)) AS [Proba_0], CAST(NULL AS FLOAT(53)) AS [Proba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_1], CASE WHEN (linear_model_cte.linear_combination >= 0.0) THEN 1 ELSE 0 END AS [Decision] 
FROM linear_model_cte