-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.142775108361 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.194963914618 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.00780872058193 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 0.0361192018107 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.081860972901 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 0.139840398355 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.0227934983173 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0847508115542 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0215033800286 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.204571723193 ELSE "ADS"."Feature_9" END AS impter_11 
FROM "RandomReg_10" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.142775108361) / 1.037581019 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.194963914618) / 1.02304446427 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.00780872058193) / 0.914659852881 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 0.0361192018107) / 0.92240164531 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.081860972901) / 0.849312300176 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 0.139840398355) / 1.14066656125 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.0227934983173) / 1.07514528629 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0847508115542) / 0.943614617707 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0215033800286) / 1.05702612196 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.204571723193) / 0.864636313832 AS scaler_11 
FROM "ADS_imp_1_OUT"), 
linear_model_cte AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 23.599657847721556 * "ADS_sca_2_OUT".scaler_2 + 67.27674795353018 * "ADS_sca_2_OUT".scaler_3 + 14.294967935648161 * "ADS_sca_2_OUT".scaler_4 + 8.259601129279117 * "ADS_sca_2_OUT".scaler_5 + 46.55901704536326 * "ADS_sca_2_OUT".scaler_6 + 44.8816538234066 * "ADS_sca_2_OUT".scaler_7 + 46.424651396826484 * "ADS_sca_2_OUT".scaler_8 + 8.691233458494937 * "ADS_sca_2_OUT".scaler_9 + 46.63090694892277 * "ADS_sca_2_OUT".scaler_10 + 80.3830377001533 * "ADS_sca_2_OUT".scaler_11 + -19.1176701095 AS "Estimator" 
FROM "ADS_sca_2_OUT")
 SELECT linear_model_cte."KEY" AS "KEY", linear_model_cte."Estimator" AS "Estimator" 
FROM linear_model_cte