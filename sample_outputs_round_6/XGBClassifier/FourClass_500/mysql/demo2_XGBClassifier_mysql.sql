-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_430` < -0.109235) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_430' AS feature, -0.109235 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0651685 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0375 AS `Score`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Score` AS `Score` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`XGB_Tree_0_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0_0, `DT_Output`.`Score` AS `Score_0_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_430` < -0.109235) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_430' AS feature, -0.109235 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0601725 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0364072 AS `Score`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Score` AS `Score` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`XGB_Tree_0_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_0_1, `DT_Output_1`.`Score` AS `Score_0_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_430` < -0.109235) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_430' AS feature, -0.109235 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0555259 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352771 AS `Score`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Score` AS `Score` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`XGB_Tree_0_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_0_2, `DT_Output_2`.`Score` AS `Score_0_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_237` < 0.281945) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_237' AS feature, 0.281945 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0357153 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0529283 AS `Score`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Score` AS `Score` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`XGB_Tree_0_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_0_3, `DT_Output_3`.`Score` AS `Score_0_3` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_430` < -0.109235) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_430' AS feature, -0.109235 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0506348 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0341188 AS `Score`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Score` AS `Score` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`XGB_Tree_0_4` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_0_4, `DT_Output_4`.`Score` AS `Score_0_4` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_237` < 0.281945) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_237' AS feature, 0.281945 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.034607 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0484523 AS `Score`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Score` AS `Score` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`XGB_Tree_0_5` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_0_5, `DT_Output_5`.`Score` AS `Score_0_5` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_430` < -0.109235) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_430' AS feature, -0.109235 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0466769 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0330638 AS `Score`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Score` AS `Score` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`XGB_Tree_0_6` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_0_6, `DT_Output_6`.`Score` AS `Score_0_6` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_237` < 0.281945) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_237' AS feature, 0.281945 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0334716 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0444904 AS `Score`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Score` AS `Score` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`XGB_Tree_0_7` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_0_7, `DT_Output_7`.`Score` AS `Score_0_7` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_430` < -0.109235) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_430' AS feature, -0.109235 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0432836 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0320635 AS `Score`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Score` AS `Score` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`XGB_Tree_0_8` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_0_8, `DT_Output_8`.`Score` AS `Score_0_8` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_237` < 0.281945) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_237' AS feature, 0.281945 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0324426 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0413295 AS `Score`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Score` AS `Score` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`XGB_Tree_0_9` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_0_9, `DT_Output_9`.`Score` AS `Score_0_9` 
FROM `DT_Output_9`), 
`DT_node_lookup_10` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_190` < 1.5024) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_10` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_190' AS feature, 1.5024 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0360656 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0568421 AS `Score`) AS `Values`), 
`DT_Output_10` AS 
(SELECT `DT_node_lookup_10`.`KEY` AS `KEY`, `DT_node_lookup_10`.node_id_2 AS node_id_2, `DT_node_data_10`.node_id AS node_id, `DT_node_data_10`.feature AS feature, `DT_node_data_10`.threshold AS threshold, `DT_node_data_10`.depth AS depth, `DT_node_data_10`.parent_id AS parent_id, `DT_node_data_10`.`Score` AS `Score` 
FROM `DT_node_lookup_10` LEFT OUTER JOIN `DT_node_data_10` ON `DT_node_lookup_10`.node_id_2 = `DT_node_data_10`.node_id), 
`XGB_Tree_1_0` AS 
(SELECT `DT_Output_10`.`KEY` AS join_key_1_0, `DT_Output_10`.`Score` AS `Score_1_0` 
FROM `DT_Output_10`), 
`DT_node_lookup_11` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_434` < -0.158218) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_11` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_434' AS feature, -0.158218 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0520021 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0352652 AS `Score`) AS `Values`), 
`DT_Output_11` AS 
(SELECT `DT_node_lookup_11`.`KEY` AS `KEY`, `DT_node_lookup_11`.node_id_2 AS node_id_2, `DT_node_data_11`.node_id AS node_id, `DT_node_data_11`.feature AS feature, `DT_node_data_11`.threshold AS threshold, `DT_node_data_11`.depth AS depth, `DT_node_data_11`.parent_id AS parent_id, `DT_node_data_11`.`Score` AS `Score` 
FROM `DT_node_lookup_11` LEFT OUTER JOIN `DT_node_data_11` ON `DT_node_lookup_11`.node_id_2 = `DT_node_data_11`.node_id), 
`XGB_Tree_1_1` AS 
(SELECT `DT_Output_11`.`KEY` AS join_key_1_1, `DT_Output_11`.`Score` AS `Score_1_1` 
FROM `DT_Output_11`), 
`DT_node_lookup_12` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_190` < 1.5024) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_12` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_190' AS feature, 1.5024 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0349276 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0515198 AS `Score`) AS `Values`), 
`DT_Output_12` AS 
(SELECT `DT_node_lookup_12`.`KEY` AS `KEY`, `DT_node_lookup_12`.node_id_2 AS node_id_2, `DT_node_data_12`.node_id AS node_id, `DT_node_data_12`.feature AS feature, `DT_node_data_12`.threshold AS threshold, `DT_node_data_12`.depth AS depth, `DT_node_data_12`.parent_id AS parent_id, `DT_node_data_12`.`Score` AS `Score` 
FROM `DT_node_lookup_12` LEFT OUTER JOIN `DT_node_data_12` ON `DT_node_lookup_12`.node_id_2 = `DT_node_data_12`.node_id), 
`XGB_Tree_1_2` AS 
(SELECT `DT_Output_12`.`KEY` AS join_key_1_2, `DT_Output_12`.`Score` AS `Score_1_2` 
FROM `DT_Output_12`), 
`DT_node_lookup_13` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_434` < -0.196098) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_13` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_434' AS feature, -0.196098 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0543743 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0312255 AS `Score`) AS `Values`), 
`DT_Output_13` AS 
(SELECT `DT_node_lookup_13`.`KEY` AS `KEY`, `DT_node_lookup_13`.node_id_2 AS node_id_2, `DT_node_data_13`.node_id AS node_id, `DT_node_data_13`.feature AS feature, `DT_node_data_13`.threshold AS threshold, `DT_node_data_13`.depth AS depth, `DT_node_data_13`.parent_id AS parent_id, `DT_node_data_13`.`Score` AS `Score` 
FROM `DT_node_lookup_13` LEFT OUTER JOIN `DT_node_data_13` ON `DT_node_lookup_13`.node_id_2 = `DT_node_data_13`.node_id), 
`XGB_Tree_1_3` AS 
(SELECT `DT_Output_13`.`KEY` AS join_key_1_3, `DT_Output_13`.`Score` AS `Score_1_3` 
FROM `DT_Output_13`), 
`DT_node_lookup_14` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_434` < -0.224304) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_14` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_434' AS feature, -0.224304 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0546808 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0310503 AS `Score`) AS `Values`), 
`DT_Output_14` AS 
(SELECT `DT_node_lookup_14`.`KEY` AS `KEY`, `DT_node_lookup_14`.node_id_2 AS node_id_2, `DT_node_data_14`.node_id AS node_id, `DT_node_data_14`.feature AS feature, `DT_node_data_14`.threshold AS threshold, `DT_node_data_14`.depth AS depth, `DT_node_data_14`.parent_id AS parent_id, `DT_node_data_14`.`Score` AS `Score` 
FROM `DT_node_lookup_14` LEFT OUTER JOIN `DT_node_data_14` ON `DT_node_lookup_14`.node_id_2 = `DT_node_data_14`.node_id), 
`XGB_Tree_1_4` AS 
(SELECT `DT_Output_14`.`KEY` AS join_key_1_4, `DT_Output_14`.`Score` AS `Score_1_4` 
FROM `DT_Output_14`), 
`DT_node_lookup_15` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_190` < 1.5024) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_15` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_190' AS feature, 1.5024 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0337282 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0463052 AS `Score`) AS `Values`), 
`DT_Output_15` AS 
(SELECT `DT_node_lookup_15`.`KEY` AS `KEY`, `DT_node_lookup_15`.node_id_2 AS node_id_2, `DT_node_data_15`.node_id AS node_id, `DT_node_data_15`.feature AS feature, `DT_node_data_15`.threshold AS threshold, `DT_node_data_15`.depth AS depth, `DT_node_data_15`.parent_id AS parent_id, `DT_node_data_15`.`Score` AS `Score` 
FROM `DT_node_lookup_15` LEFT OUTER JOIN `DT_node_data_15` ON `DT_node_lookup_15`.node_id_2 = `DT_node_data_15`.node_id), 
`XGB_Tree_1_5` AS 
(SELECT `DT_Output_15`.`KEY` AS join_key_1_5, `DT_Output_15`.`Score` AS `Score_1_5` 
FROM `DT_Output_15`), 
`DT_node_lookup_16` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_434` < -0.224304) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_16` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_434' AS feature, -0.224304 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0500248 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0299592 AS `Score`) AS `Values`), 
`DT_Output_16` AS 
(SELECT `DT_node_lookup_16`.`KEY` AS `KEY`, `DT_node_lookup_16`.node_id_2 AS node_id_2, `DT_node_data_16`.node_id AS node_id, `DT_node_data_16`.feature AS feature, `DT_node_data_16`.threshold AS threshold, `DT_node_data_16`.depth AS depth, `DT_node_data_16`.parent_id AS parent_id, `DT_node_data_16`.`Score` AS `Score` 
FROM `DT_node_lookup_16` LEFT OUTER JOIN `DT_node_data_16` ON `DT_node_lookup_16`.node_id_2 = `DT_node_data_16`.node_id), 
`XGB_Tree_1_6` AS 
(SELECT `DT_Output_16`.`KEY` AS join_key_1_6, `DT_Output_16`.`Score` AS `Score_1_6` 
FROM `DT_Output_16`), 
`DT_node_lookup_17` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_190` < 1.5024) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_17` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_190' AS feature, 1.5024 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0326125 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0426599 AS `Score`) AS `Values`), 
`DT_Output_17` AS 
(SELECT `DT_node_lookup_17`.`KEY` AS `KEY`, `DT_node_lookup_17`.node_id_2 AS node_id_2, `DT_node_data_17`.node_id AS node_id, `DT_node_data_17`.feature AS feature, `DT_node_data_17`.threshold AS threshold, `DT_node_data_17`.depth AS depth, `DT_node_data_17`.parent_id AS parent_id, `DT_node_data_17`.`Score` AS `Score` 
FROM `DT_node_lookup_17` LEFT OUTER JOIN `DT_node_data_17` ON `DT_node_lookup_17`.node_id_2 = `DT_node_data_17`.node_id), 
`XGB_Tree_1_7` AS 
(SELECT `DT_Output_17`.`KEY` AS join_key_1_7, `DT_Output_17`.`Score` AS `Score_1_7` 
FROM `DT_Output_17`), 
`DT_node_lookup_18` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_434` < -0.224304) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_18` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_434' AS feature, -0.224304 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0459188 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0288822 AS `Score`) AS `Values`), 
`DT_Output_18` AS 
(SELECT `DT_node_lookup_18`.`KEY` AS `KEY`, `DT_node_lookup_18`.node_id_2 AS node_id_2, `DT_node_data_18`.node_id AS node_id, `DT_node_data_18`.feature AS feature, `DT_node_data_18`.threshold AS threshold, `DT_node_data_18`.depth AS depth, `DT_node_data_18`.parent_id AS parent_id, `DT_node_data_18`.`Score` AS `Score` 
FROM `DT_node_lookup_18` LEFT OUTER JOIN `DT_node_data_18` ON `DT_node_lookup_18`.node_id_2 = `DT_node_data_18`.node_id), 
`XGB_Tree_1_8` AS 
(SELECT `DT_Output_18`.`KEY` AS join_key_1_8, `DT_Output_18`.`Score` AS `Score_1_8` 
FROM `DT_Output_18`), 
`DT_node_lookup_19` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_210` < -0.0332581) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_19` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_210' AS feature, -0.0332581 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0381457 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0352168 AS `Score`) AS `Values`), 
`DT_Output_19` AS 
(SELECT `DT_node_lookup_19`.`KEY` AS `KEY`, `DT_node_lookup_19`.node_id_2 AS node_id_2, `DT_node_data_19`.node_id AS node_id, `DT_node_data_19`.feature AS feature, `DT_node_data_19`.threshold AS threshold, `DT_node_data_19`.depth AS depth, `DT_node_data_19`.parent_id AS parent_id, `DT_node_data_19`.`Score` AS `Score` 
FROM `DT_node_lookup_19` LEFT OUTER JOIN `DT_node_data_19` ON `DT_node_lookup_19`.node_id_2 = `DT_node_data_19`.node_id), 
`XGB_Tree_1_9` AS 
(SELECT `DT_Output_19`.`KEY` AS join_key_1_9, `DT_Output_19`.`Score` AS `Score_1_9` 
FROM `DT_Output_19`), 
`DT_node_lookup_20` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_269` < 0.028389) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_20` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_269' AS feature, 0.028389 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.04 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0557377 AS `Score`) AS `Values`), 
`DT_Output_20` AS 
(SELECT `DT_node_lookup_20`.`KEY` AS `KEY`, `DT_node_lookup_20`.node_id_2 AS node_id_2, `DT_node_data_20`.node_id AS node_id, `DT_node_data_20`.feature AS feature, `DT_node_data_20`.threshold AS threshold, `DT_node_data_20`.depth AS depth, `DT_node_data_20`.parent_id AS parent_id, `DT_node_data_20`.`Score` AS `Score` 
FROM `DT_node_lookup_20` LEFT OUTER JOIN `DT_node_data_20` ON `DT_node_lookup_20`.node_id_2 = `DT_node_data_20`.node_id), 
`XGB_Tree_2_0` AS 
(SELECT `DT_Output_20`.`KEY` AS join_key_2_0, `DT_Output_20`.`Score` AS `Score_2_0` 
FROM `DT_Output_20`), 
`DT_node_lookup_21` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_269` < 0.028389) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_21` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_269' AS feature, 0.028389 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0376051 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0544699 AS `Score`) AS `Values`), 
`DT_Output_21` AS 
(SELECT `DT_node_lookup_21`.`KEY` AS `KEY`, `DT_node_lookup_21`.node_id_2 AS node_id_2, `DT_node_data_21`.node_id AS node_id, `DT_node_data_21`.feature AS feature, `DT_node_data_21`.threshold AS threshold, `DT_node_data_21`.depth AS depth, `DT_node_data_21`.parent_id AS parent_id, `DT_node_data_21`.`Score` AS `Score` 
FROM `DT_node_lookup_21` LEFT OUTER JOIN `DT_node_data_21` ON `DT_node_lookup_21`.node_id_2 = `DT_node_data_21`.node_id), 
`XGB_Tree_2_1` AS 
(SELECT `DT_Output_21`.`KEY` AS join_key_2_1, `DT_Output_21`.`Score` AS `Score_2_1` 
FROM `DT_Output_21`), 
`DT_node_lookup_22` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_269` < 0.028389) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_22` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_269' AS feature, 0.028389 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0354608 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0532854 AS `Score`) AS `Values`), 
`DT_Output_22` AS 
(SELECT `DT_node_lookup_22`.`KEY` AS `KEY`, `DT_node_lookup_22`.node_id_2 AS node_id_2, `DT_node_data_22`.node_id AS node_id, `DT_node_data_22`.feature AS feature, `DT_node_data_22`.threshold AS threshold, `DT_node_data_22`.depth AS depth, `DT_node_data_22`.parent_id AS parent_id, `DT_node_data_22`.`Score` AS `Score` 
FROM `DT_node_lookup_22` LEFT OUTER JOIN `DT_node_data_22` ON `DT_node_lookup_22`.node_id_2 = `DT_node_data_22`.node_id), 
`XGB_Tree_2_2` AS 
(SELECT `DT_Output_22`.`KEY` AS join_key_2_2, `DT_Output_22`.`Score` AS `Score_2_2` 
FROM `DT_Output_22`), 
`DT_node_lookup_23` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_269` < 0.028389) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_23` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_269' AS feature, 0.028389 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0334428 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0521542 AS `Score`) AS `Values`), 
`DT_Output_23` AS 
(SELECT `DT_node_lookup_23`.`KEY` AS `KEY`, `DT_node_lookup_23`.node_id_2 AS node_id_2, `DT_node_data_23`.node_id AS node_id, `DT_node_data_23`.feature AS feature, `DT_node_data_23`.threshold AS threshold, `DT_node_data_23`.depth AS depth, `DT_node_data_23`.parent_id AS parent_id, `DT_node_data_23`.`Score` AS `Score` 
FROM `DT_node_lookup_23` LEFT OUTER JOIN `DT_node_data_23` ON `DT_node_lookup_23`.node_id_2 = `DT_node_data_23`.node_id), 
`XGB_Tree_2_3` AS 
(SELECT `DT_Output_23`.`KEY` AS join_key_2_3, `DT_Output_23`.`Score` AS `Score_2_3` 
FROM `DT_Output_23`), 
`DT_node_lookup_24` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_313` < 0.372605) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_24` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_313' AS feature, 0.372605 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0477818 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0369848 AS `Score`) AS `Values`), 
`DT_Output_24` AS 
(SELECT `DT_node_lookup_24`.`KEY` AS `KEY`, `DT_node_lookup_24`.node_id_2 AS node_id_2, `DT_node_data_24`.node_id AS node_id, `DT_node_data_24`.feature AS feature, `DT_node_data_24`.threshold AS threshold, `DT_node_data_24`.depth AS depth, `DT_node_data_24`.parent_id AS parent_id, `DT_node_data_24`.`Score` AS `Score` 
FROM `DT_node_lookup_24` LEFT OUTER JOIN `DT_node_data_24` ON `DT_node_lookup_24`.node_id_2 = `DT_node_data_24`.node_id), 
`XGB_Tree_2_4` AS 
(SELECT `DT_Output_24`.`KEY` AS join_key_2_4, `DT_Output_24`.`Score` AS `Score_2_4` 
FROM `DT_Output_24`), 
`DT_node_lookup_25` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_269` < 0.028389) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_25` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_269' AS feature, 0.028389 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0312134 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0504897 AS `Score`) AS `Values`), 
`DT_Output_25` AS 
(SELECT `DT_node_lookup_25`.`KEY` AS `KEY`, `DT_node_lookup_25`.node_id_2 AS node_id_2, `DT_node_data_25`.node_id AS node_id, `DT_node_data_25`.feature AS feature, `DT_node_data_25`.threshold AS threshold, `DT_node_data_25`.depth AS depth, `DT_node_data_25`.parent_id AS parent_id, `DT_node_data_25`.`Score` AS `Score` 
FROM `DT_node_lookup_25` LEFT OUTER JOIN `DT_node_data_25` ON `DT_node_lookup_25`.node_id_2 = `DT_node_data_25`.node_id), 
`XGB_Tree_2_5` AS 
(SELECT `DT_Output_25`.`KEY` AS join_key_2_5, `DT_Output_25`.`Score` AS `Score_2_5` 
FROM `DT_Output_25`), 
`DT_node_lookup_26` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_236` < -0.224383) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_26` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_236' AS feature, -0.224383 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0292514 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0521284 AS `Score`) AS `Values`), 
`DT_Output_26` AS 
(SELECT `DT_node_lookup_26`.`KEY` AS `KEY`, `DT_node_lookup_26`.node_id_2 AS node_id_2, `DT_node_data_26`.node_id AS node_id, `DT_node_data_26`.feature AS feature, `DT_node_data_26`.threshold AS threshold, `DT_node_data_26`.depth AS depth, `DT_node_data_26`.parent_id AS parent_id, `DT_node_data_26`.`Score` AS `Score` 
FROM `DT_node_lookup_26` LEFT OUTER JOIN `DT_node_data_26` ON `DT_node_lookup_26`.node_id_2 = `DT_node_data_26`.node_id), 
`XGB_Tree_2_6` AS 
(SELECT `DT_Output_26`.`KEY` AS join_key_2_6, `DT_Output_26`.`Score` AS `Score_2_6` 
FROM `DT_Output_26`), 
`DT_node_lookup_27` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_313` < 0.372605) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_27` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_313' AS feature, 0.372605 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0459665 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.035664 AS `Score`) AS `Values`), 
`DT_Output_27` AS 
(SELECT `DT_node_lookup_27`.`KEY` AS `KEY`, `DT_node_lookup_27`.node_id_2 AS node_id_2, `DT_node_data_27`.node_id AS node_id, `DT_node_data_27`.feature AS feature, `DT_node_data_27`.threshold AS threshold, `DT_node_data_27`.depth AS depth, `DT_node_data_27`.parent_id AS parent_id, `DT_node_data_27`.`Score` AS `Score` 
FROM `DT_node_lookup_27` LEFT OUTER JOIN `DT_node_data_27` ON `DT_node_lookup_27`.node_id_2 = `DT_node_data_27`.node_id), 
`XGB_Tree_2_7` AS 
(SELECT `DT_Output_27`.`KEY` AS join_key_2_7, `DT_Output_27`.`Score` AS `Score_2_7` 
FROM `DT_Output_27`), 
`DT_node_lookup_28` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_313` < 0.4228) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_28` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_313' AS feature, 0.4228 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0457572 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0377415 AS `Score`) AS `Values`), 
`DT_Output_28` AS 
(SELECT `DT_node_lookup_28`.`KEY` AS `KEY`, `DT_node_lookup_28`.node_id_2 AS node_id_2, `DT_node_data_28`.node_id AS node_id, `DT_node_data_28`.feature AS feature, `DT_node_data_28`.threshold AS threshold, `DT_node_data_28`.depth AS depth, `DT_node_data_28`.parent_id AS parent_id, `DT_node_data_28`.`Score` AS `Score` 
FROM `DT_node_lookup_28` LEFT OUTER JOIN `DT_node_data_28` ON `DT_node_lookup_28`.node_id_2 = `DT_node_data_28`.node_id), 
`XGB_Tree_2_8` AS 
(SELECT `DT_Output_28`.`KEY` AS join_key_2_8, `DT_Output_28`.`Score` AS `Score_2_8` 
FROM `DT_Output_28`), 
`DT_node_lookup_29` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_313` < 0.4228) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_29` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_313' AS feature, 0.4228 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0446863 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0356806 AS `Score`) AS `Values`), 
`DT_Output_29` AS 
(SELECT `DT_node_lookup_29`.`KEY` AS `KEY`, `DT_node_lookup_29`.node_id_2 AS node_id_2, `DT_node_data_29`.node_id AS node_id, `DT_node_data_29`.feature AS feature, `DT_node_data_29`.threshold AS threshold, `DT_node_data_29`.depth AS depth, `DT_node_data_29`.parent_id AS parent_id, `DT_node_data_29`.`Score` AS `Score` 
FROM `DT_node_lookup_29` LEFT OUTER JOIN `DT_node_data_29` ON `DT_node_lookup_29`.node_id_2 = `DT_node_data_29`.node_id), 
`XGB_Tree_2_9` AS 
(SELECT `DT_Output_29`.`KEY` AS join_key_2_9, `DT_Output_29`.`Score` AS `Score_2_9` 
FROM `DT_Output_29`), 
`DT_node_lookup_30` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_307` < 0.25646) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_30` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_307' AS feature, 0.25646 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0420168 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0612245 AS `Score`) AS `Values`), 
`DT_Output_30` AS 
(SELECT `DT_node_lookup_30`.`KEY` AS `KEY`, `DT_node_lookup_30`.node_id_2 AS node_id_2, `DT_node_data_30`.node_id AS node_id, `DT_node_data_30`.feature AS feature, `DT_node_data_30`.threshold AS threshold, `DT_node_data_30`.depth AS depth, `DT_node_data_30`.parent_id AS parent_id, `DT_node_data_30`.`Score` AS `Score` 
FROM `DT_node_lookup_30` LEFT OUTER JOIN `DT_node_data_30` ON `DT_node_lookup_30`.node_id_2 = `DT_node_data_30`.node_id), 
`XGB_Tree_3_0` AS 
(SELECT `DT_Output_30`.`KEY` AS join_key_3_0, `DT_Output_30`.`Score` AS `Score_3_0` 
FROM `DT_Output_30`), 
`DT_node_lookup_31` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_307` < 0.25646) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_31` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_307' AS feature, 0.25646 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0408338 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.056393 AS `Score`) AS `Values`), 
`DT_Output_31` AS 
(SELECT `DT_node_lookup_31`.`KEY` AS `KEY`, `DT_node_lookup_31`.node_id_2 AS node_id_2, `DT_node_data_31`.node_id AS node_id, `DT_node_data_31`.feature AS feature, `DT_node_data_31`.threshold AS threshold, `DT_node_data_31`.depth AS depth, `DT_node_data_31`.parent_id AS parent_id, `DT_node_data_31`.`Score` AS `Score` 
FROM `DT_node_lookup_31` LEFT OUTER JOIN `DT_node_data_31` ON `DT_node_lookup_31`.node_id_2 = `DT_node_data_31`.node_id), 
`XGB_Tree_3_1` AS 
(SELECT `DT_Output_31`.`KEY` AS join_key_3_1, `DT_Output_31`.`Score` AS `Score_3_1` 
FROM `DT_Output_31`), 
`DT_node_lookup_32` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_307` < 0.25646) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_32` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_307' AS feature, 0.25646 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0397233 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0522575 AS `Score`) AS `Values`), 
`DT_Output_32` AS 
(SELECT `DT_node_lookup_32`.`KEY` AS `KEY`, `DT_node_lookup_32`.node_id_2 AS node_id_2, `DT_node_data_32`.node_id AS node_id, `DT_node_data_32`.feature AS feature, `DT_node_data_32`.threshold AS threshold, `DT_node_data_32`.depth AS depth, `DT_node_data_32`.parent_id AS parent_id, `DT_node_data_32`.`Score` AS `Score` 
FROM `DT_node_lookup_32` LEFT OUTER JOIN `DT_node_data_32` ON `DT_node_lookup_32`.node_id_2 = `DT_node_data_32`.node_id), 
`XGB_Tree_3_2` AS 
(SELECT `DT_Output_32`.`KEY` AS join_key_3_2, `DT_Output_32`.`Score` AS `Score_3_2` 
FROM `DT_Output_32`), 
`DT_node_lookup_33` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_269` < 0.195041) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_33` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_269' AS feature, 0.195041 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0400337 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.049276 AS `Score`) AS `Values`), 
`DT_Output_33` AS 
(SELECT `DT_node_lookup_33`.`KEY` AS `KEY`, `DT_node_lookup_33`.node_id_2 AS node_id_2, `DT_node_data_33`.node_id AS node_id, `DT_node_data_33`.feature AS feature, `DT_node_data_33`.threshold AS threshold, `DT_node_data_33`.depth AS depth, `DT_node_data_33`.parent_id AS parent_id, `DT_node_data_33`.`Score` AS `Score` 
FROM `DT_node_lookup_33` LEFT OUTER JOIN `DT_node_data_33` ON `DT_node_lookup_33`.node_id_2 = `DT_node_data_33`.node_id), 
`XGB_Tree_3_3` AS 
(SELECT `DT_Output_33`.`KEY` AS join_key_3_3, `DT_Output_33`.`Score` AS `Score_3_3` 
FROM `DT_Output_33`), 
`DT_node_lookup_34` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_307` < 0.25646) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_34` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_307' AS feature, 0.25646 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0386212 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0476724 AS `Score`) AS `Values`), 
`DT_Output_34` AS 
(SELECT `DT_node_lookup_34`.`KEY` AS `KEY`, `DT_node_lookup_34`.node_id_2 AS node_id_2, `DT_node_data_34`.node_id AS node_id, `DT_node_data_34`.feature AS feature, `DT_node_data_34`.threshold AS threshold, `DT_node_data_34`.depth AS depth, `DT_node_data_34`.parent_id AS parent_id, `DT_node_data_34`.`Score` AS `Score` 
FROM `DT_node_lookup_34` LEFT OUTER JOIN `DT_node_data_34` ON `DT_node_lookup_34`.node_id_2 = `DT_node_data_34`.node_id), 
`XGB_Tree_3_4` AS 
(SELECT `DT_Output_34`.`KEY` AS join_key_3_4, `DT_Output_34`.`Score` AS `Score_3_4` 
FROM `DT_Output_34`), 
`DT_node_lookup_35` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_269` < 0.195041) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_35` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_269' AS feature, 0.195041 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.038712 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0444905 AS `Score`) AS `Values`), 
`DT_Output_35` AS 
(SELECT `DT_node_lookup_35`.`KEY` AS `KEY`, `DT_node_lookup_35`.node_id_2 AS node_id_2, `DT_node_data_35`.node_id AS node_id, `DT_node_data_35`.feature AS feature, `DT_node_data_35`.threshold AS threshold, `DT_node_data_35`.depth AS depth, `DT_node_data_35`.parent_id AS parent_id, `DT_node_data_35`.`Score` AS `Score` 
FROM `DT_node_lookup_35` LEFT OUTER JOIN `DT_node_data_35` ON `DT_node_lookup_35`.node_id_2 = `DT_node_data_35`.node_id), 
`XGB_Tree_3_5` AS 
(SELECT `DT_Output_35`.`KEY` AS join_key_3_5, `DT_Output_35`.`Score` AS `Score_3_5` 
FROM `DT_Output_35`), 
`DT_node_lookup_36` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_307` < 0.25646) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_36` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_307' AS feature, 0.25646 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0375888 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0437229 AS `Score`) AS `Values`), 
`DT_Output_36` AS 
(SELECT `DT_node_lookup_36`.`KEY` AS `KEY`, `DT_node_lookup_36`.node_id_2 AS node_id_2, `DT_node_data_36`.node_id AS node_id, `DT_node_data_36`.feature AS feature, `DT_node_data_36`.threshold AS threshold, `DT_node_data_36`.depth AS depth, `DT_node_data_36`.parent_id AS parent_id, `DT_node_data_36`.`Score` AS `Score` 
FROM `DT_node_lookup_36` LEFT OUTER JOIN `DT_node_data_36` ON `DT_node_lookup_36`.node_id_2 = `DT_node_data_36`.node_id), 
`XGB_Tree_3_6` AS 
(SELECT `DT_Output_36`.`KEY` AS join_key_3_6, `DT_Output_36`.`Score` AS `Score_3_6` 
FROM `DT_Output_36`), 
`DT_node_lookup_37` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_269` < 0.195041) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_37` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_269' AS feature, 0.195041 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0374919 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0405836 AS `Score`) AS `Values`), 
`DT_Output_37` AS 
(SELECT `DT_node_lookup_37`.`KEY` AS `KEY`, `DT_node_lookup_37`.node_id_2 AS node_id_2, `DT_node_data_37`.node_id AS node_id, `DT_node_data_37`.feature AS feature, `DT_node_data_37`.threshold AS threshold, `DT_node_data_37`.depth AS depth, `DT_node_data_37`.parent_id AS parent_id, `DT_node_data_37`.`Score` AS `Score` 
FROM `DT_node_lookup_37` LEFT OUTER JOIN `DT_node_data_37` ON `DT_node_lookup_37`.node_id_2 = `DT_node_data_37`.node_id), 
`XGB_Tree_3_7` AS 
(SELECT `DT_Output_37`.`KEY` AS join_key_3_7, `DT_Output_37`.`Score` AS `Score_3_7` 
FROM `DT_Output_37`), 
`DT_node_lookup_38` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_307` < 0.25646) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_38` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_307' AS feature, 0.25646 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0366101 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0403958 AS `Score`) AS `Values`), 
`DT_Output_38` AS 
(SELECT `DT_node_lookup_38`.`KEY` AS `KEY`, `DT_node_lookup_38`.node_id_2 AS node_id_2, `DT_node_data_38`.node_id AS node_id, `DT_node_data_38`.feature AS feature, `DT_node_data_38`.threshold AS threshold, `DT_node_data_38`.depth AS depth, `DT_node_data_38`.parent_id AS parent_id, `DT_node_data_38`.`Score` AS `Score` 
FROM `DT_node_lookup_38` LEFT OUTER JOIN `DT_node_data_38` ON `DT_node_lookup_38`.node_id_2 = `DT_node_data_38`.node_id), 
`XGB_Tree_3_8` AS 
(SELECT `DT_Output_38`.`KEY` AS join_key_3_8, `DT_Output_38`.`Score` AS `Score_3_8` 
FROM `DT_Output_38`), 
`DT_node_lookup_39` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_64` < -0.0941302) THEN 1 ELSE 2 END AS node_id_2 
FROM `FourClass_500` AS `ADS`), 
`DT_node_data_39` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Score` AS `Score` 
FROM (SELECT 0 AS node_id, 'Feature_64' AS feature, -0.0941302 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Score` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.0430097 AS `Score` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.034146 AS `Score`) AS `Values`), 
`DT_Output_39` AS 
(SELECT `DT_node_lookup_39`.`KEY` AS `KEY`, `DT_node_lookup_39`.node_id_2 AS node_id_2, `DT_node_data_39`.node_id AS node_id, `DT_node_data_39`.feature AS feature, `DT_node_data_39`.threshold AS threshold, `DT_node_data_39`.depth AS depth, `DT_node_data_39`.parent_id AS parent_id, `DT_node_data_39`.`Score` AS `Score` 
FROM `DT_node_lookup_39` LEFT OUTER JOIN `DT_node_data_39` ON `DT_node_lookup_39`.node_id_2 = `DT_node_data_39`.node_id), 
`XGB_Tree_3_9` AS 
(SELECT `DT_Output_39`.`KEY` AS join_key_3_9, `DT_Output_39`.`Score` AS `Score_3_9` 
FROM `DT_Output_39`), 
`XGB_Join_CTE` AS 
(SELECT `XGB_Tree_0_0`.join_key_0_0 AS join_key_0_0, `XGB_Tree_0_0`.`Score_0_0` AS `Score_0_0`, `XGB_Tree_0_1`.join_key_0_1 AS join_key_0_1, `XGB_Tree_0_1`.`Score_0_1` AS `Score_0_1`, `XGB_Tree_0_2`.join_key_0_2 AS join_key_0_2, `XGB_Tree_0_2`.`Score_0_2` AS `Score_0_2`, `XGB_Tree_0_3`.join_key_0_3 AS join_key_0_3, `XGB_Tree_0_3`.`Score_0_3` AS `Score_0_3`, `XGB_Tree_0_4`.join_key_0_4 AS join_key_0_4, `XGB_Tree_0_4`.`Score_0_4` AS `Score_0_4`, `XGB_Tree_0_5`.join_key_0_5 AS join_key_0_5, `XGB_Tree_0_5`.`Score_0_5` AS `Score_0_5`, `XGB_Tree_0_6`.join_key_0_6 AS join_key_0_6, `XGB_Tree_0_6`.`Score_0_6` AS `Score_0_6`, `XGB_Tree_0_7`.join_key_0_7 AS join_key_0_7, `XGB_Tree_0_7`.`Score_0_7` AS `Score_0_7`, `XGB_Tree_0_8`.join_key_0_8 AS join_key_0_8, `XGB_Tree_0_8`.`Score_0_8` AS `Score_0_8`, `XGB_Tree_0_9`.join_key_0_9 AS join_key_0_9, `XGB_Tree_0_9`.`Score_0_9` AS `Score_0_9`, `XGB_Tree_1_0`.join_key_1_0 AS join_key_1_0, `XGB_Tree_1_0`.`Score_1_0` AS `Score_1_0`, `XGB_Tree_1_1`.join_key_1_1 AS join_key_1_1, `XGB_Tree_1_1`.`Score_1_1` AS `Score_1_1`, `XGB_Tree_1_2`.join_key_1_2 AS join_key_1_2, `XGB_Tree_1_2`.`Score_1_2` AS `Score_1_2`, `XGB_Tree_1_3`.join_key_1_3 AS join_key_1_3, `XGB_Tree_1_3`.`Score_1_3` AS `Score_1_3`, `XGB_Tree_1_4`.join_key_1_4 AS join_key_1_4, `XGB_Tree_1_4`.`Score_1_4` AS `Score_1_4`, `XGB_Tree_1_5`.join_key_1_5 AS join_key_1_5, `XGB_Tree_1_5`.`Score_1_5` AS `Score_1_5`, `XGB_Tree_1_6`.join_key_1_6 AS join_key_1_6, `XGB_Tree_1_6`.`Score_1_6` AS `Score_1_6`, `XGB_Tree_1_7`.join_key_1_7 AS join_key_1_7, `XGB_Tree_1_7`.`Score_1_7` AS `Score_1_7`, `XGB_Tree_1_8`.join_key_1_8 AS join_key_1_8, `XGB_Tree_1_8`.`Score_1_8` AS `Score_1_8`, `XGB_Tree_1_9`.join_key_1_9 AS join_key_1_9, `XGB_Tree_1_9`.`Score_1_9` AS `Score_1_9`, `XGB_Tree_2_0`.join_key_2_0 AS join_key_2_0, `XGB_Tree_2_0`.`Score_2_0` AS `Score_2_0`, `XGB_Tree_2_1`.join_key_2_1 AS join_key_2_1, `XGB_Tree_2_1`.`Score_2_1` AS `Score_2_1`, `XGB_Tree_2_2`.join_key_2_2 AS join_key_2_2, `XGB_Tree_2_2`.`Score_2_2` AS `Score_2_2`, `XGB_Tree_2_3`.join_key_2_3 AS join_key_2_3, `XGB_Tree_2_3`.`Score_2_3` AS `Score_2_3`, `XGB_Tree_2_4`.join_key_2_4 AS join_key_2_4, `XGB_Tree_2_4`.`Score_2_4` AS `Score_2_4`, `XGB_Tree_2_5`.join_key_2_5 AS join_key_2_5, `XGB_Tree_2_5`.`Score_2_5` AS `Score_2_5`, `XGB_Tree_2_6`.join_key_2_6 AS join_key_2_6, `XGB_Tree_2_6`.`Score_2_6` AS `Score_2_6`, `XGB_Tree_2_7`.join_key_2_7 AS join_key_2_7, `XGB_Tree_2_7`.`Score_2_7` AS `Score_2_7`, `XGB_Tree_2_8`.join_key_2_8 AS join_key_2_8, `XGB_Tree_2_8`.`Score_2_8` AS `Score_2_8`, `XGB_Tree_2_9`.join_key_2_9 AS join_key_2_9, `XGB_Tree_2_9`.`Score_2_9` AS `Score_2_9`, `XGB_Tree_3_0`.join_key_3_0 AS join_key_3_0, `XGB_Tree_3_0`.`Score_3_0` AS `Score_3_0`, `XGB_Tree_3_1`.join_key_3_1 AS join_key_3_1, `XGB_Tree_3_1`.`Score_3_1` AS `Score_3_1`, `XGB_Tree_3_2`.join_key_3_2 AS join_key_3_2, `XGB_Tree_3_2`.`Score_3_2` AS `Score_3_2`, `XGB_Tree_3_3`.join_key_3_3 AS join_key_3_3, `XGB_Tree_3_3`.`Score_3_3` AS `Score_3_3`, `XGB_Tree_3_4`.join_key_3_4 AS join_key_3_4, `XGB_Tree_3_4`.`Score_3_4` AS `Score_3_4`, `XGB_Tree_3_5`.join_key_3_5 AS join_key_3_5, `XGB_Tree_3_5`.`Score_3_5` AS `Score_3_5`, `XGB_Tree_3_6`.join_key_3_6 AS join_key_3_6, `XGB_Tree_3_6`.`Score_3_6` AS `Score_3_6`, `XGB_Tree_3_7`.join_key_3_7 AS join_key_3_7, `XGB_Tree_3_7`.`Score_3_7` AS `Score_3_7`, `XGB_Tree_3_8`.join_key_3_8 AS join_key_3_8, `XGB_Tree_3_8`.`Score_3_8` AS `Score_3_8`, `XGB_Tree_3_9`.join_key_3_9 AS join_key_3_9, `XGB_Tree_3_9`.`Score_3_9` AS `Score_3_9` 
FROM `XGB_Tree_0_0` LEFT OUTER JOIN `XGB_Tree_0_1` ON `XGB_Tree_0_0`.join_key_0_0 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN `XGB_Tree_0_2` ON `XGB_Tree_0_2`.join_key_0_2 = `XGB_Tree_0_1`.join_key_0_1 LEFT OUTER JOIN `XGB_Tree_0_3` ON `XGB_Tree_0_3`.join_key_0_3 = `XGB_Tree_0_2`.join_key_0_2 LEFT OUTER JOIN `XGB_Tree_0_4` ON `XGB_Tree_0_4`.join_key_0_4 = `XGB_Tree_0_3`.join_key_0_3 LEFT OUTER JOIN `XGB_Tree_0_5` ON `XGB_Tree_0_5`.join_key_0_5 = `XGB_Tree_0_4`.join_key_0_4 LEFT OUTER JOIN `XGB_Tree_0_6` ON `XGB_Tree_0_6`.join_key_0_6 = `XGB_Tree_0_5`.join_key_0_5 LEFT OUTER JOIN `XGB_Tree_0_7` ON `XGB_Tree_0_7`.join_key_0_7 = `XGB_Tree_0_6`.join_key_0_6 LEFT OUTER JOIN `XGB_Tree_0_8` ON `XGB_Tree_0_8`.join_key_0_8 = `XGB_Tree_0_7`.join_key_0_7 LEFT OUTER JOIN `XGB_Tree_0_9` ON `XGB_Tree_0_9`.join_key_0_9 = `XGB_Tree_0_8`.join_key_0_8 LEFT OUTER JOIN `XGB_Tree_1_0` ON `XGB_Tree_1_0`.join_key_1_0 = `XGB_Tree_0_9`.join_key_0_9 LEFT OUTER JOIN `XGB_Tree_1_1` ON `XGB_Tree_1_1`.join_key_1_1 = `XGB_Tree_1_0`.join_key_1_0 LEFT OUTER JOIN `XGB_Tree_1_2` ON `XGB_Tree_1_2`.join_key_1_2 = `XGB_Tree_1_1`.join_key_1_1 LEFT OUTER JOIN `XGB_Tree_1_3` ON `XGB_Tree_1_3`.join_key_1_3 = `XGB_Tree_1_2`.join_key_1_2 LEFT OUTER JOIN `XGB_Tree_1_4` ON `XGB_Tree_1_4`.join_key_1_4 = `XGB_Tree_1_3`.join_key_1_3 LEFT OUTER JOIN `XGB_Tree_1_5` ON `XGB_Tree_1_5`.join_key_1_5 = `XGB_Tree_1_4`.join_key_1_4 LEFT OUTER JOIN `XGB_Tree_1_6` ON `XGB_Tree_1_6`.join_key_1_6 = `XGB_Tree_1_5`.join_key_1_5 LEFT OUTER JOIN `XGB_Tree_1_7` ON `XGB_Tree_1_7`.join_key_1_7 = `XGB_Tree_1_6`.join_key_1_6 LEFT OUTER JOIN `XGB_Tree_1_8` ON `XGB_Tree_1_8`.join_key_1_8 = `XGB_Tree_1_7`.join_key_1_7 LEFT OUTER JOIN `XGB_Tree_1_9` ON `XGB_Tree_1_9`.join_key_1_9 = `XGB_Tree_1_8`.join_key_1_8 LEFT OUTER JOIN `XGB_Tree_2_0` ON `XGB_Tree_2_0`.join_key_2_0 = `XGB_Tree_1_9`.join_key_1_9 LEFT OUTER JOIN `XGB_Tree_2_1` ON `XGB_Tree_2_1`.join_key_2_1 = `XGB_Tree_2_0`.join_key_2_0 LEFT OUTER JOIN `XGB_Tree_2_2` ON `XGB_Tree_2_2`.join_key_2_2 = `XGB_Tree_2_1`.join_key_2_1 LEFT OUTER JOIN `XGB_Tree_2_3` ON `XGB_Tree_2_3`.join_key_2_3 = `XGB_Tree_2_2`.join_key_2_2 LEFT OUTER JOIN `XGB_Tree_2_4` ON `XGB_Tree_2_4`.join_key_2_4 = `XGB_Tree_2_3`.join_key_2_3 LEFT OUTER JOIN `XGB_Tree_2_5` ON `XGB_Tree_2_5`.join_key_2_5 = `XGB_Tree_2_4`.join_key_2_4 LEFT OUTER JOIN `XGB_Tree_2_6` ON `XGB_Tree_2_6`.join_key_2_6 = `XGB_Tree_2_5`.join_key_2_5 LEFT OUTER JOIN `XGB_Tree_2_7` ON `XGB_Tree_2_7`.join_key_2_7 = `XGB_Tree_2_6`.join_key_2_6 LEFT OUTER JOIN `XGB_Tree_2_8` ON `XGB_Tree_2_8`.join_key_2_8 = `XGB_Tree_2_7`.join_key_2_7 LEFT OUTER JOIN `XGB_Tree_2_9` ON `XGB_Tree_2_9`.join_key_2_9 = `XGB_Tree_2_8`.join_key_2_8 LEFT OUTER JOIN `XGB_Tree_3_0` ON `XGB_Tree_3_0`.join_key_3_0 = `XGB_Tree_2_9`.join_key_2_9 LEFT OUTER JOIN `XGB_Tree_3_1` ON `XGB_Tree_3_1`.join_key_3_1 = `XGB_Tree_3_0`.join_key_3_0 LEFT OUTER JOIN `XGB_Tree_3_2` ON `XGB_Tree_3_2`.join_key_3_2 = `XGB_Tree_3_1`.join_key_3_1 LEFT OUTER JOIN `XGB_Tree_3_3` ON `XGB_Tree_3_3`.join_key_3_3 = `XGB_Tree_3_2`.join_key_3_2 LEFT OUTER JOIN `XGB_Tree_3_4` ON `XGB_Tree_3_4`.join_key_3_4 = `XGB_Tree_3_3`.join_key_3_3 LEFT OUTER JOIN `XGB_Tree_3_5` ON `XGB_Tree_3_5`.join_key_3_5 = `XGB_Tree_3_4`.join_key_3_4 LEFT OUTER JOIN `XGB_Tree_3_6` ON `XGB_Tree_3_6`.join_key_3_6 = `XGB_Tree_3_5`.join_key_3_5 LEFT OUTER JOIN `XGB_Tree_3_7` ON `XGB_Tree_3_7`.join_key_3_7 = `XGB_Tree_3_6`.join_key_3_6 LEFT OUTER JOIN `XGB_Tree_3_8` ON `XGB_Tree_3_8`.join_key_3_8 = `XGB_Tree_3_7`.join_key_3_7 LEFT OUTER JOIN `XGB_Tree_3_9` ON `XGB_Tree_3_9`.join_key_3_9 = `XGB_Tree_3_8`.join_key_3_8), 
`XGB_AVG_Scores` AS 
(SELECT `XGB_Join_CTE`.join_key_0_0 AS `KEY`, `XGB_Join_CTE`.`Score_0_0` + `XGB_Join_CTE`.`Score_0_1` + `XGB_Join_CTE`.`Score_0_2` + `XGB_Join_CTE`.`Score_0_3` + `XGB_Join_CTE`.`Score_0_4` + `XGB_Join_CTE`.`Score_0_5` + `XGB_Join_CTE`.`Score_0_6` + `XGB_Join_CTE`.`Score_0_7` + `XGB_Join_CTE`.`Score_0_8` + `XGB_Join_CTE`.`Score_0_9` AS `Score_0`, `XGB_Join_CTE`.`Score_1_0` + `XGB_Join_CTE`.`Score_1_1` + `XGB_Join_CTE`.`Score_1_2` + `XGB_Join_CTE`.`Score_1_3` + `XGB_Join_CTE`.`Score_1_4` + `XGB_Join_CTE`.`Score_1_5` + `XGB_Join_CTE`.`Score_1_6` + `XGB_Join_CTE`.`Score_1_7` + `XGB_Join_CTE`.`Score_1_8` + `XGB_Join_CTE`.`Score_1_9` AS `Score_1`, `XGB_Join_CTE`.`Score_2_0` + `XGB_Join_CTE`.`Score_2_1` + `XGB_Join_CTE`.`Score_2_2` + `XGB_Join_CTE`.`Score_2_3` + `XGB_Join_CTE`.`Score_2_4` + `XGB_Join_CTE`.`Score_2_5` + `XGB_Join_CTE`.`Score_2_6` + `XGB_Join_CTE`.`Score_2_7` + `XGB_Join_CTE`.`Score_2_8` + `XGB_Join_CTE`.`Score_2_9` AS `Score_2`, `XGB_Join_CTE`.`Score_3_0` + `XGB_Join_CTE`.`Score_3_1` + `XGB_Join_CTE`.`Score_3_2` + `XGB_Join_CTE`.`Score_3_3` + `XGB_Join_CTE`.`Score_3_4` + `XGB_Join_CTE`.`Score_3_5` + `XGB_Join_CTE`.`Score_3_6` + `XGB_Join_CTE`.`Score_3_7` + `XGB_Join_CTE`.`Score_3_8` + `XGB_Join_CTE`.`Score_3_9` AS `Score_3` 
FROM `XGB_Join_CTE`), 
orig_cte AS 
(SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Score_0` AS `Score_0`, `XGB_AVG_Scores`.`Score_1` AS `Score_1`, `XGB_AVG_Scores`.`Score_2` AS `Score_2`, `XGB_AVG_Scores`.`Score_3` AS `Score_3`, NULL AS `Proba_0`, NULL AS `Proba_1`, NULL AS `Proba_2`, NULL AS `Proba_3`, NULL AS `LogProba_0`, NULL AS `LogProba_1`, NULL AS `LogProba_2`, NULL AS `LogProba_3`, NULL AS `Decision` 
FROM `XGB_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY` AS `KEY`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, (SELECT max(score_class_union.`LogProba`) AS max_1 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_LogProba`, (SELECT max(score_class_union.`Proba`) AS max_2 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Proba`, (SELECT max(score_class_union.`Score`) AS max_3 
FROM score_class_union 
WHERE orig_cte.`KEY` = score_class_union.`KEY`) AS `max_Score` 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, exp(score_max.`Score_0` - score_max.`max_Score`) AS `exp_delta_Score_0`, exp(score_max.`Score_1` - score_max.`max_Score`) AS `exp_delta_Score_1`, exp(score_max.`Score_2` - score_max.`max_Score`) AS `exp_delta_Score_2`, exp(score_max.`Score_3` - score_max.`max_Score`) AS `exp_delta_Score_3` 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.`KEY` AS `KEY`, soft_scu.class AS class, soft_scu.`LogProba` AS `LogProba`, soft_scu.`Proba` AS `Proba`, soft_scu.`Score` AS `Score`, soft_scu.`exp_delta_Score` AS `exp_delta_Score` 
FROM (SELECT score_soft_max_comp.`KEY` AS `KEY`, 0 AS class, score_soft_max_comp.`LogProba_0` AS `LogProba`, score_soft_max_comp.`Proba_0` AS `Proba`, score_soft_max_comp.`Score_0` AS `Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 1 AS class, score_soft_max_comp.`LogProba_1` AS `LogProba`, score_soft_max_comp.`Proba_1` AS `Proba`, score_soft_max_comp.`Score_1` AS `Score`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 2 AS class, score_soft_max_comp.`LogProba_2` AS `LogProba`, score_soft_max_comp.`Proba_2` AS `Proba`, score_soft_max_comp.`Score_2` AS `Score`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score` 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.`KEY` AS `KEY`, 3 AS class, score_soft_max_comp.`LogProba_3` AS `LogProba`, score_soft_max_comp.`Proba_3` AS `Proba`, score_soft_max_comp.`Score_3` AS `Score`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score` 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.`KEY` AS `KEY`, score_soft_max_comp.`Score_0` AS `Score_0`, score_soft_max_comp.`Score_1` AS `Score_1`, score_soft_max_comp.`Score_2` AS `Score_2`, score_soft_max_comp.`Score_3` AS `Score_3`, score_soft_max_comp.`Proba_0` AS `Proba_0`, score_soft_max_comp.`Proba_1` AS `Proba_1`, score_soft_max_comp.`Proba_2` AS `Proba_2`, score_soft_max_comp.`Proba_3` AS `Proba_3`, score_soft_max_comp.`LogProba_0` AS `LogProba_0`, score_soft_max_comp.`LogProba_1` AS `LogProba_1`, score_soft_max_comp.`LogProba_2` AS `LogProba_2`, score_soft_max_comp.`LogProba_3` AS `LogProba_3`, score_soft_max_comp.`Decision` AS `Decision`, score_soft_max_comp.`max_LogProba` AS `max_LogProba`, score_soft_max_comp.`max_Proba` AS `max_Proba`, score_soft_max_comp.`max_Score` AS `max_Score`, score_soft_max_comp.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max_comp.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max_comp.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max_comp.`exp_delta_Score_3` AS `exp_delta_Score_3`, (SELECT sum(score_class_union_soft.`exp_delta_Score`) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.`KEY` = score_class_union_soft.`KEY`) AS `sum_ExpDeltaScore` 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.`KEY` AS `KEY`, score_soft_max.`Score_0` AS `Score_0`, score_soft_max.`Score_1` AS `Score_1`, score_soft_max.`Score_2` AS `Score_2`, score_soft_max.`Score_3` AS `Score_3`, score_soft_max.`Proba_0` AS `Proba_0`, score_soft_max.`Proba_1` AS `Proba_1`, score_soft_max.`Proba_2` AS `Proba_2`, score_soft_max.`Proba_3` AS `Proba_3`, score_soft_max.`LogProba_0` AS `LogProba_0`, score_soft_max.`LogProba_1` AS `LogProba_1`, score_soft_max.`LogProba_2` AS `LogProba_2`, score_soft_max.`LogProba_3` AS `LogProba_3`, score_soft_max.`Decision` AS `Decision`, score_soft_max.`max_LogProba` AS `max_LogProba`, score_soft_max.`max_Proba` AS `max_Proba`, score_soft_max.`max_Score` AS `max_Score`, score_soft_max.`exp_delta_Score_0` AS `exp_delta_Score_0`, score_soft_max.`exp_delta_Score_1` AS `exp_delta_Score_1`, score_soft_max.`exp_delta_Score_2` AS `exp_delta_Score_2`, score_soft_max.`exp_delta_Score_3` AS `exp_delta_Score_3`, score_soft_max.`sum_ExpDeltaScore` AS `sum_ExpDeltaScore`, (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.`max_LogProba` = score_class_union.`LogProba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_LogProba`, (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.`max_Proba` = score_class_union.`Proba` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Proba`, (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.`max_Score` = score_class_union.`Score` AND score_soft_max.`KEY` = score_class_union.`KEY`) AS `arg_max_Score`, score_soft_max.`exp_delta_Score_0` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_0`, score_soft_max.`exp_delta_Score_1` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_1`, score_soft_max.`exp_delta_Score_2` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_2`, score_soft_max.`exp_delta_Score_3` / score_soft_max.`sum_ExpDeltaScore` AS `SoftProba_3` 
FROM score_soft_max)
 SELECT arg_max_cte.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, NULL AS `Score_3`, arg_max_cte.`SoftProba_0` AS `Proba_0`, arg_max_cte.`SoftProba_1` AS `Proba_1`, arg_max_cte.`SoftProba_2` AS `Proba_2`, arg_max_cte.`SoftProba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`SoftProba_0` IS NULL OR arg_max_cte.`SoftProba_0` > 0.0) THEN ln(arg_max_cte.`SoftProba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`SoftProba_1` IS NULL OR arg_max_cte.`SoftProba_1` > 0.0) THEN ln(arg_max_cte.`SoftProba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`SoftProba_2` IS NULL OR arg_max_cte.`SoftProba_2` > 0.0) THEN ln(arg_max_cte.`SoftProba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`SoftProba_3` IS NULL OR arg_max_cte.`SoftProba_3` > 0.0) THEN ln(arg_max_cte.`SoftProba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Score` AS `Decision` 
FROM arg_max_cte