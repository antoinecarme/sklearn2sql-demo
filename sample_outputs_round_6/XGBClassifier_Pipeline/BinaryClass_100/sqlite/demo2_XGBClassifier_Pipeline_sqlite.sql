-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.121001781259 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.193302695543 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 0.0013138129557 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.197552511171 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN -0.0259546095711 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0159099294919 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN -0.224569084257 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.191668157348 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN -0.0407950238329 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 0.0939023839552 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN -0.335786998064 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.0495113647857 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.152858439727 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.0812532205467 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN -0.0131463034088 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.123780265456 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.112858078451 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN -0.0612815131246 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.0766766301134 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.00436113965095 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.0347570391809 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.131645317631 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN -0.00122033912475 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN -0.0165823991022 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN -0.00788749452866 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.158707851626 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN -0.0701983917883 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.0145877558051 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN -0.0664509617994 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 0.186142583653 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 0.159891075572 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.26521518382 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN -0.0197911920352 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.0166351336882 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -0.0808588550543 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 0.058537403027 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.176182298959 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 0.0840451451387 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.269641719247 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.0803638570211 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.0799102571351 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.0813538619527 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.018319336061 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 0.268908287168 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 0.102107067954 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.15025951355 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN -0.0518629469044 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.166877790917 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.149519789485 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN -0.0332690318673 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 0.00593328902503 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 0.125201144509 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.166831043747 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 0.248076490601 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 0.141167795031 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.146520604479 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.00193840241274 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.0479807550836 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.0239327311788 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.134742091243 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.0820949389913 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN -0.238621403696 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 0.023556191043 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.0658505828722 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN 0.249627485159 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN -0.156814224756 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.0886640653262 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN -0.0179935521078 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN -0.188351699366 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN 0.079187634414 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN -0.0626326247971 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.0379008991655 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.055014815698 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN 0.199298620977 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN 0.00586948970729 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN 0.111616863764 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN -0.199525142065 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN -0.0704618256661 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.12200816783 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN 0.0207694644199 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN 0.138842294329 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN -0.305803481469 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.0719349624495 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN -0.193359523032 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.0180108554617 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN -0.0399435170343 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN 0.00996905368211 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN -0.0052190931586 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN -0.0281459149129 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.0326752599718 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN 0.0236907136889 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN -0.131372053599 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.147954278624 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.150922606538 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN -0.212718313629 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.0568385545029 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.0991493590267 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.295409963702 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN -0.178355949653 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN 0.111632653006 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "BinaryClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.121001781259) / 1.0161679555 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.193302695543) / 1.03197120164 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 0.0013138129557) / 1.04978148173 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.197552511171) / 0.897046023338 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - -0.0259546095711) / 0.737552837256 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.0159099294919) / 1.06409920929 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - -0.224569084257) / 0.901583399142 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.191668157348) / 1.04380858998 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - -0.0407950238329) / 0.930949542527 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 0.0939023839552) / 0.839774213392 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - -0.335786998064) / 1.14502720484 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 0.0495113647857) / 1.18345325956 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.152858439727) / 0.897560477964 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.0812532205467) / 1.01923063599 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - -0.0131463034088) / 1.00947125723 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.123780265456) / 0.969081274197 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.112858078451) / 0.807573428633 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - -0.0612815131246) / 0.963627766382 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.0766766301134) / 1.05074844448 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 0.00436113965095) / 1.089749433 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.0347570391809) / 0.703616524818 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - -0.131645317631) / 1.17350394183 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - -0.00122033912475) / 0.121549688593 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - -0.0165823991022) / 1.01951614924 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - -0.00788749452866) / 1.10686818966 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - -0.158707851626) / 0.884529749243 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - -0.0701983917883) / 0.980480557276 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.0145877558051) / 0.884916223909 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - -0.0664509617994) / 0.961082244045 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 0.186142583653) / 0.850193811923 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 0.159891075572) / 0.969745759422 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.26521518382) / 1.07396023094 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - -0.0197911920352) / 0.93908864306 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.0166351336882) / 1.02375350692 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -0.0808588550543) / 0.954420094507 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 0.058537403027) / 1.00715133228 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - -0.176182298959) / 1.08525885569 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 0.0840451451387) / 0.959315192009 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.269641719247) / 0.990547029998 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.0803638570211) / 1.08515133881 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.0799102571351) / 1.04107631723 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 0.0813538619527) / 0.87648932297 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.018319336061) / 1.17011572002 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 0.268908287168) / 0.96042359076 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 0.102107067954) / 0.965653983741 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - -0.15025951355) / 0.981671905711 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - -0.0518629469044) / 1.17543672687 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.166877790917) / 0.99699748456 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.149519789485) / 1.02154784417 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - -0.0332690318673) / 1.11657625579 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 0.00593328902503) / 0.958479115202 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 0.125201144509) / 1.13891209344 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 0.166831043747) / 1.04569577323 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 0.248076490601) / 1.03486547842 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 0.141167795031) / 0.994578141413 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.146520604479) / 1.08176972858 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.00193840241274) / 1.04288923196 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.0479807550836) / 1.03211096618 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 0.0239327311788) / 0.924737175766 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.134742091243) / 1.01387898909 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.0820949389913) / 0.914173738968 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - -0.238621403696) / 1.11788631486 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 0.023556191043) / 0.822438184832 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.0658505828722) / 1.41495492115 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - 0.249627485159) / 1.00510463359 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - -0.156814224756) / 0.897037324241 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - 0.0886640653262) / 1.09462812782 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - -0.0179935521078) / 1.02286081698 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - -0.188351699366) / 0.965409728784 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - 0.079187634414) / 0.96143056868 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - -0.0626326247971) / 0.943218614431 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.0379008991655) / 0.983164287396 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.055014815698) / 1.05438127198 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - 0.199298620977) / 1.07001329219 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - 0.00586948970729) / 1.08432607873 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - 0.111616863764) / 1.1064949849 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - -0.199525142065) / 0.89392851096 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - -0.0704618256661) / 0.953751726236 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - 0.12200816783) / 0.891628425182 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - 0.0207694644199) / 1.05389734309 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - 0.138842294329) / 1.0357376405 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - -0.305803481469) / 1.0456300563 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.0719349624495) / 1.14081105401 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - -0.193359523032) / 0.915535227064 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.0180108554617) / 0.986931499184 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - -0.0399435170343) / 0.941379398456 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - 0.00996905368211) / 1.01556157144 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - -0.0052190931586) / 0.883554349933 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - -0.0281459149129) / 0.994952074444 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.0326752599718) / 0.966063682059 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - 0.0236907136889) / 1.51530798976 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - -0.131372053599) / 1.10359569907 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - 0.147954278624) / 0.964051366079 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - 0.150922606538) / 1.07244107892 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - -0.212718313629) / 1.15477824772 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.0568385545029) / 1.09783165557 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - -0.0991493590267) / 0.987163379604 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.295409963702) / 1.04724115051 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - -0.178355949653) / 0.93770687943 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - 0.111632653006) / 1.11939865296 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0084507 AS "Score") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"XGB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Score" AS "Score_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00693148 AS "Score") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"XGB_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_0_1, "DT_Output_1"."Score" AS "Score_0_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00568587 AS "Score") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"XGB_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_0_2, "DT_Output_2"."Score" AS "Score_0_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00466427 AS "Score") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"XGB_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_0_3, "DT_Output_3"."Score" AS "Score_0_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0038263 AS "Score") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"XGB_Tree_0_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_0_4, "DT_Output_4"."Score" AS "Score_0_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00765337 AS "Score") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"XGB_Tree_1_0" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_1_0, "DT_Output_5"."Score" AS "Score_1_0" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0062778 AS "Score") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"XGB_Tree_1_1" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_1_1, "DT_Output_6"."Score" AS "Score_1_1" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00514979 AS "Score") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"XGB_Tree_1_2" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_1_2, "DT_Output_7"."Score" AS "Score_1_2" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00422456 AS "Score") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"XGB_Tree_1_3" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_1_3, "DT_Output_8"."Score" AS "Score_1_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00346555 AS "Score") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"XGB_Tree_1_4" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_1_4, "DT_Output_9"."Score" AS "Score_1_4" 
FROM "DT_Output_9"), 
"XGB_Join_CTE" AS 
(SELECT "XGB_Tree_0_0".join_key_0_0 AS join_key_0_0, "XGB_Tree_0_0"."Score_0_0" AS "Score_0_0", "XGB_Tree_0_1".join_key_0_1 AS join_key_0_1, "XGB_Tree_0_1"."Score_0_1" AS "Score_0_1", "XGB_Tree_0_2".join_key_0_2 AS join_key_0_2, "XGB_Tree_0_2"."Score_0_2" AS "Score_0_2", "XGB_Tree_0_3".join_key_0_3 AS join_key_0_3, "XGB_Tree_0_3"."Score_0_3" AS "Score_0_3", "XGB_Tree_0_4".join_key_0_4 AS join_key_0_4, "XGB_Tree_0_4"."Score_0_4" AS "Score_0_4", "XGB_Tree_1_0".join_key_1_0 AS join_key_1_0, "XGB_Tree_1_0"."Score_1_0" AS "Score_1_0", "XGB_Tree_1_1".join_key_1_1 AS join_key_1_1, "XGB_Tree_1_1"."Score_1_1" AS "Score_1_1", "XGB_Tree_1_2".join_key_1_2 AS join_key_1_2, "XGB_Tree_1_2"."Score_1_2" AS "Score_1_2", "XGB_Tree_1_3".join_key_1_3 AS join_key_1_3, "XGB_Tree_1_3"."Score_1_3" AS "Score_1_3", "XGB_Tree_1_4".join_key_1_4 AS join_key_1_4, "XGB_Tree_1_4"."Score_1_4" AS "Score_1_4" 
FROM "XGB_Tree_0_0" LEFT OUTER JOIN "XGB_Tree_0_1" ON "XGB_Tree_0_0".join_key_0_0 = "XGB_Tree_0_1".join_key_0_1 LEFT OUTER JOIN "XGB_Tree_0_2" ON "XGB_Tree_0_2".join_key_0_2 = "XGB_Tree_0_1".join_key_0_1 LEFT OUTER JOIN "XGB_Tree_0_3" ON "XGB_Tree_0_3".join_key_0_3 = "XGB_Tree_0_2".join_key_0_2 LEFT OUTER JOIN "XGB_Tree_0_4" ON "XGB_Tree_0_4".join_key_0_4 = "XGB_Tree_0_3".join_key_0_3 LEFT OUTER JOIN "XGB_Tree_1_0" ON "XGB_Tree_1_0".join_key_1_0 = "XGB_Tree_0_4".join_key_0_4 LEFT OUTER JOIN "XGB_Tree_1_1" ON "XGB_Tree_1_1".join_key_1_1 = "XGB_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "XGB_Tree_1_2" ON "XGB_Tree_1_2".join_key_1_2 = "XGB_Tree_1_1".join_key_1_1 LEFT OUTER JOIN "XGB_Tree_1_3" ON "XGB_Tree_1_3".join_key_1_3 = "XGB_Tree_1_2".join_key_1_2 LEFT OUTER JOIN "XGB_Tree_1_4" ON "XGB_Tree_1_4".join_key_1_4 = "XGB_Tree_1_3".join_key_1_3), 
"XGB_AVG_Scores" AS 
(SELECT "XGB_Join_CTE".join_key_0_0 AS "KEY", "XGB_Join_CTE"."Score_0_0" + "XGB_Join_CTE"."Score_0_1" + "XGB_Join_CTE"."Score_0_2" + "XGB_Join_CTE"."Score_0_3" + "XGB_Join_CTE"."Score_0_4" AS "Score_0", "XGB_Join_CTE"."Score_1_0" + "XGB_Join_CTE"."Score_1_1" + "XGB_Join_CTE"."Score_1_2" + "XGB_Join_CTE"."Score_1_3" + "XGB_Join_CTE"."Score_1_4" AS "Score_1" 
FROM "XGB_Join_CTE"), 
orig_cte AS 
(SELECT "XGB_AVG_Scores"."KEY" AS "KEY", "XGB_AVG_Scores"."Score_0" AS "Score_0", "XGB_AVG_Scores"."Score_1" AS "Score_1", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "Decision" 
FROM "XGB_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte