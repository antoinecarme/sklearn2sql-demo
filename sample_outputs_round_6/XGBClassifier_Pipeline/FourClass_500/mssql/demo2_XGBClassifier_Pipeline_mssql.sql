-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN -0.134771919211 ELSE [ADS].[Feature_0] END AS impter_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 0.0128815623431 ELSE [ADS].[Feature_1] END AS impter_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.0601265589521 ELSE [ADS].[Feature_2] END AS impter_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 0.156912558301 ELSE [ADS].[Feature_3] END AS impter_5, CASE WHEN ([ADS].[Feature_4] IS NULL) THEN 0.073656429475 ELSE [ADS].[Feature_4] END AS impter_6, CASE WHEN ([ADS].[Feature_5] IS NULL) THEN 0.277420459693 ELSE [ADS].[Feature_5] END AS impter_7, CASE WHEN ([ADS].[Feature_6] IS NULL) THEN -0.0160111862259 ELSE [ADS].[Feature_6] END AS impter_8, CASE WHEN ([ADS].[Feature_7] IS NULL) THEN 0.224391638121 ELSE [ADS].[Feature_7] END AS impter_9, CASE WHEN ([ADS].[Feature_8] IS NULL) THEN 0.23210257977 ELSE [ADS].[Feature_8] END AS impter_10, CASE WHEN ([ADS].[Feature_9] IS NULL) THEN -0.130523846468 ELSE [ADS].[Feature_9] END AS impter_11, CASE WHEN ([ADS].[Feature_10] IS NULL) THEN -0.0606607066992 ELSE [ADS].[Feature_10] END AS impter_12, CASE WHEN ([ADS].[Feature_11] IS NULL) THEN -0.176794270757 ELSE [ADS].[Feature_11] END AS impter_13, CASE WHEN ([ADS].[Feature_12] IS NULL) THEN -0.221204895682 ELSE [ADS].[Feature_12] END AS impter_14, CASE WHEN ([ADS].[Feature_13] IS NULL) THEN -0.248919126082 ELSE [ADS].[Feature_13] END AS impter_15, CASE WHEN ([ADS].[Feature_14] IS NULL) THEN -0.00516902488379 ELSE [ADS].[Feature_14] END AS impter_16, CASE WHEN ([ADS].[Feature_15] IS NULL) THEN -0.0156790094923 ELSE [ADS].[Feature_15] END AS impter_17, CASE WHEN ([ADS].[Feature_16] IS NULL) THEN 1.25833299259 ELSE [ADS].[Feature_16] END AS impter_18, CASE WHEN ([ADS].[Feature_17] IS NULL) THEN -0.0344885134805 ELSE [ADS].[Feature_17] END AS impter_19, CASE WHEN ([ADS].[Feature_18] IS NULL) THEN -0.0881276315242 ELSE [ADS].[Feature_18] END AS impter_20, CASE WHEN ([ADS].[Feature_19] IS NULL) THEN -0.131804277389 ELSE [ADS].[Feature_19] END AS impter_21, CASE WHEN ([ADS].[Feature_20] IS NULL) THEN -0.144973973942 ELSE [ADS].[Feature_20] END AS impter_22, CASE WHEN ([ADS].[Feature_21] IS NULL) THEN 0.14695515685 ELSE [ADS].[Feature_21] END AS impter_23, CASE WHEN ([ADS].[Feature_22] IS NULL) THEN 0.02487395777 ELSE [ADS].[Feature_22] END AS impter_24, CASE WHEN ([ADS].[Feature_23] IS NULL) THEN -0.0635651219281 ELSE [ADS].[Feature_23] END AS impter_25, CASE WHEN ([ADS].[Feature_24] IS NULL) THEN -0.130171640607 ELSE [ADS].[Feature_24] END AS impter_26, CASE WHEN ([ADS].[Feature_25] IS NULL) THEN 0.203076837888 ELSE [ADS].[Feature_25] END AS impter_27, CASE WHEN ([ADS].[Feature_26] IS NULL) THEN 0.203220302149 ELSE [ADS].[Feature_26] END AS impter_28, CASE WHEN ([ADS].[Feature_27] IS NULL) THEN -0.00952344147608 ELSE [ADS].[Feature_27] END AS impter_29, CASE WHEN ([ADS].[Feature_28] IS NULL) THEN 0.139883052802 ELSE [ADS].[Feature_28] END AS impter_30, CASE WHEN ([ADS].[Feature_29] IS NULL) THEN 0.119572768754 ELSE [ADS].[Feature_29] END AS impter_31, CASE WHEN ([ADS].[Feature_30] IS NULL) THEN -0.0171556868653 ELSE [ADS].[Feature_30] END AS impter_32, CASE WHEN ([ADS].[Feature_31] IS NULL) THEN -0.171903724948 ELSE [ADS].[Feature_31] END AS impter_33, CASE WHEN ([ADS].[Feature_32] IS NULL) THEN 0.0371510886625 ELSE [ADS].[Feature_32] END AS impter_34, CASE WHEN ([ADS].[Feature_33] IS NULL) THEN -0.058752389368 ELSE [ADS].[Feature_33] END AS impter_35, CASE WHEN ([ADS].[Feature_34] IS NULL) THEN 0.16784589438 ELSE [ADS].[Feature_34] END AS impter_36, CASE WHEN ([ADS].[Feature_35] IS NULL) THEN 0.096990657678 ELSE [ADS].[Feature_35] END AS impter_37, CASE WHEN ([ADS].[Feature_36] IS NULL) THEN 0.037220796239 ELSE [ADS].[Feature_36] END AS impter_38, CASE WHEN ([ADS].[Feature_37] IS NULL) THEN 0.023335295287 ELSE [ADS].[Feature_37] END AS impter_39, CASE WHEN ([ADS].[Feature_38] IS NULL) THEN 0.371058018592 ELSE [ADS].[Feature_38] END AS impter_40, CASE WHEN ([ADS].[Feature_39] IS NULL) THEN 0.034889713687 ELSE [ADS].[Feature_39] END AS impter_41, CASE WHEN ([ADS].[Feature_40] IS NULL) THEN -0.0917085476644 ELSE [ADS].[Feature_40] END AS impter_42, CASE WHEN ([ADS].[Feature_41] IS NULL) THEN 0.193106564498 ELSE [ADS].[Feature_41] END AS impter_43, CASE WHEN ([ADS].[Feature_42] IS NULL) THEN -0.0500025305759 ELSE [ADS].[Feature_42] END AS impter_44, CASE WHEN ([ADS].[Feature_43] IS NULL) THEN 0.0257178322334 ELSE [ADS].[Feature_43] END AS impter_45, CASE WHEN ([ADS].[Feature_44] IS NULL) THEN 0.200596667466 ELSE [ADS].[Feature_44] END AS impter_46, CASE WHEN ([ADS].[Feature_45] IS NULL) THEN -0.00654203423648 ELSE [ADS].[Feature_45] END AS impter_47, CASE WHEN ([ADS].[Feature_46] IS NULL) THEN 0.0465168972448 ELSE [ADS].[Feature_46] END AS impter_48, CASE WHEN ([ADS].[Feature_47] IS NULL) THEN 0.173731016335 ELSE [ADS].[Feature_47] END AS impter_49, CASE WHEN ([ADS].[Feature_48] IS NULL) THEN -3.81285835156 ELSE [ADS].[Feature_48] END AS impter_50, CASE WHEN ([ADS].[Feature_49] IS NULL) THEN -0.00447403729099 ELSE [ADS].[Feature_49] END AS impter_51, CASE WHEN ([ADS].[Feature_50] IS NULL) THEN 0.0451567106678 ELSE [ADS].[Feature_50] END AS impter_52, CASE WHEN ([ADS].[Feature_51] IS NULL) THEN -0.286925072242 ELSE [ADS].[Feature_51] END AS impter_53, CASE WHEN ([ADS].[Feature_52] IS NULL) THEN 0.150198288201 ELSE [ADS].[Feature_52] END AS impter_54, CASE WHEN ([ADS].[Feature_53] IS NULL) THEN -0.0145612584782 ELSE [ADS].[Feature_53] END AS impter_55, CASE WHEN ([ADS].[Feature_54] IS NULL) THEN -0.0964081541823 ELSE [ADS].[Feature_54] END AS impter_56, CASE WHEN ([ADS].[Feature_55] IS NULL) THEN 0.0553615864739 ELSE [ADS].[Feature_55] END AS impter_57, CASE WHEN ([ADS].[Feature_56] IS NULL) THEN 0.234839198516 ELSE [ADS].[Feature_56] END AS impter_58, CASE WHEN ([ADS].[Feature_57] IS NULL) THEN -0.088984777482 ELSE [ADS].[Feature_57] END AS impter_59, CASE WHEN ([ADS].[Feature_58] IS NULL) THEN -0.0398798956138 ELSE [ADS].[Feature_58] END AS impter_60, CASE WHEN ([ADS].[Feature_59] IS NULL) THEN 0.805543126561 ELSE [ADS].[Feature_59] END AS impter_61, CASE WHEN ([ADS].[Feature_60] IS NULL) THEN 0.121414194049 ELSE [ADS].[Feature_60] END AS impter_62, CASE WHEN ([ADS].[Feature_61] IS NULL) THEN 0.0118326357156 ELSE [ADS].[Feature_61] END AS impter_63, CASE WHEN ([ADS].[Feature_62] IS NULL) THEN -0.191271450446 ELSE [ADS].[Feature_62] END AS impter_64, CASE WHEN ([ADS].[Feature_63] IS NULL) THEN 0.0860562537349 ELSE [ADS].[Feature_63] END AS impter_65, CASE WHEN ([ADS].[Feature_64] IS NULL) THEN 0.0460705166092 ELSE [ADS].[Feature_64] END AS impter_66, CASE WHEN ([ADS].[Feature_65] IS NULL) THEN -0.193483674736 ELSE [ADS].[Feature_65] END AS impter_67, CASE WHEN ([ADS].[Feature_66] IS NULL) THEN 0.195472160962 ELSE [ADS].[Feature_66] END AS impter_68, CASE WHEN ([ADS].[Feature_67] IS NULL) THEN 0.17694608658 ELSE [ADS].[Feature_67] END AS impter_69, CASE WHEN ([ADS].[Feature_68] IS NULL) THEN -0.0521331240032 ELSE [ADS].[Feature_68] END AS impter_70, CASE WHEN ([ADS].[Feature_69] IS NULL) THEN -0.142056161486 ELSE [ADS].[Feature_69] END AS impter_71, CASE WHEN ([ADS].[Feature_70] IS NULL) THEN -0.114925763823 ELSE [ADS].[Feature_70] END AS impter_72, CASE WHEN ([ADS].[Feature_71] IS NULL) THEN -0.258643279322 ELSE [ADS].[Feature_71] END AS impter_73, CASE WHEN ([ADS].[Feature_72] IS NULL) THEN 0.0650547478205 ELSE [ADS].[Feature_72] END AS impter_74, CASE WHEN ([ADS].[Feature_73] IS NULL) THEN -0.126071167348 ELSE [ADS].[Feature_73] END AS impter_75, CASE WHEN ([ADS].[Feature_74] IS NULL) THEN 0.0507291919511 ELSE [ADS].[Feature_74] END AS impter_76, CASE WHEN ([ADS].[Feature_75] IS NULL) THEN -0.122468013262 ELSE [ADS].[Feature_75] END AS impter_77, CASE WHEN ([ADS].[Feature_76] IS NULL) THEN 0.145761597766 ELSE [ADS].[Feature_76] END AS impter_78, CASE WHEN ([ADS].[Feature_77] IS NULL) THEN 0.263673770623 ELSE [ADS].[Feature_77] END AS impter_79, CASE WHEN ([ADS].[Feature_78] IS NULL) THEN 0.086152313048 ELSE [ADS].[Feature_78] END AS impter_80, CASE WHEN ([ADS].[Feature_79] IS NULL) THEN -0.0463287189975 ELSE [ADS].[Feature_79] END AS impter_81, CASE WHEN ([ADS].[Feature_80] IS NULL) THEN 0.155288601793 ELSE [ADS].[Feature_80] END AS impter_82, CASE WHEN ([ADS].[Feature_81] IS NULL) THEN -0.212931294695 ELSE [ADS].[Feature_81] END AS impter_83, CASE WHEN ([ADS].[Feature_82] IS NULL) THEN 1.06941853817 ELSE [ADS].[Feature_82] END AS impter_84, CASE WHEN ([ADS].[Feature_83] IS NULL) THEN 0.0810389898077 ELSE [ADS].[Feature_83] END AS impter_85, CASE WHEN ([ADS].[Feature_84] IS NULL) THEN 0.0113753411465 ELSE [ADS].[Feature_84] END AS impter_86, CASE WHEN ([ADS].[Feature_85] IS NULL) THEN -0.0821663038468 ELSE [ADS].[Feature_85] END AS impter_87, CASE WHEN ([ADS].[Feature_86] IS NULL) THEN 0.46425104362 ELSE [ADS].[Feature_86] END AS impter_88, CASE WHEN ([ADS].[Feature_87] IS NULL) THEN -0.35591410771 ELSE [ADS].[Feature_87] END AS impter_89, CASE WHEN ([ADS].[Feature_88] IS NULL) THEN -0.0196858104491 ELSE [ADS].[Feature_88] END AS impter_90, CASE WHEN ([ADS].[Feature_89] IS NULL) THEN -1.92021809192 ELSE [ADS].[Feature_89] END AS impter_91, CASE WHEN ([ADS].[Feature_90] IS NULL) THEN -0.103248632802 ELSE [ADS].[Feature_90] END AS impter_92, CASE WHEN ([ADS].[Feature_91] IS NULL) THEN -0.0247016959083 ELSE [ADS].[Feature_91] END AS impter_93, CASE WHEN ([ADS].[Feature_92] IS NULL) THEN 0.135340211018 ELSE [ADS].[Feature_92] END AS impter_94, CASE WHEN ([ADS].[Feature_93] IS NULL) THEN -0.0548951032104 ELSE [ADS].[Feature_93] END AS impter_95, CASE WHEN ([ADS].[Feature_94] IS NULL) THEN -0.0507521434755 ELSE [ADS].[Feature_94] END AS impter_96, CASE WHEN ([ADS].[Feature_95] IS NULL) THEN 0.152480891276 ELSE [ADS].[Feature_95] END AS impter_97, CASE WHEN ([ADS].[Feature_96] IS NULL) THEN -0.104573123174 ELSE [ADS].[Feature_96] END AS impter_98, CASE WHEN ([ADS].[Feature_97] IS NULL) THEN -0.73668995155 ELSE [ADS].[Feature_97] END AS impter_99, CASE WHEN ([ADS].[Feature_98] IS NULL) THEN -0.145451731599 ELSE [ADS].[Feature_98] END AS impter_100, CASE WHEN ([ADS].[Feature_99] IS NULL) THEN -0.0241341096536 ELSE [ADS].[Feature_99] END AS impter_101, CASE WHEN ([ADS].[Feature_100] IS NULL) THEN -0.210488342674 ELSE [ADS].[Feature_100] END AS impter_102, CASE WHEN ([ADS].[Feature_101] IS NULL) THEN -0.139220308616 ELSE [ADS].[Feature_101] END AS impter_103, CASE WHEN ([ADS].[Feature_102] IS NULL) THEN -0.426978524939 ELSE [ADS].[Feature_102] END AS impter_104, CASE WHEN ([ADS].[Feature_103] IS NULL) THEN -0.0893049799312 ELSE [ADS].[Feature_103] END AS impter_105, CASE WHEN ([ADS].[Feature_104] IS NULL) THEN 0.0900502573243 ELSE [ADS].[Feature_104] END AS impter_106, CASE WHEN ([ADS].[Feature_105] IS NULL) THEN 1.56279788643 ELSE [ADS].[Feature_105] END AS impter_107, CASE WHEN ([ADS].[Feature_106] IS NULL) THEN 0.00318058263773 ELSE [ADS].[Feature_106] END AS impter_108, CASE WHEN ([ADS].[Feature_107] IS NULL) THEN 0.034044892883 ELSE [ADS].[Feature_107] END AS impter_109, CASE WHEN ([ADS].[Feature_108] IS NULL) THEN -0.0578621172956 ELSE [ADS].[Feature_108] END AS impter_110, CASE WHEN ([ADS].[Feature_109] IS NULL) THEN 0.170370690948 ELSE [ADS].[Feature_109] END AS impter_111, CASE WHEN ([ADS].[Feature_110] IS NULL) THEN -0.0934134781135 ELSE [ADS].[Feature_110] END AS impter_112, CASE WHEN ([ADS].[Feature_111] IS NULL) THEN 0.043935316713 ELSE [ADS].[Feature_111] END AS impter_113, CASE WHEN ([ADS].[Feature_112] IS NULL) THEN 0.122130032766 ELSE [ADS].[Feature_112] END AS impter_114, CASE WHEN ([ADS].[Feature_113] IS NULL) THEN 0.209576493989 ELSE [ADS].[Feature_113] END AS impter_115, CASE WHEN ([ADS].[Feature_114] IS NULL) THEN -0.101982338056 ELSE [ADS].[Feature_114] END AS impter_116, CASE WHEN ([ADS].[Feature_115] IS NULL) THEN 0.119256690049 ELSE [ADS].[Feature_115] END AS impter_117, CASE WHEN ([ADS].[Feature_116] IS NULL) THEN 1.26209758012 ELSE [ADS].[Feature_116] END AS impter_118, CASE WHEN ([ADS].[Feature_117] IS NULL) THEN 0.0233411389451 ELSE [ADS].[Feature_117] END AS impter_119, CASE WHEN ([ADS].[Feature_118] IS NULL) THEN -0.664907799675 ELSE [ADS].[Feature_118] END AS impter_120, CASE WHEN ([ADS].[Feature_119] IS NULL) THEN -0.193423886794 ELSE [ADS].[Feature_119] END AS impter_121, CASE WHEN ([ADS].[Feature_120] IS NULL) THEN 0.400705175556 ELSE [ADS].[Feature_120] END AS impter_122, CASE WHEN ([ADS].[Feature_121] IS NULL) THEN -0.0133890716152 ELSE [ADS].[Feature_121] END AS impter_123, CASE WHEN ([ADS].[Feature_122] IS NULL) THEN -0.111111766197 ELSE [ADS].[Feature_122] END AS impter_124, CASE WHEN ([ADS].[Feature_123] IS NULL) THEN 0.137465661221 ELSE [ADS].[Feature_123] END AS impter_125, CASE WHEN ([ADS].[Feature_124] IS NULL) THEN -0.0164421053029 ELSE [ADS].[Feature_124] END AS impter_126, CASE WHEN ([ADS].[Feature_125] IS NULL) THEN 0.0916165151845 ELSE [ADS].[Feature_125] END AS impter_127, CASE WHEN ([ADS].[Feature_126] IS NULL) THEN -1.5336793864 ELSE [ADS].[Feature_126] END AS impter_128, CASE WHEN ([ADS].[Feature_127] IS NULL) THEN -0.115870812936 ELSE [ADS].[Feature_127] END AS impter_129, CASE WHEN ([ADS].[Feature_128] IS NULL) THEN -0.0898854541925 ELSE [ADS].[Feature_128] END AS impter_130, CASE WHEN ([ADS].[Feature_129] IS NULL) THEN -0.0316780162329 ELSE [ADS].[Feature_129] END AS impter_131, CASE WHEN ([ADS].[Feature_130] IS NULL) THEN -0.0250579361757 ELSE [ADS].[Feature_130] END AS impter_132, CASE WHEN ([ADS].[Feature_131] IS NULL) THEN -0.144387011765 ELSE [ADS].[Feature_131] END AS impter_133, CASE WHEN ([ADS].[Feature_132] IS NULL) THEN 0.067246917765 ELSE [ADS].[Feature_132] END AS impter_134, CASE WHEN ([ADS].[Feature_133] IS NULL) THEN -0.135314776975 ELSE [ADS].[Feature_133] END AS impter_135, CASE WHEN ([ADS].[Feature_134] IS NULL) THEN -0.940725237352 ELSE [ADS].[Feature_134] END AS impter_136, CASE WHEN ([ADS].[Feature_135] IS NULL) THEN -0.577226113909 ELSE [ADS].[Feature_135] END AS impter_137, CASE WHEN ([ADS].[Feature_136] IS NULL) THEN -0.0383064423101 ELSE [ADS].[Feature_136] END AS impter_138, CASE WHEN ([ADS].[Feature_137] IS NULL) THEN 0.0853210719273 ELSE [ADS].[Feature_137] END AS impter_139, CASE WHEN ([ADS].[Feature_138] IS NULL) THEN 0.10387292466 ELSE [ADS].[Feature_138] END AS impter_140, CASE WHEN ([ADS].[Feature_139] IS NULL) THEN -0.91447348416 ELSE [ADS].[Feature_139] END AS impter_141, CASE WHEN ([ADS].[Feature_140] IS NULL) THEN 0.169628933211 ELSE [ADS].[Feature_140] END AS impter_142, CASE WHEN ([ADS].[Feature_141] IS NULL) THEN 0.0316821519 ELSE [ADS].[Feature_141] END AS impter_143, CASE WHEN ([ADS].[Feature_142] IS NULL) THEN -0.0329372551379 ELSE [ADS].[Feature_142] END AS impter_144, CASE WHEN ([ADS].[Feature_143] IS NULL) THEN 0.0969365801012 ELSE [ADS].[Feature_143] END AS impter_145, CASE WHEN ([ADS].[Feature_144] IS NULL) THEN -0.180176127799 ELSE [ADS].[Feature_144] END AS impter_146, CASE WHEN ([ADS].[Feature_145] IS NULL) THEN 0.146641863128 ELSE [ADS].[Feature_145] END AS impter_147, CASE WHEN ([ADS].[Feature_146] IS NULL) THEN -0.0983006728106 ELSE [ADS].[Feature_146] END AS impter_148, CASE WHEN ([ADS].[Feature_147] IS NULL) THEN 0.029348467591 ELSE [ADS].[Feature_147] END AS impter_149, CASE WHEN ([ADS].[Feature_148] IS NULL) THEN 0.0388641021413 ELSE [ADS].[Feature_148] END AS impter_150, CASE WHEN ([ADS].[Feature_149] IS NULL) THEN 0.0546061892045 ELSE [ADS].[Feature_149] END AS impter_151, CASE WHEN ([ADS].[Feature_150] IS NULL) THEN 0.123721285124 ELSE [ADS].[Feature_150] END AS impter_152, CASE WHEN ([ADS].[Feature_151] IS NULL) THEN 0.0320732209986 ELSE [ADS].[Feature_151] END AS impter_153, CASE WHEN ([ADS].[Feature_152] IS NULL) THEN 0.0182034931944 ELSE [ADS].[Feature_152] END AS impter_154, CASE WHEN ([ADS].[Feature_153] IS NULL) THEN 0.169291768678 ELSE [ADS].[Feature_153] END AS impter_155, CASE WHEN ([ADS].[Feature_154] IS NULL) THEN -0.0767472519583 ELSE [ADS].[Feature_154] END AS impter_156, CASE WHEN ([ADS].[Feature_155] IS NULL) THEN 0.0163420198803 ELSE [ADS].[Feature_155] END AS impter_157, CASE WHEN ([ADS].[Feature_156] IS NULL) THEN -0.12973709765 ELSE [ADS].[Feature_156] END AS impter_158, CASE WHEN ([ADS].[Feature_157] IS NULL) THEN 0.131602346943 ELSE [ADS].[Feature_157] END AS impter_159, CASE WHEN ([ADS].[Feature_158] IS NULL) THEN -0.0135366291427 ELSE [ADS].[Feature_158] END AS impter_160, CASE WHEN ([ADS].[Feature_159] IS NULL) THEN -0.0539339042509 ELSE [ADS].[Feature_159] END AS impter_161, CASE WHEN ([ADS].[Feature_160] IS NULL) THEN -0.12151932767 ELSE [ADS].[Feature_160] END AS impter_162, CASE WHEN ([ADS].[Feature_161] IS NULL) THEN 0.0318358517299 ELSE [ADS].[Feature_161] END AS impter_163, CASE WHEN ([ADS].[Feature_162] IS NULL) THEN -0.371900955839 ELSE [ADS].[Feature_162] END AS impter_164, CASE WHEN ([ADS].[Feature_163] IS NULL) THEN 0.832251987655 ELSE [ADS].[Feature_163] END AS impter_165, CASE WHEN ([ADS].[Feature_164] IS NULL) THEN -1.32929144499 ELSE [ADS].[Feature_164] END AS impter_166, CASE WHEN ([ADS].[Feature_165] IS NULL) THEN 0.184651086126 ELSE [ADS].[Feature_165] END AS impter_167, CASE WHEN ([ADS].[Feature_166] IS NULL) THEN -0.815178638228 ELSE [ADS].[Feature_166] END AS impter_168, CASE WHEN ([ADS].[Feature_167] IS NULL) THEN 0.143086318117 ELSE [ADS].[Feature_167] END AS impter_169, CASE WHEN ([ADS].[Feature_168] IS NULL) THEN 0.141303547334 ELSE [ADS].[Feature_168] END AS impter_170, CASE WHEN ([ADS].[Feature_169] IS NULL) THEN -1.06147846791 ELSE [ADS].[Feature_169] END AS impter_171, CASE WHEN ([ADS].[Feature_170] IS NULL) THEN -0.126805468892 ELSE [ADS].[Feature_170] END AS impter_172, CASE WHEN ([ADS].[Feature_171] IS NULL) THEN 0.165971103422 ELSE [ADS].[Feature_171] END AS impter_173, CASE WHEN ([ADS].[Feature_172] IS NULL) THEN 0.16993305432 ELSE [ADS].[Feature_172] END AS impter_174, CASE WHEN ([ADS].[Feature_173] IS NULL) THEN 0.243904236966 ELSE [ADS].[Feature_173] END AS impter_175, CASE WHEN ([ADS].[Feature_174] IS NULL) THEN 0.0281700250211 ELSE [ADS].[Feature_174] END AS impter_176, CASE WHEN ([ADS].[Feature_175] IS NULL) THEN 0.168810288898 ELSE [ADS].[Feature_175] END AS impter_177, CASE WHEN ([ADS].[Feature_176] IS NULL) THEN -0.0464238281851 ELSE [ADS].[Feature_176] END AS impter_178, CASE WHEN ([ADS].[Feature_177] IS NULL) THEN -0.26518041124 ELSE [ADS].[Feature_177] END AS impter_179, CASE WHEN ([ADS].[Feature_178] IS NULL) THEN -0.917118517619 ELSE [ADS].[Feature_178] END AS impter_180, CASE WHEN ([ADS].[Feature_179] IS NULL) THEN -0.502672578241 ELSE [ADS].[Feature_179] END AS impter_181, CASE WHEN ([ADS].[Feature_180] IS NULL) THEN -0.141799187825 ELSE [ADS].[Feature_180] END AS impter_182, CASE WHEN ([ADS].[Feature_181] IS NULL) THEN 0.165152741218 ELSE [ADS].[Feature_181] END AS impter_183, CASE WHEN ([ADS].[Feature_182] IS NULL) THEN 0.0843971941585 ELSE [ADS].[Feature_182] END AS impter_184, CASE WHEN ([ADS].[Feature_183] IS NULL) THEN -1.02918029949 ELSE [ADS].[Feature_183] END AS impter_185, CASE WHEN ([ADS].[Feature_184] IS NULL) THEN 0.0585389202319 ELSE [ADS].[Feature_184] END AS impter_186, CASE WHEN ([ADS].[Feature_185] IS NULL) THEN -0.11037512368 ELSE [ADS].[Feature_185] END AS impter_187, CASE WHEN ([ADS].[Feature_186] IS NULL) THEN -0.140558025982 ELSE [ADS].[Feature_186] END AS impter_188, CASE WHEN ([ADS].[Feature_187] IS NULL) THEN 0.173868108982 ELSE [ADS].[Feature_187] END AS impter_189, CASE WHEN ([ADS].[Feature_188] IS NULL) THEN 0.0808891608086 ELSE [ADS].[Feature_188] END AS impter_190, CASE WHEN ([ADS].[Feature_189] IS NULL) THEN -0.167031100738 ELSE [ADS].[Feature_189] END AS impter_191, CASE WHEN ([ADS].[Feature_190] IS NULL) THEN -0.0502527225523 ELSE [ADS].[Feature_190] END AS impter_192, CASE WHEN ([ADS].[Feature_191] IS NULL) THEN -0.0395897985872 ELSE [ADS].[Feature_191] END AS impter_193, CASE WHEN ([ADS].[Feature_192] IS NULL) THEN 0.0987703587207 ELSE [ADS].[Feature_192] END AS impter_194, CASE WHEN ([ADS].[Feature_193] IS NULL) THEN 0.111288075361 ELSE [ADS].[Feature_193] END AS impter_195, CASE WHEN ([ADS].[Feature_194] IS NULL) THEN 0.0774555838719 ELSE [ADS].[Feature_194] END AS impter_196, CASE WHEN ([ADS].[Feature_195] IS NULL) THEN 0.0368426327267 ELSE [ADS].[Feature_195] END AS impter_197, CASE WHEN ([ADS].[Feature_196] IS NULL) THEN -0.0997939568539 ELSE [ADS].[Feature_196] END AS impter_198, CASE WHEN ([ADS].[Feature_197] IS NULL) THEN 0.0302366011416 ELSE [ADS].[Feature_197] END AS impter_199, CASE WHEN ([ADS].[Feature_198] IS NULL) THEN -0.10359852965 ELSE [ADS].[Feature_198] END AS impter_200, CASE WHEN ([ADS].[Feature_199] IS NULL) THEN 0.580745372952 ELSE [ADS].[Feature_199] END AS impter_201, CASE WHEN ([ADS].[Feature_200] IS NULL) THEN -0.167440486505 ELSE [ADS].[Feature_200] END AS impter_202, CASE WHEN ([ADS].[Feature_201] IS NULL) THEN 0.128209927674 ELSE [ADS].[Feature_201] END AS impter_203, CASE WHEN ([ADS].[Feature_202] IS NULL) THEN -0.117611025079 ELSE [ADS].[Feature_202] END AS impter_204, CASE WHEN ([ADS].[Feature_203] IS NULL) THEN -1.34268804784 ELSE [ADS].[Feature_203] END AS impter_205, CASE WHEN ([ADS].[Feature_204] IS NULL) THEN 0.0341880615689 ELSE [ADS].[Feature_204] END AS impter_206, CASE WHEN ([ADS].[Feature_205] IS NULL) THEN -0.424807631767 ELSE [ADS].[Feature_205] END AS impter_207, CASE WHEN ([ADS].[Feature_206] IS NULL) THEN -0.0190268128898 ELSE [ADS].[Feature_206] END AS impter_208, CASE WHEN ([ADS].[Feature_207] IS NULL) THEN -0.0944153365184 ELSE [ADS].[Feature_207] END AS impter_209, CASE WHEN ([ADS].[Feature_208] IS NULL) THEN -0.0371701049741 ELSE [ADS].[Feature_208] END AS impter_210, CASE WHEN ([ADS].[Feature_209] IS NULL) THEN 0.324777358919 ELSE [ADS].[Feature_209] END AS impter_211, CASE WHEN ([ADS].[Feature_210] IS NULL) THEN 0.126797311533 ELSE [ADS].[Feature_210] END AS impter_212, CASE WHEN ([ADS].[Feature_211] IS NULL) THEN -0.0307070821807 ELSE [ADS].[Feature_211] END AS impter_213, CASE WHEN ([ADS].[Feature_212] IS NULL) THEN -0.620345237636 ELSE [ADS].[Feature_212] END AS impter_214, CASE WHEN ([ADS].[Feature_213] IS NULL) THEN 0.0316827864696 ELSE [ADS].[Feature_213] END AS impter_215, CASE WHEN ([ADS].[Feature_214] IS NULL) THEN 0.303375338707 ELSE [ADS].[Feature_214] END AS impter_216, CASE WHEN ([ADS].[Feature_215] IS NULL) THEN -0.0133674378174 ELSE [ADS].[Feature_215] END AS impter_217, CASE WHEN ([ADS].[Feature_216] IS NULL) THEN 0.00988373717992 ELSE [ADS].[Feature_216] END AS impter_218, CASE WHEN ([ADS].[Feature_217] IS NULL) THEN 0.0276290164323 ELSE [ADS].[Feature_217] END AS impter_219, CASE WHEN ([ADS].[Feature_218] IS NULL) THEN -0.0220436757355 ELSE [ADS].[Feature_218] END AS impter_220, CASE WHEN ([ADS].[Feature_219] IS NULL) THEN -0.104994978045 ELSE [ADS].[Feature_219] END AS impter_221, CASE WHEN ([ADS].[Feature_220] IS NULL) THEN -0.00877851195561 ELSE [ADS].[Feature_220] END AS impter_222, CASE WHEN ([ADS].[Feature_221] IS NULL) THEN -0.0313868421379 ELSE [ADS].[Feature_221] END AS impter_223, CASE WHEN ([ADS].[Feature_222] IS NULL) THEN -0.134950752914 ELSE [ADS].[Feature_222] END AS impter_224, CASE WHEN ([ADS].[Feature_223] IS NULL) THEN -0.936442790925 ELSE [ADS].[Feature_223] END AS impter_225, CASE WHEN ([ADS].[Feature_224] IS NULL) THEN -0.0315169121652 ELSE [ADS].[Feature_224] END AS impter_226, CASE WHEN ([ADS].[Feature_225] IS NULL) THEN 0.018852796022 ELSE [ADS].[Feature_225] END AS impter_227, CASE WHEN ([ADS].[Feature_226] IS NULL) THEN -0.272648236873 ELSE [ADS].[Feature_226] END AS impter_228, CASE WHEN ([ADS].[Feature_227] IS NULL) THEN -0.0298563737575 ELSE [ADS].[Feature_227] END AS impter_229, CASE WHEN ([ADS].[Feature_228] IS NULL) THEN -0.0675733375616 ELSE [ADS].[Feature_228] END AS impter_230, CASE WHEN ([ADS].[Feature_229] IS NULL) THEN -0.0176950157771 ELSE [ADS].[Feature_229] END AS impter_231, CASE WHEN ([ADS].[Feature_230] IS NULL) THEN 0.000245577908212 ELSE [ADS].[Feature_230] END AS impter_232, CASE WHEN ([ADS].[Feature_231] IS NULL) THEN -0.0182587868548 ELSE [ADS].[Feature_231] END AS impter_233, CASE WHEN ([ADS].[Feature_232] IS NULL) THEN -0.046952749881 ELSE [ADS].[Feature_232] END AS impter_234, CASE WHEN ([ADS].[Feature_233] IS NULL) THEN 0.0031703300186 ELSE [ADS].[Feature_233] END AS impter_235, CASE WHEN ([ADS].[Feature_234] IS NULL) THEN 0.140649995993 ELSE [ADS].[Feature_234] END AS impter_236, CASE WHEN ([ADS].[Feature_235] IS NULL) THEN 0.168557803915 ELSE [ADS].[Feature_235] END AS impter_237, CASE WHEN ([ADS].[Feature_236] IS NULL) THEN -0.0627744470922 ELSE [ADS].[Feature_236] END AS impter_238, CASE WHEN ([ADS].[Feature_237] IS NULL) THEN -0.123932052285 ELSE [ADS].[Feature_237] END AS impter_239, CASE WHEN ([ADS].[Feature_238] IS NULL) THEN -0.126372688261 ELSE [ADS].[Feature_238] END AS impter_240, CASE WHEN ([ADS].[Feature_239] IS NULL) THEN 0.0452748919164 ELSE [ADS].[Feature_239] END AS impter_241, CASE WHEN ([ADS].[Feature_240] IS NULL) THEN -0.0927011364147 ELSE [ADS].[Feature_240] END AS impter_242, CASE WHEN ([ADS].[Feature_241] IS NULL) THEN 0.00632301693557 ELSE [ADS].[Feature_241] END AS impter_243, CASE WHEN ([ADS].[Feature_242] IS NULL) THEN 0.0333977092464 ELSE [ADS].[Feature_242] END AS impter_244, CASE WHEN ([ADS].[Feature_243] IS NULL) THEN -0.168083786087 ELSE [ADS].[Feature_243] END AS impter_245, CASE WHEN ([ADS].[Feature_244] IS NULL) THEN 0.0029886855719 ELSE [ADS].[Feature_244] END AS impter_246, CASE WHEN ([ADS].[Feature_245] IS NULL) THEN 0.0560848668458 ELSE [ADS].[Feature_245] END AS impter_247, CASE WHEN ([ADS].[Feature_246] IS NULL) THEN 0.0417997497239 ELSE [ADS].[Feature_246] END AS impter_248, CASE WHEN ([ADS].[Feature_247] IS NULL) THEN -0.36602280716 ELSE [ADS].[Feature_247] END AS impter_249, CASE WHEN ([ADS].[Feature_248] IS NULL) THEN 0.144638350554 ELSE [ADS].[Feature_248] END AS impter_250, CASE WHEN ([ADS].[Feature_249] IS NULL) THEN 0.151607395988 ELSE [ADS].[Feature_249] END AS impter_251, CASE WHEN ([ADS].[Feature_250] IS NULL) THEN 0.564998972142 ELSE [ADS].[Feature_250] END AS impter_252, CASE WHEN ([ADS].[Feature_251] IS NULL) THEN 0.0134344635679 ELSE [ADS].[Feature_251] END AS impter_253, CASE WHEN ([ADS].[Feature_252] IS NULL) THEN 0.560432423307 ELSE [ADS].[Feature_252] END AS impter_254, CASE WHEN ([ADS].[Feature_253] IS NULL) THEN 0.0317661481832 ELSE [ADS].[Feature_253] END AS impter_255, CASE WHEN ([ADS].[Feature_254] IS NULL) THEN 1.30298618585 ELSE [ADS].[Feature_254] END AS impter_256, CASE WHEN ([ADS].[Feature_255] IS NULL) THEN -0.143224727205 ELSE [ADS].[Feature_255] END AS impter_257, CASE WHEN ([ADS].[Feature_256] IS NULL) THEN 0.71794965434 ELSE [ADS].[Feature_256] END AS impter_258, CASE WHEN ([ADS].[Feature_257] IS NULL) THEN 8.224514251 ELSE [ADS].[Feature_257] END AS impter_259, CASE WHEN ([ADS].[Feature_258] IS NULL) THEN -0.166150293418 ELSE [ADS].[Feature_258] END AS impter_260, CASE WHEN ([ADS].[Feature_259] IS NULL) THEN -0.0157519736981 ELSE [ADS].[Feature_259] END AS impter_261, CASE WHEN ([ADS].[Feature_260] IS NULL) THEN 0.131183768265 ELSE [ADS].[Feature_260] END AS impter_262, CASE WHEN ([ADS].[Feature_261] IS NULL) THEN 0.261629555134 ELSE [ADS].[Feature_261] END AS impter_263, CASE WHEN ([ADS].[Feature_262] IS NULL) THEN -0.112711626171 ELSE [ADS].[Feature_262] END AS impter_264, CASE WHEN ([ADS].[Feature_263] IS NULL) THEN 0.148323142722 ELSE [ADS].[Feature_263] END AS impter_265, CASE WHEN ([ADS].[Feature_264] IS NULL) THEN 0.0011873792407 ELSE [ADS].[Feature_264] END AS impter_266, CASE WHEN ([ADS].[Feature_265] IS NULL) THEN 0.0306997455059 ELSE [ADS].[Feature_265] END AS impter_267, CASE WHEN ([ADS].[Feature_266] IS NULL) THEN -0.152609735448 ELSE [ADS].[Feature_266] END AS impter_268, CASE WHEN ([ADS].[Feature_267] IS NULL) THEN 1.2008552094 ELSE [ADS].[Feature_267] END AS impter_269, CASE WHEN ([ADS].[Feature_268] IS NULL) THEN -0.0383407386745 ELSE [ADS].[Feature_268] END AS impter_270, CASE WHEN ([ADS].[Feature_269] IS NULL) THEN 0.0827687070791 ELSE [ADS].[Feature_269] END AS impter_271, CASE WHEN ([ADS].[Feature_270] IS NULL) THEN 0.0286786322643 ELSE [ADS].[Feature_270] END AS impter_272, CASE WHEN ([ADS].[Feature_271] IS NULL) THEN -0.0407974454747 ELSE [ADS].[Feature_271] END AS impter_273, CASE WHEN ([ADS].[Feature_272] IS NULL) THEN -0.272281634241 ELSE [ADS].[Feature_272] END AS impter_274, CASE WHEN ([ADS].[Feature_273] IS NULL) THEN -0.131430615035 ELSE [ADS].[Feature_273] END AS impter_275, CASE WHEN ([ADS].[Feature_274] IS NULL) THEN 0.063771238394 ELSE [ADS].[Feature_274] END AS impter_276, CASE WHEN ([ADS].[Feature_275] IS NULL) THEN 0.19572302152 ELSE [ADS].[Feature_275] END AS impter_277, CASE WHEN ([ADS].[Feature_276] IS NULL) THEN -0.00884614568083 ELSE [ADS].[Feature_276] END AS impter_278, CASE WHEN ([ADS].[Feature_277] IS NULL) THEN -0.0236995464623 ELSE [ADS].[Feature_277] END AS impter_279, CASE WHEN ([ADS].[Feature_278] IS NULL) THEN -0.125576149744 ELSE [ADS].[Feature_278] END AS impter_280, CASE WHEN ([ADS].[Feature_279] IS NULL) THEN -1.67265403238 ELSE [ADS].[Feature_279] END AS impter_281, CASE WHEN ([ADS].[Feature_280] IS NULL) THEN 0.00257107800389 ELSE [ADS].[Feature_280] END AS impter_282, CASE WHEN ([ADS].[Feature_281] IS NULL) THEN 0.0607637286154 ELSE [ADS].[Feature_281] END AS impter_283, CASE WHEN ([ADS].[Feature_282] IS NULL) THEN 0.0143619934779 ELSE [ADS].[Feature_282] END AS impter_284, CASE WHEN ([ADS].[Feature_283] IS NULL) THEN -0.240880873553 ELSE [ADS].[Feature_283] END AS impter_285, CASE WHEN ([ADS].[Feature_284] IS NULL) THEN -0.636783488231 ELSE [ADS].[Feature_284] END AS impter_286, CASE WHEN ([ADS].[Feature_285] IS NULL) THEN 0.0880825931322 ELSE [ADS].[Feature_285] END AS impter_287, CASE WHEN ([ADS].[Feature_286] IS NULL) THEN 0.11706370896 ELSE [ADS].[Feature_286] END AS impter_288, CASE WHEN ([ADS].[Feature_287] IS NULL) THEN 0.36873072278 ELSE [ADS].[Feature_287] END AS impter_289, CASE WHEN ([ADS].[Feature_288] IS NULL) THEN 0.106374609659 ELSE [ADS].[Feature_288] END AS impter_290, CASE WHEN ([ADS].[Feature_289] IS NULL) THEN 0.0497285805293 ELSE [ADS].[Feature_289] END AS impter_291, CASE WHEN ([ADS].[Feature_290] IS NULL) THEN 0.145723170445 ELSE [ADS].[Feature_290] END AS impter_292, CASE WHEN ([ADS].[Feature_291] IS NULL) THEN 0.016088853359 ELSE [ADS].[Feature_291] END AS impter_293, CASE WHEN ([ADS].[Feature_292] IS NULL) THEN 0.0495228081005 ELSE [ADS].[Feature_292] END AS impter_294, CASE WHEN ([ADS].[Feature_293] IS NULL) THEN -0.0377248043369 ELSE [ADS].[Feature_293] END AS impter_295, CASE WHEN ([ADS].[Feature_294] IS NULL) THEN -0.0261527790771 ELSE [ADS].[Feature_294] END AS impter_296, CASE WHEN ([ADS].[Feature_295] IS NULL) THEN -0.258729614396 ELSE [ADS].[Feature_295] END AS impter_297, CASE WHEN ([ADS].[Feature_296] IS NULL) THEN -0.131928465271 ELSE [ADS].[Feature_296] END AS impter_298, CASE WHEN ([ADS].[Feature_297] IS NULL) THEN -0.118972452443 ELSE [ADS].[Feature_297] END AS impter_299, CASE WHEN ([ADS].[Feature_298] IS NULL) THEN -0.00804777098117 ELSE [ADS].[Feature_298] END AS impter_300, CASE WHEN ([ADS].[Feature_299] IS NULL) THEN -0.48616145874 ELSE [ADS].[Feature_299] END AS impter_301, CASE WHEN ([ADS].[Feature_300] IS NULL) THEN 0.0711481863821 ELSE [ADS].[Feature_300] END AS impter_302, CASE WHEN ([ADS].[Feature_301] IS NULL) THEN -0.0520833883796 ELSE [ADS].[Feature_301] END AS impter_303, CASE WHEN ([ADS].[Feature_302] IS NULL) THEN -0.0988571883265 ELSE [ADS].[Feature_302] END AS impter_304, CASE WHEN ([ADS].[Feature_303] IS NULL) THEN -0.872816342171 ELSE [ADS].[Feature_303] END AS impter_305, CASE WHEN ([ADS].[Feature_304] IS NULL) THEN -0.0766128251525 ELSE [ADS].[Feature_304] END AS impter_306, CASE WHEN ([ADS].[Feature_305] IS NULL) THEN 0.148496637925 ELSE [ADS].[Feature_305] END AS impter_307, CASE WHEN ([ADS].[Feature_306] IS NULL) THEN -0.0583878548168 ELSE [ADS].[Feature_306] END AS impter_308, CASE WHEN ([ADS].[Feature_307] IS NULL) THEN -0.19537281207 ELSE [ADS].[Feature_307] END AS impter_309, CASE WHEN ([ADS].[Feature_308] IS NULL) THEN 0.565370561779 ELSE [ADS].[Feature_308] END AS impter_310, CASE WHEN ([ADS].[Feature_309] IS NULL) THEN 0.105545979102 ELSE [ADS].[Feature_309] END AS impter_311, CASE WHEN ([ADS].[Feature_310] IS NULL) THEN 0.0629640073075 ELSE [ADS].[Feature_310] END AS impter_312, CASE WHEN ([ADS].[Feature_311] IS NULL) THEN 0.198276598904 ELSE [ADS].[Feature_311] END AS impter_313, CASE WHEN ([ADS].[Feature_312] IS NULL) THEN -0.128658846387 ELSE [ADS].[Feature_312] END AS impter_314, CASE WHEN ([ADS].[Feature_313] IS NULL) THEN -0.180852313464 ELSE [ADS].[Feature_313] END AS impter_315, CASE WHEN ([ADS].[Feature_314] IS NULL) THEN 0.0779075774413 ELSE [ADS].[Feature_314] END AS impter_316, CASE WHEN ([ADS].[Feature_315] IS NULL) THEN 0.000215112040169 ELSE [ADS].[Feature_315] END AS impter_317, CASE WHEN ([ADS].[Feature_316] IS NULL) THEN -0.0204879667176 ELSE [ADS].[Feature_316] END AS impter_318, CASE WHEN ([ADS].[Feature_317] IS NULL) THEN 0.503162957773 ELSE [ADS].[Feature_317] END AS impter_319, CASE WHEN ([ADS].[Feature_318] IS NULL) THEN 0.353646270242 ELSE [ADS].[Feature_318] END AS impter_320, CASE WHEN ([ADS].[Feature_319] IS NULL) THEN 0.247006219837 ELSE [ADS].[Feature_319] END AS impter_321, CASE WHEN ([ADS].[Feature_320] IS NULL) THEN -0.0193652989804 ELSE [ADS].[Feature_320] END AS impter_322, CASE WHEN ([ADS].[Feature_321] IS NULL) THEN -0.599504954324 ELSE [ADS].[Feature_321] END AS impter_323, CASE WHEN ([ADS].[Feature_322] IS NULL) THEN -0.110516974112 ELSE [ADS].[Feature_322] END AS impter_324, CASE WHEN ([ADS].[Feature_323] IS NULL) THEN 1.88552584017 ELSE [ADS].[Feature_323] END AS impter_325, CASE WHEN ([ADS].[Feature_324] IS NULL) THEN -0.0397824482677 ELSE [ADS].[Feature_324] END AS impter_326, CASE WHEN ([ADS].[Feature_325] IS NULL) THEN 0.10219980499 ELSE [ADS].[Feature_325] END AS impter_327, CASE WHEN ([ADS].[Feature_326] IS NULL) THEN 0.059603180595 ELSE [ADS].[Feature_326] END AS impter_328, CASE WHEN ([ADS].[Feature_327] IS NULL) THEN 0.164686075345 ELSE [ADS].[Feature_327] END AS impter_329, CASE WHEN ([ADS].[Feature_328] IS NULL) THEN 0.100013105043 ELSE [ADS].[Feature_328] END AS impter_330, CASE WHEN ([ADS].[Feature_329] IS NULL) THEN -0.00883287974389 ELSE [ADS].[Feature_329] END AS impter_331, CASE WHEN ([ADS].[Feature_330] IS NULL) THEN -0.191204844905 ELSE [ADS].[Feature_330] END AS impter_332, CASE WHEN ([ADS].[Feature_331] IS NULL) THEN -0.106954834493 ELSE [ADS].[Feature_331] END AS impter_333, CASE WHEN ([ADS].[Feature_332] IS NULL) THEN -0.208191338555 ELSE [ADS].[Feature_332] END AS impter_334, CASE WHEN ([ADS].[Feature_333] IS NULL) THEN 0.0921463114383 ELSE [ADS].[Feature_333] END AS impter_335, CASE WHEN ([ADS].[Feature_334] IS NULL) THEN -0.0210271754896 ELSE [ADS].[Feature_334] END AS impter_336, CASE WHEN ([ADS].[Feature_335] IS NULL) THEN 0.0248005566537 ELSE [ADS].[Feature_335] END AS impter_337, CASE WHEN ([ADS].[Feature_336] IS NULL) THEN 1.41412513844 ELSE [ADS].[Feature_336] END AS impter_338, CASE WHEN ([ADS].[Feature_337] IS NULL) THEN -0.184019076664 ELSE [ADS].[Feature_337] END AS impter_339, CASE WHEN ([ADS].[Feature_338] IS NULL) THEN 0.0118190339028 ELSE [ADS].[Feature_338] END AS impter_340, CASE WHEN ([ADS].[Feature_339] IS NULL) THEN 1.56985482751 ELSE [ADS].[Feature_339] END AS impter_341, CASE WHEN ([ADS].[Feature_340] IS NULL) THEN 0.0033666591485 ELSE [ADS].[Feature_340] END AS impter_342, CASE WHEN ([ADS].[Feature_341] IS NULL) THEN 0.398023876101 ELSE [ADS].[Feature_341] END AS impter_343, CASE WHEN ([ADS].[Feature_342] IS NULL) THEN 6.80318890185e-05 ELSE [ADS].[Feature_342] END AS impter_344, CASE WHEN ([ADS].[Feature_343] IS NULL) THEN -0.00314817405783 ELSE [ADS].[Feature_343] END AS impter_345, CASE WHEN ([ADS].[Feature_344] IS NULL) THEN 0.0148586168205 ELSE [ADS].[Feature_344] END AS impter_346, CASE WHEN ([ADS].[Feature_345] IS NULL) THEN 0.13229577523 ELSE [ADS].[Feature_345] END AS impter_347, CASE WHEN ([ADS].[Feature_346] IS NULL) THEN -0.179400111508 ELSE [ADS].[Feature_346] END AS impter_348, CASE WHEN ([ADS].[Feature_347] IS NULL) THEN 0.0508238163495 ELSE [ADS].[Feature_347] END AS impter_349, CASE WHEN ([ADS].[Feature_348] IS NULL) THEN -0.0193565021788 ELSE [ADS].[Feature_348] END AS impter_350, CASE WHEN ([ADS].[Feature_349] IS NULL) THEN 0.0982059686957 ELSE [ADS].[Feature_349] END AS impter_351, CASE WHEN ([ADS].[Feature_350] IS NULL) THEN 0.181521855677 ELSE [ADS].[Feature_350] END AS impter_352, CASE WHEN ([ADS].[Feature_351] IS NULL) THEN 0.00681025293028 ELSE [ADS].[Feature_351] END AS impter_353, CASE WHEN ([ADS].[Feature_352] IS NULL) THEN 0.129193110559 ELSE [ADS].[Feature_352] END AS impter_354, CASE WHEN ([ADS].[Feature_353] IS NULL) THEN 0.0959431247867 ELSE [ADS].[Feature_353] END AS impter_355, CASE WHEN ([ADS].[Feature_354] IS NULL) THEN -0.127062639139 ELSE [ADS].[Feature_354] END AS impter_356, CASE WHEN ([ADS].[Feature_355] IS NULL) THEN 0.157928287413 ELSE [ADS].[Feature_355] END AS impter_357, CASE WHEN ([ADS].[Feature_356] IS NULL) THEN 0.0801690195408 ELSE [ADS].[Feature_356] END AS impter_358, CASE WHEN ([ADS].[Feature_357] IS NULL) THEN 0.172867928701 ELSE [ADS].[Feature_357] END AS impter_359, CASE WHEN ([ADS].[Feature_358] IS NULL) THEN -0.0590072377435 ELSE [ADS].[Feature_358] END AS impter_360, CASE WHEN ([ADS].[Feature_359] IS NULL) THEN -0.147765725472 ELSE [ADS].[Feature_359] END AS impter_361, CASE WHEN ([ADS].[Feature_360] IS NULL) THEN 0.311578081194 ELSE [ADS].[Feature_360] END AS impter_362, CASE WHEN ([ADS].[Feature_361] IS NULL) THEN -0.262352119639 ELSE [ADS].[Feature_361] END AS impter_363, CASE WHEN ([ADS].[Feature_362] IS NULL) THEN 0.298976071447 ELSE [ADS].[Feature_362] END AS impter_364, CASE WHEN ([ADS].[Feature_363] IS NULL) THEN 0.0635522208105 ELSE [ADS].[Feature_363] END AS impter_365, CASE WHEN ([ADS].[Feature_364] IS NULL) THEN 0.0696538909171 ELSE [ADS].[Feature_364] END AS impter_366, CASE WHEN ([ADS].[Feature_365] IS NULL) THEN 0.901036611346 ELSE [ADS].[Feature_365] END AS impter_367, CASE WHEN ([ADS].[Feature_366] IS NULL) THEN -0.0880748721349 ELSE [ADS].[Feature_366] END AS impter_368, CASE WHEN ([ADS].[Feature_367] IS NULL) THEN -0.230342684375 ELSE [ADS].[Feature_367] END AS impter_369, CASE WHEN ([ADS].[Feature_368] IS NULL) THEN 0.0543713165178 ELSE [ADS].[Feature_368] END AS impter_370, CASE WHEN ([ADS].[Feature_369] IS NULL) THEN -0.133410568078 ELSE [ADS].[Feature_369] END AS impter_371, CASE WHEN ([ADS].[Feature_370] IS NULL) THEN 0.00352504428195 ELSE [ADS].[Feature_370] END AS impter_372, CASE WHEN ([ADS].[Feature_371] IS NULL) THEN -0.201129060158 ELSE [ADS].[Feature_371] END AS impter_373, CASE WHEN ([ADS].[Feature_372] IS NULL) THEN -0.287866231405 ELSE [ADS].[Feature_372] END AS impter_374, CASE WHEN ([ADS].[Feature_373] IS NULL) THEN 0.089138801418 ELSE [ADS].[Feature_373] END AS impter_375, CASE WHEN ([ADS].[Feature_374] IS NULL) THEN 0.329357432778 ELSE [ADS].[Feature_374] END AS impter_376, CASE WHEN ([ADS].[Feature_375] IS NULL) THEN -0.180305383873 ELSE [ADS].[Feature_375] END AS impter_377, CASE WHEN ([ADS].[Feature_376] IS NULL) THEN -0.0995695199114 ELSE [ADS].[Feature_376] END AS impter_378, CASE WHEN ([ADS].[Feature_377] IS NULL) THEN -0.00880856764244 ELSE [ADS].[Feature_377] END AS impter_379, CASE WHEN ([ADS].[Feature_378] IS NULL) THEN -0.35405190082 ELSE [ADS].[Feature_378] END AS impter_380, CASE WHEN ([ADS].[Feature_379] IS NULL) THEN -0.310066258331 ELSE [ADS].[Feature_379] END AS impter_381, CASE WHEN ([ADS].[Feature_380] IS NULL) THEN -0.203054864841 ELSE [ADS].[Feature_380] END AS impter_382, CASE WHEN ([ADS].[Feature_381] IS NULL) THEN 0.0771236648041 ELSE [ADS].[Feature_381] END AS impter_383, CASE WHEN ([ADS].[Feature_382] IS NULL) THEN -0.0129709043905 ELSE [ADS].[Feature_382] END AS impter_384, CASE WHEN ([ADS].[Feature_383] IS NULL) THEN 0.0297929000302 ELSE [ADS].[Feature_383] END AS impter_385, CASE WHEN ([ADS].[Feature_384] IS NULL) THEN -0.160329259623 ELSE [ADS].[Feature_384] END AS impter_386, CASE WHEN ([ADS].[Feature_385] IS NULL) THEN 0.140225166413 ELSE [ADS].[Feature_385] END AS impter_387, CASE WHEN ([ADS].[Feature_386] IS NULL) THEN -0.0806926936768 ELSE [ADS].[Feature_386] END AS impter_388, CASE WHEN ([ADS].[Feature_387] IS NULL) THEN -0.150870275488 ELSE [ADS].[Feature_387] END AS impter_389, CASE WHEN ([ADS].[Feature_388] IS NULL) THEN -0.228384774111 ELSE [ADS].[Feature_388] END AS impter_390, CASE WHEN ([ADS].[Feature_389] IS NULL) THEN 0.0073413543014 ELSE [ADS].[Feature_389] END AS impter_391, CASE WHEN ([ADS].[Feature_390] IS NULL) THEN -0.00493687613796 ELSE [ADS].[Feature_390] END AS impter_392, CASE WHEN ([ADS].[Feature_391] IS NULL) THEN -0.280781286893 ELSE [ADS].[Feature_391] END AS impter_393, CASE WHEN ([ADS].[Feature_392] IS NULL) THEN 0.0289947963342 ELSE [ADS].[Feature_392] END AS impter_394, CASE WHEN ([ADS].[Feature_393] IS NULL) THEN 0.096354141632 ELSE [ADS].[Feature_393] END AS impter_395, CASE WHEN ([ADS].[Feature_394] IS NULL) THEN -0.0787968365661 ELSE [ADS].[Feature_394] END AS impter_396, CASE WHEN ([ADS].[Feature_395] IS NULL) THEN -0.0251967260941 ELSE [ADS].[Feature_395] END AS impter_397, CASE WHEN ([ADS].[Feature_396] IS NULL) THEN -0.0808432732684 ELSE [ADS].[Feature_396] END AS impter_398, CASE WHEN ([ADS].[Feature_397] IS NULL) THEN 1.53212645632 ELSE [ADS].[Feature_397] END AS impter_399, CASE WHEN ([ADS].[Feature_398] IS NULL) THEN -0.803488717599 ELSE [ADS].[Feature_398] END AS impter_400, CASE WHEN ([ADS].[Feature_399] IS NULL) THEN -0.117194129006 ELSE [ADS].[Feature_399] END AS impter_401, CASE WHEN ([ADS].[Feature_400] IS NULL) THEN -0.25827664713 ELSE [ADS].[Feature_400] END AS impter_402, CASE WHEN ([ADS].[Feature_401] IS NULL) THEN -0.0373480394809 ELSE [ADS].[Feature_401] END AS impter_403, CASE WHEN ([ADS].[Feature_402] IS NULL) THEN 0.286443686292 ELSE [ADS].[Feature_402] END AS impter_404, CASE WHEN ([ADS].[Feature_403] IS NULL) THEN -0.0638298609528 ELSE [ADS].[Feature_403] END AS impter_405, CASE WHEN ([ADS].[Feature_404] IS NULL) THEN -0.0660883782265 ELSE [ADS].[Feature_404] END AS impter_406, CASE WHEN ([ADS].[Feature_405] IS NULL) THEN -0.0501946399826 ELSE [ADS].[Feature_405] END AS impter_407, CASE WHEN ([ADS].[Feature_406] IS NULL) THEN -0.0323760487241 ELSE [ADS].[Feature_406] END AS impter_408, CASE WHEN ([ADS].[Feature_407] IS NULL) THEN 0.04167379339 ELSE [ADS].[Feature_407] END AS impter_409, CASE WHEN ([ADS].[Feature_408] IS NULL) THEN -0.0284605493211 ELSE [ADS].[Feature_408] END AS impter_410, CASE WHEN ([ADS].[Feature_409] IS NULL) THEN -0.131110671462 ELSE [ADS].[Feature_409] END AS impter_411, CASE WHEN ([ADS].[Feature_410] IS NULL) THEN -1.0002970366 ELSE [ADS].[Feature_410] END AS impter_412, CASE WHEN ([ADS].[Feature_411] IS NULL) THEN 0.171160138271 ELSE [ADS].[Feature_411] END AS impter_413, CASE WHEN ([ADS].[Feature_412] IS NULL) THEN 0.0229393729912 ELSE [ADS].[Feature_412] END AS impter_414, CASE WHEN ([ADS].[Feature_413] IS NULL) THEN 0.0760966253155 ELSE [ADS].[Feature_413] END AS impter_415, CASE WHEN ([ADS].[Feature_414] IS NULL) THEN 0.946643149252 ELSE [ADS].[Feature_414] END AS impter_416, CASE WHEN ([ADS].[Feature_415] IS NULL) THEN -0.290618908703 ELSE [ADS].[Feature_415] END AS impter_417, CASE WHEN ([ADS].[Feature_416] IS NULL) THEN -0.379536109332 ELSE [ADS].[Feature_416] END AS impter_418, CASE WHEN ([ADS].[Feature_417] IS NULL) THEN -0.00117812142394 ELSE [ADS].[Feature_417] END AS impter_419, CASE WHEN ([ADS].[Feature_418] IS NULL) THEN 0.0922194076939 ELSE [ADS].[Feature_418] END AS impter_420, CASE WHEN ([ADS].[Feature_419] IS NULL) THEN -0.0119797502324 ELSE [ADS].[Feature_419] END AS impter_421, CASE WHEN ([ADS].[Feature_420] IS NULL) THEN -0.0337722809115 ELSE [ADS].[Feature_420] END AS impter_422, CASE WHEN ([ADS].[Feature_421] IS NULL) THEN -0.0476602627251 ELSE [ADS].[Feature_421] END AS impter_423, CASE WHEN ([ADS].[Feature_422] IS NULL) THEN 0.0771352940308 ELSE [ADS].[Feature_422] END AS impter_424, CASE WHEN ([ADS].[Feature_423] IS NULL) THEN 1.05812978458 ELSE [ADS].[Feature_423] END AS impter_425, CASE WHEN ([ADS].[Feature_424] IS NULL) THEN 1.02303404857 ELSE [ADS].[Feature_424] END AS impter_426, CASE WHEN ([ADS].[Feature_425] IS NULL) THEN -0.356860349496 ELSE [ADS].[Feature_425] END AS impter_427, CASE WHEN ([ADS].[Feature_426] IS NULL) THEN 0.0085564813388 ELSE [ADS].[Feature_426] END AS impter_428, CASE WHEN ([ADS].[Feature_427] IS NULL) THEN -0.811603006439 ELSE [ADS].[Feature_427] END AS impter_429, CASE WHEN ([ADS].[Feature_428] IS NULL) THEN -0.106777266141 ELSE [ADS].[Feature_428] END AS impter_430, CASE WHEN ([ADS].[Feature_429] IS NULL) THEN 0.0348962595423 ELSE [ADS].[Feature_429] END AS impter_431, CASE WHEN ([ADS].[Feature_430] IS NULL) THEN 1.64881806295 ELSE [ADS].[Feature_430] END AS impter_432, CASE WHEN ([ADS].[Feature_431] IS NULL) THEN -0.244599428317 ELSE [ADS].[Feature_431] END AS impter_433, CASE WHEN ([ADS].[Feature_432] IS NULL) THEN -0.25454747595 ELSE [ADS].[Feature_432] END AS impter_434, CASE WHEN ([ADS].[Feature_433] IS NULL) THEN 1.35252802986 ELSE [ADS].[Feature_433] END AS impter_435, CASE WHEN ([ADS].[Feature_434] IS NULL) THEN 0.176443942053 ELSE [ADS].[Feature_434] END AS impter_436, CASE WHEN ([ADS].[Feature_435] IS NULL) THEN -0.179028296461 ELSE [ADS].[Feature_435] END AS impter_437, CASE WHEN ([ADS].[Feature_436] IS NULL) THEN 0.00902373934837 ELSE [ADS].[Feature_436] END AS impter_438, CASE WHEN ([ADS].[Feature_437] IS NULL) THEN -0.102605833194 ELSE [ADS].[Feature_437] END AS impter_439, CASE WHEN ([ADS].[Feature_438] IS NULL) THEN -0.0468620792268 ELSE [ADS].[Feature_438] END AS impter_440, CASE WHEN ([ADS].[Feature_439] IS NULL) THEN -0.195282472806 ELSE [ADS].[Feature_439] END AS impter_441, CASE WHEN ([ADS].[Feature_440] IS NULL) THEN -0.010380909959 ELSE [ADS].[Feature_440] END AS impter_442, CASE WHEN ([ADS].[Feature_441] IS NULL) THEN 0.18153955212 ELSE [ADS].[Feature_441] END AS impter_443, CASE WHEN ([ADS].[Feature_442] IS NULL) THEN -0.683112300811 ELSE [ADS].[Feature_442] END AS impter_444, CASE WHEN ([ADS].[Feature_443] IS NULL) THEN 0.00841347651793 ELSE [ADS].[Feature_443] END AS impter_445, CASE WHEN ([ADS].[Feature_444] IS NULL) THEN 0.0304339862902 ELSE [ADS].[Feature_444] END AS impter_446, CASE WHEN ([ADS].[Feature_445] IS NULL) THEN 0.829798650198 ELSE [ADS].[Feature_445] END AS impter_447, CASE WHEN ([ADS].[Feature_446] IS NULL) THEN 0.167291052761 ELSE [ADS].[Feature_446] END AS impter_448, CASE WHEN ([ADS].[Feature_447] IS NULL) THEN 0.0122893227807 ELSE [ADS].[Feature_447] END AS impter_449, CASE WHEN ([ADS].[Feature_448] IS NULL) THEN -0.038334426898 ELSE [ADS].[Feature_448] END AS impter_450, CASE WHEN ([ADS].[Feature_449] IS NULL) THEN 0.00468540908651 ELSE [ADS].[Feature_449] END AS impter_451, CASE WHEN ([ADS].[Feature_450] IS NULL) THEN 0.0232806936474 ELSE [ADS].[Feature_450] END AS impter_452, CASE WHEN ([ADS].[Feature_451] IS NULL) THEN -0.189656585673 ELSE [ADS].[Feature_451] END AS impter_453, CASE WHEN ([ADS].[Feature_452] IS NULL) THEN 0.0978318363876 ELSE [ADS].[Feature_452] END AS impter_454, CASE WHEN ([ADS].[Feature_453] IS NULL) THEN -0.122455538778 ELSE [ADS].[Feature_453] END AS impter_455, CASE WHEN ([ADS].[Feature_454] IS NULL) THEN -0.0449851069624 ELSE [ADS].[Feature_454] END AS impter_456, CASE WHEN ([ADS].[Feature_455] IS NULL) THEN 0.363796284415 ELSE [ADS].[Feature_455] END AS impter_457, CASE WHEN ([ADS].[Feature_456] IS NULL) THEN 0.0412080874385 ELSE [ADS].[Feature_456] END AS impter_458, CASE WHEN ([ADS].[Feature_457] IS NULL) THEN 0.357018732436 ELSE [ADS].[Feature_457] END AS impter_459, CASE WHEN ([ADS].[Feature_458] IS NULL) THEN 0.636019300348 ELSE [ADS].[Feature_458] END AS impter_460, CASE WHEN ([ADS].[Feature_459] IS NULL) THEN -0.170616903158 ELSE [ADS].[Feature_459] END AS impter_461, CASE WHEN ([ADS].[Feature_460] IS NULL) THEN -0.204407432582 ELSE [ADS].[Feature_460] END AS impter_462, CASE WHEN ([ADS].[Feature_461] IS NULL) THEN 0.120032205998 ELSE [ADS].[Feature_461] END AS impter_463, CASE WHEN ([ADS].[Feature_462] IS NULL) THEN -0.059056324559 ELSE [ADS].[Feature_462] END AS impter_464, CASE WHEN ([ADS].[Feature_463] IS NULL) THEN 0.587248024863 ELSE [ADS].[Feature_463] END AS impter_465, CASE WHEN ([ADS].[Feature_464] IS NULL) THEN 0.0675120861008 ELSE [ADS].[Feature_464] END AS impter_466, CASE WHEN ([ADS].[Feature_465] IS NULL) THEN -0.61398948385 ELSE [ADS].[Feature_465] END AS impter_467, CASE WHEN ([ADS].[Feature_466] IS NULL) THEN -0.416152086995 ELSE [ADS].[Feature_466] END AS impter_468, CASE WHEN ([ADS].[Feature_467] IS NULL) THEN -0.471036449939 ELSE [ADS].[Feature_467] END AS impter_469, CASE WHEN ([ADS].[Feature_468] IS NULL) THEN -0.03361262391 ELSE [ADS].[Feature_468] END AS impter_470, CASE WHEN ([ADS].[Feature_469] IS NULL) THEN 0.149403233404 ELSE [ADS].[Feature_469] END AS impter_471, CASE WHEN ([ADS].[Feature_470] IS NULL) THEN 0.0354435222644 ELSE [ADS].[Feature_470] END AS impter_472, CASE WHEN ([ADS].[Feature_471] IS NULL) THEN -0.0571960096997 ELSE [ADS].[Feature_471] END AS impter_473, CASE WHEN ([ADS].[Feature_472] IS NULL) THEN -0.0886753155327 ELSE [ADS].[Feature_472] END AS impter_474, CASE WHEN ([ADS].[Feature_473] IS NULL) THEN -0.158985220408 ELSE [ADS].[Feature_473] END AS impter_475, CASE WHEN ([ADS].[Feature_474] IS NULL) THEN -0.00178282108478 ELSE [ADS].[Feature_474] END AS impter_476, CASE WHEN ([ADS].[Feature_475] IS NULL) THEN 0.174108027612 ELSE [ADS].[Feature_475] END AS impter_477, CASE WHEN ([ADS].[Feature_476] IS NULL) THEN -0.097913644338 ELSE [ADS].[Feature_476] END AS impter_478, CASE WHEN ([ADS].[Feature_477] IS NULL) THEN -0.643635471043 ELSE [ADS].[Feature_477] END AS impter_479, CASE WHEN ([ADS].[Feature_478] IS NULL) THEN -0.0725633270219 ELSE [ADS].[Feature_478] END AS impter_480, CASE WHEN ([ADS].[Feature_479] IS NULL) THEN 0.0192807343729 ELSE [ADS].[Feature_479] END AS impter_481, CASE WHEN ([ADS].[Feature_480] IS NULL) THEN -0.140423295562 ELSE [ADS].[Feature_480] END AS impter_482, CASE WHEN ([ADS].[Feature_481] IS NULL) THEN -0.454191269414 ELSE [ADS].[Feature_481] END AS impter_483, CASE WHEN ([ADS].[Feature_482] IS NULL) THEN -0.231357320982 ELSE [ADS].[Feature_482] END AS impter_484, CASE WHEN ([ADS].[Feature_483] IS NULL) THEN 0.161643785871 ELSE [ADS].[Feature_483] END AS impter_485, CASE WHEN ([ADS].[Feature_484] IS NULL) THEN 0.108935232558 ELSE [ADS].[Feature_484] END AS impter_486, CASE WHEN ([ADS].[Feature_485] IS NULL) THEN -0.0704902834803 ELSE [ADS].[Feature_485] END AS impter_487, CASE WHEN ([ADS].[Feature_486] IS NULL) THEN -0.0871147269832 ELSE [ADS].[Feature_486] END AS impter_488, CASE WHEN ([ADS].[Feature_487] IS NULL) THEN -0.0146863646733 ELSE [ADS].[Feature_487] END AS impter_489, CASE WHEN ([ADS].[Feature_488] IS NULL) THEN -0.0351271519202 ELSE [ADS].[Feature_488] END AS impter_490, CASE WHEN ([ADS].[Feature_489] IS NULL) THEN -0.0147194387394 ELSE [ADS].[Feature_489] END AS impter_491, CASE WHEN ([ADS].[Feature_490] IS NULL) THEN 0.287091561281 ELSE [ADS].[Feature_490] END AS impter_492, CASE WHEN ([ADS].[Feature_491] IS NULL) THEN -0.0178812198548 ELSE [ADS].[Feature_491] END AS impter_493, CASE WHEN ([ADS].[Feature_492] IS NULL) THEN 0.0923480652904 ELSE [ADS].[Feature_492] END AS impter_494, CASE WHEN ([ADS].[Feature_493] IS NULL) THEN -0.185238617025 ELSE [ADS].[Feature_493] END AS impter_495, CASE WHEN ([ADS].[Feature_494] IS NULL) THEN 0.0509116041734 ELSE [ADS].[Feature_494] END AS impter_496, CASE WHEN ([ADS].[Feature_495] IS NULL) THEN 0.157391370527 ELSE [ADS].[Feature_495] END AS impter_497, CASE WHEN ([ADS].[Feature_496] IS NULL) THEN 0.157971713349 ELSE [ADS].[Feature_496] END AS impter_498, CASE WHEN ([ADS].[Feature_497] IS NULL) THEN 0.0663736652573 ELSE [ADS].[Feature_497] END AS impter_499, CASE WHEN ([ADS].[Feature_498] IS NULL) THEN -0.0367353520064 ELSE [ADS].[Feature_498] END AS impter_500, CASE WHEN ([ADS].[Feature_499] IS NULL) THEN 0.00996749889921 ELSE [ADS].[Feature_499] END AS impter_501 
FROM [FourClass_500] AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].impter_2 AS FLOAT) - -0.134771919211) / 0.900201362395 AS scaler_2, (CAST([ADS_imp_1_OUT].impter_3 AS FLOAT) - 0.0128815623431) / 0.879121879396 AS scaler_3, (CAST([ADS_imp_1_OUT].impter_4 AS FLOAT) - 0.0601265589521) / 0.926838491983 AS scaler_4, (CAST([ADS_imp_1_OUT].impter_5 AS FLOAT) - 0.156912558301) / 1.08803574218 AS scaler_5, (CAST([ADS_imp_1_OUT].impter_6 AS FLOAT) - 0.073656429475) / 1.03294003071 AS scaler_6, (CAST([ADS_imp_1_OUT].impter_7 AS FLOAT) - 0.277420459693) / 1.12028859514 AS scaler_7, (CAST([ADS_imp_1_OUT].impter_8 AS FLOAT) - -0.0160111862259) / 0.753293666592 AS scaler_8, (CAST([ADS_imp_1_OUT].impter_9 AS FLOAT) - 0.224391638121) / 0.970203554258 AS scaler_9, (CAST([ADS_imp_1_OUT].impter_10 AS FLOAT) - 0.23210257977) / 0.900477598342 AS scaler_10, (CAST([ADS_imp_1_OUT].impter_11 AS FLOAT) - -0.130523846468) / 1.02197748179 AS scaler_11, (CAST([ADS_imp_1_OUT].impter_12 AS FLOAT) - -0.0606607066992) / 1.06265236921 AS scaler_12, (CAST([ADS_imp_1_OUT].impter_13 AS FLOAT) - -0.176794270757) / 0.909040787991 AS scaler_13, (CAST([ADS_imp_1_OUT].impter_14 AS FLOAT) - -0.221204895682) / 1.00533073924 AS scaler_14, (CAST([ADS_imp_1_OUT].impter_15 AS FLOAT) - -0.248919126082) / 0.97642780207 AS scaler_15, (CAST([ADS_imp_1_OUT].impter_16 AS FLOAT) - -0.00516902488379) / 1.0353951717 AS scaler_16, (CAST([ADS_imp_1_OUT].impter_17 AS FLOAT) - -0.0156790094923) / 1.05597782867 AS scaler_17, (CAST([ADS_imp_1_OUT].impter_18 AS FLOAT) - 1.25833299259) / 6.24386237512 AS scaler_18, (CAST([ADS_imp_1_OUT].impter_19 AS FLOAT) - -0.0344885134805) / 1.07114006867 AS scaler_19, (CAST([ADS_imp_1_OUT].impter_20 AS FLOAT) - -0.0881276315242) / 0.822583682269 AS scaler_20, (CAST([ADS_imp_1_OUT].impter_21 AS FLOAT) - -0.131804277389) / 1.05032909701 AS scaler_21, (CAST([ADS_imp_1_OUT].impter_22 AS FLOAT) - -0.144973973942) / 6.05024529503 AS scaler_22, (CAST([ADS_imp_1_OUT].impter_23 AS FLOAT) - 0.14695515685) / 5.25557146364 AS scaler_23, (CAST([ADS_imp_1_OUT].impter_24 AS FLOAT) - 0.02487395777) / 0.923960311675 AS scaler_24, (CAST([ADS_imp_1_OUT].impter_25 AS FLOAT) - -0.0635651219281) / 0.911561163763 AS scaler_25, (CAST([ADS_imp_1_OUT].impter_26 AS FLOAT) - -0.130171640607) / 1.2880098046 AS scaler_26, (CAST([ADS_imp_1_OUT].impter_27 AS FLOAT) - 0.203076837888) / 1.18797257869 AS scaler_27, (CAST([ADS_imp_1_OUT].impter_28 AS FLOAT) - 0.203220302149) / 0.982700022572 AS scaler_28, (CAST([ADS_imp_1_OUT].impter_29 AS FLOAT) - -0.00952344147608) / 0.884400145892 AS scaler_29, (CAST([ADS_imp_1_OUT].impter_30 AS FLOAT) - 0.139883052802) / 0.897633277148 AS scaler_30, (CAST([ADS_imp_1_OUT].impter_31 AS FLOAT) - 0.119572768754) / 0.978844768263 AS scaler_31, (CAST([ADS_imp_1_OUT].impter_32 AS FLOAT) - -0.0171556868653) / 1.01620038307 AS scaler_32, (CAST([ADS_imp_1_OUT].impter_33 AS FLOAT) - -0.171903724948) / 1.12785067079 AS scaler_33, (CAST([ADS_imp_1_OUT].impter_34 AS FLOAT) - 0.0371510886625) / 1.01331514215 AS scaler_34, (CAST([ADS_imp_1_OUT].impter_35 AS FLOAT) - -0.058752389368) / 0.869996673481 AS scaler_35, (CAST([ADS_imp_1_OUT].impter_36 AS FLOAT) - 0.16784589438) / 0.928504568636 AS scaler_36, (CAST([ADS_imp_1_OUT].impter_37 AS FLOAT) - 0.096990657678) / 1.01101078826 AS scaler_37, (CAST([ADS_imp_1_OUT].impter_38 AS FLOAT) - 0.037220796239) / 1.04186409791 AS scaler_38, (CAST([ADS_imp_1_OUT].impter_39 AS FLOAT) - 0.023335295287) / 0.915800852868 AS scaler_39, (CAST([ADS_imp_1_OUT].impter_40 AS FLOAT) - 0.371058018592) / 5.94783314147 AS scaler_40, (CAST([ADS_imp_1_OUT].impter_41 AS FLOAT) - 0.034889713687) / 0.999148042638 AS scaler_41, (CAST([ADS_imp_1_OUT].impter_42 AS FLOAT) - -0.0917085476644) / 1.05621041581 AS scaler_42, (CAST([ADS_imp_1_OUT].impter_43 AS FLOAT) - 0.193106564498) / 5.91708487849 AS scaler_43, (CAST([ADS_imp_1_OUT].impter_44 AS FLOAT) - -0.0500025305759) / 0.898516758822 AS scaler_44, (CAST([ADS_imp_1_OUT].impter_45 AS FLOAT) - 0.0257178322334) / 0.84833591198 AS scaler_45, (CAST([ADS_imp_1_OUT].impter_46 AS FLOAT) - 0.200596667466) / 0.838932070567 AS scaler_46, (CAST([ADS_imp_1_OUT].impter_47 AS FLOAT) - -0.00654203423648) / 1.08863172727 AS scaler_47, (CAST([ADS_imp_1_OUT].impter_48 AS FLOAT) - 0.0465168972448) / 1.03935599844 AS scaler_48, (CAST([ADS_imp_1_OUT].impter_49 AS FLOAT) - 0.173731016335) / 1.1070396995 AS scaler_49, (CAST([ADS_imp_1_OUT].impter_50 AS FLOAT) - -3.81285835156) / 37.346301041 AS scaler_50, (CAST([ADS_imp_1_OUT].impter_51 AS FLOAT) - -0.00447403729099) / 0.991336194046 AS scaler_51, (CAST([ADS_imp_1_OUT].impter_52 AS FLOAT) - 0.0451567106678) / 6.03483673077 AS scaler_52, (CAST([ADS_imp_1_OUT].impter_53 AS FLOAT) - -0.286925072242) / 0.929226780675 AS scaler_53, (CAST([ADS_imp_1_OUT].impter_54 AS FLOAT) - 0.150198288201) / 0.944537155117 AS scaler_54, (CAST([ADS_imp_1_OUT].impter_55 AS FLOAT) - -0.0145612584782) / 0.90438076129 AS scaler_55, (CAST([ADS_imp_1_OUT].impter_56 AS FLOAT) - -0.0964081541823) / 0.875130159903 AS scaler_56, (CAST([ADS_imp_1_OUT].impter_57 AS FLOAT) - 0.0553615864739) / 1.02699704801 AS scaler_57, (CAST([ADS_imp_1_OUT].impter_58 AS FLOAT) - 0.234839198516) / 1.04613068104 AS scaler_58, (CAST([ADS_imp_1_OUT].impter_59 AS FLOAT) - -0.088984777482) / 1.0872211027 AS scaler_59, (CAST([ADS_imp_1_OUT].impter_60 AS FLOAT) - -0.0398798956138) / 0.933704996903 AS scaler_60, (CAST([ADS_imp_1_OUT].impter_61 AS FLOAT) - 0.805543126561) / 5.90231374686 AS scaler_61, (CAST([ADS_imp_1_OUT].impter_62 AS FLOAT) - 0.121414194049) / 1.05324044036 AS scaler_62, (CAST([ADS_imp_1_OUT].impter_63 AS FLOAT) - 0.0118326357156) / 1.02408226593 AS scaler_63, (CAST([ADS_imp_1_OUT].impter_64 AS FLOAT) - -0.191271450446) / 0.986443906088 AS scaler_64, (CAST([ADS_imp_1_OUT].impter_65 AS FLOAT) - 0.0860562537349) / 0.947579451449 AS scaler_65, (CAST([ADS_imp_1_OUT].impter_66 AS FLOAT) - 0.0460705166092) / 0.958712299229 AS scaler_66, (CAST([ADS_imp_1_OUT].impter_67 AS FLOAT) - -0.193483674736) / 1.04825564579 AS scaler_67, (CAST([ADS_imp_1_OUT].impter_68 AS FLOAT) - 0.195472160962) / 1.12491295432 AS scaler_68, (CAST([ADS_imp_1_OUT].impter_69 AS FLOAT) - 0.17694608658) / 0.811652388891 AS scaler_69, (CAST([ADS_imp_1_OUT].impter_70 AS FLOAT) - -0.0521331240032) / 1.01294946772 AS scaler_70, (CAST([ADS_imp_1_OUT].impter_71 AS FLOAT) - -0.142056161486) / 0.886089566479 AS scaler_71, (CAST([ADS_imp_1_OUT].impter_72 AS FLOAT) - -0.114925763823) / 1.05626655496 AS scaler_72, (CAST([ADS_imp_1_OUT].impter_73 AS FLOAT) - -0.258643279322) / 5.44116077634 AS scaler_73, (CAST([ADS_imp_1_OUT].impter_74 AS FLOAT) - 0.0650547478205) / 1.01586099349 AS scaler_74, (CAST([ADS_imp_1_OUT].impter_75 AS FLOAT) - -0.126071167348) / 1.13643664653 AS scaler_75, (CAST([ADS_imp_1_OUT].impter_76 AS FLOAT) - 0.0507291919511) / 0.993255984174 AS scaler_76, (CAST([ADS_imp_1_OUT].impter_77 AS FLOAT) - -0.122468013262) / 1.05800332115 AS scaler_77, (CAST([ADS_imp_1_OUT].impter_78 AS FLOAT) - 0.145761597766) / 0.955741531318 AS scaler_78, (CAST([ADS_imp_1_OUT].impter_79 AS FLOAT) - 0.263673770623) / 0.960497615003 AS scaler_79, (CAST([ADS_imp_1_OUT].impter_80 AS FLOAT) - 0.086152313048) / 0.946527474077 AS scaler_80, (CAST([ADS_imp_1_OUT].impter_81 AS FLOAT) - -0.0463287189975) / 0.892439102764 AS scaler_81, (CAST([ADS_imp_1_OUT].impter_82 AS FLOAT) - 0.155288601793) / 1.02042319428 AS scaler_82, (CAST([ADS_imp_1_OUT].impter_83 AS FLOAT) - -0.212931294695) / 0.889458969243 AS scaler_83, (CAST([ADS_imp_1_OUT].impter_84 AS FLOAT) - 1.06941853817) / 5.59914542489 AS scaler_84, (CAST([ADS_imp_1_OUT].impter_85 AS FLOAT) - 0.0810389898077) / 0.983584319765 AS scaler_85, (CAST([ADS_imp_1_OUT].impter_86 AS FLOAT) - 0.0113753411465) / 0.979258879011 AS scaler_86, (CAST([ADS_imp_1_OUT].impter_87 AS FLOAT) - -0.0821663038468) / 1.07029002941 AS scaler_87, (CAST([ADS_imp_1_OUT].impter_88 AS FLOAT) - 0.46425104362) / 6.28599431872 AS scaler_88, (CAST([ADS_imp_1_OUT].impter_89 AS FLOAT) - -0.35591410771) / 4.71145065586 AS scaler_89, (CAST([ADS_imp_1_OUT].impter_90 AS FLOAT) - -0.0196858104491) / 0.942060177425 AS scaler_90, (CAST([ADS_imp_1_OUT].impter_91 AS FLOAT) - -1.92021809192) / 5.38542633145 AS scaler_91, (CAST([ADS_imp_1_OUT].impter_92 AS FLOAT) - -0.103248632802) / 0.947313285761 AS scaler_92, (CAST([ADS_imp_1_OUT].impter_93 AS FLOAT) - -0.0247016959083) / 1.01873126644 AS scaler_93, (CAST([ADS_imp_1_OUT].impter_94 AS FLOAT) - 0.135340211018) / 1.11761624011 AS scaler_94, (CAST([ADS_imp_1_OUT].impter_95 AS FLOAT) - -0.0548951032104) / 1.15934680899 AS scaler_95, (CAST([ADS_imp_1_OUT].impter_96 AS FLOAT) - -0.0507521434755) / 1.00897376222 AS scaler_96, (CAST([ADS_imp_1_OUT].impter_97 AS FLOAT) - 0.152480891276) / 0.838898518534 AS scaler_97, (CAST([ADS_imp_1_OUT].impter_98 AS FLOAT) - -0.104573123174) / 0.886055431257 AS scaler_98, (CAST([ADS_imp_1_OUT].impter_99 AS FLOAT) - -0.73668995155) / 5.30224518697 AS scaler_99, (CAST([ADS_imp_1_OUT].impter_100 AS FLOAT) - -0.145451731599) / 0.951425707203 AS scaler_100, (CAST([ADS_imp_1_OUT].impter_101 AS FLOAT) - -0.0241341096536) / 0.82409349593 AS scaler_101, (CAST([ADS_imp_1_OUT].impter_102 AS FLOAT) - -0.210488342674) / 1.08923772219 AS scaler_102, (CAST([ADS_imp_1_OUT].impter_103 AS FLOAT) - -0.139220308616) / 1.16212635872 AS scaler_103, (CAST([ADS_imp_1_OUT].impter_104 AS FLOAT) - -0.426978524939) / 5.33409522787 AS scaler_104, (CAST([ADS_imp_1_OUT].impter_105 AS FLOAT) - -0.0893049799312) / 1.123708088 AS scaler_105, (CAST([ADS_imp_1_OUT].impter_106 AS FLOAT) - 0.0900502573243) / 1.13543878918 AS scaler_106, (CAST([ADS_imp_1_OUT].impter_107 AS FLOAT) - 1.56279788643) / 4.67977814745 AS scaler_107, (CAST([ADS_imp_1_OUT].impter_108 AS FLOAT) - 0.00318058263773) / 0.995094831966 AS scaler_108, (CAST([ADS_imp_1_OUT].impter_109 AS FLOAT) - 0.034044892883) / 0.866421552792 AS scaler_109, (CAST([ADS_imp_1_OUT].impter_110 AS FLOAT) - -0.0578621172956) / 1.00191496993 AS scaler_110, (CAST([ADS_imp_1_OUT].impter_111 AS FLOAT) - 0.170370690948) / 1.07068228161 AS scaler_111, (CAST([ADS_imp_1_OUT].impter_112 AS FLOAT) - -0.0934134781135) / 5.77452761028 AS scaler_112, (CAST([ADS_imp_1_OUT].impter_113 AS FLOAT) - 0.043935316713) / 1.01212875636 AS scaler_113, (CAST([ADS_imp_1_OUT].impter_114 AS FLOAT) - 0.122130032766) / 1.17022343844 AS scaler_114, (CAST([ADS_imp_1_OUT].impter_115 AS FLOAT) - 0.209576493989) / 0.969044867211 AS scaler_115, (CAST([ADS_imp_1_OUT].impter_116 AS FLOAT) - -0.101982338056) / 0.914565876762 AS scaler_116, (CAST([ADS_imp_1_OUT].impter_117 AS FLOAT) - 0.119256690049) / 0.815237588929 AS scaler_117, (CAST([ADS_imp_1_OUT].impter_118 AS FLOAT) - 1.26209758012) / 5.19098547351 AS scaler_118, (CAST([ADS_imp_1_OUT].impter_119 AS FLOAT) - 0.0233411389451) / 0.916042938945 AS scaler_119, (CAST([ADS_imp_1_OUT].impter_120 AS FLOAT) - -0.664907799675) / 6.53158066176 AS scaler_120, (CAST([ADS_imp_1_OUT].impter_121 AS FLOAT) - -0.193423886794) / 1.00016068266 AS scaler_121, (CAST([ADS_imp_1_OUT].impter_122 AS FLOAT) - 0.400705175556) / 6.09256942345 AS scaler_122, (CAST([ADS_imp_1_OUT].impter_123 AS FLOAT) - -0.0133890716152) / 0.994101851062 AS scaler_123, (CAST([ADS_imp_1_OUT].impter_124 AS FLOAT) - -0.111111766197) / 6.33845812279 AS scaler_124, (CAST([ADS_imp_1_OUT].impter_125 AS FLOAT) - 0.137465661221) / 0.867444497657 AS scaler_125, (CAST([ADS_imp_1_OUT].impter_126 AS FLOAT) - -0.0164421053029) / 1.00810787551 AS scaler_126, (CAST([ADS_imp_1_OUT].impter_127 AS FLOAT) - 0.0916165151845) / 0.873649730052 AS scaler_127, (CAST([ADS_imp_1_OUT].impter_128 AS FLOAT) - -1.5336793864) / 5.51433893044 AS scaler_128, (CAST([ADS_imp_1_OUT].impter_129 AS FLOAT) - -0.115870812936) / 0.930799424449 AS scaler_129, (CAST([ADS_imp_1_OUT].impter_130 AS FLOAT) - -0.0898854541925) / 0.907718166261 AS scaler_130, (CAST([ADS_imp_1_OUT].impter_131 AS FLOAT) - -0.0316780162329) / 1.08057999877 AS scaler_131, (CAST([ADS_imp_1_OUT].impter_132 AS FLOAT) - -0.0250579361757) / 0.989079070662 AS scaler_132, (CAST([ADS_imp_1_OUT].impter_133 AS FLOAT) - -0.144387011765) / 0.979213978757 AS scaler_133, (CAST([ADS_imp_1_OUT].impter_134 AS FLOAT) - 0.067246917765) / 1.02909187209 AS scaler_134, (CAST([ADS_imp_1_OUT].impter_135 AS FLOAT) - -0.135314776975) / 1.06560247021 AS scaler_135, (CAST([ADS_imp_1_OUT].impter_136 AS FLOAT) - -0.940725237352) / 5.34294862581 AS scaler_136, (CAST([ADS_imp_1_OUT].impter_137 AS FLOAT) - -0.577226113909) / 6.50792371551 AS scaler_137, (CAST([ADS_imp_1_OUT].impter_138 AS FLOAT) - -0.0383064423101) / 0.866333873778 AS scaler_138, (CAST([ADS_imp_1_OUT].impter_139 AS FLOAT) - 0.0853210719273) / 1.06886930525 AS scaler_139, (CAST([ADS_imp_1_OUT].impter_140 AS FLOAT) - 0.10387292466) / 0.735209620438 AS scaler_140, (CAST([ADS_imp_1_OUT].impter_141 AS FLOAT) - -0.91447348416) / 5.68417933388 AS scaler_141, (CAST([ADS_imp_1_OUT].impter_142 AS FLOAT) - 0.169628933211) / 0.959083890408 AS scaler_142, (CAST([ADS_imp_1_OUT].impter_143 AS FLOAT) - 0.0316821519) / 1.13949804797 AS scaler_143, (CAST([ADS_imp_1_OUT].impter_144 AS FLOAT) - -0.0329372551379) / 0.983803010207 AS scaler_144, (CAST([ADS_imp_1_OUT].impter_145 AS FLOAT) - 0.0969365801012) / 0.985057524198 AS scaler_145, (CAST([ADS_imp_1_OUT].impter_146 AS FLOAT) - -0.180176127799) / 0.918404699779 AS scaler_146, (CAST([ADS_imp_1_OUT].impter_147 AS FLOAT) - 0.146641863128) / 0.900025193966 AS scaler_147, (CAST([ADS_imp_1_OUT].impter_148 AS FLOAT) - -0.0983006728106) / 1.11875886059 AS scaler_148, (CAST([ADS_imp_1_OUT].impter_149 AS FLOAT) - 0.029348467591) / 0.931000965577 AS scaler_149, (CAST([ADS_imp_1_OUT].impter_150 AS FLOAT) - 0.0388641021413) / 1.02665992777 AS scaler_150, (CAST([ADS_imp_1_OUT].impter_151 AS FLOAT) - 0.0546061892045) / 1.09385513927 AS scaler_151, (CAST([ADS_imp_1_OUT].impter_152 AS FLOAT) - 0.123721285124) / 0.917399984149 AS scaler_152, (CAST([ADS_imp_1_OUT].impter_153 AS FLOAT) - 0.0320732209986) / 0.881972198214 AS scaler_153, (CAST([ADS_imp_1_OUT].impter_154 AS FLOAT) - 0.0182034931944) / 0.940049190477 AS scaler_154, (CAST([ADS_imp_1_OUT].impter_155 AS FLOAT) - 0.169291768678) / 1.00521424699 AS scaler_155, (CAST([ADS_imp_1_OUT].impter_156 AS FLOAT) - -0.0767472519583) / 1.10868350553 AS scaler_156, (CAST([ADS_imp_1_OUT].impter_157 AS FLOAT) - 0.0163420198803) / 6.45506931793 AS scaler_157, (CAST([ADS_imp_1_OUT].impter_158 AS FLOAT) - -0.12973709765) / 0.966316121061 AS scaler_158, (CAST([ADS_imp_1_OUT].impter_159 AS FLOAT) - 0.131602346943) / 1.10948444861 AS scaler_159, (CAST([ADS_imp_1_OUT].impter_160 AS FLOAT) - -0.0135366291427) / 0.986503962648 AS scaler_160, (CAST([ADS_imp_1_OUT].impter_161 AS FLOAT) - -0.0539339042509) / 0.875301149864 AS scaler_161, (CAST([ADS_imp_1_OUT].impter_162 AS FLOAT) - -0.12151932767) / 0.933384519755 AS scaler_162, (CAST([ADS_imp_1_OUT].impter_163 AS FLOAT) - 0.0318358517299) / 1.0098203559 AS scaler_163, (CAST([ADS_imp_1_OUT].impter_164 AS FLOAT) - -0.371900955839) / 5.42194153912 AS scaler_164, (CAST([ADS_imp_1_OUT].impter_165 AS FLOAT) - 0.832251987655) / 6.91646393159 AS scaler_165, (CAST([ADS_imp_1_OUT].impter_166 AS FLOAT) - -1.32929144499) / 5.01309052889 AS scaler_166, (CAST([ADS_imp_1_OUT].impter_167 AS FLOAT) - 0.184651086126) / 1.04698956417 AS scaler_167, (CAST([ADS_imp_1_OUT].impter_168 AS FLOAT) - -0.815178638228) / 5.80639258673 AS scaler_168, (CAST([ADS_imp_1_OUT].impter_169 AS FLOAT) - 0.143086318117) / 0.974741366829 AS scaler_169, (CAST([ADS_imp_1_OUT].impter_170 AS FLOAT) - 0.141303547334) / 0.95324219784 AS scaler_170, (CAST([ADS_imp_1_OUT].impter_171 AS FLOAT) - -1.06147846791) / 5.20092274177 AS scaler_171, (CAST([ADS_imp_1_OUT].impter_172 AS FLOAT) - -0.126805468892) / 4.95764695383 AS scaler_172, (CAST([ADS_imp_1_OUT].impter_173 AS FLOAT) - 0.165971103422) / 0.93551296811 AS scaler_173, (CAST([ADS_imp_1_OUT].impter_174 AS FLOAT) - 0.16993305432) / 0.962319574949 AS scaler_174, (CAST([ADS_imp_1_OUT].impter_175 AS FLOAT) - 0.243904236966) / 1.00986197759 AS scaler_175, (CAST([ADS_imp_1_OUT].impter_176 AS FLOAT) - 0.0281700250211) / 1.11357238266 AS scaler_176, (CAST([ADS_imp_1_OUT].impter_177 AS FLOAT) - 0.168810288898) / 1.09340040593 AS scaler_177, (CAST([ADS_imp_1_OUT].impter_178 AS FLOAT) - -0.0464238281851) / 0.936754633014 AS scaler_178, (CAST([ADS_imp_1_OUT].impter_179 AS FLOAT) - -0.26518041124) / 5.8659859017 AS scaler_179, (CAST([ADS_imp_1_OUT].impter_180 AS FLOAT) - -0.917118517619) / 5.63668734904 AS scaler_180, (CAST([ADS_imp_1_OUT].impter_181 AS FLOAT) - -0.502672578241) / 6.44107592255 AS scaler_181, (CAST([ADS_imp_1_OUT].impter_182 AS FLOAT) - -0.141799187825) / 1.04642559825 AS scaler_182, (CAST([ADS_imp_1_OUT].impter_183 AS FLOAT) - 0.165152741218) / 0.914390699138 AS scaler_183, (CAST([ADS_imp_1_OUT].impter_184 AS FLOAT) - 0.0843971941585) / 0.916267479995 AS scaler_184, (CAST([ADS_imp_1_OUT].impter_185 AS FLOAT) - -1.02918029949) / 4.84787509189 AS scaler_185, (CAST([ADS_imp_1_OUT].impter_186 AS FLOAT) - 0.0585389202319) / 1.01075833315 AS scaler_186, (CAST([ADS_imp_1_OUT].impter_187 AS FLOAT) - -0.11037512368) / 0.969470854631 AS scaler_187, (CAST([ADS_imp_1_OUT].impter_188 AS FLOAT) - -0.140558025982) / 1.00942894275 AS scaler_188, (CAST([ADS_imp_1_OUT].impter_189 AS FLOAT) - 0.173868108982) / 0.916352920401 AS scaler_189, (CAST([ADS_imp_1_OUT].impter_190 AS FLOAT) - 0.0808891608086) / 0.884752828276 AS scaler_190, (CAST([ADS_imp_1_OUT].impter_191 AS FLOAT) - -0.167031100738) / 0.951574867508 AS scaler_191, (CAST([ADS_imp_1_OUT].impter_192 AS FLOAT) - -0.0502527225523) / 1.02626481945 AS scaler_192, (CAST([ADS_imp_1_OUT].impter_193 AS FLOAT) - -0.0395897985872) / 0.939646194697 AS scaler_193, (CAST([ADS_imp_1_OUT].impter_194 AS FLOAT) - 0.0987703587207) / 5.20574685824 AS scaler_194, (CAST([ADS_imp_1_OUT].impter_195 AS FLOAT) - 0.111288075361) / 0.932589058768 AS scaler_195, (CAST([ADS_imp_1_OUT].impter_196 AS FLOAT) - 0.0774555838719) / 0.887813845376 AS scaler_196, (CAST([ADS_imp_1_OUT].impter_197 AS FLOAT) - 0.0368426327267) / 0.992188493943 AS scaler_197, (CAST([ADS_imp_1_OUT].impter_198 AS FLOAT) - -0.0997939568539) / 1.08632411123 AS scaler_198, (CAST([ADS_imp_1_OUT].impter_199 AS FLOAT) - 0.0302366011416) / 0.904072304568 AS scaler_199, (CAST([ADS_imp_1_OUT].impter_200 AS FLOAT) - -0.10359852965) / 1.05550879506 AS scaler_200, (CAST([ADS_imp_1_OUT].impter_201 AS FLOAT) - 0.580745372952) / 6.22743888826 AS scaler_201, (CAST([ADS_imp_1_OUT].impter_202 AS FLOAT) - -0.167440486505) / 6.03462537461 AS scaler_202, (CAST([ADS_imp_1_OUT].impter_203 AS FLOAT) - 0.128209927674) / 1.07981674493 AS scaler_203, (CAST([ADS_imp_1_OUT].impter_204 AS FLOAT) - -0.117611025079) / 0.748125104732 AS scaler_204, (CAST([ADS_imp_1_OUT].impter_205 AS FLOAT) - -1.34268804784) / 5.44191961448 AS scaler_205, (CAST([ADS_imp_1_OUT].impter_206 AS FLOAT) - 0.0341880615689) / 1.23108954597 AS scaler_206, (CAST([ADS_imp_1_OUT].impter_207 AS FLOAT) - -0.424807631767) / 5.30941096024 AS scaler_207, (CAST([ADS_imp_1_OUT].impter_208 AS FLOAT) - -0.0190268128898) / 1.01638772861 AS scaler_208, (CAST([ADS_imp_1_OUT].impter_209 AS FLOAT) - -0.0944153365184) / 0.929989358492 AS scaler_209, (CAST([ADS_imp_1_OUT].impter_210 AS FLOAT) - -0.0371701049741) / 0.918218820809 AS scaler_210, (CAST([ADS_imp_1_OUT].impter_211 AS FLOAT) - 0.324777358919) / 5.69458797014 AS scaler_211, (CAST([ADS_imp_1_OUT].impter_212 AS FLOAT) - 0.126797311533) / 0.960673449297 AS scaler_212, (CAST([ADS_imp_1_OUT].impter_213 AS FLOAT) - -0.0307070821807) / 0.943569248546 AS scaler_213, (CAST([ADS_imp_1_OUT].impter_214 AS FLOAT) - -0.620345237636) / 5.60985246771 AS scaler_214, (CAST([ADS_imp_1_OUT].impter_215 AS FLOAT) - 0.0316827864696) / 1.00056919104 AS scaler_215, (CAST([ADS_imp_1_OUT].impter_216 AS FLOAT) - 0.303375338707) / 0.923814601298 AS scaler_216, (CAST([ADS_imp_1_OUT].impter_217 AS FLOAT) - -0.0133674378174) / 0.864810904552 AS scaler_217, (CAST([ADS_imp_1_OUT].impter_218 AS FLOAT) - 0.00988373717992) / 0.81003270263 AS scaler_218, (CAST([ADS_imp_1_OUT].impter_219 AS FLOAT) - 0.0276290164323) / 0.931843640573 AS scaler_219, (CAST([ADS_imp_1_OUT].impter_220 AS FLOAT) - -0.0220436757355) / 1.20007167055 AS scaler_220, (CAST([ADS_imp_1_OUT].impter_221 AS FLOAT) - -0.104994978045) / 1.00841060853 AS scaler_221, (CAST([ADS_imp_1_OUT].impter_222 AS FLOAT) - -0.00877851195561) / 0.9923387308 AS scaler_222, (CAST([ADS_imp_1_OUT].impter_223 AS FLOAT) - -0.0313868421379) / 0.912885169644 AS scaler_223, (CAST([ADS_imp_1_OUT].impter_224 AS FLOAT) - -0.134950752914) / 1.12818373022 AS scaler_224, (CAST([ADS_imp_1_OUT].impter_225 AS FLOAT) - -0.936442790925) / 5.43201159265 AS scaler_225, (CAST([ADS_imp_1_OUT].impter_226 AS FLOAT) - -0.0315169121652) / 0.850945066071 AS scaler_226, (CAST([ADS_imp_1_OUT].impter_227 AS FLOAT) - 0.018852796022) / 1.15457135293 AS scaler_227, (CAST([ADS_imp_1_OUT].impter_228 AS FLOAT) - -0.272648236873) / 0.831509936246 AS scaler_228, (CAST([ADS_imp_1_OUT].impter_229 AS FLOAT) - -0.0298563737575) / 0.938808512764 AS scaler_229, (CAST([ADS_imp_1_OUT].impter_230 AS FLOAT) - -0.0675733375616) / 0.957640884305 AS scaler_230, (CAST([ADS_imp_1_OUT].impter_231 AS FLOAT) - -0.0176950157771) / 1.04565857713 AS scaler_231, (CAST([ADS_imp_1_OUT].impter_232 AS FLOAT) - 0.000245577908212) / 0.857140869421 AS scaler_232, (CAST([ADS_imp_1_OUT].impter_233 AS FLOAT) - -0.0182587868548) / 0.970666890154 AS scaler_233, (CAST([ADS_imp_1_OUT].impter_234 AS FLOAT) - -0.046952749881) / 1.0512983729 AS scaler_234, (CAST([ADS_imp_1_OUT].impter_235 AS FLOAT) - 0.0031703300186) / 1.02543503973 AS scaler_235, (CAST([ADS_imp_1_OUT].impter_236 AS FLOAT) - 0.140649995993) / 1.03858026472 AS scaler_236, (CAST([ADS_imp_1_OUT].impter_237 AS FLOAT) - 0.168557803915) / 0.918888152819 AS scaler_237, (CAST([ADS_imp_1_OUT].impter_238 AS FLOAT) - -0.0627744470922) / 0.981392312939 AS scaler_238, (CAST([ADS_imp_1_OUT].impter_239 AS FLOAT) - -0.123932052285) / 1.01959302947 AS scaler_239, (CAST([ADS_imp_1_OUT].impter_240 AS FLOAT) - -0.126372688261) / 0.895848750781 AS scaler_240, (CAST([ADS_imp_1_OUT].impter_241 AS FLOAT) - 0.0452748919164) / 0.972741900284 AS scaler_241, (CAST([ADS_imp_1_OUT].impter_242 AS FLOAT) - -0.0927011364147) / 0.975416134006 AS scaler_242, (CAST([ADS_imp_1_OUT].impter_243 AS FLOAT) - 0.00632301693557) / 1.0104451814 AS scaler_243, (CAST([ADS_imp_1_OUT].impter_244 AS FLOAT) - 0.0333977092464) / 1.16753265911 AS scaler_244, (CAST([ADS_imp_1_OUT].impter_245 AS FLOAT) - -0.168083786087) / 1.01546941829 AS scaler_245, (CAST([ADS_imp_1_OUT].impter_246 AS FLOAT) - 0.0029886855719) / 0.976054862834 AS scaler_246, (CAST([ADS_imp_1_OUT].impter_247 AS FLOAT) - 0.0560848668458) / 1.10794897296 AS scaler_247, (CAST([ADS_imp_1_OUT].impter_248 AS FLOAT) - 0.0417997497239) / 0.880222224483 AS scaler_248, (CAST([ADS_imp_1_OUT].impter_249 AS FLOAT) - -0.36602280716) / 6.25986578564 AS scaler_249, (CAST([ADS_imp_1_OUT].impter_250 AS FLOAT) - 0.144638350554) / 0.97725365912 AS scaler_250, (CAST([ADS_imp_1_OUT].impter_251 AS FLOAT) - 0.151607395988) / 1.05842511954 AS scaler_251, (CAST([ADS_imp_1_OUT].impter_252 AS FLOAT) - 0.564998972142) / 5.74478125804 AS scaler_252, (CAST([ADS_imp_1_OUT].impter_253 AS FLOAT) - 0.0134344635679) / 0.840835316436 AS scaler_253, (CAST([ADS_imp_1_OUT].impter_254 AS FLOAT) - 0.560432423307) / 6.03197623711 AS scaler_254, (CAST([ADS_imp_1_OUT].impter_255 AS FLOAT) - 0.0317661481832) / 0.852609427449 AS scaler_255, (CAST([ADS_imp_1_OUT].impter_256 AS FLOAT) - 1.30298618585) / 6.69721222254 AS scaler_256, (CAST([ADS_imp_1_OUT].impter_257 AS FLOAT) - -0.143224727205) / 1.03537076914 AS scaler_257, (CAST([ADS_imp_1_OUT].impter_258 AS FLOAT) - 0.71794965434) / 6.19365000837 AS scaler_258, (CAST([ADS_imp_1_OUT].impter_259 AS FLOAT) - 8.224514251) / 31.7689755788 AS scaler_259, (CAST([ADS_imp_1_OUT].impter_260 AS FLOAT) - -0.166150293418) / 0.899665759387 AS scaler_260, (CAST([ADS_imp_1_OUT].impter_261 AS FLOAT) - -0.0157519736981) / 1.02449172017 AS scaler_261, (CAST([ADS_imp_1_OUT].impter_262 AS FLOAT) - 0.131183768265) / 0.964783524382 AS scaler_262, (CAST([ADS_imp_1_OUT].impter_263 AS FLOAT) - 0.261629555134) / 0.920611399144 AS scaler_263, (CAST([ADS_imp_1_OUT].impter_264 AS FLOAT) - -0.112711626171) / 1.12137845552 AS scaler_264, (CAST([ADS_imp_1_OUT].impter_265 AS FLOAT) - 0.148323142722) / 0.838268523422 AS scaler_265, (CAST([ADS_imp_1_OUT].impter_266 AS FLOAT) - 0.0011873792407) / 1.02281553365 AS scaler_266, (CAST([ADS_imp_1_OUT].impter_267 AS FLOAT) - 0.0306997455059) / 0.998558699834 AS scaler_267, (CAST([ADS_imp_1_OUT].impter_268 AS FLOAT) - -0.152609735448) / 0.989600606416 AS scaler_268, (CAST([ADS_imp_1_OUT].impter_269 AS FLOAT) - 1.2008552094) / 5.99700778654 AS scaler_269, (CAST([ADS_imp_1_OUT].impter_270 AS FLOAT) - -0.0383407386745) / 1.04700343582 AS scaler_270, (CAST([ADS_imp_1_OUT].impter_271 AS FLOAT) - 0.0827687070791) / 1.07553257821 AS scaler_271, (CAST([ADS_imp_1_OUT].impter_272 AS FLOAT) - 0.0286786322643) / 1.02177322204 AS scaler_272, (CAST([ADS_imp_1_OUT].impter_273 AS FLOAT) - -0.0407974454747) / 0.958164857737 AS scaler_273, (CAST([ADS_imp_1_OUT].impter_274 AS FLOAT) - -0.272281634241) / 4.99539724843 AS scaler_274, (CAST([ADS_imp_1_OUT].impter_275 AS FLOAT) - -0.131430615035) / 0.991361610217 AS scaler_275, (CAST([ADS_imp_1_OUT].impter_276 AS FLOAT) - 0.063771238394) / 0.947802736067 AS scaler_276, (CAST([ADS_imp_1_OUT].impter_277 AS FLOAT) - 0.19572302152) / 1.14512197558 AS scaler_277, (CAST([ADS_imp_1_OUT].impter_278 AS FLOAT) - -0.00884614568083) / 0.984383291427 AS scaler_278, (CAST([ADS_imp_1_OUT].impter_279 AS FLOAT) - -0.0236995464623) / 1.02934432725 AS scaler_279, (CAST([ADS_imp_1_OUT].impter_280 AS FLOAT) - -0.125576149744) / 0.977369232885 AS scaler_280, (CAST([ADS_imp_1_OUT].impter_281 AS FLOAT) - -1.67265403238) / 5.19331488932 AS scaler_281, (CAST([ADS_imp_1_OUT].impter_282 AS FLOAT) - 0.00257107800389) / 0.944020495986 AS scaler_282, (CAST([ADS_imp_1_OUT].impter_283 AS FLOAT) - 0.0607637286154) / 1.02954657337 AS scaler_283, (CAST([ADS_imp_1_OUT].impter_284 AS FLOAT) - 0.0143619934779) / 0.885047025543 AS scaler_284, (CAST([ADS_imp_1_OUT].impter_285 AS FLOAT) - -0.240880873553) / 0.855821383101 AS scaler_285, (CAST([ADS_imp_1_OUT].impter_286 AS FLOAT) - -0.636783488231) / 5.35910399694 AS scaler_286, (CAST([ADS_imp_1_OUT].impter_287 AS FLOAT) - 0.0880825931322) / 0.923067004471 AS scaler_287, (CAST([ADS_imp_1_OUT].impter_288 AS FLOAT) - 0.11706370896) / 1.19257754865 AS scaler_288, (CAST([ADS_imp_1_OUT].impter_289 AS FLOAT) - 0.36873072278) / 6.03325379 AS scaler_289, (CAST([ADS_imp_1_OUT].impter_290 AS FLOAT) - 0.106374609659) / 1.11731129663 AS scaler_290, (CAST([ADS_imp_1_OUT].impter_291 AS FLOAT) - 0.0497285805293) / 1.06644408099 AS scaler_291, (CAST([ADS_imp_1_OUT].impter_292 AS FLOAT) - 0.145723170445) / 1.04955675506 AS scaler_292, (CAST([ADS_imp_1_OUT].impter_293 AS FLOAT) - 0.016088853359) / 0.949154348747 AS scaler_293, (CAST([ADS_imp_1_OUT].impter_294 AS FLOAT) - 0.0495228081005) / 0.980890494287 AS scaler_294, (CAST([ADS_imp_1_OUT].impter_295 AS FLOAT) - -0.0377248043369) / 0.887136369034 AS scaler_295, (CAST([ADS_imp_1_OUT].impter_296 AS FLOAT) - -0.0261527790771) / 1.0198039614 AS scaler_296, (CAST([ADS_imp_1_OUT].impter_297 AS FLOAT) - -0.258729614396) / 1.08390587917 AS scaler_297, (CAST([ADS_imp_1_OUT].impter_298 AS FLOAT) - -0.131928465271) / 0.803074255718 AS scaler_298, (CAST([ADS_imp_1_OUT].impter_299 AS FLOAT) - -0.118972452443) / 0.941695437153 AS scaler_299, (CAST([ADS_imp_1_OUT].impter_300 AS FLOAT) - -0.00804777098117) / 1.08360347645 AS scaler_300, (CAST([ADS_imp_1_OUT].impter_301 AS FLOAT) - -0.48616145874) / 6.3221581812 AS scaler_301, (CAST([ADS_imp_1_OUT].impter_302 AS FLOAT) - 0.0711481863821) / 0.960476639295 AS scaler_302, (CAST([ADS_imp_1_OUT].impter_303 AS FLOAT) - -0.0520833883796) / 1.26877837801 AS scaler_303, (CAST([ADS_imp_1_OUT].impter_304 AS FLOAT) - -0.0988571883265) / 0.958984081915 AS scaler_304, (CAST([ADS_imp_1_OUT].impter_305 AS FLOAT) - -0.872816342171) / 5.41777741261 AS scaler_305, (CAST([ADS_imp_1_OUT].impter_306 AS FLOAT) - -0.0766128251525) / 0.879999736704 AS scaler_306, (CAST([ADS_imp_1_OUT].impter_307 AS FLOAT) - 0.148496637925) / 1.01095781877 AS scaler_307, (CAST([ADS_imp_1_OUT].impter_308 AS FLOAT) - -0.0583878548168) / 0.885427437101 AS scaler_308, (CAST([ADS_imp_1_OUT].impter_309 AS FLOAT) - -0.19537281207) / 0.952118132115 AS scaler_309, (CAST([ADS_imp_1_OUT].impter_310 AS FLOAT) - 0.565370561779) / 5.38467550023 AS scaler_310, (CAST([ADS_imp_1_OUT].impter_311 AS FLOAT) - 0.105545979102) / 6.00708931952 AS scaler_311, (CAST([ADS_imp_1_OUT].impter_312 AS FLOAT) - 0.0629640073075) / 0.901868227455 AS scaler_312, (CAST([ADS_imp_1_OUT].impter_313 AS FLOAT) - 0.198276598904) / 0.91840768869 AS scaler_313, (CAST([ADS_imp_1_OUT].impter_314 AS FLOAT) - -0.128658846387) / 1.03754411158 AS scaler_314, (CAST([ADS_imp_1_OUT].impter_315 AS FLOAT) - -0.180852313464) / 1.13023403109 AS scaler_315, (CAST([ADS_imp_1_OUT].impter_316 AS FLOAT) - 0.0779075774413) / 0.791586612768 AS scaler_316, (CAST([ADS_imp_1_OUT].impter_317 AS FLOAT) - 0.000215112040169) / 0.993776759044 AS scaler_317, (CAST([ADS_imp_1_OUT].impter_318 AS FLOAT) - -0.0204879667176) / 0.984353880585 AS scaler_318, (CAST([ADS_imp_1_OUT].impter_319 AS FLOAT) - 0.503162957773) / 5.74353881439 AS scaler_319, (CAST([ADS_imp_1_OUT].impter_320 AS FLOAT) - 0.353646270242) / 1.01808676007 AS scaler_320, (CAST([ADS_imp_1_OUT].impter_321 AS FLOAT) - 0.247006219837) / 0.935073890105 AS scaler_321, (CAST([ADS_imp_1_OUT].impter_322 AS FLOAT) - -0.0193652989804) / 0.989148337737 AS scaler_322, (CAST([ADS_imp_1_OUT].impter_323 AS FLOAT) - -0.599504954324) / 5.73315643702 AS scaler_323, (CAST([ADS_imp_1_OUT].impter_324 AS FLOAT) - -0.110516974112) / 1.04154387769 AS scaler_324, (CAST([ADS_imp_1_OUT].impter_325 AS FLOAT) - 1.88552584017) / 6.01952040048 AS scaler_325, (CAST([ADS_imp_1_OUT].impter_326 AS FLOAT) - -0.0397824482677) / 0.946163362633 AS scaler_326, (CAST([ADS_imp_1_OUT].impter_327 AS FLOAT) - 0.10219980499) / 1.13672370254 AS scaler_327, (CAST([ADS_imp_1_OUT].impter_328 AS FLOAT) - 0.059603180595) / 0.97958995301 AS scaler_328, (CAST([ADS_imp_1_OUT].impter_329 AS FLOAT) - 0.164686075345) / 1.04564567714 AS scaler_329, (CAST([ADS_imp_1_OUT].impter_330 AS FLOAT) - 0.100013105043) / 1.17602362278 AS scaler_330, (CAST([ADS_imp_1_OUT].impter_331 AS FLOAT) - -0.00883287974389) / 1.04850853988 AS scaler_331, (CAST([ADS_imp_1_OUT].impter_332 AS FLOAT) - -0.191204844905) / 0.920999842534 AS scaler_332, (CAST([ADS_imp_1_OUT].impter_333 AS FLOAT) - -0.106954834493) / 0.887256491112 AS scaler_333, (CAST([ADS_imp_1_OUT].impter_334 AS FLOAT) - -0.208191338555) / 1.03483349591 AS scaler_334, (CAST([ADS_imp_1_OUT].impter_335 AS FLOAT) - 0.0921463114383) / 1.13339999578 AS scaler_335, (CAST([ADS_imp_1_OUT].impter_336 AS FLOAT) - -0.0210271754896) / 1.03841126242 AS scaler_336, (CAST([ADS_imp_1_OUT].impter_337 AS FLOAT) - 0.0248005566537) / 0.852385984883 AS scaler_337, (CAST([ADS_imp_1_OUT].impter_338 AS FLOAT) - 1.41412513844) / 6.06076125624 AS scaler_338, (CAST([ADS_imp_1_OUT].impter_339 AS FLOAT) - -0.184019076664) / 0.990300488907 AS scaler_339, (CAST([ADS_imp_1_OUT].impter_340 AS FLOAT) - 0.0118190339028) / 1.0588588175 AS scaler_340, (CAST([ADS_imp_1_OUT].impter_341 AS FLOAT) - 1.56985482751) / 4.78757015435 AS scaler_341, (CAST([ADS_imp_1_OUT].impter_342 AS FLOAT) - 0.0033666591485) / 0.94667803546 AS scaler_342, (CAST([ADS_imp_1_OUT].impter_343 AS FLOAT) - 0.398023876101) / 6.37487822941 AS scaler_343, (CAST([ADS_imp_1_OUT].impter_344 AS FLOAT) - 6.80318890185e-05) / 1.09421930356 AS scaler_344, (CAST([ADS_imp_1_OUT].impter_345 AS FLOAT) - -0.00314817405783) / 1.12305767337 AS scaler_345, (CAST([ADS_imp_1_OUT].impter_346 AS FLOAT) - 0.0148586168205) / 1.07161772003 AS scaler_346, (CAST([ADS_imp_1_OUT].impter_347 AS FLOAT) - 0.13229577523) / 0.863627704321 AS scaler_347, (CAST([ADS_imp_1_OUT].impter_348 AS FLOAT) - -0.179400111508) / 5.12150961195 AS scaler_348, (CAST([ADS_imp_1_OUT].impter_349 AS FLOAT) - 0.0508238163495) / 0.954479429411 AS scaler_349, (CAST([ADS_imp_1_OUT].impter_350 AS FLOAT) - -0.0193565021788) / 1.02386953698 AS scaler_350, (CAST([ADS_imp_1_OUT].impter_351 AS FLOAT) - 0.0982059686957) / 0.91589315385 AS scaler_351, (CAST([ADS_imp_1_OUT].impter_352 AS FLOAT) - 0.181521855677) / 0.910846508744 AS scaler_352, (CAST([ADS_imp_1_OUT].impter_353 AS FLOAT) - 0.00681025293028) / 0.938086807337 AS scaler_353, (CAST([ADS_imp_1_OUT].impter_354 AS FLOAT) - 0.129193110559) / 1.08868953143 AS scaler_354, (CAST([ADS_imp_1_OUT].impter_355 AS FLOAT) - 0.0959431247867) / 1.01678173343 AS scaler_355, (CAST([ADS_imp_1_OUT].impter_356 AS FLOAT) - -0.127062639139) / 0.880625129431 AS scaler_356, (CAST([ADS_imp_1_OUT].impter_357 AS FLOAT) - 0.157928287413) / 0.975866485337 AS scaler_357, (CAST([ADS_imp_1_OUT].impter_358 AS FLOAT) - 0.0801690195408) / 1.08393711129 AS scaler_358, (CAST([ADS_imp_1_OUT].impter_359 AS FLOAT) - 0.172867928701) / 1.02782376068 AS scaler_359, (CAST([ADS_imp_1_OUT].impter_360 AS FLOAT) - -0.0590072377435) / 0.843606647996 AS scaler_360, (CAST([ADS_imp_1_OUT].impter_361 AS FLOAT) - -0.147765725472) / 0.969525239325 AS scaler_361, (CAST([ADS_imp_1_OUT].impter_362 AS FLOAT) - 0.311578081194) / 0.966868761003 AS scaler_362, (CAST([ADS_imp_1_OUT].impter_363 AS FLOAT) - -0.262352119639) / 1.05510397836 AS scaler_363, (CAST([ADS_imp_1_OUT].impter_364 AS FLOAT) - 0.298976071447) / 0.934739083818 AS scaler_364, (CAST([ADS_imp_1_OUT].impter_365 AS FLOAT) - 0.0635522208105) / 0.967067848899 AS scaler_365, (CAST([ADS_imp_1_OUT].impter_366 AS FLOAT) - 0.0696538909171) / 0.958847983885 AS scaler_366, (CAST([ADS_imp_1_OUT].impter_367 AS FLOAT) - 0.901036611346) / 6.05537264758 AS scaler_367, (CAST([ADS_imp_1_OUT].impter_368 AS FLOAT) - -0.0880748721349) / 0.944888703574 AS scaler_368, (CAST([ADS_imp_1_OUT].impter_369 AS FLOAT) - -0.230342684375) / 1.03818291491 AS scaler_369, (CAST([ADS_imp_1_OUT].impter_370 AS FLOAT) - 0.0543713165178) / 0.88109346404 AS scaler_370, (CAST([ADS_imp_1_OUT].impter_371 AS FLOAT) - -0.133410568078) / 1.06381372723 AS scaler_371, (CAST([ADS_imp_1_OUT].impter_372 AS FLOAT) - 0.00352504428195) / 1.00047335918 AS scaler_372, (CAST([ADS_imp_1_OUT].impter_373 AS FLOAT) - -0.201129060158) / 0.87600126666 AS scaler_373, (CAST([ADS_imp_1_OUT].impter_374 AS FLOAT) - -0.287866231405) / 4.60410852232 AS scaler_374, (CAST([ADS_imp_1_OUT].impter_375 AS FLOAT) - 0.089138801418) / 1.04883986669 AS scaler_375, (CAST([ADS_imp_1_OUT].impter_376 AS FLOAT) - 0.329357432778) / 5.05529475065 AS scaler_376, (CAST([ADS_imp_1_OUT].impter_377 AS FLOAT) - -0.180305383873) / 1.10107806062 AS scaler_377, (CAST([ADS_imp_1_OUT].impter_378 AS FLOAT) - -0.0995695199114) / 0.872805141161 AS scaler_378, (CAST([ADS_imp_1_OUT].impter_379 AS FLOAT) - -0.00880856764244) / 0.879544804654 AS scaler_379, (CAST([ADS_imp_1_OUT].impter_380 AS FLOAT) - -0.35405190082) / 6.28381093463 AS scaler_380, (CAST([ADS_imp_1_OUT].impter_381 AS FLOAT) - -0.310066258331) / 5.94533996021 AS scaler_381, (CAST([ADS_imp_1_OUT].impter_382 AS FLOAT) - -0.203054864841) / 1.0515940249 AS scaler_382, (CAST([ADS_imp_1_OUT].impter_383 AS FLOAT) - 0.0771236648041) / 1.02282894453 AS scaler_383, (CAST([ADS_imp_1_OUT].impter_384 AS FLOAT) - -0.0129709043905) / 1.0330735933 AS scaler_384, (CAST([ADS_imp_1_OUT].impter_385 AS FLOAT) - 0.0297929000302) / 0.805171018843 AS scaler_385, (CAST([ADS_imp_1_OUT].impter_386 AS FLOAT) - -0.160329259623) / 0.828611180627 AS scaler_386, (CAST([ADS_imp_1_OUT].impter_387 AS FLOAT) - 0.140225166413) / 1.00235062813 AS scaler_387, (CAST([ADS_imp_1_OUT].impter_388 AS FLOAT) - -0.0806926936768) / 1.05404693665 AS scaler_388, (CAST([ADS_imp_1_OUT].impter_389 AS FLOAT) - -0.150870275488) / 1.09948555827 AS scaler_389, (CAST([ADS_imp_1_OUT].impter_390 AS FLOAT) - -0.228384774111) / 1.0291961635 AS scaler_390, (CAST([ADS_imp_1_OUT].impter_391 AS FLOAT) - 0.0073413543014) / 0.920182403314 AS scaler_391, (CAST([ADS_imp_1_OUT].impter_392 AS FLOAT) - -0.00493687613796) / 1.01266864857 AS scaler_392, (CAST([ADS_imp_1_OUT].impter_393 AS FLOAT) - -0.280781286893) / 0.876829353066 AS scaler_393, (CAST([ADS_imp_1_OUT].impter_394 AS FLOAT) - 0.0289947963342) / 1.03783502021 AS scaler_394, (CAST([ADS_imp_1_OUT].impter_395 AS FLOAT) - 0.096354141632) / 0.946823378435 AS scaler_395, (CAST([ADS_imp_1_OUT].impter_396 AS FLOAT) - -0.0787968365661) / 0.958545466432 AS scaler_396, (CAST([ADS_imp_1_OUT].impter_397 AS FLOAT) - -0.0251967260941) / 1.10238247694 AS scaler_397, (CAST([ADS_imp_1_OUT].impter_398 AS FLOAT) - -0.0808432732684) / 1.06636446364 AS scaler_398, (CAST([ADS_imp_1_OUT].impter_399 AS FLOAT) - 1.53212645632) / 4.84108148657 AS scaler_399, (CAST([ADS_imp_1_OUT].impter_400 AS FLOAT) - -0.803488717599) / 5.81642266357 AS scaler_400, (CAST([ADS_imp_1_OUT].impter_401 AS FLOAT) - -0.117194129006) / 1.06635432077 AS scaler_401, (CAST([ADS_imp_1_OUT].impter_402 AS FLOAT) - -0.25827664713) / 0.89416086906 AS scaler_402, (CAST([ADS_imp_1_OUT].impter_403 AS FLOAT) - -0.0373480394809) / 1.09543384442 AS scaler_403, (CAST([ADS_imp_1_OUT].impter_404 AS FLOAT) - 0.286443686292) / 6.14880940638 AS scaler_404, (CAST([ADS_imp_1_OUT].impter_405 AS FLOAT) - -0.0638298609528) / 0.905609531737 AS scaler_405, (CAST([ADS_imp_1_OUT].impter_406 AS FLOAT) - -0.0660883782265) / 1.06635764116 AS scaler_406, (CAST([ADS_imp_1_OUT].impter_407 AS FLOAT) - -0.0501946399826) / 0.848918353968 AS scaler_407, (CAST([ADS_imp_1_OUT].impter_408 AS FLOAT) - -0.0323760487241) / 1.01581561887 AS scaler_408, (CAST([ADS_imp_1_OUT].impter_409 AS FLOAT) - 0.04167379339) / 0.927754254167 AS scaler_409, (CAST([ADS_imp_1_OUT].impter_410 AS FLOAT) - -0.0284605493211) / 1.03706432953 AS scaler_410, (CAST([ADS_imp_1_OUT].impter_411 AS FLOAT) - -0.131110671462) / 1.02050832805 AS scaler_411, (CAST([ADS_imp_1_OUT].impter_412 AS FLOAT) - -1.0002970366) / 5.76864713811 AS scaler_412, (CAST([ADS_imp_1_OUT].impter_413 AS FLOAT) - 0.171160138271) / 1.00494480525 AS scaler_413, (CAST([ADS_imp_1_OUT].impter_414 AS FLOAT) - 0.0229393729912) / 1.01776539608 AS scaler_414, (CAST([ADS_imp_1_OUT].impter_415 AS FLOAT) - 0.0760966253155) / 0.978679220913 AS scaler_415, (CAST([ADS_imp_1_OUT].impter_416 AS FLOAT) - 0.946643149252) / 5.8183242151 AS scaler_416, (CAST([ADS_imp_1_OUT].impter_417 AS FLOAT) - -0.290618908703) / 0.796336265059 AS scaler_417, (CAST([ADS_imp_1_OUT].impter_418 AS FLOAT) - -0.379536109332) / 6.2912787275 AS scaler_418, (CAST([ADS_imp_1_OUT].impter_419 AS FLOAT) - -0.00117812142394) / 1.08350317724 AS scaler_419, (CAST([ADS_imp_1_OUT].impter_420 AS FLOAT) - 0.0922194076939) / 1.06251586998 AS scaler_420, (CAST([ADS_imp_1_OUT].impter_421 AS FLOAT) - -0.0119797502324) / 1.03789138578 AS scaler_421, (CAST([ADS_imp_1_OUT].impter_422 AS FLOAT) - -0.0337722809115) / 0.973033871377 AS scaler_422, (CAST([ADS_imp_1_OUT].impter_423 AS FLOAT) - -0.0476602627251) / 1.02156116827 AS scaler_423, (CAST([ADS_imp_1_OUT].impter_424 AS FLOAT) - 0.0771352940308) / 4.81452674944 AS scaler_424, (CAST([ADS_imp_1_OUT].impter_425 AS FLOAT) - 1.05812978458) / 6.10956810712 AS scaler_425, (CAST([ADS_imp_1_OUT].impter_426 AS FLOAT) - 1.02303404857) / 5.04195576859 AS scaler_426, (CAST([ADS_imp_1_OUT].impter_427 AS FLOAT) - -0.356860349496) / 5.9570669417 AS scaler_427, (CAST([ADS_imp_1_OUT].impter_428 AS FLOAT) - 0.0085564813388) / 1.06935312921 AS scaler_428, (CAST([ADS_imp_1_OUT].impter_429 AS FLOAT) - -0.811603006439) / 6.49333455414 AS scaler_429, (CAST([ADS_imp_1_OUT].impter_430 AS FLOAT) - -0.106777266141) / 1.12672189742 AS scaler_430, (CAST([ADS_imp_1_OUT].impter_431 AS FLOAT) - 0.0348962595423) / 1.00263471585 AS scaler_431, (CAST([ADS_imp_1_OUT].impter_432 AS FLOAT) - 1.64881806295) / 5.52977625809 AS scaler_432, (CAST([ADS_imp_1_OUT].impter_433 AS FLOAT) - -0.244599428317) / 6.32834297342 AS scaler_433, (CAST([ADS_imp_1_OUT].impter_434 AS FLOAT) - -0.25454747595) / 1.03608696036 AS scaler_434, (CAST([ADS_imp_1_OUT].impter_435 AS FLOAT) - 1.35252802986) / 5.52337623991 AS scaler_435, (CAST([ADS_imp_1_OUT].impter_436 AS FLOAT) - 0.176443942053) / 0.939090355733 AS scaler_436, (CAST([ADS_imp_1_OUT].impter_437 AS FLOAT) - -0.179028296461) / 0.993040558869 AS scaler_437, (CAST([ADS_imp_1_OUT].impter_438 AS FLOAT) - 0.00902373934837) / 1.07701170231 AS scaler_438, (CAST([ADS_imp_1_OUT].impter_439 AS FLOAT) - -0.102605833194) / 0.788996650617 AS scaler_439, (CAST([ADS_imp_1_OUT].impter_440 AS FLOAT) - -0.0468620792268) / 1.00531705523 AS scaler_440, (CAST([ADS_imp_1_OUT].impter_441 AS FLOAT) - -0.195282472806) / 0.902085119199 AS scaler_441, (CAST([ADS_imp_1_OUT].impter_442 AS FLOAT) - -0.010380909959) / 0.98002014577 AS scaler_442, (CAST([ADS_imp_1_OUT].impter_443 AS FLOAT) - 0.18153955212) / 0.915816159599 AS scaler_443, (CAST([ADS_imp_1_OUT].impter_444 AS FLOAT) - -0.683112300811) / 5.09520303337 AS scaler_444, (CAST([ADS_imp_1_OUT].impter_445 AS FLOAT) - 0.00841347651793) / 1.06343845863 AS scaler_445, (CAST([ADS_imp_1_OUT].impter_446 AS FLOAT) - 0.0304339862902) / 1.08711291418 AS scaler_446, (CAST([ADS_imp_1_OUT].impter_447 AS FLOAT) - 0.829798650198) / 5.95063871609 AS scaler_447, (CAST([ADS_imp_1_OUT].impter_448 AS FLOAT) - 0.167291052761) / 1.01547943606 AS scaler_448, (CAST([ADS_imp_1_OUT].impter_449 AS FLOAT) - 0.0122893227807) / 0.977667467843 AS scaler_449, (CAST([ADS_imp_1_OUT].impter_450 AS FLOAT) - -0.038334426898) / 1.16474461714 AS scaler_450, (CAST([ADS_imp_1_OUT].impter_451 AS FLOAT) - 0.00468540908651) / 1.02487050904 AS scaler_451, (CAST([ADS_imp_1_OUT].impter_452 AS FLOAT) - 0.0232806936474) / 0.822973115351 AS scaler_452, (CAST([ADS_imp_1_OUT].impter_453 AS FLOAT) - -0.189656585673) / 0.918392972327 AS scaler_453, (CAST([ADS_imp_1_OUT].impter_454 AS FLOAT) - 0.0978318363876) / 0.895340548358 AS scaler_454, (CAST([ADS_imp_1_OUT].impter_455 AS FLOAT) - -0.122455538778) / 1.05548342056 AS scaler_455, (CAST([ADS_imp_1_OUT].impter_456 AS FLOAT) - -0.0449851069624) / 1.02829070935 AS scaler_456, (CAST([ADS_imp_1_OUT].impter_457 AS FLOAT) - 0.363796284415) / 6.25704972678 AS scaler_457, (CAST([ADS_imp_1_OUT].impter_458 AS FLOAT) - 0.0412080874385) / 0.904617875847 AS scaler_458, (CAST([ADS_imp_1_OUT].impter_459 AS FLOAT) - 0.357018732436) / 0.863104591568 AS scaler_459, (CAST([ADS_imp_1_OUT].impter_460 AS FLOAT) - 0.636019300348) / 6.42011328879 AS scaler_460, (CAST([ADS_imp_1_OUT].impter_461 AS FLOAT) - -0.170616903158) / 1.03578022831 AS scaler_461, (CAST([ADS_imp_1_OUT].impter_462 AS FLOAT) - -0.204407432582) / 1.07124008607 AS scaler_462, (CAST([ADS_imp_1_OUT].impter_463 AS FLOAT) - 0.120032205998) / 1.11612301124 AS scaler_463, (CAST([ADS_imp_1_OUT].impter_464 AS FLOAT) - -0.059056324559) / 1.0272822544 AS scaler_464, (CAST([ADS_imp_1_OUT].impter_465 AS FLOAT) - 0.587248024863) / 5.47035245667 AS scaler_465, (CAST([ADS_imp_1_OUT].impter_466 AS FLOAT) - 0.0675120861008) / 0.982698081592 AS scaler_466, (CAST([ADS_imp_1_OUT].impter_467 AS FLOAT) - -0.61398948385) / 6.12417475198 AS scaler_467, (CAST([ADS_imp_1_OUT].impter_468 AS FLOAT) - -0.416152086995) / 6.23981725403 AS scaler_468, (CAST([ADS_imp_1_OUT].impter_469 AS FLOAT) - -0.471036449939) / 6.17377528041 AS scaler_469, (CAST([ADS_imp_1_OUT].impter_470 AS FLOAT) - -0.03361262391) / 0.896844357005 AS scaler_470, (CAST([ADS_imp_1_OUT].impter_471 AS FLOAT) - 0.149403233404) / 6.63796967636 AS scaler_471, (CAST([ADS_imp_1_OUT].impter_472 AS FLOAT) - 0.0354435222644) / 1.08510345051 AS scaler_472, (CAST([ADS_imp_1_OUT].impter_473 AS FLOAT) - -0.0571960096997) / 0.935677658469 AS scaler_473, (CAST([ADS_imp_1_OUT].impter_474 AS FLOAT) - -0.0886753155327) / 5.46847086571 AS scaler_474, (CAST([ADS_imp_1_OUT].impter_475 AS FLOAT) - -0.158985220408) / 0.97379682546 AS scaler_475, (CAST([ADS_imp_1_OUT].impter_476 AS FLOAT) - -0.00178282108478) / 5.1633563578 AS scaler_476, (CAST([ADS_imp_1_OUT].impter_477 AS FLOAT) - 0.174108027612) / 0.896635656305 AS scaler_477, (CAST([ADS_imp_1_OUT].impter_478 AS FLOAT) - -0.097913644338) / 0.974531437357 AS scaler_478, (CAST([ADS_imp_1_OUT].impter_479 AS FLOAT) - -0.643635471043) / 6.05668497981 AS scaler_479, (CAST([ADS_imp_1_OUT].impter_480 AS FLOAT) - -0.0725633270219) / 0.986423327257 AS scaler_480, (CAST([ADS_imp_1_OUT].impter_481 AS FLOAT) - 0.0192807343729) / 0.978989303134 AS scaler_481, (CAST([ADS_imp_1_OUT].impter_482 AS FLOAT) - -0.140423295562) / 0.931547853822 AS scaler_482, (CAST([ADS_imp_1_OUT].impter_483 AS FLOAT) - -0.454191269414) / 7.08422361178 AS scaler_483, (CAST([ADS_imp_1_OUT].impter_484 AS FLOAT) - -0.231357320982) / 5.96180643928 AS scaler_484, (CAST([ADS_imp_1_OUT].impter_485 AS FLOAT) - 0.161643785871) / 1.04505120789 AS scaler_485, (CAST([ADS_imp_1_OUT].impter_486 AS FLOAT) - 0.108935232558) / 1.01415364601 AS scaler_486, (CAST([ADS_imp_1_OUT].impter_487 AS FLOAT) - -0.0704902834803) / 0.981266227932 AS scaler_487, (CAST([ADS_imp_1_OUT].impter_488 AS FLOAT) - -0.0871147269832) / 0.920148603716 AS scaler_488, (CAST([ADS_imp_1_OUT].impter_489 AS FLOAT) - -0.0146863646733) / 1.01031846897 AS scaler_489, (CAST([ADS_imp_1_OUT].impter_490 AS FLOAT) - -0.0351271519202) / 1.12143641123 AS scaler_490, (CAST([ADS_imp_1_OUT].impter_491 AS FLOAT) - -0.0147194387394) / 1.00659705535 AS scaler_491, (CAST([ADS_imp_1_OUT].impter_492 AS FLOAT) - 0.287091561281) / 0.876578417457 AS scaler_492, (CAST([ADS_imp_1_OUT].impter_493 AS FLOAT) - -0.0178812198548) / 0.978094511941 AS scaler_493, (CAST([ADS_imp_1_OUT].impter_494 AS FLOAT) - 0.0923480652904) / 1.03421497646 AS scaler_494, (CAST([ADS_imp_1_OUT].impter_495 AS FLOAT) - -0.185238617025) / 6.4491986106 AS scaler_495, (CAST([ADS_imp_1_OUT].impter_496 AS FLOAT) - 0.0509116041734) / 0.797458376887 AS scaler_496, (CAST([ADS_imp_1_OUT].impter_497 AS FLOAT) - 0.157391370527) / 6.25505125748 AS scaler_497, (CAST([ADS_imp_1_OUT].impter_498 AS FLOAT) - 0.157971713349) / 6.12014529944 AS scaler_498, (CAST([ADS_imp_1_OUT].impter_499 AS FLOAT) - 0.0663736652573) / 1.0103773321 AS scaler_499, (CAST([ADS_imp_1_OUT].impter_500 AS FLOAT) - -0.0367353520064) / 0.899355818635 AS scaler_500, (CAST([ADS_imp_1_OUT].impter_501 AS FLOAT) - 0.00996749889921) / 1.03030186346 AS scaler_501 
FROM [ADS_imp_1_OUT]), 
[DT_node_lookup] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_474 < -0.203818) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_474' AS feature, -0.203818 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.026087 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.056 AS [Score]) AS [Values]), 
[DT_Output] AS 
(SELECT [DT_node_lookup].[KEY] AS [KEY], [DT_node_lookup].node_id_2 AS node_id_2, [DT_node_data].node_id AS node_id, [DT_node_data].feature AS feature, [DT_node_data].threshold AS threshold, [DT_node_data].depth AS depth, [DT_node_data].parent_id AS parent_id, [DT_node_data].[Score] AS [Score] 
FROM [DT_node_lookup] LEFT OUTER JOIN [DT_node_data] ON [DT_node_lookup].node_id_2 = [DT_node_data].node_id), 
[XGB_Tree_0_0] AS 
(SELECT [DT_Output].[KEY] AS join_key_0_0, [DT_Output].[Score] AS [Score_0_0] 
FROM [DT_Output]), 
[DT_node_lookup_1] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_474 < -0.203818) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_1] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_474' AS feature, -0.203818 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0250056 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0547119 AS [Score]) AS [Values]), 
[DT_Output_1] AS 
(SELECT [DT_node_lookup_1].[KEY] AS [KEY], [DT_node_lookup_1].node_id_2 AS node_id_2, [DT_node_data_1].node_id AS node_id, [DT_node_data_1].feature AS feature, [DT_node_data_1].threshold AS threshold, [DT_node_data_1].depth AS depth, [DT_node_data_1].parent_id AS parent_id, [DT_node_data_1].[Score] AS [Score] 
FROM [DT_node_lookup_1] LEFT OUTER JOIN [DT_node_data_1] ON [DT_node_lookup_1].node_id_2 = [DT_node_data_1].node_id), 
[XGB_Tree_0_1] AS 
(SELECT [DT_Output_1].[KEY] AS join_key_0_1, [DT_Output_1].[Score] AS [Score_0_1] 
FROM [DT_Output_1]), 
[DT_node_lookup_2] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_211 < -0.195134) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_2] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_211' AS feature, -0.195134 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0252423 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0543286 AS [Score]) AS [Values]), 
[DT_Output_2] AS 
(SELECT [DT_node_lookup_2].[KEY] AS [KEY], [DT_node_lookup_2].node_id_2 AS node_id_2, [DT_node_data_2].node_id AS node_id, [DT_node_data_2].feature AS feature, [DT_node_data_2].threshold AS threshold, [DT_node_data_2].depth AS depth, [DT_node_data_2].parent_id AS parent_id, [DT_node_data_2].[Score] AS [Score] 
FROM [DT_node_lookup_2] LEFT OUTER JOIN [DT_node_data_2] ON [DT_node_lookup_2].node_id_2 = [DT_node_data_2].node_id), 
[XGB_Tree_0_2] AS 
(SELECT [DT_Output_2].[KEY] AS join_key_0_2, [DT_Output_2].[Score] AS [Score_0_2] 
FROM [DT_Output_2]), 
[DT_node_lookup_3] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_474 < -0.203818) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_3] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_474' AS feature, -0.203818 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0247897 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0528314 AS [Score]) AS [Values]), 
[DT_Output_3] AS 
(SELECT [DT_node_lookup_3].[KEY] AS [KEY], [DT_node_lookup_3].node_id_2 AS node_id_2, [DT_node_data_3].node_id AS node_id, [DT_node_data_3].feature AS feature, [DT_node_data_3].threshold AS threshold, [DT_node_data_3].depth AS depth, [DT_node_data_3].parent_id AS parent_id, [DT_node_data_3].[Score] AS [Score] 
FROM [DT_node_lookup_3] LEFT OUTER JOIN [DT_node_data_3] ON [DT_node_lookup_3].node_id_2 = [DT_node_data_3].node_id), 
[XGB_Tree_0_3] AS 
(SELECT [DT_Output_3].[KEY] AS join_key_0_3, [DT_Output_3].[Score] AS [Score_0_3] 
FROM [DT_Output_3]), 
[DT_node_lookup_4] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_211 < -0.195134) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_4] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_211' AS feature, -0.195134 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0253015 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.052615 AS [Score]) AS [Values]), 
[DT_Output_4] AS 
(SELECT [DT_node_lookup_4].[KEY] AS [KEY], [DT_node_lookup_4].node_id_2 AS node_id_2, [DT_node_data_4].node_id AS node_id, [DT_node_data_4].feature AS feature, [DT_node_data_4].threshold AS threshold, [DT_node_data_4].depth AS depth, [DT_node_data_4].parent_id AS parent_id, [DT_node_data_4].[Score] AS [Score] 
FROM [DT_node_lookup_4] LEFT OUTER JOIN [DT_node_data_4] ON [DT_node_lookup_4].node_id_2 = [DT_node_data_4].node_id), 
[XGB_Tree_0_4] AS 
(SELECT [DT_Output_4].[KEY] AS join_key_0_4, [DT_Output_4].[Score] AS [Score_0_4] 
FROM [DT_Output_4]), 
[DT_node_lookup_5] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_471 < 0.117135) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_5] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_471' AS feature, 0.117135 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0519122 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0238389 AS [Score]) AS [Values]), 
[DT_Output_5] AS 
(SELECT [DT_node_lookup_5].[KEY] AS [KEY], [DT_node_lookup_5].node_id_2 AS node_id_2, [DT_node_data_5].node_id AS node_id, [DT_node_data_5].feature AS feature, [DT_node_data_5].threshold AS threshold, [DT_node_data_5].depth AS depth, [DT_node_data_5].parent_id AS parent_id, [DT_node_data_5].[Score] AS [Score] 
FROM [DT_node_lookup_5] LEFT OUTER JOIN [DT_node_data_5] ON [DT_node_lookup_5].node_id_2 = [DT_node_data_5].node_id), 
[XGB_Tree_0_5] AS 
(SELECT [DT_Output_5].[KEY] AS join_key_0_5, [DT_Output_5].[Score] AS [Score_0_5] 
FROM [DT_Output_5]), 
[DT_node_lookup_6] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_474 < -0.203818) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_6] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_474' AS feature, -0.203818 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0249378 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050562 AS [Score]) AS [Values]), 
[DT_Output_6] AS 
(SELECT [DT_node_lookup_6].[KEY] AS [KEY], [DT_node_lookup_6].node_id_2 AS node_id_2, [DT_node_data_6].node_id AS node_id, [DT_node_data_6].feature AS feature, [DT_node_data_6].threshold AS threshold, [DT_node_data_6].depth AS depth, [DT_node_data_6].parent_id AS parent_id, [DT_node_data_6].[Score] AS [Score] 
FROM [DT_node_lookup_6] LEFT OUTER JOIN [DT_node_data_6] ON [DT_node_lookup_6].node_id_2 = [DT_node_data_6].node_id), 
[XGB_Tree_0_6] AS 
(SELECT [DT_Output_6].[KEY] AS join_key_0_6, [DT_Output_6].[Score] AS [Score_0_6] 
FROM [DT_Output_6]), 
[DT_node_lookup_7] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_211 < -0.195134) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_7] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_211' AS feature, -0.195134 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0247584 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0502566 AS [Score]) AS [Values]), 
[DT_Output_7] AS 
(SELECT [DT_node_lookup_7].[KEY] AS [KEY], [DT_node_lookup_7].node_id_2 AS node_id_2, [DT_node_data_7].node_id AS node_id, [DT_node_data_7].feature AS feature, [DT_node_data_7].threshold AS threshold, [DT_node_data_7].depth AS depth, [DT_node_data_7].parent_id AS parent_id, [DT_node_data_7].[Score] AS [Score] 
FROM [DT_node_lookup_7] LEFT OUTER JOIN [DT_node_data_7] ON [DT_node_lookup_7].node_id_2 = [DT_node_data_7].node_id), 
[XGB_Tree_0_7] AS 
(SELECT [DT_Output_7].[KEY] AS join_key_0_7, [DT_Output_7].[Score] AS [Score_0_7] 
FROM [DT_Output_7]), 
[DT_node_lookup_8] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_471 < 0.117135) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_8] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_471' AS feature, 0.117135 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0498571 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0241745 AS [Score]) AS [Values]), 
[DT_Output_8] AS 
(SELECT [DT_node_lookup_8].[KEY] AS [KEY], [DT_node_lookup_8].node_id_2 AS node_id_2, [DT_node_data_8].node_id AS node_id, [DT_node_data_8].feature AS feature, [DT_node_data_8].threshold AS threshold, [DT_node_data_8].depth AS depth, [DT_node_data_8].parent_id AS parent_id, [DT_node_data_8].[Score] AS [Score] 
FROM [DT_node_lookup_8] LEFT OUTER JOIN [DT_node_data_8] ON [DT_node_lookup_8].node_id_2 = [DT_node_data_8].node_id), 
[XGB_Tree_0_8] AS 
(SELECT [DT_Output_8].[KEY] AS join_key_0_8, [DT_Output_8].[Score] AS [Score_0_8] 
FROM [DT_Output_8]), 
[DT_node_lookup_9] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_474 < -0.203818) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_9] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_474' AS feature, -0.203818 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0249255 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0485845 AS [Score]) AS [Values]), 
[DT_Output_9] AS 
(SELECT [DT_node_lookup_9].[KEY] AS [KEY], [DT_node_lookup_9].node_id_2 AS node_id_2, [DT_node_data_9].node_id AS node_id, [DT_node_data_9].feature AS feature, [DT_node_data_9].threshold AS threshold, [DT_node_data_9].depth AS depth, [DT_node_data_9].parent_id AS parent_id, [DT_node_data_9].[Score] AS [Score] 
FROM [DT_node_lookup_9] LEFT OUTER JOIN [DT_node_data_9] ON [DT_node_lookup_9].node_id_2 = [DT_node_data_9].node_id), 
[XGB_Tree_0_9] AS 
(SELECT [DT_Output_9].[KEY] AS join_key_0_9, [DT_Output_9].[Score] AS [Score_0_9] 
FROM [DT_Output_9]), 
[DT_node_lookup_10] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_165 < -0.111618) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_10] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_165' AS feature, -0.111618 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0574257 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0413793 AS [Score]) AS [Values]), 
[DT_Output_10] AS 
(SELECT [DT_node_lookup_10].[KEY] AS [KEY], [DT_node_lookup_10].node_id_2 AS node_id_2, [DT_node_data_10].node_id AS node_id, [DT_node_data_10].feature AS feature, [DT_node_data_10].threshold AS threshold, [DT_node_data_10].depth AS depth, [DT_node_data_10].parent_id AS parent_id, [DT_node_data_10].[Score] AS [Score] 
FROM [DT_node_lookup_10] LEFT OUTER JOIN [DT_node_data_10] ON [DT_node_lookup_10].node_id_2 = [DT_node_data_10].node_id), 
[XGB_Tree_1_0] AS 
(SELECT [DT_Output_10].[KEY] AS join_key_1_0, [DT_Output_10].[Score] AS [Score_1_0] 
FROM [DT_Output_10]), 
[DT_node_lookup_11] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_443 < 0.193208) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_11] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_443' AS feature, 0.193208 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0365125 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0588251 AS [Score]) AS [Values]), 
[DT_Output_11] AS 
(SELECT [DT_node_lookup_11].[KEY] AS [KEY], [DT_node_lookup_11].node_id_2 AS node_id_2, [DT_node_data_11].node_id AS node_id, [DT_node_data_11].feature AS feature, [DT_node_data_11].threshold AS threshold, [DT_node_data_11].depth AS depth, [DT_node_data_11].parent_id AS parent_id, [DT_node_data_11].[Score] AS [Score] 
FROM [DT_node_lookup_11] LEFT OUTER JOIN [DT_node_data_11] ON [DT_node_lookup_11].node_id_2 = [DT_node_data_11].node_id), 
[XGB_Tree_1_1] AS 
(SELECT [DT_Output_11].[KEY] AS join_key_1_1, [DT_Output_11].[Score] AS [Score_1_1] 
FROM [DT_Output_11]), 
[DT_node_lookup_12] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_165 < -0.111618) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_12] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_165' AS feature, -0.111618 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0519202 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0400738 AS [Score]) AS [Values]), 
[DT_Output_12] AS 
(SELECT [DT_node_lookup_12].[KEY] AS [KEY], [DT_node_lookup_12].node_id_2 AS node_id_2, [DT_node_data_12].node_id AS node_id, [DT_node_data_12].feature AS feature, [DT_node_data_12].threshold AS threshold, [DT_node_data_12].depth AS depth, [DT_node_data_12].parent_id AS parent_id, [DT_node_data_12].[Score] AS [Score] 
FROM [DT_node_lookup_12] LEFT OUTER JOIN [DT_node_data_12] ON [DT_node_lookup_12].node_id_2 = [DT_node_data_12].node_id), 
[XGB_Tree_1_2] AS 
(SELECT [DT_Output_12].[KEY] AS join_key_1_2, [DT_Output_12].[Score] AS [Score_1_2] 
FROM [DT_Output_12]), 
[DT_node_lookup_13] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_56 < -0.0363939) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_13] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_56' AS feature, -0.0363939 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0544318 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0361793 AS [Score]) AS [Values]), 
[DT_Output_13] AS 
(SELECT [DT_node_lookup_13].[KEY] AS [KEY], [DT_node_lookup_13].node_id_2 AS node_id_2, [DT_node_data_13].node_id AS node_id, [DT_node_data_13].feature AS feature, [DT_node_data_13].threshold AS threshold, [DT_node_data_13].depth AS depth, [DT_node_data_13].parent_id AS parent_id, [DT_node_data_13].[Score] AS [Score] 
FROM [DT_node_lookup_13] LEFT OUTER JOIN [DT_node_data_13] ON [DT_node_lookup_13].node_id_2 = [DT_node_data_13].node_id), 
[XGB_Tree_1_3] AS 
(SELECT [DT_Output_13].[KEY] AS join_key_1_3, [DT_Output_13].[Score] AS [Score_1_3] 
FROM [DT_Output_13]), 
[DT_node_lookup_14] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_443 < 0.193208) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_14] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_443' AS feature, 0.193208 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0351102 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0519176 AS [Score]) AS [Values]), 
[DT_Output_14] AS 
(SELECT [DT_node_lookup_14].[KEY] AS [KEY], [DT_node_lookup_14].node_id_2 AS node_id_2, [DT_node_data_14].node_id AS node_id, [DT_node_data_14].feature AS feature, [DT_node_data_14].threshold AS threshold, [DT_node_data_14].depth AS depth, [DT_node_data_14].parent_id AS parent_id, [DT_node_data_14].[Score] AS [Score] 
FROM [DT_node_lookup_14] LEFT OUTER JOIN [DT_node_data_14] ON [DT_node_lookup_14].node_id_2 = [DT_node_data_14].node_id), 
[XGB_Tree_1_4] AS 
(SELECT [DT_Output_14].[KEY] AS join_key_1_4, [DT_Output_14].[Score] AS [Score_1_4] 
FROM [DT_Output_14]), 
[DT_node_lookup_15] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_56 < -0.0363939) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_15] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_56' AS feature, -0.0363939 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0505841 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.035368 AS [Score]) AS [Values]), 
[DT_Output_15] AS 
(SELECT [DT_node_lookup_15].[KEY] AS [KEY], [DT_node_lookup_15].node_id_2 AS node_id_2, [DT_node_data_15].node_id AS node_id, [DT_node_data_15].feature AS feature, [DT_node_data_15].threshold AS threshold, [DT_node_data_15].depth AS depth, [DT_node_data_15].parent_id AS parent_id, [DT_node_data_15].[Score] AS [Score] 
FROM [DT_node_lookup_15] LEFT OUTER JOIN [DT_node_data_15] ON [DT_node_lookup_15].node_id_2 = [DT_node_data_15].node_id), 
[XGB_Tree_1_5] AS 
(SELECT [DT_Output_15].[KEY] AS join_key_1_5, [DT_Output_15].[Score] AS [Score_1_5] 
FROM [DT_Output_15]), 
[DT_node_lookup_16] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_314 < 0.330513) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_16] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_314' AS feature, 0.330513 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0316216 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0536484 AS [Score]) AS [Values]), 
[DT_Output_16] AS 
(SELECT [DT_node_lookup_16].[KEY] AS [KEY], [DT_node_lookup_16].node_id_2 AS node_id_2, [DT_node_data_16].node_id AS node_id, [DT_node_data_16].feature AS feature, [DT_node_data_16].threshold AS threshold, [DT_node_data_16].depth AS depth, [DT_node_data_16].parent_id AS parent_id, [DT_node_data_16].[Score] AS [Score] 
FROM [DT_node_lookup_16] LEFT OUTER JOIN [DT_node_data_16] ON [DT_node_lookup_16].node_id_2 = [DT_node_data_16].node_id), 
[XGB_Tree_1_6] AS 
(SELECT [DT_Output_16].[KEY] AS join_key_1_6, [DT_Output_16].[Score] AS [Score_1_6] 
FROM [DT_Output_16]), 
[DT_node_lookup_17] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_165 < -0.111618) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_17] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_165' AS feature, -0.111618 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.043739 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0380495 AS [Score]) AS [Values]), 
[DT_Output_17] AS 
(SELECT [DT_node_lookup_17].[KEY] AS [KEY], [DT_node_lookup_17].node_id_2 AS node_id_2, [DT_node_data_17].node_id AS node_id, [DT_node_data_17].feature AS feature, [DT_node_data_17].threshold AS threshold, [DT_node_data_17].depth AS depth, [DT_node_data_17].parent_id AS parent_id, [DT_node_data_17].[Score] AS [Score] 
FROM [DT_node_lookup_17] LEFT OUTER JOIN [DT_node_data_17] ON [DT_node_lookup_17].node_id_2 = [DT_node_data_17].node_id), 
[XGB_Tree_1_7] AS 
(SELECT [DT_Output_17].[KEY] AS join_key_1_7, [DT_Output_17].[Score] AS [Score_1_7] 
FROM [DT_Output_17]), 
[DT_node_lookup_18] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_153 < 0.139311) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_18] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_153' AS feature, 0.139311 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0348234 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0458415 AS [Score]) AS [Values]), 
[DT_Output_18] AS 
(SELECT [DT_node_lookup_18].[KEY] AS [KEY], [DT_node_lookup_18].node_id_2 AS node_id_2, [DT_node_data_18].node_id AS node_id, [DT_node_data_18].feature AS feature, [DT_node_data_18].threshold AS threshold, [DT_node_data_18].depth AS depth, [DT_node_data_18].parent_id AS parent_id, [DT_node_data_18].[Score] AS [Score] 
FROM [DT_node_lookup_18] LEFT OUTER JOIN [DT_node_data_18] ON [DT_node_lookup_18].node_id_2 = [DT_node_data_18].node_id), 
[XGB_Tree_1_8] AS 
(SELECT [DT_Output_18].[KEY] AS join_key_1_8, [DT_Output_18].[Score] AS [Score_1_8] 
FROM [DT_Output_18]), 
[DT_node_lookup_19] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_56 < -0.0363939) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_19] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_56' AS feature, -0.0363939 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0446748 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0339903 AS [Score]) AS [Values]), 
[DT_Output_19] AS 
(SELECT [DT_node_lookup_19].[KEY] AS [KEY], [DT_node_lookup_19].node_id_2 AS node_id_2, [DT_node_data_19].node_id AS node_id, [DT_node_data_19].feature AS feature, [DT_node_data_19].threshold AS threshold, [DT_node_data_19].depth AS depth, [DT_node_data_19].parent_id AS parent_id, [DT_node_data_19].[Score] AS [Score] 
FROM [DT_node_lookup_19] LEFT OUTER JOIN [DT_node_data_19] ON [DT_node_lookup_19].node_id_2 = [DT_node_data_19].node_id), 
[XGB_Tree_1_9] AS 
(SELECT [DT_Output_19].[KEY] AS join_key_1_9, [DT_Output_19].[Score] AS [Score_1_9] 
FROM [DT_Output_19]), 
[DT_node_lookup_20] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_176 < 0.0631356) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_20] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_176' AS feature, 0.0631356 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0618182 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0392523 AS [Score]) AS [Values]), 
[DT_Output_20] AS 
(SELECT [DT_node_lookup_20].[KEY] AS [KEY], [DT_node_lookup_20].node_id_2 AS node_id_2, [DT_node_data_20].node_id AS node_id, [DT_node_data_20].feature AS feature, [DT_node_data_20].threshold AS threshold, [DT_node_data_20].depth AS depth, [DT_node_data_20].parent_id AS parent_id, [DT_node_data_20].[Score] AS [Score] 
FROM [DT_node_lookup_20] LEFT OUTER JOIN [DT_node_data_20] ON [DT_node_lookup_20].node_id_2 = [DT_node_data_20].node_id), 
[XGB_Tree_2_0] AS 
(SELECT [DT_Output_20].[KEY] AS join_key_2_0, [DT_Output_20].[Score] AS [Score_2_0] 
FROM [DT_Output_20]), 
[DT_node_lookup_21] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_234 < 0.16196) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_21] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_234' AS feature, 0.16196 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0539756 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.044363 AS [Score]) AS [Values]), 
[DT_Output_21] AS 
(SELECT [DT_node_lookup_21].[KEY] AS [KEY], [DT_node_lookup_21].node_id_2 AS node_id_2, [DT_node_data_21].node_id AS node_id, [DT_node_data_21].feature AS feature, [DT_node_data_21].threshold AS threshold, [DT_node_data_21].depth AS depth, [DT_node_data_21].parent_id AS parent_id, [DT_node_data_21].[Score] AS [Score] 
FROM [DT_node_lookup_21] LEFT OUTER JOIN [DT_node_data_21] ON [DT_node_lookup_21].node_id_2 = [DT_node_data_21].node_id), 
[XGB_Tree_2_1] AS 
(SELECT [DT_Output_21].[KEY] AS join_key_2_1, [DT_Output_21].[Score] AS [Score_2_1] 
FROM [DT_Output_21]), 
[DT_node_lookup_22] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_176 < 0.0631356) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_22] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_176' AS feature, 0.0631356 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0551819 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0383846 AS [Score]) AS [Values]), 
[DT_Output_22] AS 
(SELECT [DT_node_lookup_22].[KEY] AS [KEY], [DT_node_lookup_22].node_id_2 AS node_id_2, [DT_node_data_22].node_id AS node_id, [DT_node_data_22].feature AS feature, [DT_node_data_22].threshold AS threshold, [DT_node_data_22].depth AS depth, [DT_node_data_22].parent_id AS parent_id, [DT_node_data_22].[Score] AS [Score] 
FROM [DT_node_lookup_22] LEFT OUTER JOIN [DT_node_data_22] ON [DT_node_lookup_22].node_id_2 = [DT_node_data_22].node_id), 
[XGB_Tree_2_2] AS 
(SELECT [DT_Output_22].[KEY] AS join_key_2_2, [DT_Output_22].[Score] AS [Score_2_2] 
FROM [DT_Output_22]), 
[DT_node_lookup_23] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_234 < 0.16196) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_23] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_234' AS feature, 0.16196 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0484188 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0433746 AS [Score]) AS [Values]), 
[DT_Output_23] AS 
(SELECT [DT_node_lookup_23].[KEY] AS [KEY], [DT_node_lookup_23].node_id_2 AS node_id_2, [DT_node_data_23].node_id AS node_id, [DT_node_data_23].feature AS feature, [DT_node_data_23].threshold AS threshold, [DT_node_data_23].depth AS depth, [DT_node_data_23].parent_id AS parent_id, [DT_node_data_23].[Score] AS [Score] 
FROM [DT_node_lookup_23] LEFT OUTER JOIN [DT_node_data_23] ON [DT_node_lookup_23].node_id_2 = [DT_node_data_23].node_id), 
[XGB_Tree_2_3] AS 
(SELECT [DT_Output_23].[KEY] AS join_key_2_3, [DT_Output_23].[Score] AS [Score_2_3] 
FROM [DT_Output_23]), 
[DT_node_lookup_24] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_62 < 0.233654) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_24] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, 0.233654 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0272909 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0627676 AS [Score]) AS [Values]), 
[DT_Output_24] AS 
(SELECT [DT_node_lookup_24].[KEY] AS [KEY], [DT_node_lookup_24].node_id_2 AS node_id_2, [DT_node_data_24].node_id AS node_id, [DT_node_data_24].feature AS feature, [DT_node_data_24].threshold AS threshold, [DT_node_data_24].depth AS depth, [DT_node_data_24].parent_id AS parent_id, [DT_node_data_24].[Score] AS [Score] 
FROM [DT_node_lookup_24] LEFT OUTER JOIN [DT_node_data_24] ON [DT_node_lookup_24].node_id_2 = [DT_node_data_24].node_id), 
[XGB_Tree_2_4] AS 
(SELECT [DT_Output_24].[KEY] AS join_key_2_4, [DT_Output_24].[Score] AS [Score_2_4] 
FROM [DT_Output_24]), 
[DT_node_lookup_25] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_62 < 0.237187) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_25] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, 0.237187 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0272346 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0619962 AS [Score]) AS [Values]), 
[DT_Output_25] AS 
(SELECT [DT_node_lookup_25].[KEY] AS [KEY], [DT_node_lookup_25].node_id_2 AS node_id_2, [DT_node_data_25].node_id AS node_id, [DT_node_data_25].feature AS feature, [DT_node_data_25].threshold AS threshold, [DT_node_data_25].depth AS depth, [DT_node_data_25].parent_id AS parent_id, [DT_node_data_25].[Score] AS [Score] 
FROM [DT_node_lookup_25] LEFT OUTER JOIN [DT_node_data_25] ON [DT_node_lookup_25].node_id_2 = [DT_node_data_25].node_id), 
[XGB_Tree_2_5] AS 
(SELECT [DT_Output_25].[KEY] AS join_key_2_5, [DT_Output_25].[Score] AS [Score_2_5] 
FROM [DT_Output_25]), 
[DT_node_lookup_26] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_62 < 0.271237) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_26] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, 0.271237 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0272519 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0616792 AS [Score]) AS [Values]), 
[DT_Output_26] AS 
(SELECT [DT_node_lookup_26].[KEY] AS [KEY], [DT_node_lookup_26].node_id_2 AS node_id_2, [DT_node_data_26].node_id AS node_id, [DT_node_data_26].feature AS feature, [DT_node_data_26].threshold AS threshold, [DT_node_data_26].depth AS depth, [DT_node_data_26].parent_id AS parent_id, [DT_node_data_26].[Score] AS [Score] 
FROM [DT_node_lookup_26] LEFT OUTER JOIN [DT_node_data_26] ON [DT_node_lookup_26].node_id_2 = [DT_node_data_26].node_id), 
[XGB_Tree_2_6] AS 
(SELECT [DT_Output_26].[KEY] AS join_key_2_6, [DT_Output_26].[Score] AS [Score_2_6] 
FROM [DT_Output_26]), 
[DT_node_lookup_27] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_176 < 0.0631356) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_27] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_176' AS feature, 0.0631356 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0464886 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0380218 AS [Score]) AS [Values]), 
[DT_Output_27] AS 
(SELECT [DT_node_lookup_27].[KEY] AS [KEY], [DT_node_lookup_27].node_id_2 AS node_id_2, [DT_node_data_27].node_id AS node_id, [DT_node_data_27].feature AS feature, [DT_node_data_27].threshold AS threshold, [DT_node_data_27].depth AS depth, [DT_node_data_27].parent_id AS parent_id, [DT_node_data_27].[Score] AS [Score] 
FROM [DT_node_lookup_27] LEFT OUTER JOIN [DT_node_data_27] ON [DT_node_lookup_27].node_id_2 = [DT_node_data_27].node_id), 
[XGB_Tree_2_7] AS 
(SELECT [DT_Output_27].[KEY] AS join_key_2_7, [DT_Output_27].[Score] AS [Score_2_7] 
FROM [DT_Output_27]), 
[DT_node_lookup_28] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_234 < 0.16196) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_28] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_234' AS feature, 0.16196 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0410207 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.042756 AS [Score]) AS [Values]), 
[DT_Output_28] AS 
(SELECT [DT_node_lookup_28].[KEY] AS [KEY], [DT_node_lookup_28].node_id_2 AS node_id_2, [DT_node_data_28].node_id AS node_id, [DT_node_data_28].feature AS feature, [DT_node_data_28].threshold AS threshold, [DT_node_data_28].depth AS depth, [DT_node_data_28].parent_id AS parent_id, [DT_node_data_28].[Score] AS [Score] 
FROM [DT_node_lookup_28] LEFT OUTER JOIN [DT_node_data_28] ON [DT_node_lookup_28].node_id_2 = [DT_node_data_28].node_id), 
[XGB_Tree_2_8] AS 
(SELECT [DT_Output_28].[KEY] AS join_key_2_8, [DT_Output_28].[Score] AS [Score_2_8] 
FROM [DT_Output_28]), 
[DT_node_lookup_29] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_62 < 0.271237) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_29] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, 0.271237 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.026773 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0550788 AS [Score]) AS [Values]), 
[DT_Output_29] AS 
(SELECT [DT_node_lookup_29].[KEY] AS [KEY], [DT_node_lookup_29].node_id_2 AS node_id_2, [DT_node_data_29].node_id AS node_id, [DT_node_data_29].feature AS feature, [DT_node_data_29].threshold AS threshold, [DT_node_data_29].depth AS depth, [DT_node_data_29].parent_id AS parent_id, [DT_node_data_29].[Score] AS [Score] 
FROM [DT_node_lookup_29] LEFT OUTER JOIN [DT_node_data_29] ON [DT_node_lookup_29].node_id_2 = [DT_node_data_29].node_id), 
[XGB_Tree_2_9] AS 
(SELECT [DT_Output_29].[KEY] AS join_key_2_9, [DT_Output_29].[Score] AS [Score_2_9] 
FROM [DT_Output_29]), 
[DT_node_lookup_30] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_87 < -0.0929119) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_30] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_87' AS feature, -0.0929119 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.040708 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0538462 AS [Score]) AS [Values]), 
[DT_Output_30] AS 
(SELECT [DT_node_lookup_30].[KEY] AS [KEY], [DT_node_lookup_30].node_id_2 AS node_id_2, [DT_node_data_30].node_id AS node_id, [DT_node_data_30].feature AS feature, [DT_node_data_30].threshold AS threshold, [DT_node_data_30].depth AS depth, [DT_node_data_30].parent_id AS parent_id, [DT_node_data_30].[Score] AS [Score] 
FROM [DT_node_lookup_30] LEFT OUTER JOIN [DT_node_data_30] ON [DT_node_lookup_30].node_id_2 = [DT_node_data_30].node_id), 
[XGB_Tree_3_0] AS 
(SELECT [DT_Output_30].[KEY] AS join_key_3_0, [DT_Output_30].[Score] AS [Score_3_0] 
FROM [DT_Output_30]), 
[DT_node_lookup_31] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_87 < -0.0929119) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_31] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_87' AS feature, -0.0929119 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0394889 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0496496 AS [Score]) AS [Values]), 
[DT_Output_31] AS 
(SELECT [DT_node_lookup_31].[KEY] AS [KEY], [DT_node_lookup_31].node_id_2 AS node_id_2, [DT_node_data_31].node_id AS node_id, [DT_node_data_31].feature AS feature, [DT_node_data_31].threshold AS threshold, [DT_node_data_31].depth AS depth, [DT_node_data_31].parent_id AS parent_id, [DT_node_data_31].[Score] AS [Score] 
FROM [DT_node_lookup_31] LEFT OUTER JOIN [DT_node_data_31] ON [DT_node_lookup_31].node_id_2 = [DT_node_data_31].node_id), 
[XGB_Tree_3_1] AS 
(SELECT [DT_Output_31].[KEY] AS join_key_3_1, [DT_Output_31].[Score] AS [Score_3_1] 
FROM [DT_Output_31]), 
[DT_node_lookup_32] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_87 < -0.0929119) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_32] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_87' AS feature, -0.0929119 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0382667 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0458194 AS [Score]) AS [Values]), 
[DT_Output_32] AS 
(SELECT [DT_node_lookup_32].[KEY] AS [KEY], [DT_node_lookup_32].node_id_2 AS node_id_2, [DT_node_data_32].node_id AS node_id, [DT_node_data_32].feature AS feature, [DT_node_data_32].threshold AS threshold, [DT_node_data_32].depth AS depth, [DT_node_data_32].parent_id AS parent_id, [DT_node_data_32].[Score] AS [Score] 
FROM [DT_node_lookup_32] LEFT OUTER JOIN [DT_node_data_32] ON [DT_node_lookup_32].node_id_2 = [DT_node_data_32].node_id), 
[XGB_Tree_3_2] AS 
(SELECT [DT_Output_32].[KEY] AS join_key_3_2, [DT_Output_32].[Score] AS [Score_3_2] 
FROM [DT_Output_32]), 
[DT_node_lookup_33] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_81 < -0.254284) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_33] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_81' AS feature, -0.254284 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0554358 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0315614 AS [Score]) AS [Values]), 
[DT_Output_33] AS 
(SELECT [DT_node_lookup_33].[KEY] AS [KEY], [DT_node_lookup_33].node_id_2 AS node_id_2, [DT_node_data_33].node_id AS node_id, [DT_node_data_33].feature AS feature, [DT_node_data_33].threshold AS threshold, [DT_node_data_33].depth AS depth, [DT_node_data_33].parent_id AS parent_id, [DT_node_data_33].[Score] AS [Score] 
FROM [DT_node_lookup_33] LEFT OUTER JOIN [DT_node_data_33] ON [DT_node_lookup_33].node_id_2 = [DT_node_data_33].node_id), 
[XGB_Tree_3_3] AS 
(SELECT [DT_Output_33].[KEY] AS join_key_3_3, [DT_Output_33].[Score] AS [Score_3_3] 
FROM [DT_Output_33]), 
[DT_node_lookup_34] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_204 < -0.355685) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_34] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_204' AS feature, -0.355685 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.051669 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0310894 AS [Score]) AS [Values]), 
[DT_Output_34] AS 
(SELECT [DT_node_lookup_34].[KEY] AS [KEY], [DT_node_lookup_34].node_id_2 AS node_id_2, [DT_node_data_34].node_id AS node_id, [DT_node_data_34].feature AS feature, [DT_node_data_34].threshold AS threshold, [DT_node_data_34].depth AS depth, [DT_node_data_34].parent_id AS parent_id, [DT_node_data_34].[Score] AS [Score] 
FROM [DT_node_lookup_34] LEFT OUTER JOIN [DT_node_data_34] ON [DT_node_lookup_34].node_id_2 = [DT_node_data_34].node_id), 
[XGB_Tree_3_4] AS 
(SELECT [DT_Output_34].[KEY] AS join_key_3_4, [DT_Output_34].[Score] AS [Score_3_4] 
FROM [DT_Output_34]), 
[DT_node_lookup_35] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_81 < -0.254284) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_35] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_81' AS feature, -0.254284 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.050932 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0305647 AS [Score]) AS [Values]), 
[DT_Output_35] AS 
(SELECT [DT_node_lookup_35].[KEY] AS [KEY], [DT_node_lookup_35].node_id_2 AS node_id_2, [DT_node_data_35].node_id AS node_id, [DT_node_data_35].feature AS feature, [DT_node_data_35].threshold AS threshold, [DT_node_data_35].depth AS depth, [DT_node_data_35].parent_id AS parent_id, [DT_node_data_35].[Score] AS [Score] 
FROM [DT_node_lookup_35] LEFT OUTER JOIN [DT_node_data_35] ON [DT_node_lookup_35].node_id_2 = [DT_node_data_35].node_id), 
[XGB_Tree_3_5] AS 
(SELECT [DT_Output_35].[KEY] AS join_key_3_5, [DT_Output_35].[Score] AS [Score_3_5] 
FROM [DT_Output_35]), 
[DT_node_lookup_36] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_81 < -0.294503) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_36] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_81' AS feature, -0.294503 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0510454 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.030347 AS [Score]) AS [Values]), 
[DT_Output_36] AS 
(SELECT [DT_node_lookup_36].[KEY] AS [KEY], [DT_node_lookup_36].node_id_2 AS node_id_2, [DT_node_data_36].node_id AS node_id, [DT_node_data_36].feature AS feature, [DT_node_data_36].threshold AS threshold, [DT_node_data_36].depth AS depth, [DT_node_data_36].parent_id AS parent_id, [DT_node_data_36].[Score] AS [Score] 
FROM [DT_node_lookup_36] LEFT OUTER JOIN [DT_node_data_36] ON [DT_node_lookup_36].node_id_2 = [DT_node_data_36].node_id), 
[XGB_Tree_3_6] AS 
(SELECT [DT_Output_36].[KEY] AS join_key_3_6, [DT_Output_36].[Score] AS [Score_3_6] 
FROM [DT_Output_36]), 
[DT_node_lookup_37] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_81 < -0.335324) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_37] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_81' AS feature, -0.335324 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0519205 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0303845 AS [Score]) AS [Values]), 
[DT_Output_37] AS 
(SELECT [DT_node_lookup_37].[KEY] AS [KEY], [DT_node_lookup_37].node_id_2 AS node_id_2, [DT_node_data_37].node_id AS node_id, [DT_node_data_37].feature AS feature, [DT_node_data_37].threshold AS threshold, [DT_node_data_37].depth AS depth, [DT_node_data_37].parent_id AS parent_id, [DT_node_data_37].[Score] AS [Score] 
FROM [DT_node_lookup_37] LEFT OUTER JOIN [DT_node_data_37] ON [DT_node_lookup_37].node_id_2 = [DT_node_data_37].node_id), 
[XGB_Tree_3_7] AS 
(SELECT [DT_Output_37].[KEY] AS join_key_3_7, [DT_Output_37].[Score] AS [Score_3_7] 
FROM [DT_Output_37]), 
[DT_node_lookup_38] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_81 < -0.335324) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_38] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_81' AS feature, -0.335324 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0481129 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.029256 AS [Score]) AS [Values]), 
[DT_Output_38] AS 
(SELECT [DT_node_lookup_38].[KEY] AS [KEY], [DT_node_lookup_38].node_id_2 AS node_id_2, [DT_node_data_38].node_id AS node_id, [DT_node_data_38].feature AS feature, [DT_node_data_38].threshold AS threshold, [DT_node_data_38].depth AS depth, [DT_node_data_38].parent_id AS parent_id, [DT_node_data_38].[Score] AS [Score] 
FROM [DT_node_lookup_38] LEFT OUTER JOIN [DT_node_data_38] ON [DT_node_lookup_38].node_id_2 = [DT_node_data_38].node_id), 
[XGB_Tree_3_8] AS 
(SELECT [DT_Output_38].[KEY] AS join_key_3_8, [DT_Output_38].[Score] AS [Score_3_8] 
FROM [DT_Output_38]), 
[DT_node_lookup_39] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CASE WHEN ([ADS_sca_2_OUT].scaler_204 < -0.355685) THEN 1 ELSE 2 END AS node_id_2 
FROM [ADS_sca_2_OUT]), 
[DT_node_data_39] AS 
(SELECT [Values].node_id AS node_id, [Values].feature AS feature, [Values].threshold AS threshold, [Values].depth AS depth, [Values].parent_id AS parent_id, [Values].[Score] AS [Score] 
FROM (SELECT 0 AS node_id, 'scaler_204' AS feature, -0.355685 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS [Score] UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0461808 AS [Score] UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0302288 AS [Score]) AS [Values]), 
[DT_Output_39] AS 
(SELECT [DT_node_lookup_39].[KEY] AS [KEY], [DT_node_lookup_39].node_id_2 AS node_id_2, [DT_node_data_39].node_id AS node_id, [DT_node_data_39].feature AS feature, [DT_node_data_39].threshold AS threshold, [DT_node_data_39].depth AS depth, [DT_node_data_39].parent_id AS parent_id, [DT_node_data_39].[Score] AS [Score] 
FROM [DT_node_lookup_39] LEFT OUTER JOIN [DT_node_data_39] ON [DT_node_lookup_39].node_id_2 = [DT_node_data_39].node_id), 
[XGB_Tree_3_9] AS 
(SELECT [DT_Output_39].[KEY] AS join_key_3_9, [DT_Output_39].[Score] AS [Score_3_9] 
FROM [DT_Output_39]), 
[XGB_Join_CTE] AS 
(SELECT [XGB_Tree_0_0].join_key_0_0 AS join_key_0_0, [XGB_Tree_0_0].[Score_0_0] AS [Score_0_0], [XGB_Tree_0_1].join_key_0_1 AS join_key_0_1, [XGB_Tree_0_1].[Score_0_1] AS [Score_0_1], [XGB_Tree_0_2].join_key_0_2 AS join_key_0_2, [XGB_Tree_0_2].[Score_0_2] AS [Score_0_2], [XGB_Tree_0_3].join_key_0_3 AS join_key_0_3, [XGB_Tree_0_3].[Score_0_3] AS [Score_0_3], [XGB_Tree_0_4].join_key_0_4 AS join_key_0_4, [XGB_Tree_0_4].[Score_0_4] AS [Score_0_4], [XGB_Tree_0_5].join_key_0_5 AS join_key_0_5, [XGB_Tree_0_5].[Score_0_5] AS [Score_0_5], [XGB_Tree_0_6].join_key_0_6 AS join_key_0_6, [XGB_Tree_0_6].[Score_0_6] AS [Score_0_6], [XGB_Tree_0_7].join_key_0_7 AS join_key_0_7, [XGB_Tree_0_7].[Score_0_7] AS [Score_0_7], [XGB_Tree_0_8].join_key_0_8 AS join_key_0_8, [XGB_Tree_0_8].[Score_0_8] AS [Score_0_8], [XGB_Tree_0_9].join_key_0_9 AS join_key_0_9, [XGB_Tree_0_9].[Score_0_9] AS [Score_0_9], [XGB_Tree_1_0].join_key_1_0 AS join_key_1_0, [XGB_Tree_1_0].[Score_1_0] AS [Score_1_0], [XGB_Tree_1_1].join_key_1_1 AS join_key_1_1, [XGB_Tree_1_1].[Score_1_1] AS [Score_1_1], [XGB_Tree_1_2].join_key_1_2 AS join_key_1_2, [XGB_Tree_1_2].[Score_1_2] AS [Score_1_2], [XGB_Tree_1_3].join_key_1_3 AS join_key_1_3, [XGB_Tree_1_3].[Score_1_3] AS [Score_1_3], [XGB_Tree_1_4].join_key_1_4 AS join_key_1_4, [XGB_Tree_1_4].[Score_1_4] AS [Score_1_4], [XGB_Tree_1_5].join_key_1_5 AS join_key_1_5, [XGB_Tree_1_5].[Score_1_5] AS [Score_1_5], [XGB_Tree_1_6].join_key_1_6 AS join_key_1_6, [XGB_Tree_1_6].[Score_1_6] AS [Score_1_6], [XGB_Tree_1_7].join_key_1_7 AS join_key_1_7, [XGB_Tree_1_7].[Score_1_7] AS [Score_1_7], [XGB_Tree_1_8].join_key_1_8 AS join_key_1_8, [XGB_Tree_1_8].[Score_1_8] AS [Score_1_8], [XGB_Tree_1_9].join_key_1_9 AS join_key_1_9, [XGB_Tree_1_9].[Score_1_9] AS [Score_1_9], [XGB_Tree_2_0].join_key_2_0 AS join_key_2_0, [XGB_Tree_2_0].[Score_2_0] AS [Score_2_0], [XGB_Tree_2_1].join_key_2_1 AS join_key_2_1, [XGB_Tree_2_1].[Score_2_1] AS [Score_2_1], [XGB_Tree_2_2].join_key_2_2 AS join_key_2_2, [XGB_Tree_2_2].[Score_2_2] AS [Score_2_2], [XGB_Tree_2_3].join_key_2_3 AS join_key_2_3, [XGB_Tree_2_3].[Score_2_3] AS [Score_2_3], [XGB_Tree_2_4].join_key_2_4 AS join_key_2_4, [XGB_Tree_2_4].[Score_2_4] AS [Score_2_4], [XGB_Tree_2_5].join_key_2_5 AS join_key_2_5, [XGB_Tree_2_5].[Score_2_5] AS [Score_2_5], [XGB_Tree_2_6].join_key_2_6 AS join_key_2_6, [XGB_Tree_2_6].[Score_2_6] AS [Score_2_6], [XGB_Tree_2_7].join_key_2_7 AS join_key_2_7, [XGB_Tree_2_7].[Score_2_7] AS [Score_2_7], [XGB_Tree_2_8].join_key_2_8 AS join_key_2_8, [XGB_Tree_2_8].[Score_2_8] AS [Score_2_8], [XGB_Tree_2_9].join_key_2_9 AS join_key_2_9, [XGB_Tree_2_9].[Score_2_9] AS [Score_2_9], [XGB_Tree_3_0].join_key_3_0 AS join_key_3_0, [XGB_Tree_3_0].[Score_3_0] AS [Score_3_0], [XGB_Tree_3_1].join_key_3_1 AS join_key_3_1, [XGB_Tree_3_1].[Score_3_1] AS [Score_3_1], [XGB_Tree_3_2].join_key_3_2 AS join_key_3_2, [XGB_Tree_3_2].[Score_3_2] AS [Score_3_2], [XGB_Tree_3_3].join_key_3_3 AS join_key_3_3, [XGB_Tree_3_3].[Score_3_3] AS [Score_3_3], [XGB_Tree_3_4].join_key_3_4 AS join_key_3_4, [XGB_Tree_3_4].[Score_3_4] AS [Score_3_4], [XGB_Tree_3_5].join_key_3_5 AS join_key_3_5, [XGB_Tree_3_5].[Score_3_5] AS [Score_3_5], [XGB_Tree_3_6].join_key_3_6 AS join_key_3_6, [XGB_Tree_3_6].[Score_3_6] AS [Score_3_6], [XGB_Tree_3_7].join_key_3_7 AS join_key_3_7, [XGB_Tree_3_7].[Score_3_7] AS [Score_3_7], [XGB_Tree_3_8].join_key_3_8 AS join_key_3_8, [XGB_Tree_3_8].[Score_3_8] AS [Score_3_8], [XGB_Tree_3_9].join_key_3_9 AS join_key_3_9, [XGB_Tree_3_9].[Score_3_9] AS [Score_3_9] 
FROM [XGB_Tree_0_0] LEFT OUTER JOIN [XGB_Tree_0_1] ON [XGB_Tree_0_0].join_key_0_0 = [XGB_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [XGB_Tree_0_2] ON [XGB_Tree_0_2].join_key_0_2 = [XGB_Tree_0_1].join_key_0_1 LEFT OUTER JOIN [XGB_Tree_0_3] ON [XGB_Tree_0_3].join_key_0_3 = [XGB_Tree_0_2].join_key_0_2 LEFT OUTER JOIN [XGB_Tree_0_4] ON [XGB_Tree_0_4].join_key_0_4 = [XGB_Tree_0_3].join_key_0_3 LEFT OUTER JOIN [XGB_Tree_0_5] ON [XGB_Tree_0_5].join_key_0_5 = [XGB_Tree_0_4].join_key_0_4 LEFT OUTER JOIN [XGB_Tree_0_6] ON [XGB_Tree_0_6].join_key_0_6 = [XGB_Tree_0_5].join_key_0_5 LEFT OUTER JOIN [XGB_Tree_0_7] ON [XGB_Tree_0_7].join_key_0_7 = [XGB_Tree_0_6].join_key_0_6 LEFT OUTER JOIN [XGB_Tree_0_8] ON [XGB_Tree_0_8].join_key_0_8 = [XGB_Tree_0_7].join_key_0_7 LEFT OUTER JOIN [XGB_Tree_0_9] ON [XGB_Tree_0_9].join_key_0_9 = [XGB_Tree_0_8].join_key_0_8 LEFT OUTER JOIN [XGB_Tree_1_0] ON [XGB_Tree_1_0].join_key_1_0 = [XGB_Tree_0_9].join_key_0_9 LEFT OUTER JOIN [XGB_Tree_1_1] ON [XGB_Tree_1_1].join_key_1_1 = [XGB_Tree_1_0].join_key_1_0 LEFT OUTER JOIN [XGB_Tree_1_2] ON [XGB_Tree_1_2].join_key_1_2 = [XGB_Tree_1_1].join_key_1_1 LEFT OUTER JOIN [XGB_Tree_1_3] ON [XGB_Tree_1_3].join_key_1_3 = [XGB_Tree_1_2].join_key_1_2 LEFT OUTER JOIN [XGB_Tree_1_4] ON [XGB_Tree_1_4].join_key_1_4 = [XGB_Tree_1_3].join_key_1_3 LEFT OUTER JOIN [XGB_Tree_1_5] ON [XGB_Tree_1_5].join_key_1_5 = [XGB_Tree_1_4].join_key_1_4 LEFT OUTER JOIN [XGB_Tree_1_6] ON [XGB_Tree_1_6].join_key_1_6 = [XGB_Tree_1_5].join_key_1_5 LEFT OUTER JOIN [XGB_Tree_1_7] ON [XGB_Tree_1_7].join_key_1_7 = [XGB_Tree_1_6].join_key_1_6 LEFT OUTER JOIN [XGB_Tree_1_8] ON [XGB_Tree_1_8].join_key_1_8 = [XGB_Tree_1_7].join_key_1_7 LEFT OUTER JOIN [XGB_Tree_1_9] ON [XGB_Tree_1_9].join_key_1_9 = [XGB_Tree_1_8].join_key_1_8 LEFT OUTER JOIN [XGB_Tree_2_0] ON [XGB_Tree_2_0].join_key_2_0 = [XGB_Tree_1_9].join_key_1_9 LEFT OUTER JOIN [XGB_Tree_2_1] ON [XGB_Tree_2_1].join_key_2_1 = [XGB_Tree_2_0].join_key_2_0 LEFT OUTER JOIN [XGB_Tree_2_2] ON [XGB_Tree_2_2].join_key_2_2 = [XGB_Tree_2_1].join_key_2_1 LEFT OUTER JOIN [XGB_Tree_2_3] ON [XGB_Tree_2_3].join_key_2_3 = [XGB_Tree_2_2].join_key_2_2 LEFT OUTER JOIN [XGB_Tree_2_4] ON [XGB_Tree_2_4].join_key_2_4 = [XGB_Tree_2_3].join_key_2_3 LEFT OUTER JOIN [XGB_Tree_2_5] ON [XGB_Tree_2_5].join_key_2_5 = [XGB_Tree_2_4].join_key_2_4 LEFT OUTER JOIN [XGB_Tree_2_6] ON [XGB_Tree_2_6].join_key_2_6 = [XGB_Tree_2_5].join_key_2_5 LEFT OUTER JOIN [XGB_Tree_2_7] ON [XGB_Tree_2_7].join_key_2_7 = [XGB_Tree_2_6].join_key_2_6 LEFT OUTER JOIN [XGB_Tree_2_8] ON [XGB_Tree_2_8].join_key_2_8 = [XGB_Tree_2_7].join_key_2_7 LEFT OUTER JOIN [XGB_Tree_2_9] ON [XGB_Tree_2_9].join_key_2_9 = [XGB_Tree_2_8].join_key_2_8 LEFT OUTER JOIN [XGB_Tree_3_0] ON [XGB_Tree_3_0].join_key_3_0 = [XGB_Tree_2_9].join_key_2_9 LEFT OUTER JOIN [XGB_Tree_3_1] ON [XGB_Tree_3_1].join_key_3_1 = [XGB_Tree_3_0].join_key_3_0 LEFT OUTER JOIN [XGB_Tree_3_2] ON [XGB_Tree_3_2].join_key_3_2 = [XGB_Tree_3_1].join_key_3_1 LEFT OUTER JOIN [XGB_Tree_3_3] ON [XGB_Tree_3_3].join_key_3_3 = [XGB_Tree_3_2].join_key_3_2 LEFT OUTER JOIN [XGB_Tree_3_4] ON [XGB_Tree_3_4].join_key_3_4 = [XGB_Tree_3_3].join_key_3_3 LEFT OUTER JOIN [XGB_Tree_3_5] ON [XGB_Tree_3_5].join_key_3_5 = [XGB_Tree_3_4].join_key_3_4 LEFT OUTER JOIN [XGB_Tree_3_6] ON [XGB_Tree_3_6].join_key_3_6 = [XGB_Tree_3_5].join_key_3_5 LEFT OUTER JOIN [XGB_Tree_3_7] ON [XGB_Tree_3_7].join_key_3_7 = [XGB_Tree_3_6].join_key_3_6 LEFT OUTER JOIN [XGB_Tree_3_8] ON [XGB_Tree_3_8].join_key_3_8 = [XGB_Tree_3_7].join_key_3_7 LEFT OUTER JOIN [XGB_Tree_3_9] ON [XGB_Tree_3_9].join_key_3_9 = [XGB_Tree_3_8].join_key_3_8), 
[XGB_AVG_Scores] AS 
(SELECT [XGB_Join_CTE].join_key_0_0 AS [KEY], [XGB_Join_CTE].[Score_0_0] + [XGB_Join_CTE].[Score_0_1] + [XGB_Join_CTE].[Score_0_2] + [XGB_Join_CTE].[Score_0_3] + [XGB_Join_CTE].[Score_0_4] + [XGB_Join_CTE].[Score_0_5] + [XGB_Join_CTE].[Score_0_6] + [XGB_Join_CTE].[Score_0_7] + [XGB_Join_CTE].[Score_0_8] + [XGB_Join_CTE].[Score_0_9] AS [Score_0], [XGB_Join_CTE].[Score_1_0] + [XGB_Join_CTE].[Score_1_1] + [XGB_Join_CTE].[Score_1_2] + [XGB_Join_CTE].[Score_1_3] + [XGB_Join_CTE].[Score_1_4] + [XGB_Join_CTE].[Score_1_5] + [XGB_Join_CTE].[Score_1_6] + [XGB_Join_CTE].[Score_1_7] + [XGB_Join_CTE].[Score_1_8] + [XGB_Join_CTE].[Score_1_9] AS [Score_1], [XGB_Join_CTE].[Score_2_0] + [XGB_Join_CTE].[Score_2_1] + [XGB_Join_CTE].[Score_2_2] + [XGB_Join_CTE].[Score_2_3] + [XGB_Join_CTE].[Score_2_4] + [XGB_Join_CTE].[Score_2_5] + [XGB_Join_CTE].[Score_2_6] + [XGB_Join_CTE].[Score_2_7] + [XGB_Join_CTE].[Score_2_8] + [XGB_Join_CTE].[Score_2_9] AS [Score_2], [XGB_Join_CTE].[Score_3_0] + [XGB_Join_CTE].[Score_3_1] + [XGB_Join_CTE].[Score_3_2] + [XGB_Join_CTE].[Score_3_3] + [XGB_Join_CTE].[Score_3_4] + [XGB_Join_CTE].[Score_3_5] + [XGB_Join_CTE].[Score_3_6] + [XGB_Join_CTE].[Score_3_7] + [XGB_Join_CTE].[Score_3_8] + [XGB_Join_CTE].[Score_3_9] AS [Score_3] 
FROM [XGB_Join_CTE]), 
orig_cte AS 
(SELECT [XGB_AVG_Scores].[KEY] AS [KEY], [XGB_AVG_Scores].[Score_0] AS [Score_0], [XGB_AVG_Scores].[Score_1] AS [Score_1], [XGB_AVG_Scores].[Score_2] AS [Score_2], [XGB_AVG_Scores].[Score_3] AS [Score_3], CAST(NULL AS FLOAT(53)) AS [Proba_0], CAST(NULL AS FLOAT(53)) AS [Proba_1], CAST(NULL AS FLOAT(53)) AS [Proba_2], CAST(NULL AS FLOAT(53)) AS [Proba_3], CAST(NULL AS FLOAT(53)) AS [LogProba_0], CAST(NULL AS FLOAT(53)) AS [LogProba_1], CAST(NULL AS FLOAT(53)) AS [LogProba_2], CAST(NULL AS FLOAT(53)) AS [LogProba_3], CAST(NULL AS FLOAT(53)) AS [Decision] 
FROM [XGB_AVG_Scores]), 
score_class_union AS 
(SELECT scu.[KEY] AS [KEY], scu.class AS class, scu.[LogProba] AS [LogProba], scu.[Proba] AS [Proba], scu.[Score] AS [Score] 
FROM (SELECT orig_cte.[KEY] AS [KEY], 0 AS class, orig_cte.[LogProba_0] AS [LogProba], orig_cte.[Proba_0] AS [Proba], orig_cte.[Score_0] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 1 AS class, orig_cte.[LogProba_1] AS [LogProba], orig_cte.[Proba_1] AS [Proba], orig_cte.[Score_1] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 2 AS class, orig_cte.[LogProba_2] AS [LogProba], orig_cte.[Proba_2] AS [Proba], orig_cte.[Score_2] AS [Score] 
FROM orig_cte UNION ALL SELECT orig_cte.[KEY] AS [KEY], 3 AS class, orig_cte.[LogProba_3] AS [LogProba], orig_cte.[Proba_3] AS [Proba], orig_cte.[Score_3] AS [Score] 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.[KEY] AS [KEY], orig_cte.[Score_0] AS [Score_0], orig_cte.[Score_1] AS [Score_1], orig_cte.[Score_2] AS [Score_2], orig_cte.[Score_3] AS [Score_3], orig_cte.[Proba_0] AS [Proba_0], orig_cte.[Proba_1] AS [Proba_1], orig_cte.[Proba_2] AS [Proba_2], orig_cte.[Proba_3] AS [Proba_3], orig_cte.[LogProba_0] AS [LogProba_0], orig_cte.[LogProba_1] AS [LogProba_1], orig_cte.[LogProba_2] AS [LogProba_2], orig_cte.[LogProba_3] AS [LogProba_3], orig_cte.[Decision] AS [Decision], (SELECT max(score_class_union.[LogProba]) AS max_1 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_LogProba], (SELECT max(score_class_union.[Proba]) AS max_2 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Proba], (SELECT max(score_class_union.[Score]) AS max_3 
FROM score_class_union 
WHERE orig_cte.[KEY] = score_class_union.[KEY]) AS [max_Score] 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max.[KEY] AS [KEY], score_max.[Score_0] AS [Score_0], score_max.[Score_1] AS [Score_1], score_max.[Score_2] AS [Score_2], score_max.[Score_3] AS [Score_3], score_max.[Proba_0] AS [Proba_0], score_max.[Proba_1] AS [Proba_1], score_max.[Proba_2] AS [Proba_2], score_max.[Proba_3] AS [Proba_3], score_max.[LogProba_0] AS [LogProba_0], score_max.[LogProba_1] AS [LogProba_1], score_max.[LogProba_2] AS [LogProba_2], score_max.[LogProba_3] AS [LogProba_3], score_max.[Decision] AS [Decision], score_max.[max_LogProba] AS [max_LogProba], score_max.[max_Proba] AS [max_Proba], score_max.[max_Score] AS [max_Score], exp(score_max.[Score_0] - score_max.[max_Score]) AS [exp_delta_Score_0], exp(score_max.[Score_1] - score_max.[max_Score]) AS [exp_delta_Score_1], exp(score_max.[Score_2] - score_max.[max_Score]) AS [exp_delta_Score_2], exp(score_max.[Score_3] - score_max.[max_Score]) AS [exp_delta_Score_3] 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu.[KEY] AS [KEY], soft_scu.class AS class, soft_scu.[LogProba] AS [LogProba], soft_scu.[Proba] AS [Proba], soft_scu.[Score] AS [Score], soft_scu.[exp_delta_Score] AS [exp_delta_Score] 
FROM (SELECT score_soft_max_comp.[KEY] AS [KEY], 0 AS class, score_soft_max_comp.[LogProba_0] AS [LogProba], score_soft_max_comp.[Proba_0] AS [Proba], score_soft_max_comp.[Score_0] AS [Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 1 AS class, score_soft_max_comp.[LogProba_1] AS [LogProba], score_soft_max_comp.[Proba_1] AS [Proba], score_soft_max_comp.[Score_1] AS [Score], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 2 AS class, score_soft_max_comp.[LogProba_2] AS [LogProba], score_soft_max_comp.[Proba_2] AS [Proba], score_soft_max_comp.[Score_2] AS [Score], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score] 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp.[KEY] AS [KEY], 3 AS class, score_soft_max_comp.[LogProba_3] AS [LogProba], score_soft_max_comp.[Proba_3] AS [Proba], score_soft_max_comp.[Score_3] AS [Score], score_soft_max_comp.[exp_delta_Score_3] AS [exp_delta_Score] 
FROM score_soft_max_comp) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp.[KEY] AS [KEY], score_soft_max_comp.[Score_0] AS [Score_0], score_soft_max_comp.[Score_1] AS [Score_1], score_soft_max_comp.[Score_2] AS [Score_2], score_soft_max_comp.[Score_3] AS [Score_3], score_soft_max_comp.[Proba_0] AS [Proba_0], score_soft_max_comp.[Proba_1] AS [Proba_1], score_soft_max_comp.[Proba_2] AS [Proba_2], score_soft_max_comp.[Proba_3] AS [Proba_3], score_soft_max_comp.[LogProba_0] AS [LogProba_0], score_soft_max_comp.[LogProba_1] AS [LogProba_1], score_soft_max_comp.[LogProba_2] AS [LogProba_2], score_soft_max_comp.[LogProba_3] AS [LogProba_3], score_soft_max_comp.[Decision] AS [Decision], score_soft_max_comp.[max_LogProba] AS [max_LogProba], score_soft_max_comp.[max_Proba] AS [max_Proba], score_soft_max_comp.[max_Score] AS [max_Score], score_soft_max_comp.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max_comp.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max_comp.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max_comp.[exp_delta_Score_3] AS [exp_delta_Score_3], (SELECT sum(score_class_union_soft.[exp_delta_Score]) AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp.[KEY] = score_class_union_soft.[KEY]) AS [sum_ExpDeltaScore] 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max.[KEY] AS [KEY], score_soft_max.[Score_0] AS [Score_0], score_soft_max.[Score_1] AS [Score_1], score_soft_max.[Score_2] AS [Score_2], score_soft_max.[Score_3] AS [Score_3], score_soft_max.[Proba_0] AS [Proba_0], score_soft_max.[Proba_1] AS [Proba_1], score_soft_max.[Proba_2] AS [Proba_2], score_soft_max.[Proba_3] AS [Proba_3], score_soft_max.[LogProba_0] AS [LogProba_0], score_soft_max.[LogProba_1] AS [LogProba_1], score_soft_max.[LogProba_2] AS [LogProba_2], score_soft_max.[LogProba_3] AS [LogProba_3], score_soft_max.[Decision] AS [Decision], score_soft_max.[max_LogProba] AS [max_LogProba], score_soft_max.[max_Proba] AS [max_Proba], score_soft_max.[max_Score] AS [max_Score], score_soft_max.[exp_delta_Score_0] AS [exp_delta_Score_0], score_soft_max.[exp_delta_Score_1] AS [exp_delta_Score_1], score_soft_max.[exp_delta_Score_2] AS [exp_delta_Score_2], score_soft_max.[exp_delta_Score_3] AS [exp_delta_Score_3], score_soft_max.[sum_ExpDeltaScore] AS [sum_ExpDeltaScore], (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max.[max_LogProba] = score_class_union.[LogProba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_LogProba], (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max.[max_Proba] = score_class_union.[Proba] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Proba], (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max.[max_Score] = score_class_union.[Score] AND score_soft_max.[KEY] = score_class_union.[KEY]) AS [arg_max_Score], score_soft_max.[exp_delta_Score_0] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_0], score_soft_max.[exp_delta_Score_1] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_1], score_soft_max.[exp_delta_Score_2] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_2], score_soft_max.[exp_delta_Score_3] / score_soft_max.[sum_ExpDeltaScore] AS [SoftProba_3] 
FROM score_soft_max)
 SELECT arg_max_cte.[KEY] AS [KEY], CAST(NULL AS FLOAT) AS [Score_0], CAST(NULL AS FLOAT) AS [Score_1], CAST(NULL AS FLOAT) AS [Score_2], CAST(NULL AS FLOAT) AS [Score_3], arg_max_cte.[SoftProba_0] AS [Proba_0], arg_max_cte.[SoftProba_1] AS [Proba_1], arg_max_cte.[SoftProba_2] AS [Proba_2], arg_max_cte.[SoftProba_3] AS [Proba_3], CASE WHEN (arg_max_cte.[SoftProba_0] IS NULL OR arg_max_cte.[SoftProba_0] > 0.0) THEN log(arg_max_cte.[SoftProba_0]) ELSE -1.79769313486231e+308 END AS [LogProba_0], CASE WHEN (arg_max_cte.[SoftProba_1] IS NULL OR arg_max_cte.[SoftProba_1] > 0.0) THEN log(arg_max_cte.[SoftProba_1]) ELSE -1.79769313486231e+308 END AS [LogProba_1], CASE WHEN (arg_max_cte.[SoftProba_2] IS NULL OR arg_max_cte.[SoftProba_2] > 0.0) THEN log(arg_max_cte.[SoftProba_2]) ELSE -1.79769313486231e+308 END AS [LogProba_2], CASE WHEN (arg_max_cte.[SoftProba_3] IS NULL OR arg_max_cte.[SoftProba_3] > 0.0) THEN log(arg_max_cte.[SoftProba_3]) ELSE -1.79769313486231e+308 END AS [LogProba_3], arg_max_cte.[arg_max_Score] AS [Decision] 
FROM arg_max_cte