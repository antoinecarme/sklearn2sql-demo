-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN 0.0 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN 0.293433083957 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN 5.07398171239 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN 11.8204488778 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 11.8071487947 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN 5.80881130507 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 1.38570241064 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN 0.131338320865 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.00581878636741 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN 1.96674979219 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 10.3283458022 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 12.0656691604 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN 10.1853699086 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 8.04156275977 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 1.90191188695 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN 0.106400665004 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN 0.00166251039069 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 2.5719035744 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 9.99168744805 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 7.13549459684 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 7.04987531172 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN 7.6965918537 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 1.87364921031 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0540315876974 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.000831255195345 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN 2.5170407315 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 9.19950124688 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN 9.02244389027 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 9.99418121363 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 7.60432252702 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN 2.35245220283 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 0.000831255195345 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.0 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN 2.29925187032 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN 7.56691604323 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN 9.1604322527 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN 10.3674147963 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN 8.75727348296 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 2.79966749792 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN 0.0 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN 0.00997506234414 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 1.55860349127 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN 6.83790523691 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 7.30257689111 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 7.77306733167 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN 8.29592684954 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 3.38819617623 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 0.0365752285952 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.00332502078138 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 0.715710723192 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN 7.47714048213 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN 9.5536159601 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 9.53948462178 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN 8.83374896093 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN 3.8029925187 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.243557772236 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN 0.000831255195345 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN 0.266832917706 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 5.43059019119 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 12.0864505403 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN 11.8719866999 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 6.74812967581 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN 2.15128844555 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN 0.412302576891 ELSE "ADS"."Feature_63" END AS impter_65 
FROM digits "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - 0.0) / 1.0 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - 0.293433083957) / 0.859845005927 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - 5.07398171239) / 4.71696110342 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - 11.8204488778) / 4.22115333284 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 11.8071487947) / 4.33559553334 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - 5.80881130507) / 5.69478817014 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 1.38570241064) / 3.36514752375 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - 0.131338320865) / 1.03602946954 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.00581878636741) / 0.0954460521656 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - 1.96674979219) / 3.17914416142 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 10.3283458022) / 5.41167293882 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 12.0656691604) / 3.94979003791 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - 10.1853699086) / 4.76650673546 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 8.04156275977) / 6.0876066041 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 1.90191188695) / 3.64264316294 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - 0.106400665004) / 0.822774695912 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - 0.00166251039069) / 0.0407399858848 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 2.5719035744) / 3.56305629928 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 9.99168744805) / 5.64964316504 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 7.13549459684) / 5.81502871188 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 7.04987531172) / 6.15922069493 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - 7.6965918537) / 6.25532232413 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 1.87364921031) / 3.41099813777 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0540315876974) / 0.421263533813 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.000831255195345) / 0.0288195109283 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - 2.5170407315) / 3.19163503844 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 9.19950124688) / 6.15403007807 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - 9.02244389027) / 5.83981191231 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 9.99418121363) / 6.10390491835 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 7.60432252702) / 5.91977802282 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - 2.35245220283) / 3.79378678582 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 0.000831255195345) / 0.0288195109283 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.0) / 1.0 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - 2.29925187032) / 3.51156139729 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - 7.56691604323) / 6.31701730353 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - 9.1604322527) / 6.1997798861 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - 10.3674147963) / 5.87749718139 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - 8.75727348296) / 5.85464866041 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 2.79966749792) / 3.50284528298 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - 0.0) / 1.0 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - 0.00997506234414) / 0.162790246582 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 1.55860349127) / 2.98466828413 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - 6.83790523691) / 6.54553660728 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 7.30257689111) / 6.44510433727 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 7.77306733167) / 6.2858645059 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - 8.29592684954) / 5.69877340506 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 3.38819617623) / 4.31911912467 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 0.0365752285952) / 0.362854080738 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.00332502078138) / 0.0911125468322 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 0.715710723192) / 1.75156338368 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - 7.47714048213) / 5.70412935863 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - 9.5536159601) / 5.24014268924 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 9.53948462178) / 5.28717094725 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - 8.83374896093) / 6.03665375205 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - 3.8029925187) / 4.99145647696 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.243557772236) / 1.08937190592 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - 0.000831255195345) / 0.0288195109283 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - 0.266832917706) / 0.887404536173 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 5.43059019119) / 5.07966086609 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 12.0864505403) / 4.32751151319 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - 11.8719866999) / 4.84971877494 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 6.74812967581) / 5.89691744232 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - 2.15128844555) / 4.1936167999 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - 0.412302576891) / 1.98487588299 AS scaler_65 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -1.22777) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_30' AS feature, -1.22777 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.423561 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.041958 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0206738 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0552359 AS "Score" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"XGB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS join_key_0_0, "DT_Output"."Score" AS "Score_0_0" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -1.22777) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_30' AS feature, -1.22777 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.285912 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0413005 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0197968 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0548701 AS "Score" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"XGB_Tree_0_1" AS 
(SELECT "DT_Output_1"."KEY" AS join_key_0_1, "DT_Output_1"."Score" AS "Score_0_1" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 < -0.512379) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.2883) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_35' AS feature, -0.512379 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0420016 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_23' AS feature, 0.2883 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0189356 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0545339 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.148863 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.244471 AS "Score" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"XGB_Tree_0_2" AS 
(SELECT "DT_Output_2"."KEY" AS join_key_0_2, "DT_Output_2"."Score" AS "Score_0_2" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.0894625) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_29' AS feature, -0.0894625 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.186777 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0156372 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0181383 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0542182 AS "Score" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"XGB_Tree_0_3" AS 
(SELECT "DT_Output_3"."KEY" AS join_key_0_3, "DT_Output_3"."Score" AS "Score_0_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.0894625) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_29' AS feature, -0.0894625 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.157647 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0150549 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0171864 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0539249 AS "Score" FROM DUAL) "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"XGB_Tree_0_4" AS 
(SELECT "DT_Output_4"."KEY" AS join_key_0_4, "DT_Output_4"."Score" AS "Score_0_4" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 < -0.227606) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 < -0.402712) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_35' AS feature, -0.227606 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0270807 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_24' AS feature, -0.402712 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0163998 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536387 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0792217 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.147589 AS "Score" FROM DUAL) "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"XGB_Tree_0_5" AS 
(SELECT "DT_Output_5"."KEY" AS join_key_0_5, "DT_Output_5"."Score" AS "Score_0_5" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 < -0.227606) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_24 < -0.402712) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_35' AS feature, -0.227606 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0263147 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_24' AS feature, -0.402712 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0155208 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0533688 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0710754 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.130191 AS "Score" FROM DUAL) "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"XGB_Tree_0_6" AS 
(SELECT "DT_Output_6"."KEY" AS join_key_0_6, "DT_Output_6"."Score" AS "Score_0_6" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.0894625) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 < -0.838877) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_29' AS feature, -0.0894625 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_46' AS feature, -0.838877 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0163072 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0146289 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0531149 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.117152 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.075992 AS "Score" FROM DUAL) "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"XGB_Tree_0_7" AS 
(SELECT "DT_Output_7"."KEY" AS join_key_0_7, "DT_Output_7"."Score" AS "Score_0_7" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 < -0.227606) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.128436) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.16843) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_35' AS feature, -0.227606 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_38' AS feature, -1.16843 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0261925 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_23' AS feature, 0.128436 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0137352 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0528743 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0420708 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.110622 AS "Score" FROM DUAL) "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"XGB_Tree_0_8" AS 
(SELECT "DT_Output_8"."KEY" AS join_key_0_8, "DT_Output_8"."Score" AS "Score_0_8" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_38 < -1.67885) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.253928) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.589995) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 < -1.55543) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_38' AS feature, -1.67885 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.253928 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_30' AS feature, -1.55543 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0227854 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_45' AS feature, -0.589995 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0124973 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527709 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.102947 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.045877 AS "Score" FROM DUAL) "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"XGB_Tree_0_9" AS 
(SELECT "DT_Output_9"."KEY" AS join_key_0_9, "DT_Output_9"."Score" AS "Score_0_9" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.43843) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.81614) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.09449) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < -0.6687) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.43843 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.81614 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, -0.6687 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.160121 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_21' AS feature, 1.09449 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.320416 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0169492 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0533646 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0130168 AS "Score" FROM DUAL) "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Score" AS "Score" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"XGB_Tree_1_0" AS 
(SELECT "DT_Output_10"."KEY" AS join_key_1_0, "DT_Output_10"."Score" AS "Score_1_0" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.43843) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.81614) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.09449) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 1.04723) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.43843 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.81614 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.136442 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_21' AS feature, 1.09449 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_22' AS feature, 1.04723 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0238291 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529258 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0122327 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.109477 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.301232 AS "Score" FROM DUAL) "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Score" AS "Score" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"XGB_Tree_1_1" AS 
(SELECT "DT_Output_11"."KEY" AS join_key_1_1, "DT_Output_11"."Score" AS "Score_1_1" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.43843) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.81614) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.09449) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < -0.6687) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 < 1.11499) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.43843 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.81614 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, -0.6687 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.118899 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_21' AS feature, 1.09449 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_14' AS feature, 1.11499 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0167678 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0525127 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0114975 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.107356 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.233881 AS "Score" FROM DUAL) "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Score" AS "Score" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"XGB_Tree_1_2" AS 
(SELECT "DT_Output_12"."KEY" AS join_key_1_2, "DT_Output_12"."Score" AS "Score_1_2" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 1.09449) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.63135) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 < -0.970653) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 0.884872) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -0.385552) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -0.707424) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 1.09449 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.63135 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 0.884872 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.07777 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_60' AS feature, -0.970653 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_39' AS feature, -0.385552 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_12' AS feature, -0.707424 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0383101 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0541644 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0952633 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532031 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.213982 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0891643 AS "Score" FROM DUAL) "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Score" AS "Score" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"XGB_Tree_1_3" AS 
(SELECT "DT_Output_13"."KEY" AS join_key_1_3, "DT_Output_13"."Score" AS "Score_1_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.750556) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.077) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 1.04723) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 1.03698) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.121685) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.750556 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.077 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 1.04723 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00535746 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0539007 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_64' AS feature, 1.03698 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_4' AS feature, -0.121685 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0423145 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.117252 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.18418 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0548131 AS "Score" FROM DUAL) "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Score" AS "Score" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"XGB_Tree_1_4" AS 
(SELECT "DT_Output_14"."KEY" AS join_key_1_4, "DT_Output_14"."Score" AS "Score_1_4" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.750556) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.077) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 0.884872) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 1.03698) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 < -0.183199) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.750556 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.077 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 0.884872 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00569065 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053611 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_64' AS feature, 1.03698 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_60' AS feature, -0.183199 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0471269 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0975425 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.153829 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0407676 AS "Score" FROM DUAL) "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Score" AS "Score" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"XGB_Tree_1_5" AS 
(SELECT "DT_Output_15"."KEY" AS join_key_1_5, "DT_Output_15"."Score" AS "Score_1_5" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.750556) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.077) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < 0.586076) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 < -0.581766) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.750556 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.077 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00618387 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0533395 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_12' AS feature, 0.586076 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_15' AS feature, -0.581766 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12408 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0263683 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0531172 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0177046 AS "Score" FROM DUAL) "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Score" AS "Score" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"XGB_Tree_1_6" AS 
(SELECT "DT_Output_16"."KEY" AS join_key_1_6, "DT_Output_16"."Score" AS "Score_1_6" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.750556) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -1.077) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 0.722514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 < -1.45474) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 < 0.0317192) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.750556 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_12' AS feature, -1.077 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 0.722514 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00653004 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053083 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_6' AS feature, -1.45474 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_12' AS feature, 0.0317192 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0960558 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.046726 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.12212 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.016524 AS "Score" FROM DUAL) "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Score" AS "Score" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"XGB_Tree_1_7" AS 
(SELECT "DT_Output_17"."KEY" AS join_key_1_7, "DT_Output_17"."Score" AS "Score_1_7" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.578588) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 < -0.828756) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < 0.586076) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.0516238) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.578588 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, -0.828756 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00647037 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529366 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_12' AS feature, 0.586076 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_44' AS feature, -0.0516238 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10111 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0269963 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0172203 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532131 AS "Score" FROM DUAL) "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Score" AS "Score" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"XGB_Tree_1_8" AS 
(SELECT "DT_Output_18"."KEY" AS join_key_1_8, "DT_Output_18"."Score" AS "Score_1_8" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.578588) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_61 < -0.828756) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 0.23544) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 < -0.76279) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -0.337852) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_21' AS feature, 0.578588 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_61' AS feature, -0.828756 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_22' AS feature, 0.23544 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00577145 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526953 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_6' AS feature, -0.76279 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_12' AS feature, -0.337852 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0476127 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529011 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10359 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.012952 AS "Score" FROM DUAL) "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Score" AS "Score" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"XGB_Tree_1_9" AS 
(SELECT "DT_Output_19"."KEY" AS join_key_1_9, "DT_Output_19"."Score" AS "Score_1_9" 
FROM "DT_Output_19"), 
"DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0831529) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.41038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -0.883561) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 1.13478) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < -0.437172) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.431939) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.333686) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0831529 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.41038 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, -0.437172 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_55' AS feature, -0.883561 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, 1.13478 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_29' AS feature, -0.431939 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_4' AS feature, -0.333686 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0520305 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.120939 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0551137 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0189732 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.450495 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.135593 AS "Score" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0522914 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0397112 AS "Score" FROM DUAL) "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Score" AS "Score" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"XGB_Tree_2_0" AS 
(SELECT "DT_Output_20"."KEY" AS join_key_2_0, "DT_Output_20"."Score" AS "Score_2_0" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0831529) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.06877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -0.220942) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -1.19252) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.666095) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.926141) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.385742) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0831529 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.06877 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_47' AS feature, -0.666095 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_55' AS feature, -0.220942 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_47' AS feature, -1.19252 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_28' AS feature, -0.926141 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_54' AS feature, -0.385742 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0487281 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.128428 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0272741 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0547574 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.329233 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.149593 AS "Score" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527517 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.092878 AS "Score" FROM DUAL) "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Score" AS "Score" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"XGB_Tree_2_1" AS 
(SELECT "DT_Output_21"."KEY" AS join_key_2_1, "DT_Output_21"."Score" AS "Score_2_1" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0831529) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.41038) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 < 0.43382) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 1.13478) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.257414) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.315143) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.124525) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0831529 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.41038 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, 0.257414 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_46' AS feature, 0.43382 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, 1.13478 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_47' AS feature, -0.315143 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_45' AS feature, -0.124525 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.115935 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0521267 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0544775 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0162476 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.237402 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.025449 AS "Score" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0511506 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.014561 AS "Score" FROM DUAL) "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Score" AS "Score" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"XGB_Tree_2_2" AS 
(SELECT "DT_Output_22"."KEY" AS join_key_2_2, "DT_Output_22"."Score" AS "Score_2_2" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0831529) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.06877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_46 < 0.115646) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -1.19252) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.488943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -0.139666) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_13 < 0.363141) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0831529 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.06877 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, 0.488943 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_46' AS feature, 0.115646 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_47' AS feature, -1.19252 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_47' AS feature, -0.139666 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_13' AS feature, 0.363141 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.122673 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0446441 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.025184 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0541121 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.193084 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00704229 AS "Score" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0502761 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0231271 AS "Score" FROM DUAL) "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Score" AS "Score" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"XGB_Tree_2_3" AS 
(SELECT "DT_Output_23"."KEY" AS join_key_2_3, "DT_Output_23"."Score" AS "Score_2_3" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0831529) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.06877) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < 0.276022) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < -1.19252) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.488943) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.922524) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0831529 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.06877 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_48' AS feature, 0.488943 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_55' AS feature, 0.276022 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_47' AS feature, -1.19252 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_21' AS feature, 0.922524 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0375298 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0442518 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.116681 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0243223 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538133 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.16307 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0022136 AS "Score" FROM DUAL) "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Score" AS "Score" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"XGB_Tree_2_4" AS 
(SELECT "DT_Output_24"."KEY" AS join_key_2_4, "DT_Output_24"."Score" AS "Score_2_4" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.0831529) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -1.25113) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -0.385552) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.438656) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.211325) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.589995) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_64' AS feature, 0.0831529 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, -1.25113 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, 0.211325 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_39' AS feature, -0.385552 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_28' AS feature, -0.438656 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_45' AS feature, -0.589995 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0473721 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.102663 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0505202 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0235117 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0537971 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00970921 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.147386 AS "Score" FROM DUAL) "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Score" AS "Score" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"XGB_Tree_2_5" AS 
(SELECT "DT_Output_25"."KEY" AS join_key_2_5, "DT_Output_25"."Score" AS "Score_2_5" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.438656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 < -0.461387) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 < -0.0434415) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 1.5139) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.321611) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.438656 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_64' AS feature, 1.5139 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_56' AS feature, -0.461387 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_46' AS feature, -0.0434415 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_64' AS feature, 0.321611 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0234744 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00333751 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.133288 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0510532 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0230216 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0535646 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0308459 AS "Score" FROM DUAL) "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Score" AS "Score" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"XGB_Tree_2_6" AS 
(SELECT "DT_Output_26"."KEY" AS join_key_2_6, "DT_Output_26"."Score" AS "Score_2_6" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.438656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_56 < -0.461387) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.927755) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 1.75236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.321611) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.438656 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_64' AS feature, 1.75236 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_56' AS feature, -0.461387 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_23' AS feature, 0.927755 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_64' AS feature, 0.321611 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0296819 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0028222 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.1181 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050681 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.022764 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532868 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0317672 AS "Score" FROM DUAL) "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Score" AS "Score" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"XGB_Tree_2_7" AS 
(SELECT "DT_Output_27"."KEY" AS join_key_2_7, "DT_Output_27"."Score" AS "Score_2_7" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.438656) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < 0.766729) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.180603) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 1.75236) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 0.321611) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.438656 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_64' AS feature, 1.75236 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_29' AS feature, 0.766729 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, 0.180603 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_64' AS feature, 0.321611 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0273363 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.103803 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0123963 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0501949 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0227359 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530274 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0306607 AS "Score" FROM DUAL) "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Score" AS "Score" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"XGB_Tree_2_8" AS 
(SELECT "DT_Output_28"."KEY" AS join_key_2_8, "DT_Output_28"."Score" AS "Score_2_8" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.276161) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.386763) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 < 0.216505) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_64 < 1.03698) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.276161 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_64' AS feature, 1.03698 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_47' AS feature, 0.386763 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_12' AS feature, 0.216505 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.051777 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00197392 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0917756 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0316822 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0224475 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050457 AS "Score" FROM DUAL) "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Score" AS "Score" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"XGB_Tree_2_9" AS 
(SELECT "DT_Output_29"."KEY" AS join_key_2_9, "DT_Output_29"."Score" AS "Score_2_9" 
FROM "DT_Output_29"), 
"DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -1.41363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.753106) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.601151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.900308) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 < 0.240237) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.41363 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.601151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.415049 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, 0.753106 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_45' AS feature, -0.900308 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_3' AS feature, 0.240237 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00541516 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514706 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.129964 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0326177 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0513192 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0144291 AS "Score" FROM DUAL) "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Score" AS "Score" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"XGB_Tree_3_0" AS 
(SELECT "DT_Output_30"."KEY" AS join_key_3_0, "DT_Output_30"."Score" AS "Score_3_0" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -1.41363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.753106) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.601151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.900308) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 < 0.240237) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.41363 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.601151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.282651 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, 0.753106 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_45' AS feature, -0.900308 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_3' AS feature, 0.240237 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00512011 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0510459 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.110633 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0317598 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0507604 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0133482 AS "Score" FROM DUAL) "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Score" AS "Score" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"XGB_Tree_3_1" AS 
(SELECT "DT_Output_31"."KEY" AS join_key_3_1, "DT_Output_31"."Score" AS "Score_3_1" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -1.41363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.405425) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -1.14904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < -0.488286) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.438656) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.41363 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_20' AS feature, -1.14904 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.2168 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, -0.405425 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_32' AS feature, -0.488286 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_28' AS feature, -0.438656 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0506037 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00620403 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.120484 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0502498 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0118156 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0502772 AS "Score" FROM DUAL) "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Score" AS "Score" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"XGB_Tree_3_2" AS 
(SELECT "DT_Output_32"."KEY" AS join_key_3_2, "DT_Output_32"."Score" AS "Score_3_2" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -1.41363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_12 < 0.216505) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.405425) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -1.14904) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 < 0.0903163) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.438656) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.41363 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_20' AS feature, -1.14904 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_12' AS feature, 0.216505 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, -0.405425 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_4' AS feature, 0.0903163 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_28' AS feature, -0.438656 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.126662 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.195472 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0502022 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00556036 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0503562 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.110777 AS "Score" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0113766 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0497469 AS "Score" FROM DUAL) "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Score" AS "Score" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"XGB_Tree_3_3" AS 
(SELECT "DT_Output_33"."KEY" AS join_key_3_3, "DT_Output_33"."Score" AS "Score_3_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -1.41363) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_64 < -0.155305) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.405425) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.601151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.0258858) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.339982) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -1.41363 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_28' AS feature, -0.601151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_64' AS feature, -0.155305 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, -0.405425 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_48' AS feature, 0.0258858 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_56' AS feature, 0.339982 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.167695 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.100636 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0497935 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00493888 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.028447 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.100091 AS "Score" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527181 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0232727 AS "Score" FROM DUAL) "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Score" AS "Score" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"XGB_Tree_3_4" AS 
(SELECT "DT_Output_34"."KEY" AS join_key_3_4, "DT_Output_34"."Score" AS "Score_3_4" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.601151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < -0.488286) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 < 0.851752) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < 1.11499) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -1.11871) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.386763) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.601151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_14' AS feature, 1.11499 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_32' AS feature, -0.488286 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_6' AS feature, 0.851752 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_36' AS feature, -1.11871 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_47' AS feature, 0.386763 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.149371 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0032665 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0497439 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.022478 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0265685 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0535174 AS "Score" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0497177 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0218463 AS "Score" FROM DUAL) "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Score" AS "Score" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"XGB_Tree_3_5" AS 
(SELECT "DT_Output_35"."KEY" AS join_key_3_5, "DT_Output_35"."Score" AS "Score_3_5" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.601151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < -0.488286) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 < 0.851752) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.339982) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < -0.0892768) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.601151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_56' AS feature, 0.339982 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_32' AS feature, -0.488286 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_6' AS feature, 0.851752 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0520842 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_22' AS feature, -0.0892768 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.131494 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00317281 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0491974 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0216934 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0464385 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0300821 AS "Score" FROM DUAL) "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Score" AS "Score" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"XGB_Tree_3_6" AS 
(SELECT "DT_Output_36"."KEY" AS join_key_3_6, "DT_Output_36"."Score" AS "Score_3_6" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.601151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.434838) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < -0.488286) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 < 0.851752) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_3 < 0.240237) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < -1.11871) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.601151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.434838 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_3' AS feature, 0.240237 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_32' AS feature, -0.488286 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_6' AS feature, 0.851752 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_36' AS feature, -1.11871 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00257052 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.116917 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00265787 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0521313 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0115495 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.021211 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0518103 AS "Score" FROM DUAL) "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Score" AS "Score" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"XGB_Tree_3_7" AS 
(SELECT "DT_Output_37"."KEY" AS join_key_3_7, "DT_Output_37"."Score" AS "Score_3_7" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.601151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.434838) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < -0.488286) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 < 0.851752) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.339982) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < -0.0892768) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_28' AS feature, -0.601151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_45' AS feature, -0.434838 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_56' AS feature, 0.339982 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_32' AS feature, -0.488286 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_6' AS feature, 0.851752 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514681 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_22' AS feature, -0.0892768 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.105844 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00227218 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0517791 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0117414 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0450901 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.029354 AS "Score" FROM DUAL) "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Score" AS "Score" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"XGB_Tree_3_8" AS 
(SELECT "DT_Output_38"."KEY" AS join_key_3_8, "DT_Output_38"."Score" AS "Score_3_8" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.900308) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < -0.224697) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.0488296) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_20 < -1.68005) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 < 1.1043) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.900308 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_32' AS feature, -0.224697 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_20' AS feature, -1.68005 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_28' AS feature, 0.0488296 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0489325 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00829089 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_55' AS feature, 1.1043 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0980265 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0198397 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0519877 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0212105 AS "Score" FROM DUAL) "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Score" AS "Score" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"XGB_Tree_3_9" AS 
(SELECT "DT_Output_39"."KEY" AS join_key_3_9, "DT_Output_39"."Score" AS "Score_3_9" 
FROM "DT_Output_39"), 
"DT_node_lookup_40" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.76581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 < -0.970653) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.341941) THEN 5 ELSE 6 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 < 1.35684) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_40" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.76581 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_60' AS feature, -0.970653 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.372928 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_35' AS feature, 0.341941 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_32' AS feature, 1.35684 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0334234 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.209724 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530442 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0200433 AS "Score" FROM DUAL) "Values"), 
"DT_Output_40" AS 
(SELECT "DT_node_lookup_40"."KEY" AS "KEY", "DT_node_lookup_40".node_id_2 AS node_id_2, "DT_node_data_40".node_id AS node_id, "DT_node_data_40".feature AS feature, "DT_node_data_40".threshold AS threshold, "DT_node_data_40".depth AS depth, "DT_node_data_40".parent_id AS parent_id, "DT_node_data_40"."Score" AS "Score" 
FROM "DT_node_lookup_40" LEFT OUTER JOIN "DT_node_data_40" ON "DT_node_lookup_40".node_id_2 = "DT_node_data_40".node_id), 
"XGB_Tree_4_0" AS 
(SELECT "DT_Output_40"."KEY" AS join_key_4_0, "DT_Output_40"."Score" AS "Score_4_0" 
FROM "DT_Output_40"), 
"DT_node_lookup_41" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.76581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 < -0.970653) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.341941) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_32 < 1.35684) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_5 < -0.312817) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_41" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.76581 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_60' AS feature, -0.970653 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_5' AS feature, -0.312817 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_35' AS feature, 0.341941 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_32' AS feature, 1.35684 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.31892 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17158 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0325748 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.169119 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0525787 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0191374 AS "Score" FROM DUAL) "Values"), 
"DT_Output_41" AS 
(SELECT "DT_node_lookup_41"."KEY" AS "KEY", "DT_node_lookup_41".node_id_2 AS node_id_2, "DT_node_data_41".node_id AS node_id, "DT_node_data_41".feature AS feature, "DT_node_data_41".threshold AS threshold, "DT_node_data_41".depth AS depth, "DT_node_data_41".parent_id AS parent_id, "DT_node_data_41"."Score" AS "Score" 
FROM "DT_node_lookup_41" LEFT OUTER JOIN "DT_node_data_41" ON "DT_node_lookup_41".node_id_2 = "DT_node_data_41".node_id), 
"XGB_Tree_4_1" AS 
(SELECT "DT_Output_41"."KEY" AS join_key_4_1, "DT_Output_41"."Score" AS "Score_4_1" 
FROM "DT_Output_41"), 
"DT_node_lookup_42" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.76581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.939222) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -1.04786) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 < 1.07017) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_42" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.76581 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 0.939222 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_46' AS feature, 1.07017 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_52' AS feature, -1.04786 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.132721 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.24447 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0172227 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538133 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.187825 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0334698 AS "Score" FROM DUAL) "Values"), 
"DT_Output_42" AS 
(SELECT "DT_node_lookup_42"."KEY" AS "KEY", "DT_node_lookup_42".node_id_2 AS node_id_2, "DT_node_data_42".node_id AS node_id, "DT_node_data_42".feature AS feature, "DT_node_data_42".threshold AS threshold, "DT_node_data_42".depth AS depth, "DT_node_data_42".parent_id AS parent_id, "DT_node_data_42"."Score" AS "Score" 
FROM "DT_node_lookup_42" LEFT OUTER JOIN "DT_node_data_42" ON "DT_node_lookup_42".node_id_2 = "DT_node_data_42".node_id), 
"XGB_Tree_4_2" AS 
(SELECT "DT_Output_42"."KEY" AS join_key_4_2, "DT_Output_42"."Score" AS "Score_4_2" 
FROM "DT_Output_42"), 
"DT_node_lookup_43" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.76581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.969688) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < 0.829659) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -1.22317) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 < -0.892209) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_43" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.76581 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_4' AS feature, -0.969688 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_12' AS feature, -0.892209 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_32' AS feature, 0.829659 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_52' AS feature, -1.22317 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.200492 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.103629 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0111833 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.167517 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0129613 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526284 AS "Score" FROM DUAL) "Values"), 
"DT_Output_43" AS 
(SELECT "DT_node_lookup_43"."KEY" AS "KEY", "DT_node_lookup_43".node_id_2 AS node_id_2, "DT_node_data_43".node_id AS node_id, "DT_node_data_43".feature AS feature, "DT_node_data_43".threshold AS threshold, "DT_node_data_43".depth AS depth, "DT_node_data_43".parent_id AS parent_id, "DT_node_data_43"."Score" AS "Score" 
FROM "DT_node_lookup_43" LEFT OUTER JOIN "DT_node_data_43" ON "DT_node_lookup_43".node_id_2 = "DT_node_data_43".node_id), 
"XGB_Tree_4_3" AS 
(SELECT "DT_Output_43"."KEY" AS join_key_4_3, "DT_Output_43"."Score" AS "Score_4_3" 
FROM "DT_Output_43"), 
"DT_node_lookup_44" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.76581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.939222) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -1.04786) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_21 < 0.234652) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_44" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.76581 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 0.939222 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_21' AS feature, 0.234652 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_52' AS feature, -1.04786 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0767967 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17091 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0147699 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532249 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.144501 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0314393 AS "Score" FROM DUAL) "Values"), 
"DT_Output_44" AS 
(SELECT "DT_node_lookup_44"."KEY" AS "KEY", "DT_node_lookup_44".node_id_2 AS node_id_2, "DT_node_data_44".node_id AS node_id, "DT_node_data_44".feature AS feature, "DT_node_data_44".threshold AS threshold, "DT_node_data_44".depth AS depth, "DT_node_data_44".parent_id AS parent_id, "DT_node_data_44"."Score" AS "Score" 
FROM "DT_node_lookup_44" LEFT OUTER JOIN "DT_node_data_44" ON "DT_node_lookup_44".node_id_2 = "DT_node_data_44".node_id), 
"XGB_Tree_4_4" AS 
(SELECT "DT_Output_44"."KEY" AS join_key_4_4, "DT_Output_44"."Score" AS "Score_4_4" 
FROM "DT_Output_44"), 
"DT_node_lookup_45" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.76581) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.939222) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -1.04786) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.969688) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_45" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 1.76581 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 0.939222 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_4' AS feature, -0.969688 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_52' AS feature, -1.04786 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.152403 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.055679 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0139937 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0528851 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.124268 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0303639 AS "Score" FROM DUAL) "Values"), 
"DT_Output_45" AS 
(SELECT "DT_node_lookup_45"."KEY" AS "KEY", "DT_node_lookup_45".node_id_2 AS node_id_2, "DT_node_data_45".node_id AS node_id, "DT_node_data_45".feature AS feature, "DT_node_data_45".threshold AS threshold, "DT_node_data_45".depth AS depth, "DT_node_data_45".parent_id AS parent_id, "DT_node_data_45"."Score" AS "Score" 
FROM "DT_node_lookup_45" LEFT OUTER JOIN "DT_node_data_45" ON "DT_node_lookup_45".node_id_2 = "DT_node_data_45".node_id), 
"XGB_Tree_4_5" AS 
(SELECT "DT_Output_45"."KEY" AS join_key_4_5, "DT_Output_45"."Score" AS "Score_4_5" 
FROM "DT_Output_45"), 
"DT_node_lookup_46" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.911489) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 0.939222) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < -1.04786) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 < 0.43382) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.229826) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_46" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 0.911489 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_36' AS feature, 0.939222 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_46' AS feature, 0.43382 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_52' AS feature, -1.04786 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0333542 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_7' AS feature, -0.229826 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0230977 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0524373 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0802832 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0299625 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.15095 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0805539 AS "Score" FROM DUAL) "Values"), 
"DT_Output_46" AS 
(SELECT "DT_node_lookup_46"."KEY" AS "KEY", "DT_node_lookup_46".node_id_2 AS node_id_2, "DT_node_data_46".node_id AS node_id, "DT_node_data_46".feature AS feature, "DT_node_data_46".threshold AS threshold, "DT_node_data_46".depth AS depth, "DT_node_data_46".parent_id AS parent_id, "DT_node_data_46"."Score" AS "Score" 
FROM "DT_node_lookup_46" LEFT OUTER JOIN "DT_node_data_46" ON "DT_node_lookup_46".node_id_2 = "DT_node_data_46".node_id), 
"XGB_Tree_4_6" AS 
(SELECT "DT_Output_46"."KEY" AS join_key_4_6, "DT_Output_46"."Score" AS "Score_4_6" 
FROM "DT_Output_46"), 
"DT_node_lookup_47" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_60 < -0.970653) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_35 < -0.227606) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 < -0.0889615) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.61237) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 < -1.23884) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_47" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_60' AS feature, -0.970653 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_35' AS feature, -0.227606 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_14' AS feature, -1.61237 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.046565 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_15' AS feature, -0.0889615 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0266902 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_15' AS feature, -1.23884 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.134961 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000910567 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0145378 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0537422 AS "Score" FROM DUAL) "Values"), 
"DT_Output_47" AS 
(SELECT "DT_node_lookup_47"."KEY" AS "KEY", "DT_node_lookup_47".node_id_2 AS node_id_2, "DT_node_data_47".node_id AS node_id, "DT_node_data_47".feature AS feature, "DT_node_data_47".threshold AS threshold, "DT_node_data_47".depth AS depth, "DT_node_data_47".parent_id AS parent_id, "DT_node_data_47"."Score" AS "Score" 
FROM "DT_node_lookup_47" LEFT OUTER JOIN "DT_node_data_47" ON "DT_node_lookup_47".node_id_2 = "DT_node_data_47".node_id), 
"XGB_Tree_4_7" AS 
(SELECT "DT_Output_47"."KEY" AS join_key_4_7, "DT_Output_47"."Score" AS "Score_4_7" 
FROM "DT_Output_47"), 
"DT_node_lookup_48" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.341941) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < 1.35684) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.38052) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 < 0.43382) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < 1.09325) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 < -0.25323) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_48" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 0.341941 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_32' AS feature, 1.35684 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_46' AS feature, 0.43382 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_55' AS feature, -1.38052 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00016256 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_32' AS feature, 1.09325 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_15' AS feature, -0.25323 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0282685 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0518569 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529401 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00880513 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.122814 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0223886 AS "Score" FROM DUAL) "Values"), 
"DT_Output_48" AS 
(SELECT "DT_node_lookup_48"."KEY" AS "KEY", "DT_node_lookup_48".node_id_2 AS node_id_2, "DT_node_data_48".node_id AS node_id, "DT_node_data_48".feature AS feature, "DT_node_data_48".threshold AS threshold, "DT_node_data_48".depth AS depth, "DT_node_data_48".parent_id AS parent_id, "DT_node_data_48"."Score" AS "Score" 
FROM "DT_node_lookup_48" LEFT OUTER JOIN "DT_node_data_48" ON "DT_node_lookup_48".node_id_2 = "DT_node_data_48".node_id), 
"XGB_Tree_4_8" AS 
(SELECT "DT_Output_48"."KEY" AS join_key_4_8, "DT_Output_48"."Score" AS "Score_4_8" 
FROM "DT_Output_48"), 
"DT_node_lookup_49" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.341941) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_32 < 1.35684) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.38052) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_46 < 0.43382) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.865031) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_15 < -0.25323) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_49" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_35' AS feature, 0.341941 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_32' AS feature, 1.35684 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_46' AS feature, 0.43382 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_55' AS feature, -1.38052 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 9.60196e-05 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_44' AS feature, 0.865031 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_15' AS feature, -0.25323 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0272226 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0515378 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0109328 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0522081 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.111155 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0205652 AS "Score" FROM DUAL) "Values"), 
"DT_Output_49" AS 
(SELECT "DT_node_lookup_49"."KEY" AS "KEY", "DT_node_lookup_49".node_id_2 AS node_id_2, "DT_node_data_49".node_id AS node_id, "DT_node_data_49".feature AS feature, "DT_node_data_49".threshold AS threshold, "DT_node_data_49".depth AS depth, "DT_node_data_49".parent_id AS parent_id, "DT_node_data_49"."Score" AS "Score" 
FROM "DT_node_lookup_49" LEFT OUTER JOIN "DT_node_data_49" ON "DT_node_lookup_49".node_id_2 = "DT_node_data_49".node_id), 
"XGB_Tree_4_9" AS 
(SELECT "DT_Output_49"."KEY" AS join_key_4_9, "DT_Output_49"."Score" AS "Score_4_9" 
FROM "DT_Output_49"), 
"DT_node_lookup_50" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < 0.121372) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.815503) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.670883) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.40257) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_50" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.121372 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -0.670883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_44' AS feature, -0.815503 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.397413 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0206738 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -1.40257 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0577617 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0539853 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0338983 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0551242 AS "Score" FROM DUAL) "Values"), 
"DT_Output_50" AS 
(SELECT "DT_node_lookup_50"."KEY" AS "KEY", "DT_node_lookup_50".node_id_2 AS node_id_2, "DT_node_data_50".node_id AS node_id, "DT_node_data_50".feature AS feature, "DT_node_data_50".threshold AS threshold, "DT_node_data_50".depth AS depth, "DT_node_data_50".parent_id AS parent_id, "DT_node_data_50"."Score" AS "Score" 
FROM "DT_node_lookup_50" LEFT OUTER JOIN "DT_node_data_50" ON "DT_node_lookup_50".node_id_2 = "DT_node_data_50".node_id), 
"XGB_Tree_5_0" AS 
(SELECT "DT_Output_50"."KEY" AS join_key_5_0, "DT_Output_50"."Score" AS "Score_5_0" 
FROM "DT_Output_50"), 
"DT_node_lookup_51" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < 0.121372) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.815503) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 < 0.604255) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.670883) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.40257) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_51" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.121372 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -0.670883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_44' AS feature, -0.815503 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_60' AS feature, 0.604255 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0201037 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -1.40257 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.052314 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0535438 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.17535 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.322285 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0329232 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.054764 AS "Score" FROM DUAL) "Values"), 
"DT_Output_51" AS 
(SELECT "DT_node_lookup_51"."KEY" AS "KEY", "DT_node_lookup_51".node_id_2 AS node_id_2, "DT_node_data_51".node_id AS node_id, "DT_node_data_51".feature AS feature, "DT_node_data_51".threshold AS threshold, "DT_node_data_51".depth AS depth, "DT_node_data_51".parent_id AS parent_id, "DT_node_data_51"."Score" AS "Score" 
FROM "DT_node_lookup_51" LEFT OUTER JOIN "DT_node_data_51" ON "DT_node_lookup_51".node_id_2 = "DT_node_data_51".node_id), 
"XGB_Tree_5_1" AS 
(SELECT "DT_Output_51"."KEY" AS join_key_5_1, "DT_Output_51"."Score" AS "Score_5_1" 
FROM "DT_Output_51"), 
"DT_node_lookup_52" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.405425) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.662727) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.357175) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.670883) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.40257) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_52" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.405425 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -0.670883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_44' AS feature, -0.662727 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, -0.357175 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0193966 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -1.40257 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0155595 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0528748 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.252927 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.044585 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0321506 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0544284 AS "Score" FROM DUAL) "Values"), 
"DT_Output_52" AS 
(SELECT "DT_node_lookup_52"."KEY" AS "KEY", "DT_node_lookup_52".node_id_2 AS node_id_2, "DT_node_data_52".node_id AS node_id, "DT_node_data_52".feature AS feature, "DT_node_data_52".threshold AS threshold, "DT_node_data_52".depth AS depth, "DT_node_data_52".parent_id AS parent_id, "DT_node_data_52"."Score" AS "Score" 
FROM "DT_node_lookup_52" LEFT OUTER JOIN "DT_node_data_52" ON "DT_node_lookup_52".node_id_2 = "DT_node_data_52".node_id), 
"XGB_Tree_5_2" AS 
(SELECT "DT_Output_52"."KEY" AS join_key_5_2, "DT_Output_52"."Score" AS "Score_5_2" 
FROM "DT_Output_52"), 
"DT_node_lookup_53" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.405425) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.662727) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.357175) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.670883) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_53" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.405425 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -0.670883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_44' AS feature, -0.662727 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, -0.357175 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0186758 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0151209 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0524488 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.201808 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0416849 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0387031 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0540867 AS "Score" FROM DUAL) "Values"), 
"DT_Output_53" AS 
(SELECT "DT_node_lookup_53"."KEY" AS "KEY", "DT_node_lookup_53".node_id_2 AS node_id_2, "DT_node_data_53".node_id AS node_id, "DT_node_data_53".feature AS feature, "DT_node_data_53".threshold AS threshold, "DT_node_data_53".depth AS depth, "DT_node_data_53".parent_id AS parent_id, "DT_node_data_53"."Score" AS "Score" 
FROM "DT_node_lookup_53" LEFT OUTER JOIN "DT_node_data_53" ON "DT_node_lookup_53".node_id_2 = "DT_node_data_53".node_id), 
"XGB_Tree_5_3" AS 
(SELECT "DT_Output_53"."KEY" AS join_key_5_3, "DT_Output_53"."Score" AS "Score_5_3" 
FROM "DT_Output_53"), 
"DT_node_lookup_54" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.405425) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.662727) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.2044) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.670883) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_54" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.405425 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -0.670883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_44' AS feature, -0.662727 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, -0.2044 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0178759 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0147337 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0520348 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.170251 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0275994 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0379684 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053791 AS "Score" FROM DUAL) "Values"), 
"DT_Output_54" AS 
(SELECT "DT_node_lookup_54"."KEY" AS "KEY", "DT_node_lookup_54".node_id_2 AS node_id_2, "DT_node_data_54".node_id AS node_id, "DT_node_data_54".feature AS feature, "DT_node_data_54".threshold AS threshold, "DT_node_data_54".depth AS depth, "DT_node_data_54".parent_id AS parent_id, "DT_node_data_54"."Score" AS "Score" 
FROM "DT_node_lookup_54" LEFT OUTER JOIN "DT_node_data_54" ON "DT_node_lookup_54".node_id_2 = "DT_node_data_54".node_id), 
"XGB_Tree_5_4" AS 
(SELECT "DT_Output_54"."KEY" AS join_key_5_4, "DT_Output_54"."Score" AS "Score_5_4" 
FROM "DT_Output_54"), 
"DT_node_lookup_55" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.581024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.764016) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.545686) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.670883) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_55" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.581024 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -0.670883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_54' AS feature, -0.764016 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_4' AS feature, -0.545686 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0170952 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0311966 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0521515 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000827237 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.149272 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0371961 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053501 AS "Score" FROM DUAL) "Values"), 
"DT_Output_55" AS 
(SELECT "DT_node_lookup_55"."KEY" AS "KEY", "DT_node_lookup_55".node_id_2 AS node_id_2, "DT_node_data_55".node_id AS node_id, "DT_node_data_55".feature AS feature, "DT_node_data_55".threshold AS threshold, "DT_node_data_55".depth AS depth, "DT_node_data_55".parent_id AS parent_id, "DT_node_data_55"."Score" AS "Score" 
FROM "DT_node_lookup_55" LEFT OUTER JOIN "DT_node_data_55" ON "DT_node_lookup_55".node_id_2 = "DT_node_data_55".node_id), 
"XGB_Tree_5_5" AS 
(SELECT "DT_Output_55"."KEY" AS join_key_5_5, "DT_Output_55"."Score" AS "Score_5_5" 
FROM "DT_Output_55"), 
"DT_node_lookup_56" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.581024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 < 0.0225581) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.670883) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_56" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.581024 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -0.670883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_38' AS feature, 0.0225581 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0161578 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0316743 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0515458 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.131923 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000438607 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0364816 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0532258 AS "Score" FROM DUAL) "Values"), 
"DT_Output_56" AS 
(SELECT "DT_node_lookup_56"."KEY" AS "KEY", "DT_node_lookup_56".node_id_2 AS node_id_2, "DT_node_data_56".node_id AS node_id, "DT_node_data_56".feature AS feature, "DT_node_data_56".threshold AS threshold, "DT_node_data_56".depth AS depth, "DT_node_data_56".parent_id AS parent_id, "DT_node_data_56"."Score" AS "Score" 
FROM "DT_node_lookup_56" LEFT OUTER JOIN "DT_node_data_56" ON "DT_node_lookup_56".node_id_2 = "DT_node_data_56".node_id), 
"XGB_Tree_5_6" AS 
(SELECT "DT_Output_56"."KEY" AS join_key_5_6, "DT_Output_56"."Score" AS "Score_5_6" 
FROM "DT_Output_56"), 
"DT_node_lookup_57" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.581024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.545686) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.670883) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_14 < -1.19278) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_57" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.581024 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_23' AS feature, -0.670883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_4' AS feature, -0.545686 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0155256 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_14' AS feature, -1.19278 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0512922 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0309219 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00233813 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.118623 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0356124 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529652 AS "Score" FROM DUAL) "Values"), 
"DT_Output_57" AS 
(SELECT "DT_node_lookup_57"."KEY" AS "KEY", "DT_node_lookup_57".node_id_2 AS node_id_2, "DT_node_data_57".node_id AS node_id, "DT_node_data_57".feature AS feature, "DT_node_data_57".threshold AS threshold, "DT_node_data_57".depth AS depth, "DT_node_data_57".parent_id AS parent_id, "DT_node_data_57"."Score" AS "Score" 
FROM "DT_node_lookup_57" LEFT OUTER JOIN "DT_node_data_57" ON "DT_node_lookup_57".node_id_2 = "DT_node_data_57".node_id), 
"XGB_Tree_5_7" AS 
(SELECT "DT_Output_57"."KEY" AS join_key_5_7, "DT_Output_57"."Score" AS "Score_5_7" 
FROM "DT_Output_57"), 
"DT_node_lookup_58" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.581024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.952001) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 < 0.801118) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < 0.0547709) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_58" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.581024 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_60' AS feature, 0.801118 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_48' AS feature, 0.952001 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529007 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_37' AS feature, 0.0547709 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0509167 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0310453 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.108075 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00145668 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00544676 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0495505 AS "Score" FROM DUAL) "Values"), 
"DT_Output_58" AS 
(SELECT "DT_node_lookup_58"."KEY" AS "KEY", "DT_node_lookup_58".node_id_2 AS node_id_2, "DT_node_data_58".node_id AS node_id, "DT_node_data_58".feature AS feature, "DT_node_data_58".threshold AS threshold, "DT_node_data_58".depth AS depth, "DT_node_data_58".parent_id AS parent_id, "DT_node_data_58"."Score" AS "Score" 
FROM "DT_node_lookup_58" LEFT OUTER JOIN "DT_node_data_58" ON "DT_node_lookup_58".node_id_2 = "DT_node_data_58".node_id), 
"XGB_Tree_5_8" AS 
(SELECT "DT_Output_58"."KEY" AS join_key_5_8, "DT_Output_58"."Score" AS "Score_5_8" 
FROM "DT_Output_58"), 
"DT_node_lookup_59" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.990611) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.581024) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.385742) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_4 < -0.545686) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_60 < 0.801118) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.054227) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_59" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -0.990611 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, -0.581024 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_60' AS feature, 0.801118 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_54' AS feature, -0.385742 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_4' AS feature, -0.545686 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526578 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_7' AS feature, -0.054227 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0309852 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.050355 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00362248 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0997928 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0491996 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00468782 AS "Score" FROM DUAL) "Values"), 
"DT_Output_59" AS 
(SELECT "DT_node_lookup_59"."KEY" AS "KEY", "DT_node_lookup_59".node_id_2 AS node_id_2, "DT_node_data_59".node_id AS node_id, "DT_node_data_59".feature AS feature, "DT_node_data_59".threshold AS threshold, "DT_node_data_59".depth AS depth, "DT_node_data_59".parent_id AS parent_id, "DT_node_data_59"."Score" AS "Score" 
FROM "DT_node_lookup_59" LEFT OUTER JOIN "DT_node_data_59" ON "DT_node_lookup_59".node_id_2 = "DT_node_data_59".node_id), 
"XGB_Tree_5_9" AS 
(SELECT "DT_Output_59"."KEY" AS join_key_5_9, "DT_Output_59"."Score" AS "Score_5_9" 
FROM "DT_Output_59"), 
"DT_node_lookup_60" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.253928) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.300838) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.540325) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 < -1.45474) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_60" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.253928 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_6' AS feature, -1.45474 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_19' AS feature, -0.300838 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, 0.540325 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0342237 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538018 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.032491 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0531547 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.100355 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.463843 AS "Score" FROM DUAL) "Values"), 
"DT_Output_60" AS 
(SELECT "DT_node_lookup_60"."KEY" AS "KEY", "DT_node_lookup_60".node_id_2 AS node_id_2, "DT_node_data_60".node_id AS node_id, "DT_node_data_60".feature AS feature, "DT_node_data_60".threshold AS threshold, "DT_node_data_60".depth AS depth, "DT_node_data_60".parent_id AS parent_id, "DT_node_data_60"."Score" AS "Score" 
FROM "DT_node_lookup_60" LEFT OUTER JOIN "DT_node_data_60" ON "DT_node_lookup_60".node_id_2 = "DT_node_data_60".node_id), 
"XGB_Tree_6_0" AS 
(SELECT "DT_Output_60"."KEY" AS join_key_6_0, "DT_Output_60"."Score" AS "Score_6_0" 
FROM "DT_Output_60"), 
"DT_node_lookup_61" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.253928) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_45 < 0.496101) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.339982) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_6 < -1.45474) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_61" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.253928 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_6' AS feature, -1.45474 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_45' AS feature, 0.496101 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, 0.339982 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0333574 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0533821 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526622 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0323307 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0745337 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.302606 AS "Score" FROM DUAL) "Values"), 
"DT_Output_61" AS 
(SELECT "DT_node_lookup_61"."KEY" AS "KEY", "DT_node_lookup_61".node_id_2 AS node_id_2, "DT_node_data_61".node_id AS node_id, "DT_node_data_61".feature AS feature, "DT_node_data_61".threshold AS threshold, "DT_node_data_61".depth AS depth, "DT_node_data_61".parent_id AS parent_id, "DT_node_data_61"."Score" AS "Score" 
FROM "DT_node_lookup_61" LEFT OUTER JOIN "DT_node_data_61" ON "DT_node_lookup_61".node_id_2 = "DT_node_data_61".node_id), 
"XGB_Tree_6_1" AS 
(SELECT "DT_Output_61"."KEY" AS join_key_6_1, "DT_Output_61"."Score" AS "Score_6_1" 
FROM "DT_Output_61"), 
"DT_node_lookup_62" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_48 < 0.488943) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.25583) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -0.552251) THEN 9 ELSE 10 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_62" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, 1.25583 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530467 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_48' AS feature, 0.488943 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536738 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_55' AS feature, -0.552251 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0711375 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.236167 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0499441 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0228619 AS "Score" FROM DUAL) "Values"), 
"DT_Output_62" AS 
(SELECT "DT_node_lookup_62"."KEY" AS "KEY", "DT_node_lookup_62".node_id_2 AS node_id_2, "DT_node_data_62".node_id AS node_id, "DT_node_data_62".feature AS feature, "DT_node_data_62".threshold AS threshold, "DT_node_data_62".depth AS depth, "DT_node_data_62".parent_id AS parent_id, "DT_node_data_62"."Score" AS "Score" 
FROM "DT_node_lookup_62" LEFT OUTER JOIN "DT_node_data_62" ON "DT_node_lookup_62".node_id_2 = "DT_node_data_62".node_id), 
"XGB_Tree_6_2" AS 
(SELECT "DT_Output_62"."KEY" AS join_key_6_2, "DT_Output_62"."Score" AS "Score_6_2" 
FROM "DT_Output_62"), 
"DT_node_lookup_63" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.339982) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.25583) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_63" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, 1.25583 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526385 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, 0.339982 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0533285 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0371304 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0574172 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.188576 AS "Score" FROM DUAL) "Values"), 
"DT_Output_63" AS 
(SELECT "DT_node_lookup_63"."KEY" AS "KEY", "DT_node_lookup_63".node_id_2 AS node_id_2, "DT_node_data_63".node_id AS node_id, "DT_node_data_63".feature AS feature, "DT_node_data_63".threshold AS threshold, "DT_node_data_63".depth AS depth, "DT_node_data_63".parent_id AS parent_id, "DT_node_data_63"."Score" AS "Score" 
FROM "DT_node_lookup_63" LEFT OUTER JOIN "DT_node_data_63" ON "DT_node_lookup_63".node_id_2 = "DT_node_data_63".node_id), 
"XGB_Tree_6_3" AS 
(SELECT "DT_Output_63"."KEY" AS join_key_6_3, "DT_Output_63"."Score" AS "Score_6_3" 
FROM "DT_Output_63"), 
"DT_node_lookup_64" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.13964) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.25583) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_64" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, 1.25583 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0522504 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, 0.13964 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529924 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0362934 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0115206 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.162589 AS "Score" FROM DUAL) "Values"), 
"DT_Output_64" AS 
(SELECT "DT_node_lookup_64"."KEY" AS "KEY", "DT_node_lookup_64".node_id_2 AS node_id_2, "DT_node_data_64".node_id AS node_id, "DT_node_data_64".feature AS feature, "DT_node_data_64".threshold AS threshold, "DT_node_data_64".depth AS depth, "DT_node_data_64".parent_id AS parent_id, "DT_node_data_64"."Score" AS "Score" 
FROM "DT_node_lookup_64" LEFT OUTER JOIN "DT_node_data_64" ON "DT_node_lookup_64".node_id_2 = "DT_node_data_64".node_id), 
"XGB_Tree_6_4" AS 
(SELECT "DT_Output_64"."KEY" AS join_key_6_4, "DT_Output_64"."Score" AS "Score_6_4" 
FROM "DT_Output_64"), 
"DT_node_lookup_65" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.13964) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.25583) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_65" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, 1.25583 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0518866 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, 0.13964 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526621 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0353158 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0109897 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.141453 AS "Score" FROM DUAL) "Values"), 
"DT_Output_65" AS 
(SELECT "DT_node_lookup_65"."KEY" AS "KEY", "DT_node_lookup_65".node_id_2 AS node_id_2, "DT_node_data_65".node_id AS node_id, "DT_node_data_65".feature AS feature, "DT_node_data_65".threshold AS threshold, "DT_node_data_65".depth AS depth, "DT_node_data_65".parent_id AS parent_id, "DT_node_data_65"."Score" AS "Score" 
FROM "DT_node_lookup_65" LEFT OUTER JOIN "DT_node_data_65" ON "DT_node_lookup_65".node_id_2 = "DT_node_data_65".node_id), 
"XGB_Tree_6_5" AS 
(SELECT "DT_Output_65"."KEY" AS join_key_6_5, "DT_Output_65"."Score" AS "Score_6_5" 
FROM "DT_Output_65"), 
"DT_node_lookup_66" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.13964) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_36 < 1.25583) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_66" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_36' AS feature, 1.25583 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0515309 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, 0.13964 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.05234 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0344126 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0108372 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.125913 AS "Score" FROM DUAL) "Values"), 
"DT_Output_66" AS 
(SELECT "DT_node_lookup_66"."KEY" AS "KEY", "DT_node_lookup_66".node_id_2 AS node_id_2, "DT_node_data_66".node_id AS node_id, "DT_node_data_66".feature AS feature, "DT_node_data_66".threshold AS threshold, "DT_node_data_66".depth AS depth, "DT_node_data_66".parent_id AS parent_id, "DT_node_data_66"."Score" AS "Score" 
FROM "DT_node_lookup_66" LEFT OUTER JOIN "DT_node_data_66" ON "DT_node_lookup_66".node_id_2 = "DT_node_data_66".node_id), 
"XGB_Tree_6_6" AS 
(SELECT "DT_Output_66"."KEY" AS join_key_6_6, "DT_Output_66"."Score" AS "Score_6_6" 
FROM "DT_Output_66"), 
"DT_node_lookup_67" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < 0.13964) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.19626) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_67" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_35' AS feature, 1.19626 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0511795 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, 0.13964 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0520807 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0334273 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0104489 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.113784 AS "Score" FROM DUAL) "Values"), 
"DT_Output_67" AS 
(SELECT "DT_node_lookup_67"."KEY" AS "KEY", "DT_node_lookup_67".node_id_2 AS node_id_2, "DT_node_data_67".node_id AS node_id, "DT_node_data_67".feature AS feature, "DT_node_data_67".threshold AS threshold, "DT_node_data_67".depth AS depth, "DT_node_data_67".parent_id AS parent_id, "DT_node_data_67"."Score" AS "Score" 
FROM "DT_node_lookup_67" LEFT OUTER JOIN "DT_node_data_67" ON "DT_node_lookup_67".node_id_2 = "DT_node_data_67".node_id), 
"XGB_Tree_6_7" AS 
(SELECT "DT_Output_67"."KEY" AS join_key_6_7, "DT_Output_67"."Score" AS "Score_6_7" 
FROM "DT_Output_67"), 
"DT_node_lookup_68" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_22 < -0.73871) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.19626) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_68" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_35' AS feature, 1.19626 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0508396 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_22' AS feature, -0.73871 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0517783 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0323603 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.104973 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.012122 AS "Score" FROM DUAL) "Values"), 
"DT_Output_68" AS 
(SELECT "DT_node_lookup_68"."KEY" AS "KEY", "DT_node_lookup_68".node_id_2 AS node_id_2, "DT_node_data_68".node_id AS node_id, "DT_node_data_68".feature AS feature, "DT_node_data_68".threshold AS threshold, "DT_node_data_68".depth AS depth, "DT_node_data_68".parent_id AS parent_id, "DT_node_data_68"."Score" AS "Score" 
FROM "DT_node_lookup_68" LEFT OUTER JOIN "DT_node_data_68" ON "DT_node_lookup_68".node_id_2 = "DT_node_data_68".node_id), 
"XGB_Tree_6_8" AS 
(SELECT "DT_Output_68"."KEY" AS join_key_6_8, "DT_Output_68"."Score" AS "Score_6_8" 
FROM "DT_Output_68"), 
"DT_node_lookup_69" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -1.15048) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_56 < -0.0607022) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 1.19626) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_69" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_23' AS feature, -1.15048 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_35' AS feature, 1.19626 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0505048 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_56' AS feature, -0.0607022 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0514813 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0312582 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000400253 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0975247 AS "Score" FROM DUAL) "Values"), 
"DT_Output_69" AS 
(SELECT "DT_node_lookup_69"."KEY" AS "KEY", "DT_node_lookup_69".node_id_2 AS node_id_2, "DT_node_data_69".node_id AS node_id, "DT_node_data_69".feature AS feature, "DT_node_data_69".threshold AS threshold, "DT_node_data_69".depth AS depth, "DT_node_data_69".parent_id AS parent_id, "DT_node_data_69"."Score" AS "Score" 
FROM "DT_node_lookup_69" LEFT OUTER JOIN "DT_node_data_69" ON "DT_node_lookup_69".node_id_2 = "DT_node_data_69".node_id), 
"XGB_Tree_6_9" AS 
(SELECT "DT_Output_69"."KEY" AS join_key_6_9, "DT_Output_69"."Score" AS "Score_6_9" 
FROM "DT_Output_69"), 
"DT_node_lookup_70" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -1.93248) THEN 1 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -0.901493) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.26229) THEN 5 ELSE 6 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_70" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -1.93248 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.317374 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_62' AS feature, -0.901493 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0952616 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_16' AS feature, 1.26229 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0546033 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00180072 AS "Score" FROM DUAL) "Values"), 
"DT_Output_70" AS 
(SELECT "DT_node_lookup_70"."KEY" AS "KEY", "DT_node_lookup_70".node_id_2 AS node_id_2, "DT_node_data_70".node_id AS node_id, "DT_node_data_70".feature AS feature, "DT_node_data_70".threshold AS threshold, "DT_node_data_70".depth AS depth, "DT_node_data_70".parent_id AS parent_id, "DT_node_data_70"."Score" AS "Score" 
FROM "DT_node_lookup_70" LEFT OUTER JOIN "DT_node_data_70" ON "DT_node_lookup_70".node_id_2 = "DT_node_data_70".node_id), 
"XGB_Tree_7_0" AS 
(SELECT "DT_Output_70"."KEY" AS join_key_7_0, "DT_Output_70"."Score" AS "Score_7_0" 
FROM "DT_Output_70"), 
"DT_node_lookup_71" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -0.901493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.300838) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 < 0.390454) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.53682) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.38052) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_71" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -0.901493 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_19' AS feature, -0.300838 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, 1.53682 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_6' AS feature, 0.390454 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0145877 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_55' AS feature, -1.38052 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00847078 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.128574 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.333714 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0364364 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0548279 AS "Score" FROM DUAL) "Values"), 
"DT_Output_71" AS 
(SELECT "DT_node_lookup_71"."KEY" AS "KEY", "DT_node_lookup_71".node_id_2 AS node_id_2, "DT_node_data_71".node_id AS node_id, "DT_node_data_71".feature AS feature, "DT_node_data_71".threshold AS threshold, "DT_node_data_71".depth AS depth, "DT_node_data_71".parent_id AS parent_id, "DT_node_data_71"."Score" AS "Score" 
FROM "DT_node_lookup_71" LEFT OUTER JOIN "DT_node_data_71" ON "DT_node_lookup_71".node_id_2 = "DT_node_data_71".node_id), 
"XGB_Tree_7_1" AS 
(SELECT "DT_Output_71"."KEY" AS join_key_7_1, "DT_Output_71"."Score" AS "Score_7_1" 
FROM "DT_Output_71"), 
"DT_node_lookup_72" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -0.901493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.0488296) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.40469) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.26229) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_72" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -0.901493 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, 0.0488296 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, 1.26229 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_31' AS feature, 0.40469 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538364 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00249358 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.120188 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.264652 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.044773 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.105122 AS "Score" FROM DUAL) "Values"), 
"DT_Output_72" AS 
(SELECT "DT_node_lookup_72"."KEY" AS "KEY", "DT_node_lookup_72".node_id_2 AS node_id_2, "DT_node_data_72".node_id AS node_id, "DT_node_data_72".feature AS feature, "DT_node_data_72".threshold AS threshold, "DT_node_data_72".depth AS depth, "DT_node_data_72".parent_id AS parent_id, "DT_node_data_72"."Score" AS "Score" 
FROM "DT_node_lookup_72" LEFT OUTER JOIN "DT_node_data_72" ON "DT_node_lookup_72".node_id_2 = "DT_node_data_72".node_id), 
"XGB_Tree_7_2" AS 
(SELECT "DT_Output_72"."KEY" AS join_key_7_2, "DT_Output_72"."Score" AS "Score_7_2" 
FROM "DT_Output_72"), 
"DT_node_lookup_73" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -0.901493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.300838) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_6 < 0.159805) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.26229) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_73" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -0.901493 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_19' AS feature, -0.300838 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, 1.26229 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_6' AS feature, 0.159805 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0101298 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0534856 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00250899 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0813825 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.201639 AS "Score" FROM DUAL) "Values"), 
"DT_Output_73" AS 
(SELECT "DT_node_lookup_73"."KEY" AS "KEY", "DT_node_lookup_73".node_id_2 AS node_id_2, "DT_node_data_73".node_id AS node_id, "DT_node_data_73".feature AS feature, "DT_node_data_73".threshold AS threshold, "DT_node_data_73".depth AS depth, "DT_node_data_73".parent_id AS parent_id, "DT_node_data_73"."Score" AS "Score" 
FROM "DT_node_lookup_73" LEFT OUTER JOIN "DT_node_data_73" ON "DT_node_lookup_73".node_id_2 = "DT_node_data_73".node_id), 
"XGB_Tree_7_3" AS 
(SELECT "DT_Output_73"."KEY" AS join_key_7_3, "DT_Output_73"."Score" AS "Score_7_3" 
FROM "DT_Output_73"), 
"DT_node_lookup_74" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.38052) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < -0.113666) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_29 < 0.424253) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.489153) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.53682) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_74" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.38052 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, -0.113666 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, 1.53682 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_29' AS feature, 0.424253 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_31' AS feature, 0.489153 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0533689 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000572242 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.195349 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0694059 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0449063 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0836854 AS "Score" FROM DUAL) "Values"), 
"DT_Output_74" AS 
(SELECT "DT_node_lookup_74"."KEY" AS "KEY", "DT_node_lookup_74".node_id_2 AS node_id_2, "DT_node_data_74".node_id AS node_id, "DT_node_data_74".feature AS feature, "DT_node_data_74".threshold AS threshold, "DT_node_data_74".depth AS depth, "DT_node_data_74".parent_id AS parent_id, "DT_node_data_74"."Score" AS "Score" 
FROM "DT_node_lookup_74" LEFT OUTER JOIN "DT_node_data_74" ON "DT_node_lookup_74".node_id_2 = "DT_node_data_74".node_id), 
"XGB_Tree_7_4" AS 
(SELECT "DT_Output_74"."KEY" AS join_key_7_4, "DT_Output_74"."Score" AS "Score_7_4" 
FROM "DT_Output_74"), 
"DT_node_lookup_75" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.38052) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.536315) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.06877) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.53682) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_75" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.38052 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, 0.536315 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, 1.53682 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_39' AS feature, -1.06877 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00116739 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530322 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000176059 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0149257 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.161688 AS "Score" FROM DUAL) "Values"), 
"DT_Output_75" AS 
(SELECT "DT_node_lookup_75"."KEY" AS "KEY", "DT_node_lookup_75".node_id_2 AS node_id_2, "DT_node_data_75".node_id AS node_id, "DT_node_data_75".feature AS feature, "DT_node_data_75".threshold AS threshold, "DT_node_data_75".depth AS depth, "DT_node_data_75".parent_id AS parent_id, "DT_node_data_75"."Score" AS "Score" 
FROM "DT_node_lookup_75" LEFT OUTER JOIN "DT_node_data_75" ON "DT_node_lookup_75".node_id_2 = "DT_node_data_75".node_id), 
"XGB_Tree_7_5" AS 
(SELECT "DT_Output_75"."KEY" AS join_key_7_5, "DT_Output_75"."Score" AS "Score_7_5" 
FROM "DT_Output_75"), 
"DT_node_lookup_76" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -0.901493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.300838) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -1.93248) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.26229) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_76" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -0.901493 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_19' AS feature, -0.300838 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, 1.26229 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_62' AS feature, -1.93248 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00648513 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526202 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00362341 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.142434 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0741439 AS "Score" FROM DUAL) "Values"), 
"DT_Output_76" AS 
(SELECT "DT_node_lookup_76"."KEY" AS "KEY", "DT_node_lookup_76".node_id_2 AS node_id_2, "DT_node_data_76".node_id AS node_id, "DT_node_data_76".feature AS feature, "DT_node_data_76".threshold AS threshold, "DT_node_data_76".depth AS depth, "DT_node_data_76".parent_id AS parent_id, "DT_node_data_76"."Score" AS "Score" 
FROM "DT_node_lookup_76" LEFT OUTER JOIN "DT_node_data_76" ON "DT_node_lookup_76".node_id_2 = "DT_node_data_76".node_id), 
"XGB_Tree_7_6" AS 
(SELECT "DT_Output_76"."KEY" AS join_key_7_6, "DT_Output_76"."Score" AS "Score_7_6" 
FROM "DT_Output_76"), 
"DT_node_lookup_77" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.38052) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.41038) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < -0.756624) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.53682) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_77" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.38052 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.41038 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, 1.53682 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0266213 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, -0.756624 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0524616 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.000247405 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00420644 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.127602 AS "Score" FROM DUAL) "Values"), 
"DT_Output_77" AS 
(SELECT "DT_node_lookup_77"."KEY" AS "KEY", "DT_node_lookup_77".node_id_2 AS node_id_2, "DT_node_data_77".node_id AS node_id, "DT_node_data_77".feature AS feature, "DT_node_data_77".threshold AS threshold, "DT_node_data_77".depth AS depth, "DT_node_data_77".parent_id AS parent_id, "DT_node_data_77"."Score" AS "Score" 
FROM "DT_node_lookup_77" LEFT OUTER JOIN "DT_node_data_77" ON "DT_node_lookup_77".node_id_2 = "DT_node_data_77".node_id), 
"XGB_Tree_7_7" AS 
(SELECT "DT_Output_77"."KEY" AS join_key_7_7, "DT_Output_77"."Score" AS "Score_7_7" 
FROM "DT_Output_77"), 
"DT_node_lookup_78" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -0.901493) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.536315) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_38 < 0.362839) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_7 < 1.17497) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_78" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_62' AS feature, -0.901493 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_28' AS feature, 0.536315 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 1.17497 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_38' AS feature, 0.362839 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00359169 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530965 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000644865 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0196359 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.115706 AS "Score" FROM DUAL) "Values"), 
"DT_Output_78" AS 
(SELECT "DT_node_lookup_78"."KEY" AS "KEY", "DT_node_lookup_78".node_id_2 AS node_id_2, "DT_node_data_78".node_id AS node_id, "DT_node_data_78".feature AS feature, "DT_node_data_78".threshold AS threshold, "DT_node_data_78".depth AS depth, "DT_node_data_78".parent_id AS parent_id, "DT_node_data_78"."Score" AS "Score" 
FROM "DT_node_lookup_78" LEFT OUTER JOIN "DT_node_data_78" ON "DT_node_lookup_78".node_id_2 = "DT_node_data_78".node_id), 
"XGB_Tree_7_8" AS 
(SELECT "DT_Output_78"."KEY" AS join_key_7_8, "DT_Output_78"."Score" AS "Score_7_8" 
FROM "DT_Output_78"), 
"DT_node_lookup_79" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_55 < -1.38052) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_39 < -1.41038) THEN 3 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_28 < 0.536315) THEN 7 ELSE 8 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_16 < 1.53682) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_79" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_55' AS feature, -1.38052 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_39' AS feature, -1.41038 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_16' AS feature, 1.53682 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0254174 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_28' AS feature, 0.536315 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0519527 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.000634736 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.10919 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00265072 AS "Score" FROM DUAL) "Values"), 
"DT_Output_79" AS 
(SELECT "DT_node_lookup_79"."KEY" AS "KEY", "DT_node_lookup_79".node_id_2 AS node_id_2, "DT_node_data_79".node_id AS node_id, "DT_node_data_79".feature AS feature, "DT_node_data_79".threshold AS threshold, "DT_node_data_79".depth AS depth, "DT_node_data_79".parent_id AS parent_id, "DT_node_data_79"."Score" AS "Score" 
FROM "DT_node_lookup_79" LEFT OUTER JOIN "DT_node_data_79" ON "DT_node_lookup_79".node_id_2 = "DT_node_data_79".node_id), 
"XGB_Tree_7_9" AS 
(SELECT "DT_Output_79"."KEY" AS join_key_7_9, "DT_Output_79"."Score" AS "Score_7_9" 
FROM "DT_Output_79"), 
"DT_node_lookup_80" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 < 0.0136643) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_80" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51102 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_60' AS feature, 0.0136643 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0153374 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0529532 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0278885 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0535191 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00565813 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.267528 AS "Score" FROM DUAL) "Values"), 
"DT_Output_80" AS 
(SELECT "DT_node_lookup_80"."KEY" AS "KEY", "DT_node_lookup_80".node_id_2 AS node_id_2, "DT_node_data_80".node_id AS node_id, "DT_node_data_80".feature AS feature, "DT_node_data_80".threshold AS threshold, "DT_node_data_80".depth AS depth, "DT_node_data_80".parent_id AS parent_id, "DT_node_data_80"."Score" AS "Score" 
FROM "DT_node_lookup_80" LEFT OUTER JOIN "DT_node_data_80" ON "DT_node_lookup_80".node_id_2 = "DT_node_data_80".node_id), 
"XGB_Tree_8_0" AS 
(SELECT "DT_Output_80"."KEY" AS join_key_8_0, "DT_Output_80"."Score" AS "Score_8_0" 
FROM "DT_Output_80"), 
"DT_node_lookup_81" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 < 0.0136643) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < 0.377363) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_81" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51102 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_60' AS feature, 0.0136643 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_37' AS feature, 0.377363 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.014838 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.052485 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0267011 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.053039 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0243413 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.191544 AS "Score" FROM DUAL) "Values"), 
"DT_Output_81" AS 
(SELECT "DT_node_lookup_81"."KEY" AS "KEY", "DT_node_lookup_81".node_id_2 AS node_id_2, "DT_node_data_81".node_id AS node_id, "DT_node_data_81".feature AS feature, "DT_node_data_81".threshold AS threshold, "DT_node_data_81".depth AS depth, "DT_node_data_81".parent_id AS parent_id, "DT_node_data_81"."Score" AS "Score" 
FROM "DT_node_lookup_81" LEFT OUTER JOIN "DT_node_data_81" ON "DT_node_lookup_81".node_id_2 = "DT_node_data_81".node_id), 
"XGB_Tree_8_1" AS 
(SELECT "DT_Output_81"."KEY" AS join_key_8_1, "DT_Output_81"."Score" AS "Score_8_1" 
FROM "DT_Output_81"), 
"DT_node_lookup_82" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.2883) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51102) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < 0.377363) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_82" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.2883 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_23' AS feature, -0.51102 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_37' AS feature, 0.377363 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.014314 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0520356 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0418172 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0337484 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0279366 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.19693 AS "Score" FROM DUAL) "Values"), 
"DT_Output_82" AS 
(SELECT "DT_node_lookup_82"."KEY" AS "KEY", "DT_node_lookup_82".node_id_2 AS node_id_2, "DT_node_data_82".node_id AS node_id, "DT_node_data_82".feature AS feature, "DT_node_data_82".threshold AS threshold, "DT_node_data_82".depth AS depth, "DT_node_data_82".parent_id AS parent_id, "DT_node_data_82"."Score" AS "Score" 
FROM "DT_node_lookup_82" LEFT OUTER JOIN "DT_node_data_82" ON "DT_node_lookup_82".node_id_2 = "DT_node_data_82".node_id), 
"XGB_Tree_8_2" AS 
(SELECT "DT_Output_82"."KEY" AS join_key_8_2, "DT_Output_82"."Score" AS "Score_8_2" 
FROM "DT_Output_82"), 
"DT_node_lookup_83" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.509951) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.562239) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.562272) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_83" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, -0.509951 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_47' AS feature, 0.562239 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, 0.562272 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0139251 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.051578 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0510257 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0169189 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.171917 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0125979 AS "Score" FROM DUAL) "Values"), 
"DT_Output_83" AS 
(SELECT "DT_node_lookup_83"."KEY" AS "KEY", "DT_node_lookup_83".node_id_2 AS node_id_2, "DT_node_data_83".node_id AS node_id, "DT_node_data_83".feature AS feature, "DT_node_data_83".threshold AS threshold, "DT_node_data_83".depth AS depth, "DT_node_data_83".parent_id AS parent_id, "DT_node_data_83"."Score" AS "Score" 
FROM "DT_node_lookup_83" LEFT OUTER JOIN "DT_node_data_83" ON "DT_node_lookup_83".node_id_2 = "DT_node_data_83".node_id), 
"XGB_Tree_8_3" AS 
(SELECT "DT_Output_83"."KEY" AS join_key_8_3, "DT_Output_83"."Score" AS "Score_8_3" 
FROM "DT_Output_83"), 
"DT_node_lookup_84" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_22 < 0.397798) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.106525) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_84" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51102 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_22' AS feature, 0.397798 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_37' AS feature, -0.106525 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0134358 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0511467 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.052181 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0241574 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0475381 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.110617 AS "Score" FROM DUAL) "Values"), 
"DT_Output_84" AS 
(SELECT "DT_node_lookup_84"."KEY" AS "KEY", "DT_node_lookup_84".node_id_2 AS node_id_2, "DT_node_data_84".node_id AS node_id, "DT_node_data_84".feature AS feature, "DT_node_data_84".threshold AS threshold, "DT_node_data_84".depth AS depth, "DT_node_data_84".parent_id AS parent_id, "DT_node_data_84"."Score" AS "Score" 
FROM "DT_node_lookup_84" LEFT OUTER JOIN "DT_node_data_84" ON "DT_node_lookup_84".node_id_2 = "DT_node_data_84".node_id), 
"XGB_Tree_8_4" AS 
(SELECT "DT_Output_84"."KEY" AS join_key_8_4, "DT_Output_84"."Score" AS "Score_8_4" 
FROM "DT_Output_84"), 
"DT_node_lookup_85" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.101152) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.562239) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < 0.753106) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_85" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_44' AS feature, 0.101152 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_47' AS feature, 0.562239 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_53' AS feature, 0.753106 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0128828 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0507064 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0402139 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0314597 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.135375 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.026988 AS "Score" FROM DUAL) "Values"), 
"DT_Output_85" AS 
(SELECT "DT_node_lookup_85"."KEY" AS "KEY", "DT_node_lookup_85".node_id_2 AS node_id_2, "DT_node_data_85".node_id AS node_id, "DT_node_data_85".feature AS feature, "DT_node_data_85".threshold AS threshold, "DT_node_data_85".depth AS depth, "DT_node_data_85".parent_id AS parent_id, "DT_node_data_85"."Score" AS "Score" 
FROM "DT_node_lookup_85" LEFT OUTER JOIN "DT_node_data_85" ON "DT_node_lookup_85".node_id_2 = "DT_node_data_85".node_id), 
"XGB_Tree_8_5" AS 
(SELECT "DT_Output_85"."KEY" AS join_key_8_5, "DT_Output_85"."Score" AS "Score_8_5" 
FROM "DT_Output_85"), 
"DT_node_lookup_86" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_60 < 0.0136643) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.106525) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < 0.595491) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < -0.0102318) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_86" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51102 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_29' AS feature, 0.595491 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_60' AS feature, 0.0136643 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_37' AS feature, -0.106525 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530776 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_53' AS feature, -0.0102318 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0226322 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0517008 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0467796 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0888073 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0506528 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0228178 AS "Score" FROM DUAL) "Values"), 
"DT_Output_86" AS 
(SELECT "DT_node_lookup_86"."KEY" AS "KEY", "DT_node_lookup_86".node_id_2 AS node_id_2, "DT_node_data_86".node_id AS node_id, "DT_node_data_86".feature AS feature, "DT_node_data_86".threshold AS threshold, "DT_node_data_86".depth AS depth, "DT_node_data_86".parent_id AS parent_id, "DT_node_data_86"."Score" AS "Score" 
FROM "DT_node_lookup_86" LEFT OUTER JOIN "DT_node_data_86" ON "DT_node_lookup_86".node_id_2 = "DT_node_data_86".node_id), 
"XGB_Tree_8_6" AS 
(SELECT "DT_Output_86"."KEY" AS join_key_8_6, "DT_Output_86"."Score" AS "Score_8_6" 
FROM "DT_Output_86"), 
"DT_node_lookup_87" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.656514) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_24 < -0.402712) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_15 < 0.239575) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_52 < 0.179319) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < 0.595491) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_53 < -0.0102318) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_87" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.656514 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_24' AS feature, -0.402712 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_29' AS feature, 0.595491 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_15' AS feature, 0.239575 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_52' AS feature, 0.179319 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527833 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_53' AS feature, -0.0102318 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0388214 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0381417 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0103626 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.128806 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0503028 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0215535 AS "Score" FROM DUAL) "Values"), 
"DT_Output_87" AS 
(SELECT "DT_node_lookup_87"."KEY" AS "KEY", "DT_node_lookup_87".node_id_2 AS node_id_2, "DT_node_data_87".node_id AS node_id, "DT_node_data_87".feature AS feature, "DT_node_data_87".threshold AS threshold, "DT_node_data_87".depth AS depth, "DT_node_data_87".parent_id AS parent_id, "DT_node_data_87"."Score" AS "Score" 
FROM "DT_node_lookup_87" LEFT OUTER JOIN "DT_node_data_87" ON "DT_node_lookup_87".node_id_2 = "DT_node_data_87".node_id), 
"XGB_Tree_8_7" AS 
(SELECT "DT_Output_87"."KEY" AS join_key_8_7, "DT_Output_87"."Score" AS "Score_8_7" 
FROM "DT_Output_87"), 
"DT_node_lookup_88" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.385742) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.431939) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.199932) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_88" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51102 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, 0.199932 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_54' AS feature, -0.385742 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, -0.431939 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.038088 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0523244 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0146276 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0487062 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0380488 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0743016 AS "Score" FROM DUAL) "Values"), 
"DT_Output_88" AS 
(SELECT "DT_node_lookup_88"."KEY" AS "KEY", "DT_node_lookup_88".node_id_2 AS node_id_2, "DT_node_data_88".node_id AS node_id, "DT_node_data_88".feature AS feature, "DT_node_data_88".threshold AS threshold, "DT_node_data_88".depth AS depth, "DT_node_data_88".parent_id AS parent_id, "DT_node_data_88"."Score" AS "Score" 
FROM "DT_node_lookup_88" LEFT OUTER JOIN "DT_node_data_88" ON "DT_node_lookup_88".node_id_2 = "DT_node_data_88".node_id), 
"XGB_Tree_8_8" AS 
(SELECT "DT_Output_88"."KEY" AS join_key_8_8, "DT_Output_88"."Score" AS "Score_8_8" 
FROM "DT_Output_88"), 
"DT_node_lookup_89" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_40 < -0.371032) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < -0.51102) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.385742) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -0.431939) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_40 < 0.199932) THEN 5 ELSE 6 END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_89" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_40' AS feature, -0.371032 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, -0.51102 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_40' AS feature, 0.199932 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_54' AS feature, -0.385742 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, -0.431939 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0372268 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0520559 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0135131 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0481837 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0369776 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0669967 AS "Score" FROM DUAL) "Values"), 
"DT_Output_89" AS 
(SELECT "DT_node_lookup_89"."KEY" AS "KEY", "DT_node_lookup_89".node_id_2 AS node_id_2, "DT_node_data_89".node_id AS node_id, "DT_node_data_89".feature AS feature, "DT_node_data_89".threshold AS threshold, "DT_node_data_89".depth AS depth, "DT_node_data_89".parent_id AS parent_id, "DT_node_data_89"."Score" AS "Score" 
FROM "DT_node_lookup_89" LEFT OUTER JOIN "DT_node_data_89" ON "DT_node_lookup_89".node_id_2 = "DT_node_data_89".node_id), 
"XGB_Tree_8_9" AS 
(SELECT "DT_Output_89"."KEY" AS join_key_8_9, "DT_Output_89"."Score" AS "Score_8_9" 
FROM "DT_Output_89"), 
"DT_node_lookup_90" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.995929) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 1.24748) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.509951) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -1.05546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_47 < 0.737715) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_12 < 0.401291) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_90" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_31' AS feature, 0.995929 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 1.24748 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_45' AS feature, -1.05546 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_44' AS feature, -0.509951 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0500726 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_47' AS feature, 0.737715 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_12' AS feature, 0.401291 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0318108 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0549438 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.393428 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.215808 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0489865 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0629371 AS "Score" FROM DUAL) "Values"), 
"DT_Output_90" AS 
(SELECT "DT_node_lookup_90"."KEY" AS "KEY", "DT_node_lookup_90".node_id_2 AS node_id_2, "DT_node_data_90".node_id AS node_id, "DT_node_data_90".feature AS feature, "DT_node_data_90".threshold AS threshold, "DT_node_data_90".depth AS depth, "DT_node_data_90".parent_id AS parent_id, "DT_node_data_90"."Score" AS "Score" 
FROM "DT_node_lookup_90" LEFT OUTER JOIN "DT_node_data_90" ON "DT_node_lookup_90".node_id_2 = "DT_node_data_90".node_id), 
"XGB_Tree_9_0" AS 
(SELECT "DT_Output_90"."KEY" AS join_key_9_0, "DT_Output_90"."Score" AS "Score_9_0" 
FROM "DT_Output_90"), 
"DT_node_lookup_91" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.995929) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 1.24748) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_44 < -0.509951) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < 0.181669) THEN 9 ELSE 10 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < 0.185788) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_91" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_31' AS feature, 0.995929 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 1.24748 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_44' AS feature, -0.509951 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0459745 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_54' AS feature, 0.181669 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_45' AS feature, 0.185788 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0308695 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.054532 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.284278 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0887891 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.00570777 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0525241 AS "Score" FROM DUAL) "Values"), 
"DT_Output_91" AS 
(SELECT "DT_node_lookup_91"."KEY" AS "KEY", "DT_node_lookup_91".node_id_2 AS node_id_2, "DT_node_data_91".node_id AS node_id, "DT_node_data_91".feature AS feature, "DT_node_data_91".threshold AS threshold, "DT_node_data_91".depth AS depth, "DT_node_data_91".parent_id AS parent_id, "DT_node_data_91"."Score" AS "Score" 
FROM "DT_node_lookup_91" LEFT OUTER JOIN "DT_node_data_91" ON "DT_node_lookup_91".node_id_2 = "DT_node_data_91".node_id), 
"XGB_Tree_9_1" AS 
(SELECT "DT_Output_91"."KEY" AS join_key_9_1, "DT_Output_91"."Score" AS "Score_9_1" 
FROM "DT_Output_91"), 
"DT_node_lookup_92" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -1.05546) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.658078) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < -0.355473) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 < -0.512379) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.589995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.608028) THEN 11 ELSE 12 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -2.13868) THEN 13 ELSE 14 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_92" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -1.05546 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.658078 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_45' AS feature, -0.589995 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_31' AS feature, -0.355473 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_35' AS feature, -0.512379 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, 'scaler_23' AS feature, 0.608028 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_62' AS feature, -2.13868 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0520568 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00662008 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.223527 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0353865 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0502722 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0623975 AS "Score" FROM DUAL UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0242872 AS "Score" FROM DUAL UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.052659 AS "Score" FROM DUAL) "Values"), 
"DT_Output_92" AS 
(SELECT "DT_node_lookup_92"."KEY" AS "KEY", "DT_node_lookup_92".node_id_2 AS node_id_2, "DT_node_data_92".node_id AS node_id, "DT_node_data_92".feature AS feature, "DT_node_data_92".threshold AS threshold, "DT_node_data_92".depth AS depth, "DT_node_data_92".parent_id AS parent_id, "DT_node_data_92"."Score" AS "Score" 
FROM "DT_node_lookup_92" LEFT OUTER JOIN "DT_node_data_92" ON "DT_node_lookup_92".node_id_2 = "DT_node_data_92".node_id), 
"XGB_Tree_9_2" AS 
(SELECT "DT_Output_92"."KEY" AS join_key_9_2, "DT_Output_92"."Score" AS "Score_9_2" 
FROM "DT_Output_92"), 
"DT_node_lookup_93" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.827004) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.320228) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 < -0.512379) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.0201803) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.608028) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_93" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.827004 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_19' AS feature, -0.0201803 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_31' AS feature, 0.320228 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_35' AS feature, -0.512379 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0541065 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_23' AS feature, 0.608028 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0353514 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0327205 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.184923 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.03105 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0482099 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0132682 AS "Score" FROM DUAL) "Values"), 
"DT_Output_93" AS 
(SELECT "DT_node_lookup_93"."KEY" AS "KEY", "DT_node_lookup_93".node_id_2 AS node_id_2, "DT_node_data_93".node_id AS node_id, "DT_node_data_93".feature AS feature, "DT_node_data_93".threshold AS threshold, "DT_node_data_93".depth AS depth, "DT_node_data_93".parent_id AS parent_id, "DT_node_data_93"."Score" AS "Score" 
FROM "DT_node_lookup_93" LEFT OUTER JOIN "DT_node_data_93" ON "DT_node_lookup_93".node_id_2 = "DT_node_data_93".node_id), 
"XGB_Tree_9_3" AS 
(SELECT "DT_Output_93"."KEY" AS join_key_9_3, "DT_Output_93"."Score" AS "Score_9_3" 
FROM "DT_Output_93"), 
"DT_node_lookup_94" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.745151) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.827004) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_54 < -0.953153) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_30 < 0.0828681) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_19 < -0.0201803) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.767891) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_94" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.745151 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.827004 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_19' AS feature, -0.0201803 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_54' AS feature, -0.953153 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_30' AS feature, 0.0828681 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0537771 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_23' AS feature, 0.767891 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0331808 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0347527 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.026501 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.155372 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0481743 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0219326 AS "Score" FROM DUAL) "Values"), 
"DT_Output_94" AS 
(SELECT "DT_node_lookup_94"."KEY" AS "KEY", "DT_node_lookup_94".node_id_2 AS node_id_2, "DT_node_data_94".node_id AS node_id, "DT_node_data_94".feature AS feature, "DT_node_data_94".threshold AS threshold, "DT_node_data_94".depth AS depth, "DT_node_data_94".parent_id AS parent_id, "DT_node_data_94"."Score" AS "Score" 
FROM "DT_node_lookup_94" LEFT OUTER JOIN "DT_node_data_94" ON "DT_node_lookup_94".node_id_2 = "DT_node_data_94".node_id), 
"XGB_Tree_9_4" AS 
(SELECT "DT_Output_94"."KEY" AS join_key_9_4, "DT_Output_94"."Score" AS "Score_9_4" 
FROM "DT_Output_94"), 
"DT_node_lookup_95" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.589995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.448164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 < 0.805823) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.330316) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -2.13868) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.751709) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_95" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.589995 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.448164 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_62' AS feature, -2.13868 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_63' AS feature, 0.805823 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, 0.330316 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0192738 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_37' AS feature, -0.751709 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0538263 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00597364 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.134252 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0517044 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0355687 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0536027 AS "Score" FROM DUAL) "Values"), 
"DT_Output_95" AS 
(SELECT "DT_node_lookup_95"."KEY" AS "KEY", "DT_node_lookup_95".node_id_2 AS node_id_2, "DT_node_data_95".node_id AS node_id, "DT_node_data_95".feature AS feature, "DT_node_data_95".threshold AS threshold, "DT_node_data_95".depth AS depth, "DT_node_data_95".parent_id AS parent_id, "DT_node_data_95"."Score" AS "Score" 
FROM "DT_node_lookup_95" LEFT OUTER JOIN "DT_node_data_95" ON "DT_node_lookup_95".node_id_2 = "DT_node_data_95".node_id), 
"XGB_Tree_9_5" AS 
(SELECT "DT_Output_95"."KEY" AS join_key_9_5, "DT_Output_95"."Score" AS "Score_9_5" 
FROM "DT_Output_95"), 
"DT_node_lookup_96" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.589995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.448164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 < 0.805823) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -1.11689) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -2.13868) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.751709) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_96" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.589995 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.448164 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_62' AS feature, -2.13868 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_63' AS feature, 0.805823 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, -1.11689 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0182167 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_37' AS feature, -0.751709 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0534387 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00570774 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0410602 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.119629 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0347114 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0533211 AS "Score" FROM DUAL) "Values"), 
"DT_Output_96" AS 
(SELECT "DT_node_lookup_96"."KEY" AS "KEY", "DT_node_lookup_96".node_id_2 AS node_id_2, "DT_node_data_96".node_id AS node_id, "DT_node_data_96".feature AS feature, "DT_node_data_96".threshold AS threshold, "DT_node_data_96".depth AS depth, "DT_node_data_96".parent_id AS parent_id, "DT_node_data_96"."Score" AS "Score" 
FROM "DT_node_lookup_96" LEFT OUTER JOIN "DT_node_data_96" ON "DT_node_lookup_96".node_id_2 = "DT_node_data_96".node_id), 
"XGB_Tree_9_6" AS 
(SELECT "DT_Output_96"."KEY" AS join_key_9_6, "DT_Output_96"."Score" AS "Score_9_6" 
FROM "DT_Output_96"), 
"DT_node_lookup_97" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.589995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_31 < 0.489153) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.448164) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_35 < 0.341941) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -2.13868) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.751709) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_97" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.589995 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_31' AS feature, 0.489153 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_62' AS feature, -2.13868 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_23' AS feature, 0.448164 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_35' AS feature, 0.341941 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0170108 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_37' AS feature, -0.751709 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0483 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00316406 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.103729 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0438909 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0338832 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530504 AS "Score" FROM DUAL) "Values"), 
"DT_Output_97" AS 
(SELECT "DT_node_lookup_97"."KEY" AS "KEY", "DT_node_lookup_97".node_id_2 AS node_id_2, "DT_node_data_97".node_id AS node_id, "DT_node_data_97".feature AS feature, "DT_node_data_97".threshold AS threshold, "DT_node_data_97".depth AS depth, "DT_node_data_97".parent_id AS parent_id, "DT_node_data_97"."Score" AS "Score" 
FROM "DT_node_lookup_97" LEFT OUTER JOIN "DT_node_data_97" ON "DT_node_lookup_97".node_id_2 = "DT_node_data_97".node_id), 
"XGB_Tree_9_7" AS 
(SELECT "DT_Output_97"."KEY" AS join_key_9_7, "DT_Output_97"."Score" AS "Score_9_7" 
FROM "DT_Output_97"), 
"DT_node_lookup_98" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.589995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.448164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 < 0.805823) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_44 < 0.330316) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -2.13868) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.751709) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_98" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.589995 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.448164 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_62' AS feature, -2.13868 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_63' AS feature, 0.805823 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_44' AS feature, 0.330316 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0158866 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_37' AS feature, -0.751709 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0530195 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00585084 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.095986 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0508898 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.032977 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0527936 AS "Score" FROM DUAL) "Values"), 
"DT_Output_98" AS 
(SELECT "DT_node_lookup_98"."KEY" AS "KEY", "DT_node_lookup_98".node_id_2 AS node_id_2, "DT_node_data_98".node_id AS node_id, "DT_node_data_98".feature AS feature, "DT_node_data_98".threshold AS threshold, "DT_node_data_98".depth AS depth, "DT_node_data_98".parent_id AS parent_id, "DT_node_data_98"."Score" AS "Score" 
FROM "DT_node_lookup_98" LEFT OUTER JOIN "DT_node_data_98" ON "DT_node_lookup_98".node_id_2 = "DT_node_data_98".node_id), 
"XGB_Tree_9_8" AS 
(SELECT "DT_Output_98"."KEY" AS join_key_9_8, "DT_Output_98"."Score" AS "Score_9_8" 
FROM "DT_Output_98"), 
"DT_node_lookup_99" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CASE WHEN ("ADS_sca_2_OUT".scaler_45 < -0.589995) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_23 < 0.448164) THEN CASE WHEN ("ADS_sca_2_OUT".scaler_63 < 0.805823) THEN 7 ELSE 8 END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_29 < -1.11689) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_62 < -2.13868) THEN 5 ELSE CASE WHEN ("ADS_sca_2_OUT".scaler_37 < -0.751709) THEN 11 ELSE 12 END END END AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_99" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, 'scaler_45' AS feature, -0.589995 AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 1 AS node_id, 'scaler_23' AS feature, 0.448164 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 2 AS node_id, 'scaler_62' AS feature, -2.13868 AS threshold, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 3 AS node_id, 'scaler_63' AS feature, 0.805823 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 4 AS node_id, 'scaler_29' AS feature, -1.11689 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0146435 AS "Score" FROM DUAL UNION ALL SELECT 6 AS node_id, 'scaler_37' AS feature, -0.751709 AS threshold, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0 AS "Score" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0526716 AS "Score" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.00576867 AS "Score" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0409324 AS "Score" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.0894837 AS "Score" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0320906 AS "Score" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -0.0525496 AS "Score" FROM DUAL) "Values"), 
"DT_Output_99" AS 
(SELECT "DT_node_lookup_99"."KEY" AS "KEY", "DT_node_lookup_99".node_id_2 AS node_id_2, "DT_node_data_99".node_id AS node_id, "DT_node_data_99".feature AS feature, "DT_node_data_99".threshold AS threshold, "DT_node_data_99".depth AS depth, "DT_node_data_99".parent_id AS parent_id, "DT_node_data_99"."Score" AS "Score" 
FROM "DT_node_lookup_99" LEFT OUTER JOIN "DT_node_data_99" ON "DT_node_lookup_99".node_id_2 = "DT_node_data_99".node_id), 
"XGB_Tree_9_9" AS 
(SELECT "DT_Output_99"."KEY" AS join_key_9_9, "DT_Output_99"."Score" AS "Score_9_9" 
FROM "DT_Output_99"), 
"XGB_Join_CTE" AS 
(SELECT "XGB_Tree_0_0".join_key_0_0 AS join_key_0_0, "XGB_Tree_0_0"."Score_0_0" AS "Score_0_0", "XGB_Tree_0_1".join_key_0_1 AS join_key_0_1, "XGB_Tree_0_1"."Score_0_1" AS "Score_0_1", "XGB_Tree_0_2".join_key_0_2 AS join_key_0_2, "XGB_Tree_0_2"."Score_0_2" AS "Score_0_2", "XGB_Tree_0_3".join_key_0_3 AS join_key_0_3, "XGB_Tree_0_3"."Score_0_3" AS "Score_0_3", "XGB_Tree_0_4".join_key_0_4 AS join_key_0_4, "XGB_Tree_0_4"."Score_0_4" AS "Score_0_4", "XGB_Tree_0_5".join_key_0_5 AS join_key_0_5, "XGB_Tree_0_5"."Score_0_5" AS "Score_0_5", "XGB_Tree_0_6".join_key_0_6 AS join_key_0_6, "XGB_Tree_0_6"."Score_0_6" AS "Score_0_6", "XGB_Tree_0_7".join_key_0_7 AS join_key_0_7, "XGB_Tree_0_7"."Score_0_7" AS "Score_0_7", "XGB_Tree_0_8".join_key_0_8 AS join_key_0_8, "XGB_Tree_0_8"."Score_0_8" AS "Score_0_8", "XGB_Tree_0_9".join_key_0_9 AS join_key_0_9, "XGB_Tree_0_9"."Score_0_9" AS "Score_0_9", "XGB_Tree_1_0".join_key_1_0 AS join_key_1_0, "XGB_Tree_1_0"."Score_1_0" AS "Score_1_0", "XGB_Tree_1_1".join_key_1_1 AS join_key_1_1, "XGB_Tree_1_1"."Score_1_1" AS "Score_1_1", "XGB_Tree_1_2".join_key_1_2 AS join_key_1_2, "XGB_Tree_1_2"."Score_1_2" AS "Score_1_2", "XGB_Tree_1_3".join_key_1_3 AS join_key_1_3, "XGB_Tree_1_3"."Score_1_3" AS "Score_1_3", "XGB_Tree_1_4".join_key_1_4 AS join_key_1_4, "XGB_Tree_1_4"."Score_1_4" AS "Score_1_4", "XGB_Tree_1_5".join_key_1_5 AS join_key_1_5, "XGB_Tree_1_5"."Score_1_5" AS "Score_1_5", "XGB_Tree_1_6".join_key_1_6 AS join_key_1_6, "XGB_Tree_1_6"."Score_1_6" AS "Score_1_6", "XGB_Tree_1_7".join_key_1_7 AS join_key_1_7, "XGB_Tree_1_7"."Score_1_7" AS "Score_1_7", "XGB_Tree_1_8".join_key_1_8 AS join_key_1_8, "XGB_Tree_1_8"."Score_1_8" AS "Score_1_8", "XGB_Tree_1_9".join_key_1_9 AS join_key_1_9, "XGB_Tree_1_9"."Score_1_9" AS "Score_1_9", "XGB_Tree_2_0".join_key_2_0 AS join_key_2_0, "XGB_Tree_2_0"."Score_2_0" AS "Score_2_0", "XGB_Tree_2_1".join_key_2_1 AS join_key_2_1, "XGB_Tree_2_1"."Score_2_1" AS "Score_2_1", "XGB_Tree_2_2".join_key_2_2 AS join_key_2_2, "XGB_Tree_2_2"."Score_2_2" AS "Score_2_2", "XGB_Tree_2_3".join_key_2_3 AS join_key_2_3, "XGB_Tree_2_3"."Score_2_3" AS "Score_2_3", "XGB_Tree_2_4".join_key_2_4 AS join_key_2_4, "XGB_Tree_2_4"."Score_2_4" AS "Score_2_4", "XGB_Tree_2_5".join_key_2_5 AS join_key_2_5, "XGB_Tree_2_5"."Score_2_5" AS "Score_2_5", "XGB_Tree_2_6".join_key_2_6 AS join_key_2_6, "XGB_Tree_2_6"."Score_2_6" AS "Score_2_6", "XGB_Tree_2_7".join_key_2_7 AS join_key_2_7, "XGB_Tree_2_7"."Score_2_7" AS "Score_2_7", "XGB_Tree_2_8".join_key_2_8 AS join_key_2_8, "XGB_Tree_2_8"."Score_2_8" AS "Score_2_8", "XGB_Tree_2_9".join_key_2_9 AS join_key_2_9, "XGB_Tree_2_9"."Score_2_9" AS "Score_2_9", "XGB_Tree_3_0".join_key_3_0 AS join_key_3_0, "XGB_Tree_3_0"."Score_3_0" AS "Score_3_0", "XGB_Tree_3_1".join_key_3_1 AS join_key_3_1, "XGB_Tree_3_1"."Score_3_1" AS "Score_3_1", "XGB_Tree_3_2".join_key_3_2 AS join_key_3_2, "XGB_Tree_3_2"."Score_3_2" AS "Score_3_2", "XGB_Tree_3_3".join_key_3_3 AS join_key_3_3, "XGB_Tree_3_3"."Score_3_3" AS "Score_3_3", "XGB_Tree_3_4".join_key_3_4 AS join_key_3_4, "XGB_Tree_3_4"."Score_3_4" AS "Score_3_4", "XGB_Tree_3_5".join_key_3_5 AS join_key_3_5, "XGB_Tree_3_5"."Score_3_5" AS "Score_3_5", "XGB_Tree_3_6".join_key_3_6 AS join_key_3_6, "XGB_Tree_3_6"."Score_3_6" AS "Score_3_6", "XGB_Tree_3_7".join_key_3_7 AS join_key_3_7, "XGB_Tree_3_7"."Score_3_7" AS "Score_3_7", "XGB_Tree_3_8".join_key_3_8 AS join_key_3_8, "XGB_Tree_3_8"."Score_3_8" AS "Score_3_8", "XGB_Tree_3_9".join_key_3_9 AS join_key_3_9, "XGB_Tree_3_9"."Score_3_9" AS "Score_3_9", "XGB_Tree_4_0".join_key_4_0 AS join_key_4_0, "XGB_Tree_4_0"."Score_4_0" AS "Score_4_0", "XGB_Tree_4_1".join_key_4_1 AS join_key_4_1, "XGB_Tree_4_1"."Score_4_1" AS "Score_4_1", "XGB_Tree_4_2".join_key_4_2 AS join_key_4_2, "XGB_Tree_4_2"."Score_4_2" AS "Score_4_2", "XGB_Tree_4_3".join_key_4_3 AS join_key_4_3, "XGB_Tree_4_3"."Score_4_3" AS "Score_4_3", "XGB_Tree_4_4".join_key_4_4 AS join_key_4_4, "XGB_Tree_4_4"."Score_4_4" AS "Score_4_4", "XGB_Tree_4_5".join_key_4_5 AS join_key_4_5, "XGB_Tree_4_5"."Score_4_5" AS "Score_4_5", "XGB_Tree_4_6".join_key_4_6 AS join_key_4_6, "XGB_Tree_4_6"."Score_4_6" AS "Score_4_6", "XGB_Tree_4_7".join_key_4_7 AS join_key_4_7, "XGB_Tree_4_7"."Score_4_7" AS "Score_4_7", "XGB_Tree_4_8".join_key_4_8 AS join_key_4_8, "XGB_Tree_4_8"."Score_4_8" AS "Score_4_8", "XGB_Tree_4_9".join_key_4_9 AS join_key_4_9, "XGB_Tree_4_9"."Score_4_9" AS "Score_4_9", "XGB_Tree_5_0".join_key_5_0 AS join_key_5_0, "XGB_Tree_5_0"."Score_5_0" AS "Score_5_0", "XGB_Tree_5_1".join_key_5_1 AS join_key_5_1, "XGB_Tree_5_1"."Score_5_1" AS "Score_5_1", "XGB_Tree_5_2".join_key_5_2 AS join_key_5_2, "XGB_Tree_5_2"."Score_5_2" AS "Score_5_2", "XGB_Tree_5_3".join_key_5_3 AS join_key_5_3, "XGB_Tree_5_3"."Score_5_3" AS "Score_5_3", "XGB_Tree_5_4".join_key_5_4 AS join_key_5_4, "XGB_Tree_5_4"."Score_5_4" AS "Score_5_4", "XGB_Tree_5_5".join_key_5_5 AS join_key_5_5, "XGB_Tree_5_5"."Score_5_5" AS "Score_5_5", "XGB_Tree_5_6".join_key_5_6 AS join_key_5_6, "XGB_Tree_5_6"."Score_5_6" AS "Score_5_6", "XGB_Tree_5_7".join_key_5_7 AS join_key_5_7, "XGB_Tree_5_7"."Score_5_7" AS "Score_5_7", "XGB_Tree_5_8".join_key_5_8 AS join_key_5_8, "XGB_Tree_5_8"."Score_5_8" AS "Score_5_8", "XGB_Tree_5_9".join_key_5_9 AS join_key_5_9, "XGB_Tree_5_9"."Score_5_9" AS "Score_5_9", "XGB_Tree_6_0".join_key_6_0 AS join_key_6_0, "XGB_Tree_6_0"."Score_6_0" AS "Score_6_0", "XGB_Tree_6_1".join_key_6_1 AS join_key_6_1, "XGB_Tree_6_1"."Score_6_1" AS "Score_6_1", "XGB_Tree_6_2".join_key_6_2 AS join_key_6_2, "XGB_Tree_6_2"."Score_6_2" AS "Score_6_2", "XGB_Tree_6_3".join_key_6_3 AS join_key_6_3, "XGB_Tree_6_3"."Score_6_3" AS "Score_6_3", "XGB_Tree_6_4".join_key_6_4 AS join_key_6_4, "XGB_Tree_6_4"."Score_6_4" AS "Score_6_4", "XGB_Tree_6_5".join_key_6_5 AS join_key_6_5, "XGB_Tree_6_5"."Score_6_5" AS "Score_6_5", "XGB_Tree_6_6".join_key_6_6 AS join_key_6_6, "XGB_Tree_6_6"."Score_6_6" AS "Score_6_6", "XGB_Tree_6_7".join_key_6_7 AS join_key_6_7, "XGB_Tree_6_7"."Score_6_7" AS "Score_6_7", "XGB_Tree_6_8".join_key_6_8 AS join_key_6_8, "XGB_Tree_6_8"."Score_6_8" AS "Score_6_8", "XGB_Tree_6_9".join_key_6_9 AS join_key_6_9, "XGB_Tree_6_9"."Score_6_9" AS "Score_6_9", "XGB_Tree_7_0".join_key_7_0 AS join_key_7_0, "XGB_Tree_7_0"."Score_7_0" AS "Score_7_0", "XGB_Tree_7_1".join_key_7_1 AS join_key_7_1, "XGB_Tree_7_1"."Score_7_1" AS "Score_7_1", "XGB_Tree_7_2".join_key_7_2 AS join_key_7_2, "XGB_Tree_7_2"."Score_7_2" AS "Score_7_2", "XGB_Tree_7_3".join_key_7_3 AS join_key_7_3, "XGB_Tree_7_3"."Score_7_3" AS "Score_7_3", "XGB_Tree_7_4".join_key_7_4 AS join_key_7_4, "XGB_Tree_7_4"."Score_7_4" AS "Score_7_4", "XGB_Tree_7_5".join_key_7_5 AS join_key_7_5, "XGB_Tree_7_5"."Score_7_5" AS "Score_7_5", "XGB_Tree_7_6".join_key_7_6 AS join_key_7_6, "XGB_Tree_7_6"."Score_7_6" AS "Score_7_6", "XGB_Tree_7_7".join_key_7_7 AS join_key_7_7, "XGB_Tree_7_7"."Score_7_7" AS "Score_7_7", "XGB_Tree_7_8".join_key_7_8 AS join_key_7_8, "XGB_Tree_7_8"."Score_7_8" AS "Score_7_8", "XGB_Tree_7_9".join_key_7_9 AS join_key_7_9, "XGB_Tree_7_9"."Score_7_9" AS "Score_7_9", "XGB_Tree_8_0".join_key_8_0 AS join_key_8_0, "XGB_Tree_8_0"."Score_8_0" AS "Score_8_0", "XGB_Tree_8_1".join_key_8_1 AS join_key_8_1, "XGB_Tree_8_1"."Score_8_1" AS "Score_8_1", "XGB_Tree_8_2".join_key_8_2 AS join_key_8_2, "XGB_Tree_8_2"."Score_8_2" AS "Score_8_2", "XGB_Tree_8_3".join_key_8_3 AS join_key_8_3, "XGB_Tree_8_3"."Score_8_3" AS "Score_8_3", "XGB_Tree_8_4".join_key_8_4 AS join_key_8_4, "XGB_Tree_8_4"."Score_8_4" AS "Score_8_4", "XGB_Tree_8_5".join_key_8_5 AS join_key_8_5, "XGB_Tree_8_5"."Score_8_5" AS "Score_8_5", "XGB_Tree_8_6".join_key_8_6 AS join_key_8_6, "XGB_Tree_8_6"."Score_8_6" AS "Score_8_6", "XGB_Tree_8_7".join_key_8_7 AS join_key_8_7, "XGB_Tree_8_7"."Score_8_7" AS "Score_8_7", "XGB_Tree_8_8".join_key_8_8 AS join_key_8_8, "XGB_Tree_8_8"."Score_8_8" AS "Score_8_8", "XGB_Tree_8_9".join_key_8_9 AS join_key_8_9, "XGB_Tree_8_9"."Score_8_9" AS "Score_8_9", "XGB_Tree_9_0".join_key_9_0 AS join_key_9_0, "XGB_Tree_9_0"."Score_9_0" AS "Score_9_0", "XGB_Tree_9_1".join_key_9_1 AS join_key_9_1, "XGB_Tree_9_1"."Score_9_1" AS "Score_9_1", "XGB_Tree_9_2".join_key_9_2 AS join_key_9_2, "XGB_Tree_9_2"."Score_9_2" AS "Score_9_2", "XGB_Tree_9_3".join_key_9_3 AS join_key_9_3, "XGB_Tree_9_3"."Score_9_3" AS "Score_9_3", "XGB_Tree_9_4".join_key_9_4 AS join_key_9_4, "XGB_Tree_9_4"."Score_9_4" AS "Score_9_4", "XGB_Tree_9_5".join_key_9_5 AS join_key_9_5, "XGB_Tree_9_5"."Score_9_5" AS "Score_9_5", "XGB_Tree_9_6".join_key_9_6 AS join_key_9_6, "XGB_Tree_9_6"."Score_9_6" AS "Score_9_6", "XGB_Tree_9_7".join_key_9_7 AS join_key_9_7, "XGB_Tree_9_7"."Score_9_7" AS "Score_9_7", "XGB_Tree_9_8".join_key_9_8 AS join_key_9_8, "XGB_Tree_9_8"."Score_9_8" AS "Score_9_8", "XGB_Tree_9_9".join_key_9_9 AS join_key_9_9, "XGB_Tree_9_9"."Score_9_9" AS "Score_9_9" 
FROM "XGB_Tree_0_0" LEFT OUTER JOIN "XGB_Tree_0_1" ON "XGB_Tree_0_0".join_key_0_0 = "XGB_Tree_0_1".join_key_0_1 LEFT OUTER JOIN "XGB_Tree_0_2" ON "XGB_Tree_0_2".join_key_0_2 = "XGB_Tree_0_1".join_key_0_1 LEFT OUTER JOIN "XGB_Tree_0_3" ON "XGB_Tree_0_3".join_key_0_3 = "XGB_Tree_0_2".join_key_0_2 LEFT OUTER JOIN "XGB_Tree_0_4" ON "XGB_Tree_0_4".join_key_0_4 = "XGB_Tree_0_3".join_key_0_3 LEFT OUTER JOIN "XGB_Tree_0_5" ON "XGB_Tree_0_5".join_key_0_5 = "XGB_Tree_0_4".join_key_0_4 LEFT OUTER JOIN "XGB_Tree_0_6" ON "XGB_Tree_0_6".join_key_0_6 = "XGB_Tree_0_5".join_key_0_5 LEFT OUTER JOIN "XGB_Tree_0_7" ON "XGB_Tree_0_7".join_key_0_7 = "XGB_Tree_0_6".join_key_0_6 LEFT OUTER JOIN "XGB_Tree_0_8" ON "XGB_Tree_0_8".join_key_0_8 = "XGB_Tree_0_7".join_key_0_7 LEFT OUTER JOIN "XGB_Tree_0_9" ON "XGB_Tree_0_9".join_key_0_9 = "XGB_Tree_0_8".join_key_0_8 LEFT OUTER JOIN "XGB_Tree_1_0" ON "XGB_Tree_1_0".join_key_1_0 = "XGB_Tree_0_9".join_key_0_9 LEFT OUTER JOIN "XGB_Tree_1_1" ON "XGB_Tree_1_1".join_key_1_1 = "XGB_Tree_1_0".join_key_1_0 LEFT OUTER JOIN "XGB_Tree_1_2" ON "XGB_Tree_1_2".join_key_1_2 = "XGB_Tree_1_1".join_key_1_1 LEFT OUTER JOIN "XGB_Tree_1_3" ON "XGB_Tree_1_3".join_key_1_3 = "XGB_Tree_1_2".join_key_1_2 LEFT OUTER JOIN "XGB_Tree_1_4" ON "XGB_Tree_1_4".join_key_1_4 = "XGB_Tree_1_3".join_key_1_3 LEFT OUTER JOIN "XGB_Tree_1_5" ON "XGB_Tree_1_5".join_key_1_5 = "XGB_Tree_1_4".join_key_1_4 LEFT OUTER JOIN "XGB_Tree_1_6" ON "XGB_Tree_1_6".join_key_1_6 = "XGB_Tree_1_5".join_key_1_5 LEFT OUTER JOIN "XGB_Tree_1_7" ON "XGB_Tree_1_7".join_key_1_7 = "XGB_Tree_1_6".join_key_1_6 LEFT OUTER JOIN "XGB_Tree_1_8" ON "XGB_Tree_1_8".join_key_1_8 = "XGB_Tree_1_7".join_key_1_7 LEFT OUTER JOIN "XGB_Tree_1_9" ON "XGB_Tree_1_9".join_key_1_9 = "XGB_Tree_1_8".join_key_1_8 LEFT OUTER JOIN "XGB_Tree_2_0" ON "XGB_Tree_2_0".join_key_2_0 = "XGB_Tree_1_9".join_key_1_9 LEFT OUTER JOIN "XGB_Tree_2_1" ON "XGB_Tree_2_1".join_key_2_1 = "XGB_Tree_2_0".join_key_2_0 LEFT OUTER JOIN "XGB_Tree_2_2" ON "XGB_Tree_2_2".join_key_2_2 = "XGB_Tree_2_1".join_key_2_1 LEFT OUTER JOIN "XGB_Tree_2_3" ON "XGB_Tree_2_3".join_key_2_3 = "XGB_Tree_2_2".join_key_2_2 LEFT OUTER JOIN "XGB_Tree_2_4" ON "XGB_Tree_2_4".join_key_2_4 = "XGB_Tree_2_3".join_key_2_3 LEFT OUTER JOIN "XGB_Tree_2_5" ON "XGB_Tree_2_5".join_key_2_5 = "XGB_Tree_2_4".join_key_2_4 LEFT OUTER JOIN "XGB_Tree_2_6" ON "XGB_Tree_2_6".join_key_2_6 = "XGB_Tree_2_5".join_key_2_5 LEFT OUTER JOIN "XGB_Tree_2_7" ON "XGB_Tree_2_7".join_key_2_7 = "XGB_Tree_2_6".join_key_2_6 LEFT OUTER JOIN "XGB_Tree_2_8" ON "XGB_Tree_2_8".join_key_2_8 = "XGB_Tree_2_7".join_key_2_7 LEFT OUTER JOIN "XGB_Tree_2_9" ON "XGB_Tree_2_9".join_key_2_9 = "XGB_Tree_2_8".join_key_2_8 LEFT OUTER JOIN "XGB_Tree_3_0" ON "XGB_Tree_3_0".join_key_3_0 = "XGB_Tree_2_9".join_key_2_9 LEFT OUTER JOIN "XGB_Tree_3_1" ON "XGB_Tree_3_1".join_key_3_1 = "XGB_Tree_3_0".join_key_3_0 LEFT OUTER JOIN "XGB_Tree_3_2" ON "XGB_Tree_3_2".join_key_3_2 = "XGB_Tree_3_1".join_key_3_1 LEFT OUTER JOIN "XGB_Tree_3_3" ON "XGB_Tree_3_3".join_key_3_3 = "XGB_Tree_3_2".join_key_3_2 LEFT OUTER JOIN "XGB_Tree_3_4" ON "XGB_Tree_3_4".join_key_3_4 = "XGB_Tree_3_3".join_key_3_3 LEFT OUTER JOIN "XGB_Tree_3_5" ON "XGB_Tree_3_5".join_key_3_5 = "XGB_Tree_3_4".join_key_3_4 LEFT OUTER JOIN "XGB_Tree_3_6" ON "XGB_Tree_3_6".join_key_3_6 = "XGB_Tree_3_5".join_key_3_5 LEFT OUTER JOIN "XGB_Tree_3_7" ON "XGB_Tree_3_7".join_key_3_7 = "XGB_Tree_3_6".join_key_3_6 LEFT OUTER JOIN "XGB_Tree_3_8" ON "XGB_Tree_3_8".join_key_3_8 = "XGB_Tree_3_7".join_key_3_7 LEFT OUTER JOIN "XGB_Tree_3_9" ON "XGB_Tree_3_9".join_key_3_9 = "XGB_Tree_3_8".join_key_3_8 LEFT OUTER JOIN "XGB_Tree_4_0" ON "XGB_Tree_4_0".join_key_4_0 = "XGB_Tree_3_9".join_key_3_9 LEFT OUTER JOIN "XGB_Tree_4_1" ON "XGB_Tree_4_1".join_key_4_1 = "XGB_Tree_4_0".join_key_4_0 LEFT OUTER JOIN "XGB_Tree_4_2" ON "XGB_Tree_4_2".join_key_4_2 = "XGB_Tree_4_1".join_key_4_1 LEFT OUTER JOIN "XGB_Tree_4_3" ON "XGB_Tree_4_3".join_key_4_3 = "XGB_Tree_4_2".join_key_4_2 LEFT OUTER JOIN "XGB_Tree_4_4" ON "XGB_Tree_4_4".join_key_4_4 = "XGB_Tree_4_3".join_key_4_3 LEFT OUTER JOIN "XGB_Tree_4_5" ON "XGB_Tree_4_5".join_key_4_5 = "XGB_Tree_4_4".join_key_4_4 LEFT OUTER JOIN "XGB_Tree_4_6" ON "XGB_Tree_4_6".join_key_4_6 = "XGB_Tree_4_5".join_key_4_5 LEFT OUTER JOIN "XGB_Tree_4_7" ON "XGB_Tree_4_7".join_key_4_7 = "XGB_Tree_4_6".join_key_4_6 LEFT OUTER JOIN "XGB_Tree_4_8" ON "XGB_Tree_4_8".join_key_4_8 = "XGB_Tree_4_7".join_key_4_7 LEFT OUTER JOIN "XGB_Tree_4_9" ON "XGB_Tree_4_9".join_key_4_9 = "XGB_Tree_4_8".join_key_4_8 LEFT OUTER JOIN "XGB_Tree_5_0" ON "XGB_Tree_5_0".join_key_5_0 = "XGB_Tree_4_9".join_key_4_9 LEFT OUTER JOIN "XGB_Tree_5_1" ON "XGB_Tree_5_1".join_key_5_1 = "XGB_Tree_5_0".join_key_5_0 LEFT OUTER JOIN "XGB_Tree_5_2" ON "XGB_Tree_5_2".join_key_5_2 = "XGB_Tree_5_1".join_key_5_1 LEFT OUTER JOIN "XGB_Tree_5_3" ON "XGB_Tree_5_3".join_key_5_3 = "XGB_Tree_5_2".join_key_5_2 LEFT OUTER JOIN "XGB_Tree_5_4" ON "XGB_Tree_5_4".join_key_5_4 = "XGB_Tree_5_3".join_key_5_3 LEFT OUTER JOIN "XGB_Tree_5_5" ON "XGB_Tree_5_5".join_key_5_5 = "XGB_Tree_5_4".join_key_5_4 LEFT OUTER JOIN "XGB_Tree_5_6" ON "XGB_Tree_5_6".join_key_5_6 = "XGB_Tree_5_5".join_key_5_5 LEFT OUTER JOIN "XGB_Tree_5_7" ON "XGB_Tree_5_7".join_key_5_7 = "XGB_Tree_5_6".join_key_5_6 LEFT OUTER JOIN "XGB_Tree_5_8" ON "XGB_Tree_5_8".join_key_5_8 = "XGB_Tree_5_7".join_key_5_7 LEFT OUTER JOIN "XGB_Tree_5_9" ON "XGB_Tree_5_9".join_key_5_9 = "XGB_Tree_5_8".join_key_5_8 LEFT OUTER JOIN "XGB_Tree_6_0" ON "XGB_Tree_6_0".join_key_6_0 = "XGB_Tree_5_9".join_key_5_9 LEFT OUTER JOIN "XGB_Tree_6_1" ON "XGB_Tree_6_1".join_key_6_1 = "XGB_Tree_6_0".join_key_6_0 LEFT OUTER JOIN "XGB_Tree_6_2" ON "XGB_Tree_6_2".join_key_6_2 = "XGB_Tree_6_1".join_key_6_1 LEFT OUTER JOIN "XGB_Tree_6_3" ON "XGB_Tree_6_3".join_key_6_3 = "XGB_Tree_6_2".join_key_6_2 LEFT OUTER JOIN "XGB_Tree_6_4" ON "XGB_Tree_6_4".join_key_6_4 = "XGB_Tree_6_3".join_key_6_3 LEFT OUTER JOIN "XGB_Tree_6_5" ON "XGB_Tree_6_5".join_key_6_5 = "XGB_Tree_6_4".join_key_6_4 LEFT OUTER JOIN "XGB_Tree_6_6" ON "XGB_Tree_6_6".join_key_6_6 = "XGB_Tree_6_5".join_key_6_5 LEFT OUTER JOIN "XGB_Tree_6_7" ON "XGB_Tree_6_7".join_key_6_7 = "XGB_Tree_6_6".join_key_6_6 LEFT OUTER JOIN "XGB_Tree_6_8" ON "XGB_Tree_6_8".join_key_6_8 = "XGB_Tree_6_7".join_key_6_7 LEFT OUTER JOIN "XGB_Tree_6_9" ON "XGB_Tree_6_9".join_key_6_9 = "XGB_Tree_6_8".join_key_6_8 LEFT OUTER JOIN "XGB_Tree_7_0" ON "XGB_Tree_7_0".join_key_7_0 = "XGB_Tree_6_9".join_key_6_9 LEFT OUTER JOIN "XGB_Tree_7_1" ON "XGB_Tree_7_1".join_key_7_1 = "XGB_Tree_7_0".join_key_7_0 LEFT OUTER JOIN "XGB_Tree_7_2" ON "XGB_Tree_7_2".join_key_7_2 = "XGB_Tree_7_1".join_key_7_1 LEFT OUTER JOIN "XGB_Tree_7_3" ON "XGB_Tree_7_3".join_key_7_3 = "XGB_Tree_7_2".join_key_7_2 LEFT OUTER JOIN "XGB_Tree_7_4" ON "XGB_Tree_7_4".join_key_7_4 = "XGB_Tree_7_3".join_key_7_3 LEFT OUTER JOIN "XGB_Tree_7_5" ON "XGB_Tree_7_5".join_key_7_5 = "XGB_Tree_7_4".join_key_7_4 LEFT OUTER JOIN "XGB_Tree_7_6" ON "XGB_Tree_7_6".join_key_7_6 = "XGB_Tree_7_5".join_key_7_5 LEFT OUTER JOIN "XGB_Tree_7_7" ON "XGB_Tree_7_7".join_key_7_7 = "XGB_Tree_7_6".join_key_7_6 LEFT OUTER JOIN "XGB_Tree_7_8" ON "XGB_Tree_7_8".join_key_7_8 = "XGB_Tree_7_7".join_key_7_7 LEFT OUTER JOIN "XGB_Tree_7_9" ON "XGB_Tree_7_9".join_key_7_9 = "XGB_Tree_7_8".join_key_7_8 LEFT OUTER JOIN "XGB_Tree_8_0" ON "XGB_Tree_8_0".join_key_8_0 = "XGB_Tree_7_9".join_key_7_9 LEFT OUTER JOIN "XGB_Tree_8_1" ON "XGB_Tree_8_1".join_key_8_1 = "XGB_Tree_8_0".join_key_8_0 LEFT OUTER JOIN "XGB_Tree_8_2" ON "XGB_Tree_8_2".join_key_8_2 = "XGB_Tree_8_1".join_key_8_1 LEFT OUTER JOIN "XGB_Tree_8_3" ON "XGB_Tree_8_3".join_key_8_3 = "XGB_Tree_8_2".join_key_8_2 LEFT OUTER JOIN "XGB_Tree_8_4" ON "XGB_Tree_8_4".join_key_8_4 = "XGB_Tree_8_3".join_key_8_3 LEFT OUTER JOIN "XGB_Tree_8_5" ON "XGB_Tree_8_5".join_key_8_5 = "XGB_Tree_8_4".join_key_8_4 LEFT OUTER JOIN "XGB_Tree_8_6" ON "XGB_Tree_8_6".join_key_8_6 = "XGB_Tree_8_5".join_key_8_5 LEFT OUTER JOIN "XGB_Tree_8_7" ON "XGB_Tree_8_7".join_key_8_7 = "XGB_Tree_8_6".join_key_8_6 LEFT OUTER JOIN "XGB_Tree_8_8" ON "XGB_Tree_8_8".join_key_8_8 = "XGB_Tree_8_7".join_key_8_7 LEFT OUTER JOIN "XGB_Tree_8_9" ON "XGB_Tree_8_9".join_key_8_9 = "XGB_Tree_8_8".join_key_8_8 LEFT OUTER JOIN "XGB_Tree_9_0" ON "XGB_Tree_9_0".join_key_9_0 = "XGB_Tree_8_9".join_key_8_9 LEFT OUTER JOIN "XGB_Tree_9_1" ON "XGB_Tree_9_1".join_key_9_1 = "XGB_Tree_9_0".join_key_9_0 LEFT OUTER JOIN "XGB_Tree_9_2" ON "XGB_Tree_9_2".join_key_9_2 = "XGB_Tree_9_1".join_key_9_1 LEFT OUTER JOIN "XGB_Tree_9_3" ON "XGB_Tree_9_3".join_key_9_3 = "XGB_Tree_9_2".join_key_9_2 LEFT OUTER JOIN "XGB_Tree_9_4" ON "XGB_Tree_9_4".join_key_9_4 = "XGB_Tree_9_3".join_key_9_3 LEFT OUTER JOIN "XGB_Tree_9_5" ON "XGB_Tree_9_5".join_key_9_5 = "XGB_Tree_9_4".join_key_9_4 LEFT OUTER JOIN "XGB_Tree_9_6" ON "XGB_Tree_9_6".join_key_9_6 = "XGB_Tree_9_5".join_key_9_5 LEFT OUTER JOIN "XGB_Tree_9_7" ON "XGB_Tree_9_7".join_key_9_7 = "XGB_Tree_9_6".join_key_9_6 LEFT OUTER JOIN "XGB_Tree_9_8" ON "XGB_Tree_9_8".join_key_9_8 = "XGB_Tree_9_7".join_key_9_7 LEFT OUTER JOIN "XGB_Tree_9_9" ON "XGB_Tree_9_9".join_key_9_9 = "XGB_Tree_9_8".join_key_9_8), 
"XGB_AVG_Scores" AS 
(SELECT "XGB_Join_CTE".join_key_0_0 AS "KEY", "XGB_Join_CTE"."Score_0_0" + "XGB_Join_CTE"."Score_0_1" + "XGB_Join_CTE"."Score_0_2" + "XGB_Join_CTE"."Score_0_3" + "XGB_Join_CTE"."Score_0_4" + "XGB_Join_CTE"."Score_0_5" + "XGB_Join_CTE"."Score_0_6" + "XGB_Join_CTE"."Score_0_7" + "XGB_Join_CTE"."Score_0_8" + "XGB_Join_CTE"."Score_0_9" AS "Score_0", "XGB_Join_CTE"."Score_1_0" + "XGB_Join_CTE"."Score_1_1" + "XGB_Join_CTE"."Score_1_2" + "XGB_Join_CTE"."Score_1_3" + "XGB_Join_CTE"."Score_1_4" + "XGB_Join_CTE"."Score_1_5" + "XGB_Join_CTE"."Score_1_6" + "XGB_Join_CTE"."Score_1_7" + "XGB_Join_CTE"."Score_1_8" + "XGB_Join_CTE"."Score_1_9" AS "Score_1", "XGB_Join_CTE"."Score_2_0" + "XGB_Join_CTE"."Score_2_1" + "XGB_Join_CTE"."Score_2_2" + "XGB_Join_CTE"."Score_2_3" + "XGB_Join_CTE"."Score_2_4" + "XGB_Join_CTE"."Score_2_5" + "XGB_Join_CTE"."Score_2_6" + "XGB_Join_CTE"."Score_2_7" + "XGB_Join_CTE"."Score_2_8" + "XGB_Join_CTE"."Score_2_9" AS "Score_2", "XGB_Join_CTE"."Score_3_0" + "XGB_Join_CTE"."Score_3_1" + "XGB_Join_CTE"."Score_3_2" + "XGB_Join_CTE"."Score_3_3" + "XGB_Join_CTE"."Score_3_4" + "XGB_Join_CTE"."Score_3_5" + "XGB_Join_CTE"."Score_3_6" + "XGB_Join_CTE"."Score_3_7" + "XGB_Join_CTE"."Score_3_8" + "XGB_Join_CTE"."Score_3_9" AS "Score_3", "XGB_Join_CTE"."Score_4_0" + "XGB_Join_CTE"."Score_4_1" + "XGB_Join_CTE"."Score_4_2" + "XGB_Join_CTE"."Score_4_3" + "XGB_Join_CTE"."Score_4_4" + "XGB_Join_CTE"."Score_4_5" + "XGB_Join_CTE"."Score_4_6" + "XGB_Join_CTE"."Score_4_7" + "XGB_Join_CTE"."Score_4_8" + "XGB_Join_CTE"."Score_4_9" AS "Score_4", "XGB_Join_CTE"."Score_5_0" + "XGB_Join_CTE"."Score_5_1" + "XGB_Join_CTE"."Score_5_2" + "XGB_Join_CTE"."Score_5_3" + "XGB_Join_CTE"."Score_5_4" + "XGB_Join_CTE"."Score_5_5" + "XGB_Join_CTE"."Score_5_6" + "XGB_Join_CTE"."Score_5_7" + "XGB_Join_CTE"."Score_5_8" + "XGB_Join_CTE"."Score_5_9" AS "Score_5", "XGB_Join_CTE"."Score_6_0" + "XGB_Join_CTE"."Score_6_1" + "XGB_Join_CTE"."Score_6_2" + "XGB_Join_CTE"."Score_6_3" + "XGB_Join_CTE"."Score_6_4" + "XGB_Join_CTE"."Score_6_5" + "XGB_Join_CTE"."Score_6_6" + "XGB_Join_CTE"."Score_6_7" + "XGB_Join_CTE"."Score_6_8" + "XGB_Join_CTE"."Score_6_9" AS "Score_6", "XGB_Join_CTE"."Score_7_0" + "XGB_Join_CTE"."Score_7_1" + "XGB_Join_CTE"."Score_7_2" + "XGB_Join_CTE"."Score_7_3" + "XGB_Join_CTE"."Score_7_4" + "XGB_Join_CTE"."Score_7_5" + "XGB_Join_CTE"."Score_7_6" + "XGB_Join_CTE"."Score_7_7" + "XGB_Join_CTE"."Score_7_8" + "XGB_Join_CTE"."Score_7_9" AS "Score_7", "XGB_Join_CTE"."Score_8_0" + "XGB_Join_CTE"."Score_8_1" + "XGB_Join_CTE"."Score_8_2" + "XGB_Join_CTE"."Score_8_3" + "XGB_Join_CTE"."Score_8_4" + "XGB_Join_CTE"."Score_8_5" + "XGB_Join_CTE"."Score_8_6" + "XGB_Join_CTE"."Score_8_7" + "XGB_Join_CTE"."Score_8_8" + "XGB_Join_CTE"."Score_8_9" AS "Score_8", "XGB_Join_CTE"."Score_9_0" + "XGB_Join_CTE"."Score_9_1" + "XGB_Join_CTE"."Score_9_2" + "XGB_Join_CTE"."Score_9_3" + "XGB_Join_CTE"."Score_9_4" + "XGB_Join_CTE"."Score_9_5" + "XGB_Join_CTE"."Score_9_6" + "XGB_Join_CTE"."Score_9_7" + "XGB_Join_CTE"."Score_9_8" + "XGB_Join_CTE"."Score_9_9" AS "Score_9" 
FROM "XGB_Join_CTE"), 
orig_cte AS 
(SELECT "XGB_AVG_Scores"."KEY" AS "KEY", "XGB_AVG_Scores"."Score_0" AS "Score_0", "XGB_AVG_Scores"."Score_1" AS "Score_1", "XGB_AVG_Scores"."Score_2" AS "Score_2", "XGB_AVG_Scores"."Score_3" AS "Score_3", "XGB_AVG_Scores"."Score_4" AS "Score_4", "XGB_AVG_Scores"."Score_5" AS "Score_5", "XGB_AVG_Scores"."Score_6" AS "Score_6", "XGB_AVG_Scores"."Score_7" AS "Score_7", "XGB_AVG_Scores"."Score_8" AS "Score_8", "XGB_AVG_Scores"."Score_9" AS "Score_9", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "Proba_4", CAST(NULL AS FLOAT) AS "Proba_5", CAST(NULL AS FLOAT) AS "Proba_6", CAST(NULL AS FLOAT) AS "Proba_7", CAST(NULL AS FLOAT) AS "Proba_8", CAST(NULL AS FLOAT) AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "LogProba_4", CAST(NULL AS FLOAT) AS "LogProba_5", CAST(NULL AS FLOAT) AS "LogProba_6", CAST(NULL AS FLOAT) AS "LogProba_7", CAST(NULL AS FLOAT) AS "LogProba_8", CAST(NULL AS FLOAT) AS "LogProba_9", CAST(NULL AS FLOAT) AS "Decision" 
FROM "XGB_AVG_Scores"), 
score_class_union AS 
(SELECT scu."KEY" AS "KEY", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", (SELECT max(score_class_union."LogProba") AS max_1 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_LogProba", (SELECT max(score_class_union."Proba") AS max_2 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Proba", (SELECT max(score_class_union."Score") AS max_3 
FROM score_class_union 
WHERE orig_cte."KEY" = score_class_union."KEY") AS "max_Score" 
FROM orig_cte), 
score_soft_max_comp AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."max_LogProba" AS "max_LogProba", score_max."max_Proba" AS "max_Proba", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3", exp(score_max."Score_4" - score_max."max_Score") AS "exp_delta_Score_4", exp(score_max."Score_5" - score_max."max_Score") AS "exp_delta_Score_5", exp(score_max."Score_6" - score_max."max_Score") AS "exp_delta_Score_6", exp(score_max."Score_7" - score_max."max_Score") AS "exp_delta_Score_7", exp(score_max."Score_8" - score_max."max_Score") AS "exp_delta_Score_8", exp(score_max."Score_9" - score_max."max_Score") AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."LogProba" AS "LogProba", soft_scu."Proba" AS "Proba", soft_scu."Score" AS "Score", soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_comp."KEY" AS "KEY", 0 AS class, score_soft_max_comp."LogProba_0" AS "LogProba", score_soft_max_comp."Proba_0" AS "Proba", score_soft_max_comp."Score_0" AS "Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 1 AS class, score_soft_max_comp."LogProba_1" AS "LogProba", score_soft_max_comp."Proba_1" AS "Proba", score_soft_max_comp."Score_1" AS "Score", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 2 AS class, score_soft_max_comp."LogProba_2" AS "LogProba", score_soft_max_comp."Proba_2" AS "Proba", score_soft_max_comp."Score_2" AS "Score", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 3 AS class, score_soft_max_comp."LogProba_3" AS "LogProba", score_soft_max_comp."Proba_3" AS "Proba", score_soft_max_comp."Score_3" AS "Score", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 4 AS class, score_soft_max_comp."LogProba_4" AS "LogProba", score_soft_max_comp."Proba_4" AS "Proba", score_soft_max_comp."Score_4" AS "Score", score_soft_max_comp."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 5 AS class, score_soft_max_comp."LogProba_5" AS "LogProba", score_soft_max_comp."Proba_5" AS "Proba", score_soft_max_comp."Score_5" AS "Score", score_soft_max_comp."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 6 AS class, score_soft_max_comp."LogProba_6" AS "LogProba", score_soft_max_comp."Proba_6" AS "Proba", score_soft_max_comp."Score_6" AS "Score", score_soft_max_comp."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 7 AS class, score_soft_max_comp."LogProba_7" AS "LogProba", score_soft_max_comp."Proba_7" AS "Proba", score_soft_max_comp."Score_7" AS "Score", score_soft_max_comp."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 8 AS class, score_soft_max_comp."LogProba_8" AS "LogProba", score_soft_max_comp."Proba_8" AS "Proba", score_soft_max_comp."Score_8" AS "Score", score_soft_max_comp."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_comp UNION ALL SELECT score_soft_max_comp."KEY" AS "KEY", 9 AS class, score_soft_max_comp."LogProba_9" AS "LogProba", score_soft_max_comp."Proba_9" AS "Proba", score_soft_max_comp."Score_9" AS "Score", score_soft_max_comp."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_comp) soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_comp."KEY" AS "KEY", score_soft_max_comp."Score_0" AS "Score_0", score_soft_max_comp."Score_1" AS "Score_1", score_soft_max_comp."Score_2" AS "Score_2", score_soft_max_comp."Score_3" AS "Score_3", score_soft_max_comp."Score_4" AS "Score_4", score_soft_max_comp."Score_5" AS "Score_5", score_soft_max_comp."Score_6" AS "Score_6", score_soft_max_comp."Score_7" AS "Score_7", score_soft_max_comp."Score_8" AS "Score_8", score_soft_max_comp."Score_9" AS "Score_9", score_soft_max_comp."Proba_0" AS "Proba_0", score_soft_max_comp."Proba_1" AS "Proba_1", score_soft_max_comp."Proba_2" AS "Proba_2", score_soft_max_comp."Proba_3" AS "Proba_3", score_soft_max_comp."Proba_4" AS "Proba_4", score_soft_max_comp."Proba_5" AS "Proba_5", score_soft_max_comp."Proba_6" AS "Proba_6", score_soft_max_comp."Proba_7" AS "Proba_7", score_soft_max_comp."Proba_8" AS "Proba_8", score_soft_max_comp."Proba_9" AS "Proba_9", score_soft_max_comp."LogProba_0" AS "LogProba_0", score_soft_max_comp."LogProba_1" AS "LogProba_1", score_soft_max_comp."LogProba_2" AS "LogProba_2", score_soft_max_comp."LogProba_3" AS "LogProba_3", score_soft_max_comp."LogProba_4" AS "LogProba_4", score_soft_max_comp."LogProba_5" AS "LogProba_5", score_soft_max_comp."LogProba_6" AS "LogProba_6", score_soft_max_comp."LogProba_7" AS "LogProba_7", score_soft_max_comp."LogProba_8" AS "LogProba_8", score_soft_max_comp."LogProba_9" AS "LogProba_9", score_soft_max_comp."Decision" AS "Decision", score_soft_max_comp."max_LogProba" AS "max_LogProba", score_soft_max_comp."max_Proba" AS "max_Proba", score_soft_max_comp."max_Score" AS "max_Score", score_soft_max_comp."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_comp."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_comp."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_comp."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_comp."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_comp."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_comp."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_comp."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_comp."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_comp."exp_delta_Score_9" AS "exp_delta_Score_9", (SELECT sum(score_class_union_soft."exp_delta_Score") AS sum_1 
FROM score_class_union_soft 
WHERE score_soft_max_comp."KEY" = score_class_union_soft."KEY") AS "sum_ExpDeltaScore" 
FROM score_soft_max_comp), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."max_LogProba" AS "max_LogProba", score_soft_max."max_Proba" AS "max_Proba", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", (SELECT min(score_class_union.class) AS min_1 
FROM score_class_union 
WHERE score_soft_max."max_LogProba" = score_class_union."LogProba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_LogProba", (SELECT min(score_class_union.class) AS min_2 
FROM score_class_union 
WHERE score_soft_max."max_Proba" = score_class_union."Proba" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Proba", (SELECT min(score_class_union.class) AS min_3 
FROM score_class_union 
WHERE score_soft_max."max_Score" = score_class_union."Score" AND score_soft_max."KEY" = score_class_union."KEY") AS "arg_max_Score", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max)
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 0.0) THEN ln(arg_max_cte."SoftProba_4") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 0.0) THEN ln(arg_max_cte."SoftProba_5") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 0.0) THEN ln(arg_max_cte."SoftProba_6") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 0.0) THEN ln(arg_max_cte."SoftProba_7") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 0.0) THEN ln(arg_max_cte."SoftProba_8") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 0.0) THEN ln(arg_max_cte."SoftProba_9") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_9", arg_max_cte."arg_max_Score" AS "Decision" 
FROM arg_max_cte