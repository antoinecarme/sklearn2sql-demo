-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` < 0.94765) THEN CASE WHEN (`ADS`.`Feature_7` < -0.808043) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_1` < 0.177638) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.94765 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, -0.808043 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.968 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -15.3071 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_1' AS feature, 0.177638 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.73375 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.77177 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`XGB_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` < 0.76967) THEN CASE WHEN (`ADS`.`Feature_7` < -0.671857) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_3` < -0.933735) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.76967 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, -0.671857 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.1962 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -14.1119 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_3' AS feature, -0.933735 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.08541 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.32826 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`XGB_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` < 0.94765) THEN CASE WHEN (`ADS`.`Feature_1` < 0.669098) THEN CASE WHEN (`ADS`.`Feature_7` < -0.671857) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.94765 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.669098 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.1878 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_7' AS feature, -0.671857 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.66889 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -12.8183 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.54485 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`XGB_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` < 0.94765) THEN CASE WHEN (`ADS`.`Feature_1` < 0.0597814) THEN CASE WHEN (`ADS`.`Feature_6` < -0.360285) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS`.`Feature_5` < 0.179248) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.94765 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.0597814 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.476 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_6' AS feature, -0.360285 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_5' AS feature, 0.179248 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -13.3433 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.07604 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.03315 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.02169 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`XGB_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` < 0.594603) THEN CASE WHEN (`ADS`.`Feature_7` < -0.597332) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_3` < -0.933735) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_4` < 0.177481) THEN 5 ELSE 6 END END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.594603 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, -0.597332 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.177481 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -11.2837 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_3' AS feature, -0.933735 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.47696 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 20.1269 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.883 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.99773 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`XGB_Tree_4` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Estimator` AS `Estimator_4` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` < 0.594603) THEN CASE WHEN (`ADS`.`Feature_1` < 0.0597814) THEN CASE WHEN (`ADS`.`Feature_6` < -0.315538) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_5` < 0.179248) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_4` < 0.177481) THEN 5 ELSE 6 END END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.594603 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.0597814 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.177481 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_6' AS feature, -0.315538 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_5' AS feature, 0.179248 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.96838 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.2972 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -12.9009 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.45146 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.8068 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.43294 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`XGB_Tree_5` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Estimator` AS `Estimator_5` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` < 0.594603) THEN CASE WHEN (`ADS`.`Feature_7` < -0.597332) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_3` < -0.901156) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_4` < 0.177481) THEN 5 ELSE 6 END END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.594603 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, -0.597332 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_4' AS feature, 0.177481 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.83549 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_3' AS feature, -0.901156 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.50703 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.6338 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -6.22492 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.73931 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`XGB_Tree_6` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_6, `DT_Output_6`.`Estimator` AS `Estimator_6` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` < 1.0928) THEN CASE WHEN (`ADS`.`Feature_5` < -0.0879655) THEN CASE WHEN (`ADS`.`Feature_2` < -0.313986) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS`.`Feature_3` < -0.502706) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 1.0928 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_5' AS feature, -0.0879655 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.5671 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, -0.313986 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_3' AS feature, -0.502706 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -10.8934 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.12476 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.60676 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.80612 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`XGB_Tree_7` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_7, `DT_Output_7`.`Estimator` AS `Estimator_7` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_9` < 0.94765) THEN CASE WHEN (`ADS`.`Feature_1` < 0.0597814) THEN CASE WHEN (`ADS`.`Feature_8` < -0.545448) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS`.`Feature_5` < 0.179248) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_9' AS feature, 0.94765 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.0597814 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.8597 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_8' AS feature, -0.545448 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_5' AS feature, 0.179248 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -11.0354 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -1.09528 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.975345 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.8503 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`XGB_Tree_8` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_8, `DT_Output_8`.`Estimator` AS `Estimator_8` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_2` < 1.0928) THEN CASE WHEN (`ADS`.`Feature_1` < 0.669098) THEN CASE WHEN (`ADS`.`Feature_9` < 0.375945) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id_2 
FROM `RandomReg_10` AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 1.0928 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 0.669098 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.8435 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_9' AS feature, 0.375945 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.41183 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.25365 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.11233 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`XGB_Tree_9` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_9, `DT_Output_9`.`Estimator` AS `Estimator_9` 
FROM `DT_Output_9`), 
`XGB_Join_CTE` AS 
(SELECT `XGB_Tree_0`.join_key_0 AS join_key_0, `XGB_Tree_0`.`Estimator_0` AS `Estimator_0`, `XGB_Tree_1`.join_key_1 AS join_key_1, `XGB_Tree_1`.`Estimator_1` AS `Estimator_1`, `XGB_Tree_2`.join_key_2 AS join_key_2, `XGB_Tree_2`.`Estimator_2` AS `Estimator_2`, `XGB_Tree_3`.join_key_3 AS join_key_3, `XGB_Tree_3`.`Estimator_3` AS `Estimator_3`, `XGB_Tree_4`.join_key_4 AS join_key_4, `XGB_Tree_4`.`Estimator_4` AS `Estimator_4`, `XGB_Tree_5`.join_key_5 AS join_key_5, `XGB_Tree_5`.`Estimator_5` AS `Estimator_5`, `XGB_Tree_6`.join_key_6 AS join_key_6, `XGB_Tree_6`.`Estimator_6` AS `Estimator_6`, `XGB_Tree_7`.join_key_7 AS join_key_7, `XGB_Tree_7`.`Estimator_7` AS `Estimator_7`, `XGB_Tree_8`.join_key_8 AS join_key_8, `XGB_Tree_8`.`Estimator_8` AS `Estimator_8`, `XGB_Tree_9`.join_key_9 AS join_key_9, `XGB_Tree_9`.`Estimator_9` AS `Estimator_9` 
FROM `XGB_Tree_0` LEFT OUTER JOIN `XGB_Tree_1` ON `XGB_Tree_0`.join_key_0 = `XGB_Tree_1`.join_key_1 LEFT OUTER JOIN `XGB_Tree_2` ON `XGB_Tree_2`.join_key_2 = `XGB_Tree_1`.join_key_1 LEFT OUTER JOIN `XGB_Tree_3` ON `XGB_Tree_3`.join_key_3 = `XGB_Tree_2`.join_key_2 LEFT OUTER JOIN `XGB_Tree_4` ON `XGB_Tree_4`.join_key_4 = `XGB_Tree_3`.join_key_3 LEFT OUTER JOIN `XGB_Tree_5` ON `XGB_Tree_5`.join_key_5 = `XGB_Tree_4`.join_key_4 LEFT OUTER JOIN `XGB_Tree_6` ON `XGB_Tree_6`.join_key_6 = `XGB_Tree_5`.join_key_5 LEFT OUTER JOIN `XGB_Tree_7` ON `XGB_Tree_7`.join_key_7 = `XGB_Tree_6`.join_key_6 LEFT OUTER JOIN `XGB_Tree_8` ON `XGB_Tree_8`.join_key_8 = `XGB_Tree_7`.join_key_7 LEFT OUTER JOIN `XGB_Tree_9` ON `XGB_Tree_9`.join_key_9 = `XGB_Tree_8`.join_key_8), 
`XGB_AVG_Scores` AS 
(SELECT `XGB_Join_CTE`.join_key_0 AS `KEY`, `XGB_Join_CTE`.`Estimator_0` + `XGB_Join_CTE`.`Estimator_1` + `XGB_Join_CTE`.`Estimator_2` + `XGB_Join_CTE`.`Estimator_3` + `XGB_Join_CTE`.`Estimator_4` + `XGB_Join_CTE`.`Estimator_5` + `XGB_Join_CTE`.`Estimator_6` + `XGB_Join_CTE`.`Estimator_7` + `XGB_Join_CTE`.`Estimator_8` + `XGB_Join_CTE`.`Estimator_9` + 0.5 AS `Estimator` 
FROM `XGB_Join_CTE`)
 SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `XGB_AVG_Scores`