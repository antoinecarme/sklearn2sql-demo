-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_244` < 0.55102) THEN CASE WHEN (`ADS`.`Feature_35` < -0.351066) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_454` < 0.829174) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_244' AS feature, 0.55102 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_35' AS feature, -0.351066 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.1478 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.96368 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_454' AS feature, 0.829174 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -22.2103 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -2.16215 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`XGB_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_244` < 0.55102) THEN CASE WHEN (`ADS`.`Feature_94` < 0.437632) THEN CASE WHEN (`ADS`.`Feature_320` < 0.111123) THEN 5 ELSE 6 END ELSE 4 END ELSE 2 END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_244' AS feature, 0.55102 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_94' AS feature, 0.437632 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.6138 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_320' AS feature, 0.111123 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.97912 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -19.328 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.13941 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`XGB_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_440` < 0.875023) THEN CASE WHEN (`ADS`.`Feature_320` < 0.111123) THEN CASE WHEN (`ADS`.`Feature_238` < 0.182381) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS`.`Feature_387` < -0.175017) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_440' AS feature, 0.875023 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_320' AS feature, 0.111123 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.9038 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_238' AS feature, 0.182381 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_387' AS feature, -0.175017 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -9.6787 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -22.8076 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.394 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -4.98662 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`XGB_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_320` < 0.408037) THEN CASE WHEN (`ADS`.`Feature_35` < -0.530606) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_454` < 0.0656127) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS`.`Feature_460` < 0.428987) THEN 5 ELSE 6 END END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_320' AS feature, 0.408037 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_35' AS feature, -0.530606 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_460' AS feature, 0.428987 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.25968 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_454' AS feature, 0.0656127 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.2676 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.496556 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -20.001 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.79122 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`XGB_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_244` < 0.55102) THEN CASE WHEN (`ADS`.`Feature_462` < -0.136593) THEN 3 ELSE CASE WHEN (`ADS`.`Feature_244` < -0.519206) THEN 5 ELSE 6 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_244' AS feature, 0.55102 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_462' AS feature, -0.136593 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.0788 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.92012 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_244' AS feature, -0.519206 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -17.0004 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.98099 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`XGB_Tree_4` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Estimator` AS `Estimator_4` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` < 0.568076) THEN CASE WHEN (`ADS`.`Feature_320` < 0.0359237) THEN CASE WHEN (`ADS`.`Feature_440` < -0.357209) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_168` < -0.0906275) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_478` < -0.300353) THEN 5 ELSE 6 END END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.568076 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_320' AS feature, 0.0359237 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_478' AS feature, -0.300353 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_440' AS feature, -0.357209 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_168' AS feature, -0.0906275 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 21.6288 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.38206 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -19.3966 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.54607 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.82085 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.44008 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`XGB_Tree_5` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Estimator` AS `Estimator_5` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_440` < 0.908689) THEN CASE WHEN (`ADS`.`Feature_320` < 0.111123) THEN CASE WHEN (`ADS`.`Feature_38` < 0.414487) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS`.`Feature_387` < -0.175017) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_440' AS feature, 0.908689 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_320' AS feature, 0.111123 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.8323 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_38' AS feature, 0.414487 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_387' AS feature, -0.175017 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -6.66168 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -17.4305 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.9618 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -3.56966 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`XGB_Tree_6` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_6, `DT_Output_6`.`Estimator` AS `Estimator_6` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` < 0.568076) THEN CASE WHEN (`ADS`.`Feature_244` < 0.757055) THEN CASE WHEN (`ADS`.`Feature_138` < 0.855489) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_59` < -0.0700419) THEN 5 ELSE 6 END END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.568076 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_244' AS feature, 0.757055 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_59' AS feature, -0.0700419 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_138' AS feature, 0.855489 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.29825 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.268415 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.8069 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.43516 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -15.7695 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`XGB_Tree_7` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_7, `DT_Output_7`.`Estimator` AS `Estimator_7` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_320` < 0.909604) THEN CASE WHEN (`ADS`.`Feature_440` < -0.179301) THEN CASE WHEN (`ADS`.`Feature_146` < 0.39476) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS`.`Feature_19` < 0.165062) THEN 7 ELSE 8 END END ELSE 2 END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_320' AS feature, 0.909604 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_440' AS feature, -0.179301 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.8969 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_146' AS feature, 0.39476 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_19' AS feature, 0.165062 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -7.85243 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -16.3144 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.14099 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.54491 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`XGB_Tree_8` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_8, `DT_Output_8`.`Estimator` AS `Estimator_8` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_11` < 0.568076) THEN CASE WHEN (`ADS`.`Feature_320` < 0.0359237) THEN CASE WHEN (`ADS`.`Feature_440` < -0.415121) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_403` < 0.260108) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_59` < -0.0700419) THEN 5 ELSE 6 END END AS node_id_2 
FROM `RandomReg_500` AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_11' AS feature, 0.568076 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_320' AS feature, 0.0359237 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_59' AS feature, -0.0700419 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_440' AS feature, -0.415121 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_403' AS feature, 0.260108 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -0.11282 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 16.3085 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -15.1036 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.03978 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.63946 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, -5.13839 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`XGB_Tree_9` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_9, `DT_Output_9`.`Estimator` AS `Estimator_9` 
FROM `DT_Output_9`), 
`XGB_Join_CTE` AS 
(SELECT `XGB_Tree_0`.join_key_0 AS join_key_0, `XGB_Tree_0`.`Estimator_0` AS `Estimator_0`, `XGB_Tree_1`.join_key_1 AS join_key_1, `XGB_Tree_1`.`Estimator_1` AS `Estimator_1`, `XGB_Tree_2`.join_key_2 AS join_key_2, `XGB_Tree_2`.`Estimator_2` AS `Estimator_2`, `XGB_Tree_3`.join_key_3 AS join_key_3, `XGB_Tree_3`.`Estimator_3` AS `Estimator_3`, `XGB_Tree_4`.join_key_4 AS join_key_4, `XGB_Tree_4`.`Estimator_4` AS `Estimator_4`, `XGB_Tree_5`.join_key_5 AS join_key_5, `XGB_Tree_5`.`Estimator_5` AS `Estimator_5`, `XGB_Tree_6`.join_key_6 AS join_key_6, `XGB_Tree_6`.`Estimator_6` AS `Estimator_6`, `XGB_Tree_7`.join_key_7 AS join_key_7, `XGB_Tree_7`.`Estimator_7` AS `Estimator_7`, `XGB_Tree_8`.join_key_8 AS join_key_8, `XGB_Tree_8`.`Estimator_8` AS `Estimator_8`, `XGB_Tree_9`.join_key_9 AS join_key_9, `XGB_Tree_9`.`Estimator_9` AS `Estimator_9` 
FROM `XGB_Tree_0` LEFT OUTER JOIN `XGB_Tree_1` ON `XGB_Tree_0`.join_key_0 = `XGB_Tree_1`.join_key_1 LEFT OUTER JOIN `XGB_Tree_2` ON `XGB_Tree_2`.join_key_2 = `XGB_Tree_1`.join_key_1 LEFT OUTER JOIN `XGB_Tree_3` ON `XGB_Tree_3`.join_key_3 = `XGB_Tree_2`.join_key_2 LEFT OUTER JOIN `XGB_Tree_4` ON `XGB_Tree_4`.join_key_4 = `XGB_Tree_3`.join_key_3 LEFT OUTER JOIN `XGB_Tree_5` ON `XGB_Tree_5`.join_key_5 = `XGB_Tree_4`.join_key_4 LEFT OUTER JOIN `XGB_Tree_6` ON `XGB_Tree_6`.join_key_6 = `XGB_Tree_5`.join_key_5 LEFT OUTER JOIN `XGB_Tree_7` ON `XGB_Tree_7`.join_key_7 = `XGB_Tree_6`.join_key_6 LEFT OUTER JOIN `XGB_Tree_8` ON `XGB_Tree_8`.join_key_8 = `XGB_Tree_7`.join_key_7 LEFT OUTER JOIN `XGB_Tree_9` ON `XGB_Tree_9`.join_key_9 = `XGB_Tree_8`.join_key_8), 
`XGB_AVG_Scores` AS 
(SELECT `XGB_Join_CTE`.join_key_0 AS `KEY`, `XGB_Join_CTE`.`Estimator_0` + `XGB_Join_CTE`.`Estimator_1` + `XGB_Join_CTE`.`Estimator_2` + `XGB_Join_CTE`.`Estimator_3` + `XGB_Join_CTE`.`Estimator_4` + `XGB_Join_CTE`.`Estimator_5` + `XGB_Join_CTE`.`Estimator_6` + `XGB_Join_CTE`.`Estimator_7` + `XGB_Join_CTE`.`Estimator_8` + `XGB_Join_CTE`.`Estimator_9` + 0.5 AS `Estimator` 
FROM `XGB_Join_CTE`)
 SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `XGB_AVG_Scores`