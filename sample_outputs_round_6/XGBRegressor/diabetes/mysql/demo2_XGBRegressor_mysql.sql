-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < 0.000707642) THEN CASE WHEN (`ADS`.`Feature_2` < 0.00618888) THEN CASE WHEN (`ADS`.`Feature_6` < 0.0210278) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_2` < 0.0471457) THEN CASE WHEN (`ADS`.`Feature_0` < -0.0127796) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.000707642 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.00618888 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.0471457 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_6' AS feature, 0.0210278 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 15.1484 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.0127796 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 23.1913 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.9492 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.66557 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.8261 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.2619 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`XGB_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < -0.000168884) THEN CASE WHEN (`ADS`.`Feature_2` < 0.00618888) THEN CASE WHEN (`ADS`.`Feature_8` < -0.00943149) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_2` < -0.0218342) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_2` < 0.068702) THEN 9 ELSE 10 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.000168884 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.00618888 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.0218342 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_8' AS feature, -0.00943149 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.6809 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.7055 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 0.068702 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.51565 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.954 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.0182 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 22.8294 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`XGB_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < 0.000707642) THEN CASE WHEN (`ADS`.`Feature_2` < 0.00618888) THEN CASE WHEN (`ADS`.`Feature_6` < 0.0210278) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_3` < 0.0253152) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_2` < -0.0218342) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_9` < 0.0382723) THEN 11 ELSE 12 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.000707642 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.00618888 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, -0.0218342 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_6' AS feature, 0.0210278 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_3' AS feature, 0.0253152 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.58 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_9' AS feature, 0.0382723 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.98811 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.94743 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.1137 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.8542 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.7293 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 19.1499 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`XGB_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < -0.00105392) THEN CASE WHEN (`ADS`.`Feature_3` < 0.0373653) THEN CASE WHEN (`ADS`.`Feature_6` < 0.0652075) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_6` < 0.0118237) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_3` < 0.0367915) THEN CASE WHEN (`ADS`.`Feature_2` < -0.0202175) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_2` < 0.0131947) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00105392 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.0373653 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.0367915 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_6' AS feature, 0.0652075 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_6' AS feature, 0.0118237 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, -0.0202175 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 0.0131947 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.62514 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.90729 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.041 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.11379 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.59515 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.1101 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.8126 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 18.4499 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`XGB_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < -0.00943149) THEN CASE WHEN (`ADS`.`Feature_2` < 0.00618888) THEN CASE WHEN (`ADS`.`Feature_2` < -0.011595) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_0` < 0.0144644) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_2` < 0.068702) THEN CASE WHEN (`ADS`.`Feature_9` < 0.0382723) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00943149 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.00618888 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.068702 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, -0.011595 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_0' AS feature, 0.0144644 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 0.0382723 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 17.4498 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.47999 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.22821 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.8681 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.67187 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.3211 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 13.983 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`XGB_Tree_4` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Estimator` AS `Estimator_4` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < 0.000707642) THEN CASE WHEN (`ADS`.`Feature_2` < 0.0245117) THEN CASE WHEN (`ADS`.`Feature_8` < -0.0432788) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_3` < 0.004658) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_3` < 0.0385129) THEN CASE WHEN (`ADS`.`Feature_2` < -0.0234509) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_2` < 0.0131947) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, 0.000707642 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0245117 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.0385129 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_8' AS feature, -0.0432788 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_3' AS feature, 0.004658 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, -0.0234509 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 0.0131947 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.5468 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.57514 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.0189 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.0587 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.40828 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.6984 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.4854 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 15.425 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`XGB_Tree_5` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Estimator` AS `Estimator_5` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < -0.00943149) THEN CASE WHEN (`ADS`.`Feature_2` < 0.00618888) THEN CASE WHEN (`ADS`.`Feature_2` < -0.0590187) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_0` < 0.0144644) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_2` < 0.068702) THEN CASE WHEN (`ADS`.`Feature_9` < 0.025846) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00943149 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.00618888 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.068702 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, -0.0590187 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_0' AS feature, 0.0144644 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 0.025846 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 14.5204 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.41438 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.33194 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.93498 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.20662 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.05605 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 11.0719 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`XGB_Tree_6` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_6, `DT_Output_6`.`Estimator` AS `Estimator_6` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < -0.000168884) THEN CASE WHEN (`ADS`.`Feature_3` < 0.0390867) THEN CASE WHEN (`ADS`.`Feature_1` < 0.00301924) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_8` < -0.0301394) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_3` < 0.0385129) THEN CASE WHEN (`ADS`.`Feature_9` < 0.0299881) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS`.`Feature_2` < 0.0131947) THEN 13 ELSE 14 END END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.000168884 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 0.0390867 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_3' AS feature, 0.0385129 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_1' AS feature, 0.00301924 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_8' AS feature, -0.0301394 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_9' AS feature, 0.0299881 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 0.0131947 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.37137 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.49301 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.30912 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.45869 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 6.73789 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.0742 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.58345 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.8321 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`XGB_Tree_7` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_7, `DT_Output_7`.`Estimator` AS `Estimator_7` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_8` < -0.00943149) THEN CASE WHEN (`ADS`.`Feature_2` < 0.0245117) THEN CASE WHEN (`ADS`.`Feature_6` < 0.0210278) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS`.`Feature_2` < 0.068702) THEN CASE WHEN (`ADS`.`Feature_0` < -0.0327586) THEN 9 ELSE 10 END ELSE 6 END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_8' AS feature, -0.00943149 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_2' AS feature, 0.0245117 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.068702 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_6' AS feature, 0.0210278 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.84575 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, -0.0327586 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 12.0714 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.85536 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.13887 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.7435 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 8.06013 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`XGB_Tree_8` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_8, `DT_Output_8`.`Estimator` AS `Estimator_8` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_3` < 0.0367915) THEN CASE WHEN (`ADS`.`Feature_7` < 0.0313568) THEN CASE WHEN (`ADS`.`Feature_2` < 0.00618888) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS`.`Feature_1` < 0.00301924) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS`.`Feature_6` < 0.0210278) THEN CASE WHEN (`ADS`.`Feature_2` < 0.0131947) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM diabetes AS `ADS`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 0.0367915 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'Feature_7' AS feature, 0.0313568 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'Feature_6' AS feature, 0.0210278 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 0.00618888 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'Feature_1' AS feature, 0.00301924 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'Feature_2' AS feature, 0.0131947 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 4.6663 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.46318 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.94721 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 9.06466 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 5.91607 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 7.41377 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 10.6869 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`XGB_Tree_9` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_9, `DT_Output_9`.`Estimator` AS `Estimator_9` 
FROM `DT_Output_9`), 
`XGB_Join_CTE` AS 
(SELECT `XGB_Tree_0`.join_key_0 AS join_key_0, `XGB_Tree_0`.`Estimator_0` AS `Estimator_0`, `XGB_Tree_1`.join_key_1 AS join_key_1, `XGB_Tree_1`.`Estimator_1` AS `Estimator_1`, `XGB_Tree_2`.join_key_2 AS join_key_2, `XGB_Tree_2`.`Estimator_2` AS `Estimator_2`, `XGB_Tree_3`.join_key_3 AS join_key_3, `XGB_Tree_3`.`Estimator_3` AS `Estimator_3`, `XGB_Tree_4`.join_key_4 AS join_key_4, `XGB_Tree_4`.`Estimator_4` AS `Estimator_4`, `XGB_Tree_5`.join_key_5 AS join_key_5, `XGB_Tree_5`.`Estimator_5` AS `Estimator_5`, `XGB_Tree_6`.join_key_6 AS join_key_6, `XGB_Tree_6`.`Estimator_6` AS `Estimator_6`, `XGB_Tree_7`.join_key_7 AS join_key_7, `XGB_Tree_7`.`Estimator_7` AS `Estimator_7`, `XGB_Tree_8`.join_key_8 AS join_key_8, `XGB_Tree_8`.`Estimator_8` AS `Estimator_8`, `XGB_Tree_9`.join_key_9 AS join_key_9, `XGB_Tree_9`.`Estimator_9` AS `Estimator_9` 
FROM `XGB_Tree_0` LEFT OUTER JOIN `XGB_Tree_1` ON `XGB_Tree_0`.join_key_0 = `XGB_Tree_1`.join_key_1 LEFT OUTER JOIN `XGB_Tree_2` ON `XGB_Tree_2`.join_key_2 = `XGB_Tree_1`.join_key_1 LEFT OUTER JOIN `XGB_Tree_3` ON `XGB_Tree_3`.join_key_3 = `XGB_Tree_2`.join_key_2 LEFT OUTER JOIN `XGB_Tree_4` ON `XGB_Tree_4`.join_key_4 = `XGB_Tree_3`.join_key_3 LEFT OUTER JOIN `XGB_Tree_5` ON `XGB_Tree_5`.join_key_5 = `XGB_Tree_4`.join_key_4 LEFT OUTER JOIN `XGB_Tree_6` ON `XGB_Tree_6`.join_key_6 = `XGB_Tree_5`.join_key_5 LEFT OUTER JOIN `XGB_Tree_7` ON `XGB_Tree_7`.join_key_7 = `XGB_Tree_6`.join_key_6 LEFT OUTER JOIN `XGB_Tree_8` ON `XGB_Tree_8`.join_key_8 = `XGB_Tree_7`.join_key_7 LEFT OUTER JOIN `XGB_Tree_9` ON `XGB_Tree_9`.join_key_9 = `XGB_Tree_8`.join_key_8), 
`XGB_AVG_Scores` AS 
(SELECT `XGB_Join_CTE`.join_key_0 AS `KEY`, `XGB_Join_CTE`.`Estimator_0` + `XGB_Join_CTE`.`Estimator_1` + `XGB_Join_CTE`.`Estimator_2` + `XGB_Join_CTE`.`Estimator_3` + `XGB_Join_CTE`.`Estimator_4` + `XGB_Join_CTE`.`Estimator_5` + `XGB_Join_CTE`.`Estimator_6` + `XGB_Join_CTE`.`Estimator_7` + `XGB_Join_CTE`.`Estimator_8` + `XGB_Join_CTE`.`Estimator_9` + 0.5 AS `Estimator` 
FROM `XGB_Join_CTE`)
 SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `XGB_AVG_Scores`