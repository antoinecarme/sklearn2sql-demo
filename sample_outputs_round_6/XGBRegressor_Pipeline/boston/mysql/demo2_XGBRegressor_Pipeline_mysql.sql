-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 3.26981218289 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 11.814159292 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 10.9415929204 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.0796460176991 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN 0.552612684366 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN 6.31431563422 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN 67.1421828909 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN 3.83938820059 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 9.43362831858 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 404.619469027 ELSE `ADS`.`Feature_9` END AS impter_11, CASE WHEN (`ADS`.`Feature_10` IS NULL) THEN 18.3663716814 ELSE `ADS`.`Feature_10` END AS impter_12, CASE WHEN (`ADS`.`Feature_11` IS NULL) THEN 359.759587021 ELSE `ADS`.`Feature_11` END AS impter_13, CASE WHEN (`ADS`.`Feature_12` IS NULL) THEN 12.3942772861 ELSE `ADS`.`Feature_12` END AS impter_14 
FROM boston AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - 3.26981218289) / 8.06435679573 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 11.814159292) / 23.6845226609 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 10.9415929204) / 6.91219450398 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.0796460176991) / 0.270744398952 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - 0.552612684366) / 0.116521457827 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - 6.31431563422) / 0.713158124818 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - 67.1421828909) / 28.1589507917 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - 3.83938820059) / 2.09968835038 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 9.43362831858) / 8.61076650564 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 404.619469027) / 168.750972129 AS scaler_11, (CAST(`ADS_imp_1_OUT`.impter_12 AS DOUBLE) - 18.3663716814) / 2.15547367794 AS scaler_12, (CAST(`ADS_imp_1_OUT`.impter_13 AS DOUBLE) - 359.759587021) / 89.5754249699 AS scaler_13, (CAST(`ADS_imp_1_OUT`.impter_14 AS DOUBLE) - 12.3942772861) / 6.97945748877 AS scaler_14 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < -0.382448) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 1.15919) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.319262) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 1.06824) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_13 < -2.07026) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 < 1.05034) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -0.382448 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 1.15919 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_14' AS feature, 1.06824 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_7' AS feature, 0.319262 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.98714 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_13' AS feature, -2.07026 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_6' AS feature, 1.05034 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.30607 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.8316 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.22692 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.93007 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.42087 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.985556 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`XGB_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, `DT_Output`.`Estimator` AS `Estimator_0` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < -0.382448) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 1.57424) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.479816) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 0.345403) THEN 5 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 < 0.432429) THEN 9 ELSE 10 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -0.382448 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 1.57424 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_14' AS feature, 0.345403 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_7' AS feature, 0.479816 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.87498 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.82948 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_6' AS feature, 0.432429 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.13166 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.70397 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.57123 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.10608 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`XGB_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, `DT_Output_1`.`Estimator` AS `Estimator_1` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.716089) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 0.287375) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < -0.396059) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 < 0.451625) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 1.57424) THEN 5 ELSE 6 END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.716089 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, 0.287375 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 1.57424 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_14' AS feature, -0.396059 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_2' AS feature, 0.451625 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.37014 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.50363 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.99807 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.62973 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.35194 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.911269 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`XGB_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, `DT_Output_2`.`Estimator` AS `Estimator_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.921513) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 0.273047) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.319262) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 < 0.466758) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 1.57424) THEN 5 ELSE 6 END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.921513 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, 0.273047 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_7' AS feature, 1.57424 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_7' AS feature, 0.319262 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_6' AS feature, 0.466758 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.20542 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 3.16787 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5718 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.02078 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.31114 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.896827 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`XGB_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, `DT_Output_3`.`Estimator` AS `Estimator_3` 
FROM `DT_Output_3`), 
`DT_node_lookup_4` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < -0.399641) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.884354) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_8 < 0.573807) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 1.57424) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 1.06824) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_13 < -2.50972) THEN 11 ELSE 12 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 < 0.432429) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_4` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -0.399641 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.884354 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_14' AS feature, 1.06824 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_8' AS feature, 0.573807 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, 1.57424 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_13' AS feature, -2.50972 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_6' AS feature, 0.432429 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.56078 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.23579 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.12304 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.86428 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.762762 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2821 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.02104 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.647067 AS `Estimator`) AS `Values`), 
`DT_Output_4` AS 
(SELECT `DT_node_lookup_4`.`KEY` AS `KEY`, `DT_node_lookup_4`.node_id_2 AS node_id_2, `DT_node_data_4`.node_id AS node_id, `DT_node_data_4`.feature AS feature, `DT_node_data_4`.threshold AS threshold, `DT_node_data_4`.depth AS depth, `DT_node_data_4`.parent_id AS parent_id, `DT_node_data_4`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_4` LEFT OUTER JOIN `DT_node_data_4` ON `DT_node_lookup_4`.node_id_2 = `DT_node_data_4`.node_id), 
`XGB_Tree_4` AS 
(SELECT `DT_Output_4`.`KEY` AS join_key_4, `DT_Output_4`.`Estimator` AS `Estimator_4` 
FROM `DT_Output_4`), 
`DT_node_lookup_5` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < -1.02147) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 1.56863) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 0.34397) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.319262) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_2 < 0.363938) THEN 9 ELSE 10 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_5` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -1.02147 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 1.56863 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_14' AS feature, 0.34397 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.91117 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.67073 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 0.319262 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_2' AS feature, 0.363938 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.26173 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.64386 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.989168 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.653388 AS `Estimator`) AS `Values`), 
`DT_Output_5` AS 
(SELECT `DT_node_lookup_5`.`KEY` AS `KEY`, `DT_node_lookup_5`.node_id_2 AS node_id_2, `DT_node_data_5`.node_id AS node_id, `DT_node_data_5`.feature AS feature, `DT_node_data_5`.threshold AS threshold, `DT_node_data_5`.depth AS depth, `DT_node_data_5`.parent_id AS parent_id, `DT_node_data_5`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_5` LEFT OUTER JOIN `DT_node_data_5` ON `DT_node_lookup_5`.node_id_2 = `DT_node_data_5`.node_id), 
`XGB_Tree_5` AS 
(SELECT `DT_Output_5`.`KEY` AS join_key_5, `DT_Output_5`.`Estimator` AS `Estimator_5` 
FROM `DT_Output_5`), 
`DT_node_lookup_6` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < -1.02147) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 1.56863) THEN 3 ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 0.34397) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 < -0.989786) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 < 0.432429) THEN 9 ELSE 10 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_6` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -1.02147 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 1.56863 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_14' AS feature, 0.34397 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.72622 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.41771 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_4' AS feature, -0.989786 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_6' AS feature, 0.432429 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.50999 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.13818 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.95985 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.630776 AS `Estimator`) AS `Values`), 
`DT_Output_6` AS 
(SELECT `DT_node_lookup_6`.`KEY` AS `KEY`, `DT_node_lookup_6`.node_id_2 AS node_id_2, `DT_node_data_6`.node_id AS node_id, `DT_node_data_6`.feature AS feature, `DT_node_data_6`.threshold AS threshold, `DT_node_data_6`.depth AS depth, `DT_node_data_6`.parent_id AS parent_id, `DT_node_data_6`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_6` LEFT OUTER JOIN `DT_node_data_6` ON `DT_node_lookup_6`.node_id_2 = `DT_node_data_6`.node_id), 
`XGB_Tree_6` AS 
(SELECT `DT_Output_6`.`KEY` AS join_key_6, `DT_Output_6`.`Estimator` AS `Estimator_6` 
FROM `DT_Output_6`), 
`DT_node_lookup_7` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.716089) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 0.243675) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 < -0.935657) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 < -0.874267) THEN 9 ELSE 10 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 < 0.247569) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 1.57424) THEN 11 ELSE 12 END ELSE 6 END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_7` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_7' AS feature, 0.716089 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_14' AS feature, 0.243675 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_12' AS feature, 0.247569 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_9' AS feature, -0.935657 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_9' AS feature, -0.874267 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 1.57424 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.993655 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.71096 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.04373 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.535514 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.845941 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.54926 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.2433 AS `Estimator`) AS `Values`), 
`DT_Output_7` AS 
(SELECT `DT_node_lookup_7`.`KEY` AS `KEY`, `DT_node_lookup_7`.node_id_2 AS node_id_2, `DT_node_data_7`.node_id AS node_id, `DT_node_data_7`.feature AS feature, `DT_node_data_7`.threshold AS threshold, `DT_node_data_7`.depth AS depth, `DT_node_data_7`.parent_id AS parent_id, `DT_node_data_7`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_7` LEFT OUTER JOIN `DT_node_data_7` ON `DT_node_lookup_7`.node_id_2 = `DT_node_data_7`.node_id), 
`XGB_Tree_7` AS 
(SELECT `DT_Output_7`.`KEY` AS join_key_7, `DT_Output_7`.`Estimator` AS `Estimator_7` 
FROM `DT_Output_7`), 
`DT_node_lookup_8` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < -0.396059) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.884354) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_4 < 0.352046) THEN 7 ELSE 8 END ELSE 4 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_9 < -0.874267) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_6 < 1.00314) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_13 < 0.0772021) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_8` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -0.396059 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_7' AS feature, 0.884354 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_9' AS feature, -0.874267 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_4' AS feature, 0.352046 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.73664 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_6' AS feature, 1.00314 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_13' AS feature, 0.0772021 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.02347 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.6548 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.6928 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.421439 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.574007 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.864005 AS `Estimator`) AS `Values`), 
`DT_Output_8` AS 
(SELECT `DT_node_lookup_8`.`KEY` AS `KEY`, `DT_node_lookup_8`.node_id_2 AS node_id_2, `DT_node_data_8`.node_id AS node_id, `DT_node_data_8`.feature AS feature, `DT_node_data_8`.threshold AS threshold, `DT_node_data_8`.depth AS depth, `DT_node_data_8`.parent_id AS parent_id, `DT_node_data_8`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_8` LEFT OUTER JOIN `DT_node_data_8` ON `DT_node_lookup_8`.node_id_2 = `DT_node_data_8`.node_id), 
`XGB_Tree_8` AS 
(SELECT `DT_Output_8`.`KEY` AS join_key_8, `DT_Output_8`.`Estimator` AS `Estimator_8` 
FROM `DT_Output_8`), 
`DT_node_lookup_9` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < -1.03293) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_9 < -0.300968) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.668413) THEN 7 ELSE 8 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_14 < 0.34397) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_7 < 0.298229) THEN 9 ELSE 10 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_12 < 0.59552) THEN 11 ELSE 12 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_9` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_14' AS feature, -1.03293 AS threshold, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_9' AS feature, -0.300968 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_14' AS feature, 0.34397 AS threshold, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 2.0033 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_7' AS feature, 0.668413 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_7' AS feature, 0.298229 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_12' AS feature, 0.59552 AS threshold, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.948703 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.47289 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.819779 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.10049 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.765156 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.452378 AS `Estimator`) AS `Values`), 
`DT_Output_9` AS 
(SELECT `DT_node_lookup_9`.`KEY` AS `KEY`, `DT_node_lookup_9`.node_id_2 AS node_id_2, `DT_node_data_9`.node_id AS node_id, `DT_node_data_9`.feature AS feature, `DT_node_data_9`.threshold AS threshold, `DT_node_data_9`.depth AS depth, `DT_node_data_9`.parent_id AS parent_id, `DT_node_data_9`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_9` LEFT OUTER JOIN `DT_node_data_9` ON `DT_node_lookup_9`.node_id_2 = `DT_node_data_9`.node_id), 
`XGB_Tree_9` AS 
(SELECT `DT_Output_9`.`KEY` AS join_key_9, `DT_Output_9`.`Estimator` AS `Estimator_9` 
FROM `DT_Output_9`), 
`XGB_Join_CTE` AS 
(SELECT `XGB_Tree_0`.join_key_0 AS join_key_0, `XGB_Tree_0`.`Estimator_0` AS `Estimator_0`, `XGB_Tree_1`.join_key_1 AS join_key_1, `XGB_Tree_1`.`Estimator_1` AS `Estimator_1`, `XGB_Tree_2`.join_key_2 AS join_key_2, `XGB_Tree_2`.`Estimator_2` AS `Estimator_2`, `XGB_Tree_3`.join_key_3 AS join_key_3, `XGB_Tree_3`.`Estimator_3` AS `Estimator_3`, `XGB_Tree_4`.join_key_4 AS join_key_4, `XGB_Tree_4`.`Estimator_4` AS `Estimator_4`, `XGB_Tree_5`.join_key_5 AS join_key_5, `XGB_Tree_5`.`Estimator_5` AS `Estimator_5`, `XGB_Tree_6`.join_key_6 AS join_key_6, `XGB_Tree_6`.`Estimator_6` AS `Estimator_6`, `XGB_Tree_7`.join_key_7 AS join_key_7, `XGB_Tree_7`.`Estimator_7` AS `Estimator_7`, `XGB_Tree_8`.join_key_8 AS join_key_8, `XGB_Tree_8`.`Estimator_8` AS `Estimator_8`, `XGB_Tree_9`.join_key_9 AS join_key_9, `XGB_Tree_9`.`Estimator_9` AS `Estimator_9` 
FROM `XGB_Tree_0` LEFT OUTER JOIN `XGB_Tree_1` ON `XGB_Tree_0`.join_key_0 = `XGB_Tree_1`.join_key_1 LEFT OUTER JOIN `XGB_Tree_2` ON `XGB_Tree_2`.join_key_2 = `XGB_Tree_1`.join_key_1 LEFT OUTER JOIN `XGB_Tree_3` ON `XGB_Tree_3`.join_key_3 = `XGB_Tree_2`.join_key_2 LEFT OUTER JOIN `XGB_Tree_4` ON `XGB_Tree_4`.join_key_4 = `XGB_Tree_3`.join_key_3 LEFT OUTER JOIN `XGB_Tree_5` ON `XGB_Tree_5`.join_key_5 = `XGB_Tree_4`.join_key_4 LEFT OUTER JOIN `XGB_Tree_6` ON `XGB_Tree_6`.join_key_6 = `XGB_Tree_5`.join_key_5 LEFT OUTER JOIN `XGB_Tree_7` ON `XGB_Tree_7`.join_key_7 = `XGB_Tree_6`.join_key_6 LEFT OUTER JOIN `XGB_Tree_8` ON `XGB_Tree_8`.join_key_8 = `XGB_Tree_7`.join_key_7 LEFT OUTER JOIN `XGB_Tree_9` ON `XGB_Tree_9`.join_key_9 = `XGB_Tree_8`.join_key_8), 
`XGB_AVG_Scores` AS 
(SELECT `XGB_Join_CTE`.join_key_0 AS `KEY`, `XGB_Join_CTE`.`Estimator_0` + `XGB_Join_CTE`.`Estimator_1` + `XGB_Join_CTE`.`Estimator_2` + `XGB_Join_CTE`.`Estimator_3` + `XGB_Join_CTE`.`Estimator_4` + `XGB_Join_CTE`.`Estimator_5` + `XGB_Join_CTE`.`Estimator_6` + `XGB_Join_CTE`.`Estimator_7` + `XGB_Join_CTE`.`Estimator_8` + `XGB_Join_CTE`.`Estimator_9` + 0.5 AS `Estimator` 
FROM `XGB_Join_CTE`)
 SELECT `XGB_AVG_Scores`.`KEY` AS `KEY`, `XGB_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `XGB_AVG_Scores`