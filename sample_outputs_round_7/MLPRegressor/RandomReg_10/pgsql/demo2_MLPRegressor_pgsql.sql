-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", "ADS"."Feature_0" AS "Feature_0", "ADS"."Feature_1" AS "Feature_1", "ADS"."Feature_2" AS "Feature_2", "ADS"."Feature_3" AS "Feature_3", "ADS"."Feature_4" AS "Feature_4", "ADS"."Feature_5" AS "Feature_5", "ADS"."Feature_6" AS "Feature_6", "ADS"."Feature_7" AS "Feature_7", "ADS"."Feature_8" AS "Feature_8", "ADS"."Feature_9" AS "Feature_9" 
FROM "RandomReg_10" AS "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.527932194969 * "IL"."Feature_0" + 5.29407625331 * "IL"."Feature_1" + 4.23391055007 * "IL"."Feature_2" + 4.96040330683 * "IL"."Feature_3" + 4.91949499492 * "IL"."Feature_4" + 9.69281218118 * "IL"."Feature_5" + 3.92478329015 * "IL"."Feature_6" + 7.06659135859 * "IL"."Feature_7" + 7.35667247956 * "IL"."Feature_8" + 5.40858721989 * "IL"."Feature_9" + 0.158989227771 AS "NEUR_1_1", -6.89624762982 * "IL"."Feature_0" + -22.5758943122 * "IL"."Feature_1" + -30.7158915631 * "IL"."Feature_2" + -20.3015777354 * "IL"."Feature_3" + 13.852324756 * "IL"."Feature_4" + -27.8615021557 * "IL"."Feature_5" + -41.284762614 * "IL"."Feature_6" + -29.8528117858 * "IL"."Feature_7" + -43.9148239168 * "IL"."Feature_8" + 11.9410496449 * "IL"."Feature_9" + -2.25837561804 AS "NEUR_1_2", 11.6014354585 * "IL"."Feature_0" + 6.91648430443 * "IL"."Feature_1" + 9.69741768442 * "IL"."Feature_2" + -10.8956943329 * "IL"."Feature_3" + 6.11829031684 * "IL"."Feature_4" + 1.00642710649 * "IL"."Feature_5" + 2.14938211074 * "IL"."Feature_6" + 4.90563667935 * "IL"."Feature_7" + 11.3124800634 * "IL"."Feature_8" + -3.07671464283 * "IL"."Feature_9" + -10.4625817028 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -5.02091115454 * "HL_1_relu"."NEUR_1_1" + 0.0121209836072 * "HL_1_relu"."NEUR_1_2" + -4.2054555985 * "HL_1_relu"."NEUR_1_3" + -0.896875076204 AS "NEUR_2_1", 5.20777362282 * "HL_1_relu"."NEUR_1_1" + 12.4861127445 * "HL_1_relu"."NEUR_1_2" + 1.32693894987 * "HL_1_relu"."NEUR_1_3" + -28.3720297268 AS "NEUR_2_2", -2.48701386411 * "HL_1_relu"."NEUR_1_1" + 0.735092818391 * "HL_1_relu"."NEUR_1_2" + -12.5562269294 * "HL_1_relu"."NEUR_1_3" + 5.36062064868 AS "NEUR_2_3", 0.457419668942 * "HL_1_relu"."NEUR_1_1" + -0.555524273685 * "HL_1_relu"."NEUR_1_2" + -1.20241576416 * "HL_1_relu"."NEUR_1_3" + -0.815928076739 AS "NEUR_2_4", -0.446115752686 * "HL_1_relu"."NEUR_1_1" + 0.854169742116 * "HL_1_relu"."NEUR_1_2" + -1.19842536974 * "HL_1_relu"."NEUR_1_3" + -0.444219676983 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.611021721039 * "HL_2_relu"."NEUR_2_1" + 1.57462135108 * "HL_2_relu"."NEUR_2_2" + -26.053342486 * "HL_2_relu"."NEUR_2_3" + 1.16888880721 * "HL_2_relu"."NEUR_2_4" + -0.888889136712 * "HL_2_relu"."NEUR_2_5" + 37.7133131169 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"