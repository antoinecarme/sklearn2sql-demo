-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 37.1024906382 ELSE `ADS`.`Feature_0` END AS `imputer_output_2`, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 820.420898922 ELSE `ADS`.`Feature_1` END AS `imputer_output_3`, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.566181762373 ELSE `ADS`.`Feature_2` END AS `imputer_output_4`, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 6.66448350657 ELSE `ADS`.`Feature_3` END AS `imputer_output_5` 
FROM `freidman3` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.`imputer_output_2` AS FLOAT) - 37.1024906382) / 27.2361073362 AS `scaler_output_2`, (CAST(`ADS_imp_1_OUT`.`imputer_output_3` AS FLOAT) - 820.420898922) / 386.031348182 AS `scaler_output_3`, (CAST(`ADS_imp_1_OUT`.`imputer_output_4` AS FLOAT) - 0.566181762373) / 0.306900434257 AS `scaler_output_4`, (CAST(`ADS_imp_1_OUT`.`imputer_output_5` AS FLOAT) - 6.66448350657) / 3.34652241867 AS `scaler_output_5` 
FROM `ADS_imp_1_OUT`), 
`IL` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, `ADS_sca_2_OUT`.`scaler_output_2` AS `scaler_output_2`, `ADS_sca_2_OUT`.`scaler_output_3` AS `scaler_output_3`, `ADS_sca_2_OUT`.`scaler_output_4` AS `scaler_output_4`, `ADS_sca_2_OUT`.`scaler_output_5` AS `scaler_output_5` 
FROM `ADS_sca_2_OUT`), 
`HL_BA_1` AS 
(SELECT `IL`.`KEY` AS `KEY`, 0.679591265871 * `IL`.`scaler_output_2` + -0.527141760671 * `IL`.`scaler_output_3` + -1.03667132234 * `IL`.`scaler_output_4` + -0.722765078184 * `IL`.`scaler_output_5` + 0.0214192056718 AS `NEUR_1_1`, 0.843379827402 * `IL`.`scaler_output_2` + 0.0183799214086 * `IL`.`scaler_output_3` + -1.16414204804 * `IL`.`scaler_output_4` + 0.368707945338 * `IL`.`scaler_output_5` + -0.181225521347 AS `NEUR_1_2`, 0.702948460871 * `IL`.`scaler_output_2` + -0.484206245524 * `IL`.`scaler_output_3` + 0.582865688423 * `IL`.`scaler_output_4` + -0.17399048622 * `IL`.`scaler_output_5` + -0.654454985446 AS `NEUR_1_3` 
FROM `IL`), 
`HL_1_relu` AS 
(SELECT `HL_BA_1`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_1`.`NEUR_1_1` >= 0.0) THEN `HL_BA_1`.`NEUR_1_1` ELSE 0.0 END AS `NEUR_1_1`, CASE WHEN (`HL_BA_1`.`NEUR_1_2` >= 0.0) THEN `HL_BA_1`.`NEUR_1_2` ELSE 0.0 END AS `NEUR_1_2`, CASE WHEN (`HL_BA_1`.`NEUR_1_3` >= 0.0) THEN `HL_BA_1`.`NEUR_1_3` ELSE 0.0 END AS `NEUR_1_3` 
FROM `HL_BA_1`), 
`HL_BA_2` AS 
(SELECT `HL_1_relu`.`KEY` AS `KEY`, 0.176663646399 * `HL_1_relu`.`NEUR_1_1` + 1.05219171334 * `HL_1_relu`.`NEUR_1_2` + 0.80101867599 * `HL_1_relu`.`NEUR_1_3` + -0.993840303184 AS `NEUR_2_1`, 0.674501307239 * `HL_1_relu`.`NEUR_1_1` + -0.0911617148017 * `HL_1_relu`.`NEUR_1_2` + -0.645475851679 * `HL_1_relu`.`NEUR_1_3` + -0.442002003207 AS `NEUR_2_2`, -0.300507699832 * `HL_1_relu`.`NEUR_1_1` + -0.826761747174 * `HL_1_relu`.`NEUR_1_2` + -0.300833939066 * `HL_1_relu`.`NEUR_1_3` + -0.0103942825038 AS `NEUR_2_3`, -0.341090693664 * `HL_1_relu`.`NEUR_1_1` + -0.518533801503 * `HL_1_relu`.`NEUR_1_2` + -0.122243462477 * `HL_1_relu`.`NEUR_1_3` + -0.740628349607 AS `NEUR_2_4`, -0.5631431034 * `HL_1_relu`.`NEUR_1_1` + 0.051060215937 * `HL_1_relu`.`NEUR_1_2` + 0.304685136995 * `HL_1_relu`.`NEUR_1_3` + -0.428372084098 AS `NEUR_2_5` 
FROM `HL_1_relu`), 
`HL_2_relu` AS 
(SELECT `HL_BA_2`.`KEY` AS `KEY`, CASE WHEN (`HL_BA_2`.`NEUR_2_1` >= 0.0) THEN `HL_BA_2`.`NEUR_2_1` ELSE 0.0 END AS `NEUR_2_1`, CASE WHEN (`HL_BA_2`.`NEUR_2_2` >= 0.0) THEN `HL_BA_2`.`NEUR_2_2` ELSE 0.0 END AS `NEUR_2_2`, CASE WHEN (`HL_BA_2`.`NEUR_2_3` >= 0.0) THEN `HL_BA_2`.`NEUR_2_3` ELSE 0.0 END AS `NEUR_2_3`, CASE WHEN (`HL_BA_2`.`NEUR_2_4` >= 0.0) THEN `HL_BA_2`.`NEUR_2_4` ELSE 0.0 END AS `NEUR_2_4`, CASE WHEN (`HL_BA_2`.`NEUR_2_5` >= 0.0) THEN `HL_BA_2`.`NEUR_2_5` ELSE 0.0 END AS `NEUR_2_5` 
FROM `HL_BA_2`), 
`OL_BA` AS 
(SELECT `HL_2_relu`.`KEY` AS `KEY`, -0.565551895315 * `HL_2_relu`.`NEUR_2_1` + -0.142655304001 * `HL_2_relu`.`NEUR_2_2` + -0.717888910996 * `HL_2_relu`.`NEUR_2_3` + 0.682478148783 * `HL_2_relu`.`NEUR_2_4` + 0.655523182696 * `HL_2_relu`.`NEUR_2_5` + 1.52560371142 AS `NEUR_3_1` 
FROM `HL_2_relu`), 
`OL_identity` AS 
(SELECT `OL_BA`.`KEY` AS `KEY`, `OL_BA`.`NEUR_3_1` AS `NEUR_3_1` 
FROM `OL_BA`)
 SELECT `OL_identity`.`KEY` AS `KEY`, `OL_identity`.`NEUR_3_1` AS `Estimator` 
FROM `OL_identity`