-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `DT_node_lookup` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_61` <= -0.7515363693237305) THEN CASE WHEN (`ADS`.`Feature_88` <= -0.797366738319397) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS`.`Feature_69` <= -4.714450359344482) THEN CASE WHEN (`ADS`.`Feature_74` <= -0.78318190574646) THEN 6 ELSE CASE WHEN (`ADS`.`Feature_0` <= -0.6326188445091248) THEN 8 ELSE 9 END END ELSE CASE WHEN (`ADS`.`Feature_51` <= -0.1279253512620926) THEN 11 ELSE CASE WHEN (`ADS`.`Feature_87` <= 0.5240447521209717) THEN 13 ELSE 14 END END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Proba_3.0` AS `Proba_3.0`, `Values`.`LogProba_3.0` AS `LogProba_3.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_61' AS feature, -0.7515363693237305 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.08 AS `Proba_0.0`, -2.52572864431 AS `LogProba_0.0`, 0.4 AS `Proba_1.0`, -0.916290731874 AS `LogProba_1.0`, 0.4 AS `Proba_2.0`, -0.916290731874 AS `LogProba_2.0`, 0.12 AS `Proba_3.0`, -2.1202635362 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_88' AS feature, -0.797366738319397 AS threshold, 4 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.125 AS `Proba_0.0`, -2.07944154168 AS `LogProba_0.0`, 0.875 AS `Proba_1.0`, -0.133531392625 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_69' AS feature, -4.714450359344482 AS threshold, 11 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.058823529411764705 AS `Proba_0.0`, -2.83321334406 AS `LogProba_0.0`, 0.17647058823529413 AS `Proba_1.0`, -1.73460105539 AS `LogProba_1.0`, 0.5882352941176471 AS `Proba_2.0`, -0.530628251062 AS `LogProba_2.0`, 0.17647058823529413 AS `Proba_3.0`, -1.73460105539 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 5 AS node_id, 'Feature_74' AS feature, -0.78318190574646 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0.0`, -1.38629436112 AS `LogProba_0.0`, 0.5 AS `Proba_1.0`, -0.69314718056 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.25 AS `Proba_3.0`, -1.38629436112 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 7 AS node_id, 'Feature_0' AS feature, -0.6326188445091248 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0.0`, -0.69314718056 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.5 AS `Proba_3.0`, -0.69314718056 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 10 AS node_id, 'Feature_51' AS feature, -0.1279253512620926 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.07692307692307693 AS `Proba_1.0`, -2.56494935746 AS `LogProba_1.0`, 0.7692307692307693 AS `Proba_2.0`, -0.262364264467 AS `LogProba_2.0`, 0.15384615384615385 AS `Proba_3.0`, -1.8718021769 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 12 AS node_id, 'Feature_87' AS feature, 0.5240447521209717 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.3333333333333333 AS `Proba_1.0`, -1.09861228867 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.6666666666666666 AS `Proba_3.0`, -0.405465108108 AS `LogProba_3.0`, 3 AS `Decision` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data`.`Proba_3.0` AS `Proba_3.0`, `DT_node_data`.`LogProba_3.0` AS `LogProba_3.0`, `DT_node_data`.`Decision` AS `Decision` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS join_key_0, NULL AS `Score_0_0`, `DT_Output`.`Proba_0.0` AS `Proba_0_0`, `DT_Output`.`LogProba_0.0` AS `LogProba_0_0`, NULL AS `Score_0_1`, `DT_Output`.`Proba_1.0` AS `Proba_0_1`, `DT_Output`.`LogProba_1.0` AS `LogProba_0_1`, NULL AS `Score_0_2`, `DT_Output`.`Proba_2.0` AS `Proba_0_2`, `DT_Output`.`LogProba_2.0` AS `LogProba_0_2`, NULL AS `Score_0_3`, `DT_Output`.`Proba_3.0` AS `Proba_0_3`, `DT_Output`.`LogProba_3.0` AS `LogProba_0_3` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_19` <= 0.08939949423074722) THEN CASE WHEN (`ADS`.`Feature_38` <= 0.32816529273986816) THEN CASE WHEN (`ADS`.`Feature_16` <= -0.3481843173503876) THEN 3 ELSE 4 END ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_99` <= -3.8752880096435547) THEN 7 ELSE CASE WHEN (`ADS`.`Feature_84` <= 1.6000816822052002) THEN 9 ELSE 10 END END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Proba_3.0` AS `Proba_3.0`, `Values`.`LogProba_3.0` AS `LogProba_3.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_19' AS feature, 0.08939949423074722 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.24 AS `Proba_0.0`, -1.42711635564 AS `LogProba_0.0`, 0.36 AS `Proba_1.0`, -1.02165124753 AS `LogProba_1.0`, 0.28 AS `Proba_2.0`, -1.27296567581 AS `LogProba_2.0`, 0.12 AS `Proba_3.0`, -2.1202635362 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_38' AS feature, 0.32816529273986816 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.46153846153846156 AS `Proba_0.0`, -0.773189888233 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.38461538461538464 AS `Proba_2.0`, -0.955511445027 AS `LogProba_2.0`, 0.15384615384615385 AS `Proba_3.0`, -1.8718021769 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_16' AS feature, -0.3481843173503876 AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.75 AS `Proba_0.0`, -0.287682072452 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.25 AS `Proba_3.0`, -1.38629436112 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_99' AS feature, -3.8752880096435547 AS threshold, 8 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.75 AS `Proba_1.0`, -0.287682072452 AS `LogProba_1.0`, 0.16666666666666666 AS `Proba_2.0`, -1.79175946923 AS `LogProba_2.0`, 0.08333333333333333 AS `Proba_3.0`, -2.48490664979 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, 'Feature_84' AS feature, 1.6000816822052002 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.6666666666666666 AS `Proba_2.0`, -0.405465108108 AS `LogProba_2.0`, 0.3333333333333333 AS `Proba_3.0`, -1.09861228867 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_1`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_1`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_1`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_1`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_1`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_1`.`Proba_3.0` AS `Proba_3.0`, `DT_node_data_1`.`LogProba_3.0` AS `LogProba_3.0`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS join_key_1, NULL AS `Score_1_0`, `DT_Output_1`.`Proba_0.0` AS `Proba_1_0`, `DT_Output_1`.`LogProba_0.0` AS `LogProba_1_0`, NULL AS `Score_1_1`, `DT_Output_1`.`Proba_1.0` AS `Proba_1_1`, `DT_Output_1`.`LogProba_1.0` AS `LogProba_1_1`, NULL AS `Score_1_2`, `DT_Output_1`.`Proba_2.0` AS `Proba_1_2`, `DT_Output_1`.`LogProba_2.0` AS `LogProba_1_2`, NULL AS `Score_1_3`, `DT_Output_1`.`Proba_3.0` AS `Proba_1_3`, `DT_Output_1`.`LogProba_3.0` AS `LogProba_1_3` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_50` <= 4.584610939025879) THEN CASE WHEN (`ADS`.`Feature_97` <= 0.5361496210098267) THEN CASE WHEN (`ADS`.`Feature_32` <= 1.8636724948883057) THEN CASE WHEN (`ADS`.`Feature_99` <= -3.5586795806884766) THEN 4 ELSE 5 END ELSE CASE WHEN (`ADS`.`Feature_55` <= 0.8636441230773926) THEN 7 ELSE 8 END END ELSE 9 END ELSE 10 END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Proba_3.0` AS `Proba_3.0`, `Values`.`LogProba_3.0` AS `LogProba_3.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_50' AS feature, 4.584610939025879 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.08 AS `Proba_0.0`, -2.52572864431 AS `LogProba_0.0`, 0.24 AS `Proba_1.0`, -1.42711635564 AS `LogProba_1.0`, 0.48 AS `Proba_2.0`, -0.73396917508 AS `LogProba_2.0`, 0.2 AS `Proba_3.0`, -1.60943791243 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 1 AS node_id, 'Feature_97' AS feature, 0.5361496210098267 AS threshold, 14 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.09523809523809523 AS `Proba_0.0`, -2.35137525716 AS `LogProba_0.0`, 0.09523809523809523 AS `Proba_1.0`, -2.35137525716 AS `LogProba_1.0`, 0.5714285714285714 AS `Proba_2.0`, -0.559615787935 AS `LogProba_2.0`, 0.23809523809523808 AS `Proba_3.0`, -1.43508452529 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_32' AS feature, 1.8636724948883057 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.16666666666666666 AS `Proba_0.0`, -1.79175946923 AS `LogProba_0.0`, 0.16666666666666666 AS `Proba_1.0`, -1.79175946923 AS `LogProba_1.0`, 0.25 AS `Proba_2.0`, -1.38629436112 AS `LogProba_2.0`, 0.4166666666666667 AS `Proba_3.0`, -0.875468737354 AS `LogProba_3.0`, 3 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_99' AS feature, -3.5586795806884766 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2857142857142857 AS `Proba_0.0`, -1.2527629685 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.7142857142857143 AS `Proba_3.0`, -0.336472236621 AS `LogProba_3.0`, 3 AS `Decision` UNION ALL SELECT 4 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_55' AS feature, 0.8636441230773926 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.4 AS `Proba_1.0`, -0.916290731874 AS `LogProba_1.0`, 0.6 AS `Proba_2.0`, -0.510825623766 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_2`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_2`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_2`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_2`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_2`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_2`.`Proba_3.0` AS `Proba_3.0`, `DT_node_data_2`.`LogProba_3.0` AS `LogProba_3.0`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS join_key_2, NULL AS `Score_2_0`, `DT_Output_2`.`Proba_0.0` AS `Proba_2_0`, `DT_Output_2`.`LogProba_0.0` AS `LogProba_2_0`, NULL AS `Score_2_1`, `DT_Output_2`.`Proba_1.0` AS `Proba_2_1`, `DT_Output_2`.`LogProba_1.0` AS `LogProba_2_1`, NULL AS `Score_2_2`, `DT_Output_2`.`Proba_2.0` AS `Proba_2_2`, `DT_Output_2`.`LogProba_2.0` AS `LogProba_2_2`, NULL AS `Score_2_3`, `DT_Output_2`.`Proba_3.0` AS `Proba_2_3`, `DT_Output_2`.`LogProba_3.0` AS `LogProba_2_3` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_39` <= -0.465423047542572) THEN 1 ELSE CASE WHEN (`ADS`.`Feature_21` <= 6.280778884887695) THEN CASE WHEN (`ADS`.`Feature_48` <= 0.8759952187538147) THEN CASE WHEN (`ADS`.`Feature_10` <= -0.11653327941894531) THEN 5 ELSE CASE WHEN (`ADS`.`Feature_89` <= 0.23606154322624207) THEN 7 ELSE 8 END END ELSE 9 END ELSE 10 END END AS node_id_2 
FROM `FourClass_100` AS `ADS`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0.0` AS `Proba_0.0`, `Values`.`LogProba_0.0` AS `LogProba_0.0`, `Values`.`Proba_1.0` AS `Proba_1.0`, `Values`.`LogProba_1.0` AS `LogProba_1.0`, `Values`.`Proba_2.0` AS `Proba_2.0`, `Values`.`LogProba_2.0` AS `LogProba_2.0`, `Values`.`Proba_3.0` AS `Proba_3.0`, `Values`.`LogProba_3.0` AS `LogProba_3.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'Feature_39' AS feature, -0.465423047542572 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.04 AS `Proba_0.0`, -3.21887582487 AS `LogProba_0.0`, 0.32 AS `Proba_1.0`, -1.13943428319 AS `LogProba_1.0`, 0.36 AS `Proba_2.0`, -1.02165124753 AS `LogProba_2.0`, 0.28 AS `Proba_3.0`, -1.27296567581 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1.0 AS `Proba_3.0`, 0.0 AS `LogProba_3.0`, 3 AS `Decision` UNION ALL SELECT 2 AS node_id, 'Feature_21' AS feature, 6.280778884887695 AS threshold, 14 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.05555555555555555 AS `Proba_0.0`, -2.8903717579 AS `LogProba_0.0`, 0.4444444444444444 AS `Proba_1.0`, -0.810930216216 AS `LogProba_1.0`, 0.5 AS `Proba_2.0`, -0.69314718056 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 3 AS node_id, 'Feature_48' AS feature, 0.8759952187538147 AS threshold, 11 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.08333333333333333 AS `Proba_0.0`, -2.48490664979 AS `LogProba_0.0`, 0.16666666666666666 AS `Proba_1.0`, -1.79175946923 AS `LogProba_1.0`, 0.75 AS `Proba_2.0`, -0.287682072452 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 4 AS node_id, 'Feature_10' AS feature, -0.11653327941894531 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.25 AS `Proba_0.0`, -1.38629436112 AS `LogProba_0.0`, 0.5 AS `Proba_1.0`, -0.69314718056 AS `LogProba_1.0`, 0.25 AS `Proba_2.0`, -1.38629436112 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision` UNION ALL SELECT 6 AS node_id, 'Feature_89' AS feature, 0.23606154322624207 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.5 AS `Proba_0.0`, -0.69314718056 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.5 AS `Proba_2.0`, -0.69314718056 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 0 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 2 AS `Decision` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0.0 AS `Proba_3.0`, -1.79769313486231e+308 AS `LogProba_3.0`, 1 AS `Decision`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Proba_0.0` AS `Proba_0.0`, `DT_node_data_3`.`LogProba_0.0` AS `LogProba_0.0`, `DT_node_data_3`.`Proba_1.0` AS `Proba_1.0`, `DT_node_data_3`.`LogProba_1.0` AS `LogProba_1.0`, `DT_node_data_3`.`Proba_2.0` AS `Proba_2.0`, `DT_node_data_3`.`LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_3`.`Proba_3.0` AS `Proba_3.0`, `DT_node_data_3`.`LogProba_3.0` AS `LogProba_3.0`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS join_key_3, NULL AS `Score_3_0`, `DT_Output_3`.`Proba_0.0` AS `Proba_3_0`, `DT_Output_3`.`LogProba_0.0` AS `LogProba_3_0`, NULL AS `Score_3_1`, `DT_Output_3`.`Proba_1.0` AS `Proba_3_1`, `DT_Output_3`.`LogProba_1.0` AS `LogProba_3_1`, NULL AS `Score_3_2`, `DT_Output_3`.`Proba_2.0` AS `Proba_3_2`, `DT_Output_3`.`LogProba_2.0` AS `LogProba_3_2`, NULL AS `Score_3_3`, `DT_Output_3`.`Proba_3.0` AS `Proba_3_3`, `DT_Output_3`.`LogProba_3.0` AS `LogProba_3_3` 
FROM `DT_Output_3`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0`.join_key_0 AS join_key_0, `RF_Tree_0`.`Score_0_0` AS `Score_0_0`, `RF_Tree_0`.`Proba_0_0` AS `Proba_0_0`, `RF_Tree_0`.`LogProba_0_0` AS `LogProba_0_0`, `RF_Tree_0`.`Score_0_1` AS `Score_0_1`, `RF_Tree_0`.`Proba_0_1` AS `Proba_0_1`, `RF_Tree_0`.`LogProba_0_1` AS `LogProba_0_1`, `RF_Tree_0`.`Score_0_2` AS `Score_0_2`, `RF_Tree_0`.`Proba_0_2` AS `Proba_0_2`, `RF_Tree_0`.`LogProba_0_2` AS `LogProba_0_2`, `RF_Tree_0`.`Score_0_3` AS `Score_0_3`, `RF_Tree_0`.`Proba_0_3` AS `Proba_0_3`, `RF_Tree_0`.`LogProba_0_3` AS `LogProba_0_3`, `RF_Tree_1`.join_key_1 AS join_key_1, `RF_Tree_1`.`Score_1_0` AS `Score_1_0`, `RF_Tree_1`.`Proba_1_0` AS `Proba_1_0`, `RF_Tree_1`.`LogProba_1_0` AS `LogProba_1_0`, `RF_Tree_1`.`Score_1_1` AS `Score_1_1`, `RF_Tree_1`.`Proba_1_1` AS `Proba_1_1`, `RF_Tree_1`.`LogProba_1_1` AS `LogProba_1_1`, `RF_Tree_1`.`Score_1_2` AS `Score_1_2`, `RF_Tree_1`.`Proba_1_2` AS `Proba_1_2`, `RF_Tree_1`.`LogProba_1_2` AS `LogProba_1_2`, `RF_Tree_1`.`Score_1_3` AS `Score_1_3`, `RF_Tree_1`.`Proba_1_3` AS `Proba_1_3`, `RF_Tree_1`.`LogProba_1_3` AS `LogProba_1_3`, `RF_Tree_2`.join_key_2 AS join_key_2, `RF_Tree_2`.`Score_2_0` AS `Score_2_0`, `RF_Tree_2`.`Proba_2_0` AS `Proba_2_0`, `RF_Tree_2`.`LogProba_2_0` AS `LogProba_2_0`, `RF_Tree_2`.`Score_2_1` AS `Score_2_1`, `RF_Tree_2`.`Proba_2_1` AS `Proba_2_1`, `RF_Tree_2`.`LogProba_2_1` AS `LogProba_2_1`, `RF_Tree_2`.`Score_2_2` AS `Score_2_2`, `RF_Tree_2`.`Proba_2_2` AS `Proba_2_2`, `RF_Tree_2`.`LogProba_2_2` AS `LogProba_2_2`, `RF_Tree_2`.`Score_2_3` AS `Score_2_3`, `RF_Tree_2`.`Proba_2_3` AS `Proba_2_3`, `RF_Tree_2`.`LogProba_2_3` AS `LogProba_2_3`, `RF_Tree_3`.join_key_3 AS join_key_3, `RF_Tree_3`.`Score_3_0` AS `Score_3_0`, `RF_Tree_3`.`Proba_3_0` AS `Proba_3_0`, `RF_Tree_3`.`LogProba_3_0` AS `LogProba_3_0`, `RF_Tree_3`.`Score_3_1` AS `Score_3_1`, `RF_Tree_3`.`Proba_3_1` AS `Proba_3_1`, `RF_Tree_3`.`LogProba_3_1` AS `LogProba_3_1`, `RF_Tree_3`.`Score_3_2` AS `Score_3_2`, `RF_Tree_3`.`Proba_3_2` AS `Proba_3_2`, `RF_Tree_3`.`LogProba_3_2` AS `LogProba_3_2`, `RF_Tree_3`.`Score_3_3` AS `Score_3_3`, `RF_Tree_3`.`Proba_3_3` AS `Proba_3_3`, `RF_Tree_3`.`LogProba_3_3` AS `LogProba_3_3` 
FROM `RF_Tree_0` LEFT OUTER JOIN `RF_Tree_1` ON `RF_Tree_0`.join_key_0 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN `RF_Tree_2` ON `RF_Tree_2`.join_key_2 = `RF_Tree_1`.join_key_1 LEFT OUTER JOIN `RF_Tree_3` ON `RF_Tree_3`.join_key_3 = `RF_Tree_2`.join_key_2), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.join_key_0 AS `KEY`, `RF_Join_CTE`.`Score_0_0` / 4 + `RF_Join_CTE`.`Score_1_0` / 4 + `RF_Join_CTE`.`Score_2_0` / 4 + `RF_Join_CTE`.`Score_3_0` / 4 AS `Score_0`, `RF_Join_CTE`.`Proba_0_0` / 4 + `RF_Join_CTE`.`Proba_1_0` / 4 + `RF_Join_CTE`.`Proba_2_0` / 4 + `RF_Join_CTE`.`Proba_3_0` / 4 AS `Proba_0`, `RF_Join_CTE`.`LogProba_0_0` / 4 + `RF_Join_CTE`.`LogProba_1_0` / 4 + `RF_Join_CTE`.`LogProba_2_0` / 4 + `RF_Join_CTE`.`LogProba_3_0` / 4 AS `LogProba_0`, `RF_Join_CTE`.`Score_0_1` / 4 + `RF_Join_CTE`.`Score_1_1` / 4 + `RF_Join_CTE`.`Score_2_1` / 4 + `RF_Join_CTE`.`Score_3_1` / 4 AS `Score_1`, `RF_Join_CTE`.`Proba_0_1` / 4 + `RF_Join_CTE`.`Proba_1_1` / 4 + `RF_Join_CTE`.`Proba_2_1` / 4 + `RF_Join_CTE`.`Proba_3_1` / 4 AS `Proba_1`, `RF_Join_CTE`.`LogProba_0_1` / 4 + `RF_Join_CTE`.`LogProba_1_1` / 4 + `RF_Join_CTE`.`LogProba_2_1` / 4 + `RF_Join_CTE`.`LogProba_3_1` / 4 AS `LogProba_1`, `RF_Join_CTE`.`Score_0_2` / 4 + `RF_Join_CTE`.`Score_1_2` / 4 + `RF_Join_CTE`.`Score_2_2` / 4 + `RF_Join_CTE`.`Score_3_2` / 4 AS `Score_2`, `RF_Join_CTE`.`Proba_0_2` / 4 + `RF_Join_CTE`.`Proba_1_2` / 4 + `RF_Join_CTE`.`Proba_2_2` / 4 + `RF_Join_CTE`.`Proba_3_2` / 4 AS `Proba_2`, `RF_Join_CTE`.`LogProba_0_2` / 4 + `RF_Join_CTE`.`LogProba_1_2` / 4 + `RF_Join_CTE`.`LogProba_2_2` / 4 + `RF_Join_CTE`.`LogProba_3_2` / 4 AS `LogProba_2`, `RF_Join_CTE`.`Score_0_3` / 4 + `RF_Join_CTE`.`Score_1_3` / 4 + `RF_Join_CTE`.`Score_2_3` / 4 + `RF_Join_CTE`.`Score_3_3` / 4 AS `Score_3`, `RF_Join_CTE`.`Proba_0_3` / 4 + `RF_Join_CTE`.`Proba_1_3` / 4 + `RF_Join_CTE`.`Proba_2_3` / 4 + `RF_Join_CTE`.`Proba_3_3` / 4 AS `Proba_3`, `RF_Join_CTE`.`LogProba_0_3` / 4 + `RF_Join_CTE`.`LogProba_1_3` / 4 + `RF_Join_CTE`.`LogProba_2_3` / 4 + `RF_Join_CTE`.`LogProba_3_3` / 4 AS `LogProba_3` 
FROM `RF_Join_CTE`), 
orig_cte AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Score_2` AS `Score_2`, `RF_AVG_Scores`.`Score_3` AS `Score_3`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`Proba_2` AS `Proba_2`, `RF_AVG_Scores`.`Proba_3` AS `Proba_3`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `RF_AVG_Scores`.`LogProba_2` AS `LogProba_2`, `RF_AVG_Scores`.`LogProba_3` AS `LogProba_3`, NULL AS `Decision` 
FROM `RF_AVG_Scores`), 
score_class_union AS 
(SELECT scu.`KEY_u` AS `KEY_u`, scu.class AS class, scu.`LogProba` AS `LogProba`, scu.`Proba` AS `Proba`, scu.`Score` AS `Score` 
FROM (SELECT orig_cte.`KEY` AS `KEY_u`, 0 AS class, orig_cte.`LogProba_0` AS `LogProba`, orig_cte.`Proba_0` AS `Proba`, orig_cte.`Score_0` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 1 AS class, orig_cte.`LogProba_1` AS `LogProba`, orig_cte.`Proba_1` AS `Proba`, orig_cte.`Score_1` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 2 AS class, orig_cte.`LogProba_2` AS `LogProba`, orig_cte.`Proba_2` AS `Proba`, orig_cte.`Score_2` AS `Score` 
FROM orig_cte UNION ALL SELECT orig_cte.`KEY` AS `KEY_u`, 3 AS class, orig_cte.`LogProba_3` AS `LogProba`, orig_cte.`Proba_3` AS `Proba`, orig_cte.`Score_3` AS `Score` 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte.`KEY` AS `KEY`, orig_cte.`Score_0` AS `Score_0`, orig_cte.`Score_1` AS `Score_1`, orig_cte.`Score_2` AS `Score_2`, orig_cte.`Score_3` AS `Score_3`, orig_cte.`Proba_0` AS `Proba_0`, orig_cte.`Proba_1` AS `Proba_1`, orig_cte.`Proba_2` AS `Proba_2`, orig_cte.`Proba_3` AS `Proba_3`, orig_cte.`LogProba_0` AS `LogProba_0`, orig_cte.`LogProba_1` AS `LogProba_1`, orig_cte.`LogProba_2` AS `LogProba_2`, orig_cte.`LogProba_3` AS `LogProba_3`, orig_cte.`Decision` AS `Decision`, max_select.`KEY_m` AS `KEY_m`, max_select.`max_LogProba` AS `max_LogProba`, max_select.`max_Proba` AS `max_Proba`, max_select.`max_Score` AS `max_Score` 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union.`KEY_u` AS `KEY_m`, max(score_class_union.`LogProba`) AS `max_LogProba`, max(score_class_union.`Proba`) AS `max_Proba`, max(score_class_union.`Score`) AS `max_Score` 
FROM score_class_union GROUP BY score_class_union.`KEY_u`) AS max_select ON orig_cte.`KEY` = max_select.`KEY_m`), 
union_with_max AS 
(SELECT score_class_union.`KEY_u` AS `KEY_u`, score_class_union.class AS class, score_class_union.`LogProba` AS `LogProba`, score_class_union.`Proba` AS `Proba`, score_class_union.`Score` AS `Score`, score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score` 
FROM score_class_union LEFT OUTER JOIN score_max ON score_class_union.`KEY_u` = score_max.`KEY`), 
arg_max_cte AS 
(SELECT score_max.`KEY` AS `KEY`, score_max.`Score_0` AS `Score_0`, score_max.`Score_1` AS `Score_1`, score_max.`Score_2` AS `Score_2`, score_max.`Score_3` AS `Score_3`, score_max.`Proba_0` AS `Proba_0`, score_max.`Proba_1` AS `Proba_1`, score_max.`Proba_2` AS `Proba_2`, score_max.`Proba_3` AS `Proba_3`, score_max.`LogProba_0` AS `LogProba_0`, score_max.`LogProba_1` AS `LogProba_1`, score_max.`LogProba_2` AS `LogProba_2`, score_max.`LogProba_3` AS `LogProba_3`, score_max.`Decision` AS `Decision`, score_max.`KEY_m` AS `KEY_m`, score_max.`max_LogProba` AS `max_LogProba`, score_max.`max_Proba` AS `max_Proba`, score_max.`max_Score` AS `max_Score`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM score_max LEFT OUTER JOIN (SELECT union_with_max.`KEY` AS `KEY_Proba`, min(union_with_max.class) AS `arg_max_Proba` 
FROM union_with_max 
WHERE union_with_max.`max_Proba` = union_with_max.`Proba` GROUP BY union_with_max.`KEY`) AS `arg_max_t_Proba` ON score_max.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT arg_max_cte.`KEY` AS `KEY`, arg_max_cte.`Score_0` AS `Score_0`, arg_max_cte.`Score_1` AS `Score_1`, arg_max_cte.`Score_2` AS `Score_2`, arg_max_cte.`Score_3` AS `Score_3`, arg_max_cte.`Proba_0` AS `Proba_0`, arg_max_cte.`Proba_1` AS `Proba_1`, arg_max_cte.`Proba_2` AS `Proba_2`, arg_max_cte.`Proba_3` AS `Proba_3`, CASE WHEN (arg_max_cte.`Proba_0` IS NULL OR arg_max_cte.`Proba_0` > 0.0) THEN ln(arg_max_cte.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (arg_max_cte.`Proba_1` IS NULL OR arg_max_cte.`Proba_1` > 0.0) THEN ln(arg_max_cte.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (arg_max_cte.`Proba_2` IS NULL OR arg_max_cte.`Proba_2` > 0.0) THEN ln(arg_max_cte.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, CASE WHEN (arg_max_cte.`Proba_3` IS NULL OR arg_max_cte.`Proba_3` > 0.0) THEN ln(arg_max_cte.`Proba_3`) ELSE -1.79769313486231e+308 END AS `LogProba_3`, arg_max_cte.`arg_max_Proba` AS `Decision` 
FROM arg_max_cte