-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 5.72972972973 ELSE `ADS`.`Feature_0` END AS `imputer_output_2`, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 3.00810810811 ELSE `ADS`.`Feature_1` END AS `imputer_output_3`, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 3.50540540541 ELSE `ADS`.`Feature_2` END AS `imputer_output_4`, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 1.04054054054 ELSE `ADS`.`Feature_3` END AS `imputer_output_5` 
FROM `iris` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.`imputer_output_2` AS FLOAT) - 5.72972972973) / 0.86863199836 AS `scaler_output_2`, (CAST(`ADS_imp_1_OUT`.`imputer_output_3` AS FLOAT) - 3.00810810811) / 0.481202535534 AS `scaler_output_3`, (CAST(`ADS_imp_1_OUT`.`imputer_output_4` AS FLOAT) - 3.50540540541) / 1.71068912082 AS `scaler_output_4`, (CAST(`ADS_imp_1_OUT`.`imputer_output_5` AS FLOAT) - 1.04054054054) / 0.669997765006 AS `scaler_output_5` 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_2` <= -0.8976525068283081) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= -0.5082711577415466) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 1.0588982105255127) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.8444518446922302) THEN 6 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 0.8350169062614441) THEN 8 ELSE 9 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 1.019819736480713) THEN 11 ELSE 12 END END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Proba_0.0` AS `Proba_0.0`, `LogProba_0.0` AS `LogProba_0.0`, `Proba_1.0` AS `Proba_1.0`, `LogProba_1.0` AS `LogProba_1.0`, `Proba_2.0` AS `Proba_2.0`, `LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS `node_id`, 'scaler_output_2' AS `feature`, -0.8976525068283081 AS `threshold`, 24 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.24324324324324326 AS `Proba_0.0`, -1.41369333531 AS `LogProba_0.0`, 0.6216216216216216 AS `Proba_1.0`, -0.475423696715 AS `LogProba_1.0`, 0.13513513513513514 AS `Proba_2.0`, -2.00148000021 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 4 AS `count`, 1 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS `node_id`, 'scaler_output_5' AS `feature`, -0.5082711577415466 AS `threshold`, 20 AS `count`, 1 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.125 AS `Proba_0.0`, -2.07944154168 AS `LogProba_0.0`, 0.71875 AS `Proba_1.0`, -0.330241686871 AS `LogProba_1.0`, 0.15625 AS `Proba_2.0`, -1.85629799037 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 4 AS `node_id`, 'scaler_output_5' AS `feature`, 1.0588982105255127 AS `threshold`, 17 AS `count`, 2 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8214285714285714 AS `Proba_1.0`, -0.196710294246 AS `LogProba_1.0`, 0.17857142857142858 AS `Proba_2.0`, -1.72276659774 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 5 AS `node_id`, 'scaler_output_4' AS `feature`, 0.8444518446922302 AS `threshold`, 14 AS `count`, 3 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.9130434782608695 AS `Proba_1.0`, -0.0909717782057 AS `LogProba_1.0`, 0.08695652173913043 AS `Proba_2.0`, -2.44234703537 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 12 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 7 AS `node_id`, 'scaler_output_5' AS `feature`, 0.8350169062614441 AS `threshold`, 2 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.3333333333333333 AS `Proba_1.0`, -1.09861228867 AS `LogProba_1.0`, 0.6666666666666666 AS `Proba_2.0`, -0.405465108108 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 5 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 9 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 5 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 10 AS `node_id`, 'scaler_output_4' AS `feature`, 1.019819736480713 AS `threshold`, 3 AS `count`, 3 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.4 AS `Proba_1.0`, -0.916290731874 AS `LogProba_1.0`, 0.6 AS `Proba_2.0`, -0.510825623766 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 11 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 12 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.`node_id_2` AS `node_id_2`, `DT_node_data`.`node_id` AS `node_id`, `DT_node_data`.`feature` AS `feature`, `DT_node_data`.`threshold` AS `threshold`, `DT_node_data`.`count` AS `count`, `DT_node_data`.`depth` AS `depth`, `DT_node_data`.`parent_id` AS `parent_id`, `Proba_0.0` AS `Proba_0.0`, `LogProba_0.0` AS `LogProba_0.0`, `Proba_1.0` AS `Proba_1.0`, `LogProba_1.0` AS `LogProba_1.0`, `Proba_2.0` AS `Proba_2.0`, `LogProba_2.0` AS `LogProba_2.0`, `DT_node_data`.`Decision` AS `Decision` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.`node_id_2` = `DT_node_data`.`node_id`), 
`RF_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS `join_key_0`, CAST(NULL AS FLOAT) AS `Score_0_0`, `Proba_0.0` AS `Proba_0_0`, `LogProba_0.0` AS `LogProba_0_0`, CAST(NULL AS FLOAT) AS `Score_0_1`, `Proba_1.0` AS `Proba_0_1`, `LogProba_1.0` AS `LogProba_0_1`, CAST(NULL AS FLOAT) AS `Score_0_2`, `Proba_2.0` AS `Proba_0_2`, `LogProba_2.0` AS `LogProba_0_2` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= -0.47080758213996887) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 1.0588982105255127) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 0.9096440076828003) THEN 6 ELSE 7 END ELSE 8 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Proba_0.0` AS `Proba_0.0`, `LogProba_0.0` AS `LogProba_0.0`, `Proba_1.0` AS `Proba_1.0`, `LogProba_1.0` AS `LogProba_1.0`, `Proba_2.0` AS `Proba_2.0`, `LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS `node_id`, 'scaler_output_4' AS `feature`, -0.47080758213996887 AS `threshold`, 25 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.35135135135135137 AS `Proba_0.0`, -1.04596855518 AS `LogProba_0.0`, 0.43243243243243246 AS `Proba_1.0`, -0.838329190404 AS `LogProba_1.0`, 0.21621621621621623 AS `Proba_2.0`, -1.53147637096 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 7 AS `count`, 1 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS `node_id`, 'scaler_output_4' AS `feature`, 0.8444518446922302 AS `threshold`, 18 AS `count`, 1 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.6666666666666666 AS `Proba_1.0`, -0.405465108108 AS `LogProba_1.0`, 0.3333333333333333 AS `Proba_2.0`, -1.09861228867 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 10 AS `count`, 2 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS `node_id`, 'scaler_output_5' AS `feature`, 1.0588982105255127 AS `threshold`, 8 AS `count`, 2 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.1111111111111111 AS `Proba_1.0`, -2.19722457734 AS `LogProba_1.0`, 0.8888888888888888 AS `Proba_2.0`, -0.117783035656 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 5 AS `node_id`, 'scaler_output_5' AS `feature`, 0.9096440076828003 AS `threshold`, 3 AS `count`, 3 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.3333333333333333 AS `Proba_1.0`, -1.09861228867 AS `LogProba_1.0`, 0.6666666666666666 AS `Proba_2.0`, -0.405465108108 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 3 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.`node_id_2` AS `node_id_2`, `DT_node_data_1`.`node_id` AS `node_id`, `DT_node_data_1`.`feature` AS `feature`, `DT_node_data_1`.`threshold` AS `threshold`, `DT_node_data_1`.`count` AS `count`, `DT_node_data_1`.`depth` AS `depth`, `DT_node_data_1`.`parent_id` AS `parent_id`, `Proba_0.0` AS `Proba_0.0`, `LogProba_0.0` AS `LogProba_0.0`, `Proba_1.0` AS `Proba_1.0`, `LogProba_1.0` AS `LogProba_1.0`, `Proba_2.0` AS `Proba_2.0`, `LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_1`.`Decision` AS `Decision` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.`node_id_2` = `DT_node_data_1`.`node_id`), 
`RF_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `join_key_1`, CAST(NULL AS FLOAT) AS `Score_1_0`, `Proba_0.0` AS `Proba_1_0`, `LogProba_0.0` AS `LogProba_1_0`, CAST(NULL AS FLOAT) AS `Score_1_1`, `Proba_1.0` AS `Proba_1_1`, `LogProba_1.0` AS `LogProba_1_1`, CAST(NULL AS FLOAT) AS `Score_1_2`, `Proba_2.0` AS `Proba_1_2`, `LogProba_2.0` AS `LogProba_1_2` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= -0.5082711577415466) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= 1.0588982105255127) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_3` <= -1.4715385437011719) THEN 4 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_2` <= 1.4048185348510742) THEN 6 ELSE 7 END END ELSE 8 END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Proba_0.0` AS `Proba_0.0`, `LogProba_0.0` AS `LogProba_0.0`, `Proba_1.0` AS `Proba_1.0`, `LogProba_1.0` AS `LogProba_1.0`, `Proba_2.0` AS `Proba_2.0`, `LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS `node_id`, 'scaler_output_5' AS `feature`, -0.5082711577415466 AS `threshold`, 20 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.4864864864864865 AS `Proba_0.0`, -0.720546154748 AS `LogProba_0.0`, 0.2972972972972973 AS `Proba_1.0`, -1.21302263985 AS `LogProba_1.0`, 0.21621621621621623 AS `Proba_2.0`, -1.53147637096 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 9 AS `count`, 1 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS `node_id`, 'scaler_output_5' AS `feature`, 1.0588982105255127 AS `threshold`, 11 AS `count`, 1 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.5789473684210527 AS `Proba_1.0`, -0.546543706368 AS `LogProba_1.0`, 0.42105263157894735 AS `Proba_2.0`, -0.864997437487 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS `node_id`, 'scaler_output_3' AS `feature`, -1.4715385437011719 AS `threshold`, 8 AS `count`, 2 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.7857142857142857 AS `Proba_1.0`, -0.241162056817 AS `LogProba_1.0`, 0.21428571428571427 AS `Proba_2.0`, -1.54044504095 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 3 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 5 AS `node_id`, 'scaler_output_2' AS `feature`, 1.4048185348510742 AS `threshold`, 7 AS `count`, 3 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.8461538461538461 AS `Proba_1.0`, -0.167054084663 AS `LogProba_1.0`, 0.15384615384615385 AS `Proba_2.0`, -1.8718021769 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 6 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 3 AS `count`, 2 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.`node_id_2` AS `node_id_2`, `DT_node_data_2`.`node_id` AS `node_id`, `DT_node_data_2`.`feature` AS `feature`, `DT_node_data_2`.`threshold` AS `threshold`, `DT_node_data_2`.`count` AS `count`, `DT_node_data_2`.`depth` AS `depth`, `DT_node_data_2`.`parent_id` AS `parent_id`, `Proba_0.0` AS `Proba_0.0`, `LogProba_0.0` AS `LogProba_0.0`, `Proba_1.0` AS `Proba_1.0`, `LogProba_1.0` AS `LogProba_1.0`, `Proba_2.0` AS `Proba_2.0`, `LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_2`.`Decision` AS `Decision` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.`node_id_2` = `DT_node_data_2`.`node_id`), 
`RF_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `join_key_2`, CAST(NULL AS FLOAT) AS `Score_2_0`, `Proba_0.0` AS `Proba_2_0`, `LogProba_0.0` AS `LogProba_2_0`, CAST(NULL AS FLOAT) AS `Score_2_1`, `Proba_1.0` AS `Proba_2_1`, `LogProba_1.0` AS `LogProba_2_1`, CAST(NULL AS FLOAT) AS `Score_2_2`, `Proba_2.0` AS `Proba_2_2`, `LogProba_2.0` AS `LogProba_2_2` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_5` <= -0.5082711577415466) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.8444518446922302) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_4` <= 0.9613637924194336) THEN CASE WHEN (`ADS_sca_2_OUT`.`scaler_output_3` <= -0.5363814234733582) THEN 6 ELSE 7 END ELSE 8 END END END AS `node_id_2` 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.`node_id` AS `node_id`, `Values`.`feature` AS `feature`, `Values`.`threshold` AS `threshold`, `Values`.`count` AS `count`, `Values`.`depth` AS `depth`, `Values`.`parent_id` AS `parent_id`, `Proba_0.0` AS `Proba_0.0`, `LogProba_0.0` AS `LogProba_0.0`, `Proba_1.0` AS `Proba_1.0`, `LogProba_1.0` AS `LogProba_1.0`, `Proba_2.0` AS `Proba_2.0`, `LogProba_2.0` AS `LogProba_2.0`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS `node_id`, 'scaler_output_5' AS `feature`, -0.5082711577415466 AS `threshold`, 31 AS `count`, 0 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.43243243243243246 AS `Proba_0.0`, -0.838329190404 AS `LogProba_0.0`, 0.35135135135135137 AS `Proba_1.0`, -1.04596855518 AS `LogProba_1.0`, 0.21621621621621623 AS `Proba_2.0`, -1.53147637096 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 1 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 13 AS `count`, 1 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 1.0 AS `Proba_0.0`, 0.0 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 0 AS `Decision` UNION ALL SELECT 2 AS `node_id`, 'scaler_output_4' AS `feature`, 0.8444518446922302 AS `threshold`, 18 AS `count`, 1 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.6190476190476191 AS `Proba_1.0`, -0.479573080262 AS `LogProba_1.0`, 0.38095238095238093 AS `Proba_2.0`, -0.965080896044 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 3 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 10 AS `count`, 2 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 4 AS `node_id`, 'scaler_output_4' AS `feature`, 0.9613637924194336 AS `threshold`, 8 AS `count`, 2 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.1111111111111111 AS `Proba_1.0`, -2.19722457734 AS `LogProba_1.0`, 0.8888888888888888 AS `Proba_2.0`, -0.117783035656 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 5 AS `node_id`, 'scaler_output_3' AS `feature`, -0.5363814234733582 AS `threshold`, 3 AS `count`, 3 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.25 AS `Proba_1.0`, -1.38629436112 AS `LogProba_1.0`, 0.75 AS `Proba_2.0`, -0.287682072452 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 6 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 2 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision` UNION ALL SELECT 7 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 1 AS `count`, 4 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 1.0 AS `Proba_1.0`, 0.0 AS `LogProba_1.0`, 0.0 AS `Proba_2.0`, -1.79769313486231e+308 AS `LogProba_2.0`, 1 AS `Decision` UNION ALL SELECT 8 AS `node_id`, CAST(NULL AS STRING) AS `feature`, CAST(NULL AS FLOAT) AS `threshold`, 5 AS `count`, 3 AS `depth`, CAST(NULL AS INT) AS `parent_id`, 0.0 AS `Proba_0.0`, -1.79769313486231e+308 AS `LogProba_0.0`, 0.0 AS `Proba_1.0`, -1.79769313486231e+308 AS `LogProba_1.0`, 1.0 AS `Proba_2.0`, 0.0 AS `LogProba_2.0`, 2 AS `Decision`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.`node_id_2` AS `node_id_2`, `DT_node_data_3`.`node_id` AS `node_id`, `DT_node_data_3`.`feature` AS `feature`, `DT_node_data_3`.`threshold` AS `threshold`, `DT_node_data_3`.`count` AS `count`, `DT_node_data_3`.`depth` AS `depth`, `DT_node_data_3`.`parent_id` AS `parent_id`, `Proba_0.0` AS `Proba_0.0`, `LogProba_0.0` AS `LogProba_0.0`, `Proba_1.0` AS `Proba_1.0`, `LogProba_1.0` AS `LogProba_1.0`, `Proba_2.0` AS `Proba_2.0`, `LogProba_2.0` AS `LogProba_2.0`, `DT_node_data_3`.`Decision` AS `Decision` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.`node_id_2` = `DT_node_data_3`.`node_id`), 
`RF_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `join_key_3`, CAST(NULL AS FLOAT) AS `Score_3_0`, `Proba_0.0` AS `Proba_3_0`, `LogProba_0.0` AS `LogProba_3_0`, CAST(NULL AS FLOAT) AS `Score_3_1`, `Proba_1.0` AS `Proba_3_1`, `LogProba_1.0` AS `LogProba_3_1`, CAST(NULL AS FLOAT) AS `Score_3_2`, `Proba_2.0` AS `Proba_3_2`, `LogProba_2.0` AS `LogProba_3_2` 
FROM `DT_Output_3`), 
`RF_Join_CTE` AS 
(SELECT `RF_Tree_0`.`join_key_0` AS `join_key_0`, `RF_Tree_0`.`Score_0_0` AS `Score_0_0`, `RF_Tree_0`.`Proba_0_0` AS `Proba_0_0`, `RF_Tree_0`.`LogProba_0_0` AS `LogProba_0_0`, `RF_Tree_0`.`Score_0_1` AS `Score_0_1`, `RF_Tree_0`.`Proba_0_1` AS `Proba_0_1`, `RF_Tree_0`.`LogProba_0_1` AS `LogProba_0_1`, `RF_Tree_0`.`Score_0_2` AS `Score_0_2`, `RF_Tree_0`.`Proba_0_2` AS `Proba_0_2`, `RF_Tree_0`.`LogProba_0_2` AS `LogProba_0_2`, `RF_Tree_1`.`join_key_1` AS `join_key_1`, `RF_Tree_1`.`Score_1_0` AS `Score_1_0`, `RF_Tree_1`.`Proba_1_0` AS `Proba_1_0`, `RF_Tree_1`.`LogProba_1_0` AS `LogProba_1_0`, `RF_Tree_1`.`Score_1_1` AS `Score_1_1`, `RF_Tree_1`.`Proba_1_1` AS `Proba_1_1`, `RF_Tree_1`.`LogProba_1_1` AS `LogProba_1_1`, `RF_Tree_1`.`Score_1_2` AS `Score_1_2`, `RF_Tree_1`.`Proba_1_2` AS `Proba_1_2`, `RF_Tree_1`.`LogProba_1_2` AS `LogProba_1_2`, `RF_Tree_2`.`join_key_2` AS `join_key_2`, `RF_Tree_2`.`Score_2_0` AS `Score_2_0`, `RF_Tree_2`.`Proba_2_0` AS `Proba_2_0`, `RF_Tree_2`.`LogProba_2_0` AS `LogProba_2_0`, `RF_Tree_2`.`Score_2_1` AS `Score_2_1`, `RF_Tree_2`.`Proba_2_1` AS `Proba_2_1`, `RF_Tree_2`.`LogProba_2_1` AS `LogProba_2_1`, `RF_Tree_2`.`Score_2_2` AS `Score_2_2`, `RF_Tree_2`.`Proba_2_2` AS `Proba_2_2`, `RF_Tree_2`.`LogProba_2_2` AS `LogProba_2_2`, `RF_Tree_3`.`join_key_3` AS `join_key_3`, `RF_Tree_3`.`Score_3_0` AS `Score_3_0`, `RF_Tree_3`.`Proba_3_0` AS `Proba_3_0`, `RF_Tree_3`.`LogProba_3_0` AS `LogProba_3_0`, `RF_Tree_3`.`Score_3_1` AS `Score_3_1`, `RF_Tree_3`.`Proba_3_1` AS `Proba_3_1`, `RF_Tree_3`.`LogProba_3_1` AS `LogProba_3_1`, `RF_Tree_3`.`Score_3_2` AS `Score_3_2`, `RF_Tree_3`.`Proba_3_2` AS `Proba_3_2`, `RF_Tree_3`.`LogProba_3_2` AS `LogProba_3_2` 
FROM `RF_Tree_0` LEFT OUTER JOIN `RF_Tree_1` ON `RF_Tree_0`.`join_key_0` = `RF_Tree_1`.`join_key_1` LEFT OUTER JOIN `RF_Tree_2` ON `RF_Tree_2`.`join_key_2` = `RF_Tree_1`.`join_key_1` LEFT OUTER JOIN `RF_Tree_3` ON `RF_Tree_3`.`join_key_3` = `RF_Tree_2`.`join_key_2`), 
`RF_AVG_Scores` AS 
(SELECT `RF_Join_CTE`.`join_key_0` AS `KEY`, `RF_Join_CTE`.`Score_0_0` / 4 + `RF_Join_CTE`.`Score_1_0` / 4 + `RF_Join_CTE`.`Score_2_0` / 4 + `RF_Join_CTE`.`Score_3_0` / 4 AS `Score_0`, `RF_Join_CTE`.`Proba_0_0` / 4 + `RF_Join_CTE`.`Proba_1_0` / 4 + `RF_Join_CTE`.`Proba_2_0` / 4 + `RF_Join_CTE`.`Proba_3_0` / 4 AS `Proba_0`, `RF_Join_CTE`.`LogProba_0_0` / 4 + `RF_Join_CTE`.`LogProba_1_0` / 4 + `RF_Join_CTE`.`LogProba_2_0` / 4 + `RF_Join_CTE`.`LogProba_3_0` / 4 AS `LogProba_0`, `RF_Join_CTE`.`Score_0_1` / 4 + `RF_Join_CTE`.`Score_1_1` / 4 + `RF_Join_CTE`.`Score_2_1` / 4 + `RF_Join_CTE`.`Score_3_1` / 4 AS `Score_1`, `RF_Join_CTE`.`Proba_0_1` / 4 + `RF_Join_CTE`.`Proba_1_1` / 4 + `RF_Join_CTE`.`Proba_2_1` / 4 + `RF_Join_CTE`.`Proba_3_1` / 4 AS `Proba_1`, `RF_Join_CTE`.`LogProba_0_1` / 4 + `RF_Join_CTE`.`LogProba_1_1` / 4 + `RF_Join_CTE`.`LogProba_2_1` / 4 + `RF_Join_CTE`.`LogProba_3_1` / 4 AS `LogProba_1`, `RF_Join_CTE`.`Score_0_2` / 4 + `RF_Join_CTE`.`Score_1_2` / 4 + `RF_Join_CTE`.`Score_2_2` / 4 + `RF_Join_CTE`.`Score_3_2` / 4 AS `Score_2`, `RF_Join_CTE`.`Proba_0_2` / 4 + `RF_Join_CTE`.`Proba_1_2` / 4 + `RF_Join_CTE`.`Proba_2_2` / 4 + `RF_Join_CTE`.`Proba_3_2` / 4 AS `Proba_2`, `RF_Join_CTE`.`LogProba_0_2` / 4 + `RF_Join_CTE`.`LogProba_1_2` / 4 + `RF_Join_CTE`.`LogProba_2_2` / 4 + `RF_Join_CTE`.`LogProba_3_2` / 4 AS `LogProba_2` 
FROM `RF_Join_CTE`), 
`orig_cte` AS 
(SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Score_0` AS `Score_0`, `RF_AVG_Scores`.`Score_1` AS `Score_1`, `RF_AVG_Scores`.`Score_2` AS `Score_2`, `RF_AVG_Scores`.`Proba_0` AS `Proba_0`, `RF_AVG_Scores`.`Proba_1` AS `Proba_1`, `RF_AVG_Scores`.`Proba_2` AS `Proba_2`, `RF_AVG_Scores`.`LogProba_0` AS `LogProba_0`, `RF_AVG_Scores`.`LogProba_1` AS `LogProba_1`, `RF_AVG_Scores`.`LogProba_2` AS `LogProba_2`, CAST(NULL AS FLOAT) AS `Decision` 
FROM `RF_AVG_Scores`), 
`score_class_union` AS 
(SELECT `scu`.`KEY_u` AS `KEY_u`, `scu`.`class` AS `class`, `scu`.`LogProba` AS `LogProba`, `scu`.`Proba` AS `Proba`, `scu`.`Score` AS `Score` 
FROM (SELECT `orig_cte`.`KEY` AS `KEY_u`, 0 AS `class`, `orig_cte`.`LogProba_0` AS `LogProba`, `orig_cte`.`Proba_0` AS `Proba`, `orig_cte`.`Score_0` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, 1 AS `class`, `orig_cte`.`LogProba_1` AS `LogProba`, `orig_cte`.`Proba_1` AS `Proba`, `orig_cte`.`Score_1` AS `Score` 
FROM `orig_cte` UNION ALL SELECT `orig_cte`.`KEY` AS `KEY_u`, 2 AS `class`, `orig_cte`.`LogProba_2` AS `LogProba`, `orig_cte`.`Proba_2` AS `Proba`, `orig_cte`.`Score_2` AS `Score` 
FROM `orig_cte`) AS `scu`), 
`score_max` AS 
(SELECT `orig_cte`.`KEY` AS `KEY`, `orig_cte`.`Score_0` AS `Score_0`, `orig_cte`.`Score_1` AS `Score_1`, `orig_cte`.`Score_2` AS `Score_2`, `orig_cte`.`Proba_0` AS `Proba_0`, `orig_cte`.`Proba_1` AS `Proba_1`, `orig_cte`.`Proba_2` AS `Proba_2`, `orig_cte`.`LogProba_0` AS `LogProba_0`, `orig_cte`.`LogProba_1` AS `LogProba_1`, `orig_cte`.`LogProba_2` AS `LogProba_2`, `orig_cte`.`Decision` AS `Decision`, `max_select`.`KEY_m` AS `KEY_m`, `max_select`.`max_LogProba` AS `max_LogProba`, `max_select`.`max_Proba` AS `max_Proba`, `max_select`.`max_Score` AS `max_Score` 
FROM `orig_cte` LEFT OUTER JOIN (SELECT `score_class_union`.`KEY_u` AS `KEY_m`, max(`score_class_union`.`LogProba`) AS `max_LogProba`, max(`score_class_union`.`Proba`) AS `max_Proba`, max(`score_class_union`.`Score`) AS `max_Score` 
FROM `score_class_union` GROUP BY `score_class_union`.`KEY_u`) AS `max_select` ON `orig_cte`.`KEY` = `max_select`.`KEY_m`), 
`union_with_max` AS 
(SELECT `score_class_union`.`KEY_u` AS `KEY_u`, `score_class_union`.`class` AS `class`, `score_class_union`.`LogProba` AS `LogProba`, `score_class_union`.`Proba` AS `Proba`, `score_class_union`.`Score` AS `Score`, `score_max`.`KEY` AS `KEY`, `score_max`.`Score_0` AS `Score_0`, `score_max`.`Score_1` AS `Score_1`, `score_max`.`Score_2` AS `Score_2`, `score_max`.`Proba_0` AS `Proba_0`, `score_max`.`Proba_1` AS `Proba_1`, `score_max`.`Proba_2` AS `Proba_2`, `score_max`.`LogProba_0` AS `LogProba_0`, `score_max`.`LogProba_1` AS `LogProba_1`, `score_max`.`LogProba_2` AS `LogProba_2`, `score_max`.`Decision` AS `Decision`, `score_max`.`KEY_m` AS `KEY_m`, `score_max`.`max_LogProba` AS `max_LogProba`, `score_max`.`max_Proba` AS `max_Proba`, `score_max`.`max_Score` AS `max_Score` 
FROM `score_class_union` LEFT OUTER JOIN `score_max` ON `score_class_union`.`KEY_u` = `score_max`.`KEY`), 
`arg_max_cte` AS 
(SELECT `score_max`.`KEY` AS `KEY`, `score_max`.`Score_0` AS `Score_0`, `score_max`.`Score_1` AS `Score_1`, `score_max`.`Score_2` AS `Score_2`, `score_max`.`Proba_0` AS `Proba_0`, `score_max`.`Proba_1` AS `Proba_1`, `score_max`.`Proba_2` AS `Proba_2`, `score_max`.`LogProba_0` AS `LogProba_0`, `score_max`.`LogProba_1` AS `LogProba_1`, `score_max`.`LogProba_2` AS `LogProba_2`, `score_max`.`Decision` AS `Decision`, `score_max`.`KEY_m` AS `KEY_m`, `score_max`.`max_LogProba` AS `max_LogProba`, `score_max`.`max_Proba` AS `max_Proba`, `score_max`.`max_Score` AS `max_Score`, `arg_max_t_Proba`.`KEY_Proba` AS `KEY_Proba`, `arg_max_t_Proba`.`arg_max_Proba` AS `arg_max_Proba` 
FROM `score_max` LEFT OUTER JOIN (SELECT `union_with_max`.`KEY` AS `KEY_Proba`, min(`union_with_max`.`class`) AS `arg_max_Proba` 
FROM `union_with_max` 
WHERE `union_with_max`.`max_Proba` = `union_with_max`.`Proba` GROUP BY `union_with_max`.`KEY`) AS `arg_max_t_Proba` ON `score_max`.`KEY` = `arg_max_t_Proba`.`KEY_Proba`)
 SELECT `arg_max_cte`.`KEY` AS `KEY`, `arg_max_cte`.`Score_0` AS `Score_0`, `arg_max_cte`.`Score_1` AS `Score_1`, `arg_max_cte`.`Score_2` AS `Score_2`, `arg_max_cte`.`Proba_0` AS `Proba_0`, `arg_max_cte`.`Proba_1` AS `Proba_1`, `arg_max_cte`.`Proba_2` AS `Proba_2`, CASE WHEN (`arg_max_cte`.`Proba_0` IS NULL OR `arg_max_cte`.`Proba_0` > 0.0) THEN log(`arg_max_cte`.`Proba_0`) ELSE -1.79769313486231e+308 END AS `LogProba_0`, CASE WHEN (`arg_max_cte`.`Proba_1` IS NULL OR `arg_max_cte`.`Proba_1` > 0.0) THEN log(`arg_max_cte`.`Proba_1`) ELSE -1.79769313486231e+308 END AS `LogProba_1`, CASE WHEN (`arg_max_cte`.`Proba_2` IS NULL OR `arg_max_cte`.`Proba_2` > 0.0) THEN log(`arg_max_cte`.`Proba_2`) ELSE -1.79769313486231e+308 END AS `LogProba_2`, `arg_max_cte`.`arg_max_Proba` AS `Decision` 
FROM `arg_max_cte`