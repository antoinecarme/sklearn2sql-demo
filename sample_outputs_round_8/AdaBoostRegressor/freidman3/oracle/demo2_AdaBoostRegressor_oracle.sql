-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_2" <= 0.10105706006288528) THEN CASE WHEN ("ADS"."Feature_1" <= 516.97119140625) THEN 2 ELSE CASE WHEN ("ADS"."Feature_3" <= 8.204108238220215) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_3" <= 7.192191123962402) THEN CASE WHEN ("ADS"."Feature_1" <= 924.8966064453125) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_0" <= 21.16606330871582) THEN 11 ELSE 12 END END END AS node_id_2 
FROM freidman3 "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_2' AS feature, 0.10105706006288528 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.440449745240012 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 516.97119140625 AS threshold, 3 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.0996390945457297 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8079109230317987 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_3' AS feature, 8.204108238220215 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.2455031803026952 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.350090108150775 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1409162524546155 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_3' AS feature, 7.192191123962402 AS threshold, 22 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4869239248801416 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_1' AS feature, 924.8966064453125 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4008969219959515 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3603369207217961 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5225769258184174 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_0' AS feature, 21.16606330871582 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5360822122425357 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5621705336357417 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4891232337347655 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"AdaBoost_Estim_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", 0.279600088036 * "DT_Output"."Estimator" AS "Estimator", 0.279600088036 AS "Weight" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 640.13134765625) THEN CASE WHEN ("ADS"."Feature_0" <= 37.170860290527344) THEN CASE WHEN ("ADS"."Feature_2" <= 0.19936510920524597) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_0" <= 55.48760223388672) THEN 6 ELSE 7 END END ELSE CASE WHEN ("ADS"."Feature_1" <= 1439.473876953125) THEN CASE WHEN ("ADS"."Feature_1" <= 982.6378173828125) THEN 10 ELSE 11 END ELSE 12 END END AS node_id_2 
FROM freidman3 "ADS"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 640.13134765625 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3586144707569667 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_0' AS feature, 37.170860290527344 AS threshold, 14 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.2573820021225994 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, 'Feature_2' AS feature, 0.19936510920524597 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3994681918331808 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1409162524546155 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.502888967584607 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, 'Feature_0' AS feature, 55.48760223388672 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1152958124120178 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8079109230317987 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.166526627308721 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, 'Feature_1' AS feature, 1439.473876953125 AS threshold, 11 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4874557944734341 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, 'Feature_1' AS feature, 982.6378173828125 AS threshold, 10 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5011923631056998 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.460028915658808 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5188338405829394 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.350090108150775 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".count AS count, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"AdaBoost_Estim_1" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.102817595173 * "DT_Output_1"."Estimator" AS "Estimator", 0.102817595173 AS "Weight" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_3" <= 7.192191123962402) THEN CASE WHEN ("ADS"."Feature_1" <= 246.04263305664062) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 0.7070679068565369) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_0" <= 17.830780029296875) THEN CASE WHEN ("ADS"."Feature_2" <= 0.385817289352417) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_3" <= 9.429767608642578) THEN 11 ELSE 12 END END END AS node_id_2 
FROM freidman3 "ADS"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_3' AS feature, 7.192191123962402 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4379019941256135 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_1' AS feature, 246.04263305664062 AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3994592086429118 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1440564349145939 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 0.7070679068565369 AS threshold, 15 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4164860602247995 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 11 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3832445831584648 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5079001221572212 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_0' AS feature, 17.830780029296875 AS threshold, 9 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5062447238726397 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_2' AS feature, 0.385817289352417 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.556751751592196 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5359670902044162 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5671440822860863 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_3' AS feature, 9.429767608642578 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4809912100128615 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4969968250782797 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4729884024801523 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".count AS count, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"AdaBoost_Estim_2" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.325584719085 * "DT_Output_2"."Estimator" AS "Estimator", 0.325584719085 AS "Weight" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_1" <= 679.9035034179688) THEN CASE WHEN ("ADS"."Feature_3" <= 4.06135892868042) THEN 2 ELSE CASE WHEN ("ADS"."Feature_2" <= 0.7777819633483887) THEN 4 ELSE 5 END END ELSE CASE WHEN ("ADS"."Feature_2" <= 0.44081854820251465) THEN CASE WHEN ("ADS"."Feature_3" <= 6.489810943603516) THEN 8 ELSE 9 END ELSE CASE WHEN ("ADS"."Feature_0" <= 42.77581787109375) THEN 11 ELSE 12 END END END AS node_id_2 
FROM freidman3 "ADS"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_1' AS feature, 679.9035034179688 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3085334457737732 AS "Estimator" FROM DUAL UNION ALL SELECT 1 AS node_id, 'Feature_3' AS feature, 4.06135892868042 AS threshold, 15 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.2167973888345756 AS "Estimator" FROM DUAL UNION ALL SELECT 2 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0.8079109230317987 AS "Estimator" FROM DUAL UNION ALL SELECT 3 AS node_id, 'Feature_2' AS feature, 0.7777819633483887 AS threshold, 14 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.2460035649633454 AS "Estimator" FROM DUAL UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.1428003619306026 AS "Estimator" FROM DUAL UNION ALL SELECT 5 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 9 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3033386777593137 AS "Estimator" FROM DUAL UNION ALL SELECT 6 AS node_id, 'Feature_2' AS feature, 0.44081854820251465 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.44613753118257 AS "Estimator" FROM DUAL UNION ALL SELECT 7 AS node_id, 'Feature_3' AS feature, 6.489810943603516 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3836869583532532 AS "Estimator" FROM DUAL UNION ALL SELECT 8 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.3560247855984002 AS "Estimator" FROM DUAL UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.4251802174855326 AS "Estimator" FROM DUAL UNION ALL SELECT 10 AS node_id, 'Feature_0' AS feature, 42.77581787109375 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.508588104011887 AS "Estimator" FROM DUAL UNION ALL SELECT 11 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.5518701983015526 AS "Estimator" FROM DUAL UNION ALL SELECT 12 AS node_id, CAST(NULL AS VARCHAR2(256 CHAR)) AS feature, CAST(NULL AS FLOAT) AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 1.479733374485443 AS "Estimator" FROM DUAL) "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".count AS count, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Estimator" AS "Estimator" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"AdaBoost_Estim_3" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.291997597706 * "DT_Output_3"."Estimator" AS "Estimator", 0.291997597706 AS "Weight" 
FROM "DT_Output_3"), 
"WeightedEstimators" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Estimator" AS "Estimator", ensemble_score_union."Weight" AS "Weight" 
FROM (SELECT "AdaBoost_Estim_0"."KEY" AS "KEY", "AdaBoost_Estim_0"."Estimator" AS "Estimator", "AdaBoost_Estim_0"."Weight" AS "Weight" 
FROM "AdaBoost_Estim_0" UNION ALL SELECT "AdaBoost_Estim_1"."KEY" AS "KEY", "AdaBoost_Estim_1"."Estimator" AS "Estimator", "AdaBoost_Estim_1"."Weight" AS "Weight" 
FROM "AdaBoost_Estim_1" UNION ALL SELECT "AdaBoost_Estim_2"."KEY" AS "KEY", "AdaBoost_Estim_2"."Estimator" AS "Estimator", "AdaBoost_Estim_2"."Weight" AS "Weight" 
FROM "AdaBoost_Estim_2" UNION ALL SELECT "AdaBoost_Estim_3"."KEY" AS "KEY", "AdaBoost_Estim_3"."Estimator" AS "Estimator", "AdaBoost_Estim_3"."Weight" AS "Weight" 
FROM "AdaBoost_Estim_3") ensemble_score_union), 
"Cumulative_Frequencies" AS 
(SELECT u1."KEY" AS "KEY", u1."Estimator" AS "Estimator", u1."Weight" AS "Weight", (SELECT sum(u2."Weight") AS sum_1 
FROM "WeightedEstimators" u2 
WHERE u1."KEY" = u2."KEY" AND u1."Estimator" >= u2."Estimator") AS cum_weight 
FROM "WeightedEstimators" u1), 
"Quantiles" AS 
(SELECT "WeightedEstimators"."KEY" AS "KEY", "WeightedEstimators"."Estimator" AS "Estimator", "WeightedEstimators"."Weight" AS "Weight", (SELECT min("Cumulative_Frequencies"."Estimator") AS min_1 
FROM "Cumulative_Frequencies" 
WHERE "WeightedEstimators"."KEY" = "Cumulative_Frequencies"."KEY" AND "Cumulative_Frequencies".cum_weight >= 0.5) AS "Estimator_Quantile" 
FROM "WeightedEstimators"), 
"ADA_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Estimator" AS "Estimator" 
FROM (SELECT "Quantiles"."KEY" AS "KEY", min("Quantiles"."Estimator_Quantile") AS "Estimator" 
FROM "Quantiles" GROUP BY "Quantiles"."KEY") "T")
 SELECT "ADA_Sum_Scores"."KEY" AS "KEY", "ADA_Sum_Scores"."Estimator" AS "Estimator" 
FROM "ADA_Sum_Scores"