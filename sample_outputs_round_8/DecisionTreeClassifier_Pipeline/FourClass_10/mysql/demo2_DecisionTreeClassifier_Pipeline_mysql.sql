-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN -0.0166601472776 ELSE `ADS`.`Feature_0` END AS impter_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 0.516272913818 ELSE `ADS`.`Feature_1` END AS impter_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.045854831728 ELSE `ADS`.`Feature_2` END AS impter_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 0.393876252945 ELSE `ADS`.`Feature_3` END AS impter_5, CASE WHEN (`ADS`.`Feature_4` IS NULL) THEN -0.480683431081 ELSE `ADS`.`Feature_4` END AS impter_6, CASE WHEN (`ADS`.`Feature_5` IS NULL) THEN -0.0754525765206 ELSE `ADS`.`Feature_5` END AS impter_7, CASE WHEN (`ADS`.`Feature_6` IS NULL) THEN -0.116142518808 ELSE `ADS`.`Feature_6` END AS impter_8, CASE WHEN (`ADS`.`Feature_7` IS NULL) THEN -0.397193027446 ELSE `ADS`.`Feature_7` END AS impter_9, CASE WHEN (`ADS`.`Feature_8` IS NULL) THEN 0.289223217606 ELSE `ADS`.`Feature_8` END AS impter_10, CASE WHEN (`ADS`.`Feature_9` IS NULL) THEN 0.0715919221158 ELSE `ADS`.`Feature_9` END AS impter_11 
FROM `FourClass_10` AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.impter_2 AS DOUBLE) - -0.0166601472776) / 1.04538177897 AS scaler_2, (CAST(`ADS_imp_1_OUT`.impter_3 AS DOUBLE) - 0.516272913818) / 1.31450310589 AS scaler_3, (CAST(`ADS_imp_1_OUT`.impter_4 AS DOUBLE) - 0.045854831728) / 1.56219218195 AS scaler_4, (CAST(`ADS_imp_1_OUT`.impter_5 AS DOUBLE) - 0.393876252945) / 2.3960998534 AS scaler_5, (CAST(`ADS_imp_1_OUT`.impter_6 AS DOUBLE) - -0.480683431081) / 1.20344059845 AS scaler_6, (CAST(`ADS_imp_1_OUT`.impter_7 AS DOUBLE) - -0.0754525765206) / 0.838068867257 AS scaler_7, (CAST(`ADS_imp_1_OUT`.impter_8 AS DOUBLE) - -0.116142518808) / 1.05306709377 AS scaler_8, (CAST(`ADS_imp_1_OUT`.impter_9 AS DOUBLE) - -0.397193027446) / 1.78314721805 AS scaler_9, (CAST(`ADS_imp_1_OUT`.impter_10 AS DOUBLE) - 0.289223217606) / 0.92879323246 AS scaler_10, (CAST(`ADS_imp_1_OUT`.impter_11 AS DOUBLE) - 0.0715919221158) / 0.976280049427 AS scaler_11 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= -0.7113025188446045) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_10 <= 1.301293969154358) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_6 <= 0.448508083820343) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_2 <= 0.08243580162525177) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_3 <= -0.7602242231369019) THEN 7 ELSE 8 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_7 <= -0.9363440275192261) THEN 10 ELSE 11 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_5 <= 0.7734205722808838) THEN 13 ELSE 14 END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Proba_0` AS `Proba_0`, `Values`.`LogProba_0` AS `LogProba_0`, `Values`.`Proba_1` AS `Proba_1`, `Values`.`LogProba_1` AS `LogProba_1`, `Values`.`Proba_2` AS `Proba_2`, `Values`.`LogProba_2` AS `LogProba_2`, `Values`.`Proba_3` AS `Proba_3`, `Values`.`LogProba_3` AS `LogProba_3`, `Values`.`Decision` AS `Decision` 
FROM (SELECT 0 AS node_id, 'scaler_5' AS feature, -0.7113025188446045 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.24 AS `Proba_0`, -1.42711635564 AS `LogProba_0`, 0.2 AS `Proba_1`, -1.60943791243 AS `LogProba_1`, 0.24 AS `Proba_2`, -1.42711635564 AS `LogProba_2`, 0.32 AS `Proba_3`, -1.13943428319 AS `LogProba_3`, 3 AS `Decision` UNION ALL SELECT 1 AS node_id, 'scaler_10' AS feature, 1.301293969154358 AS threshold, 7 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.14285714285714285 AS `Proba_0`, -1.94591014906 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.8571428571428571 AS `Proba_2`, -0.154150679827 AS `LogProba_2`, 0.0 AS `Proba_3`, -1.79769313486231e+308 AS `LogProba_3`, 2 AS `Decision` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 1.0 AS `Proba_2`, 0.0 AS `LogProba_2`, 0.0 AS `Proba_3`, -1.79769313486231e+308 AS `LogProba_3`, 2 AS `Decision` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.0 AS `Proba_3`, -1.79769313486231e+308 AS `LogProba_3`, 0 AS `Decision` UNION ALL SELECT 4 AS node_id, 'scaler_6' AS feature, 0.448508083820343 AS threshold, 18 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.2777777777777778 AS `Proba_0`, -1.28093384546 AS `LogProba_0`, 0.2777777777777778 AS `Proba_1`, -1.28093384546 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.4444444444444444 AS `Proba_3`, -0.810930216216 AS `LogProba_3`, 3 AS `Decision` UNION ALL SELECT 5 AS node_id, 'scaler_2' AS feature, 0.08243580162525177 AS threshold, 12 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.3333333333333333 AS `Proba_1`, -1.09861228867 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.6666666666666666 AS `Proba_3`, -0.405465108108 AS `LogProba_3`, 3 AS `Decision` UNION ALL SELECT 6 AS node_id, 'scaler_3' AS feature, -0.7602242231369019 AS threshold, 8 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.125 AS `Proba_1`, -2.07944154168 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.875 AS `Proba_3`, -0.133531392625 AS `LogProba_3`, 3 AS `Decision` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.0 AS `Proba_3`, -1.79769313486231e+308 AS `LogProba_3`, 1 AS `Decision` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 7 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1.0 AS `Proba_3`, 0.0 AS `LogProba_3`, 3 AS `Decision` UNION ALL SELECT 9 AS node_id, 'scaler_7' AS feature, -0.9363440275192261 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.75 AS `Proba_1`, -0.287682072452 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.25 AS `Proba_3`, -1.38629436112 AS `LogProba_3`, 1 AS `Decision` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 1.0 AS `Proba_3`, 0.0 AS `LogProba_3`, 3 AS `Decision` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.0 AS `Proba_3`, -1.79769313486231e+308 AS `LogProba_3`, 1 AS `Decision` UNION ALL SELECT 12 AS node_id, 'scaler_5' AS feature, 0.7734205722808838 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8333333333333334 AS `Proba_0`, -0.182321556794 AS `LogProba_0`, 0.16666666666666666 AS `Proba_1`, -1.79175946923 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.0 AS `Proba_3`, -1.79769313486231e+308 AS `LogProba_3`, 0 AS `Decision` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.0 AS `Proba_0`, 0.0 AS `LogProba_0`, 0.0 AS `Proba_1`, -1.79769313486231e+308 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.0 AS `Proba_3`, -1.79769313486231e+308 AS `LogProba_3`, 0 AS `Decision` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.0 AS `Proba_0`, -1.79769313486231e+308 AS `LogProba_0`, 1.0 AS `Proba_1`, 0.0 AS `LogProba_1`, 0.0 AS `Proba_2`, -1.79769313486231e+308 AS `LogProba_2`, 0.0 AS `Proba_3`, -1.79769313486231e+308 AS `LogProba_3`, 1 AS `Decision`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Proba_0` AS `Proba_0`, `DT_node_data`.`LogProba_0` AS `LogProba_0`, `DT_node_data`.`Proba_1` AS `Proba_1`, `DT_node_data`.`LogProba_1` AS `LogProba_1`, `DT_node_data`.`Proba_2` AS `Proba_2`, `DT_node_data`.`LogProba_2` AS `LogProba_2`, `DT_node_data`.`Proba_3` AS `Proba_3`, `DT_node_data`.`LogProba_3` AS `LogProba_3`, `DT_node_data`.`Decision` AS `Decision` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id)
 SELECT `DT_Output`.`KEY` AS `KEY`, NULL AS `Score_0`, NULL AS `Score_1`, NULL AS `Score_2`, NULL AS `Score_3`, `DT_Output`.`Proba_0` AS `Proba_0`, `DT_Output`.`Proba_1` AS `Proba_1`, `DT_Output`.`Proba_2` AS `Proba_2`, `DT_Output`.`Proba_3` AS `Proba_3`, `DT_Output`.`LogProba_0` AS `LogProba_0`, `DT_Output`.`LogProba_1` AS `LogProba_1`, `DT_Output`.`LogProba_2` AS `LogProba_2`, `DT_Output`.`LogProba_3` AS `LogProba_3`, `DT_Output`.`Decision` AS `Decision` 
FROM `DT_Output`