-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "DT_node_lookup" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_95" <= -0.30009958148002625) THEN CASE WHEN ("ADS"."Feature_41" <= -0.9126613140106201) THEN CASE WHEN ("ADS"."Feature_13" <= -0.06840983033180237) THEN 3 ELSE 4 END ELSE CASE WHEN ("ADS"."Feature_3" <= 0.5127218961715698) THEN CASE WHEN ("ADS"."Feature_28" <= -1.2904977798461914) THEN 7 ELSE CASE WHEN ("ADS"."Feature_57" <= 0.48375165462493896) THEN 9 ELSE 10 END END ELSE CASE WHEN ("ADS"."Feature_54" <= 0.2129017859697342) THEN CASE WHEN ("ADS"."Feature_82" <= -0.36400195956230164) THEN 13 ELSE 14 END ELSE 15 END END END ELSE CASE WHEN ("ADS"."Feature_60" <= -0.8583354949951172) THEN CASE WHEN ("ADS"."Feature_53" <= 0.6827864646911621) THEN CASE WHEN ("ADS"."Feature_8" <= 0.9435015916824341) THEN 19 ELSE 20 END ELSE 21 END ELSE CASE WHEN ("ADS"."Feature_23" <= 0.1831723004579544) THEN CASE WHEN ("ADS"."Feature_32" <= -1.0851130485534668) THEN 24 ELSE CASE WHEN ("ADS"."Feature_28" <= 0.43662652373313904) THEN 26 ELSE 27 END END ELSE CASE WHEN ("ADS"."Feature_47" <= 0.354297012090683) THEN CASE WHEN ("ADS"."Feature_87" <= 0.4744941294193268) THEN 30 ELSE 31 END ELSE 32 END END END END AS node_id_2 
FROM "RandomReg_100" AS "ADS"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".count AS count, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Estimator" AS "Estimator" 
FROM (SELECT 0 AS node_id, 'Feature_95' AS feature, -0.30009958148002625 AS threshold, 25 AS count, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, -7.759132883202057 AS "Estimator" UNION ALL SELECT 1 AS node_id, 'Feature_41' AS feature, -0.9126613140106201 AS threshold, 9 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, -277.96903302925284 AS "Estimator" UNION ALL SELECT 2 AS node_id, 'Feature_13' AS feature, -0.06840983033180237 AS threshold, 2 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -442.77691469475906 AS "Estimator" UNION ALL SELECT 3 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -454.8215873712685 AS "Estimator" UNION ALL SELECT 4 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -430.73224201824956 AS "Estimator" UNION ALL SELECT 5 AS node_id, 'Feature_3' AS feature, 0.5127218961715698 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -230.8810668391082 AS "Estimator" UNION ALL SELECT 6 AS node_id, 'Feature_28' AS feature, -1.2904977798461914 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -191.66495455914537 AS "Estimator" UNION ALL SELECT 7 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -167.53786194153668 AS "Estimator" UNION ALL SELECT 8 AS node_id, 'Feature_57' AS feature, 0.48375165462493896 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -199.70731876501495 AS "Estimator" UNION ALL SELECT 9 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -201.47286615820826 AS "Estimator" UNION ALL SELECT 10 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -196.1762239786283 AS "Estimator" UNION ALL SELECT 11 AS node_id, 'Feature_54' AS feature, 0.2129017859697342 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -283.1692165457253 AS "Estimator" UNION ALL SELECT 12 AS node_id, 'Feature_82' AS feature, -0.36400195956230164 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -269.47215545227243 AS "Estimator" UNION ALL SELECT 13 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -257.9792248911821 AS "Estimator" UNION ALL SELECT 14 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, -280.96508601336274 AS "Estimator" UNION ALL SELECT 15 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -310.5633387326311 AS "Estimator" UNION ALL SELECT 16 AS node_id, 'Feature_60' AS feature, -0.8583354949951172 AS threshold, 16 AS count, 1 AS depth, CAST(NULL AS INTEGER) AS parent_id, 144.23393594895148 AS "Estimator" UNION ALL SELECT 17 AS node_id, 'Feature_53' AS feature, 0.6827864646911621 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, -88.15439277773953 AS "Estimator" UNION ALL SELECT 18 AS node_id, 'Feature_8' AS feature, 0.9435015916824341 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -61.94483260781769 AS "Estimator" UNION ALL SELECT 19 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -81.7867004977118 AS "Estimator" UNION ALL SELECT 20 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -42.10296471792358 AS "Estimator" UNION ALL SELECT 21 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, -140.57351311758322 AS "Estimator" UNION ALL SELECT 22 AS node_id, 'Feature_23' AS feature, 0.1831723004579544 AS threshold, 13 AS count, 2 AS depth, CAST(NULL AS INTEGER) AS parent_id, 197.8620118089571 AS "Estimator" UNION ALL SELECT 23 AS node_id, 'Feature_32' AS feature, -1.0851130485534668 AS threshold, 7 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 285.46671388612197 AS "Estimator" UNION ALL SELECT 24 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 419.81179047870665 AS "Estimator" UNION ALL SELECT 25 AS node_id, 'Feature_28' AS feature, 0.43662652373313904 AS threshold, 6 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 263.0758677873578 AS "Estimator" UNION ALL SELECT 26 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 214.3655675098842 AS "Estimator" UNION ALL SELECT 27 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 287.4310179260947 AS "Estimator" UNION ALL SELECT 28 AS node_id, 'Feature_47' AS feature, 0.354297012090683 AS threshold, 6 AS count, 3 AS depth, CAST(NULL AS INTEGER) AS parent_id, 95.6565260522648 AS "Estimator" UNION ALL SELECT 29 AS node_id, 'Feature_87' AS feature, 0.4744941294193268 AS threshold, 5 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, 125.75140452667378 AS "Estimator" UNION ALL SELECT 30 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 4 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 96.53862279719101 AS "Estimator" UNION ALL SELECT 31 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS INTEGER) AS parent_id, 242.6025314446048 AS "Estimator" UNION ALL SELECT 32 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS INTEGER) AS parent_id, -54.817866319780094 AS "Estimator") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".count AS count, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Estimator" AS "Estimator" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id)
 SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Estimator" AS "Estimator" 
FROM "DT_Output"