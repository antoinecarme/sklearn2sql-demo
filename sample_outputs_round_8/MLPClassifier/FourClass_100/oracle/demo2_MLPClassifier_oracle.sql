-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) AS "Feature_0", CAST("ADS"."Feature_1" AS FLOAT) AS "Feature_1", CAST("ADS"."Feature_2" AS FLOAT) AS "Feature_2", CAST("ADS"."Feature_3" AS FLOAT) AS "Feature_3", CAST("ADS"."Feature_4" AS FLOAT) AS "Feature_4", CAST("ADS"."Feature_5" AS FLOAT) AS "Feature_5", CAST("ADS"."Feature_6" AS FLOAT) AS "Feature_6", CAST("ADS"."Feature_7" AS FLOAT) AS "Feature_7", CAST("ADS"."Feature_8" AS FLOAT) AS "Feature_8", CAST("ADS"."Feature_9" AS FLOAT) AS "Feature_9", CAST("ADS"."Feature_10" AS FLOAT) AS "Feature_10", CAST("ADS"."Feature_11" AS FLOAT) AS "Feature_11", CAST("ADS"."Feature_12" AS FLOAT) AS "Feature_12", CAST("ADS"."Feature_13" AS FLOAT) AS "Feature_13", CAST("ADS"."Feature_14" AS FLOAT) AS "Feature_14", CAST("ADS"."Feature_15" AS FLOAT) AS "Feature_15", CAST("ADS"."Feature_16" AS FLOAT) AS "Feature_16", CAST("ADS"."Feature_17" AS FLOAT) AS "Feature_17", CAST("ADS"."Feature_18" AS FLOAT) AS "Feature_18", CAST("ADS"."Feature_19" AS FLOAT) AS "Feature_19", CAST("ADS"."Feature_20" AS FLOAT) AS "Feature_20", CAST("ADS"."Feature_21" AS FLOAT) AS "Feature_21", CAST("ADS"."Feature_22" AS FLOAT) AS "Feature_22", CAST("ADS"."Feature_23" AS FLOAT) AS "Feature_23", CAST("ADS"."Feature_24" AS FLOAT) AS "Feature_24", CAST("ADS"."Feature_25" AS FLOAT) AS "Feature_25", CAST("ADS"."Feature_26" AS FLOAT) AS "Feature_26", CAST("ADS"."Feature_27" AS FLOAT) AS "Feature_27", CAST("ADS"."Feature_28" AS FLOAT) AS "Feature_28", CAST("ADS"."Feature_29" AS FLOAT) AS "Feature_29", CAST("ADS"."Feature_30" AS FLOAT) AS "Feature_30", CAST("ADS"."Feature_31" AS FLOAT) AS "Feature_31", CAST("ADS"."Feature_32" AS FLOAT) AS "Feature_32", CAST("ADS"."Feature_33" AS FLOAT) AS "Feature_33", CAST("ADS"."Feature_34" AS FLOAT) AS "Feature_34", CAST("ADS"."Feature_35" AS FLOAT) AS "Feature_35", CAST("ADS"."Feature_36" AS FLOAT) AS "Feature_36", CAST("ADS"."Feature_37" AS FLOAT) AS "Feature_37", CAST("ADS"."Feature_38" AS FLOAT) AS "Feature_38", CAST("ADS"."Feature_39" AS FLOAT) AS "Feature_39", CAST("ADS"."Feature_40" AS FLOAT) AS "Feature_40", CAST("ADS"."Feature_41" AS FLOAT) AS "Feature_41", CAST("ADS"."Feature_42" AS FLOAT) AS "Feature_42", CAST("ADS"."Feature_43" AS FLOAT) AS "Feature_43", CAST("ADS"."Feature_44" AS FLOAT) AS "Feature_44", CAST("ADS"."Feature_45" AS FLOAT) AS "Feature_45", CAST("ADS"."Feature_46" AS FLOAT) AS "Feature_46", CAST("ADS"."Feature_47" AS FLOAT) AS "Feature_47", CAST("ADS"."Feature_48" AS FLOAT) AS "Feature_48", CAST("ADS"."Feature_49" AS FLOAT) AS "Feature_49", CAST("ADS"."Feature_50" AS FLOAT) AS "Feature_50", CAST("ADS"."Feature_51" AS FLOAT) AS "Feature_51", CAST("ADS"."Feature_52" AS FLOAT) AS "Feature_52", CAST("ADS"."Feature_53" AS FLOAT) AS "Feature_53", CAST("ADS"."Feature_54" AS FLOAT) AS "Feature_54", CAST("ADS"."Feature_55" AS FLOAT) AS "Feature_55", CAST("ADS"."Feature_56" AS FLOAT) AS "Feature_56", CAST("ADS"."Feature_57" AS FLOAT) AS "Feature_57", CAST("ADS"."Feature_58" AS FLOAT) AS "Feature_58", CAST("ADS"."Feature_59" AS FLOAT) AS "Feature_59", CAST("ADS"."Feature_60" AS FLOAT) AS "Feature_60", CAST("ADS"."Feature_61" AS FLOAT) AS "Feature_61", CAST("ADS"."Feature_62" AS FLOAT) AS "Feature_62", CAST("ADS"."Feature_63" AS FLOAT) AS "Feature_63", CAST("ADS"."Feature_64" AS FLOAT) AS "Feature_64", CAST("ADS"."Feature_65" AS FLOAT) AS "Feature_65", CAST("ADS"."Feature_66" AS FLOAT) AS "Feature_66", CAST("ADS"."Feature_67" AS FLOAT) AS "Feature_67", CAST("ADS"."Feature_68" AS FLOAT) AS "Feature_68", CAST("ADS"."Feature_69" AS FLOAT) AS "Feature_69", CAST("ADS"."Feature_70" AS FLOAT) AS "Feature_70", CAST("ADS"."Feature_71" AS FLOAT) AS "Feature_71", CAST("ADS"."Feature_72" AS FLOAT) AS "Feature_72", CAST("ADS"."Feature_73" AS FLOAT) AS "Feature_73", CAST("ADS"."Feature_74" AS FLOAT) AS "Feature_74", CAST("ADS"."Feature_75" AS FLOAT) AS "Feature_75", CAST("ADS"."Feature_76" AS FLOAT) AS "Feature_76", CAST("ADS"."Feature_77" AS FLOAT) AS "Feature_77", CAST("ADS"."Feature_78" AS FLOAT) AS "Feature_78", CAST("ADS"."Feature_79" AS FLOAT) AS "Feature_79", CAST("ADS"."Feature_80" AS FLOAT) AS "Feature_80", CAST("ADS"."Feature_81" AS FLOAT) AS "Feature_81", CAST("ADS"."Feature_82" AS FLOAT) AS "Feature_82", CAST("ADS"."Feature_83" AS FLOAT) AS "Feature_83", CAST("ADS"."Feature_84" AS FLOAT) AS "Feature_84", CAST("ADS"."Feature_85" AS FLOAT) AS "Feature_85", CAST("ADS"."Feature_86" AS FLOAT) AS "Feature_86", CAST("ADS"."Feature_87" AS FLOAT) AS "Feature_87", CAST("ADS"."Feature_88" AS FLOAT) AS "Feature_88", CAST("ADS"."Feature_89" AS FLOAT) AS "Feature_89", CAST("ADS"."Feature_90" AS FLOAT) AS "Feature_90", CAST("ADS"."Feature_91" AS FLOAT) AS "Feature_91", CAST("ADS"."Feature_92" AS FLOAT) AS "Feature_92", CAST("ADS"."Feature_93" AS FLOAT) AS "Feature_93", CAST("ADS"."Feature_94" AS FLOAT) AS "Feature_94", CAST("ADS"."Feature_95" AS FLOAT) AS "Feature_95", CAST("ADS"."Feature_96" AS FLOAT) AS "Feature_96", CAST("ADS"."Feature_97" AS FLOAT) AS "Feature_97", CAST("ADS"."Feature_98" AS FLOAT) AS "Feature_98", CAST("ADS"."Feature_99" AS FLOAT) AS "Feature_99" 
FROM "FourClass_100" "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.212885250262 * "IL"."Feature_0" + -0.0831909460447 * "IL"."Feature_1" + -0.0315832270162 * "IL"."Feature_2" + -1.50604745086 * "IL"."Feature_3" + -0.206698538729 * "IL"."Feature_4" + 0.356215442522 * "IL"."Feature_5" + 1.63862274393 * "IL"."Feature_6" + 0.524282421268 * "IL"."Feature_7" + -0.335176567659 * "IL"."Feature_8" + 0.473945433414 * "IL"."Feature_9" + 0.420533258883 * "IL"."Feature_10" + -0.534788758905 * "IL"."Feature_11" + -0.283968925007 * "IL"."Feature_12" + -0.11791028942 * "IL"."Feature_13" + 0.4811220386 * "IL"."Feature_14" + -1.03817557509 * "IL"."Feature_15" + 0.0874238936938 * "IL"."Feature_16" + -2.21871501631 * "IL"."Feature_17" + 0.792887418605 * "IL"."Feature_18" + -0.0638403551489 * "IL"."Feature_19" + -1.18054777723 * "IL"."Feature_20" + -0.752324118517 * "IL"."Feature_21" + 0.0985822509826 * "IL"."Feature_22" + 0.382167220214 * "IL"."Feature_23" + -0.129149604683 * "IL"."Feature_24" + -0.222178313292 * "IL"."Feature_25" + 1.25773589818 * "IL"."Feature_26" + 0.342973287755 * "IL"."Feature_27" + -0.732598706704 * "IL"."Feature_28" + 1.26984801302 * "IL"."Feature_29" + 0.0248342801676 * "IL"."Feature_30" + -0.0282304329713 * "IL"."Feature_31" + 1.43489366661 * "IL"."Feature_32" + -0.00189492042578 * "IL"."Feature_33" + -0.0384026760739 * "IL"."Feature_34" + -0.400926788441 * "IL"."Feature_35" + -0.295056649746 * "IL"."Feature_36" + 0.139550321861 * "IL"."Feature_37" + 0.500876487847 * "IL"."Feature_38" + 0.653934956911 * "IL"."Feature_39" + 0.227357323555 * "IL"."Feature_40" + -0.462362838283 * "IL"."Feature_41" + -0.0216383821401 * "IL"."Feature_42" + 0.239040530784 * "IL"."Feature_43" + 0.174685010099 * "IL"."Feature_44" + -0.311517794773 * "IL"."Feature_45" + 0.441282593036 * "IL"."Feature_46" + 2.49096523305 * "IL"."Feature_47" + -0.645950181243 * "IL"."Feature_48" + 0.0712133032799 * "IL"."Feature_49" + 0.289230903388 * "IL"."Feature_50" + -0.199123333061 * "IL"."Feature_51" + -1.16434028348 * "IL"."Feature_52" + 0.0949552587103 * "IL"."Feature_53" + 0.198124642459 * "IL"."Feature_54" + 0.077995214849 * "IL"."Feature_55" + 0.276504559662 * "IL"."Feature_56" + -0.302321578848 * "IL"."Feature_57" + -0.150358443474 * "IL"."Feature_58" + 0.178233928391 * "IL"."Feature_59" + 0.825906036347 * "IL"."Feature_60" + -0.174776963136 * "IL"."Feature_61" + -2.74726886009 * "IL"."Feature_62" + -0.192006373645 * "IL"."Feature_63" + 0.104763685095 * "IL"."Feature_64" + 0.0476721859617 * "IL"."Feature_65" + 0.439329896286 * "IL"."Feature_66" + 0.0141909611788 * "IL"."Feature_67" + -0.780201605652 * "IL"."Feature_68" + 1.68303808336 * "IL"."Feature_69" + 0.233964191399 * "IL"."Feature_70" + -0.000551262281649 * "IL"."Feature_71" + -0.128003800815 * "IL"."Feature_72" + 0.616101449794 * "IL"."Feature_73" + -0.855167694254 * "IL"."Feature_74" + -0.141089988141 * "IL"."Feature_75" + 0.377097390061 * "IL"."Feature_76" + 0.0654278378587 * "IL"."Feature_77" + -1.53782566119 * "IL"."Feature_78" + -0.0587974506023 * "IL"."Feature_79" + -0.0811626407889 * "IL"."Feature_80" + 0.368135311783 * "IL"."Feature_81" + -0.122660029681 * "IL"."Feature_82" + -0.279862267249 * "IL"."Feature_83" + -1.18432305121 * "IL"."Feature_84" + -0.0105886291796 * "IL"."Feature_85" + -0.806005883917 * "IL"."Feature_86" + 0.361029474628 * "IL"."Feature_87" + 0.122501943585 * "IL"."Feature_88" + -0.416241360387 * "IL"."Feature_89" + -0.321689334273 * "IL"."Feature_90" + 1.34957472273 * "IL"."Feature_91" + 0.144810334948 * "IL"."Feature_92" + -0.290492345783 * "IL"."Feature_93" + 0.599404058057 * "IL"."Feature_94" + -0.132108657337 * "IL"."Feature_95" + -0.29547601227 * "IL"."Feature_96" + -0.298899753514 * "IL"."Feature_97" + 1.19135262101 * "IL"."Feature_98" + 1.09382509486 * "IL"."Feature_99" + -0.104630303807 AS "NEUR_1_1", 0.0657970813806 * "IL"."Feature_0" + 0.360531113473 * "IL"."Feature_1" + -0.074725893564 * "IL"."Feature_2" + 0.618284789761 * "IL"."Feature_3" + 1.56040050987 * "IL"."Feature_4" + 0.275479000794 * "IL"."Feature_5" + -0.48214987965 * "IL"."Feature_6" + 0.0363041316235 * "IL"."Feature_7" + -0.0363176122859 * "IL"."Feature_8" + 0.210348406224 * "IL"."Feature_9" + 0.615782639965 * "IL"."Feature_10" + -1.25296195746 * "IL"."Feature_11" + -0.340321155974 * "IL"."Feature_12" + 0.235146714626 * "IL"."Feature_13" + -0.052752534637 * "IL"."Feature_14" + -0.702696197176 * "IL"."Feature_15" + 0.107964888742 * "IL"."Feature_16" + -0.138604212966 * "IL"."Feature_17" + -1.47098054265 * "IL"."Feature_18" + 0.157645797896 * "IL"."Feature_19" + 1.14072429501 * "IL"."Feature_20" + -0.592402701818 * "IL"."Feature_21" + -0.400007425275 * "IL"."Feature_22" + 0.134824038417 * "IL"."Feature_23" + 0.386953490286 * "IL"."Feature_24" + 0.132201264125 * "IL"."Feature_25" + 0.257103330383 * "IL"."Feature_26" + -0.152241960238 * "IL"."Feature_27" + -1.11516136558 * "IL"."Feature_28" + -1.70648784728 * "IL"."Feature_29" + 0.65953785495 * "IL"."Feature_30" + -1.11024492382 * "IL"."Feature_31" + -0.357268286112 * "IL"."Feature_32" + -0.799437393545 * "IL"."Feature_33" + 0.407373422618 * "IL"."Feature_34" + 0.389715144803 * "IL"."Feature_35" + 0.309505628577 * "IL"."Feature_36" + 0.101852430834 * "IL"."Feature_37" + 0.259378258159 * "IL"."Feature_38" + 0.0640315021224 * "IL"."Feature_39" + 0.804498517665 * "IL"."Feature_40" + 0.904957431124 * "IL"."Feature_41" + 0.4688065967 * "IL"."Feature_42" + -2.20413841303 * "IL"."Feature_43" + 0.0687955383761 * "IL"."Feature_44" + -1.20554527817 * "IL"."Feature_45" + 0.572919197151 * "IL"."Feature_46" + -0.53019224576 * "IL"."Feature_47" + -1.10307289466 * "IL"."Feature_48" + 0.106735773292 * "IL"."Feature_49" + 0.271292825884 * "IL"."Feature_50" + -0.0226253462855 * "IL"."Feature_51" + 0.0877983573913 * "IL"."Feature_52" + -0.185297650421 * "IL"."Feature_53" + 0.246311747245 * "IL"."Feature_54" + -0.105630954926 * "IL"."Feature_55" + 2.32703879845 * "IL"."Feature_56" + -0.0675825202194 * "IL"."Feature_57" + 0.334286631545 * "IL"."Feature_58" + -0.579220416358 * "IL"."Feature_59" + -1.00242815079 * "IL"."Feature_60" + 0.0526057104566 * "IL"."Feature_61" + 2.43213239391 * "IL"."Feature_62" + 0.244261094677 * "IL"."Feature_63" + 0.265837717962 * "IL"."Feature_64" + 0.00244499377279 * "IL"."Feature_65" + 0.619024312468 * "IL"."Feature_66" + -0.448427048877 * "IL"."Feature_67" + -0.877060921182 * "IL"."Feature_68" + 0.988416506341 * "IL"."Feature_69" + -0.233142204989 * "IL"."Feature_70" + -1.49449536141 * "IL"."Feature_71" + -0.62999918251 * "IL"."Feature_72" + 0.71868716587 * "IL"."Feature_73" + 1.21328548018 * "IL"."Feature_74" + 0.247379359713 * "IL"."Feature_75" + -0.119061480365 * "IL"."Feature_76" + 0.634577164953 * "IL"."Feature_77" + -1.3791749782 * "IL"."Feature_78" + 0.67129640076 * "IL"."Feature_79" + 0.0145850355693 * "IL"."Feature_80" + 0.195140132576 * "IL"."Feature_81" + -0.252421765626 * "IL"."Feature_82" + 0.790631749804 * "IL"."Feature_83" + 0.592223774538 * "IL"."Feature_84" + 0.756324155915 * "IL"."Feature_85" + -0.265645262201 * "IL"."Feature_86" + 0.140198459871 * "IL"."Feature_87" + -0.233247201773 * "IL"."Feature_88" + -0.355657768352 * "IL"."Feature_89" + -0.433312264148 * "IL"."Feature_90" + 0.979580539216 * "IL"."Feature_91" + -0.428666749536 * "IL"."Feature_92" + 0.0183338970985 * "IL"."Feature_93" + -0.735806494773 * "IL"."Feature_94" + -0.510948664963 * "IL"."Feature_95" + -0.27352705315 * "IL"."Feature_96" + -0.210940458924 * "IL"."Feature_97" + -0.0146669396284 * "IL"."Feature_98" + 1.13028868291 * "IL"."Feature_99" + -0.334960862558 AS "NEUR_1_2", 0.252345757968 * "IL"."Feature_0" + 0.0815236314326 * "IL"."Feature_1" + 0.246450203902 * "IL"."Feature_2" + -0.0728015774982 * "IL"."Feature_3" + -0.606313370668 * "IL"."Feature_4" + 0.178029186434 * "IL"."Feature_5" + 1.33649857989 * "IL"."Feature_6" + 0.090013248475 * "IL"."Feature_7" + -0.125086532506 * "IL"."Feature_8" + 0.241365170342 * "IL"."Feature_9" + 0.00150286013307 * "IL"."Feature_10" + -0.915981613077 * "IL"."Feature_11" + 0.107342337301 * "IL"."Feature_12" + -0.180198557076 * "IL"."Feature_13" + -0.236756839619 * "IL"."Feature_14" + 0.776416300598 * "IL"."Feature_15" + 0.132791168382 * "IL"."Feature_16" + -0.117681737978 * "IL"."Feature_17" + 0.727144120068 * "IL"."Feature_18" + -0.0892905425894 * "IL"."Feature_19" + -0.198037711302 * "IL"."Feature_20" + 0.0582743315623 * "IL"."Feature_21" + -0.106024818425 * "IL"."Feature_22" + 0.0130733641925 * "IL"."Feature_23" + 0.13682897302 * "IL"."Feature_24" + -0.0530022396199 * "IL"."Feature_25" + 1.01296745451 * "IL"."Feature_26" + 0.361152050636 * "IL"."Feature_27" + 0.0539480614044 * "IL"."Feature_28" + 0.728595418218 * "IL"."Feature_29" + 0.564864591757 * "IL"."Feature_30" + 0.397986314659 * "IL"."Feature_31" + 1.19654201867 * "IL"."Feature_32" + 1.02461337811 * "IL"."Feature_33" + 0.615232508622 * "IL"."Feature_34" + -0.0163568893302 * "IL"."Feature_35" + 0.177344927099 * "IL"."Feature_36" + 0.23656274164 * "IL"."Feature_37" + 0.0188590971235 * "IL"."Feature_38" + 0.15312115584 * "IL"."Feature_39" + 0.19603817119 * "IL"."Feature_40" + -0.518799971233 * "IL"."Feature_41" + -0.195354606481 * "IL"."Feature_42" + -0.919372980775 * "IL"."Feature_43" + -0.0172968267662 * "IL"."Feature_44" + -0.789097367467 * "IL"."Feature_45" + 0.213974380388 * "IL"."Feature_46" + -0.833962255214 * "IL"."Feature_47" + 0.262533949086 * "IL"."Feature_48" + -0.527577916767 * "IL"."Feature_49" + -0.0222724358317 * "IL"."Feature_50" + -0.0973743597577 * "IL"."Feature_51" + -1.18656252343 * "IL"."Feature_52" + 0.233024058516 * "IL"."Feature_53" + -0.116451507809 * "IL"."Feature_54" + 0.221967373057 * "IL"."Feature_55" + -0.525173399045 * "IL"."Feature_56" + 0.0379433714516 * "IL"."Feature_57" + -0.58957850703 * "IL"."Feature_58" + -0.0745133711517 * "IL"."Feature_59" + 0.106482753887 * "IL"."Feature_60" + -0.226426207104 * "IL"."Feature_61" + 0.834464991039 * "IL"."Feature_62" + 0.126238645058 * "IL"."Feature_63" + -0.233310383945 * "IL"."Feature_64" + 0.0631081695924 * "IL"."Feature_65" + -0.320699293672 * "IL"."Feature_66" + 0.209778580046 * "IL"."Feature_67" + -0.168212388151 * "IL"."Feature_68" + 1.54155779997 * "IL"."Feature_69" + -0.211812129281 * "IL"."Feature_70" + -0.834601917647 * "IL"."Feature_71" + 0.42980910888 * "IL"."Feature_72" + 0.00953401045649 * "IL"."Feature_73" + 0.529948614982 * "IL"."Feature_74" + 0.0790997022952 * "IL"."Feature_75" + 0.45041594143 * "IL"."Feature_76" + 0.229670466472 * "IL"."Feature_77" + 0.117604401533 * "IL"."Feature_78" + 0.402831888923 * "IL"."Feature_79" + 1.66642161164 * "IL"."Feature_80" + 0.214123551209 * "IL"."Feature_81" + 0.0502549556896 * "IL"."Feature_82" + -0.839650257105 * "IL"."Feature_83" + -0.0506269668281 * "IL"."Feature_84" + -0.331172252259 * "IL"."Feature_85" + -0.418368230627 * "IL"."Feature_86" + -0.173351253276 * "IL"."Feature_87" + 0.0329415071652 * "IL"."Feature_88" + -0.0322123067536 * "IL"."Feature_89" + 1.02141246717 * "IL"."Feature_90" + 1.23797753099 * "IL"."Feature_91" + 0.232224446065 * "IL"."Feature_92" + -0.277268375376 * "IL"."Feature_93" + 0.460668584217 * "IL"."Feature_94" + -0.322933098198 * "IL"."Feature_95" + 0.1363036207 * "IL"."Feature_96" + -0.0373466278512 * "IL"."Feature_97" + 0.880721819192 * "IL"."Feature_98" + 1.20550853912 * "IL"."Feature_99" + -0.0236600271111 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", 0.949976607326 * "HL_1_relu"."NEUR_1_1" + 0.147321807911 * "HL_1_relu"."NEUR_1_2" + 0.7809682423 * "HL_1_relu"."NEUR_1_3" + -4.91796645384 AS "NEUR_2_1", 3.40637711634 * "HL_1_relu"."NEUR_1_1" + -1.00026033013 * "HL_1_relu"."NEUR_1_2" + 3.00050489547 * "HL_1_relu"."NEUR_1_3" + -0.476776477796 AS "NEUR_2_2", 0.0921584593866 * "HL_1_relu"."NEUR_1_1" + 0.414906475281 * "HL_1_relu"."NEUR_1_2" + 0.120181132341 * "HL_1_relu"."NEUR_1_3" + -3.33957062219 AS "NEUR_2_3", -1.4064925235 * "HL_1_relu"."NEUR_1_1" + 3.83629658913 * "HL_1_relu"."NEUR_1_2" + -1.08494051165 * "HL_1_relu"."NEUR_1_3" + 7.07161437627 AS "NEUR_2_4", -0.60923415244 * "HL_1_relu"."NEUR_1_1" + -0.377598671807 * "HL_1_relu"."NEUR_1_2" + -0.672877251883 * "HL_1_relu"."NEUR_1_3" + -0.018078316227 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -3.57377373929 * "HL_2_relu"."NEUR_2_1" + -3.81717916789 * "HL_2_relu"."NEUR_2_2" + -1.5692209774 * "HL_2_relu"."NEUR_2_3" + 3.77728366697 * "HL_2_relu"."NEUR_2_4" + 0.589779928487 * "HL_2_relu"."NEUR_2_5" + -3.77348898055 AS "NEUR_3_1", 0.145244316897 * "HL_2_relu"."NEUR_2_1" + 3.86649331571 * "HL_2_relu"."NEUR_2_2" + -1.39838777987 * "HL_2_relu"."NEUR_2_3" + -8.6709053417 * "HL_2_relu"."NEUR_2_4" + 0.396031215792 * "HL_2_relu"."NEUR_2_5" + 2.68583521462 AS "NEUR_3_2", 2.72436198379 * "HL_2_relu"."NEUR_2_1" + 3.18548412024 * "HL_2_relu"."NEUR_2_2" + 0.206120566051 * "HL_2_relu"."NEUR_2_3" + 1.24827589678 * "HL_2_relu"."NEUR_2_4" + 0.663384182388 * "HL_2_relu"."NEUR_2_5" + -0.437458439958 AS "NEUR_3_3", 1.32032907418 * "HL_2_relu"."NEUR_2_1" + -2.87021146861 * "HL_2_relu"."NEUR_2_2" + 1.96961049391 * "HL_2_relu"."NEUR_2_3" + 3.36962700678 * "HL_2_relu"."NEUR_2_4" + -0.48543752325 * "HL_2_relu"."NEUR_2_5" + 0.20766198623 AS "NEUR_3_4" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1", "OL_BA"."NEUR_3_2" AS "NEUR_3_2", "OL_BA"."NEUR_3_3" AS "NEUR_3_3", "OL_BA"."NEUR_3_4" AS "NEUR_3_4" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "Score_0", "OL_softmax"."NEUR_3_2" AS "Score_1", "OL_softmax"."NEUR_3_3" AS "Score_2", "OL_softmax"."NEUR_3_4" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision" 
FROM "OL_softmax"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", CAST(arg_max_cte."arg_max_Score" AS NUMBER(19)) AS "Decision" 
FROM arg_max_cte