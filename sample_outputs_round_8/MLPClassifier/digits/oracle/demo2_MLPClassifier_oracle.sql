-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) AS "Feature_0", CAST("ADS"."Feature_1" AS FLOAT) AS "Feature_1", CAST("ADS"."Feature_2" AS FLOAT) AS "Feature_2", CAST("ADS"."Feature_3" AS FLOAT) AS "Feature_3", CAST("ADS"."Feature_4" AS FLOAT) AS "Feature_4", CAST("ADS"."Feature_5" AS FLOAT) AS "Feature_5", CAST("ADS"."Feature_6" AS FLOAT) AS "Feature_6", CAST("ADS"."Feature_7" AS FLOAT) AS "Feature_7", CAST("ADS"."Feature_8" AS FLOAT) AS "Feature_8", CAST("ADS"."Feature_9" AS FLOAT) AS "Feature_9", CAST("ADS"."Feature_10" AS FLOAT) AS "Feature_10", CAST("ADS"."Feature_11" AS FLOAT) AS "Feature_11", CAST("ADS"."Feature_12" AS FLOAT) AS "Feature_12", CAST("ADS"."Feature_13" AS FLOAT) AS "Feature_13", CAST("ADS"."Feature_14" AS FLOAT) AS "Feature_14", CAST("ADS"."Feature_15" AS FLOAT) AS "Feature_15", CAST("ADS"."Feature_16" AS FLOAT) AS "Feature_16", CAST("ADS"."Feature_17" AS FLOAT) AS "Feature_17", CAST("ADS"."Feature_18" AS FLOAT) AS "Feature_18", CAST("ADS"."Feature_19" AS FLOAT) AS "Feature_19", CAST("ADS"."Feature_20" AS FLOAT) AS "Feature_20", CAST("ADS"."Feature_21" AS FLOAT) AS "Feature_21", CAST("ADS"."Feature_22" AS FLOAT) AS "Feature_22", CAST("ADS"."Feature_23" AS FLOAT) AS "Feature_23", CAST("ADS"."Feature_24" AS FLOAT) AS "Feature_24", CAST("ADS"."Feature_25" AS FLOAT) AS "Feature_25", CAST("ADS"."Feature_26" AS FLOAT) AS "Feature_26", CAST("ADS"."Feature_27" AS FLOAT) AS "Feature_27", CAST("ADS"."Feature_28" AS FLOAT) AS "Feature_28", CAST("ADS"."Feature_29" AS FLOAT) AS "Feature_29", CAST("ADS"."Feature_30" AS FLOAT) AS "Feature_30", CAST("ADS"."Feature_31" AS FLOAT) AS "Feature_31", CAST("ADS"."Feature_32" AS FLOAT) AS "Feature_32", CAST("ADS"."Feature_33" AS FLOAT) AS "Feature_33", CAST("ADS"."Feature_34" AS FLOAT) AS "Feature_34", CAST("ADS"."Feature_35" AS FLOAT) AS "Feature_35", CAST("ADS"."Feature_36" AS FLOAT) AS "Feature_36", CAST("ADS"."Feature_37" AS FLOAT) AS "Feature_37", CAST("ADS"."Feature_38" AS FLOAT) AS "Feature_38", CAST("ADS"."Feature_39" AS FLOAT) AS "Feature_39", CAST("ADS"."Feature_40" AS FLOAT) AS "Feature_40", CAST("ADS"."Feature_41" AS FLOAT) AS "Feature_41", CAST("ADS"."Feature_42" AS FLOAT) AS "Feature_42", CAST("ADS"."Feature_43" AS FLOAT) AS "Feature_43", CAST("ADS"."Feature_44" AS FLOAT) AS "Feature_44", CAST("ADS"."Feature_45" AS FLOAT) AS "Feature_45", CAST("ADS"."Feature_46" AS FLOAT) AS "Feature_46", CAST("ADS"."Feature_47" AS FLOAT) AS "Feature_47", CAST("ADS"."Feature_48" AS FLOAT) AS "Feature_48", CAST("ADS"."Feature_49" AS FLOAT) AS "Feature_49", CAST("ADS"."Feature_50" AS FLOAT) AS "Feature_50", CAST("ADS"."Feature_51" AS FLOAT) AS "Feature_51", CAST("ADS"."Feature_52" AS FLOAT) AS "Feature_52", CAST("ADS"."Feature_53" AS FLOAT) AS "Feature_53", CAST("ADS"."Feature_54" AS FLOAT) AS "Feature_54", CAST("ADS"."Feature_55" AS FLOAT) AS "Feature_55", CAST("ADS"."Feature_56" AS FLOAT) AS "Feature_56", CAST("ADS"."Feature_57" AS FLOAT) AS "Feature_57", CAST("ADS"."Feature_58" AS FLOAT) AS "Feature_58", CAST("ADS"."Feature_59" AS FLOAT) AS "Feature_59", CAST("ADS"."Feature_60" AS FLOAT) AS "Feature_60", CAST("ADS"."Feature_61" AS FLOAT) AS "Feature_61", CAST("ADS"."Feature_62" AS FLOAT) AS "Feature_62", CAST("ADS"."Feature_63" AS FLOAT) AS "Feature_63" 
FROM digits "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.0434991444128 * "IL"."Feature_0" + 0.182517378218 * "IL"."Feature_1" + 2.45227194202 * "IL"."Feature_2" + 1.45386044961 * "IL"."Feature_3" + -0.309117937074 * "IL"."Feature_4" + -0.951009797734 * "IL"."Feature_5" + -2.35798039402 * "IL"."Feature_6" + -0.29687707812 * "IL"."Feature_7" + -0.0258620486313 * "IL"."Feature_8" + 1.39450264671 * "IL"."Feature_9" + 0.855058945347 * "IL"."Feature_10" + -1.73321486817 * "IL"."Feature_11" + 1.28861763702 * "IL"."Feature_12" + 2.6558460298 * "IL"."Feature_13" + -3.97401810258 * "IL"."Feature_14" + -0.205007869895 * "IL"."Feature_15" + -0.0742667603574 * "IL"."Feature_16" + 1.14940130468 * "IL"."Feature_17" + -2.95162799816 * "IL"."Feature_18" + -2.95875076741 * "IL"."Feature_19" + 2.54991877473 * "IL"."Feature_20" + 2.37189623272 * "IL"."Feature_21" + -0.6753183107 * "IL"."Feature_22" + -0.356799462891 * "IL"."Feature_23" + 0.174168164155 * "IL"."Feature_24" + 0.630108325883 * "IL"."Feature_25" + -3.67480821183 * "IL"."Feature_26" + -4.81592204325 * "IL"."Feature_27" + -1.29983824213 * "IL"."Feature_28" + -1.04775493624 * "IL"."Feature_29" + -1.91529944642 * "IL"."Feature_30" + 0.192466665264 * "IL"."Feature_31" + -0.291010809778 * "IL"."Feature_32" + 0.289972045858 * "IL"."Feature_33" + -2.98897785126 * "IL"."Feature_34" + -3.66160077008 * "IL"."Feature_35" + -1.38177762556 * "IL"."Feature_36" + -1.41385083979 * "IL"."Feature_37" + -3.23461990797 * "IL"."Feature_38" + 0.11352702166 * "IL"."Feature_39" + 0.0177659553627 * "IL"."Feature_40" + 1.19663164159 * "IL"."Feature_41" + 2.60338555336 * "IL"."Feature_42" + 1.24390791027 * "IL"."Feature_43" + -2.99465141558 * "IL"."Feature_44" + -1.33666785182 * "IL"."Feature_45" + -2.35365444158 * "IL"."Feature_46" + 0.164901776185 * "IL"."Feature_47" + 0.0168098907174 * "IL"."Feature_48" + 0.0653482737938 * "IL"."Feature_49" + 2.34800850234 * "IL"."Feature_50" + 1.74899681563 * "IL"."Feature_51" + 4.10465446067 * "IL"."Feature_52" + 3.88374595037 * "IL"."Feature_53" + 1.32038156102 * "IL"."Feature_54" + 0.182601678684 * "IL"."Feature_55" + -0.134594113389 * "IL"."Feature_56" + 0.320114549069 * "IL"."Feature_57" + 3.13643405902 * "IL"."Feature_58" + 0.213972573286 * "IL"."Feature_59" + 2.09053025302 * "IL"."Feature_60" + 3.6256015472 * "IL"."Feature_61" + 3.54697726546 * "IL"."Feature_62" + 0.765830516673 * "IL"."Feature_63" + -0.259216059986 AS "NEUR_1_1", 0.057958236651 * "IL"."Feature_0" + 0.00172696656321 * "IL"."Feature_1" + -0.212015389322 * "IL"."Feature_2" + 0.0937362303885 * "IL"."Feature_3" + 0.0276657276773 * "IL"."Feature_4" + 0.19793073215 * "IL"."Feature_5" + -0.138508266701 * "IL"."Feature_6" + -0.285850247424 * "IL"."Feature_7" + 0.252197351257 * "IL"."Feature_8" + -0.0482348512554 * "IL"."Feature_9" + -0.227342746085 * "IL"."Feature_10" + -0.131702134318 * "IL"."Feature_11" + -0.27586562348 * "IL"."Feature_12" + 0.127088526883 * "IL"."Feature_13" + 0.023951274588 * "IL"."Feature_14" + -0.140713665426 * "IL"."Feature_15" + 0.0866258988582 * "IL"."Feature_16" + -0.199126028983 * "IL"."Feature_17" + -0.0140743547417 * "IL"."Feature_18" + 0.11018466073 * "IL"."Feature_19" + -0.346590028502 * "IL"."Feature_20" + -0.0247883258875 * "IL"."Feature_21" + -0.220521445493 * "IL"."Feature_22" + -0.00136678603436 * "IL"."Feature_23" + 0.136580040474 * "IL"."Feature_24" + -0.0604787529202 * "IL"."Feature_25" + -0.000915504334272 * "IL"."Feature_26" + 0.101736300304 * "IL"."Feature_27" + -0.0902457980149 * "IL"."Feature_28" + -0.278720040308 * "IL"."Feature_29" + -0.0312987162827 * "IL"."Feature_30" + -0.211372205374 * "IL"."Feature_31" + -0.240084416574 * "IL"."Feature_32" + 0.0761556200096 * "IL"."Feature_33" + -0.255127457815 * "IL"."Feature_34" + 0.0184287456339 * "IL"."Feature_35" + 0.181395743373 * "IL"."Feature_36" + -0.306624071788 * "IL"."Feature_37" + 0.237177735333 * "IL"."Feature_38" + 0.147848385604 * "IL"."Feature_39" + 0.258278843671 * "IL"."Feature_40" + 0.026348530853 * "IL"."Feature_41" + 0.182678091716 * "IL"."Feature_42" + -0.0386353501278 * "IL"."Feature_43" + 0.192844626983 * "IL"."Feature_44" + -0.207327993412 * "IL"."Feature_45" + 0.0469073631507 * "IL"."Feature_46" + 0.208375214333 * "IL"."Feature_47" + -0.0458931264749 * "IL"."Feature_48" + -0.107335180043 * "IL"."Feature_49" + 0.0471276048634 * "IL"."Feature_50" + -0.164175679486 * "IL"."Feature_51" + -0.272631923803 * "IL"."Feature_52" + -0.104976299297 * "IL"."Feature_53" + 0.266253681583 * "IL"."Feature_54" + -0.0550982427242 * "IL"."Feature_55" + 0.0817700647441 * "IL"."Feature_56" + 0.0679925012948 * "IL"."Feature_57" + 0.121934599933 * "IL"."Feature_58" + -0.206147173239 * "IL"."Feature_59" + -0.208084691865 * "IL"."Feature_60" + 0.191036303434 * "IL"."Feature_61" + -0.165094810991 * "IL"."Feature_62" + 0.0833071603575 * "IL"."Feature_63" + 0.281919082862 AS "NEUR_1_2", 0.283571873601 * "IL"."Feature_0" + -0.198431975131 * "IL"."Feature_1" + 0.0807599656614 * "IL"."Feature_2" + -0.0979149812042 * "IL"."Feature_3" + -0.302480126517 * "IL"."Feature_4" + -0.157643418113 * "IL"."Feature_5" + 0.177092887008 * "IL"."Feature_6" + -0.18012567799 * "IL"."Feature_7" + -0.223196619505 * "IL"."Feature_8" + 0.223551882853 * "IL"."Feature_9" + -0.127675786279 * "IL"."Feature_10" + -0.139839511046 * "IL"."Feature_11" + 0.0744433283026 * "IL"."Feature_12" + -0.245605932994 * "IL"."Feature_13" + -0.275257691678 * "IL"."Feature_14" + -0.228215873467 * "IL"."Feature_15" + 0.0599401396867 * "IL"."Feature_16" + -0.0643284012747 * "IL"."Feature_17" + 0.0881302961511 * "IL"."Feature_18" + -0.126764243924 * "IL"."Feature_19" + -0.198051492819 * "IL"."Feature_20" + 0.0714442137796 * "IL"."Feature_21" + -0.303142487449 * "IL"."Feature_22" + 0.164738243497 * "IL"."Feature_23" + 0.291084398795 * "IL"."Feature_24" + 0.0347766703993 * "IL"."Feature_25" + 0.0111134806534 * "IL"."Feature_26" + 0.1660204086 * "IL"."Feature_27" + -0.0239502266946 * "IL"."Feature_28" + 0.0196527366798 * "IL"."Feature_29" + -0.276371639006 * "IL"."Feature_30" + 0.109939422855 * "IL"."Feature_31" + -0.218330166861 * "IL"."Feature_32" + -0.153570081857 * "IL"."Feature_33" + -0.130158621518 * "IL"."Feature_34" + -0.323828422828 * "IL"."Feature_35" + 0.091788058141 * "IL"."Feature_36" + -0.0145415036315 * "IL"."Feature_37" + -0.0513534076828 * "IL"."Feature_38" + -0.261467094665 * "IL"."Feature_39" + 0.0401030611523 * "IL"."Feature_40" + -0.0899689273243 * "IL"."Feature_41" + -0.181289454234 * "IL"."Feature_42" + -0.158972249134 * "IL"."Feature_43" + -0.132733374989 * "IL"."Feature_44" + -0.34413095871 * "IL"."Feature_45" + 0.212946380613 * "IL"."Feature_46" + 0.200467326985 * "IL"."Feature_47" + -0.0516781574847 * "IL"."Feature_48" + -0.141520068294 * "IL"."Feature_49" + 0.068584332289 * "IL"."Feature_50" + -0.0838379017365 * "IL"."Feature_51" + 0.172031867383 * "IL"."Feature_52" + 0.101756309222 * "IL"."Feature_53" + -0.080371279454 * "IL"."Feature_54" + -0.18000130188 * "IL"."Feature_55" + 0.0500200394028 * "IL"."Feature_56" + -0.0489916554635 * "IL"."Feature_57" + -0.195284843432 * "IL"."Feature_58" + -0.145369569557 * "IL"."Feature_59" + -0.27730979293 * "IL"."Feature_60" + -0.308473531459 * "IL"."Feature_61" + -0.166505556206 * "IL"."Feature_62" + 0.180808526751 * "IL"."Feature_63" + -0.306811372495 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.33259829318 * "HL_1_relu"."NEUR_1_1" + -0.863954344625 * "HL_1_relu"."NEUR_1_2" + -0.276711035971 * "HL_1_relu"."NEUR_1_3" + 0.620671452762 AS "NEUR_2_1", -0.175402894709 * "HL_1_relu"."NEUR_1_1" + -0.405651557093 * "HL_1_relu"."NEUR_1_2" + 0.176537987203 * "HL_1_relu"."NEUR_1_3" + -0.818048937393 AS "NEUR_2_2", -0.0549707949736 * "HL_1_relu"."NEUR_1_1" + 0.835893110656 * "HL_1_relu"."NEUR_1_2" + 0.774115353123 * "HL_1_relu"."NEUR_1_3" + -0.292240017513 AS "NEUR_2_3", 0.0888491990007 * "HL_1_relu"."NEUR_1_1" + 0.39095642275 * "HL_1_relu"."NEUR_1_2" + -0.288865196418 * "HL_1_relu"."NEUR_1_3" + -1.08640283953 AS "NEUR_2_4", 0.428341047419 * "HL_1_relu"."NEUR_1_1" + -0.26287801306 * "HL_1_relu"."NEUR_1_2" + 0.116398429156 * "HL_1_relu"."NEUR_1_3" + -0.935409453638 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -0.910761789782 * "HL_2_relu"."NEUR_2_1" + 0.324572773928 * "HL_2_relu"."NEUR_2_2" + -0.308057618478 * "HL_2_relu"."NEUR_2_3" + -0.104607779381 * "HL_2_relu"."NEUR_2_4" + 0.0919207285983 * "HL_2_relu"."NEUR_2_5" + -1.23651847162 AS "NEUR_3_1", 0.661400548901 * "HL_2_relu"."NEUR_2_1" + 0.369230206035 * "HL_2_relu"."NEUR_2_2" + -0.544449224999 * "HL_2_relu"."NEUR_2_3" + -0.705607060176 * "HL_2_relu"."NEUR_2_4" + 0.104568823719 * "HL_2_relu"."NEUR_2_5" + 0.901483689745 AS "NEUR_3_2", -1.26648702192 * "HL_2_relu"."NEUR_2_1" + 0.19255166388 * "HL_2_relu"."NEUR_2_2" + -0.284851029278 * "HL_2_relu"."NEUR_2_3" + 1.07933427344 * "HL_2_relu"."NEUR_2_4" + -0.0876214057543 * "HL_2_relu"."NEUR_2_5" + -4.60214346857 AS "NEUR_3_3", -1.20486814803 * "HL_2_relu"."NEUR_2_1" + 0.343395063723 * "HL_2_relu"."NEUR_2_2" + 0.351492879771 * "HL_2_relu"."NEUR_2_3" + 0.580121969127 * "HL_2_relu"."NEUR_2_4" + -0.0275397799575 * "HL_2_relu"."NEUR_2_5" + -1.78104257042 AS "NEUR_3_4", 0.769312062186 * "HL_2_relu"."NEUR_2_1" + 0.0697790604885 * "HL_2_relu"."NEUR_2_2" + -0.0515829720077 * "HL_2_relu"."NEUR_2_3" + -0.0979108732733 * "HL_2_relu"."NEUR_2_4" + -0.390198864009 * "HL_2_relu"."NEUR_2_5" + 0.934268277442 AS "NEUR_3_5", 0.938792838151 * "HL_2_relu"."NEUR_2_1" + 0.598889555613 * "HL_2_relu"."NEUR_2_2" + -0.505495735578 * "HL_2_relu"."NEUR_2_3" + 0.132347485975 * "HL_2_relu"."NEUR_2_4" + -0.812705092622 * "HL_2_relu"."NEUR_2_5" + 0.57003063973 AS "NEUR_3_6", 0.21800693546 * "HL_2_relu"."NEUR_2_1" + -0.603360784049 * "HL_2_relu"."NEUR_2_2" + 0.190415064177 * "HL_2_relu"."NEUR_2_3" + -0.357893804927 * "HL_2_relu"."NEUR_2_4" + -0.000220116588843 * "HL_2_relu"."NEUR_2_5" + 0.901860815072 AS "NEUR_3_7", 0.358569967776 * "HL_2_relu"."NEUR_2_1" + 0.24832151536 * "HL_2_relu"."NEUR_2_2" + -0.355733104439 * "HL_2_relu"."NEUR_2_3" + 0.381430083216 * "HL_2_relu"."NEUR_2_4" + -0.207460902847 * "HL_2_relu"."NEUR_2_5" + 1.21950944388 AS "NEUR_3_8", 0.0393248162556 * "HL_2_relu"."NEUR_2_1" + 0.546051982994 * "HL_2_relu"."NEUR_2_2" + 0.507559618493 * "HL_2_relu"."NEUR_2_3" + -0.457078540469 * "HL_2_relu"."NEUR_2_4" + 0.0782170819282 * "HL_2_relu"."NEUR_2_5" + 0.681345779202 AS "NEUR_3_9", 0.0746201732613 * "HL_2_relu"."NEUR_2_1" + -0.428127017074 * "HL_2_relu"."NEUR_2_2" + -0.394373622904 * "HL_2_relu"."NEUR_2_3" + -0.482769860815 * "HL_2_relu"."NEUR_2_4" + 0.129432602806 * "HL_2_relu"."NEUR_2_5" + -0.195990816563 AS "NEUR_3_10" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1", "OL_BA"."NEUR_3_2" AS "NEUR_3_2", "OL_BA"."NEUR_3_3" AS "NEUR_3_3", "OL_BA"."NEUR_3_4" AS "NEUR_3_4", "OL_BA"."NEUR_3_5" AS "NEUR_3_5", "OL_BA"."NEUR_3_6" AS "NEUR_3_6", "OL_BA"."NEUR_3_7" AS "NEUR_3_7", "OL_BA"."NEUR_3_8" AS "NEUR_3_8", "OL_BA"."NEUR_3_9" AS "NEUR_3_9", "OL_BA"."NEUR_3_10" AS "NEUR_3_10" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "Score_0", "OL_softmax"."NEUR_3_2" AS "Score_1", "OL_softmax"."NEUR_3_3" AS "Score_2", "OL_softmax"."NEUR_3_4" AS "Score_3", "OL_softmax"."NEUR_3_5" AS "Score_4", "OL_softmax"."NEUR_3_6" AS "Score_5", "OL_softmax"."NEUR_3_7" AS "Score_6", "OL_softmax"."NEUR_3_8" AS "Score_7", "OL_softmax"."NEUR_3_9" AS "Score_8", "OL_softmax"."NEUR_3_10" AS "Score_9", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "Proba_4", CAST(NULL AS FLOAT) AS "Proba_5", CAST(NULL AS FLOAT) AS "Proba_6", CAST(NULL AS FLOAT) AS "Proba_7", CAST(NULL AS FLOAT) AS "Proba_8", CAST(NULL AS FLOAT) AS "Proba_9", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS FLOAT) AS "LogProba_4", CAST(NULL AS FLOAT) AS "LogProba_5", CAST(NULL AS FLOAT) AS "LogProba_6", CAST(NULL AS FLOAT) AS "LogProba_7", CAST(NULL AS FLOAT) AS "LogProba_8", CAST(NULL AS FLOAT) AS "LogProba_9", CAST(NULL AS INTEGER) AS "Decision" 
FROM "OL_softmax"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 4 AS class, orig_cte."LogProba_4" AS "LogProba", orig_cte."Proba_4" AS "Proba", orig_cte."Score_4" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 5 AS class, orig_cte."LogProba_5" AS "LogProba", orig_cte."Proba_5" AS "Proba", orig_cte."Score_5" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 6 AS class, orig_cte."LogProba_6" AS "LogProba", orig_cte."Proba_6" AS "Proba", orig_cte."Score_6" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 7 AS class, orig_cte."LogProba_7" AS "LogProba", orig_cte."Proba_7" AS "Proba", orig_cte."Score_7" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 8 AS class, orig_cte."LogProba_8" AS "LogProba", orig_cte."Proba_8" AS "Proba", orig_cte."Score_8" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 9 AS class, orig_cte."LogProba_9" AS "LogProba", orig_cte."Proba_9" AS "Proba", orig_cte."Score_9" AS "Score" 
FROM orig_cte) scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Score_4" AS "Score_4", orig_cte."Score_5" AS "Score_5", orig_cte."Score_6" AS "Score_6", orig_cte."Score_7" AS "Score_7", orig_cte."Score_8" AS "Score_8", orig_cte."Score_9" AS "Score_9", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."Proba_4" AS "Proba_4", orig_cte."Proba_5" AS "Proba_5", orig_cte."Proba_6" AS "Proba_6", orig_cte."Proba_7" AS "Proba_7", orig_cte."Proba_8" AS "Proba_8", orig_cte."Proba_9" AS "Proba_9", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."LogProba_4" AS "LogProba_4", orig_cte."LogProba_5" AS "LogProba_5", orig_cte."LogProba_6" AS "LogProba_6", orig_cte."LogProba_7" AS "LogProba_7", orig_cte."LogProba_8" AS "LogProba_8", orig_cte."LogProba_9" AS "LogProba_9", orig_cte."Decision" AS "Decision", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Score_4" AS "Score_4", score_max."Score_5" AS "Score_5", score_max."Score_6" AS "Score_6", score_max."Score_7" AS "Score_7", score_max."Score_8" AS "Score_8", score_max."Score_9" AS "Score_9", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."Proba_4" AS "Proba_4", score_max."Proba_5" AS "Proba_5", score_max."Proba_6" AS "Proba_6", score_max."Proba_7" AS "Proba_7", score_max."Proba_8" AS "Proba_8", score_max."Proba_9" AS "Proba_9", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."LogProba_4" AS "LogProba_4", score_max."LogProba_5" AS "LogProba_5", score_max."LogProba_6" AS "LogProba_6", score_max."LogProba_7" AS "LogProba_7", score_max."LogProba_8" AS "LogProba_8", score_max."LogProba_9" AS "LogProba_9", score_max."Decision" AS "Decision", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(score_max."Score_0" - score_max."max_Score") AS "exp_delta_Score_0", exp(score_max."Score_1" - score_max."max_Score") AS "exp_delta_Score_1", exp(score_max."Score_2" - score_max."max_Score") AS "exp_delta_Score_2", exp(score_max."Score_3" - score_max."max_Score") AS "exp_delta_Score_3", exp(score_max."Score_4" - score_max."max_Score") AS "exp_delta_Score_4", exp(score_max."Score_5" - score_max."max_Score") AS "exp_delta_Score_5", exp(score_max."Score_6" - score_max."max_Score") AS "exp_delta_Score_6", exp(score_max."Score_7" - score_max."max_Score") AS "exp_delta_Score_7", exp(score_max."Score_8" - score_max."max_Score") AS "exp_delta_Score_8", exp(score_max."Score_9" - score_max."max_Score") AS "exp_delta_Score_9" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 4 AS class, score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 5 AS class, score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 6 AS class, score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 7 AS class, score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 8 AS class, score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 9 AS class, score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score" 
FROM score_soft_max_deltas) soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Score_4" AS "Score_4", score_soft_max_deltas."Score_5" AS "Score_5", score_soft_max_deltas."Score_6" AS "Score_6", score_soft_max_deltas."Score_7" AS "Score_7", score_soft_max_deltas."Score_8" AS "Score_8", score_soft_max_deltas."Score_9" AS "Score_9", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."Proba_4" AS "Proba_4", score_soft_max_deltas."Proba_5" AS "Proba_5", score_soft_max_deltas."Proba_6" AS "Proba_6", score_soft_max_deltas."Proba_7" AS "Proba_7", score_soft_max_deltas."Proba_8" AS "Proba_8", score_soft_max_deltas."Proba_9" AS "Proba_9", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."LogProba_4" AS "LogProba_4", score_soft_max_deltas."LogProba_5" AS "LogProba_5", score_soft_max_deltas."LogProba_6" AS "LogProba_6", score_soft_max_deltas."LogProba_7" AS "LogProba_7", score_soft_max_deltas."LogProba_8" AS "LogProba_8", score_soft_max_deltas."LogProba_9" AS "LogProba_9", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max_deltas."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max_deltas."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max_deltas."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max_deltas."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max_deltas."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max_deltas."exp_delta_Score_9" AS "exp_delta_Score_9", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Score_4" AS "Score_4", score_soft_max."Score_5" AS "Score_5", score_soft_max."Score_6" AS "Score_6", score_soft_max."Score_7" AS "Score_7", score_soft_max."Score_8" AS "Score_8", score_soft_max."Score_9" AS "Score_9", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."Proba_4" AS "Proba_4", score_soft_max."Proba_5" AS "Proba_5", score_soft_max."Proba_6" AS "Proba_6", score_soft_max."Proba_7" AS "Proba_7", score_soft_max."Proba_8" AS "Proba_8", score_soft_max."Proba_9" AS "Proba_9", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."LogProba_4" AS "LogProba_4", score_soft_max."LogProba_5" AS "LogProba_5", score_soft_max."LogProba_6" AS "LogProba_6", score_soft_max."LogProba_7" AS "LogProba_7", score_soft_max."LogProba_8" AS "LogProba_8", score_soft_max."LogProba_9" AS "LogProba_9", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."exp_delta_Score_4" AS "exp_delta_Score_4", score_soft_max."exp_delta_Score_5" AS "exp_delta_Score_5", score_soft_max."exp_delta_Score_6" AS "exp_delta_Score_6", score_soft_max."exp_delta_Score_7" AS "exp_delta_Score_7", score_soft_max."exp_delta_Score_8" AS "exp_delta_Score_8", score_soft_max."exp_delta_Score_9" AS "exp_delta_Score_9", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3", soft_max_comp."SoftProba_4" AS "SoftProba_4", soft_max_comp."SoftProba_5" AS "SoftProba_5", soft_max_comp."SoftProba_6" AS "SoftProba_6", soft_max_comp."SoftProba_7" AS "SoftProba_7", soft_max_comp."SoftProba_8" AS "SoftProba_8", soft_max_comp."SoftProba_9" AS "SoftProba_9" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3", score_soft_max."exp_delta_Score_4" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_4", score_soft_max."exp_delta_Score_5" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_5", score_soft_max."exp_delta_Score_6" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_6", score_soft_max."exp_delta_Score_7" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_7", score_soft_max."exp_delta_Score_8" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_8", score_soft_max."exp_delta_Score_9" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_9" 
FROM score_soft_max) soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", CAST(NULL AS FLOAT) AS "Score_4", CAST(NULL AS FLOAT) AS "Score_5", CAST(NULL AS FLOAT) AS "Score_6", CAST(NULL AS FLOAT) AS "Score_7", CAST(NULL AS FLOAT) AS "Score_8", CAST(NULL AS FLOAT) AS "Score_9", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", arg_max_cte."SoftProba_4" AS "Proba_4", arg_max_cte."SoftProba_5" AS "Proba_5", arg_max_cte."SoftProba_6" AS "Proba_6", arg_max_cte."SoftProba_7" AS "Proba_7", arg_max_cte."SoftProba_8" AS "Proba_8", arg_max_cte."SoftProba_9" AS "Proba_9", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_3", CASE WHEN (arg_max_cte."SoftProba_4" IS NULL OR arg_max_cte."SoftProba_4" > 0.0) THEN ln(arg_max_cte."SoftProba_4") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_4", CASE WHEN (arg_max_cte."SoftProba_5" IS NULL OR arg_max_cte."SoftProba_5" > 0.0) THEN ln(arg_max_cte."SoftProba_5") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_5", CASE WHEN (arg_max_cte."SoftProba_6" IS NULL OR arg_max_cte."SoftProba_6" > 0.0) THEN ln(arg_max_cte."SoftProba_6") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_6", CASE WHEN (arg_max_cte."SoftProba_7" IS NULL OR arg_max_cte."SoftProba_7" > 0.0) THEN ln(arg_max_cte."SoftProba_7") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_7", CASE WHEN (arg_max_cte."SoftProba_8" IS NULL OR arg_max_cte."SoftProba_8" > 0.0) THEN ln(arg_max_cte."SoftProba_8") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_8", CASE WHEN (arg_max_cte."SoftProba_9" IS NULL OR arg_max_cte."SoftProba_9" > 0.0) THEN ln(arg_max_cte."SoftProba_9") ELSE -BINARY_FLOAT_INFINITY END AS "LogProba_9", CAST(arg_max_cte."arg_max_Score" AS NUMBER(19)) AS "Decision" 
FROM arg_max_cte