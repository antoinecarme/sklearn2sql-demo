-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0542737413 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.218756529519 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0305703479087 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.331249604917 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.366763606826 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0741510747659 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.412718121967 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0169856025995 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0847843992289 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.13181660797 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 1.44017259497 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.55076799394 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0654596306858 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.171642529155 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0828986327221 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -1.85751133848 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.0663115994037 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 1.14029211354 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.888873615763 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.0957726287612 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.244738494487 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.609092391916 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0503892472753 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0273013863534 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.380717162276 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.20661251308 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.668654570611 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.160942763602 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.0940928528227 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 1.63077561616 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -1.75138858195 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 1.0423288999 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.770807238983 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.688081590363 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -1.27741961295 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.112813132236 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.000301506162037 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0384177367383 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.00192035150554 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.108901644136 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.172777499083 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.756450798532 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.0766321841653 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 1.49221532559 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 0.0809334318631 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.0511240194687 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 0.0991431280775 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 2.99950997083 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.46343653733 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 1.00327288337 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.345317889003 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.074907381624 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.668197689036 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.0213201023454 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.40214128931 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.462322711545 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -1.85433259836 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.0714861710124 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.295346518526 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.707152602525 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.999290987436 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.0895853339294 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -9.29088785315 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.00420751817254 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.178981366682 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.104619597019 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.317321472946 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.507737105695 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.636354957302 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -1.26959924734 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.168554896467 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.382817250313 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.356291795624 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.662337874026 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -1.11003423439 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.0453679904887 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN 0.956315095738 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.120281875009 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.316221585917 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN -1.2868164842 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.382487328823 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.168238944463 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.0165491301864 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 1.4745932382 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.4513845299 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.807426393278 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.151058515856 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.155661783653 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.184085967694 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.0219093592328 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -0.362059992861 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.143072216148 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.0357397227366 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.430791347498 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN 0.822593425438 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.302430192744 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.217429237531 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.0563057530387 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 1.12193378849 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -2.8087439791 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.0542737413) / 0.841226478247 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.218756529519) / 0.895975553726 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.0305703479087) / 1.02237915624 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.331249604917) / 4.26418776375 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.366763606826) / 3.53829894255 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.0741510747659) / 0.963174682697 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.412718121967) / 4.9472758423 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0169856025995) / 0.994830601441 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.0847843992289) / 0.980176464339 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.13181660797) / 0.950866788502 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 1.44017259497) / 4.14930369821 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 0.55076799394) / 3.17598517548 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.0654596306858) / 0.824661514279 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.171642529155) / 0.840967567066 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.0828986327221) / 0.839419166269 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -1.85751133848) / 4.88766775585 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - -0.0663115994037) / 0.866138364171 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 1.14029211354) / 3.88280400787 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.888873615763) / 3.84999760442 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 0.0957726287612) / 0.989315601632 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.244738494487) / 4.53782548903 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - -0.609092391916) / 5.07872746188 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.0503892472753) / 1.13868448059 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0273013863534) / 1.03226914948 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.380717162276) / 3.90060812668 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - -0.20661251308) / 0.93768679925 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.668654570611) / 4.84609072226 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.160942763602) / 0.94820847069 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.0940928528227) / 4.64000461396 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 1.63077561616) / 3.55507198159 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -1.75138858195) / 4.3216605591 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 1.0423288999) / 4.572611642 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.770807238983) / 3.7134805867 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.688081590363) / 4.65813812968 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -1.27741961295) / 3.59778109771 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - -0.112813132236) / 1.03307933825 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - -0.000301506162037) / 0.850545923605 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.0384177367383) / 0.916256798368 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.00192035150554) / 0.923042193633 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.108901644136) / 0.714252376902 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.172777499083) / 1.10698153118 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 0.756450798532) / 3.5933252592 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.0766321841653) / 0.862712072529 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 1.49221532559) / 4.8801181801 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 0.0809334318631) / 1.02051375812 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - -0.0511240194687) / 4.13192813822 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 0.0991431280775) / 1.09665873113 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 2.99950997083) / 17.1415128457 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.46343653733) / 4.39626438239 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 1.00327288337) / 4.37518201893 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.345317889003) / 3.99958888717 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.074907381624) / 0.951056156436 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 0.668197689036) / 4.13012403726 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - -0.0213201023454) / 1.01908351284 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.40214128931) / 0.894915916931 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.462322711545) / 4.10023517171 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -1.85433259836) / 4.46821707817 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - -0.0714861710124) / 0.761413799215 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 0.295346518526) / 1.06376235447 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.707152602525) / 4.30840892885 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.999290987436) / 3.20121113123 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 0.0895853339294) / 1.11287992197 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -9.29088785315) / 18.9817375238 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - -0.00420751817254) / 0.917648325278 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.178981366682) / 1.04680502643 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - 0.104619597019) / 0.967281928282 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - 0.317321472946) / 1.06062019986 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - 0.507737105695) / 5.41062442387 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.636354957302) / 3.31142222219 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -1.26959924734) / 4.18780358925 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - 0.168554896467) / 1.27264496517 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.382817250313) / 4.21777214548 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.356291795624) / 4.27892458714 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - -0.662337874026) / 3.14279619311 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -1.11003423439) / 4.17863710103 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - -0.0453679904887) / 0.913270004578 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - 0.956315095738) / 4.5149243782 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - 0.120281875009) / 1.18234319918 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - 0.316221585917) / 4.65444240801 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - -1.2868164842) / 4.48931766249 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.382487328823) / 4.79389970723 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.168238944463) / 1.13425397882 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.0165491301864) / 1.05293513352 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - 1.4745932382) / 3.10625058311 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.4513845299) / 4.06938678288 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.807426393278) / 4.5194432744 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - -0.151058515856) / 1.06279296846 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.155661783653) / 1.0854880061 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - 0.184085967694) / 0.860092382294 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.0219093592328) / 1.09657170629 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -0.362059992861) / 3.80775739097 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 0.143072216148) / 4.52894107306 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - 0.0357397227366) / 4.51430329801 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - 0.430791347498) / 1.00630345361 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - 0.822593425438) / 3.48327194839 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.302430192744) / 1.10859655925 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - -0.217429237531) / 1.11157531881 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.0563057530387) / 0.952249066111 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 1.12193378849) / 4.25494688198 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -2.8087439791) / 4.1863751857 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"IL" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", CAST("ADS_sca_2_OUT".scaler_2 AS FLOAT) AS scaler_2, CAST("ADS_sca_2_OUT".scaler_3 AS FLOAT) AS scaler_3, CAST("ADS_sca_2_OUT".scaler_4 AS FLOAT) AS scaler_4, CAST("ADS_sca_2_OUT".scaler_5 AS FLOAT) AS scaler_5, CAST("ADS_sca_2_OUT".scaler_6 AS FLOAT) AS scaler_6, CAST("ADS_sca_2_OUT".scaler_7 AS FLOAT) AS scaler_7, CAST("ADS_sca_2_OUT".scaler_8 AS FLOAT) AS scaler_8, CAST("ADS_sca_2_OUT".scaler_9 AS FLOAT) AS scaler_9, CAST("ADS_sca_2_OUT".scaler_10 AS FLOAT) AS scaler_10, CAST("ADS_sca_2_OUT".scaler_11 AS FLOAT) AS scaler_11, CAST("ADS_sca_2_OUT".scaler_12 AS FLOAT) AS scaler_12, CAST("ADS_sca_2_OUT".scaler_13 AS FLOAT) AS scaler_13, CAST("ADS_sca_2_OUT".scaler_14 AS FLOAT) AS scaler_14, CAST("ADS_sca_2_OUT".scaler_15 AS FLOAT) AS scaler_15, CAST("ADS_sca_2_OUT".scaler_16 AS FLOAT) AS scaler_16, CAST("ADS_sca_2_OUT".scaler_17 AS FLOAT) AS scaler_17, CAST("ADS_sca_2_OUT".scaler_18 AS FLOAT) AS scaler_18, CAST("ADS_sca_2_OUT".scaler_19 AS FLOAT) AS scaler_19, CAST("ADS_sca_2_OUT".scaler_20 AS FLOAT) AS scaler_20, CAST("ADS_sca_2_OUT".scaler_21 AS FLOAT) AS scaler_21, CAST("ADS_sca_2_OUT".scaler_22 AS FLOAT) AS scaler_22, CAST("ADS_sca_2_OUT".scaler_23 AS FLOAT) AS scaler_23, CAST("ADS_sca_2_OUT".scaler_24 AS FLOAT) AS scaler_24, CAST("ADS_sca_2_OUT".scaler_25 AS FLOAT) AS scaler_25, CAST("ADS_sca_2_OUT".scaler_26 AS FLOAT) AS scaler_26, CAST("ADS_sca_2_OUT".scaler_27 AS FLOAT) AS scaler_27, CAST("ADS_sca_2_OUT".scaler_28 AS FLOAT) AS scaler_28, CAST("ADS_sca_2_OUT".scaler_29 AS FLOAT) AS scaler_29, CAST("ADS_sca_2_OUT".scaler_30 AS FLOAT) AS scaler_30, CAST("ADS_sca_2_OUT".scaler_31 AS FLOAT) AS scaler_31, CAST("ADS_sca_2_OUT".scaler_32 AS FLOAT) AS scaler_32, CAST("ADS_sca_2_OUT".scaler_33 AS FLOAT) AS scaler_33, CAST("ADS_sca_2_OUT".scaler_34 AS FLOAT) AS scaler_34, CAST("ADS_sca_2_OUT".scaler_35 AS FLOAT) AS scaler_35, CAST("ADS_sca_2_OUT".scaler_36 AS FLOAT) AS scaler_36, CAST("ADS_sca_2_OUT".scaler_37 AS FLOAT) AS scaler_37, CAST("ADS_sca_2_OUT".scaler_38 AS FLOAT) AS scaler_38, CAST("ADS_sca_2_OUT".scaler_39 AS FLOAT) AS scaler_39, CAST("ADS_sca_2_OUT".scaler_40 AS FLOAT) AS scaler_40, CAST("ADS_sca_2_OUT".scaler_41 AS FLOAT) AS scaler_41, CAST("ADS_sca_2_OUT".scaler_42 AS FLOAT) AS scaler_42, CAST("ADS_sca_2_OUT".scaler_43 AS FLOAT) AS scaler_43, CAST("ADS_sca_2_OUT".scaler_44 AS FLOAT) AS scaler_44, CAST("ADS_sca_2_OUT".scaler_45 AS FLOAT) AS scaler_45, CAST("ADS_sca_2_OUT".scaler_46 AS FLOAT) AS scaler_46, CAST("ADS_sca_2_OUT".scaler_47 AS FLOAT) AS scaler_47, CAST("ADS_sca_2_OUT".scaler_48 AS FLOAT) AS scaler_48, CAST("ADS_sca_2_OUT".scaler_49 AS FLOAT) AS scaler_49, CAST("ADS_sca_2_OUT".scaler_50 AS FLOAT) AS scaler_50, CAST("ADS_sca_2_OUT".scaler_51 AS FLOAT) AS scaler_51, CAST("ADS_sca_2_OUT".scaler_52 AS FLOAT) AS scaler_52, CAST("ADS_sca_2_OUT".scaler_53 AS FLOAT) AS scaler_53, CAST("ADS_sca_2_OUT".scaler_54 AS FLOAT) AS scaler_54, CAST("ADS_sca_2_OUT".scaler_55 AS FLOAT) AS scaler_55, CAST("ADS_sca_2_OUT".scaler_56 AS FLOAT) AS scaler_56, CAST("ADS_sca_2_OUT".scaler_57 AS FLOAT) AS scaler_57, CAST("ADS_sca_2_OUT".scaler_58 AS FLOAT) AS scaler_58, CAST("ADS_sca_2_OUT".scaler_59 AS FLOAT) AS scaler_59, CAST("ADS_sca_2_OUT".scaler_60 AS FLOAT) AS scaler_60, CAST("ADS_sca_2_OUT".scaler_61 AS FLOAT) AS scaler_61, CAST("ADS_sca_2_OUT".scaler_62 AS FLOAT) AS scaler_62, CAST("ADS_sca_2_OUT".scaler_63 AS FLOAT) AS scaler_63, CAST("ADS_sca_2_OUT".scaler_64 AS FLOAT) AS scaler_64, CAST("ADS_sca_2_OUT".scaler_65 AS FLOAT) AS scaler_65, CAST("ADS_sca_2_OUT".scaler_66 AS FLOAT) AS scaler_66, CAST("ADS_sca_2_OUT".scaler_67 AS FLOAT) AS scaler_67, CAST("ADS_sca_2_OUT".scaler_68 AS FLOAT) AS scaler_68, CAST("ADS_sca_2_OUT".scaler_69 AS FLOAT) AS scaler_69, CAST("ADS_sca_2_OUT".scaler_70 AS FLOAT) AS scaler_70, CAST("ADS_sca_2_OUT".scaler_71 AS FLOAT) AS scaler_71, CAST("ADS_sca_2_OUT".scaler_72 AS FLOAT) AS scaler_72, CAST("ADS_sca_2_OUT".scaler_73 AS FLOAT) AS scaler_73, CAST("ADS_sca_2_OUT".scaler_74 AS FLOAT) AS scaler_74, CAST("ADS_sca_2_OUT".scaler_75 AS FLOAT) AS scaler_75, CAST("ADS_sca_2_OUT".scaler_76 AS FLOAT) AS scaler_76, CAST("ADS_sca_2_OUT".scaler_77 AS FLOAT) AS scaler_77, CAST("ADS_sca_2_OUT".scaler_78 AS FLOAT) AS scaler_78, CAST("ADS_sca_2_OUT".scaler_79 AS FLOAT) AS scaler_79, CAST("ADS_sca_2_OUT".scaler_80 AS FLOAT) AS scaler_80, CAST("ADS_sca_2_OUT".scaler_81 AS FLOAT) AS scaler_81, CAST("ADS_sca_2_OUT".scaler_82 AS FLOAT) AS scaler_82, CAST("ADS_sca_2_OUT".scaler_83 AS FLOAT) AS scaler_83, CAST("ADS_sca_2_OUT".scaler_84 AS FLOAT) AS scaler_84, CAST("ADS_sca_2_OUT".scaler_85 AS FLOAT) AS scaler_85, CAST("ADS_sca_2_OUT".scaler_86 AS FLOAT) AS scaler_86, CAST("ADS_sca_2_OUT".scaler_87 AS FLOAT) AS scaler_87, CAST("ADS_sca_2_OUT".scaler_88 AS FLOAT) AS scaler_88, CAST("ADS_sca_2_OUT".scaler_89 AS FLOAT) AS scaler_89, CAST("ADS_sca_2_OUT".scaler_90 AS FLOAT) AS scaler_90, CAST("ADS_sca_2_OUT".scaler_91 AS FLOAT) AS scaler_91, CAST("ADS_sca_2_OUT".scaler_92 AS FLOAT) AS scaler_92, CAST("ADS_sca_2_OUT".scaler_93 AS FLOAT) AS scaler_93, CAST("ADS_sca_2_OUT".scaler_94 AS FLOAT) AS scaler_94, CAST("ADS_sca_2_OUT".scaler_95 AS FLOAT) AS scaler_95, CAST("ADS_sca_2_OUT".scaler_96 AS FLOAT) AS scaler_96, CAST("ADS_sca_2_OUT".scaler_97 AS FLOAT) AS scaler_97, CAST("ADS_sca_2_OUT".scaler_98 AS FLOAT) AS scaler_98, CAST("ADS_sca_2_OUT".scaler_99 AS FLOAT) AS scaler_99, CAST("ADS_sca_2_OUT".scaler_100 AS FLOAT) AS scaler_100, CAST("ADS_sca_2_OUT".scaler_101 AS FLOAT) AS scaler_101 
FROM "ADS_sca_2_OUT"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", 0.0366284750898 * "IL".scaler_2 + 1.1601502818 * "IL".scaler_3 + -2.50371276495 * "IL".scaler_4 + -1.86595424899 * "IL".scaler_5 + 0.315872939245 * "IL".scaler_6 + -0.0493671448862 * "IL".scaler_7 + 0.757461090762 * "IL".scaler_8 + 2.24421234653 * "IL".scaler_9 + -0.454036635585 * "IL".scaler_10 + -0.730412121408 * "IL".scaler_11 + -0.565734067163 * "IL".scaler_12 + -1.36960019787 * "IL".scaler_13 + -0.463979781684 * "IL".scaler_14 + 0.0694939294724 * "IL".scaler_15 + 1.28709007939 * "IL".scaler_16 + 0.567321715054 * "IL".scaler_17 + -0.76255638462 * "IL".scaler_18 + -1.97495452979 * "IL".scaler_19 + 0.123812942288 * "IL".scaler_20 + -0.912306157475 * "IL".scaler_21 + -3.58757214203 * "IL".scaler_22 + -0.0797322459047 * "IL".scaler_23 + -0.210992232439 * "IL".scaler_24 + 1.07163694698 * "IL".scaler_25 + 0.21743854661 * "IL".scaler_26 + -2.39370729114 * "IL".scaler_27 + 1.64713108068 * "IL".scaler_28 + 0.657036782733 * "IL".scaler_29 + 1.13662391962 * "IL".scaler_30 + 1.66157376325 * "IL".scaler_31 + 0.0234961400375 * "IL".scaler_32 + 1.20772718679 * "IL".scaler_33 + 2.08056578535 * "IL".scaler_34 + 1.66183783401 * "IL".scaler_35 + 0.0505263430348 * "IL".scaler_36 + 0.761557915404 * "IL".scaler_37 + 0.935899751886 * "IL".scaler_38 + 1.10908993288 * "IL".scaler_39 + 0.843683661317 * "IL".scaler_40 + 3.17897786074 * "IL".scaler_41 + 1.56037919745 * "IL".scaler_42 + -1.13805404633 * "IL".scaler_43 + 0.792969761835 * "IL".scaler_44 + 0.814531213785 * "IL".scaler_45 + -0.726052689476 * "IL".scaler_46 + 0.503179495847 * "IL".scaler_47 + 0.447637912784 * "IL".scaler_48 + 1.29788354265 * "IL".scaler_49 + 2.24474710481 * "IL".scaler_50 + -0.289120705349 * "IL".scaler_51 + 0.92731727963 * "IL".scaler_52 + 0.0844446788392 * "IL".scaler_53 + -0.442611793936 * "IL".scaler_54 + 1.15678878124 * "IL".scaler_55 + -1.63817995443 * "IL".scaler_56 + -0.117416020931 * "IL".scaler_57 + 2.48976001214 * "IL".scaler_58 + 0.0426920275985 * "IL".scaler_59 + 0.893282307969 * "IL".scaler_60 + -0.669950701592 * "IL".scaler_61 + 1.29697602727 * "IL".scaler_62 + -1.42361992857 * "IL".scaler_63 + -0.252028566594 * "IL".scaler_64 + 0.469956888637 * "IL".scaler_65 + 0.778372547268 * "IL".scaler_66 + 2.51170603919 * "IL".scaler_67 + 0.704277323844 * "IL".scaler_68 + 0.329967554379 * "IL".scaler_69 + 0.396904682383 * "IL".scaler_70 + 2.3889684664 * "IL".scaler_71 + -1.69046811701 * "IL".scaler_72 + 0.131912087669 * "IL".scaler_73 + 0.386627907514 * "IL".scaler_74 + 0.956600436906 * "IL".scaler_75 + -1.29728893079 * "IL".scaler_76 + -1.36387705359 * "IL".scaler_77 + 1.50390557414 * "IL".scaler_78 + 1.56993749008 * "IL".scaler_79 + 0.267954541117 * "IL".scaler_80 + 1.61187787291 * "IL".scaler_81 + -1.01858805791 * "IL".scaler_82 + 1.06844684203 * "IL".scaler_83 + 0.615299385901 * "IL".scaler_84 + 1.30900305007 * "IL".scaler_85 + -1.53076728161 * "IL".scaler_86 + 0.663616725071 * "IL".scaler_87 + -3.0971318966 * "IL".scaler_88 + -0.955486293554 * "IL".scaler_89 + 0.046721744356 * "IL".scaler_90 + 1.66308774291 * "IL".scaler_91 + 1.47019372735 * "IL".scaler_92 + 0.95503519639 * "IL".scaler_93 + -0.548449131256 * "IL".scaler_94 + -1.90579206912 * "IL".scaler_95 + 1.06127991151 * "IL".scaler_96 + 0.230664962471 * "IL".scaler_97 + -0.482787733142 * "IL".scaler_98 + 1.5725093098 * "IL".scaler_99 + 1.34920991321 * "IL".scaler_100 + -0.451695661598 * "IL".scaler_101 + -1.92490433259 AS "NEUR_1_1", 1.62906254341 * "IL".scaler_2 + 1.52549998872 * "IL".scaler_3 + -1.53983278625 * "IL".scaler_4 + 0.566677003368 * "IL".scaler_5 + 1.98930074702 * "IL".scaler_6 + -0.393207100706 * "IL".scaler_7 + -2.53567268333 * "IL".scaler_8 + -0.640571641051 * "IL".scaler_9 + 0.676134587023 * "IL".scaler_10 + -0.7552857345 * "IL".scaler_11 + 1.44125248832 * "IL".scaler_12 + -0.0689204447752 * "IL".scaler_13 + 3.13380621849 * "IL".scaler_14 + 2.94608515926 * "IL".scaler_15 + -1.38784148353 * "IL".scaler_16 + -0.757698127661 * "IL".scaler_17 + -1.39725556603 * "IL".scaler_18 + 0.153882054991 * "IL".scaler_19 + -1.57370322269 * "IL".scaler_20 + -0.245744371607 * "IL".scaler_21 + 3.05036112302 * "IL".scaler_22 + -1.03957028382 * "IL".scaler_23 + -3.10683315679 * "IL".scaler_24 + 0.0279544343383 * "IL".scaler_25 + 1.07320440243 * "IL".scaler_26 + 1.01714003148 * "IL".scaler_27 + -2.52757305563 * "IL".scaler_28 + -3.90166045944 * "IL".scaler_29 + 0.162395728029 * "IL".scaler_30 + -1.9291225086 * "IL".scaler_31 + 0.603684897927 * "IL".scaler_32 + 0.812615373732 * "IL".scaler_33 + -2.64120016516 * "IL".scaler_34 + -3.45010775018 * "IL".scaler_35 + 1.5306726694 * "IL".scaler_36 + -0.225465400659 * "IL".scaler_37 + 3.14200351274 * "IL".scaler_38 + 1.36283284763 * "IL".scaler_39 + -0.691690566983 * "IL".scaler_40 + -4.9646368845 * "IL".scaler_41 + 0.333691348231 * "IL".scaler_42 + -0.565299790346 * "IL".scaler_43 + 2.61960548121 * "IL".scaler_44 + -0.0996461560191 * "IL".scaler_45 + -0.235584485885 * "IL".scaler_46 + -0.8527684389 * "IL".scaler_47 + 2.61873210132 * "IL".scaler_48 + 0.69170028477 * "IL".scaler_49 + -1.7193381222 * "IL".scaler_50 + -1.37924938204 * "IL".scaler_51 + 1.00334961593 * "IL".scaler_52 + -0.70693653852 * "IL".scaler_53 + 1.64843569518 * "IL".scaler_54 + -1.17222180651 * "IL".scaler_55 + 1.52981413069 * "IL".scaler_56 + -0.223746299748 * "IL".scaler_57 + 0.636876859072 * "IL".scaler_58 + -0.429315729279 * "IL".scaler_59 + 1.38837933005 * "IL".scaler_60 + -0.136864634892 * "IL".scaler_61 + 0.154884620664 * "IL".scaler_62 + 3.10475723958 * "IL".scaler_63 + 2.494815031 * "IL".scaler_64 + 1.04092463337 * "IL".scaler_65 + -0.726542340876 * "IL".scaler_66 + -0.744428282076 * "IL".scaler_67 + 2.34221877311 * "IL".scaler_68 + -1.41438526211 * "IL".scaler_69 + -1.41010141481 * "IL".scaler_70 + 1.09538221829 * "IL".scaler_71 + 3.02034482099 * "IL".scaler_72 + 0.687152272561 * "IL".scaler_73 + -2.2669005314 * "IL".scaler_74 + 1.85117612093 * "IL".scaler_75 + 1.4488927359 * "IL".scaler_76 + 0.648622138065 * "IL".scaler_77 + 0.748839067615 * "IL".scaler_78 + 0.955376134311 * "IL".scaler_79 + -0.851062193601 * "IL".scaler_80 + -0.46213531369 * "IL".scaler_81 + 0.634268706971 * "IL".scaler_82 + 1.01956726254 * "IL".scaler_83 + -0.599568814887 * "IL".scaler_84 + -1.26637344946 * "IL".scaler_85 + 4.37849007645 * "IL".scaler_86 + -1.25821367125 * "IL".scaler_87 + 0.936012103937 * "IL".scaler_88 + 1.47934336284 * "IL".scaler_89 + 0.798045406209 * "IL".scaler_90 + -4.35344812269 * "IL".scaler_91 + -0.0198560387242 * "IL".scaler_92 + -1.43566144229 * "IL".scaler_93 + 0.0245426998701 * "IL".scaler_94 + -0.600589025119 * "IL".scaler_95 + -3.26875521727 * "IL".scaler_96 + -0.8167218786 * "IL".scaler_97 + -2.00446274529 * "IL".scaler_98 + 0.882252928439 * "IL".scaler_99 + -0.196252883818 * "IL".scaler_100 + 1.34456415674 * "IL".scaler_101 + -0.232438148273 AS "NEUR_1_2", -0.637324785594 * "IL".scaler_2 + -0.156875077439 * "IL".scaler_3 + 0.512800960756 * "IL".scaler_4 + 0.221293096711 * "IL".scaler_5 + 1.68517690308 * "IL".scaler_6 + 0.917206724419 * "IL".scaler_7 + 1.82172335247 * "IL".scaler_8 + -0.591505794593 * "IL".scaler_9 + 1.98324650709 * "IL".scaler_10 + 0.765558203884 * "IL".scaler_11 + 2.77374539039 * "IL".scaler_12 + 0.0180438389624 * "IL".scaler_13 + -0.938687488375 * "IL".scaler_14 + -0.159188425256 * "IL".scaler_15 + 1.36436315564 * "IL".scaler_16 + -0.640709472213 * "IL".scaler_17 + 0.707632020513 * "IL".scaler_18 + -0.0691595165071 * "IL".scaler_19 + 2.57727556106 * "IL".scaler_20 + -0.465281040007 * "IL".scaler_21 + 2.94006105161 * "IL".scaler_22 + -0.281805566812 * "IL".scaler_23 + 1.55465263088 * "IL".scaler_24 + 1.44551811387 * "IL".scaler_25 + 0.935042913431 * "IL".scaler_26 + -0.797646258572 * "IL".scaler_27 + 3.08624532236 * "IL".scaler_28 + 0.0207765359308 * "IL".scaler_29 + -0.129518689017 * "IL".scaler_30 + 0.848689725291 * "IL".scaler_31 + -0.82828735999 * "IL".scaler_32 + 0.622646794903 * "IL".scaler_33 + 1.53466478973 * "IL".scaler_34 + -0.624041239883 * "IL".scaler_35 + -2.34590828134 * "IL".scaler_36 + 0.855827956619 * "IL".scaler_37 + -1.43769249512 * "IL".scaler_38 + 1.12822344896 * "IL".scaler_39 + 1.10503515349 * "IL".scaler_40 + 1.97844070818 * "IL".scaler_41 + 0.302482179548 * "IL".scaler_42 + -0.767745606368 * "IL".scaler_43 + 0.455339512788 * "IL".scaler_44 + 0.0885155644918 * "IL".scaler_45 + -0.820341134555 * "IL".scaler_46 + -3.51351093135 * "IL".scaler_47 + 1.17713393988 * "IL".scaler_48 + 3.3570555787 * "IL".scaler_49 + -1.00734170784 * "IL".scaler_50 + 0.597319552648 * "IL".scaler_51 + -1.35750659512 * "IL".scaler_52 + -1.74059559291 * "IL".scaler_53 + -2.09769765844 * "IL".scaler_54 + 0.754345502492 * "IL".scaler_55 + 0.769494351961 * "IL".scaler_56 + -0.305789726494 * "IL".scaler_57 + -2.46784319778 * "IL".scaler_58 + -1.58617190707 * "IL".scaler_59 + -1.28452517852 * "IL".scaler_60 + 1.85367054712 * "IL".scaler_61 + 0.165007492383 * "IL".scaler_62 + -1.3796888782 * "IL".scaler_63 + -2.60285597029 * "IL".scaler_64 + -1.7699289302 * "IL".scaler_65 + -1.40789667359 * "IL".scaler_66 + 0.523521025104 * "IL".scaler_67 + 0.206954285533 * "IL".scaler_68 + 1.64022777713 * "IL".scaler_69 + 0.46525630283 * "IL".scaler_70 + 2.87619148385 * "IL".scaler_71 + 0.416473057978 * "IL".scaler_72 + -2.20258471024 * "IL".scaler_73 + -0.76902260561 * "IL".scaler_74 + 1.62845086117 * "IL".scaler_75 + -2.25830824659 * "IL".scaler_76 + -0.257219246098 * "IL".scaler_77 + 0.057176377585 * "IL".scaler_78 + 0.826871787503 * "IL".scaler_79 + 0.481798169452 * "IL".scaler_80 + -0.720122384306 * "IL".scaler_81 + 0.980194524609 * "IL".scaler_82 + -0.458123042878 * "IL".scaler_83 + -0.65455688516 * "IL".scaler_84 + -0.211582687355 * "IL".scaler_85 + -2.38236166849 * "IL".scaler_86 + -0.201405821525 * "IL".scaler_87 + -0.648466318453 * "IL".scaler_88 + 1.14531353663 * "IL".scaler_89 + 2.08185292165 * "IL".scaler_90 + -0.241938328834 * "IL".scaler_91 + -0.138575025906 * "IL".scaler_92 + 3.15936690199 * "IL".scaler_93 + -2.06533049566 * "IL".scaler_94 + 1.09104945312 * "IL".scaler_95 + 0.337318018797 * "IL".scaler_96 + -2.22680834253 * "IL".scaler_97 + 0.797112801775 * "IL".scaler_98 + 1.70199985346 * "IL".scaler_99 + 2.13341232965 * "IL".scaler_100 + 0.63807380049 * "IL".scaler_101 + 1.14980313714 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", -0.466889793665 * "HL_1_relu"."NEUR_1_1" + -5.3908196337 * "HL_1_relu"."NEUR_1_2" + 2.80004796862 * "HL_1_relu"."NEUR_1_3" + -3.09293533337 AS "NEUR_2_1", 7.96413218804 * "HL_1_relu"."NEUR_1_1" + -6.35510046066 * "HL_1_relu"."NEUR_1_2" + 4.29373728379 * "HL_1_relu"."NEUR_1_3" + 4.10583349171 AS "NEUR_2_2", -1.15563735332 * "HL_1_relu"."NEUR_1_1" + 0.733372873994 * "HL_1_relu"."NEUR_1_2" + 0.854849580308 * "HL_1_relu"."NEUR_1_3" + -4.63032110678 AS "NEUR_2_3", -0.916015293683 * "HL_1_relu"."NEUR_1_1" + 9.49858777278 * "HL_1_relu"."NEUR_1_2" + -2.23490167048 * "HL_1_relu"."NEUR_1_3" + 2.42683228854 AS "NEUR_2_4", -0.608333680639 * "HL_1_relu"."NEUR_1_1" + -0.377040566266 * "HL_1_relu"."NEUR_1_2" + -0.671882713103 * "HL_1_relu"."NEUR_1_3" + -0.018078316227 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", -1.86544754641 * "HL_2_relu"."NEUR_2_1" + -7.80882739788 * "HL_2_relu"."NEUR_2_2" + -1.11670800776 * "HL_2_relu"."NEUR_2_3" + 4.4536776352 * "HL_2_relu"."NEUR_2_4" + 0.588908210786 * "HL_2_relu"."NEUR_2_5" + -4.47939847321 AS "NEUR_3_1", -0.816578689114 * "HL_2_relu"."NEUR_2_1" + 4.50786763413 * "HL_2_relu"."NEUR_2_2" + -3.53000924906 * "HL_2_relu"."NEUR_2_3" + -7.00257724794 * "HL_2_relu"."NEUR_2_4" + 0.395445866234 * "HL_2_relu"."NEUR_2_5" + 9.80025932164 AS "NEUR_3_2", 2.92133529197 * "HL_2_relu"."NEUR_2_1" + 4.56468664964 * "HL_2_relu"."NEUR_2_2" + -1.52480398418 * "HL_2_relu"."NEUR_2_3" + -1.74499175411 * "HL_2_relu"."NEUR_2_4" + 0.662403674735 * "HL_2_relu"."NEUR_2_5" + -3.19283058619 AS "NEUR_3_3", 0.375941868229 * "HL_2_relu"."NEUR_2_1" + -0.899678959944 * "HL_2_relu"."NEUR_2_2" + 5.38081396976 * "HL_2_relu"."NEUR_2_3" + 4.01858011874 * "HL_2_relu"."NEUR_2_4" + -0.484720027688 * "HL_2_relu"."NEUR_2_5" + -3.44548048189 AS "NEUR_3_4" 
FROM "HL_2_relu"), 
"OL_softmax" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1", "OL_BA"."NEUR_3_2" AS "NEUR_3_2", "OL_BA"."NEUR_3_3" AS "NEUR_3_3", "OL_BA"."NEUR_3_4" AS "NEUR_3_4" 
FROM "OL_BA"), 
orig_cte AS 
(SELECT "OL_softmax"."KEY" AS "KEY", "OL_softmax"."NEUR_3_1" AS "Score_0", "OL_softmax"."NEUR_3_2" AS "Score_1", "OL_softmax"."NEUR_3_3" AS "Score_2", "OL_softmax"."NEUR_3_4" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision" 
FROM "OL_softmax"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CAST(arg_max_cte."arg_max_Score" AS BIGINT) AS "Decision" 
FROM arg_max_cte