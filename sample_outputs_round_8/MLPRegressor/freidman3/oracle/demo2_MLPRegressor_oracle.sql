-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "IL" AS 
(SELECT "ADS"."KEY" AS "KEY", CAST("ADS"."Feature_0" AS FLOAT) AS "Feature_0", CAST("ADS"."Feature_1" AS FLOAT) AS "Feature_1", CAST("ADS"."Feature_2" AS FLOAT) AS "Feature_2", CAST("ADS"."Feature_3" AS FLOAT) AS "Feature_3" 
FROM freidman3 "ADS"), 
"HL_BA_1" AS 
(SELECT "IL"."KEY" AS "KEY", -0.134577649774 * "IL"."Feature_0" + -0.591309606217 * "IL"."Feature_1" + -0.732357397923 * "IL"."Feature_2" + -0.81903323944 * "IL"."Feature_3" + 0.347593872734 AS "NEUR_1_1", -0.087419368646 * "IL"."Feature_0" + 0.0139729343511 * "IL"."Feature_1" + -0.559797841167 * "IL"."Feature_2" + 0.656756241773 * "IL"."Feature_3" + 0.279048711152 AS "NEUR_1_2", 0.877314641619 * "IL"."Feature_0" + -0.600897740323 * "IL"."Feature_1" + 0.490578364792 * "IL"."Feature_2" + 0.131713217119 * "IL"."Feature_3" + -0.592512275061 AS "NEUR_1_3" 
FROM "IL"), 
"HL_1_relu" AS 
(SELECT "HL_BA_1"."KEY" AS "KEY", CASE WHEN ("HL_BA_1"."NEUR_1_1" >= 0.0) THEN "HL_BA_1"."NEUR_1_1" ELSE 0.0 END AS "NEUR_1_1", CASE WHEN ("HL_BA_1"."NEUR_1_2" >= 0.0) THEN "HL_BA_1"."NEUR_1_2" ELSE 0.0 END AS "NEUR_1_2", CASE WHEN ("HL_BA_1"."NEUR_1_3" >= 0.0) THEN "HL_BA_1"."NEUR_1_3" ELSE 0.0 END AS "NEUR_1_3" 
FROM "HL_BA_1"), 
"HL_BA_2" AS 
(SELECT "HL_1_relu"."KEY" AS "KEY", 0.67278839744 * "HL_1_relu"."NEUR_1_1" + 0.572520161302 * "HL_1_relu"."NEUR_1_2" + 0.730015138829 * "HL_1_relu"."NEUR_1_3" + -0.368435388244 AS "NEUR_2_1", 0.648831515187 * "HL_1_relu"."NEUR_1_1" + -0.069394512742 * "HL_1_relu"."NEUR_1_2" + -0.645927632465 * "HL_1_relu"."NEUR_1_3" + -0.529290429612 AS "NEUR_2_2", -0.300718030868 * "HL_1_relu"."NEUR_1_1" + -0.827340413395 * "HL_1_relu"."NEUR_1_2" + -0.301044498443 * "HL_1_relu"."NEUR_1_3" + -0.0103942825038 AS "NEUR_2_3", -0.341329429507 * "HL_1_relu"."NEUR_1_1" + -0.518896733141 * "HL_1_relu"."NEUR_1_2" + -0.122329022994 * "HL_1_relu"."NEUR_1_3" + -0.740628349607 AS "NEUR_2_4", -0.386766044879 * "HL_1_relu"."NEUR_1_1" + -0.0275920808498 * "HL_1_relu"."NEUR_1_2" + 0.725272827823 * "HL_1_relu"."NEUR_1_3" + -0.149393226565 AS "NEUR_2_5" 
FROM "HL_1_relu"), 
"HL_2_relu" AS 
(SELECT "HL_BA_2"."KEY" AS "KEY", CASE WHEN ("HL_BA_2"."NEUR_2_1" >= 0.0) THEN "HL_BA_2"."NEUR_2_1" ELSE 0.0 END AS "NEUR_2_1", CASE WHEN ("HL_BA_2"."NEUR_2_2" >= 0.0) THEN "HL_BA_2"."NEUR_2_2" ELSE 0.0 END AS "NEUR_2_2", CASE WHEN ("HL_BA_2"."NEUR_2_3" >= 0.0) THEN "HL_BA_2"."NEUR_2_3" ELSE 0.0 END AS "NEUR_2_3", CASE WHEN ("HL_BA_2"."NEUR_2_4" >= 0.0) THEN "HL_BA_2"."NEUR_2_4" ELSE 0.0 END AS "NEUR_2_4", CASE WHEN ("HL_BA_2"."NEUR_2_5" >= 0.0) THEN "HL_BA_2"."NEUR_2_5" ELSE 0.0 END AS "NEUR_2_5" 
FROM "HL_BA_2"), 
"OL_BA" AS 
(SELECT "HL_2_relu"."KEY" AS "KEY", 0.023676025841 * "HL_2_relu"."NEUR_2_1" + 0.128274010105 * "HL_2_relu"."NEUR_2_2" + -0.718391375055 * "HL_2_relu"."NEUR_2_3" + 0.682955828178 * "HL_2_relu"."NEUR_2_4" + 0.768076529999 * "HL_2_relu"."NEUR_2_5" + 1.26417570298 AS "NEUR_3_1" 
FROM "HL_2_relu"), 
"OL_identity" AS 
(SELECT "OL_BA"."KEY" AS "KEY", "OL_BA"."NEUR_3_1" AS "NEUR_3_1" 
FROM "OL_BA")
 SELECT "OL_identity"."KEY" AS "KEY", "OL_identity"."NEUR_3_1" AS "Estimator" 
FROM "OL_identity"