-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH [ADS_imp_1_OUT] AS 
(SELECT [ADS].[KEY] AS [KEY], CASE WHEN ([ADS].[Feature_0] IS NULL) THEN 37.1024906382 ELSE [ADS].[Feature_0] END AS imputer_output_2, CASE WHEN ([ADS].[Feature_1] IS NULL) THEN 820.420898922 ELSE [ADS].[Feature_1] END AS imputer_output_3, CASE WHEN ([ADS].[Feature_2] IS NULL) THEN 0.566181762373 ELSE [ADS].[Feature_2] END AS imputer_output_4, CASE WHEN ([ADS].[Feature_3] IS NULL) THEN 6.66448350657 ELSE [ADS].[Feature_3] END AS imputer_output_5 
FROM freidman2 AS [ADS]), 
[ADS_sca_2_OUT] AS 
(SELECT [ADS_imp_1_OUT].[KEY] AS [KEY], (CAST([ADS_imp_1_OUT].imputer_output_2 AS FLOAT) - 37.1024906382) / 27.2361073362 AS scaler_output_2, (CAST([ADS_imp_1_OUT].imputer_output_3 AS FLOAT) - 820.420898922) / 386.031348182 AS scaler_output_3, (CAST([ADS_imp_1_OUT].imputer_output_4 AS FLOAT) - 0.566181762373) / 0.306900434257 AS scaler_output_4, (CAST([ADS_imp_1_OUT].imputer_output_5 AS FLOAT) - 6.66448350657) / 3.34652241867 AS scaler_output_5 
FROM [ADS_imp_1_OUT]), 
[IL] AS 
(SELECT [ADS_sca_2_OUT].[KEY] AS [KEY], CAST([ADS_sca_2_OUT].scaler_output_2 AS FLOAT) AS scaler_output_2, CAST([ADS_sca_2_OUT].scaler_output_3 AS FLOAT) AS scaler_output_3, CAST([ADS_sca_2_OUT].scaler_output_4 AS FLOAT) AS scaler_output_4, CAST([ADS_sca_2_OUT].scaler_output_5 AS FLOAT) AS scaler_output_5 
FROM [ADS_sca_2_OUT]), 
[HL_BA_1] AS 
(SELECT [IL].[KEY] AS [KEY], -7.10188591786 * [IL].scaler_output_2 + 4.40299588168 * [IL].scaler_output_3 + -1.84265753589 * [IL].scaler_output_4 + 0.315100474043 * [IL].scaler_output_5 + -2.20262427201 AS [NEUR_1_1], -3.97107781295 * [IL].scaler_output_2 + 3.60226838949 * [IL].scaler_output_3 + 3.50817829214 * [IL].scaler_output_4 + 3.6950434743 * [IL].scaler_output_5 + 0.388178304554 AS [NEUR_1_2], 1.53887994023 * [IL].scaler_output_2 + 16.0229997527 * [IL].scaler_output_3 + 13.0688571125 * [IL].scaler_output_4 + -2.21471233273 * [IL].scaler_output_5 + 17.3921638074 AS [NEUR_1_3] 
FROM [IL]), 
[HL_1_relu] AS 
(SELECT [HL_BA_1].[KEY] AS [KEY], CASE WHEN ([HL_BA_1].[NEUR_1_1] >= 0.0) THEN [HL_BA_1].[NEUR_1_1] ELSE 0.0 END AS [NEUR_1_1], CASE WHEN ([HL_BA_1].[NEUR_1_2] >= 0.0) THEN [HL_BA_1].[NEUR_1_2] ELSE 0.0 END AS [NEUR_1_2], CASE WHEN ([HL_BA_1].[NEUR_1_3] >= 0.0) THEN [HL_BA_1].[NEUR_1_3] ELSE 0.0 END AS [NEUR_1_3] 
FROM [HL_BA_1]), 
[HL_BA_2] AS 
(SELECT [HL_1_relu].[KEY] AS [KEY], -3.03016146834 * [HL_1_relu].[NEUR_1_1] + 2.34508733273 * [HL_1_relu].[NEUR_1_2] + 1.42256474543 * [HL_1_relu].[NEUR_1_3] + 2.58543759217 AS [NEUR_2_1], 2.20767229337 * [HL_1_relu].[NEUR_1_1] + 3.89296684196 * [HL_1_relu].[NEUR_1_2] + -2.15500051936 * [HL_1_relu].[NEUR_1_3] + -0.318975901792 AS [NEUR_2_2], -0.300721416741 * [HL_1_relu].[NEUR_1_1] + -0.827349728663 * [HL_1_relu].[NEUR_1_2] + -0.301047887991 * [HL_1_relu].[NEUR_1_3] + -0.0103942825038 AS [NEUR_2_3], -0.341333272635 * [HL_1_relu].[NEUR_1_1] + -0.518902575552 * [HL_1_relu].[NEUR_1_2] + -0.122330400332 * [HL_1_relu].[NEUR_1_3] + -0.740628349607 AS [NEUR_2_4], -3.34309696922 * [HL_1_relu].[NEUR_1_1] + 4.30298664852 * [HL_1_relu].[NEUR_1_2] + 2.91736406583 * [HL_1_relu].[NEUR_1_3] + 13.4355760746 AS [NEUR_2_5] 
FROM [HL_1_relu]), 
[HL_2_relu] AS 
(SELECT [HL_BA_2].[KEY] AS [KEY], CASE WHEN ([HL_BA_2].[NEUR_2_1] >= 0.0) THEN [HL_BA_2].[NEUR_2_1] ELSE 0.0 END AS [NEUR_2_1], CASE WHEN ([HL_BA_2].[NEUR_2_2] >= 0.0) THEN [HL_BA_2].[NEUR_2_2] ELSE 0.0 END AS [NEUR_2_2], CASE WHEN ([HL_BA_2].[NEUR_2_3] >= 0.0) THEN [HL_BA_2].[NEUR_2_3] ELSE 0.0 END AS [NEUR_2_3], CASE WHEN ([HL_BA_2].[NEUR_2_4] >= 0.0) THEN [HL_BA_2].[NEUR_2_4] ELSE 0.0 END AS [NEUR_2_4], CASE WHEN ([HL_BA_2].[NEUR_2_5] >= 0.0) THEN [HL_BA_2].[NEUR_2_5] ELSE 0.0 END AS [NEUR_2_5] 
FROM [HL_BA_2]), 
[OL_BA] AS 
(SELECT [HL_2_relu].[KEY] AS [KEY], 9.97593272506 * [HL_2_relu].[NEUR_2_1] + 4.00428300922 * [HL_2_relu].[NEUR_2_2] + -0.718399463635 * [HL_2_relu].[NEUR_2_3] + 0.682963517778 * [HL_2_relu].[NEUR_2_4] + 1.44231394961 * [HL_2_relu].[NEUR_2_5] + 38.671482746 AS [NEUR_3_1] 
FROM [HL_2_relu]), 
[OL_identity] AS 
(SELECT [OL_BA].[KEY] AS [KEY], [OL_BA].[NEUR_3_1] AS [NEUR_3_1] 
FROM [OL_BA])
 SELECT [OL_identity].[KEY] AS [KEY], [OL_identity].[NEUR_3_1] AS [Estimator] 
FROM [OL_identity]