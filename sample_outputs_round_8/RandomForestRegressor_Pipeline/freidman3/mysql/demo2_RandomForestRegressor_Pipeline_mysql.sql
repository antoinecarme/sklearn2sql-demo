-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH `ADS_imp_1_OUT` AS 
(SELECT `ADS`.`KEY` AS `KEY`, CASE WHEN (`ADS`.`Feature_0` IS NULL) THEN 37.1024906382 ELSE `ADS`.`Feature_0` END AS imputer_output_2, CASE WHEN (`ADS`.`Feature_1` IS NULL) THEN 820.420898922 ELSE `ADS`.`Feature_1` END AS imputer_output_3, CASE WHEN (`ADS`.`Feature_2` IS NULL) THEN 0.566181762373 ELSE `ADS`.`Feature_2` END AS imputer_output_4, CASE WHEN (`ADS`.`Feature_3` IS NULL) THEN 6.66448350657 ELSE `ADS`.`Feature_3` END AS imputer_output_5 
FROM freidman3 AS `ADS`), 
`ADS_sca_2_OUT` AS 
(SELECT `ADS_imp_1_OUT`.`KEY` AS `KEY`, (CAST(`ADS_imp_1_OUT`.imputer_output_2 AS DOUBLE) - 37.1024906382) / 27.2361073362 AS scaler_output_2, (CAST(`ADS_imp_1_OUT`.imputer_output_3 AS DOUBLE) - 820.420898922) / 386.031348182 AS scaler_output_3, (CAST(`ADS_imp_1_OUT`.imputer_output_4 AS DOUBLE) - 0.566181762373) / 0.306900434257 AS scaler_output_4, (CAST(`ADS_imp_1_OUT`.imputer_output_5 AS DOUBLE) - 6.66448350657) / 3.34652241867 AS scaler_output_5 
FROM `ADS_imp_1_OUT`), 
`DT_node_lookup` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -1.515555739402771) THEN 1 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -0.8555728197097778) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.5876970291137695) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.44946566224098206) THEN 5 ELSE 6 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -1.133222222328186) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.33140286803245544) THEN 9 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -1.3272371292114258) THEN 11 ELSE 12 END END ELSE 13 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.18919242918491364) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.6113497614860535) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.8037331104278564) THEN 17 ELSE 18 END ELSE 19 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.07727858424186707) THEN 21 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.915624737739563) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.44186776876449585) THEN 24 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.04125794768333435) THEN 26 ELSE 27 END END ELSE 28 END END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.515555739402771 AS threshold, 15 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4731838320163444 AS `Estimator` UNION ALL SELECT 1 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8079109230317987 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_output_2' AS feature, -0.8555728197097778 AS threshold, 14 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5009035365573675 AS `Estimator` UNION ALL SELECT 3 AS node_id, 'scaler_output_4' AS feature, -0.5876970291137695 AS threshold, 6 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5528797542122084 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, -0.44946566224098206 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5364135743848693 AS `Estimator` UNION ALL SELECT 5 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5359670902044162 AS `Estimator` UNION ALL SELECT 6 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.536711230505171 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'scaler_output_2' AS feature, -1.133222222328186 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5631711166042952 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_output_4' AS feature, -0.33140286803245544 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5674126046105237 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5646091245855271 AS `Estimator` UNION ALL SELECT 10 AS node_id, 'scaler_output_2' AS feature, -1.3272371292114258 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5692815912938547 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5696790399866454 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5684866939082733 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.556101969927248 AS `Estimator` UNION ALL SELECT 14 AS node_id, 'scaler_output_4' AS feature, -0.18919242918491364 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.439477097510737 AS `Estimator` UNION ALL SELECT 15 AS node_id, 'scaler_output_4' AS feature, -0.6113497614860535 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3767934743188395 AS `Estimator` UNION ALL SELECT 16 AS node_id, 'scaler_output_5' AS feature, -0.8037331104278564 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.368305858765039 AS `Estimator` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3678941404936502 AS `Estimator` UNION ALL SELECT 18 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3687175770364277 AS `Estimator` UNION ALL SELECT 19 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.410743936534041 AS `Estimator` UNION ALL SELECT 20 AS node_id, 'scaler_output_4' AS feature, 0.07727858424186707 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4917134501706517 AS `Estimator` UNION ALL SELECT 21 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.467648677980467 AS `Estimator` UNION ALL SELECT 22 AS node_id, 'scaler_output_3' AS feature, 0.915624737739563 AS threshold, 4 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4965264046086886 AS `Estimator` UNION ALL SELECT 23 AS node_id, 'scaler_output_4' AS feature, 0.44186776876449585 AS threshold, 3 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.49318296852536 AS `Estimator` UNION ALL SELECT 24 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4872578515104244 AS `Estimator` UNION ALL SELECT 25 AS node_id, 'scaler_output_3' AS feature, -0.04125794768333435 AS threshold, 2 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4951580075303383 AS `Estimator` UNION ALL SELECT 26 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.499027385598966 AS `Estimator` UNION ALL SELECT 27 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 7 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4932233184960249 AS `Estimator` UNION ALL SELECT 28 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5099001489420028 AS `Estimator`) AS `Values`), 
`DT_Output` AS 
(SELECT `DT_node_lookup`.`KEY` AS `KEY`, `DT_node_lookup`.node_id_2 AS node_id_2, `DT_node_data`.node_id AS node_id, `DT_node_data`.feature AS feature, `DT_node_data`.threshold AS threshold, `DT_node_data`.count AS count, `DT_node_data`.depth AS depth, `DT_node_data`.parent_id AS parent_id, `DT_node_data`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup` LEFT OUTER JOIN `DT_node_data` ON `DT_node_lookup`.node_id_2 = `DT_node_data`.node_id), 
`RF_Tree_0` AS 
(SELECT `DT_Output`.`KEY` AS `KEY`, `DT_Output`.`Estimator` AS `Estimator` 
FROM `DT_Output`), 
`DT_node_lookup_1` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -1.399195671081543) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -0.7402926683425903) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.37956005334854126) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.1336068958044052) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.7028077840805054) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.7213070392608643) THEN 8 ELSE 9 END ELSE 10 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.2912461757659912) THEN 12 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.5575467944145203) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -0.11847900599241257) THEN 15 ELSE 16 END ELSE 17 END END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.6926426887512207) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.3280213177204132) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.9489699602127075) THEN 21 ELSE 22 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.7955580949783325) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.13264989852905273) THEN 25 ELSE 26 END ELSE 27 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 1.3462634086608887) THEN 29 ELSE 30 END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_1` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.399195671081543 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.47126635805493 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_output_2' AS feature, -0.7402926683425903 AS threshold, 2 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2455031803026952 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1409162524546155 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.350090108150775 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_output_3' AS feature, 0.37956005334854126 AS threshold, 14 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4908979387290375 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_output_5' AS feature, 0.1336068958044052 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.460333496675459 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_output_2' AS feature, 0.7028077840805054 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3813864199582429 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'scaler_output_5' AS feature, -0.7213070392608643 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4155560301845382 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.410743936534041 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4251802174855326 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.278877589279357 AS `Estimator` UNION ALL SELECT 11 AS node_id, 'scaler_output_4' AS feature, -0.2912461757659912 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4954210863275552 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5359670902044162 AS `Estimator` UNION ALL SELECT 13 AS node_id, 'scaler_output_2' AS feature, 0.5575467944145203 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4838365137913094 AS `Estimator` UNION ALL SELECT 14 AS node_id, 'scaler_output_2' AS feature, -0.11847900599241257 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4911810295399384 AS `Estimator` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.499027385598966 AS `Estimator` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4872578515104244 AS `Estimator` UNION ALL SELECT 17 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4783281269798374 AS `Estimator` UNION ALL SELECT 18 AS node_id, 'scaler_output_2' AS feature, 0.6926426887512207 AS threshold, 7 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5306317133986889 AS `Estimator` UNION ALL SELECT 19 AS node_id, 'scaler_output_5' AS feature, -0.3280213177204132 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5378992083186076 AS `Estimator` UNION ALL SELECT 20 AS node_id, 'scaler_output_4' AS feature, 0.9489699602127075 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5291542683061832 AS `Estimator` UNION ALL SELECT 21 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.527629409709021 AS `Estimator` UNION ALL SELECT 22 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5352537026948319 AS `Estimator` UNION ALL SELECT 23 AS node_id, 'scaler_output_3' AS feature, 0.7955580949783325 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5524741083393154 AS `Estimator` UNION ALL SELECT 24 AS node_id, 'scaler_output_4' AS feature, -0.13264989852905273 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5603555472563877 AS `Estimator` UNION ALL SELECT 25 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5646091245855271 AS `Estimator` UNION ALL SELECT 26 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.556101969927248 AS `Estimator` UNION ALL SELECT 27 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.536711230505171 AS `Estimator` UNION ALL SELECT 28 AS node_id, 'scaler_output_4' AS feature, 1.3462634086608887 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5015617337190137 AS `Estimator` UNION ALL SELECT 29 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4932233184960249 AS `Estimator` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5099001489420028 AS `Estimator`) AS `Values`), 
`DT_Output_1` AS 
(SELECT `DT_node_lookup_1`.`KEY` AS `KEY`, `DT_node_lookup_1`.node_id_2 AS node_id_2, `DT_node_data_1`.node_id AS node_id, `DT_node_data_1`.feature AS feature, `DT_node_data_1`.threshold AS threshold, `DT_node_data_1`.count AS count, `DT_node_data_1`.depth AS depth, `DT_node_data_1`.parent_id AS parent_id, `DT_node_data_1`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_1` LEFT OUTER JOIN `DT_node_data_1` ON `DT_node_lookup_1`.node_id_2 = `DT_node_data_1`.node_id), 
`RF_Tree_1` AS 
(SELECT `DT_Output_1`.`KEY` AS `KEY`, `DT_Output_1`.`Estimator` AS `Estimator` 
FROM `DT_Output_1`), 
`DT_node_lookup_2` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.043509818613529205) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -0.8584861159324646) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.7916625142097473) THEN 3 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -1.133222222328186) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -1.2766528129577637) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.7164826989173889) THEN 7 ELSE 8 END ELSE 9 END ELSE 10 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -0.3981364071369171) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.15195155143737793) THEN 13 ELSE 14 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.43804436922073364) THEN 16 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.7833790183067322) THEN 18 ELSE 19 END END END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -0.5758421421051025) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.6750271320343018) THEN 22 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= -1.520769476890564) THEN 24 ELSE 25 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -1.4736769199371338) THEN 27 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 1.285435676574707) THEN 29 ELSE 30 END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_2` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_output_2' AS feature, 0.043509818613529205 AS threshold, 16 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4133936077119507 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_output_2' AS feature, -0.8584861159324646 AS threshold, 10 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5114074553580923 AS `Estimator` UNION ALL SELECT 2 AS node_id, 'scaler_output_4' AS feature, -0.7916625142097473 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.558323431748776 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.536711230505171 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_output_2' AS feature, -1.133222222328186 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5655274988299777 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_output_2' AS feature, -1.2766528129577637 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5674126046105237 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_output_3' AS feature, -0.7164826989173889 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5692815912938547 AS `Estimator` UNION ALL SELECT 7 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5696790399866454 AS `Estimator` UNION ALL SELECT 8 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5684866939082733 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5646091245855271 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.556101969927248 AS `Estimator` UNION ALL SELECT 11 AS node_id, 'scaler_output_2' AS feature, -0.3981364071369171 AS threshold, 5 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4488528201705133 AS `Estimator` UNION ALL SELECT 12 AS node_id, 'scaler_output_3' AS feature, 0.15195155143737793 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.390525993739619 AS `Estimator` UNION ALL SELECT 13 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.410743936534041 AS `Estimator` UNION ALL SELECT 14 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.350090108150775 AS `Estimator` UNION ALL SELECT 15 AS node_id, 'scaler_output_5' AS feature, -0.43804436922073364 AS threshold, 3 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5071796466014076 AS `Estimator` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5352537026948319 AS `Estimator` UNION ALL SELECT 17 AS node_id, 'scaler_output_5' AS feature, 0.7833790183067322 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4931426185546952 AS `Estimator` UNION ALL SELECT 18 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.499027385598966 AS `Estimator` UNION ALL SELECT 19 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4872578515104244 AS `Estimator` UNION ALL SELECT 20 AS node_id, 'scaler_output_3' AS feature, -0.5758421421051025 AS threshold, 6 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.2886487107077713 AS `Estimator` UNION ALL SELECT 21 AS node_id, 'scaler_output_2' AS feature, 0.6750271320343018 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1037915634109876 AS `Estimator` UNION ALL SELECT 22 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8079109230317987 AS `Estimator` UNION ALL SELECT 23 AS node_id, 'scaler_output_3' AS feature, -1.520769476890564 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1777617235057845 AS `Estimator` UNION ALL SELECT 24 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1440564349145939 AS `Estimator` UNION ALL SELECT 25 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.278877589279357 AS `Estimator` UNION ALL SELECT 26 AS node_id, 'scaler_output_5' AS feature, -1.4736769199371338 AS threshold, 3 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.442696333455091 AS `Estimator` UNION ALL SELECT 27 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3678941404936502 AS `Estimator` UNION ALL SELECT 28 AS node_id, 'scaler_output_3' AS feature, 1.285435676574707 AS threshold, 2 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5174985264165322 AS `Estimator` UNION ALL SELECT 29 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5099001489420028 AS `Estimator` UNION ALL SELECT 30 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.521297715153797 AS `Estimator`) AS `Values`), 
`DT_Output_2` AS 
(SELECT `DT_node_lookup_2`.`KEY` AS `KEY`, `DT_node_lookup_2`.node_id_2 AS node_id_2, `DT_node_data_2`.node_id AS node_id, `DT_node_data_2`.feature AS feature, `DT_node_data_2`.threshold AS threshold, `DT_node_data_2`.count AS count, `DT_node_data_2`.depth AS depth, `DT_node_data_2`.parent_id AS parent_id, `DT_node_data_2`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_2` LEFT OUTER JOIN `DT_node_data_2` ON `DT_node_lookup_2`.node_id_2 = `DT_node_data_2`.node_id), 
`RF_Tree_2` AS 
(SELECT `DT_Output_2`.`KEY` AS `KEY`, `DT_Output_2`.`Estimator` AS `Estimator` 
FROM `DT_Output_2`), 
`DT_node_lookup_3` AS 
(SELECT `ADS_sca_2_OUT`.`KEY` AS `KEY`, CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -1.515555739402771) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.11670947074890137) THEN 2 ELSE 3 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.15768837928771973) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.27064037322998047) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 1.31593656539917) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 0.7954779863357544) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= -0.8037331104278564) THEN 9 ELSE 10 END ELSE 11 END ELSE 12 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 1.310650110244751) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.9508177042007446) THEN 15 ELSE 16 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= 1.5224230289459229) THEN 18 ELSE 19 END END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_2 <= -0.6036295890808105) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.5876970291137695) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= -0.9396407008171082) THEN 23 ELSE 24 END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.9679312705993652) THEN CASE WHEN (`ADS_sca_2_OUT`.scaler_output_5 <= 0.7728500366210938) THEN 27 ELSE 28 END ELSE 29 END END ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.07727858424186707) THEN 31 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_4 <= 0.44186776876449585) THEN 33 ELSE CASE WHEN (`ADS_sca_2_OUT`.scaler_output_3 <= 0.4257076382637024) THEN 35 ELSE 36 END END END END END END AS node_id_2 
FROM `ADS_sca_2_OUT`), 
`DT_node_data_3` AS 
(SELECT `Values`.node_id AS node_id, `Values`.feature AS feature, `Values`.threshold AS threshold, `Values`.count AS count, `Values`.depth AS depth, `Values`.parent_id AS parent_id, `Values`.`Estimator` AS `Estimator` 
FROM (SELECT 0 AS node_id, 'scaler_output_4' AS feature, -1.515555739402771 AS threshold, 19 AS count, 0 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4318511894647625 AS `Estimator` UNION ALL SELECT 1 AS node_id, 'scaler_output_5' AS feature, -0.11670947074890137 AS threshold, 2 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.9744135877432071 AS `Estimator` UNION ALL SELECT 2 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 0.8079109230317987 AS `Estimator` UNION ALL SELECT 3 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1409162524546155 AS `Estimator` UNION ALL SELECT 4 AS node_id, 'scaler_output_5' AS feature, 0.15768837928771973 AS threshold, 17 AS count, 1 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4716283722231587 AS `Estimator` UNION ALL SELECT 5 AS node_id, 'scaler_output_3' AS feature, 0.27064037322998047 AS threshold, 8 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3955008907997986 AS `Estimator` UNION ALL SELECT 6 AS node_id, 'scaler_output_2' AS feature, 1.31593656539917 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3158890037852216 AS `Estimator` UNION ALL SELECT 7 AS node_id, 'scaler_output_2' AS feature, 0.7954779863357544 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3502555175593471 AS `Estimator` UNION ALL SELECT 8 AS node_id, 'scaler_output_5' AS feature, -0.8037331104278564 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3680999996293446 AS `Estimator` UNION ALL SELECT 9 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3678941404936502 AS `Estimator` UNION ALL SELECT 10 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.3687175770364277 AS `Estimator` UNION ALL SELECT 11 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.278877589279357 AS `Estimator` UNION ALL SELECT 12 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.1440564349145939 AS `Estimator` UNION ALL SELECT 13 AS node_id, 'scaler_output_4' AS feature, 1.310650110244751 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5149187213216642 AS `Estimator` UNION ALL SELECT 14 AS node_id, 'scaler_output_4' AS feature, 0.9508177042007446 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5282757089243144 AS `Estimator` UNION ALL SELECT 15 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.521297715153797 AS `Estimator` UNION ALL SELECT 16 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5352537026948319 AS `Estimator` UNION ALL SELECT 17 AS node_id, 'scaler_output_2' AS feature, 1.5224230289459229 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5015617337190137 AS `Estimator` UNION ALL SELECT 18 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4932233184960249 AS `Estimator` UNION ALL SELECT 19 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5099001489420028 AS `Estimator` UNION ALL SELECT 20 AS node_id, 'scaler_output_2' AS feature, -0.6036295890808105 AS threshold, 9 AS count, 2 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5301879733180512 AS `Estimator` UNION ALL SELECT 21 AS node_id, 'scaler_output_4' AS feature, -0.5876970291137695 AS threshold, 5 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5555645109860312 AS `Estimator` UNION ALL SELECT 22 AS node_id, 'scaler_output_4' AS feature, -0.9396407008171082 AS threshold, 2 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5362151369713344 AS `Estimator` UNION ALL SELECT 23 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.536711230505171 AS `Estimator` UNION ALL SELECT 24 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5359670902044162 AS `Estimator` UNION ALL SELECT 25 AS node_id, 'scaler_output_5' AS feature, 0.9679312705993652 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5671741353948494 AS `Estimator` UNION ALL SELECT 26 AS node_id, 'scaler_output_5' AS feature, 0.7728500366210938 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.568884142601064 AS `Estimator` UNION ALL SELECT 27 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5696790399866454 AS `Estimator` UNION ALL SELECT 28 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5684866939082733 AS `Estimator` UNION ALL SELECT 29 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.5646091245855271 AS `Estimator` UNION ALL SELECT 30 AS node_id, 'scaler_output_4' AS feature, 0.07727858424186707 AS threshold, 4 AS count, 3 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4895855130492834 AS `Estimator` UNION ALL SELECT 31 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.467648677980467 AS `Estimator` UNION ALL SELECT 32 AS node_id, 'scaler_output_4' AS feature, 0.44186776876449585 AS threshold, 3 AS count, 4 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4950697218164875 AS `Estimator` UNION ALL SELECT 33 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4872578515104244 AS `Estimator` UNION ALL SELECT 34 AS node_id, 'scaler_output_3' AS feature, 0.4257076382637024 AS threshold, 2 AS count, 5 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4976736785851752 AS `Estimator` UNION ALL SELECT 35 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.499027385598966 AS `Estimator` UNION ALL SELECT 36 AS node_id, CAST(NULL AS CHAR(256)) AS feature, NULL AS threshold, 1 AS count, 6 AS depth, CAST(NULL AS SIGNED INTEGER) AS parent_id, 1.4949662645575934 AS `Estimator`) AS `Values`), 
`DT_Output_3` AS 
(SELECT `DT_node_lookup_3`.`KEY` AS `KEY`, `DT_node_lookup_3`.node_id_2 AS node_id_2, `DT_node_data_3`.node_id AS node_id, `DT_node_data_3`.feature AS feature, `DT_node_data_3`.threshold AS threshold, `DT_node_data_3`.count AS count, `DT_node_data_3`.depth AS depth, `DT_node_data_3`.parent_id AS parent_id, `DT_node_data_3`.`Estimator` AS `Estimator` 
FROM `DT_node_lookup_3` LEFT OUTER JOIN `DT_node_data_3` ON `DT_node_lookup_3`.node_id_2 = `DT_node_data_3`.node_id), 
`RF_Tree_3` AS 
(SELECT `DT_Output_3`.`KEY` AS `KEY`, `DT_Output_3`.`Estimator` AS `Estimator` 
FROM `DT_Output_3`), 
`Score_Union_CTE` AS 
(SELECT ensemble_score_union.`KEY` AS `KEY`, ensemble_score_union.`Estimator` AS `Estimator` 
FROM (SELECT `RF_Tree_0`.`KEY` AS `KEY`, `RF_Tree_0`.`Estimator` AS `Estimator` 
FROM `RF_Tree_0` UNION ALL SELECT `RF_Tree_1`.`KEY` AS `KEY`, `RF_Tree_1`.`Estimator` AS `Estimator` 
FROM `RF_Tree_1` UNION ALL SELECT `RF_Tree_2`.`KEY` AS `KEY`, `RF_Tree_2`.`Estimator` AS `Estimator` 
FROM `RF_Tree_2` UNION ALL SELECT `RF_Tree_3`.`KEY` AS `KEY`, `RF_Tree_3`.`Estimator` AS `Estimator` 
FROM `RF_Tree_3`) AS ensemble_score_union), 
`RF_AVG_Scores` AS 
(SELECT `T`.`KEY` AS `KEY`, `T`.`Estimator` AS `Estimator` 
FROM (SELECT `Score_Union_CTE`.`KEY` AS `KEY`, avg(`Score_Union_CTE`.`Estimator`) AS `Estimator` 
FROM `Score_Union_CTE` GROUP BY `Score_Union_CTE`.`KEY`) AS `T`)
 SELECT `RF_AVG_Scores`.`KEY` AS `KEY`, `RF_AVG_Scores`.`Estimator` AS `Estimator` 
FROM `RF_AVG_Scores`