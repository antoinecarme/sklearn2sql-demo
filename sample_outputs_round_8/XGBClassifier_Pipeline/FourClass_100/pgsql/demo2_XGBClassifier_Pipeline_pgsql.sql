-- This SQL code was generated by scikit2sql (development version).
-- Copyright 2017

WITH "ADS_imp_1_OUT" AS 
(SELECT "ADS"."KEY" AS "KEY", CASE WHEN ("ADS"."Feature_0" IS NULL) THEN -0.0542737413 ELSE "ADS"."Feature_0" END AS impter_2, CASE WHEN ("ADS"."Feature_1" IS NULL) THEN -0.218756529519 ELSE "ADS"."Feature_1" END AS impter_3, CASE WHEN ("ADS"."Feature_2" IS NULL) THEN -0.0305703479087 ELSE "ADS"."Feature_2" END AS impter_4, CASE WHEN ("ADS"."Feature_3" IS NULL) THEN -0.331249604917 ELSE "ADS"."Feature_3" END AS impter_5, CASE WHEN ("ADS"."Feature_4" IS NULL) THEN 0.366763606826 ELSE "ADS"."Feature_4" END AS impter_6, CASE WHEN ("ADS"."Feature_5" IS NULL) THEN -0.0741510747659 ELSE "ADS"."Feature_5" END AS impter_7, CASE WHEN ("ADS"."Feature_6" IS NULL) THEN 0.412718121967 ELSE "ADS"."Feature_6" END AS impter_8, CASE WHEN ("ADS"."Feature_7" IS NULL) THEN -0.0169856025995 ELSE "ADS"."Feature_7" END AS impter_9, CASE WHEN ("ADS"."Feature_8" IS NULL) THEN 0.0847843992289 ELSE "ADS"."Feature_8" END AS impter_10, CASE WHEN ("ADS"."Feature_9" IS NULL) THEN -0.13181660797 ELSE "ADS"."Feature_9" END AS impter_11, CASE WHEN ("ADS"."Feature_10" IS NULL) THEN 1.44017259497 ELSE "ADS"."Feature_10" END AS impter_12, CASE WHEN ("ADS"."Feature_11" IS NULL) THEN 0.55076799394 ELSE "ADS"."Feature_11" END AS impter_13, CASE WHEN ("ADS"."Feature_12" IS NULL) THEN -0.0654596306858 ELSE "ADS"."Feature_12" END AS impter_14, CASE WHEN ("ADS"."Feature_13" IS NULL) THEN 0.171642529155 ELSE "ADS"."Feature_13" END AS impter_15, CASE WHEN ("ADS"."Feature_14" IS NULL) THEN 0.0828986327221 ELSE "ADS"."Feature_14" END AS impter_16, CASE WHEN ("ADS"."Feature_15" IS NULL) THEN -1.85751133848 ELSE "ADS"."Feature_15" END AS impter_17, CASE WHEN ("ADS"."Feature_16" IS NULL) THEN -0.0663115994037 ELSE "ADS"."Feature_16" END AS impter_18, CASE WHEN ("ADS"."Feature_17" IS NULL) THEN 1.14029211354 ELSE "ADS"."Feature_17" END AS impter_19, CASE WHEN ("ADS"."Feature_18" IS NULL) THEN 0.888873615763 ELSE "ADS"."Feature_18" END AS impter_20, CASE WHEN ("ADS"."Feature_19" IS NULL) THEN 0.0957726287612 ELSE "ADS"."Feature_19" END AS impter_21, CASE WHEN ("ADS"."Feature_20" IS NULL) THEN 0.244738494487 ELSE "ADS"."Feature_20" END AS impter_22, CASE WHEN ("ADS"."Feature_21" IS NULL) THEN -0.609092391916 ELSE "ADS"."Feature_21" END AS impter_23, CASE WHEN ("ADS"."Feature_22" IS NULL) THEN 0.0503892472753 ELSE "ADS"."Feature_22" END AS impter_24, CASE WHEN ("ADS"."Feature_23" IS NULL) THEN 0.0273013863534 ELSE "ADS"."Feature_23" END AS impter_25, CASE WHEN ("ADS"."Feature_24" IS NULL) THEN 0.380717162276 ELSE "ADS"."Feature_24" END AS impter_26, CASE WHEN ("ADS"."Feature_25" IS NULL) THEN -0.20661251308 ELSE "ADS"."Feature_25" END AS impter_27, CASE WHEN ("ADS"."Feature_26" IS NULL) THEN 0.668654570611 ELSE "ADS"."Feature_26" END AS impter_28, CASE WHEN ("ADS"."Feature_27" IS NULL) THEN -0.160942763602 ELSE "ADS"."Feature_27" END AS impter_29, CASE WHEN ("ADS"."Feature_28" IS NULL) THEN 0.0940928528227 ELSE "ADS"."Feature_28" END AS impter_30, CASE WHEN ("ADS"."Feature_29" IS NULL) THEN 1.63077561616 ELSE "ADS"."Feature_29" END AS impter_31, CASE WHEN ("ADS"."Feature_30" IS NULL) THEN -1.75138858195 ELSE "ADS"."Feature_30" END AS impter_32, CASE WHEN ("ADS"."Feature_31" IS NULL) THEN 1.0423288999 ELSE "ADS"."Feature_31" END AS impter_33, CASE WHEN ("ADS"."Feature_32" IS NULL) THEN 0.770807238983 ELSE "ADS"."Feature_32" END AS impter_34, CASE WHEN ("ADS"."Feature_33" IS NULL) THEN -0.688081590363 ELSE "ADS"."Feature_33" END AS impter_35, CASE WHEN ("ADS"."Feature_34" IS NULL) THEN -1.27741961295 ELSE "ADS"."Feature_34" END AS impter_36, CASE WHEN ("ADS"."Feature_35" IS NULL) THEN -0.112813132236 ELSE "ADS"."Feature_35" END AS impter_37, CASE WHEN ("ADS"."Feature_36" IS NULL) THEN -0.000301506162037 ELSE "ADS"."Feature_36" END AS impter_38, CASE WHEN ("ADS"."Feature_37" IS NULL) THEN -0.0384177367383 ELSE "ADS"."Feature_37" END AS impter_39, CASE WHEN ("ADS"."Feature_38" IS NULL) THEN 0.00192035150554 ELSE "ADS"."Feature_38" END AS impter_40, CASE WHEN ("ADS"."Feature_39" IS NULL) THEN -0.108901644136 ELSE "ADS"."Feature_39" END AS impter_41, CASE WHEN ("ADS"."Feature_40" IS NULL) THEN -0.172777499083 ELSE "ADS"."Feature_40" END AS impter_42, CASE WHEN ("ADS"."Feature_41" IS NULL) THEN 0.756450798532 ELSE "ADS"."Feature_41" END AS impter_43, CASE WHEN ("ADS"."Feature_42" IS NULL) THEN -0.0766321841653 ELSE "ADS"."Feature_42" END AS impter_44, CASE WHEN ("ADS"."Feature_43" IS NULL) THEN 1.49221532559 ELSE "ADS"."Feature_43" END AS impter_45, CASE WHEN ("ADS"."Feature_44" IS NULL) THEN 0.0809334318631 ELSE "ADS"."Feature_44" END AS impter_46, CASE WHEN ("ADS"."Feature_45" IS NULL) THEN -0.0511240194687 ELSE "ADS"."Feature_45" END AS impter_47, CASE WHEN ("ADS"."Feature_46" IS NULL) THEN 0.0991431280775 ELSE "ADS"."Feature_46" END AS impter_48, CASE WHEN ("ADS"."Feature_47" IS NULL) THEN 2.99950997083 ELSE "ADS"."Feature_47" END AS impter_49, CASE WHEN ("ADS"."Feature_48" IS NULL) THEN 0.46343653733 ELSE "ADS"."Feature_48" END AS impter_50, CASE WHEN ("ADS"."Feature_49" IS NULL) THEN 1.00327288337 ELSE "ADS"."Feature_49" END AS impter_51, CASE WHEN ("ADS"."Feature_50" IS NULL) THEN -0.345317889003 ELSE "ADS"."Feature_50" END AS impter_52, CASE WHEN ("ADS"."Feature_51" IS NULL) THEN -0.074907381624 ELSE "ADS"."Feature_51" END AS impter_53, CASE WHEN ("ADS"."Feature_52" IS NULL) THEN 0.668197689036 ELSE "ADS"."Feature_52" END AS impter_54, CASE WHEN ("ADS"."Feature_53" IS NULL) THEN -0.0213201023454 ELSE "ADS"."Feature_53" END AS impter_55, CASE WHEN ("ADS"."Feature_54" IS NULL) THEN -0.40214128931 ELSE "ADS"."Feature_54" END AS impter_56, CASE WHEN ("ADS"."Feature_55" IS NULL) THEN 0.462322711545 ELSE "ADS"."Feature_55" END AS impter_57, CASE WHEN ("ADS"."Feature_56" IS NULL) THEN -1.85433259836 ELSE "ADS"."Feature_56" END AS impter_58, CASE WHEN ("ADS"."Feature_57" IS NULL) THEN -0.0714861710124 ELSE "ADS"."Feature_57" END AS impter_59, CASE WHEN ("ADS"."Feature_58" IS NULL) THEN 0.295346518526 ELSE "ADS"."Feature_58" END AS impter_60, CASE WHEN ("ADS"."Feature_59" IS NULL) THEN 0.707152602525 ELSE "ADS"."Feature_59" END AS impter_61, CASE WHEN ("ADS"."Feature_60" IS NULL) THEN -0.999290987436 ELSE "ADS"."Feature_60" END AS impter_62, CASE WHEN ("ADS"."Feature_61" IS NULL) THEN 0.0895853339294 ELSE "ADS"."Feature_61" END AS impter_63, CASE WHEN ("ADS"."Feature_62" IS NULL) THEN -9.29088785315 ELSE "ADS"."Feature_62" END AS impter_64, CASE WHEN ("ADS"."Feature_63" IS NULL) THEN -0.00420751817254 ELSE "ADS"."Feature_63" END AS impter_65, CASE WHEN ("ADS"."Feature_64" IS NULL) THEN -0.178981366682 ELSE "ADS"."Feature_64" END AS impter_66, CASE WHEN ("ADS"."Feature_65" IS NULL) THEN 0.104619597019 ELSE "ADS"."Feature_65" END AS impter_67, CASE WHEN ("ADS"."Feature_66" IS NULL) THEN 0.317321472946 ELSE "ADS"."Feature_66" END AS impter_68, CASE WHEN ("ADS"."Feature_67" IS NULL) THEN 0.507737105695 ELSE "ADS"."Feature_67" END AS impter_69, CASE WHEN ("ADS"."Feature_68" IS NULL) THEN 0.636354957302 ELSE "ADS"."Feature_68" END AS impter_70, CASE WHEN ("ADS"."Feature_69" IS NULL) THEN -1.26959924734 ELSE "ADS"."Feature_69" END AS impter_71, CASE WHEN ("ADS"."Feature_70" IS NULL) THEN 0.168554896467 ELSE "ADS"."Feature_70" END AS impter_72, CASE WHEN ("ADS"."Feature_71" IS NULL) THEN 0.382817250313 ELSE "ADS"."Feature_71" END AS impter_73, CASE WHEN ("ADS"."Feature_72" IS NULL) THEN 0.356291795624 ELSE "ADS"."Feature_72" END AS impter_74, CASE WHEN ("ADS"."Feature_73" IS NULL) THEN -0.662337874026 ELSE "ADS"."Feature_73" END AS impter_75, CASE WHEN ("ADS"."Feature_74" IS NULL) THEN -1.11003423439 ELSE "ADS"."Feature_74" END AS impter_76, CASE WHEN ("ADS"."Feature_75" IS NULL) THEN -0.0453679904887 ELSE "ADS"."Feature_75" END AS impter_77, CASE WHEN ("ADS"."Feature_76" IS NULL) THEN 0.956315095738 ELSE "ADS"."Feature_76" END AS impter_78, CASE WHEN ("ADS"."Feature_77" IS NULL) THEN 0.120281875009 ELSE "ADS"."Feature_77" END AS impter_79, CASE WHEN ("ADS"."Feature_78" IS NULL) THEN 0.316221585917 ELSE "ADS"."Feature_78" END AS impter_80, CASE WHEN ("ADS"."Feature_79" IS NULL) THEN -1.2868164842 ELSE "ADS"."Feature_79" END AS impter_81, CASE WHEN ("ADS"."Feature_80" IS NULL) THEN -0.382487328823 ELSE "ADS"."Feature_80" END AS impter_82, CASE WHEN ("ADS"."Feature_81" IS NULL) THEN 0.168238944463 ELSE "ADS"."Feature_81" END AS impter_83, CASE WHEN ("ADS"."Feature_82" IS NULL) THEN 0.0165491301864 ELSE "ADS"."Feature_82" END AS impter_84, CASE WHEN ("ADS"."Feature_83" IS NULL) THEN 1.4745932382 ELSE "ADS"."Feature_83" END AS impter_85, CASE WHEN ("ADS"."Feature_84" IS NULL) THEN -0.4513845299 ELSE "ADS"."Feature_84" END AS impter_86, CASE WHEN ("ADS"."Feature_85" IS NULL) THEN 0.807426393278 ELSE "ADS"."Feature_85" END AS impter_87, CASE WHEN ("ADS"."Feature_86" IS NULL) THEN -0.151058515856 ELSE "ADS"."Feature_86" END AS impter_88, CASE WHEN ("ADS"."Feature_87" IS NULL) THEN 0.155661783653 ELSE "ADS"."Feature_87" END AS impter_89, CASE WHEN ("ADS"."Feature_88" IS NULL) THEN 0.184085967694 ELSE "ADS"."Feature_88" END AS impter_90, CASE WHEN ("ADS"."Feature_89" IS NULL) THEN -0.0219093592328 ELSE "ADS"."Feature_89" END AS impter_91, CASE WHEN ("ADS"."Feature_90" IS NULL) THEN -0.362059992861 ELSE "ADS"."Feature_90" END AS impter_92, CASE WHEN ("ADS"."Feature_91" IS NULL) THEN 0.143072216148 ELSE "ADS"."Feature_91" END AS impter_93, CASE WHEN ("ADS"."Feature_92" IS NULL) THEN 0.0357397227366 ELSE "ADS"."Feature_92" END AS impter_94, CASE WHEN ("ADS"."Feature_93" IS NULL) THEN 0.430791347498 ELSE "ADS"."Feature_93" END AS impter_95, CASE WHEN ("ADS"."Feature_94" IS NULL) THEN 0.822593425438 ELSE "ADS"."Feature_94" END AS impter_96, CASE WHEN ("ADS"."Feature_95" IS NULL) THEN -0.302430192744 ELSE "ADS"."Feature_95" END AS impter_97, CASE WHEN ("ADS"."Feature_96" IS NULL) THEN -0.217429237531 ELSE "ADS"."Feature_96" END AS impter_98, CASE WHEN ("ADS"."Feature_97" IS NULL) THEN 0.0563057530387 ELSE "ADS"."Feature_97" END AS impter_99, CASE WHEN ("ADS"."Feature_98" IS NULL) THEN 1.12193378849 ELSE "ADS"."Feature_98" END AS impter_100, CASE WHEN ("ADS"."Feature_99" IS NULL) THEN -2.8087439791 ELSE "ADS"."Feature_99" END AS impter_101 
FROM "FourClass_100" AS "ADS"), 
"ADS_sca_2_OUT" AS 
(SELECT "ADS_imp_1_OUT"."KEY" AS "KEY", (CAST("ADS_imp_1_OUT".impter_2 AS FLOAT) - -0.0542737413) / 0.841226478247 AS scaler_2, (CAST("ADS_imp_1_OUT".impter_3 AS FLOAT) - -0.218756529519) / 0.895975553726 AS scaler_3, (CAST("ADS_imp_1_OUT".impter_4 AS FLOAT) - -0.0305703479087) / 1.02237915624 AS scaler_4, (CAST("ADS_imp_1_OUT".impter_5 AS FLOAT) - -0.331249604917) / 4.26418776375 AS scaler_5, (CAST("ADS_imp_1_OUT".impter_6 AS FLOAT) - 0.366763606826) / 3.53829894255 AS scaler_6, (CAST("ADS_imp_1_OUT".impter_7 AS FLOAT) - -0.0741510747659) / 0.963174682697 AS scaler_7, (CAST("ADS_imp_1_OUT".impter_8 AS FLOAT) - 0.412718121967) / 4.9472758423 AS scaler_8, (CAST("ADS_imp_1_OUT".impter_9 AS FLOAT) - -0.0169856025995) / 0.994830601441 AS scaler_9, (CAST("ADS_imp_1_OUT".impter_10 AS FLOAT) - 0.0847843992289) / 0.980176464339 AS scaler_10, (CAST("ADS_imp_1_OUT".impter_11 AS FLOAT) - -0.13181660797) / 0.950866788502 AS scaler_11, (CAST("ADS_imp_1_OUT".impter_12 AS FLOAT) - 1.44017259497) / 4.14930369821 AS scaler_12, (CAST("ADS_imp_1_OUT".impter_13 AS FLOAT) - 0.55076799394) / 3.17598517548 AS scaler_13, (CAST("ADS_imp_1_OUT".impter_14 AS FLOAT) - -0.0654596306858) / 0.824661514279 AS scaler_14, (CAST("ADS_imp_1_OUT".impter_15 AS FLOAT) - 0.171642529155) / 0.840967567066 AS scaler_15, (CAST("ADS_imp_1_OUT".impter_16 AS FLOAT) - 0.0828986327221) / 0.839419166269 AS scaler_16, (CAST("ADS_imp_1_OUT".impter_17 AS FLOAT) - -1.85751133848) / 4.88766775585 AS scaler_17, (CAST("ADS_imp_1_OUT".impter_18 AS FLOAT) - -0.0663115994037) / 0.866138364171 AS scaler_18, (CAST("ADS_imp_1_OUT".impter_19 AS FLOAT) - 1.14029211354) / 3.88280400787 AS scaler_19, (CAST("ADS_imp_1_OUT".impter_20 AS FLOAT) - 0.888873615763) / 3.84999760442 AS scaler_20, (CAST("ADS_imp_1_OUT".impter_21 AS FLOAT) - 0.0957726287612) / 0.989315601632 AS scaler_21, (CAST("ADS_imp_1_OUT".impter_22 AS FLOAT) - 0.244738494487) / 4.53782548903 AS scaler_22, (CAST("ADS_imp_1_OUT".impter_23 AS FLOAT) - -0.609092391916) / 5.07872746188 AS scaler_23, (CAST("ADS_imp_1_OUT".impter_24 AS FLOAT) - 0.0503892472753) / 1.13868448059 AS scaler_24, (CAST("ADS_imp_1_OUT".impter_25 AS FLOAT) - 0.0273013863534) / 1.03226914948 AS scaler_25, (CAST("ADS_imp_1_OUT".impter_26 AS FLOAT) - 0.380717162276) / 3.90060812668 AS scaler_26, (CAST("ADS_imp_1_OUT".impter_27 AS FLOAT) - -0.20661251308) / 0.93768679925 AS scaler_27, (CAST("ADS_imp_1_OUT".impter_28 AS FLOAT) - 0.668654570611) / 4.84609072226 AS scaler_28, (CAST("ADS_imp_1_OUT".impter_29 AS FLOAT) - -0.160942763602) / 0.94820847069 AS scaler_29, (CAST("ADS_imp_1_OUT".impter_30 AS FLOAT) - 0.0940928528227) / 4.64000461396 AS scaler_30, (CAST("ADS_imp_1_OUT".impter_31 AS FLOAT) - 1.63077561616) / 3.55507198159 AS scaler_31, (CAST("ADS_imp_1_OUT".impter_32 AS FLOAT) - -1.75138858195) / 4.3216605591 AS scaler_32, (CAST("ADS_imp_1_OUT".impter_33 AS FLOAT) - 1.0423288999) / 4.572611642 AS scaler_33, (CAST("ADS_imp_1_OUT".impter_34 AS FLOAT) - 0.770807238983) / 3.7134805867 AS scaler_34, (CAST("ADS_imp_1_OUT".impter_35 AS FLOAT) - -0.688081590363) / 4.65813812968 AS scaler_35, (CAST("ADS_imp_1_OUT".impter_36 AS FLOAT) - -1.27741961295) / 3.59778109771 AS scaler_36, (CAST("ADS_imp_1_OUT".impter_37 AS FLOAT) - -0.112813132236) / 1.03307933825 AS scaler_37, (CAST("ADS_imp_1_OUT".impter_38 AS FLOAT) - -0.000301506162037) / 0.850545923605 AS scaler_38, (CAST("ADS_imp_1_OUT".impter_39 AS FLOAT) - -0.0384177367383) / 0.916256798368 AS scaler_39, (CAST("ADS_imp_1_OUT".impter_40 AS FLOAT) - 0.00192035150554) / 0.923042193633 AS scaler_40, (CAST("ADS_imp_1_OUT".impter_41 AS FLOAT) - -0.108901644136) / 0.714252376902 AS scaler_41, (CAST("ADS_imp_1_OUT".impter_42 AS FLOAT) - -0.172777499083) / 1.10698153118 AS scaler_42, (CAST("ADS_imp_1_OUT".impter_43 AS FLOAT) - 0.756450798532) / 3.5933252592 AS scaler_43, (CAST("ADS_imp_1_OUT".impter_44 AS FLOAT) - -0.0766321841653) / 0.862712072529 AS scaler_44, (CAST("ADS_imp_1_OUT".impter_45 AS FLOAT) - 1.49221532559) / 4.8801181801 AS scaler_45, (CAST("ADS_imp_1_OUT".impter_46 AS FLOAT) - 0.0809334318631) / 1.02051375812 AS scaler_46, (CAST("ADS_imp_1_OUT".impter_47 AS FLOAT) - -0.0511240194687) / 4.13192813822 AS scaler_47, (CAST("ADS_imp_1_OUT".impter_48 AS FLOAT) - 0.0991431280775) / 1.09665873113 AS scaler_48, (CAST("ADS_imp_1_OUT".impter_49 AS FLOAT) - 2.99950997083) / 17.1415128457 AS scaler_49, (CAST("ADS_imp_1_OUT".impter_50 AS FLOAT) - 0.46343653733) / 4.39626438239 AS scaler_50, (CAST("ADS_imp_1_OUT".impter_51 AS FLOAT) - 1.00327288337) / 4.37518201893 AS scaler_51, (CAST("ADS_imp_1_OUT".impter_52 AS FLOAT) - -0.345317889003) / 3.99958888717 AS scaler_52, (CAST("ADS_imp_1_OUT".impter_53 AS FLOAT) - -0.074907381624) / 0.951056156436 AS scaler_53, (CAST("ADS_imp_1_OUT".impter_54 AS FLOAT) - 0.668197689036) / 4.13012403726 AS scaler_54, (CAST("ADS_imp_1_OUT".impter_55 AS FLOAT) - -0.0213201023454) / 1.01908351284 AS scaler_55, (CAST("ADS_imp_1_OUT".impter_56 AS FLOAT) - -0.40214128931) / 0.894915916931 AS scaler_56, (CAST("ADS_imp_1_OUT".impter_57 AS FLOAT) - 0.462322711545) / 4.10023517171 AS scaler_57, (CAST("ADS_imp_1_OUT".impter_58 AS FLOAT) - -1.85433259836) / 4.46821707817 AS scaler_58, (CAST("ADS_imp_1_OUT".impter_59 AS FLOAT) - -0.0714861710124) / 0.761413799215 AS scaler_59, (CAST("ADS_imp_1_OUT".impter_60 AS FLOAT) - 0.295346518526) / 1.06376235447 AS scaler_60, (CAST("ADS_imp_1_OUT".impter_61 AS FLOAT) - 0.707152602525) / 4.30840892885 AS scaler_61, (CAST("ADS_imp_1_OUT".impter_62 AS FLOAT) - -0.999290987436) / 3.20121113123 AS scaler_62, (CAST("ADS_imp_1_OUT".impter_63 AS FLOAT) - 0.0895853339294) / 1.11287992197 AS scaler_63, (CAST("ADS_imp_1_OUT".impter_64 AS FLOAT) - -9.29088785315) / 18.9817375238 AS scaler_64, (CAST("ADS_imp_1_OUT".impter_65 AS FLOAT) - -0.00420751817254) / 0.917648325278 AS scaler_65, (CAST("ADS_imp_1_OUT".impter_66 AS FLOAT) - -0.178981366682) / 1.04680502643 AS scaler_66, (CAST("ADS_imp_1_OUT".impter_67 AS FLOAT) - 0.104619597019) / 0.967281928282 AS scaler_67, (CAST("ADS_imp_1_OUT".impter_68 AS FLOAT) - 0.317321472946) / 1.06062019986 AS scaler_68, (CAST("ADS_imp_1_OUT".impter_69 AS FLOAT) - 0.507737105695) / 5.41062442387 AS scaler_69, (CAST("ADS_imp_1_OUT".impter_70 AS FLOAT) - 0.636354957302) / 3.31142222219 AS scaler_70, (CAST("ADS_imp_1_OUT".impter_71 AS FLOAT) - -1.26959924734) / 4.18780358925 AS scaler_71, (CAST("ADS_imp_1_OUT".impter_72 AS FLOAT) - 0.168554896467) / 1.27264496517 AS scaler_72, (CAST("ADS_imp_1_OUT".impter_73 AS FLOAT) - 0.382817250313) / 4.21777214548 AS scaler_73, (CAST("ADS_imp_1_OUT".impter_74 AS FLOAT) - 0.356291795624) / 4.27892458714 AS scaler_74, (CAST("ADS_imp_1_OUT".impter_75 AS FLOAT) - -0.662337874026) / 3.14279619311 AS scaler_75, (CAST("ADS_imp_1_OUT".impter_76 AS FLOAT) - -1.11003423439) / 4.17863710103 AS scaler_76, (CAST("ADS_imp_1_OUT".impter_77 AS FLOAT) - -0.0453679904887) / 0.913270004578 AS scaler_77, (CAST("ADS_imp_1_OUT".impter_78 AS FLOAT) - 0.956315095738) / 4.5149243782 AS scaler_78, (CAST("ADS_imp_1_OUT".impter_79 AS FLOAT) - 0.120281875009) / 1.18234319918 AS scaler_79, (CAST("ADS_imp_1_OUT".impter_80 AS FLOAT) - 0.316221585917) / 4.65444240801 AS scaler_80, (CAST("ADS_imp_1_OUT".impter_81 AS FLOAT) - -1.2868164842) / 4.48931766249 AS scaler_81, (CAST("ADS_imp_1_OUT".impter_82 AS FLOAT) - -0.382487328823) / 4.79389970723 AS scaler_82, (CAST("ADS_imp_1_OUT".impter_83 AS FLOAT) - 0.168238944463) / 1.13425397882 AS scaler_83, (CAST("ADS_imp_1_OUT".impter_84 AS FLOAT) - 0.0165491301864) / 1.05293513352 AS scaler_84, (CAST("ADS_imp_1_OUT".impter_85 AS FLOAT) - 1.4745932382) / 3.10625058311 AS scaler_85, (CAST("ADS_imp_1_OUT".impter_86 AS FLOAT) - -0.4513845299) / 4.06938678288 AS scaler_86, (CAST("ADS_imp_1_OUT".impter_87 AS FLOAT) - 0.807426393278) / 4.5194432744 AS scaler_87, (CAST("ADS_imp_1_OUT".impter_88 AS FLOAT) - -0.151058515856) / 1.06279296846 AS scaler_88, (CAST("ADS_imp_1_OUT".impter_89 AS FLOAT) - 0.155661783653) / 1.0854880061 AS scaler_89, (CAST("ADS_imp_1_OUT".impter_90 AS FLOAT) - 0.184085967694) / 0.860092382294 AS scaler_90, (CAST("ADS_imp_1_OUT".impter_91 AS FLOAT) - -0.0219093592328) / 1.09657170629 AS scaler_91, (CAST("ADS_imp_1_OUT".impter_92 AS FLOAT) - -0.362059992861) / 3.80775739097 AS scaler_92, (CAST("ADS_imp_1_OUT".impter_93 AS FLOAT) - 0.143072216148) / 4.52894107306 AS scaler_93, (CAST("ADS_imp_1_OUT".impter_94 AS FLOAT) - 0.0357397227366) / 4.51430329801 AS scaler_94, (CAST("ADS_imp_1_OUT".impter_95 AS FLOAT) - 0.430791347498) / 1.00630345361 AS scaler_95, (CAST("ADS_imp_1_OUT".impter_96 AS FLOAT) - 0.822593425438) / 3.48327194839 AS scaler_96, (CAST("ADS_imp_1_OUT".impter_97 AS FLOAT) - -0.302430192744) / 1.10859655925 AS scaler_97, (CAST("ADS_imp_1_OUT".impter_98 AS FLOAT) - -0.217429237531) / 1.11157531881 AS scaler_98, (CAST("ADS_imp_1_OUT".impter_99 AS FLOAT) - 0.0563057530387) / 0.952249066111 AS scaler_99, (CAST("ADS_imp_1_OUT".impter_100 AS FLOAT) - 1.12193378849) / 4.25494688198 AS scaler_100, (CAST("ADS_imp_1_OUT".impter_101 AS FLOAT) - -2.8087439791) / 4.1863751857 AS scaler_101 
FROM "ADS_imp_1_OUT"), 
"DT_node_lookup" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output" AS 
(SELECT "DT_node_lookup"."KEY" AS "KEY", "DT_node_lookup".node_id_2 AS node_id_2, "DT_node_data".node_id AS node_id, "DT_node_data".feature AS feature, "DT_node_data".threshold AS threshold, "DT_node_data".depth AS depth, "DT_node_data".parent_id AS parent_id, "DT_node_data"."Score" AS "Score" 
FROM "DT_node_lookup" LEFT OUTER JOIN "DT_node_data" ON "DT_node_lookup".node_id_2 = "DT_node_data".node_id), 
"XGB_Tree_0_0" AS 
(SELECT "DT_Output"."KEY" AS "KEY", "DT_Output"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output"), 
"DT_node_lookup_1" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_1" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_1" AS 
(SELECT "DT_node_lookup_1"."KEY" AS "KEY", "DT_node_lookup_1".node_id_2 AS node_id_2, "DT_node_data_1".node_id AS node_id, "DT_node_data_1".feature AS feature, "DT_node_data_1".threshold AS threshold, "DT_node_data_1".depth AS depth, "DT_node_data_1".parent_id AS parent_id, "DT_node_data_1"."Score" AS "Score" 
FROM "DT_node_lookup_1" LEFT OUTER JOIN "DT_node_data_1" ON "DT_node_lookup_1".node_id_2 = "DT_node_data_1".node_id), 
"XGB_Tree_1_0" AS 
(SELECT "DT_Output_1"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_1"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_1"), 
"DT_node_lookup_2" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_2" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_2" AS 
(SELECT "DT_node_lookup_2"."KEY" AS "KEY", "DT_node_lookup_2".node_id_2 AS node_id_2, "DT_node_data_2".node_id AS node_id, "DT_node_data_2".feature AS feature, "DT_node_data_2".threshold AS threshold, "DT_node_data_2".depth AS depth, "DT_node_data_2".parent_id AS parent_id, "DT_node_data_2"."Score" AS "Score" 
FROM "DT_node_lookup_2" LEFT OUTER JOIN "DT_node_data_2" ON "DT_node_lookup_2".node_id_2 = "DT_node_data_2".node_id), 
"XGB_Tree_2_0" AS 
(SELECT "DT_Output_2"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_2"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_2"), 
"DT_node_lookup_3" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_3" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_3" AS 
(SELECT "DT_node_lookup_3"."KEY" AS "KEY", "DT_node_lookup_3".node_id_2 AS node_id_2, "DT_node_data_3".node_id AS node_id, "DT_node_data_3".feature AS feature, "DT_node_data_3".threshold AS threshold, "DT_node_data_3".depth AS depth, "DT_node_data_3".parent_id AS parent_id, "DT_node_data_3"."Score" AS "Score" 
FROM "DT_node_lookup_3" LEFT OUTER JOIN "DT_node_data_3" ON "DT_node_lookup_3".node_id_2 = "DT_node_data_3".node_id), 
"XGB_Tree_3_0" AS 
(SELECT "DT_Output_3"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_3"."Score" AS "Score_3" 
FROM "DT_Output_3"), 
"DT_node_lookup_4" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_4" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_4" AS 
(SELECT "DT_node_lookup_4"."KEY" AS "KEY", "DT_node_lookup_4".node_id_2 AS node_id_2, "DT_node_data_4".node_id AS node_id, "DT_node_data_4".feature AS feature, "DT_node_data_4".threshold AS threshold, "DT_node_data_4".depth AS depth, "DT_node_data_4".parent_id AS parent_id, "DT_node_data_4"."Score" AS "Score" 
FROM "DT_node_lookup_4" LEFT OUTER JOIN "DT_node_data_4" ON "DT_node_lookup_4".node_id_2 = "DT_node_data_4".node_id), 
"XGB_Tree_0_1" AS 
(SELECT "DT_Output_4"."KEY" AS "KEY", "DT_Output_4"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_4"), 
"DT_node_lookup_5" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_5" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_5" AS 
(SELECT "DT_node_lookup_5"."KEY" AS "KEY", "DT_node_lookup_5".node_id_2 AS node_id_2, "DT_node_data_5".node_id AS node_id, "DT_node_data_5".feature AS feature, "DT_node_data_5".threshold AS threshold, "DT_node_data_5".depth AS depth, "DT_node_data_5".parent_id AS parent_id, "DT_node_data_5"."Score" AS "Score" 
FROM "DT_node_lookup_5" LEFT OUTER JOIN "DT_node_data_5" ON "DT_node_lookup_5".node_id_2 = "DT_node_data_5".node_id), 
"XGB_Tree_1_1" AS 
(SELECT "DT_Output_5"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_5"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_5"), 
"DT_node_lookup_6" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_6" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_6" AS 
(SELECT "DT_node_lookup_6"."KEY" AS "KEY", "DT_node_lookup_6".node_id_2 AS node_id_2, "DT_node_data_6".node_id AS node_id, "DT_node_data_6".feature AS feature, "DT_node_data_6".threshold AS threshold, "DT_node_data_6".depth AS depth, "DT_node_data_6".parent_id AS parent_id, "DT_node_data_6"."Score" AS "Score" 
FROM "DT_node_lookup_6" LEFT OUTER JOIN "DT_node_data_6" ON "DT_node_lookup_6".node_id_2 = "DT_node_data_6".node_id), 
"XGB_Tree_2_1" AS 
(SELECT "DT_Output_6"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_6"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_6"), 
"DT_node_lookup_7" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_7" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_7" AS 
(SELECT "DT_node_lookup_7"."KEY" AS "KEY", "DT_node_lookup_7".node_id_2 AS node_id_2, "DT_node_data_7".node_id AS node_id, "DT_node_data_7".feature AS feature, "DT_node_data_7".threshold AS threshold, "DT_node_data_7".depth AS depth, "DT_node_data_7".parent_id AS parent_id, "DT_node_data_7"."Score" AS "Score" 
FROM "DT_node_lookup_7" LEFT OUTER JOIN "DT_node_data_7" ON "DT_node_lookup_7".node_id_2 = "DT_node_data_7".node_id), 
"XGB_Tree_3_1" AS 
(SELECT "DT_Output_7"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_7"."Score" AS "Score_3" 
FROM "DT_Output_7"), 
"DT_node_lookup_8" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_8" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_8" AS 
(SELECT "DT_node_lookup_8"."KEY" AS "KEY", "DT_node_lookup_8".node_id_2 AS node_id_2, "DT_node_data_8".node_id AS node_id, "DT_node_data_8".feature AS feature, "DT_node_data_8".threshold AS threshold, "DT_node_data_8".depth AS depth, "DT_node_data_8".parent_id AS parent_id, "DT_node_data_8"."Score" AS "Score" 
FROM "DT_node_lookup_8" LEFT OUTER JOIN "DT_node_data_8" ON "DT_node_lookup_8".node_id_2 = "DT_node_data_8".node_id), 
"XGB_Tree_0_2" AS 
(SELECT "DT_Output_8"."KEY" AS "KEY", "DT_Output_8"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_8"), 
"DT_node_lookup_9" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_9" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_9" AS 
(SELECT "DT_node_lookup_9"."KEY" AS "KEY", "DT_node_lookup_9".node_id_2 AS node_id_2, "DT_node_data_9".node_id AS node_id, "DT_node_data_9".feature AS feature, "DT_node_data_9".threshold AS threshold, "DT_node_data_9".depth AS depth, "DT_node_data_9".parent_id AS parent_id, "DT_node_data_9"."Score" AS "Score" 
FROM "DT_node_lookup_9" LEFT OUTER JOIN "DT_node_data_9" ON "DT_node_lookup_9".node_id_2 = "DT_node_data_9".node_id), 
"XGB_Tree_1_2" AS 
(SELECT "DT_Output_9"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_9"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_9"), 
"DT_node_lookup_10" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_10" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_10" AS 
(SELECT "DT_node_lookup_10"."KEY" AS "KEY", "DT_node_lookup_10".node_id_2 AS node_id_2, "DT_node_data_10".node_id AS node_id, "DT_node_data_10".feature AS feature, "DT_node_data_10".threshold AS threshold, "DT_node_data_10".depth AS depth, "DT_node_data_10".parent_id AS parent_id, "DT_node_data_10"."Score" AS "Score" 
FROM "DT_node_lookup_10" LEFT OUTER JOIN "DT_node_data_10" ON "DT_node_lookup_10".node_id_2 = "DT_node_data_10".node_id), 
"XGB_Tree_2_2" AS 
(SELECT "DT_Output_10"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_10"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_10"), 
"DT_node_lookup_11" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_11" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_11" AS 
(SELECT "DT_node_lookup_11"."KEY" AS "KEY", "DT_node_lookup_11".node_id_2 AS node_id_2, "DT_node_data_11".node_id AS node_id, "DT_node_data_11".feature AS feature, "DT_node_data_11".threshold AS threshold, "DT_node_data_11".depth AS depth, "DT_node_data_11".parent_id AS parent_id, "DT_node_data_11"."Score" AS "Score" 
FROM "DT_node_lookup_11" LEFT OUTER JOIN "DT_node_data_11" ON "DT_node_lookup_11".node_id_2 = "DT_node_data_11".node_id), 
"XGB_Tree_3_2" AS 
(SELECT "DT_Output_11"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_11"."Score" AS "Score_3" 
FROM "DT_Output_11"), 
"DT_node_lookup_12" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_12" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_12" AS 
(SELECT "DT_node_lookup_12"."KEY" AS "KEY", "DT_node_lookup_12".node_id_2 AS node_id_2, "DT_node_data_12".node_id AS node_id, "DT_node_data_12".feature AS feature, "DT_node_data_12".threshold AS threshold, "DT_node_data_12".depth AS depth, "DT_node_data_12".parent_id AS parent_id, "DT_node_data_12"."Score" AS "Score" 
FROM "DT_node_lookup_12" LEFT OUTER JOIN "DT_node_data_12" ON "DT_node_lookup_12".node_id_2 = "DT_node_data_12".node_id), 
"XGB_Tree_0_3" AS 
(SELECT "DT_Output_12"."KEY" AS "KEY", "DT_Output_12"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_12"), 
"DT_node_lookup_13" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_13" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_13" AS 
(SELECT "DT_node_lookup_13"."KEY" AS "KEY", "DT_node_lookup_13".node_id_2 AS node_id_2, "DT_node_data_13".node_id AS node_id, "DT_node_data_13".feature AS feature, "DT_node_data_13".threshold AS threshold, "DT_node_data_13".depth AS depth, "DT_node_data_13".parent_id AS parent_id, "DT_node_data_13"."Score" AS "Score" 
FROM "DT_node_lookup_13" LEFT OUTER JOIN "DT_node_data_13" ON "DT_node_lookup_13".node_id_2 = "DT_node_data_13".node_id), 
"XGB_Tree_1_3" AS 
(SELECT "DT_Output_13"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_13"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_13"), 
"DT_node_lookup_14" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_14" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_14" AS 
(SELECT "DT_node_lookup_14"."KEY" AS "KEY", "DT_node_lookup_14".node_id_2 AS node_id_2, "DT_node_data_14".node_id AS node_id, "DT_node_data_14".feature AS feature, "DT_node_data_14".threshold AS threshold, "DT_node_data_14".depth AS depth, "DT_node_data_14".parent_id AS parent_id, "DT_node_data_14"."Score" AS "Score" 
FROM "DT_node_lookup_14" LEFT OUTER JOIN "DT_node_data_14" ON "DT_node_lookup_14".node_id_2 = "DT_node_data_14".node_id), 
"XGB_Tree_2_3" AS 
(SELECT "DT_Output_14"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_14"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_14"), 
"DT_node_lookup_15" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_15" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_15" AS 
(SELECT "DT_node_lookup_15"."KEY" AS "KEY", "DT_node_lookup_15".node_id_2 AS node_id_2, "DT_node_data_15".node_id AS node_id, "DT_node_data_15".feature AS feature, "DT_node_data_15".threshold AS threshold, "DT_node_data_15".depth AS depth, "DT_node_data_15".parent_id AS parent_id, "DT_node_data_15"."Score" AS "Score" 
FROM "DT_node_lookup_15" LEFT OUTER JOIN "DT_node_data_15" ON "DT_node_lookup_15".node_id_2 = "DT_node_data_15".node_id), 
"XGB_Tree_3_3" AS 
(SELECT "DT_Output_15"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_15"."Score" AS "Score_3" 
FROM "DT_Output_15"), 
"DT_node_lookup_16" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_16" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_16" AS 
(SELECT "DT_node_lookup_16"."KEY" AS "KEY", "DT_node_lookup_16".node_id_2 AS node_id_2, "DT_node_data_16".node_id AS node_id, "DT_node_data_16".feature AS feature, "DT_node_data_16".threshold AS threshold, "DT_node_data_16".depth AS depth, "DT_node_data_16".parent_id AS parent_id, "DT_node_data_16"."Score" AS "Score" 
FROM "DT_node_lookup_16" LEFT OUTER JOIN "DT_node_data_16" ON "DT_node_lookup_16".node_id_2 = "DT_node_data_16".node_id), 
"XGB_Tree_0_4" AS 
(SELECT "DT_Output_16"."KEY" AS "KEY", "DT_Output_16"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_16"), 
"DT_node_lookup_17" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_17" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_17" AS 
(SELECT "DT_node_lookup_17"."KEY" AS "KEY", "DT_node_lookup_17".node_id_2 AS node_id_2, "DT_node_data_17".node_id AS node_id, "DT_node_data_17".feature AS feature, "DT_node_data_17".threshold AS threshold, "DT_node_data_17".depth AS depth, "DT_node_data_17".parent_id AS parent_id, "DT_node_data_17"."Score" AS "Score" 
FROM "DT_node_lookup_17" LEFT OUTER JOIN "DT_node_data_17" ON "DT_node_lookup_17".node_id_2 = "DT_node_data_17".node_id), 
"XGB_Tree_1_4" AS 
(SELECT "DT_Output_17"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_17"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_17"), 
"DT_node_lookup_18" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_18" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_18" AS 
(SELECT "DT_node_lookup_18"."KEY" AS "KEY", "DT_node_lookup_18".node_id_2 AS node_id_2, "DT_node_data_18".node_id AS node_id, "DT_node_data_18".feature AS feature, "DT_node_data_18".threshold AS threshold, "DT_node_data_18".depth AS depth, "DT_node_data_18".parent_id AS parent_id, "DT_node_data_18"."Score" AS "Score" 
FROM "DT_node_lookup_18" LEFT OUTER JOIN "DT_node_data_18" ON "DT_node_lookup_18".node_id_2 = "DT_node_data_18".node_id), 
"XGB_Tree_2_4" AS 
(SELECT "DT_Output_18"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_18"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_18"), 
"DT_node_lookup_19" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_19" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_19" AS 
(SELECT "DT_node_lookup_19"."KEY" AS "KEY", "DT_node_lookup_19".node_id_2 AS node_id_2, "DT_node_data_19".node_id AS node_id, "DT_node_data_19".feature AS feature, "DT_node_data_19".threshold AS threshold, "DT_node_data_19".depth AS depth, "DT_node_data_19".parent_id AS parent_id, "DT_node_data_19"."Score" AS "Score" 
FROM "DT_node_lookup_19" LEFT OUTER JOIN "DT_node_data_19" ON "DT_node_lookup_19".node_id_2 = "DT_node_data_19".node_id), 
"XGB_Tree_3_4" AS 
(SELECT "DT_Output_19"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_19"."Score" AS "Score_3" 
FROM "DT_Output_19"), 
"DT_node_lookup_20" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_20" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_20" AS 
(SELECT "DT_node_lookup_20"."KEY" AS "KEY", "DT_node_lookup_20".node_id_2 AS node_id_2, "DT_node_data_20".node_id AS node_id, "DT_node_data_20".feature AS feature, "DT_node_data_20".threshold AS threshold, "DT_node_data_20".depth AS depth, "DT_node_data_20".parent_id AS parent_id, "DT_node_data_20"."Score" AS "Score" 
FROM "DT_node_lookup_20" LEFT OUTER JOIN "DT_node_data_20" ON "DT_node_lookup_20".node_id_2 = "DT_node_data_20".node_id), 
"XGB_Tree_0_5" AS 
(SELECT "DT_Output_20"."KEY" AS "KEY", "DT_Output_20"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_20"), 
"DT_node_lookup_21" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_21" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_21" AS 
(SELECT "DT_node_lookup_21"."KEY" AS "KEY", "DT_node_lookup_21".node_id_2 AS node_id_2, "DT_node_data_21".node_id AS node_id, "DT_node_data_21".feature AS feature, "DT_node_data_21".threshold AS threshold, "DT_node_data_21".depth AS depth, "DT_node_data_21".parent_id AS parent_id, "DT_node_data_21"."Score" AS "Score" 
FROM "DT_node_lookup_21" LEFT OUTER JOIN "DT_node_data_21" ON "DT_node_lookup_21".node_id_2 = "DT_node_data_21".node_id), 
"XGB_Tree_1_5" AS 
(SELECT "DT_Output_21"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_21"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_21"), 
"DT_node_lookup_22" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_22" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_22" AS 
(SELECT "DT_node_lookup_22"."KEY" AS "KEY", "DT_node_lookup_22".node_id_2 AS node_id_2, "DT_node_data_22".node_id AS node_id, "DT_node_data_22".feature AS feature, "DT_node_data_22".threshold AS threshold, "DT_node_data_22".depth AS depth, "DT_node_data_22".parent_id AS parent_id, "DT_node_data_22"."Score" AS "Score" 
FROM "DT_node_lookup_22" LEFT OUTER JOIN "DT_node_data_22" ON "DT_node_lookup_22".node_id_2 = "DT_node_data_22".node_id), 
"XGB_Tree_2_5" AS 
(SELECT "DT_Output_22"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_22"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_22"), 
"DT_node_lookup_23" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_23" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_23" AS 
(SELECT "DT_node_lookup_23"."KEY" AS "KEY", "DT_node_lookup_23".node_id_2 AS node_id_2, "DT_node_data_23".node_id AS node_id, "DT_node_data_23".feature AS feature, "DT_node_data_23".threshold AS threshold, "DT_node_data_23".depth AS depth, "DT_node_data_23".parent_id AS parent_id, "DT_node_data_23"."Score" AS "Score" 
FROM "DT_node_lookup_23" LEFT OUTER JOIN "DT_node_data_23" ON "DT_node_lookup_23".node_id_2 = "DT_node_data_23".node_id), 
"XGB_Tree_3_5" AS 
(SELECT "DT_Output_23"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_23"."Score" AS "Score_3" 
FROM "DT_Output_23"), 
"DT_node_lookup_24" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_24" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_24" AS 
(SELECT "DT_node_lookup_24"."KEY" AS "KEY", "DT_node_lookup_24".node_id_2 AS node_id_2, "DT_node_data_24".node_id AS node_id, "DT_node_data_24".feature AS feature, "DT_node_data_24".threshold AS threshold, "DT_node_data_24".depth AS depth, "DT_node_data_24".parent_id AS parent_id, "DT_node_data_24"."Score" AS "Score" 
FROM "DT_node_lookup_24" LEFT OUTER JOIN "DT_node_data_24" ON "DT_node_lookup_24".node_id_2 = "DT_node_data_24".node_id), 
"XGB_Tree_0_6" AS 
(SELECT "DT_Output_24"."KEY" AS "KEY", "DT_Output_24"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_24"), 
"DT_node_lookup_25" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_25" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_25" AS 
(SELECT "DT_node_lookup_25"."KEY" AS "KEY", "DT_node_lookup_25".node_id_2 AS node_id_2, "DT_node_data_25".node_id AS node_id, "DT_node_data_25".feature AS feature, "DT_node_data_25".threshold AS threshold, "DT_node_data_25".depth AS depth, "DT_node_data_25".parent_id AS parent_id, "DT_node_data_25"."Score" AS "Score" 
FROM "DT_node_lookup_25" LEFT OUTER JOIN "DT_node_data_25" ON "DT_node_lookup_25".node_id_2 = "DT_node_data_25".node_id), 
"XGB_Tree_1_6" AS 
(SELECT "DT_Output_25"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_25"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_25"), 
"DT_node_lookup_26" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_26" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_26" AS 
(SELECT "DT_node_lookup_26"."KEY" AS "KEY", "DT_node_lookup_26".node_id_2 AS node_id_2, "DT_node_data_26".node_id AS node_id, "DT_node_data_26".feature AS feature, "DT_node_data_26".threshold AS threshold, "DT_node_data_26".depth AS depth, "DT_node_data_26".parent_id AS parent_id, "DT_node_data_26"."Score" AS "Score" 
FROM "DT_node_lookup_26" LEFT OUTER JOIN "DT_node_data_26" ON "DT_node_lookup_26".node_id_2 = "DT_node_data_26".node_id), 
"XGB_Tree_2_6" AS 
(SELECT "DT_Output_26"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_26"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_26"), 
"DT_node_lookup_27" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_27" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_27" AS 
(SELECT "DT_node_lookup_27"."KEY" AS "KEY", "DT_node_lookup_27".node_id_2 AS node_id_2, "DT_node_data_27".node_id AS node_id, "DT_node_data_27".feature AS feature, "DT_node_data_27".threshold AS threshold, "DT_node_data_27".depth AS depth, "DT_node_data_27".parent_id AS parent_id, "DT_node_data_27"."Score" AS "Score" 
FROM "DT_node_lookup_27" LEFT OUTER JOIN "DT_node_data_27" ON "DT_node_lookup_27".node_id_2 = "DT_node_data_27".node_id), 
"XGB_Tree_3_6" AS 
(SELECT "DT_Output_27"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_27"."Score" AS "Score_3" 
FROM "DT_Output_27"), 
"DT_node_lookup_28" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_28" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_28" AS 
(SELECT "DT_node_lookup_28"."KEY" AS "KEY", "DT_node_lookup_28".node_id_2 AS node_id_2, "DT_node_data_28".node_id AS node_id, "DT_node_data_28".feature AS feature, "DT_node_data_28".threshold AS threshold, "DT_node_data_28".depth AS depth, "DT_node_data_28".parent_id AS parent_id, "DT_node_data_28"."Score" AS "Score" 
FROM "DT_node_lookup_28" LEFT OUTER JOIN "DT_node_data_28" ON "DT_node_lookup_28".node_id_2 = "DT_node_data_28".node_id), 
"XGB_Tree_0_7" AS 
(SELECT "DT_Output_28"."KEY" AS "KEY", "DT_Output_28"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_28"), 
"DT_node_lookup_29" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_29" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_29" AS 
(SELECT "DT_node_lookup_29"."KEY" AS "KEY", "DT_node_lookup_29".node_id_2 AS node_id_2, "DT_node_data_29".node_id AS node_id, "DT_node_data_29".feature AS feature, "DT_node_data_29".threshold AS threshold, "DT_node_data_29".depth AS depth, "DT_node_data_29".parent_id AS parent_id, "DT_node_data_29"."Score" AS "Score" 
FROM "DT_node_lookup_29" LEFT OUTER JOIN "DT_node_data_29" ON "DT_node_lookup_29".node_id_2 = "DT_node_data_29".node_id), 
"XGB_Tree_1_7" AS 
(SELECT "DT_Output_29"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_29"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_29"), 
"DT_node_lookup_30" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_30" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_30" AS 
(SELECT "DT_node_lookup_30"."KEY" AS "KEY", "DT_node_lookup_30".node_id_2 AS node_id_2, "DT_node_data_30".node_id AS node_id, "DT_node_data_30".feature AS feature, "DT_node_data_30".threshold AS threshold, "DT_node_data_30".depth AS depth, "DT_node_data_30".parent_id AS parent_id, "DT_node_data_30"."Score" AS "Score" 
FROM "DT_node_lookup_30" LEFT OUTER JOIN "DT_node_data_30" ON "DT_node_lookup_30".node_id_2 = "DT_node_data_30".node_id), 
"XGB_Tree_2_7" AS 
(SELECT "DT_Output_30"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_30"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_30"), 
"DT_node_lookup_31" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_31" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_31" AS 
(SELECT "DT_node_lookup_31"."KEY" AS "KEY", "DT_node_lookup_31".node_id_2 AS node_id_2, "DT_node_data_31".node_id AS node_id, "DT_node_data_31".feature AS feature, "DT_node_data_31".threshold AS threshold, "DT_node_data_31".depth AS depth, "DT_node_data_31".parent_id AS parent_id, "DT_node_data_31"."Score" AS "Score" 
FROM "DT_node_lookup_31" LEFT OUTER JOIN "DT_node_data_31" ON "DT_node_lookup_31".node_id_2 = "DT_node_data_31".node_id), 
"XGB_Tree_3_7" AS 
(SELECT "DT_Output_31"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_31"."Score" AS "Score_3" 
FROM "DT_Output_31"), 
"DT_node_lookup_32" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_32" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_32" AS 
(SELECT "DT_node_lookup_32"."KEY" AS "KEY", "DT_node_lookup_32".node_id_2 AS node_id_2, "DT_node_data_32".node_id AS node_id, "DT_node_data_32".feature AS feature, "DT_node_data_32".threshold AS threshold, "DT_node_data_32".depth AS depth, "DT_node_data_32".parent_id AS parent_id, "DT_node_data_32"."Score" AS "Score" 
FROM "DT_node_lookup_32" LEFT OUTER JOIN "DT_node_data_32" ON "DT_node_lookup_32".node_id_2 = "DT_node_data_32".node_id), 
"XGB_Tree_0_8" AS 
(SELECT "DT_Output_32"."KEY" AS "KEY", "DT_Output_32"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_32"), 
"DT_node_lookup_33" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_33" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_33" AS 
(SELECT "DT_node_lookup_33"."KEY" AS "KEY", "DT_node_lookup_33".node_id_2 AS node_id_2, "DT_node_data_33".node_id AS node_id, "DT_node_data_33".feature AS feature, "DT_node_data_33".threshold AS threshold, "DT_node_data_33".depth AS depth, "DT_node_data_33".parent_id AS parent_id, "DT_node_data_33"."Score" AS "Score" 
FROM "DT_node_lookup_33" LEFT OUTER JOIN "DT_node_data_33" ON "DT_node_lookup_33".node_id_2 = "DT_node_data_33".node_id), 
"XGB_Tree_1_8" AS 
(SELECT "DT_Output_33"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_33"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_33"), 
"DT_node_lookup_34" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_34" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_34" AS 
(SELECT "DT_node_lookup_34"."KEY" AS "KEY", "DT_node_lookup_34".node_id_2 AS node_id_2, "DT_node_data_34".node_id AS node_id, "DT_node_data_34".feature AS feature, "DT_node_data_34".threshold AS threshold, "DT_node_data_34".depth AS depth, "DT_node_data_34".parent_id AS parent_id, "DT_node_data_34"."Score" AS "Score" 
FROM "DT_node_lookup_34" LEFT OUTER JOIN "DT_node_data_34" ON "DT_node_lookup_34".node_id_2 = "DT_node_data_34".node_id), 
"XGB_Tree_2_8" AS 
(SELECT "DT_Output_34"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_34"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_34"), 
"DT_node_lookup_35" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_35" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_35" AS 
(SELECT "DT_node_lookup_35"."KEY" AS "KEY", "DT_node_lookup_35".node_id_2 AS node_id_2, "DT_node_data_35".node_id AS node_id, "DT_node_data_35".feature AS feature, "DT_node_data_35".threshold AS threshold, "DT_node_data_35".depth AS depth, "DT_node_data_35".parent_id AS parent_id, "DT_node_data_35"."Score" AS "Score" 
FROM "DT_node_lookup_35" LEFT OUTER JOIN "DT_node_data_35" ON "DT_node_lookup_35".node_id_2 = "DT_node_data_35".node_id), 
"XGB_Tree_3_8" AS 
(SELECT "DT_Output_35"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_35"."Score" AS "Score_3" 
FROM "DT_Output_35"), 
"DT_node_lookup_36" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_36" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_36" AS 
(SELECT "DT_node_lookup_36"."KEY" AS "KEY", "DT_node_lookup_36".node_id_2 AS node_id_2, "DT_node_data_36".node_id AS node_id, "DT_node_data_36".feature AS feature, "DT_node_data_36".threshold AS threshold, "DT_node_data_36".depth AS depth, "DT_node_data_36".parent_id AS parent_id, "DT_node_data_36"."Score" AS "Score" 
FROM "DT_node_lookup_36" LEFT OUTER JOIN "DT_node_data_36" ON "DT_node_lookup_36".node_id_2 = "DT_node_data_36".node_id), 
"XGB_Tree_0_9" AS 
(SELECT "DT_Output_36"."KEY" AS "KEY", "DT_Output_36"."Score" AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_36"), 
"DT_node_lookup_37" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_37" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_37" AS 
(SELECT "DT_node_lookup_37"."KEY" AS "KEY", "DT_node_lookup_37".node_id_2 AS node_id_2, "DT_node_data_37".node_id AS node_id, "DT_node_data_37".feature AS feature, "DT_node_data_37".threshold AS threshold, "DT_node_data_37".depth AS depth, "DT_node_data_37".parent_id AS parent_id, "DT_node_data_37"."Score" AS "Score" 
FROM "DT_node_lookup_37" LEFT OUTER JOIN "DT_node_data_37" ON "DT_node_lookup_37".node_id_2 = "DT_node_data_37".node_id), 
"XGB_Tree_1_9" AS 
(SELECT "DT_Output_37"."KEY" AS "KEY", 0.0 AS "Score_0", "DT_Output_37"."Score" AS "Score_1", 0.0 AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_37"), 
"DT_node_lookup_38" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_38" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_38" AS 
(SELECT "DT_node_lookup_38"."KEY" AS "KEY", "DT_node_lookup_38".node_id_2 AS node_id_2, "DT_node_data_38".node_id AS node_id, "DT_node_data_38".feature AS feature, "DT_node_data_38".threshold AS threshold, "DT_node_data_38".depth AS depth, "DT_node_data_38".parent_id AS parent_id, "DT_node_data_38"."Score" AS "Score" 
FROM "DT_node_lookup_38" LEFT OUTER JOIN "DT_node_data_38" ON "DT_node_lookup_38".node_id_2 = "DT_node_data_38".node_id), 
"XGB_Tree_2_9" AS 
(SELECT "DT_Output_38"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", "DT_Output_38"."Score" AS "Score_2", 0.0 AS "Score_3" 
FROM "DT_Output_38"), 
"DT_node_lookup_39" AS 
(SELECT "ADS_sca_2_OUT"."KEY" AS "KEY", 0 AS node_id_2 
FROM "ADS_sca_2_OUT"), 
"DT_node_data_39" AS 
(SELECT "Values".node_id AS node_id, "Values".feature AS feature, "Values".threshold AS threshold, "Values".depth AS depth, "Values".parent_id AS parent_id, "Values"."Score" AS "Score" 
FROM (SELECT 0 AS node_id, CAST(NULL AS VARCHAR(256)) AS feature, CAST(NULL AS FLOAT) AS threshold, 0 AS depth, CAST(NULL AS INTEGER) AS parent_id, 0 AS "Score") AS "Values"), 
"DT_Output_39" AS 
(SELECT "DT_node_lookup_39"."KEY" AS "KEY", "DT_node_lookup_39".node_id_2 AS node_id_2, "DT_node_data_39".node_id AS node_id, "DT_node_data_39".feature AS feature, "DT_node_data_39".threshold AS threshold, "DT_node_data_39".depth AS depth, "DT_node_data_39".parent_id AS parent_id, "DT_node_data_39"."Score" AS "Score" 
FROM "DT_node_lookup_39" LEFT OUTER JOIN "DT_node_data_39" ON "DT_node_lookup_39".node_id_2 = "DT_node_data_39".node_id), 
"XGB_Tree_3_9" AS 
(SELECT "DT_Output_39"."KEY" AS "KEY", 0.0 AS "Score_0", 0.0 AS "Score_1", 0.0 AS "Score_2", "DT_Output_39"."Score" AS "Score_3" 
FROM "DT_Output_39"), 
"Score_Union_CTE" AS 
(SELECT ensemble_score_union."KEY" AS "KEY", ensemble_score_union."Score_0" AS "Score_0", ensemble_score_union."Score_1" AS "Score_1", ensemble_score_union."Score_2" AS "Score_2", ensemble_score_union."Score_3" AS "Score_3" 
FROM (SELECT "XGB_Tree_0_0"."KEY" AS "KEY", "XGB_Tree_0_0"."Score_0" AS "Score_0", "XGB_Tree_0_0"."Score_1" AS "Score_1", "XGB_Tree_0_0"."Score_2" AS "Score_2", "XGB_Tree_0_0"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_0" UNION ALL SELECT "XGB_Tree_1_0"."KEY" AS "KEY", "XGB_Tree_1_0"."Score_0" AS "Score_0", "XGB_Tree_1_0"."Score_1" AS "Score_1", "XGB_Tree_1_0"."Score_2" AS "Score_2", "XGB_Tree_1_0"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_0" UNION ALL SELECT "XGB_Tree_2_0"."KEY" AS "KEY", "XGB_Tree_2_0"."Score_0" AS "Score_0", "XGB_Tree_2_0"."Score_1" AS "Score_1", "XGB_Tree_2_0"."Score_2" AS "Score_2", "XGB_Tree_2_0"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_0" UNION ALL SELECT "XGB_Tree_3_0"."KEY" AS "KEY", "XGB_Tree_3_0"."Score_0" AS "Score_0", "XGB_Tree_3_0"."Score_1" AS "Score_1", "XGB_Tree_3_0"."Score_2" AS "Score_2", "XGB_Tree_3_0"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_0" UNION ALL SELECT "XGB_Tree_0_1"."KEY" AS "KEY", "XGB_Tree_0_1"."Score_0" AS "Score_0", "XGB_Tree_0_1"."Score_1" AS "Score_1", "XGB_Tree_0_1"."Score_2" AS "Score_2", "XGB_Tree_0_1"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_1" UNION ALL SELECT "XGB_Tree_1_1"."KEY" AS "KEY", "XGB_Tree_1_1"."Score_0" AS "Score_0", "XGB_Tree_1_1"."Score_1" AS "Score_1", "XGB_Tree_1_1"."Score_2" AS "Score_2", "XGB_Tree_1_1"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_1" UNION ALL SELECT "XGB_Tree_2_1"."KEY" AS "KEY", "XGB_Tree_2_1"."Score_0" AS "Score_0", "XGB_Tree_2_1"."Score_1" AS "Score_1", "XGB_Tree_2_1"."Score_2" AS "Score_2", "XGB_Tree_2_1"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_1" UNION ALL SELECT "XGB_Tree_3_1"."KEY" AS "KEY", "XGB_Tree_3_1"."Score_0" AS "Score_0", "XGB_Tree_3_1"."Score_1" AS "Score_1", "XGB_Tree_3_1"."Score_2" AS "Score_2", "XGB_Tree_3_1"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_1" UNION ALL SELECT "XGB_Tree_0_2"."KEY" AS "KEY", "XGB_Tree_0_2"."Score_0" AS "Score_0", "XGB_Tree_0_2"."Score_1" AS "Score_1", "XGB_Tree_0_2"."Score_2" AS "Score_2", "XGB_Tree_0_2"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_2" UNION ALL SELECT "XGB_Tree_1_2"."KEY" AS "KEY", "XGB_Tree_1_2"."Score_0" AS "Score_0", "XGB_Tree_1_2"."Score_1" AS "Score_1", "XGB_Tree_1_2"."Score_2" AS "Score_2", "XGB_Tree_1_2"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_2" UNION ALL SELECT "XGB_Tree_2_2"."KEY" AS "KEY", "XGB_Tree_2_2"."Score_0" AS "Score_0", "XGB_Tree_2_2"."Score_1" AS "Score_1", "XGB_Tree_2_2"."Score_2" AS "Score_2", "XGB_Tree_2_2"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_2" UNION ALL SELECT "XGB_Tree_3_2"."KEY" AS "KEY", "XGB_Tree_3_2"."Score_0" AS "Score_0", "XGB_Tree_3_2"."Score_1" AS "Score_1", "XGB_Tree_3_2"."Score_2" AS "Score_2", "XGB_Tree_3_2"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_2" UNION ALL SELECT "XGB_Tree_0_3"."KEY" AS "KEY", "XGB_Tree_0_3"."Score_0" AS "Score_0", "XGB_Tree_0_3"."Score_1" AS "Score_1", "XGB_Tree_0_3"."Score_2" AS "Score_2", "XGB_Tree_0_3"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_3" UNION ALL SELECT "XGB_Tree_1_3"."KEY" AS "KEY", "XGB_Tree_1_3"."Score_0" AS "Score_0", "XGB_Tree_1_3"."Score_1" AS "Score_1", "XGB_Tree_1_3"."Score_2" AS "Score_2", "XGB_Tree_1_3"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_3" UNION ALL SELECT "XGB_Tree_2_3"."KEY" AS "KEY", "XGB_Tree_2_3"."Score_0" AS "Score_0", "XGB_Tree_2_3"."Score_1" AS "Score_1", "XGB_Tree_2_3"."Score_2" AS "Score_2", "XGB_Tree_2_3"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_3" UNION ALL SELECT "XGB_Tree_3_3"."KEY" AS "KEY", "XGB_Tree_3_3"."Score_0" AS "Score_0", "XGB_Tree_3_3"."Score_1" AS "Score_1", "XGB_Tree_3_3"."Score_2" AS "Score_2", "XGB_Tree_3_3"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_3" UNION ALL SELECT "XGB_Tree_0_4"."KEY" AS "KEY", "XGB_Tree_0_4"."Score_0" AS "Score_0", "XGB_Tree_0_4"."Score_1" AS "Score_1", "XGB_Tree_0_4"."Score_2" AS "Score_2", "XGB_Tree_0_4"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_4" UNION ALL SELECT "XGB_Tree_1_4"."KEY" AS "KEY", "XGB_Tree_1_4"."Score_0" AS "Score_0", "XGB_Tree_1_4"."Score_1" AS "Score_1", "XGB_Tree_1_4"."Score_2" AS "Score_2", "XGB_Tree_1_4"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_4" UNION ALL SELECT "XGB_Tree_2_4"."KEY" AS "KEY", "XGB_Tree_2_4"."Score_0" AS "Score_0", "XGB_Tree_2_4"."Score_1" AS "Score_1", "XGB_Tree_2_4"."Score_2" AS "Score_2", "XGB_Tree_2_4"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_4" UNION ALL SELECT "XGB_Tree_3_4"."KEY" AS "KEY", "XGB_Tree_3_4"."Score_0" AS "Score_0", "XGB_Tree_3_4"."Score_1" AS "Score_1", "XGB_Tree_3_4"."Score_2" AS "Score_2", "XGB_Tree_3_4"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_4" UNION ALL SELECT "XGB_Tree_0_5"."KEY" AS "KEY", "XGB_Tree_0_5"."Score_0" AS "Score_0", "XGB_Tree_0_5"."Score_1" AS "Score_1", "XGB_Tree_0_5"."Score_2" AS "Score_2", "XGB_Tree_0_5"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_5" UNION ALL SELECT "XGB_Tree_1_5"."KEY" AS "KEY", "XGB_Tree_1_5"."Score_0" AS "Score_0", "XGB_Tree_1_5"."Score_1" AS "Score_1", "XGB_Tree_1_5"."Score_2" AS "Score_2", "XGB_Tree_1_5"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_5" UNION ALL SELECT "XGB_Tree_2_5"."KEY" AS "KEY", "XGB_Tree_2_5"."Score_0" AS "Score_0", "XGB_Tree_2_5"."Score_1" AS "Score_1", "XGB_Tree_2_5"."Score_2" AS "Score_2", "XGB_Tree_2_5"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_5" UNION ALL SELECT "XGB_Tree_3_5"."KEY" AS "KEY", "XGB_Tree_3_5"."Score_0" AS "Score_0", "XGB_Tree_3_5"."Score_1" AS "Score_1", "XGB_Tree_3_5"."Score_2" AS "Score_2", "XGB_Tree_3_5"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_5" UNION ALL SELECT "XGB_Tree_0_6"."KEY" AS "KEY", "XGB_Tree_0_6"."Score_0" AS "Score_0", "XGB_Tree_0_6"."Score_1" AS "Score_1", "XGB_Tree_0_6"."Score_2" AS "Score_2", "XGB_Tree_0_6"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_6" UNION ALL SELECT "XGB_Tree_1_6"."KEY" AS "KEY", "XGB_Tree_1_6"."Score_0" AS "Score_0", "XGB_Tree_1_6"."Score_1" AS "Score_1", "XGB_Tree_1_6"."Score_2" AS "Score_2", "XGB_Tree_1_6"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_6" UNION ALL SELECT "XGB_Tree_2_6"."KEY" AS "KEY", "XGB_Tree_2_6"."Score_0" AS "Score_0", "XGB_Tree_2_6"."Score_1" AS "Score_1", "XGB_Tree_2_6"."Score_2" AS "Score_2", "XGB_Tree_2_6"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_6" UNION ALL SELECT "XGB_Tree_3_6"."KEY" AS "KEY", "XGB_Tree_3_6"."Score_0" AS "Score_0", "XGB_Tree_3_6"."Score_1" AS "Score_1", "XGB_Tree_3_6"."Score_2" AS "Score_2", "XGB_Tree_3_6"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_6" UNION ALL SELECT "XGB_Tree_0_7"."KEY" AS "KEY", "XGB_Tree_0_7"."Score_0" AS "Score_0", "XGB_Tree_0_7"."Score_1" AS "Score_1", "XGB_Tree_0_7"."Score_2" AS "Score_2", "XGB_Tree_0_7"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_7" UNION ALL SELECT "XGB_Tree_1_7"."KEY" AS "KEY", "XGB_Tree_1_7"."Score_0" AS "Score_0", "XGB_Tree_1_7"."Score_1" AS "Score_1", "XGB_Tree_1_7"."Score_2" AS "Score_2", "XGB_Tree_1_7"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_7" UNION ALL SELECT "XGB_Tree_2_7"."KEY" AS "KEY", "XGB_Tree_2_7"."Score_0" AS "Score_0", "XGB_Tree_2_7"."Score_1" AS "Score_1", "XGB_Tree_2_7"."Score_2" AS "Score_2", "XGB_Tree_2_7"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_7" UNION ALL SELECT "XGB_Tree_3_7"."KEY" AS "KEY", "XGB_Tree_3_7"."Score_0" AS "Score_0", "XGB_Tree_3_7"."Score_1" AS "Score_1", "XGB_Tree_3_7"."Score_2" AS "Score_2", "XGB_Tree_3_7"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_7" UNION ALL SELECT "XGB_Tree_0_8"."KEY" AS "KEY", "XGB_Tree_0_8"."Score_0" AS "Score_0", "XGB_Tree_0_8"."Score_1" AS "Score_1", "XGB_Tree_0_8"."Score_2" AS "Score_2", "XGB_Tree_0_8"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_8" UNION ALL SELECT "XGB_Tree_1_8"."KEY" AS "KEY", "XGB_Tree_1_8"."Score_0" AS "Score_0", "XGB_Tree_1_8"."Score_1" AS "Score_1", "XGB_Tree_1_8"."Score_2" AS "Score_2", "XGB_Tree_1_8"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_8" UNION ALL SELECT "XGB_Tree_2_8"."KEY" AS "KEY", "XGB_Tree_2_8"."Score_0" AS "Score_0", "XGB_Tree_2_8"."Score_1" AS "Score_1", "XGB_Tree_2_8"."Score_2" AS "Score_2", "XGB_Tree_2_8"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_8" UNION ALL SELECT "XGB_Tree_3_8"."KEY" AS "KEY", "XGB_Tree_3_8"."Score_0" AS "Score_0", "XGB_Tree_3_8"."Score_1" AS "Score_1", "XGB_Tree_3_8"."Score_2" AS "Score_2", "XGB_Tree_3_8"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_8" UNION ALL SELECT "XGB_Tree_0_9"."KEY" AS "KEY", "XGB_Tree_0_9"."Score_0" AS "Score_0", "XGB_Tree_0_9"."Score_1" AS "Score_1", "XGB_Tree_0_9"."Score_2" AS "Score_2", "XGB_Tree_0_9"."Score_3" AS "Score_3" 
FROM "XGB_Tree_0_9" UNION ALL SELECT "XGB_Tree_1_9"."KEY" AS "KEY", "XGB_Tree_1_9"."Score_0" AS "Score_0", "XGB_Tree_1_9"."Score_1" AS "Score_1", "XGB_Tree_1_9"."Score_2" AS "Score_2", "XGB_Tree_1_9"."Score_3" AS "Score_3" 
FROM "XGB_Tree_1_9" UNION ALL SELECT "XGB_Tree_2_9"."KEY" AS "KEY", "XGB_Tree_2_9"."Score_0" AS "Score_0", "XGB_Tree_2_9"."Score_1" AS "Score_1", "XGB_Tree_2_9"."Score_2" AS "Score_2", "XGB_Tree_2_9"."Score_3" AS "Score_3" 
FROM "XGB_Tree_2_9" UNION ALL SELECT "XGB_Tree_3_9"."KEY" AS "KEY", "XGB_Tree_3_9"."Score_0" AS "Score_0", "XGB_Tree_3_9"."Score_1" AS "Score_1", "XGB_Tree_3_9"."Score_2" AS "Score_2", "XGB_Tree_3_9"."Score_3" AS "Score_3" 
FROM "XGB_Tree_3_9") AS ensemble_score_union), 
"XGB_Sum_Scores" AS 
(SELECT "T"."KEY" AS "KEY", "T"."Score_0" AS "Score_0", "T"."Score_1" AS "Score_1", "T"."Score_2" AS "Score_2", "T"."Score_3" AS "Score_3" 
FROM (SELECT "Score_Union_CTE"."KEY" AS "KEY", sum("Score_Union_CTE"."Score_0") AS "Score_0", sum("Score_Union_CTE"."Score_1") AS "Score_1", sum("Score_Union_CTE"."Score_2") AS "Score_2", sum("Score_Union_CTE"."Score_3") AS "Score_3" 
FROM "Score_Union_CTE" GROUP BY "Score_Union_CTE"."KEY") AS "T"), 
orig_cte AS 
(SELECT "XGB_Sum_Scores"."KEY" AS "KEY", "XGB_Sum_Scores"."Score_0" AS "Score_0", "XGB_Sum_Scores"."Score_1" AS "Score_1", "XGB_Sum_Scores"."Score_2" AS "Score_2", "XGB_Sum_Scores"."Score_3" AS "Score_3", CAST(NULL AS FLOAT) AS "Proba_0", CAST(NULL AS FLOAT) AS "Proba_1", CAST(NULL AS FLOAT) AS "Proba_2", CAST(NULL AS FLOAT) AS "Proba_3", CAST(NULL AS FLOAT) AS "LogProba_0", CAST(NULL AS FLOAT) AS "LogProba_1", CAST(NULL AS FLOAT) AS "LogProba_2", CAST(NULL AS FLOAT) AS "LogProba_3", CAST(NULL AS INTEGER) AS "Decision" 
FROM "XGB_Sum_Scores"), 
score_class_union AS 
(SELECT scu."KEY_u" AS "KEY_u", scu.class AS class, scu."LogProba" AS "LogProba", scu."Proba" AS "Proba", scu."Score" AS "Score" 
FROM (SELECT orig_cte."KEY" AS "KEY_u", 0 AS class, orig_cte."LogProba_0" AS "LogProba", orig_cte."Proba_0" AS "Proba", orig_cte."Score_0" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 1 AS class, orig_cte."LogProba_1" AS "LogProba", orig_cte."Proba_1" AS "Proba", orig_cte."Score_1" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 2 AS class, orig_cte."LogProba_2" AS "LogProba", orig_cte."Proba_2" AS "Proba", orig_cte."Score_2" AS "Score" 
FROM orig_cte UNION ALL SELECT orig_cte."KEY" AS "KEY_u", 3 AS class, orig_cte."LogProba_3" AS "LogProba", orig_cte."Proba_3" AS "Proba", orig_cte."Score_3" AS "Score" 
FROM orig_cte) AS scu), 
score_max AS 
(SELECT orig_cte."KEY" AS "KEY", orig_cte."Score_0" AS "Score_0", orig_cte."Score_1" AS "Score_1", orig_cte."Score_2" AS "Score_2", orig_cte."Score_3" AS "Score_3", orig_cte."Proba_0" AS "Proba_0", orig_cte."Proba_1" AS "Proba_1", orig_cte."Proba_2" AS "Proba_2", orig_cte."Proba_3" AS "Proba_3", orig_cte."LogProba_0" AS "LogProba_0", orig_cte."LogProba_1" AS "LogProba_1", orig_cte."LogProba_2" AS "LogProba_2", orig_cte."LogProba_3" AS "LogProba_3", orig_cte."Decision" AS "Decision", max_select."KEY_m" AS "KEY_m", max_select."max_Score" AS "max_Score" 
FROM orig_cte LEFT OUTER JOIN (SELECT score_class_union."KEY_u" AS "KEY_m", max(score_class_union."Score") AS "max_Score" 
FROM score_class_union GROUP BY score_class_union."KEY_u") AS max_select ON orig_cte."KEY" = max_select."KEY_m"), 
score_soft_max_deltas AS 
(SELECT score_max."KEY" AS "KEY", score_max."Score_0" AS "Score_0", score_max."Score_1" AS "Score_1", score_max."Score_2" AS "Score_2", score_max."Score_3" AS "Score_3", score_max."Proba_0" AS "Proba_0", score_max."Proba_1" AS "Proba_1", score_max."Proba_2" AS "Proba_2", score_max."Proba_3" AS "Proba_3", score_max."LogProba_0" AS "LogProba_0", score_max."LogProba_1" AS "LogProba_1", score_max."LogProba_2" AS "LogProba_2", score_max."LogProba_3" AS "LogProba_3", score_max."Decision" AS "Decision", score_max."KEY_m" AS "KEY_m", score_max."max_Score" AS "max_Score", exp(CASE WHEN (score_max."Score_0" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_0" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_0", exp(CASE WHEN (score_max."Score_1" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_1" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_1", exp(CASE WHEN (score_max."Score_2" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_2" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_2", exp(CASE WHEN (score_max."Score_3" - score_max."max_Score" >= -709.782712893) THEN score_max."Score_3" - score_max."max_Score" ELSE -709.782712893 END) AS "exp_delta_Score_3" 
FROM score_max), 
score_class_union_soft AS 
(SELECT soft_scu."KEY" AS "KEY", soft_scu.class AS class, soft_scu."exp_delta_Score" AS "exp_delta_Score" 
FROM (SELECT score_soft_max_deltas."KEY" AS "KEY", 0 AS class, score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 1 AS class, score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 2 AS class, score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score" 
FROM score_soft_max_deltas UNION ALL SELECT score_soft_max_deltas."KEY" AS "KEY", 3 AS class, score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score" 
FROM score_soft_max_deltas) AS soft_scu), 
score_soft_max AS 
(SELECT score_soft_max_deltas."KEY" AS "KEY", score_soft_max_deltas."Score_0" AS "Score_0", score_soft_max_deltas."Score_1" AS "Score_1", score_soft_max_deltas."Score_2" AS "Score_2", score_soft_max_deltas."Score_3" AS "Score_3", score_soft_max_deltas."Proba_0" AS "Proba_0", score_soft_max_deltas."Proba_1" AS "Proba_1", score_soft_max_deltas."Proba_2" AS "Proba_2", score_soft_max_deltas."Proba_3" AS "Proba_3", score_soft_max_deltas."LogProba_0" AS "LogProba_0", score_soft_max_deltas."LogProba_1" AS "LogProba_1", score_soft_max_deltas."LogProba_2" AS "LogProba_2", score_soft_max_deltas."LogProba_3" AS "LogProba_3", score_soft_max_deltas."Decision" AS "Decision", score_soft_max_deltas."KEY_m" AS "KEY_m", score_soft_max_deltas."max_Score" AS "max_Score", score_soft_max_deltas."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max_deltas."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max_deltas."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max_deltas."exp_delta_Score_3" AS "exp_delta_Score_3", sum_exp_t."KEY_sum" AS "KEY_sum", sum_exp_t."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_soft_max_deltas LEFT OUTER JOIN (SELECT score_class_union_soft."KEY" AS "KEY_sum", sum(score_class_union_soft."exp_delta_Score") AS "sum_ExpDeltaScore" 
FROM score_class_union_soft GROUP BY score_class_union_soft."KEY") AS sum_exp_t ON score_soft_max_deltas."KEY" = sum_exp_t."KEY_sum"), 
union_with_max AS 
(SELECT score_class_union."KEY_u" AS "KEY_u", score_class_union.class AS class, score_class_union."LogProba" AS "LogProba", score_class_union."Proba" AS "Proba", score_class_union."Score" AS "Score", score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore" 
FROM score_class_union LEFT OUTER JOIN score_soft_max ON score_class_union."KEY_u" = score_soft_max."KEY"), 
arg_max_cte AS 
(SELECT score_soft_max."KEY" AS "KEY", score_soft_max."Score_0" AS "Score_0", score_soft_max."Score_1" AS "Score_1", score_soft_max."Score_2" AS "Score_2", score_soft_max."Score_3" AS "Score_3", score_soft_max."Proba_0" AS "Proba_0", score_soft_max."Proba_1" AS "Proba_1", score_soft_max."Proba_2" AS "Proba_2", score_soft_max."Proba_3" AS "Proba_3", score_soft_max."LogProba_0" AS "LogProba_0", score_soft_max."LogProba_1" AS "LogProba_1", score_soft_max."LogProba_2" AS "LogProba_2", score_soft_max."LogProba_3" AS "LogProba_3", score_soft_max."Decision" AS "Decision", score_soft_max."KEY_m" AS "KEY_m", score_soft_max."max_Score" AS "max_Score", score_soft_max."exp_delta_Score_0" AS "exp_delta_Score_0", score_soft_max."exp_delta_Score_1" AS "exp_delta_Score_1", score_soft_max."exp_delta_Score_2" AS "exp_delta_Score_2", score_soft_max."exp_delta_Score_3" AS "exp_delta_Score_3", score_soft_max."KEY_sum" AS "KEY_sum", score_soft_max."sum_ExpDeltaScore" AS "sum_ExpDeltaScore", "arg_max_t_Score"."KEY_Score" AS "KEY_Score", "arg_max_t_Score"."arg_max_Score" AS "arg_max_Score", soft_max_comp."KEY_softmax" AS "KEY_softmax", soft_max_comp."SoftProba_0" AS "SoftProba_0", soft_max_comp."SoftProba_1" AS "SoftProba_1", soft_max_comp."SoftProba_2" AS "SoftProba_2", soft_max_comp."SoftProba_3" AS "SoftProba_3" 
FROM score_soft_max LEFT OUTER JOIN (SELECT union_with_max."KEY" AS "KEY_Score", min(union_with_max.class) AS "arg_max_Score" 
FROM union_with_max 
WHERE union_with_max."max_Score" <= union_with_max."Score" GROUP BY union_with_max."KEY") AS "arg_max_t_Score" ON score_soft_max."KEY" = "arg_max_t_Score"."KEY_Score" LEFT OUTER JOIN (SELECT score_soft_max."KEY" AS "KEY_softmax", score_soft_max."exp_delta_Score_0" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_0", score_soft_max."exp_delta_Score_1" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_1", score_soft_max."exp_delta_Score_2" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_2", score_soft_max."exp_delta_Score_3" / score_soft_max."sum_ExpDeltaScore" AS "SoftProba_3" 
FROM score_soft_max) AS soft_max_comp ON soft_max_comp."KEY_softmax" = "arg_max_t_Score"."KEY_Score")
 SELECT arg_max_cte."KEY" AS "KEY", CAST(NULL AS FLOAT) AS "Score_0", CAST(NULL AS FLOAT) AS "Score_1", CAST(NULL AS FLOAT) AS "Score_2", CAST(NULL AS FLOAT) AS "Score_3", arg_max_cte."SoftProba_0" AS "Proba_0", arg_max_cte."SoftProba_1" AS "Proba_1", arg_max_cte."SoftProba_2" AS "Proba_2", arg_max_cte."SoftProba_3" AS "Proba_3", CASE WHEN (arg_max_cte."SoftProba_0" IS NULL OR arg_max_cte."SoftProba_0" > 0.0) THEN ln(arg_max_cte."SoftProba_0") ELSE -1.79769313486231e+308 END AS "LogProba_0", CASE WHEN (arg_max_cte."SoftProba_1" IS NULL OR arg_max_cte."SoftProba_1" > 0.0) THEN ln(arg_max_cte."SoftProba_1") ELSE -1.79769313486231e+308 END AS "LogProba_1", CASE WHEN (arg_max_cte."SoftProba_2" IS NULL OR arg_max_cte."SoftProba_2" > 0.0) THEN ln(arg_max_cte."SoftProba_2") ELSE -1.79769313486231e+308 END AS "LogProba_2", CASE WHEN (arg_max_cte."SoftProba_3" IS NULL OR arg_max_cte."SoftProba_3" > 0.0) THEN ln(arg_max_cte."SoftProba_3") ELSE -1.79769313486231e+308 END AS "LogProba_3", CAST(arg_max_cte."arg_max_Score" AS BIGINT) AS "Decision" 
FROM arg_max_cte